digraph {
9 [style = filled, label = "workerTask.stop()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "workerTask.stop()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TaskStatus.Listener statusListener = EasyMock.createMock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "workerTask.run()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "standardStartup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,).withArgs(taskId,statusListener).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "workerTask.execute()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EasyMock.expectLastCall()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "workerTask.awaitStop(1000L)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "EasyMock.expectLastCall()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "stopBeforeStarting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor().withArgs(new ConnectorTaskId(\"foo\",0)).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "workerTask.close()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verify(workerTask)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "replay(workerTask)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "workerTask.run()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "stopBeforeStarting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(workerTask)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expectLastCall()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->3 [style = bold, label=""];
13->0 [style = bold, label=""];
12->15 [style = bold, label=""];
4->5 [style = bold, label=""];
14->13 [style = bold, label=""];
1->18 [style = bold, label=""];
5->9 [style = bold, label=""];
7->20 [style = bold, label=""];
5->10 [style = bold, label=""];
0->11 [style = bold, label=""];
13->4 [style = solid, label="workerTask"];
11->2 [style = bold, label=""];
8->3 [style = bold, label=""];
3->6 [style = bold, label=""];
10->12 [style = bold, label=""];
20->21 [style = bold, label=""];
16->14 [style = bold, label=""];
7->0 [style = bold, label=""];
2->1 [style = bold, label=""];
1->4 [style = bold, label=""];
13->15 [style = solid, label="workerTask"];
6->7 [style = bold, label=""];
21->0 [style = bold, label=""];
17->16 [style = bold, label=""];
3->2 [style = solid, label="workerTask"];
3->10 [style = solid, label="workerTask"];
18->4 [style = bold, label=""];
9->10 [style = bold, label=""];
}
