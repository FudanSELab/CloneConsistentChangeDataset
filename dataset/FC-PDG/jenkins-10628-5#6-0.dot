digraph {
10 [style = filled, label = "j.jenkins.setAuthorizationStrategy(a)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JenkinsRule.WebClient webClient = j.createWebClient()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(\"Response mentions workspace permission\",page.getWebResponse().getContentAsString(),containsString(\"Failed permission check: anonymous is missing the Job/Workspace permission\"))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "j.jenkins.setSecurityRealm(j.createDummySecurityRealm())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"page is found\",200,page.getWebResponse().getStatusCode())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "webClient.setThrowExceptionOnFailingStatusCode(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "a.grant(Jenkins.READ).everywhere().toEveryone()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(\"Response mentions workspace permission\",page.getWebResponse().getContentAsString(),containsString(\"Failed permission check: Please login to access job\"))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "j.buildAndAssertSuccess(project)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "a = new MockAuthorizationStrategy()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(\"page is served by resource domain\",anonUrl.toString().contains(\"/static-files/\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "a.grant(Jenkins.READ).everywhere().toEveryone()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "missingPermissionsCause403['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "page = webClient.getPage(anonUrl)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(\"page is not found\",403,page.getWebResponse().getStatusCode())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "page = webClient.getPage(anonUrl)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "project.getBuildersList().add(new CreateFileBuilder(\"file.html\",\"<html><body>the content</body></html>\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "project.save()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "missingPermissionsCause403['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "testUrlEncoding['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(\"page content is as expected\",page.getWebResponse().getContentAsString().contains(\"the content\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "URL anonUrl = page.getUrl()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "HtmlPage page = webClient.getPage(project,\"ws/This%20has%20spaces%20and%20is%20100%25%20evil.html\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "MockAuthorizationStrategy a = new MockAuthorizationStrategy()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "a.grant(Item.READ).onItems(project).toEveryone()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "a.grant(Item.READ,Item.WORKSPACE).onItems(project).toEveryone()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertThat(\"Response mentions workspace permission\",page.getWebResponse().getContentAsString(),containsString(\"Failed permission check: anonymous is missing the Job/Workspace permission\"))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "a.grant(Jenkins.READ).everywhere().toEveryone()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertThat(\"Response mentions workspace permission\",page.getWebResponse().getContentAsString(),containsString(\"Failed permission check: Please login to access job\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "URL url = page.getUrl()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "HtmlPage page = webClient.getPage(project,\"ws/file.html\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(\"page is not found\",403,page.getWebResponse().getStatusCode())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "a = new MockAuthorizationStrategy()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "webClient.setRedirectEnabled(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertTrue(\"page is served by resource domain\",url.toString().contains(\"/static-files/\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "project.getBuildersList().add(new CreateFileBuilder(\"This has spaces and is 100% evil.html\",\"<html><body>the content</body></html>\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "j.jenkins.setAuthorizationStrategy(a)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "j.jenkins.setAuthorizationStrategy(a)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "a.grant(Item.DISCOVER).onItems(project).toEveryone()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
14->3 [style = bold, label=""];
5->29 [style = bold, label=""];
4->9 [style = bold, label=""];
23->16 [style = bold, label=""];
22->33 [style = bold, label=""];
24->19 [style = bold, label=""];
0->26 [style = bold, label=""];
16->32 [style = dashed, label="0"];
12->37 [style = dashed, label="0"];
27->0 [style = bold, label=""];
18->19 [style = solid, label="project"];
2->35 [style = dashed, label="0"];
10->19 [style = bold, label=""];
18->27 [style = solid, label="project"];
31->9 [style = solid, label="anonUrl"];
34->18 [style = bold, label=""];
12->20 [style = bold, label=""];
23->32 [style = bold, label=""];
31->11 [style = solid, label="anonUrl"];
18->36 [style = solid, label="project"];
1->18 [style = bold, label=""];
33->5 [style = bold, label=""];
18->2 [style = bold, label=""];
28->10 [style = solid, label="a"];
19->6 [style = bold, label=""];
27->36 [style = dashed, label="0"];
31->12 [style = bold, label=""];
22->7 [style = bold, label=""];
28->14 [style = bold, label=""];
21->28 [style = bold, label=""];
35->24 [style = bold, label=""];
39->18 [style = bold, label=""];
9->23 [style = bold, label=""];
26->38 [style = bold, label=""];
3->10 [style = bold, label=""];
26->31 [style = bold, label=""];
7->5 [style = bold, label=""];
36->0 [style = bold, label=""];
31->38 [style = dashed, label="0"];
24->21 [style = bold, label=""];
38->37 [style = bold, label=""];
25->11 [style = bold, label=""];
17->15 [style = bold, label=""];
11->22 [style = bold, label=""];
18->35 [style = bold, label=""];
7->33 [style = dashed, label="0"];
2->24 [style = bold, label=""];
30->8 [style = bold, label=""];
20->25 [style = solid, label="a"];
20->30 [style = bold, label=""];
15->27 [style = bold, label=""];
8->25 [style = bold, label=""];
5->4 [style = solid, label="a"];
15->36 [style = bold, label=""];
13->4 [style = bold, label=""];
29->13 [style = bold, label=""];
}
