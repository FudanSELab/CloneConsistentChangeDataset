digraph {
6 [style = filled, label = "testDefaultTimestampSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "@SuppressWarnings(\"unused\") final ParseSpec spec = new DelimitedParseSpec(null,new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),Lists.newArrayList(\"B\",\"B\"),Lists.newArrayList()),\",\",null,Arrays.asList(\"a\",\"B\"),false,0)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "@SuppressWarnings(\"unused\") final ParseSpec spec = new DelimitedParseSpec(new TimestampSpec(\"timestamp\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),Lists.newArrayList(\"B\",\"B\"),new ArrayList<>()),\",\",null,Arrays.asList(\"a\",\"B\"),false,0)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "expectedException.expect()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedException.expectMessage(\"parseSpec requires timestampSpec\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testDimExclusionDuplicate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "@SuppressWarnings(\"unused\") final ParseSpec spec = new DelimitedParseSpec(new TimestampSpec(\"timestamp\",\"auto\",null),new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Collections.singletonList(\"a\")),Lists.newArrayList(\"B\",\"B\"),Lists.newArrayList()),\",\",null,Arrays.asList(\"a\",\"B\"),false,0)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testDimExclusionDuplicate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->7 [style = bold, label=""];
6->4 [style = bold, label=""];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
4->5 [style = bold, label=""];
2->3 [style = bold, label=""];
}
