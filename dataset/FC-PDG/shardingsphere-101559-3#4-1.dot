digraph {
7 [style = filled, label = "BetweenExpression result = new BetweenExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),left,between,and,not)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean not = null != ctx.NOT()? true: false@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return new BetweenExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),left,between,and,not)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "createBetweenSegment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return result@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ExpressionSegment and = (ExpressionSegment)visit(ctx.aExpr(1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "boolean not = null != ctx.NOT()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ExpressionSegment between = (ExpressionSegment)visit(ctx.bExpr())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ExpressionSegment left = (ExpressionSegment)visit(ctx.aExpr(0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "createBetweenSegment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ExpressionSegment and = (ExpressionSegment)visit(ctx.predicate())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final AExprContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "createBetweenSegment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ExpressionSegment left = (ExpressionSegment)visit(ctx.bitExpr(0))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final PredicateContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ExpressionSegment between = (ExpressionSegment)visit(ctx.bitExpr(1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->7 [style = solid, label="between"];
14->12 [style = dotted, label="true"];
5->9 [style = bold, label=""];
13->7 [style = solid, label="between"];
0->6 [style = bold, label=""];
4->8 [style = solid, label="between"];
11->7 [style = solid, label="left"];
6->11 [style = dashed, label="0"];
7->8 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
5->7 [style = solid, label="and"];
9->8 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
15->7 [style = solid, label="and"];
7->3 [style = solid, label="result"];
7->3 [style = bold, label=""];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
2->12 [style = dashed, label="0"];
6->7 [style = solid, label="left"];
10->2 [style = dotted, label="true"];
11->13 [style = bold, label=""];
9->8 [style = solid, label="not"];
5->8 [style = solid, label="and"];
13->15 [style = bold, label=""];
0->2 [style = dotted, label="true"];
4->13 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
1->7 [style = solid, label="not"];
6->8 [style = solid, label="left"];
15->1 [style = bold, label=""];
}
