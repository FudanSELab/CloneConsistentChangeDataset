digraph {
3 [style = filled, label = "expectedResults.put(marketDimension,Sets.newHashSet(\"spot\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"SPot\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testSearch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"spot\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"spot\",\"SPot\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "expectedResults.put(qualityDimension,Sets.newHashSet(\"automotive\",\"AutoMotive\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testSearch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Map<String,Set<String>> expectedResults = new TreeMap<>(String.CASE_INSENSITIVE_ORDER)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "searchQuery = builder.query(\"spot\",true).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedResults.put(qualityDimension,Sets.newHashSet(\"automotive\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "searchQuery = builder.fragments(Arrays.asList(\"auto\",\"ve\")).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Druids.SearchQueryBuilder builder = testBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectedResults.put(marketDimension,Sets.newHashSet(\"SPot\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "expectedResults.put(marketDimension,Sets.newHashSet(\"spot\",\"SPot\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "SearchQuery searchQuery@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFragmentSearch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "searchQuery = builder.fragments(Arrays.asList(\"auto\",\"ve\"),true).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "searchQuery = builder.query(\"SPot\",true).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "searchQuery = builder.query(\"SPOT\").build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->4 [style = solid, label="searchQuery"];
10->21 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
8->15 [style = bold, label=""];
19->6 [style = solid, label="searchQuery"];
10->14 [style = bold, label=""];
7->12 [style = bold, label=""];
17->6 [style = bold, label=""];
12->21 [style = bold, label=""];
20->9 [style = bold, label=""];
7->6 [style = solid, label="expectedResults"];
1->19 [style = dashed, label="0"];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
19->17 [style = bold, label=""];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->4 [style = bold, label=""];
1->13 [style = bold, label=""];
21->18 [style = bold, label=""];
2->15 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
5->19 [style = bold, label=""];
5->1 [style = bold, label=""];
12->10 [style = bold, label=""];
1->6 [style = solid, label="searchQuery"];
8->2 [style = bold, label=""];
18->5 [style = bold, label=""];
7->4 [style = solid, label="expectedResults"];
10->0 [style = bold, label=""];
6->8 [style = bold, label=""];
15->4 [style = bold, label=""];
10->5 [style = solid, label="searchQuery"];
0->18 [style = dashed, label="0"];
21->5 [style = solid, label="searchQuery"];
13->6 [style = bold, label=""];
7->5 [style = solid, label="expectedResults"];
16->9 [style = bold, label=""];
0->5 [style = bold, label=""];
14->5 [style = bold, label=""];
}
