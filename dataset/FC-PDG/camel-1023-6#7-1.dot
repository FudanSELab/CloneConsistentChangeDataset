digraph {
16 [style = filled, label = "assertMockEndpointsSatisfied()@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "context.start()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RouteReifier.adviceWith(context.getRouteDefinitions().get(0),context,new AdviceWithRouteBuilder(){@Override public void configure(){weaveAddFirst().to(\"mock:a\").transform(constant(\"Bye World\"))}})@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"Bye World\",out)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getMockEndpoint(\"mock:result\").expectedBodiesReceived(\"Hello World\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testWeaveAddFirst['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "AdviceWith.adviceWith(context.getRouteDefinitions().get(0),context,new AdviceWithRouteBuilder(){@Override public void configure(){weaveAddLast().to(\"mock:a\").transform(constant(\"Bye World\"))}})@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "getMockEndpoint(\"mock:bar\").expectedBodiesReceived(\"Bye World\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "getMockEndpoint(\"mock:bar\").expectedBodiesReceived(\"Hello World\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "getMockEndpoint(\"mock:a\").expectedBodiesReceived(\"Hello World\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getMockEndpoint(\"mock:foo\").expectedBodiesReceived(\"Bye World\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "getMockEndpoint(\"mock:foo\").expectedBodiesReceived(\"Hello World\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testWeaveAddLast['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "template.sendBody(\"direct:start\",\"Hello World\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "getMockEndpoint(\"mock:result\").expectedBodiesReceived(\"Bye World\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Object out = template.requestBody(\"direct:start\",\"Hello World\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testWeaveAddLast['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertMockEndpointsSatisfied()@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->4 [style = solid, label="out"];
6->11 [style = dashed, label="0"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
9->8 [style = bold, label=""];
15->16 [style = bold, label=""];
0->17 [style = dashed, label="0"];
4->7 [style = bold, label=""];
2->13 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
17->14 [style = bold, label=""];
2->9 [style = dashed, label="0"];
5->4 [style = bold, label=""];
11->17 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
13->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
8->11 [style = bold, label=""];
2->8 [style = bold, label=""];
}
