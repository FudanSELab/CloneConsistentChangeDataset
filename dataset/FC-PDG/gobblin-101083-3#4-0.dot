digraph {
14 [style = filled, label = "Assert.assertEquals(specs.size(),1,\"Spec store should contain 1 Spec after addition\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "logger.info(\"(Before Delete( Number of specs: \" + specs.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(flowCatalog.getSize(),1,\"Spec store should contain 1 Spec after addition\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "deleteFlowSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "this.flowCatalog.put(flowSpec)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "specsInSEI = ((List)(sei.getProducer().get().listSpecs().get())).size()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertTrue(specs.size() == 0,\"Spec store should not contain Spec after deletion\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "IdentityFlowToJobSpecCompiler specCompiler = (IdentityFlowToJobSpecCompiler)this.orchestrator.getSpecCompiler()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "logger.info(\"(Before Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Collection<Spec> specs = flowCatalog.getSpecs()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(specs.size() == 0,\"Spec store should be empty before addition\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "i = 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Collection<Spec> specs = flowCatalog.getSpecs()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "specs = flowCatalog.getSpecs()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "logger.info(\"(Before Delete( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "specs = flowCatalog.getSpecs()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "logger.info(\"(After Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "logger.info(\"(After Delete( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "logger.info(\"(After Create( Number of specs: \" + specs.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "logger.info(\"(After Delete( Number of specs: \" + specs.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertTrue(specs.size() == 1,\"Spec store should contain 1 Flow that was added in last test\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "this.flowCatalog.remove(flowSpec.getUri())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "flowSpec = (FlowSpec)spec@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(specsInSEI == 0,\"SpecProducer should contain 0 \" + \"Spec after addition because Orchestrator is a no-op listener for any new FlowSpecs\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(specs.size() == 1,\"Spec store should contain 1 Spec after addition\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "i = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertTrue(specsInSEI == 0,\"SpecProducer should not contain \" + \"Spec after deletion\")@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "logger.info(\"(Before Create( Number of specs: \" + specs.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "FlowSpec flowSpec = (FlowSpec)spec@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "createFlowSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "createFlowSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int specsInSEI = ((List)(sei.getProducer().get().listSpecs().get())).size()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(specs.size(),0,\"Spec store should be empty before addition\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "SpecExecutor sei = specCompiler.getTopologySpecMap().values().iterator().next().getSpecExecutor()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
16->3 [style = bold, label=""];
32->26 [style = solid, label="specsInSEI"];
10->15 [style = bold, label=""];
9->24 [style = dashed, label="0"];
7->12 [style = bold, label=""];
20->23 [style = solid, label="specsInSEI"];
1->15 [style = dashed, label="0"];
31->24 [style = bold, label=""];
9->4 [style = bold, label=""];
1->34 [style = dashed, label="0"];
18->12 [style = bold, label=""];
22->29 [style = bold, label=""];
0->11 [style = bold, label=""];
14->17 [style = bold, label=""];
12->10 [style = solid, label="i"];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
19->2 [style = bold, label=""];
2->22 [style = solid, label="i"];
10->22 [style = dashed, label="0"];
2->10 [style = solid, label="flowSpec"];
2->10 [style = bold, label=""];
8->9 [style = solid, label="i"];
29->22 [style = solid, label="flowSpec"];
32->26 [style = bold, label=""];
21->18 [style = bold, label=""];
4->28 [style = bold, label=""];
13->14 [style = dashed, label="0"];
26->30 [style = bold, label=""];
25->31 [style = bold, label=""];
11->28 [style = dashed, label="0"];
12->2 [style = bold, label=""];
1->6 [style = bold, label=""];
13->27 [style = dashed, label="0"];
20->23 [style = bold, label=""];
3->7 [style = bold, label=""];
24->31 [style = bold, label=""];
2->6 [style = solid, label="flowSpec"];
31->24 [style = solid, label="flowSpec"];
30->4 [style = bold, label=""];
7->19 [style = dashed, label="0"];
25->24 [style = solid, label="i"];
22->34 [style = bold, label=""];
9->14 [style = bold, label=""];
28->25 [style = bold, label=""];
11->8 [style = bold, label=""];
34->32 [style = bold, label=""];
10->2 [style = bold, label=""];
8->4 [style = bold, label=""];
29->22 [style = bold, label=""];
12->19 [style = bold, label=""];
33->21 [style = bold, label=""];
10->1 [style = bold, label=""];
2->29 [style = bold, label=""];
27->20 [style = bold, label=""];
24->27 [style = bold, label=""];
4->9 [style = solid, label="flowSpec"];
9->13 [style = bold, label=""];
}
