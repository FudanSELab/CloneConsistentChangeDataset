digraph {
13 [style = filled, label = "DBNDatabaseNode dsNode = navigatorModel.getNodeByObject(trigger.getDatabase())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "DBNModel navigatorModel = DBWorkbench.getPlatform().getNavigatorModel()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean drop@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DBNNode curNode = selectedFunction == null? null: navigatorModel.getNodeByObject(selectedFunction)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "gd.widthHint = UIUtils.getFontHeight(processIdText) * 10 + 10@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Composite parent@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DBNNode node = DBWorkbench.getPlatformUI().selectObject(parent.getShell(),\"Select function for \",dsNode,curNode,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d113f,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d1145,null)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "functionCombo.select(selectedFunction)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "dropDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "processIdText = UIUtils.createLabelText(functionGroup,\"Process ID\",\"\",SWT.BORDER,new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Group functionGroup = UIUtils.createControlGroup(parent,\"Function\",2,GridData.VERTICAL_ALIGN_BEGINNING,SWT.DEFAULT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "processIdText.setLayoutData(gd)@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "dropDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "selectedFunction = (PostgreProcedure)((DBNDatabaseNode)node).getObject()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DBNDatabaseNode dsNode = navigatorModel.getNodeByObject(getDataSource())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "functionCombo.setLayoutData(gd)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "createFunctionGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "functionCombo.addItem(null)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "dsNode != null@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "node instanceof DBNDatabaseNode && ((DBNDatabaseNode)node).getObject() instanceof PostgreProcedure@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "gd.widthHint = UIUtils.getFontHeight(functionCombo) * 40 + 10@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "functionCombo.removeAll()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "functionCombo.addItem(selectedFunction)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "GridData gd = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "drop@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "functionCombo = new CSmartSelector<PostgreProcedure>(functionGroup,SWT.BORDER | SWT.DROP_DOWN | SWT.READ_ONLY,new LabelProvider(){@Override public Image getImage(Object element){return DBeaverIcons.getImage(DBIcon.TREE_PROCEDURE)}@Override public String getText(Object element){if (element == null) {return \"N/A\"}return ((PostgreProcedure)element).getFullQualifiedSignature()}}){@Override protected void dropDown(boolean drop){if (drop) {DBNModel navigatorModel = DBWorkbench.getPlatform().getNavigatorModel()DBNDatabaseNode dsNode = navigatorModel.getNodeByObject(container.getDataSource())if (dsNode != null) {DBNNode curNode = selectedFunction == null? null: navigatorModel.getNodeByObject(selectedFunction)DBNNode node = DBWorkbench.getPlatformUI().selectObject(parent.getShell(),\"Select function to debug\",dsNode,curNode,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d1203,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d1209,null)if (node instanceof DBNDatabaseNode && ((DBNDatabaseNode)node).getObject() instanceof PostgreProcedure) {functionCombo.removeAll()selectedFunction = (PostgreProcedure)((DBNDatabaseNode)node).getObject()functionCombo.addItem(selectedFunction)functionCombo.select(selectedFunction)updateParametersTable()container.updateDialogState()}parametersTable.setEnabled(selectedFunction != null)}}}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "UIUtils.createControlLabel(functionGroup,\"Function\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
1->5 [style = bold, label=""];
22->26 [style = bold, label=""];
9->3 [style = solid, label="selectedFunction"];
15->23 [style = bold, label=""];
13->5 [style = solid, label="dsNode"];
0->9 [style = bold, label=""];
2->0 [style = dotted, label="true"];
27->25 [style = solid, label="parent"];
9->11 [style = bold, label=""];
25->18 [style = solid, label="functionGroup"];
13->6 [style = solid, label="dsNode"];
7->13 [style = dotted, label="true"];
4->7 [style = solid, label="drop"];
5->6 [style = dotted, label="true"];
6->2 [style = solid, label="node"];
16->25 [style = bold, label=""];
5->12 [style = dotted, label="true"];
9->11 [style = solid, label="selectedFunction"];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
25->15 [style = solid, label="functionGroup"];
10->7 [style = bold, label=""];
15->24 [style = solid, label="functionCombo"];
14->7 [style = bold, label=""];
7->5 [style = dotted, label="true"];
2->11 [style = dotted, label="true"];
6->2 [style = bold, label=""];
24->20 [style = bold, label=""];
20->18 [style = bold, label=""];
8->1 [style = bold, label=""];
1->13 [style = dashed, label="0"];
2->0 [style = bold, label=""];
17->24 [style = bold, label=""];
2->9 [style = dotted, label="true"];
25->19 [style = solid, label="functionGroup"];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
21->22 [style = bold, label=""];
1->5 [style = solid, label="dsNode"];
25->19 [style = bold, label=""];
13->5 [style = bold, label=""];
18->22 [style = solid, label="processIdText"];
17->20 [style = solid, label="gd"];
23->17 [style = bold, label=""];
16->27 [style = dotted, label="true"];
12->6 [style = solid, label="curNode"];
18->21 [style = bold, label=""];
10->4 [style = dotted, label="true"];
19->15 [style = bold, label=""];
7->1 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
14->4 [style = dotted, label="true"];
1->6 [style = solid, label="dsNode"];
8->13 [style = bold, label=""];
21->26 [style = solid, label="gd"];
5->2 [style = dotted, label="true"];
}
