digraph {
17 [style = filled, label = "roles.add(new DiscoveryNodeRole(\"custom_role\",\"cr\"){@Override public Setting<Boolean> legacySetting(){return null}})@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final DiscoveryNode node = newNode(i,attributes,new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "frequently()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "nodesList.add(node)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final int numNodes@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "randomNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<DiscoveryNode> nodesList = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "frequently()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final DiscoveryNode node = newNode(i,attributes,new HashSet<>(randomSubsetOf(DiscoveryNodeRole.roles())))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "return nodesList@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "randomNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "return nodesList@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "nodesList.add(node)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "randomNodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < numNodes@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final DiscoveryNode node = newNode(idGenerator.getAndIncrement(),attributes,roles)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,String> attributes = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "attributes.put(\"custom\",randomBoolean()? \"match\": randomAlphaOfLengthBetween(3,5))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
7->13 [style = bold, label=""];
5->14 [style = dotted, label="true"];
11->13 [style = solid, label="i"];
9->11 [style = bold, label=""];
0->13 [style = bold, label=""];
15->14 [style = bold, label=""];
9->4 [style = solid, label="nodesList"];
2->13 [style = solid, label="attributes"];
5->19 [style = dotted, label="true"];
20->14 [style = solid, label="roles"];
1->5 [style = solid, label="i"];
11->1 [style = solid, label="i"];
5->1 [style = dotted, label="true"];
2->14 [style = solid, label="attributes"];
11->3 [style = solid, label="i"];
14->19 [style = bold, label=""];
5->18 [style = bold, label=""];
5->0 [style = dotted, label="true"];
7->20 [style = bold, label=""];
5->3 [style = dotted, label="true"];
10->5 [style = solid, label="numNodes"];
11->5 [style = solid, label="i"];
12->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
5->15 [style = dotted, label="true"];
16->10 [style = dotted, label="true"];
7->3 [style = bold, label=""];
3->8 [style = solid, label="node"];
0->7 [style = bold, label=""];
15->17 [style = dotted, label="true"];
6->10 [style = dotted, label="true"];
8->1 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
2->0 [style = bold, label=""];
14->19 [style = solid, label="node"];
19->1 [style = bold, label=""];
5->13 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
17->14 [style = bold, label=""];
2->3 [style = solid, label="attributes"];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
3->20 [style = dashed, label="0"];
13->8 [style = solid, label="node"];
9->18 [style = solid, label="nodesList"];
5->20 [style = dotted, label="true"];
0->20 [style = bold, label=""];
1->3 [style = solid, label="i"];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
5->8 [style = dotted, label="true"];
20->15 [style = bold, label=""];
1->13 [style = solid, label="i"];
16->9 [style = bold, label=""];
0->7 [style = dotted, label="true"];
5->2 [style = dotted, label="true"];
}
