digraph {
10 [style = filled, label = "assertEquals(\"pipeline2\",indexRequest.getPipeline())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "templateMetadataBuilder.put(\"template2\",IndexTemplateMetadata.builder(\"template2\").patterns(Arrays.asList(\"missing_*\")).order(2).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline2\").build()).build())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testFindDefaultPipelineFromTemplateMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "when(metadata.getTemplates()).thenReturn(templateMetadataBuilder.build())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "verifyZeroInteractions(ingestService)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Exception exception = new Exception(\"fake exception\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(metadata.indices()).thenReturn(ImmutableOpenMap.of())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "IndexRequest indexRequest = new IndexRequest(\"missing_index\").id(\"id\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "templateMetadataBuilder.put(\"template4\",IndexTemplateMetadata.builder(\"template4\").patterns(Arrays.asList(\"nope\")).order(4).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline4\").build()).build())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testFindDefaultPipelineFromTemplateMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ClusterState state = clusterService.state()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(ingestService).executeBulkRequest(eq(1),bulkDocsItr.capture(),failureHandler.capture(),completionHandler.capture(),any(),eq(Names.WRITE))@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "when(metadata.templates()).thenReturn(templateMetadata)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "when(metadata.getTemplates()).thenReturn(templateMetadata)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "AtomicBoolean responseCalled = new AtomicBoolean(false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "templateMetadataBuilder.put(\"template3\",IndexTemplateMetadata.builder(\"template3\").patterns(Arrays.asList(\"missing*\")).order(3).build())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "AtomicBoolean failureCalled = new AtomicBoolean(false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(state.metadata()).thenReturn(metadata)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "templateMetadataBuilder.put(\"template1\",IndexTemplateMetadata.builder(\"template1\").patterns(Arrays.asList(\"missing_index\")).order(1).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline1\").build()).build())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"pipeline2\",indexRequest.getPipeline())@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(IngestService.NOOP_PIPELINE_NAME,indexRequest.getPipeline())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testNotFindDefaultPipelineFromTemplateMatches['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ImmutableOpenMap.Builder<String,IndexTemplateMetadata> templateMetadataBuilder = ImmutableOpenMap.builder()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(metadata.templates()).thenReturn(templateMetadataBuilder.build())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "ActionTestUtils.execute(singleItemBulkWriteAction,null,indexRequest,ActionListener.wrap(null,null))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "indexRequest.source(Collections.emptyMap())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final ImmutableOpenMap<String,IndexTemplateMetadata> templateMetadata = templateMetadataBuilder.build()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ActionTestUtils.execute(singleItemBulkWriteAction,null,indexRequest,ActionListener.wrap(null,null))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Metadata metadata = mock()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(state.getMetadata()).thenReturn(metadata)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
25->0 [style = bold, label=""];
12->24 [style = solid, label="indexRequest"];
0->16 [style = bold, label=""];
17->26 [style = bold, label=""];
1->8 [style = bold, label=""];
6->18 [style = bold, label=""];
27->28 [style = bold, label=""];
11->26 [style = dashed, label="0"];
29->0 [style = bold, label=""];
22->21 [style = bold, label=""];
14->10 [style = bold, label=""];
3->15 [style = bold, label=""];
3->22 [style = dashed, label="0"];
2->9 [style = bold, label=""];
12->6 [style = bold, label=""];
14->27 [style = dashed, label="0"];
26->22 [style = bold, label=""];
19->0 [style = bold, label=""];
20->5 [style = bold, label=""];
9->17 [style = solid, label="metadata"];
7->14 [style = bold, label=""];
26->21 [style = solid, label="templateMetadata"];
5->1 [style = bold, label=""];
13->17 [style = bold, label=""];
7->24 [style = bold, label=""];
8->2 [style = bold, label=""];
26->22 [style = solid, label="templateMetadata"];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
10->23 [style = bold, label=""];
15->4 [style = bold, label=""];
7->27 [style = bold, label=""];
4->12 [style = bold, label=""];
21->4 [style = bold, label=""];
18->7 [style = bold, label=""];
16->20 [style = bold, label=""];
4->7 [style = solid, label="indexRequest"];
9->13 [style = solid, label="metadata"];
9->13 [style = bold, label=""];
17->11 [style = bold, label=""];
}
