digraph {
6 [style = filled, label = "assertTrue(\"Didn't get a ByteString back\",o instanceof ByteString)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"Should get an equal ByteString back\",TEST_STRING,o)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ObjectOutputStream oos = new ObjectOutputStream(out)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testJavaSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "oos.writeObject(stringUnderTest)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testJavaSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "byte(( pickled = out.toByteArray()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "oos.writeObject(TEST_STRING)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testJavaSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "InputStream in = new ByteArrayInputStream(pickled)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ObjectInputStream ois = new ObjectInputStream(in)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"Should get an equal ByteString back\",testString,o)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "oos.writeObject(testString)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Object o = ois.readObject()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteArrayOutputStream out = new ByteArrayOutputStream()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "oos.close()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"Should get an equal ByteString back\",stringUnderTest,o)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9->5 [style = solid, label="pickled"];
16->3 [style = bold, label=""];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
4->3 [style = bold, label=""];
0->9 [style = bold, label=""];
10->6 [style = solid, label="o"];
7->11 [style = bold, label=""];
5->8 [style = solid, label="in"];
1->14 [style = dashed, label="0"];
10->6 [style = bold, label=""];
2->15 [style = dashed, label="0"];
6->14 [style = bold, label=""];
6->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
11->0 [style = bold, label=""];
13->3 [style = bold, label=""];
3->7 [style = bold, label=""];
7->2 [style = bold, label=""];
15->0 [style = bold, label=""];
9->5 [style = bold, label=""];
3->7 [style = solid, label="out"];
7->15 [style = bold, label=""];
2->11 [style = dashed, label="0"];
10->1 [style = solid, label="o"];
10->14 [style = solid, label="o"];
10->12 [style = solid, label="o"];
6->12 [style = bold, label=""];
}
