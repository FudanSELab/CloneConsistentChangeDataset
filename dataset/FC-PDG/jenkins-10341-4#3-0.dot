digraph {
2 [style = filled, label = "unlocatableRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "FreeStyleProject p = r.jenkins.getItemByFullName(\"busted\",)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(p.getParent()).thenReturn(Jenkins.getInstance())@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "FreeStyleProject p = mock()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "FreeStyleBuild build = new FreeStyleBuild(p)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Collections.emptySet(),odm.getData().keySet())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "odm.doDiscard(null,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "p.delete()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertNotNull(p)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "FreeStyleBuild build = r.buildAndAssertSuccess(p)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "when(p.getFullName()).thenReturn(\"notfound\")@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Collections.emptySet(),odm.getData().keySet())@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Collections.singleton(build),odm.getData().keySet())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "OldDataMonitor.report(build,(String)null)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(Collections.emptySet(),odm.getData().keySet())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "robustness['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Collections.singleton(p),odm.getData().keySet())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "odm.doDiscard(null,null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "odm.report(build,(String)null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "OldDataMonitor odm = OldDataMonitor.get(r.jenkins)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "unlocatableRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->4 [style = solid, label="build"];
4->9 [style = bold, label=""];
19->20 [style = solid, label="p"];
10->15 [style = bold, label=""];
21->0 [style = bold, label=""];
0->6 [style = bold, label=""];
0->19 [style = bold, label=""];
11->15 [style = solid, label="build"];
11->12 [style = solid, label="build"];
19->17 [style = bold, label=""];
6->14 [style = dashed, label="0"];
9->8 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
20->18 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
0->14 [style = bold, label=""];
2->0 [style = bold, label=""];
6->7 [style = solid, label="p"];
12->4 [style = bold, label=""];
11->10 [style = bold, label=""];
19->17 [style = solid, label="p"];
7->3 [style = solid, label="build"];
6->19 [style = dashed, label="0"];
15->12 [style = bold, label=""];
14->11 [style = solid, label="p"];
14->11 [style = bold, label=""];
13->0 [style = bold, label=""];
17->20 [style = bold, label=""];
18->16 [style = bold, label=""];
}
