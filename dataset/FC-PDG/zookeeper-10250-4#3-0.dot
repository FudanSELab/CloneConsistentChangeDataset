digraph {
9 [style = filled, label = "testDuplicatedTxn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "reset()@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,db,leader))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "testNewEpochZxid['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3dc1e4)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "peerZxid = getZxid(1,0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "db.lastProcessedZxid = getZxid(2,0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "peerZxid = getZxid(1,0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,learnerHandler.getQueuedPackets().size())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,2)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "db.txnLog.add(createProposal(getZxid(0,1)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "reset()@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(5,learnerHandler.getQueuedPackets().size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,2)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,1)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,1)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long peerZxid@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,1)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(2,0),getZxid(2,0))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "reset()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,1)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDuplicatedTxn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "reset()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(1,2),getZxid(1,2))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,2)))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "peerZxid = getZxid(0,0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,2)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,learnerHandler.getQueuedPackets().size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "peerZxid = getZxid(2,0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
17->5 [style = bold, label=""];
31->22 [style = bold, label=""];
3->1 [style = bold, label=""];
16->8 [style = bold, label=""];
7->15 [style = solid, label="peerZxid"];
0->17 [style = bold, label=""];
4->16 [style = solid, label="peerZxid"];
25->27 [style = solid, label="peerZxid"];
18->12 [style = bold, label=""];
23->4 [style = bold, label=""];
22->21 [style = bold, label=""];
15->19 [style = dashed, label="0"];
21->30 [style = bold, label=""];
28->12 [style = bold, label=""];
2->10 [style = bold, label=""];
30->29 [style = bold, label=""];
13->1 [style = bold, label=""];
25->27 [style = bold, label=""];
12->2 [style = bold, label=""];
8->20 [style = bold, label=""];
22->21 [style = solid, label="peerZxid"];
14->0 [style = bold, label=""];
10->13 [style = bold, label=""];
24->31 [style = bold, label=""];
0->25 [style = bold, label=""];
29->32 [style = bold, label=""];
26->23 [style = bold, label=""];
7->19 [style = solid, label="peerZxid"];
15->4 [style = bold, label=""];
5->7 [style = bold, label=""];
7->15 [style = bold, label=""];
1->14 [style = bold, label=""];
9->12 [style = bold, label=""];
19->4 [style = bold, label=""];
13->6 [style = bold, label=""];
20->24 [style = bold, label=""];
8->11 [style = bold, label=""];
7->19 [style = bold, label=""];
4->16 [style = bold, label=""];
27->26 [style = bold, label=""];
}
