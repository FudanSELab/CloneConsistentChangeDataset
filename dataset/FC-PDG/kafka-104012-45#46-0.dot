digraph {
4 [style = filled, label = "coordinator.maybeUpdateSubscriptionMetadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final List<TopicPartition> oldAssigned = Arrays.asList(t1p)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssigned))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest join = (JoinGroupRequest)bodyIterator<JoinGroupRequestData.JoinGroupRequestProtocol> protocolIterator = join.data().protocols().iterator()assertTrue(protocolIterator.hasNext())JoinGroupRequestData.JoinGroupRequestProtocol protocolMetadata = protocolIterator.next()ByteBuffer metadata = ByteBuffer.wrap(protocolMetadata.metadata())ConsumerPartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(metadata)metadata.rewind()return subscription.topics().contains(topic1)}},joinGroupLeaderResponse(3,consumerId,initialSubscription,Errors.NONE))@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "Collection<TopicPartition> added = getAdded(assigned,assigned)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@88@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topic1))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "client.prepareResponse(null,syncGroupResponse(newAssigned,Errors.NONE))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<TopicPartition> newAssigned = Arrays.asList(t1p,t2p)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "client.prepareResponse(null,joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "rebalanceListener.revoked = null@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(3,rebalanceListener.assignedCount)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final List<TopicPartition> oldAssigned = singletonList(t1p)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "int revokedCount = revoked.isEmpty()? 0: 1@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(getAdded(owned,assigned),rebalanceListener.assigned)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))return true}},syncGroupResponse(newAssigned,Errors.NONE))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "client.prepareResponse(null,joinGroupLeaderResponse(3,consumerId,initialSubscription,Errors.NONE))@@@61@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "subscriptions.subscribe(singleton(topic1),rebalanceListener)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "joinAsFollowerAndReceiveAssignment(\"consumer\",coordinator,assigned)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(assigned,assigned)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "coordinator.joinGroupIfNeeded(time.timer(Long.MAX_VALUE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,rebalanceListener.lostCount)@@@89@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "client.prepareResponse(syncGroupResponse(oldAssigned,Errors.NONE))@@@72@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "assertEquals(revoked.isEmpty()? 0: 1,rebalanceListener.revokedCount)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertFalse(revoked.isEmpty())@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(getAdded(oldAssigned,newAssigned),rebalanceListener.assigned)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(oldAssigned,newAssigned)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "final List<TopicPartition> owned = Collections.emptyList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "client.prepareResponse(null,syncGroupResponse(oldAssigned,Errors.NONE))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testRejoinGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "final List<TopicPartition> assigned = Arrays.asList(t1p)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topic1,otherTopic)),rebalanceListener)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "revoked = getRevoked(newAssigned,oldAssigned)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(0,rebalanceListener.lostCount)@@@85@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(toSet(updatedSubscription),subscriptions.subscription())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topic1,topic2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@73@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "client.prepareResponse(syncGroupResponse(assigned,Errors.NONE))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "revokedCount += 1@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(toSet(newAssigned),subscriptions.assignedPartitions())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testMetadataRefreshDuringRebalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "rebalanceListener.assigned = null@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topic1,topic2))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Collection<TopicPartition> added = getAdded(newAssigned,oldAssigned)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(getAdded(owned,oldAssigned),rebalanceListener.assigned)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->10 [style = solid, label="newAssigned"];
55->37 [style = solid, label="oldAssigned"];
23->51 [style = bold, label=""];
78->61 [style = bold, label=""];
80->65 [style = solid, label="otherTopic"];
10->24 [style = bold, label=""];
13->12 [style = solid, label="consumerId"];
27->44 [style = bold, label=""];
40->55 [style = bold, label=""];
55->27 [style = solid, label="oldAssigned"];
15->54 [style = dashed, label="0"];
77->66 [style = solid, label="assigned"];
18->30 [style = bold, label=""];
53->47 [style = bold, label=""];
78->71 [style = solid, label="added"];
21->12 [style = solid, label="oldAssigned"];
14->41 [style = solid, label="newAssigned"];
22->4 [style = bold, label=""];
44->23 [style = bold, label=""];
31->35 [style = bold, label=""];
16->49 [style = bold, label=""];
14->18 [style = solid, label="newAssigned"];
23->47 [style = solid, label="revoked"];
65->68 [style = bold, label=""];
2->14 [style = bold, label=""];
14->46 [style = bold, label=""];
2->60 [style = dashed, label="0"];
25->19 [style = bold, label=""];
15->41 [style = bold, label=""];
73->71 [style = bold, label=""];
51->47 [style = solid, label="added"];
13->30 [style = solid, label="consumerId"];
40->2 [style = solid, label="owned"];
32->20 [style = bold, label=""];
50->38 [style = solid, label="subscription"];
57->13 [style = bold, label=""];
36->6 [style = bold, label=""];
61->74 [style = bold, label=""];
4->3 [style = bold, label=""];
39->12 [style = solid, label="initialSubscription"];
14->19 [style = solid, label="newAssigned"];
70->74 [style = solid, label="revoked"];
30->68 [style = dashed, label="0"];
66->67 [style = bold, label=""];
60->64 [style = bold, label=""];
77->75 [style = bold, label=""];
14->27 [style = solid, label="newAssigned"];
69->70 [style = solid, label="assigned"];
0->26 [style = solid, label="revokedCount"];
21->43 [style = solid, label="oldAssigned"];
7->0 [style = bold, label=""];
24->38 [style = bold, label=""];
13->40 [style = bold, label=""];
54->58 [style = bold, label=""];
19->37 [style = bold, label=""];
21->32 [style = solid, label="oldAssigned"];
55->41 [style = solid, label="oldAssigned"];
14->45 [style = solid, label="newAssigned"];
21->9 [style = bold, label=""];
75->66 [style = bold, label=""];
13->43 [style = solid, label="consumerId"];
55->24 [style = solid, label="oldAssigned"];
13->39 [style = solid, label="consumerId"];
13->18 [style = solid, label="consumerId"];
52->48 [style = bold, label=""];
69->78 [style = solid, label="assigned"];
48->32 [style = bold, label=""];
39->48 [style = solid, label="initialSubscription"];
55->32 [style = solid, label="oldAssigned"];
70->78 [style = bold, label=""];
40->21 [style = bold, label=""];
55->9 [style = bold, label=""];
30->15 [style = bold, label=""];
9->22 [style = bold, label=""];
21->1 [style = solid, label="oldAssigned"];
17->8 [style = bold, label=""];
21->2 [style = solid, label="oldAssigned"];
9->75 [style = dashed, label="0"];
59->27 [style = bold, label=""];
80->40 [style = bold, label=""];
55->51 [style = solid, label="oldAssigned"];
29->17 [style = bold, label=""];
14->51 [style = solid, label="newAssigned"];
63->79 [style = bold, label=""];
47->42 [style = bold, label=""];
50->27 [style = bold, label=""];
46->30 [style = solid, label="updatedSubscriptions"];
13->46 [style = solid, label="consumerId"];
21->7 [style = solid, label="oldAssigned"];
68->63 [style = bold, label=""];
14->7 [style = solid, label="newAssigned"];
35->39 [style = bold, label=""];
0->11 [style = bold, label=""];
40->60 [style = solid, label="owned"];
28->26 [style = bold, label=""];
21->27 [style = solid, label="oldAssigned"];
55->49 [style = solid, label="oldAssigned"];
46->18 [style = bold, label=""];
37->12 [style = bold, label=""];
38->1 [style = bold, label=""];
62->80 [style = bold, label=""];
5->16 [style = bold, label=""];
13->37 [style = solid, label="consumerId"];
14->15 [style = solid, label="newAssigned"];
8->2 [style = bold, label=""];
12->56 [style = bold, label=""];
52->45 [style = solid, label="updatedSubscription"];
50->12 [style = dashed, label="0"];
21->77 [style = dashed, label="0"];
30->54 [style = bold, label=""];
10->36 [style = solid, label="added"];
13->48 [style = solid, label="consumerId"];
27->1 [style = solid, label="revoked"];
14->28 [style = solid, label="newAssigned"];
56->59 [style = bold, label=""];
7->28 [style = solid, label="revokedCount"];
67->76 [style = bold, label=""];
49->29 [style = bold, label=""];
14->37 [style = solid, label="newAssigned"];
69->65 [style = bold, label=""];
12->50 [style = bold, label=""];
55->43 [style = solid, label="oldAssigned"];
23->38 [style = solid, label="revokedCount"];
41->7 [style = bold, label=""];
14->23 [style = solid, label="newAssigned"];
7->25 [style = solid, label="revoked"];
3->31 [style = bold, label=""];
64->69 [style = bold, label=""];
55->19 [style = solid, label="oldAssigned"];
21->55 [style = dashed, label="0"];
26->25 [style = bold, label=""];
34->13 [style = bold, label=""];
39->43 [style = bold, label=""];
11->45 [style = bold, label=""];
74->73 [style = bold, label=""];
40->77 [style = bold, label=""];
33->10 [style = bold, label=""];
43->52 [style = bold, label=""];
45->28 [style = bold, label=""];
42->36 [style = bold, label=""];
21->37 [style = solid, label="oldAssigned"];
72->60 [style = bold, label=""];
33->53 [style = solid, label="revokedCount"];
58->41 [style = bold, label=""];
69->63 [style = solid, label="assigned"];
21->23 [style = solid, label="oldAssigned"];
20->5 [style = bold, label=""];
39->50 [style = solid, label="initialSubscription"];
79->70 [style = bold, label=""];
76->72 [style = bold, label=""];
55->56 [style = solid, label="oldAssigned"];
77->60 [style = solid, label="assigned"];
52->11 [style = solid, label="updatedSubscription"];
21->10 [style = solid, label="oldAssigned"];
13->80 [style = dashed, label="0"];
21->49 [style = solid, label="oldAssigned"];
13->50 [style = solid, label="consumerId"];
69->71 [style = solid, label="assigned"];
55->2 [style = solid, label="oldAssigned"];
1->53 [style = bold, label=""];
14->54 [style = solid, label="newAssigned"];
51->33 [style = bold, label=""];
41->26 [style = solid, label="revoked"];
}
