digraph {
1 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testPlanTransformWithRuleNameConflicts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "RelNode convert = planner.rel(validate).rel@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SqlNode parse = planner.parse(\"select * from \"emps\"\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "SqlNode parse = planner.parse(\"select * from \"emps\"\")@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RelOptRule rule1 = new RelOptRule(operand(,operand(,RelOptRule.any())),\"MYRULE\"){@Override public boolean matches(RelOptRuleCall call){return false}public void onMatch(RelOptRuleCall call){}}@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(toString(transform2),equalTo(\"EnumerableProject(empid=($0(, deptno=($1(, name=($2(, salary=($3(, commission=($4()\" + \" EnumerableTableScan(table=((hr, emps(()\"))@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "RelNode convert = planner.rel(validate).rel@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(toString(transform2),equalTo(\"EnumerableProject(empid=($0(, deptno=($1(, name=($2(, salary=($3(, commission=($4()\" + \" EnumerableTableScan(table=((hr, emps(()\"))@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SqlNode parse = planner.parse(\"select * from \"emps\"\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RuleSet ruleSet1 = RuleSets.ofList(rule1,EnumerableRules.ENUMERABLE_TABLE_SCAN_RULE,EnumerableRules.ENUMERABLE_FILTER_RULE,EnumerableRules.ENUMERABLE_PROJECT_RULE)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RelOptRule rule2 = MyFilterProjectRule.config(\"MYRULE\").toRule()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertThat(toString(transform),equalTo(\"EnumerableProject(empid=($0(, deptno=($1(, name=($2(, salary=($3(, commission=($4()\" + \" EnumerableTableScan(table=((hr, emps(()\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "RelNode transform2 = planner.transform(1,traitSet,transform)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "testPlan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RelOptRule rule1 = MyProjectFilterRule.config(\"MYRULE\").toRule()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "Program program = Programs.ofRules(CoreRules.FILTER_MERGE,EnumerableRules.ENUMERABLE_TABLE_SCAN_RULE,EnumerableRules.ENUMERABLE_FILTER_RULE,EnumerableRules.ENUMERABLE_PROJECT_RULE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RelNode transform2 = planner.transform(1,traitSet,transform)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Planner planner = getPlanner(null,program)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Planner planner = getPlanner(null,Programs.of(ruleSet1),Programs.of(ruleSet2))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "RuleSet ruleSet2 = RuleSets.ofList(rule2)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Planner planner = getPlanner(null,Programs.of(ruleSet1),Programs.of(ruleSet2))@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "RuleSet ruleSet2 = RuleSets.ofList(rule2)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "RuleSet ruleSet1 = RuleSets.ofList(rule1,EnumerableRules.ENUMERABLE_TABLE_SCAN_RULE,EnumerableRules.ENUMERABLE_FILTER_RULE,EnumerableRules.ENUMERABLE_PROJECT_RULE)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testPlanTransformWithRuleNameConflicts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RelOptRule rule2 = new RelOptRule(operand(,operand(,RelOptRule.any())),\"MYRULE\"){@Override public boolean matches(RelOptRuleCall call){return false}public void onMatch(RelOptRuleCall call){}}@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
11->10 [style = solid, label="validate"];
27->29 [style = solid, label="convert"];
15->13 [style = bold, label=""];
10->1 [style = solid, label="convert"];
23->25 [style = solid, label="rule2"];
24->15 [style = solid, label="ruleSet1"];
18->23 [style = bold, label=""];
26->29 [style = solid, label="traitSet"];
14->19 [style = solid, label="transform"];
26->29 [style = bold, label=""];
8->7 [style = solid, label="ruleSet2"];
13->22 [style = solid, label="parse"];
22->17 [style = solid, label="validate"];
17->14 [style = solid, label="convert"];
14->19 [style = bold, label=""];
25->15 [style = solid, label="ruleSet2"];
20->14 [style = bold, label=""];
30->34 [style = bold, label=""];
20->19 [style = solid, label="traitSet"];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
4->11 [style = solid, label="parse"];
29->33 [style = solid, label="transform"];
10->27 [style = dashed, label="0"];
12->6 [style = bold, label=""];
21->18 [style = bold, label=""];
8->7 [style = bold, label=""];
6->7 [style = solid, label="ruleSet1"];
19->16 [style = bold, label=""];
5->6 [style = solid, label="rule1"];
31->28 [style = solid, label="parse"];
18->24 [style = solid, label="rule1"];
23->24 [style = bold, label=""];
29->33 [style = bold, label=""];
19->16 [style = solid, label="transform2"];
9->0 [style = solid, label="traitSet"];
34->32 [style = solid, label="program"];
5->12 [style = bold, label=""];
11->10 [style = bold, label=""];
1->0 [style = solid, label="transform"];
24->25 [style = bold, label=""];
12->8 [style = solid, label="rule2"];
6->8 [style = bold, label=""];
9->1 [style = solid, label="traitSet"];
25->15 [style = bold, label=""];
22->17 [style = bold, label=""];
0->3 [style = solid, label="transform2"];
20->14 [style = solid, label="traitSet"];
34->32 [style = bold, label=""];
10->9 [style = bold, label=""];
13->22 [style = bold, label=""];
31->28 [style = bold, label=""];
28->27 [style = bold, label=""];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
32->31 [style = bold, label=""];
2->5 [style = bold, label=""];
17->20 [style = bold, label=""];
27->26 [style = bold, label=""];
}
