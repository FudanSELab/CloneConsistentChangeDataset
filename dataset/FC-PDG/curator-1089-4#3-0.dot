digraph {
16 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testPersistentRecursiveWatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.create().forPath(\"/test/a\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BackgroundCallback backgroundCallback = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.create().forPath(\"/test/a/b/c/d\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testPersistentRecursiveWatchInBackground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.create().forPath(\"/test/a/b/c\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT_RECURSIVE).inBackground(backgroundCallback).usingWatcher(watcher).forPath(\"/test\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(backgroundLatch))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "client.create().forPath(\"/test\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(timing.awaitLatch(backgroundLatch))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testPersistentRecursiveWatchInBackground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT_RECURSIVE).usingWatcher(watcher).forPath(\"/test\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CountDownLatch backgroundLatch = new CountDownLatch(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Watcher watcher = null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.create().forPath(\"/test/a/b\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.blockUntilConnected()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CountDownLatch latch = new CountDownLatch(5)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = dashed, label="0"];
4->9 [style = bold, label=""];
5->10 [style = bold, label=""];
1->8 [style = bold, label=""];
9->18 [style = dashed, label="0"];
5->15 [style = bold, label=""];
19->11 [style = bold, label=""];
4->18 [style = bold, label=""];
15->16 [style = bold, label=""];
12->6 [style = bold, label=""];
0->15 [style = solid, label="backgroundLatch"];
8->13 [style = solid, label="latch"];
3->0 [style = bold, label=""];
7->5 [style = bold, label=""];
0->10 [style = solid, label="backgroundLatch"];
10->13 [style = bold, label=""];
11->3 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
9->14 [style = bold, label=""];
8->16 [style = solid, label="latch"];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
18->14 [style = bold, label=""];
2->11 [style = bold, label=""];
13->16 [style = dashed, label="0"];
17->11 [style = bold, label=""];
}
