digraph {
12 [style = filled, label = "Assert.assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.getRootContextCalled.get())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "zk.close()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.stopCalled.get())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.configureCalled.get())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testMetricsProviderLifecycle['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.getRootContextCalled.get())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.startCalled.get())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "testStandalone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "main.start()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testMetricsProviderLifecycle['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ZooKeeper zk = new ZooKeeper(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT,this)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.stopCalled.get())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "ClientBase.setupTestEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "main.deleteDirs()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int CLIENT_PORT = PortAssignment.unique()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "zk.create(\"/foo\",\"foobar\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MetricsProviderCapturingLifecycle.reset()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.startCalled.get())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.configureCalled.get())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "main.shutdown()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "clientConnected = new CountDownLatch(1)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "main.join()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
13->25 [style = bold, label=""];
6->3 [style = bold, label=""];
3->30 [style = dashed, label="0"];
12->23 [style = dashed, label="0"];
11->1 [style = bold, label=""];
1->15 [style = solid, label="CLIENT_PORT"];
1->6 [style = solid, label="CLIENT_PORT"];
11->21 [style = bold, label=""];
4->13 [style = bold, label=""];
18->11 [style = bold, label=""];
1->27 [style = bold, label=""];
1->26 [style = solid, label="CLIENT_PORT"];
12->20 [style = bold, label=""];
1->16 [style = solid, label="CLIENT_PORT"];
7->0 [style = bold, label=""];
19->17 [style = bold, label=""];
27->16 [style = solid, label="configs"];
27->16 [style = bold, label=""];
16->19 [style = bold, label=""];
9->7 [style = bold, label=""];
25->7 [style = bold, label=""];
14->27 [style = dashed, label="0"];
10->6 [style = bold, label=""];
32->33 [style = bold, label=""];
34->11 [style = bold, label=""];
26->2 [style = bold, label=""];
0->10 [style = bold, label=""];
23->22 [style = bold, label=""];
5->28 [style = dashed, label="0"];
17->2 [style = bold, label=""];
8->5 [style = bold, label=""];
5->12 [style = bold, label=""];
30->31 [style = bold, label=""];
28->23 [style = bold, label=""];
19->26 [style = bold, label=""];
3->8 [style = bold, label=""];
15->24 [style = bold, label=""];
1->3 [style = solid, label="CLIENT_PORT"];
21->1 [style = bold, label=""];
2->15 [style = bold, label=""];
1->32 [style = solid, label="CLIENT_PORT"];
15->4 [style = bold, label=""];
1->19 [style = solid, label="CLIENT_PORT"];
1->2 [style = solid, label="CLIENT_PORT"];
9->25 [style = dashed, label="0"];
20->22 [style = dashed, label="0"];
1->32 [style = bold, label=""];
14->16 [style = solid, label="configs"];
1->30 [style = solid, label="CLIENT_PORT"];
17->26 [style = dashed, label="0"];
1->14 [style = bold, label=""];
13->9 [style = bold, label=""];
31->28 [style = bold, label=""];
8->31 [style = dashed, label="0"];
33->19 [style = bold, label=""];
4->24 [style = dashed, label="0"];
29->11 [style = bold, label=""];
24->13 [style = bold, label=""];
1->17 [style = solid, label="CLIENT_PORT"];
6->30 [style = bold, label=""];
}
