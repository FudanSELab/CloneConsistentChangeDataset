digraph {
2 [style = filled, label = "assertThat(result.isSuccessful()).isTrue()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "listAllMembers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "listAllMembers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MemberInformation memberConfig = result.getRuntimeResult().stream().filter(null).findFirst().orElse(null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "listNonExistentMember['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(result.getRuntimeResult().size()).isEqualTo(0)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MemberConfig config = new MemberConfig()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "config.setId(\"locator\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MemberInformation memberConfig = result.getRuntimeResult().stream().filter(null).findFirst().orElse(null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertThat(memberConfig.isCoordinator()).isTrue()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(result.getRuntimeResult().size()).isEqualTo(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClusterManagementResult<MemberConfig,MemberInformation> result = cmsClient.list(config)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(memberConfig.isServer()).isFalse()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
3->1 [style = bold, label=""];
8->3 [style = bold, label=""];
8->12 [style = dashed, label="0"];
1->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
7->5 [style = solid, label="config"];
3->13 [style = dashed, label="0"];
15->5 [style = bold, label=""];
2->12 [style = bold, label=""];
14->7 [style = bold, label=""];
3->10 [style = bold, label=""];
12->13 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
0->4 [style = bold, label=""];
10->0 [style = bold, label=""];
7->15 [style = bold, label=""];
6->7 [style = bold, label=""];
11->7 [style = bold, label=""];
2->8 [style = bold, label=""];
}
