digraph {
2 [style = filled, label = "int numAccurate = validatePrediction(validationData,model)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int nPoints = 10000@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<LabeledPoint> validationData = LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,17,0.1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int nPoints = 100@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "runLassoUsingStaticMethods['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LassoModel model = LassoWithSGD.train(testRDD.rdd(),100,1.0,0.01,1.0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "double A = 2.0@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "runLinearRegressionUsingStaticMethods['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "runLassoUsingStaticMethods['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "double A = 3.0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(numAccurate > nPoints * 4.0 / 5.0)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "double A = 0.0@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = sc.parallelize(LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,42,0.1),2).cache()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "double(( weights = {10,10}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "LinearRegressionModel model = LinearRegressionWithSGD.train(testRDD.rdd(),100)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = sc.parallelize(LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,42,0.1),2).cache()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->1 [style = solid, label="A"];
9->0 [style = bold, label=""];
15->14 [style = bold, label=""];
1->2 [style = solid, label="validationData"];
0->6 [style = bold, label=""];
2->8 [style = solid, label="numAccurate"];
0->12 [style = bold, label=""];
10->3 [style = bold, label=""];
7->2 [style = solid, label="model"];
3->8 [style = solid, label="nPoints"];
0->1 [style = solid, label="weights"];
13->2 [style = solid, label="model"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
1->13 [style = bold, label=""];
11->15 [style = bold, label=""];
4->0 [style = bold, label=""];
6->12 [style = dashed, label="0"];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
4->9 [style = dashed, label="0"];
14->0 [style = bold, label=""];
7->2 [style = bold, label=""];
7->13 [style = dashed, label="0"];
9->1 [style = solid, label="A"];
3->15 [style = dashed, label="0"];
4->14 [style = dashed, label="0"];
15->8 [style = solid, label="nPoints"];
14->1 [style = solid, label="A"];
15->1 [style = solid, label="nPoints"];
3->1 [style = solid, label="nPoints"];
2->8 [style = bold, label=""];
13->2 [style = bold, label=""];
}
