digraph {
28 [style = filled, label = "lookupMap.put(\"testMockForDestroyIsCalledAfterRemove\",container)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "testDestroyIsCalledAfterRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createStrictMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(testContainer,lookupReferencesManager.get(\"test\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testAddGetRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.verify(lookupExtractorFactory)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testAddGetRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "lookupReferencesManager.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "lookupReferencesManager.add(\"testMock\",new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(Optional.of(testContainer),lookupReferencesManager.get(\"test\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "EasyMock.replay(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "lookupMap.put(\"testMockForAddGetRemove\",container)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "lookupReferencesManager.remove(\"testMock\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18->24 [style = bold, label=""];
20->17 [style = bold, label=""];
31->23 [style = bold, label=""];
21->27 [style = bold, label=""];
8->19 [style = bold, label=""];
0->32 [style = dashed, label="0"];
16->7 [style = bold, label=""];
23->26 [style = bold, label=""];
8->26 [style = solid, label="testContainer"];
10->31 [style = dashed, label="0"];
4->27 [style = dashed, label="0"];
3->6 [style = bold, label=""];
26->9 [style = bold, label=""];
8->10 [style = solid, label="testContainer"];
7->20 [style = bold, label=""];
17->22 [style = bold, label=""];
15->16 [style = bold, label=""];
12->1 [style = bold, label=""];
1->13 [style = bold, label=""];
34->30 [style = bold, label=""];
32->33 [style = bold, label=""];
28->14 [style = bold, label=""];
20->17 [style = solid, label="responseHolder"];
23->29 [style = bold, label=""];
13->28 [style = dashed, label="0"];
11->8 [style = solid, label="lookupExtractorFactory"];
8->19 [style = solid, label="testContainer"];
1->28 [style = bold, label=""];
22->18 [style = bold, label=""];
10->26 [style = dashed, label="0"];
30->12 [style = solid, label="lookupExtractorFactory"];
30->29 [style = solid, label="lookupExtractorFactory"];
30->3 [style = bold, label=""];
11->3 [style = bold, label=""];
25->11 [style = bold, label=""];
19->23 [style = bold, label=""];
2->15 [style = bold, label=""];
0->8 [style = bold, label=""];
9->21 [style = bold, label=""];
18->32 [style = bold, label=""];
23->10 [style = bold, label=""];
33->31 [style = bold, label=""];
0->24 [style = dashed, label="0"];
30->32 [style = solid, label="lookupExtractorFactory"];
14->2 [style = bold, label=""];
10->9 [style = bold, label=""];
5->11 [style = bold, label=""];
24->8 [style = bold, label=""];
11->30 [style = dashed, label="0"];
2->7 [style = solid, label="request"];
13->14 [style = bold, label=""];
18->0 [style = bold, label=""];
1->14 [style = solid, label="lookupMap"];
11->12 [style = solid, label="lookupExtractorFactory"];
21->4 [style = bold, label=""];
14->20 [style = solid, label="strResult"];
6->12 [style = bold, label=""];
}
