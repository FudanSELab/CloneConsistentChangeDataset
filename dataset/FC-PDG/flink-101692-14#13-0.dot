digraph {
14 [style = filled, label = "String(( parameters = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bd1cb4@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testShowExecutionPlan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testFrontend.info(parameters)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Configuration configuration = getConfiguration()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String(( parameters = {\"-p\",\"17\",CliFrontendTestUtils.getTestJarPath(),\"--arg\",\"suffix\"}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "fail(\"Program caused an exception: \" + e.getMessage())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(buffer.toString().contains(\"\"parallelism\": \"17\"\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertTrue(buffer.toString().contains(\"\"parallelism\" : 17\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "CliFrontend testFrontend = new CliFrontend(configuration,Collections.singletonList(getCli(configuration)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "e.printStackTrace()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{restoreStdOut()}@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testShowExecutionPlanWithParallelism['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testShowExecutionPlanWithParallelism['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(buffer.toString().contains(\"\"parallelism\": \"4\"\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Exception e@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replaceStdOut()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
11->1 [style = bold, label=""];
4->15 [style = bold, label=""];
14->4 [style = solid, label="parameters"];
3->6 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
8->10 [style = dotted, label="true"];
12->0 [style = bold, label=""];
5->1 [style = bold, label=""];
0->14 [style = bold, label=""];
2->0 [style = bold, label=""];
6->7 [style = solid, label="configuration"];
3->4 [style = solid, label="parameters"];
5->11 [style = dashed, label="0"];
8->9 [style = bold, label=""];
8->9 [style = dotted, label="true"];
3->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
10->1 [style = bold, label=""];
5->15 [style = dashed, label="0"];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
13->0 [style = bold, label=""];
15->1 [style = bold, label=""];
}
