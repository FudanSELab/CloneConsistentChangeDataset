digraph {
0 [style = filled, label = "ConfigData configData2 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Collection<ConfigData> loaded = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,locations).values()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "given(this.loaders.load(resolvedLocation2)).willReturn(configData2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ConfigDataImporter importer = new ConfigDataImporter(this.resolvers,this.loaders)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "loadImportsWhenAlreadyImportedLocationSkipsLoad['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "given(this.resolvers.resolveAll(this.locationResolverContext,locations2and3,this.profiles)).willReturn(resolvedLocations2and3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestLocation resolvedLocation1 = new TestLocation()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<ConfigDataLocation> resolvedLocations2and3 = Arrays.asList(resolvedLocation2,resolvedLocation3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<String> locations1and2 = Arrays.asList(\"test1\",\"test2\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Collection<ConfigData> loaded2and3 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,locations2and3).values()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ConfigData configData2 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "loadImportsResolvesAndLoadsLocations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(loaded).containsExactly(configData2,configData1)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(loaded1and2).containsExactly(configData2,configData1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "ConfigDataImporter importer = new ConfigDataImporter(this.resolvers,this.loaders)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestLocation resolvedLocation2 = new TestLocation()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "loadImportsResolvesAndLoadsLocations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "given(this.loaders.load(this.loaderContext,resolvedLocation2)).willReturn(configData2)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "TestLocation resolvedLocation3 = new TestLocation()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ConfigData configData1 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "given(this.resolvers.resolveAll(this.locationResolverContext,locations1and2,this.profiles)).willReturn(resolvedLocations1and2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "given(this.loaders.load(resolvedLocation1)).willReturn(configData1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Collection<ConfigData> loaded1and2 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,locations1and2).values()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestLocation resolvedLocation1 = new TestLocation()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<ConfigDataLocation> resolvedLocations1and2 = Arrays.asList(resolvedLocation1,resolvedLocation2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Collection<ConfigData> loaded = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations).values()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ConfigData configData1 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "given(this.loaders.load(resolvedLocation3)).willReturn(configData3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ConfigData configData3 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(loaded2and3).containsExactly(configData3)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "List<String> locations2and3 = Arrays.asList(\"test2\",\"test3\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<String> locations = Arrays.asList(\"test1\",\"test2\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "given(this.resolvers.resolveAll(this.locationResolverContext,locations,this.profiles)).willReturn(resolvedLocations)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "given(this.loaders.load(this.loaderContext,resolvedLocation1)).willReturn(configData1)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11->19 [style = solid, label="configData2"];
12->20 [style = dashed, label="0"];
6->21 [style = solid, label="resolvedLocation2"];
28->20 [style = bold, label=""];
4->1 [style = solid, label="configData1"];
11->27 [style = solid, label="configData2"];
25->23 [style = bold, label=""];
19->29 [style = bold, label=""];
25->29 [style = solid, label="configData3"];
8->3 [style = bold, label=""];
5->6 [style = solid, label="resolvedLocation2"];
5->21 [style = solid, label="resolvedLocation1"];
23->32 [style = bold, label=""];
3->6 [style = solid, label="resolvedLocation1"];
22->28 [style = bold, label=""];
17->33 [style = bold, label=""];
20->31 [style = bold, label=""];
18->32 [style = solid, label="resolvedLocations2and3"];
21->23 [style = solid, label="resolvedLocations1and2"];
33->5 [style = bold, label=""];
4->2 [style = solid, label="configData1"];
11->9 [style = bold, label=""];
7->8 [style = bold, label=""];
27->22 [style = bold, label=""];
1->26 [style = solid, label="configData1"];
32->26 [style = bold, label=""];
21->18 [style = bold, label=""];
0->11 [style = solid, label="configData2"];
1->11 [style = bold, label=""];
4->0 [style = bold, label=""];
4->16 [style = solid, label="configData1"];
6->18 [style = solid, label="resolvedLocation2"];
25->22 [style = solid, label="configData3"];
6->4 [style = bold, label=""];
26->27 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
30->21 [style = bold, label=""];
6->10 [style = solid, label="resolvedLocations"];
5->6 [style = bold, label=""];
10->16 [style = bold, label=""];
18->1 [style = bold, label=""];
1->16 [style = dashed, label="0"];
11->14 [style = dashed, label="0"];
24->17 [style = bold, label=""];
0->2 [style = solid, label="configData2"];
13->2 [style = bold, label=""];
8->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
14->9 [style = bold, label=""];
9->12 [style = bold, label=""];
12->13 [style = dashed, label="0"];
10->1 [style = bold, label=""];
30->18 [style = solid, label="resolvedLocation3"];
15->8 [style = bold, label=""];
31->19 [style = bold, label=""];
1->19 [style = solid, label="configData1"];
11->25 [style = bold, label=""];
9->13 [style = bold, label=""];
0->14 [style = solid, label="configData2"];
6->30 [style = bold, label=""];
}
