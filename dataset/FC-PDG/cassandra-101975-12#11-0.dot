digraph {
25 [style = filled, label = "testChangeMaxIndexInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "assertEquals(originalMinIndexInterval * 2,sstable.getEffectiveIndexInterval(),0.001)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace * 1.5))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 4)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@55@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "double previousInterval = sstable.getEffectiveIndexInterval()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(originalMinIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String ksname = KEYSPACE1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sstables = new ArrayList<>(cfs.getLiveSSTables())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() * 2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testChangeMinIndexInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testChangeMaxIndexInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Keyspace keyspace = Keyspace.open(ksname)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<SSTableReader> sstables = new ArrayList<>(cfs.getLiveSSTables())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int numSSTables = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),summarySpace)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int numRows = 256@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace / 2.0))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sstable.overrideReadMeter(new RestorableMeter(100.0,100.0))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String cfname = CF_STANDARDLOWiINTERVAL@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int previousSize = sstable.getIndexSummarySize()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval / 2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(previousInterval * (1.0 / 1.5),sstable.getEffectiveIndexInterval(),0.001)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfname)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "createSSTables(ksname,cfname,numSSTables,numRows)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<SSTableReader> sstables = new ArrayList<>(cfs.getSSTables())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "SSTableReader sstable = cfs.getSSTables().iterator().next()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(previousSize * 1.5,(double)sstable.getIndexSummarySize(),1)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "long summarySpace = sstable.getIndexSummaryOffHeapSize()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "cfs.metadata.maxIndexInterval(originalMinIndexInterval * 4)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() / 2)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sstables = new ArrayList<>(cfs.getLiveSSTables())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(numRows / (originalMinIndexInterval * 2),sstable.getIndexSummarySize())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(numRows / originalMinIndexInterval,sstable.getIndexSummarySize())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->44 [style = solid, label="numRows"];
30->58 [style = solid, label="summarySpace"];
15->21 [style = bold, label=""];
44->35 [style = bold, label=""];
56->27 [style = bold, label=""];
20->53 [style = solid, label="numRows"];
43->42 [style = bold, label=""];
27->58 [style = bold, label=""];
30->41 [style = solid, label="summarySpace"];
3->16 [style = bold, label=""];
7->8 [style = bold, label=""];
45->48 [style = bold, label=""];
20->5 [style = solid, label="numRows"];
13->24 [style = dashed, label="0"];
12->10 [style = bold, label=""];
38->56 [style = solid, label="previousInterval"];
22->0 [style = bold, label=""];
1->21 [style = bold, label=""];
24->11 [style = bold, label=""];
37->48 [style = bold, label=""];
21->1 [style = bold, label=""];
47->51 [style = bold, label=""];
18->0 [style = bold, label=""];
30->33 [style = solid, label="summarySpace"];
54->52 [style = bold, label=""];
9->17 [style = solid, label="numSSTables"];
53->52 [style = bold, label=""];
28->54 [style = bold, label=""];
49->38 [style = bold, label=""];
20->49 [style = solid, label="numRows"];
2->9 [style = bold, label=""];
13->11 [style = bold, label=""];
33->29 [style = bold, label=""];
42->56 [style = bold, label=""];
26->37 [style = bold, label=""];
58->34 [style = bold, label=""];
14->15 [style = bold, label=""];
5->11 [style = bold, label=""];
29->57 [style = bold, label=""];
41->43 [style = bold, label=""];
8->16 [style = solid, label="ksname"];
4->24 [style = bold, label=""];
30->33 [style = bold, label=""];
18->22 [style = dashed, label="0"];
0->12 [style = bold, label=""];
4->13 [style = bold, label=""];
8->3 [style = bold, label=""];
9->20 [style = bold, label=""];
34->55 [style = bold, label=""];
10->6 [style = bold, label=""];
11->5 [style = bold, label=""];
32->8 [style = bold, label=""];
51->36 [style = bold, label=""];
23->6 [style = bold, label=""];
31->39 [style = bold, label=""];
38->40 [style = bold, label=""];
10->23 [style = dashed, label="0"];
50->26 [style = bold, label=""];
20->17 [style = bold, label=""];
52->53 [style = bold, label=""];
3->17 [style = solid, label="cfname"];
8->17 [style = solid, label="ksname"];
20->45 [style = solid, label="numRows"];
6->19 [style = bold, label=""];
5->14 [style = bold, label=""];
45->28 [style = bold, label=""];
16->2 [style = bold, label=""];
17->22 [style = bold, label=""];
53->31 [style = bold, label=""];
46->47 [style = bold, label=""];
40->42 [style = solid, label="previousSize"];
3->2 [style = solid, label="cfname"];
0->50 [style = bold, label=""];
39->30 [style = bold, label=""];
55->44 [style = bold, label=""];
48->45 [style = bold, label=""];
40->41 [style = bold, label=""];
20->1 [style = solid, label="numRows"];
20->17 [style = solid, label="numRows"];
57->49 [style = bold, label=""];
25->8 [style = bold, label=""];
12->23 [style = bold, label=""];
19->4 [style = bold, label=""];
17->18 [style = bold, label=""];
35->46 [style = bold, label=""];
}
