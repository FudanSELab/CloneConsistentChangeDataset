digraph {
4 [style = filled, label = "g1.addURLs(m2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CustomPieURLGenerator g1 = new CustomPieURLGenerator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CustomPieURLGenerator g2 = (CustomPieURLGenerator)g1.clone()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(g1.getClass() == g2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "m2.put(\"B\",\"XYZ\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(g1 != g2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map m1 = new HashMap()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(g1.equals(g2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(g1.equals(g2))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "m1.put(\"A\",\"http://www.jfree.org/\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map m2 = new HashMap()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Map<String,String> m1 = new HashMap<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Map<String,String> m2 = new HashMap<>()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "g1.addURLs(m1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(g1,g2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CustomPieURLGenerator g2 = (CustomPieURLGenerator)TestUtils.serialised(g1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->4 [style = solid, label="m2"];
15->4 [style = solid, label="m2"];
8->0 [style = solid, label="g2"];
10->15 [style = bold, label=""];
8->10 [style = solid, label="g2"];
5->17 [style = solid, label="g1"];
11->6 [style = bold, label=""];
10->3 [style = bold, label=""];
9->17 [style = bold, label=""];
5->11 [style = solid, label="g1"];
1->9 [style = solid, label="m1"];
3->12 [style = bold, label=""];
9->8 [style = bold, label=""];
1->7 [style = bold, label=""];
4->0 [style = bold, label=""];
13->9 [style = solid, label="m1"];
1->13 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->11 [style = solid, label="g2"];
5->1 [style = bold, label=""];
5->18 [style = solid, label="g1"];
12->4 [style = bold, label=""];
13->7 [style = bold, label=""];
11->18 [style = dashed, label="0"];
6->10 [style = bold, label=""];
5->13 [style = bold, label=""];
16->5 [style = bold, label=""];
3->15 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
15->12 [style = bold, label=""];
17->18 [style = solid, label="g2"];
8->11 [style = bold, label=""];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
14->5 [style = bold, label=""];
}
