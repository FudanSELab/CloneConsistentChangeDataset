digraph {
7 [style = filled, label = "String logOutput = testTaskListener.outputStream.toString()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Fingerprint fp = new TestFingerprint(false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cleanupThread.execute(testTaskListener)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "configureLocalTestStorage(fp)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "TestFingperprintFacet facet = new TestFingperprintFacet(fp,System.currentTimeMillis(),false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "FingerprintCleanupThread cleanupThread = new TestFingerprintCleanupThread(fp)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testUnblockedFacetsDontBlockDeletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(fpFile.toFile(),is(not(aReadableFile())))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FingerprintCleanupThread cleanupThread = new FingerprintCleanupThread()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(logOutput,containsString(\"blocked deletion of\"))@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testBlockingFacetBlocksDeletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testBlockingFacetBlocksDeletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "createFolderStructure()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestTaskListener testTaskListener = new TestTaskListener()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cleanupThread.execute(testTaskListener)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestFingperprintFacet facet = new TestFingperprintFacet(fp,System.currentTimeMillis(),true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "fp.facets.add(facet)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fp.facets.setOwner(Saveable.NOOP)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
10->9 [style = solid, label="testTaskListener"];
4->3 [style = bold, label=""];
4->1 [style = solid, label="fp"];
17->5 [style = bold, label=""];
0->6 [style = bold, label=""];
10->2 [style = solid, label="testTaskListener"];
16->6 [style = bold, label=""];
9->7 [style = solid, label="logOutput"];
11->12 [style = bold, label=""];
2->9 [style = bold, label=""];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
5->1 [style = bold, label=""];
4->17 [style = solid, label="fp"];
8->5 [style = solid, label="facet"];
7->13 [style = solid, label="logOutput"];
8->5 [style = bold, label=""];
4->8 [style = solid, label="fp"];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
17->5 [style = solid, label="facet"];
2->15 [style = bold, label=""];
10->4 [style = bold, label=""];
8->17 [style = dashed, label="0"];
3->17 [style = bold, label=""];
1->2 [style = bold, label=""];
5->11 [style = bold, label=""];
14->6 [style = bold, label=""];
4->11 [style = solid, label="fp"];
}
