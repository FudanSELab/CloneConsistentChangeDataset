digraph {
10 [style = filled, label = "String root = String.format(\"/%s/%s\",clusterName,PropertyType.PROPERTYSTORE.name())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String path = String.format(\"%s/%d\",root,i)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<ZNRecord>(baseAccessor,root,fallbackRoot)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String fallbackRoot = String.format(\"/%s/%s\",clusterName,\"HELIX_PROPERTYSTORE\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertNotNull(record)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(record.getSimpleField(\"key\"),\"value\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<>(baseAccessor,root,fallbackRoot)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Assert.assertTrue(succeed)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "String path = String.format(\"/%d\",0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean succeed = store.update(path,new MyDataUpdater(\"0\"),AccessOption.PERSISTENT)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should exist under new location\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(record.getId(),\"new0\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "baseAccessor.create(path,new ZNRecord(\"new\" + i),AccessOption.PERSISTENT)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "deleteCluster(clusterName)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertNotNull(record)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String path = String.format(\"%s/%d\",fallbackRoot,i)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<>(_gZkClient)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testSingleUpdateUsingNewPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "boolean succeed = store.set(path,record,AccessOption.PERSISTENT)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "record = baseAccessor.get(String.format(\"%s%s\",root,path),null,0)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testSingleSet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testSingleUpdateUsingNewPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ZNRecord record = new ZNRecord(\"new0\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "record = baseAccessor.get(String.format(\"%s%s\",root,path),null,0)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should exist under fallback location\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertNotNull(record)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertNotNull(record.getSimpleField(\"key\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "baseAccessor.create(path,new ZNRecord(Integer.toString(i)),AccessOption.PERSISTENT)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertTrue(succeed)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "path = String.format(\"%s/%d\",fallbackRoot,i)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42->41 [style = solid, label="path"];
42->41 [style = bold, label=""];
21->42 [style = bold, label=""];
12->5 [style = bold, label=""];
16->42 [style = solid, label="i"];
19->39 [style = solid, label="succeed"];
21->15 [style = dotted, label="true"];
8->38 [style = solid, label="fallbackRoot"];
20->26 [style = bold, label=""];
26->34 [style = bold, label=""];
16->9 [style = solid, label="i"];
37->19 [style = solid, label="record"];
25->14 [style = bold, label=""];
16->15 [style = solid, label="i"];
10->9 [style = solid, label="root"];
9->35 [style = bold, label=""];
9->16 [style = bold, label=""];
40->23 [style = bold, label=""];
29->18 [style = bold, label=""];
7->42 [style = dashed, label="0"];
17->18 [style = solid, label="path"];
28->9 [style = solid, label="baseAccessor"];
8->17 [style = solid, label="fallbackRoot"];
2->23 [style = bold, label=""];
10->23 [style = solid, label="root"];
19->1 [style = bold, label=""];
36->24 [style = bold, label=""];
10->8 [style = bold, label=""];
4->15 [style = solid, label="i"];
15->0 [style = bold, label=""];
21->7 [style = dotted, label="true"];
11->13 [style = bold, label=""];
12->5 [style = solid, label="clusterName"];
27->17 [style = bold, label=""];
39->38 [style = bold, label=""];
33->32 [style = solid, label="baseAccessor"];
1->29 [style = solid, label="succeed"];
14->11 [style = bold, label=""];
16->7 [style = solid, label="i"];
5->10 [style = bold, label=""];
8->28 [style = bold, label=""];
23->25 [style = bold, label=""];
21->42 [style = dotted, label="true"];
28->33 [style = dashed, label="0"];
10->32 [style = solid, label="root"];
16->21 [style = solid, label="i"];
21->0 [style = dotted, label="true"];
18->2 [style = solid, label="record"];
8->27 [style = solid, label="fallbackRoot"];
30->27 [style = dashed, label="0"];
4->21 [style = bold, label=""];
19->39 [style = bold, label=""];
17->30 [style = solid, label="path"];
17->37 [style = bold, label=""];
35->27 [style = solid, label="path"];
24->12 [style = solid, label="className"];
14->11 [style = solid, label="record"];
30->19 [style = bold, label=""];
21->9 [style = bold, label=""];
38->18 [style = bold, label=""];
21->9 [style = dotted, label="true"];
35->17 [style = solid, label="path"];
10->27 [style = solid, label="root"];
12->34 [style = solid, label="clusterName"];
16->41 [style = solid, label="i"];
17->14 [style = solid, label="path"];
4->21 [style = solid, label="i"];
8->42 [style = solid, label="fallbackRoot"];
12->8 [style = solid, label="clusterName"];
21->7 [style = bold, label=""];
4->0 [style = solid, label="i"];
21->16 [style = dotted, label="true"];
32->17 [style = bold, label=""];
22->12 [style = solid, label="methodName"];
16->0 [style = solid, label="i"];
4->7 [style = solid, label="i"];
8->19 [style = solid, label="fallbackRoot"];
8->33 [style = bold, label=""];
4->9 [style = solid, label="i"];
10->7 [style = solid, label="root"];
4->42 [style = solid, label="i"];
21->27 [style = bold, label=""];
26->3 [style = bold, label=""];
31->24 [style = bold, label=""];
18->40 [style = bold, label=""];
33->4 [style = bold, label=""];
23->25 [style = solid, label="record"];
4->41 [style = solid, label="i"];
6->24 [style = bold, label=""];
38->18 [style = solid, label="record"];
12->3 [style = solid, label="clusterName"];
21->41 [style = dotted, label="true"];
4->16 [style = solid, label="i"];
35->19 [style = solid, label="path"];
27->32 [style = dashed, label="0"];
12->10 [style = solid, label="clusterName"];
7->15 [style = bold, label=""];
41->16 [style = bold, label=""];
1->29 [style = bold, label=""];
8->0 [style = solid, label="fallbackRoot"];
17->1 [style = solid, label="path"];
0->9 [style = bold, label=""];
35->27 [style = bold, label=""];
8->9 [style = solid, label="fallbackRoot"];
17->19 [style = solid, label="path"];
10->30 [style = solid, label="root"];
8->32 [style = solid, label="fallbackRoot"];
17->30 [style = bold, label=""];
18->2 [style = bold, label=""];
24->22 [style = bold, label=""];
18->38 [style = dashed, label="0"];
7->15 [style = solid, label="path"];
35->23 [style = solid, label="path"];
28->27 [style = solid, label="baseAccessor"];
12->13 [style = solid, label="clusterName"];
34->3 [style = bold, label=""];
25->11 [style = bold, label=""];
22->12 [style = bold, label=""];
16->21 [style = bold, label=""];
21->32 [style = bold, label=""];
8->18 [style = solid, label="fallbackRoot"];
35->38 [style = solid, label="path"];
37->19 [style = bold, label=""];
0->9 [style = solid, label="path"];
10->14 [style = solid, label="root"];
28->4 [style = bold, label=""];
13->20 [style = bold, label=""];
}
