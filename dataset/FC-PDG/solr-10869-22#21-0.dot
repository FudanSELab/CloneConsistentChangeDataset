digraph {
95 [style = filled, label = "rollupStream = new RollupStream(stream,buckets1,metrics1)@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(4,mini.doubleValue(),0.001)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(17,sumi.doubleValue(),0.001)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"hello4\",bucket)@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\",\"partitionKeys\",\"a_s\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "String bucket = tuple.getString(\"a_s\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(13,maxi.doubleValue(),0.001)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "tuple = tuples.get(0)@@@90@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(2,count.doubleValue(),0.001)@@@79@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(14,mini.doubleValue(),0.01)@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(7.5,avgi.doubleValue(),0.001)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "ParallelStream parallelStream = parallelStream(rollupStream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "Tuple tuple = tuples.get(0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Double mini = tuple.getDouble(\"min(a_i)\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
114 [style = filled, label = "assert(tuples.size() == 3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(10,minf.doubleValue(),0.01)@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "tuple = tuples.get(1)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Double avgi = tuple.getDouble(\"avg(a_i)\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "assertEquals(10,maxf.doubleValue(),0.01)@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@92@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "List<Tuple> tuples = getTuples(rollupStream)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "Double avgf = tuple.getDouble(\"avg(a_f)\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(15,sumi.longValue())@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertEquals(14,maxi.doubleValue(),0.01)@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "assertEquals(2,count.doubleValue(),0.01)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"hello3\",bucket)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Double maxf = tuple.getDouble(\"max(a_f)\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(9,maxf.doubleValue(),0.001)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testParallelRollupStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(4,mini.doubleValue(),0.01)@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(14,maxi.doubleValue(),0.001)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "assertEquals(14,avgi.doubleValue(),0.01)@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(11,sumf.doubleValue(),0.01)@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(26,sumf.doubleValue(),0.001)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(38,sumi.doubleValue(),0.001)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(1,minf.doubleValue(),0.001)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(\"hello0\",bucket)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Double sumi = tuple.getDouble(\"sum(a_i)\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "attachStreamFactory(parallelStream)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(4,minf.doubleValue(),0.001)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(4,tuples.size())@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "Bucket(( buckets1 = {new Bucket(\"a_s\")}@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "assertEquals(7.5,avgi.doubleValue(),0.01)@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(0,mini.doubleValue(),0.001)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(5.5,avgf.doubleValue(),0.001)@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "new UpdateRequest().add(id,\"12\",\"a_s\",null,\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertEquals(7,maxf.doubleValue(),0.01)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\",\"qt\",\"/export\")@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(3,mini.doubleValue(),0.001)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(11,maxi.doubleValue(),0.001)@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "Metric(( metrics1 = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(5.5,avgf.doubleValue(),0.01)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "tuples = getTuples(rollupStream)@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<Tuple> tuples = getTuples(parallelStream)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "RollupStream rollupStream = new RollupStream(stream,buckets,metrics)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertEquals(10,sumf.doubleValue(),0.01)@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "tuple = tuples.get(2)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(1,count.doubleValue(),0.01)@@@109@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(14,sumi.doubleValue(),0.01)@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(11,sumf.doubleValue(),0.001)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(4.25,avgi.doubleValue(),0.001)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(3,minf.doubleValue(),0.001)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(3,tuples.size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(18,sumf.doubleValue(),0.001)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(\"NULL\",tuple.getString(\"a_s\"))@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Double maxi = tuple.getDouble(\"max(a_i)\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(9.5,avgi.doubleValue(),0.001)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertEquals(11,maxi.doubleValue(),0.01)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "assertEquals(4,minf.doubleValue(),0.01)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Double count = tuple.getDouble(\"count(*)\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Double sumf = tuple.getDouble(\"sum(a_f)\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "testParallelRollupStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "assertEquals(6.5,avgf.doubleValue(),0.001)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@93@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(10,maxf.doubleValue(),0.001)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(4.5,avgf.doubleValue(),0.001)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertEquals(10,avgf.doubleValue(),0.01)@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Metric(( metrics = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Bucket(( buckets = {new Bucket(\"a_s\")}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "testRollupStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@96@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Double minf = tuple.getDouble(\"min(a_f)\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(7,maxf.doubleValue(),0.001)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104->114 [style = bold, label=""];
69->63 [style = bold, label=""];
7->42 [style = bold, label=""];
12->86 [style = dashed, label="0"];
37->51 [style = bold, label=""];
33->52 [style = bold, label=""];
99->78 [style = bold, label=""];
40->28 [style = bold, label=""];
86->96 [style = bold, label=""];
71->22 [style = bold, label=""];
64->17 [style = bold, label=""];
15->67 [style = dashed, label="0"];
57->66 [style = bold, label=""];
94->90 [style = bold, label=""];
20->25 [style = bold, label=""];
36->21 [style = bold, label=""];
96->103 [style = bold, label=""];
51->59 [style = bold, label=""];
73->41 [style = bold, label=""];
7->43 [style = solid, label="stream"];
11->69 [style = bold, label=""];
28->39 [style = bold, label=""];
103->97 [style = bold, label=""];
24->19 [style = dashed, label="0"];
95->113 [style = bold, label=""];
34->55 [style = bold, label=""];
116->79 [style = bold, label=""];
23->38 [style = bold, label=""];
45->13 [style = bold, label=""];
67->24 [style = bold, label=""];
7->74 [style = dashed, label="0"];
49->33 [style = bold, label=""];
2->69 [style = solid, label="bucket"];
61->3 [style = solid, label="bucket"];
59->26 [style = bold, label=""];
4->3 [style = bold, label=""];
47->91 [style = bold, label=""];
57->90 [style = dashed, label="0"];
67->115 [style = bold, label=""];
105->83 [style = bold, label=""];
26->18 [style = bold, label=""];
31->61 [style = bold, label=""];
65->28 [style = solid, label="parallelStream"];
101->100 [style = bold, label=""];
39->16 [style = bold, label=""];
44->4 [style = bold, label=""];
56->68 [style = bold, label=""];
87->111 [style = bold, label=""];
25->14 [style = bold, label=""];
72->17 [style = solid, label="bucket"];
23->19 [style = solid, label="bucket"];
50->91 [style = dashed, label="0"];
16->53 [style = bold, label=""];
108->116 [style = bold, label=""];
75->76 [style = bold, label=""];
91->7 [style = bold, label=""];
72->29 [style = bold, label=""];
50->74 [style = bold, label=""];
32->2 [style = bold, label=""];
112->106 [style = bold, label=""];
74->43 [style = solid, label="stream"];
55->6 [style = bold, label=""];
43->104 [style = solid, label="rollupStream"];
76->50 [style = bold, label=""];
82->88 [style = bold, label=""];
62->60 [style = bold, label=""];
60->45 [style = bold, label=""];
50->7 [style = solid, label="sParamsA"];
18->31 [style = bold, label=""];
27->62 [style = bold, label=""];
89->80 [style = bold, label=""];
2->56 [style = bold, label=""];
95->113 [style = solid, label="rollupStream"];
35->47 [style = bold, label=""];
68->9 [style = bold, label=""];
1->34 [style = bold, label=""];
61->32 [style = bold, label=""];
65->40 [style = bold, label=""];
80->87 [style = bold, label=""];
92->95 [style = solid, label="metrics1"];
106->102 [style = bold, label=""];
42->43 [style = solid, label="buckets"];
102->84 [style = bold, label=""];
109->95 [style = solid, label="buckets1"];
46->94 [style = dashed, label="0"];
22->44 [style = bold, label=""];
88->112 [style = bold, label=""];
38->1 [style = bold, label=""];
93->101 [style = bold, label=""];
110->77 [style = bold, label=""];
43->65 [style = bold, label=""];
91->7 [style = solid, label="sParamsA"];
0->43 [style = bold, label=""];
54->37 [style = bold, label=""];
107->93 [style = bold, label=""];
83->62 [style = solid, label="bucket"];
53->45 [style = solid, label="bucket"];
111->108 [style = bold, label=""];
115->94 [style = bold, label=""];
30->64 [style = bold, label=""];
0->43 [style = solid, label="metrics"];
109->92 [style = bold, label=""];
77->82 [style = bold, label=""];
97->109 [style = bold, label=""];
9->71 [style = bold, label=""];
83->16 [style = bold, label=""];
114->105 [style = bold, label=""];
74->42 [style = bold, label=""];
43->65 [style = solid, label="rollupStream"];
50->74 [style = solid, label="sParamsA"];
6->30 [style = bold, label=""];
79->107 [style = bold, label=""];
15->58 [style = bold, label=""];
42->0 [style = bold, label=""];
48->49 [style = bold, label=""];
3->11 [style = bold, label=""];
58->115 [style = dashed, label="0"];
46->57 [style = bold, label=""];
8->12 [style = bold, label=""];
81->110 [style = bold, label=""];
90->99 [style = bold, label=""];
53->73 [style = bold, label=""];
24->15 [style = bold, label=""];
66->99 [style = dashed, label="0"];
113->98 [style = bold, label=""];
103->97 [style = solid, label="sParamsA"];
98->89 [style = bold, label=""];
66->8 [style = bold, label=""];
97->95 [style = solid, label="stream"];
63->36 [style = bold, label=""];
70->27 [style = bold, label=""];
58->46 [style = bold, label=""];
29->23 [style = bold, label=""];
10->19 [style = bold, label=""];
65->40 [style = solid, label="parallelStream"];
47->50 [style = bold, label=""];
21->5 [style = bold, label=""];
52->72 [style = bold, label=""];
14->70 [style = bold, label=""];
43->104 [style = bold, label=""];
5->48 [style = bold, label=""];
92->95 [style = bold, label=""];
78->86 [style = bold, label=""];
100->81 [style = bold, label=""];
8->78 [style = dashed, label="0"];
47->76 [style = dashed, label="0"];
85->47 [style = bold, label=""];
13->54 [style = bold, label=""];
19->67 [style = bold, label=""];
41->20 [style = bold, label=""];
17->10 [style = bold, label=""];
50->7 [style = bold, label=""];
}
