digraph {
11 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testIgnoreZValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(ignoreZValue,equalTo(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "ignoreZValue = ((LegacyGeoShapeFieldMapper)fieldMapper).ignoreZValue().value()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "boolean ignoreZValue = ((GeoShapeFieldMapper)fieldMapper).ignoreZValue().value()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"tree\",\"quadtree\").field(IGNORE_Z_VALUE.getPreferredName(),\"false\").endObject().endObject().endObject().endObject())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(ignoreZValue,equalTo(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(ignoreZValue,equalTo(false))@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFieldWarnings(\"strategy\",\"tree\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "defaultMapper = createIndex(\"test2\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean ignoreZValue = ((LegacyGeoShapeFieldMapper)fieldMapper).ignoreZValue().value()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testIgnoreZValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(ignoreZValue,equalTo(true))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ignoreZValue = ((GeoShapeFieldMapper)fieldMapper).ignoreZValue().value()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertFieldWarnings(\"strategy\",\"tree\")@@@15@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"strategy\",\"recursive\").field(IGNORE_Z_VALUE.getPreferredName(),\"true\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(IGNORE_Z_VALUE.getPreferredName(),\"false\").endObject().endObject().endObject().endObject())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testIgnoreZValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(IGNORE_Z_VALUE.getPreferredName(),\"true\").endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->22 [style = solid, label="fieldMapper"];
1->23 [style = dashed, label="0"];
17->15 [style = solid, label="fieldMapper"];
11->3 [style = bold, label=""];
11->22 [style = bold, label=""];
8->9 [style = bold, label=""];
6->4 [style = bold, label=""];
26->13 [style = bold, label=""];
3->22 [style = dashed, label="0"];
2->12 [style = solid, label="mapping"];
19->20 [style = bold, label=""];
1->0 [style = solid, label="ignoreZValue"];
8->9 [style = solid, label="ignoreZValue"];
3->1 [style = solid, label="ignoreZValue"];
27->9 [style = bold, label=""];
4->8 [style = bold, label=""];
6->4 [style = solid, label="fieldMapper"];
6->25 [style = solid, label="fieldMapper"];
23->0 [style = bold, label=""];
3->1 [style = bold, label=""];
7->13 [style = solid, label="mapping"];
21->12 [style = bold, label=""];
18->16 [style = solid, label="fieldMapper"];
4->25 [style = dashed, label="0"];
7->13 [style = bold, label=""];
8->27 [style = dashed, label="0"];
21->12 [style = solid, label="mapping"];
26->13 [style = solid, label="mapping"];
13->11 [style = bold, label=""];
27->9 [style = solid, label="ignoreZValue"];
11->3 [style = solid, label="fieldMapper"];
17->15 [style = bold, label=""];
14->4 [style = solid, label="ignoreZValue"];
16->14 [style = bold, label=""];
18->16 [style = bold, label=""];
0->21 [style = bold, label=""];
6->25 [style = bold, label=""];
15->3 [style = bold, label=""];
2->21 [style = dashed, label="0"];
20->17 [style = bold, label=""];
22->23 [style = bold, label=""];
0->2 [style = bold, label=""];
14->4 [style = bold, label=""];
25->27 [style = bold, label=""];
7->26 [style = dashed, label="0"];
24->26 [style = bold, label=""];
0->18 [style = bold, label=""];
5->7 [style = bold, label=""];
2->12 [style = bold, label=""];
12->6 [style = bold, label=""];
9->10 [style = bold, label=""];
1->0 [style = bold, label=""];
23->0 [style = solid, label="ignoreZValue"];
}
