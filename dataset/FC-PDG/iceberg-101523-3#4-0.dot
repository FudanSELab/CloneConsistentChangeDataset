digraph {
19 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ltEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "return ROWS_CANNOT_MATCH@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "eq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ltEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "T lower = Conversions.fromByteBuffer(ref.type(),lowerBounds.get(id))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return ROWS_MIGHT_MATCH@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "cmp < 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return ROWS_CANNOT_MATCH@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cmp > 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "T lower = Conversions.fromByteBuffer(field.type(),lowerBounds.get(id))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->23 [style = dashed, label="0"];
13->10 [style = bold, label=""];
14->3 [style = bold, label=""];
14->2 [style = dotted, label="true"];
17->5 [style = bold, label=""];
15->10 [style = bold, label=""];
19->18 [style = bold, label=""];
9->0 [style = dotted, label="true"];
7->17 [style = bold, label=""];
21->20 [style = dotted, label="true"];
9->0 [style = bold, label=""];
4->17 [style = bold, label=""];
14->12 [style = dotted, label="true"];
17->18 [style = dotted, label="true"];
15->10 [style = solid, label="lower"];
22->23 [style = dotted, label="true"];
11->1 [style = dotted, label="true"];
3->17 [style = solid, label="id"];
4->7 [style = dotted, label="true"];
0->15 [style = dashed, label="0"];
3->19 [style = solid, label="id"];
9->17 [style = bold, label=""];
8->6 [style = bold, label=""];
17->19 [style = bold, label=""];
4->7 [style = bold, label=""];
19->18 [style = solid, label="upper"];
20->5 [style = bold, label=""];
0->10 [style = solid, label="lower"];
3->9 [style = bold, label=""];
8->6 [style = solid, label="field"];
21->5 [style = bold, label=""];
22->3 [style = bold, label=""];
10->4 [style = solid, label="cmp"];
0->10 [style = bold, label=""];
3->15 [style = solid, label="id"];
7->5 [style = bold, label=""];
21->20 [style = bold, label=""];
3->8 [style = solid, label="id"];
11->2 [style = dotted, label="true"];
11->3 [style = bold, label=""];
9->15 [style = bold, label=""];
3->8 [style = bold, label=""];
22->16 [style = dotted, label="true"];
9->13 [style = dotted, label="true"];
0->13 [style = dashed, label="0"];
17->19 [style = dotted, label="true"];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
9->4 [style = dotted, label="true"];
13->10 [style = solid, label="lower"];
3->0 [style = solid, label="id"];
9->15 [style = dotted, label="true"];
18->21 [style = bold, label=""];
6->9 [style = bold, label=""];
17->21 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
3->13 [style = solid, label="id"];
4->5 [style = bold, label=""];
3->6 [style = solid, label="id"];
18->21 [style = solid, label="cmp"];
3->9 [style = solid, label="id"];
9->13 [style = bold, label=""];
}
