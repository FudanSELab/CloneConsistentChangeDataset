digraph {
1 [style = filled, label = "throw new IllegalArgumentException(\"Empty list not permitted.\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < count@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<Integer> indices@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkAxisIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Object item = indices.get(i)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List indices@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int count = indices.size()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Set<Integer> set = new HashSet<Integer>()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "set.add(item)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkAxisIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "count == 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "set.contains(item)@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw new IllegalArgumentException(\"Indices must be unique.\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "HashSet set = new HashSet()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "set.add(item)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "throw new IllegalArgumentException(\"Indices must be unique.\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new IllegalArgumentException(\"Indices must be Integer instances.\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Set<Integer> set = new HashSet<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "indices == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!(item instanceof Integer)@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "checkAxisIndices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "set.contains(item)@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
19->4 [style = solid, label="indices"];
4->5 [style = dotted, label="true"];
8->19 [style = dashed, label="0"];
23->20 [style = bold, label=""];
22->18 [style = dotted, label="true"];
24->15 [style = solid, label="i"];
18->23 [style = bold, label=""];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
11->4 [style = bold, label=""];
23->21 [style = dotted, label="true"];
13->19 [style = dotted, label="true"];
10->3 [style = dotted, label="true"];
8->4 [style = solid, label="indices"];
15->20 [style = dotted, label="true"];
15->22 [style = dotted, label="true"];
10->3 [style = bold, label=""];
20->14 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
7->4 [style = bold, label=""];
15->14 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
15->16 [style = bold, label=""];
16->22 [style = bold, label=""];
6->2 [style = solid, label="count"];
22->23 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
2->12 [style = bold, label=""];
1->17 [style = bold, label=""];
14->16 [style = solid, label="i"];
6->2 [style = bold, label=""];
16->23 [style = solid, label="item"];
0->10 [style = bold, label=""];
12->10 [style = bold, label=""];
17->24 [style = bold, label=""];
22->18 [style = bold, label=""];
21->20 [style = bold, label=""];
5->6 [style = bold, label=""];
24->14 [style = solid, label="i"];
23->21 [style = bold, label=""];
2->1 [style = dotted, label="true"];
16->20 [style = solid, label="item"];
9->17 [style = dashed, label="0"];
10->0 [style = bold, label=""];
1->12 [style = bold, label=""];
6->15 [style = solid, label="count"];
11->8 [style = dotted, label="true"];
14->15 [style = bold, label=""];
9->12 [style = dashed, label="0"];
14->15 [style = solid, label="i"];
15->23 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
4->5 [style = bold, label=""];
13->4 [style = bold, label=""];
24->16 [style = solid, label="i"];
24->15 [style = bold, label=""];
}
