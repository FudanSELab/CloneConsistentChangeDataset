digraph {
17 [style = filled, label = "slave1.toComputer().isConnecting()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(result,failedWith(5))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertThat(slave1.toComputer().isOnline(),equalTo(true))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "onlineNodeManyShouldFailIfANodeDoesNotExist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "System.out.println(\"Waiting until aNode2 going online is in progress...\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "slave1.toComputer().waitUntilOnline()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DumbSlave slave2 = j.createSlave(\"aNode2\",\"\",null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "slave2.toComputer().isConnecting()@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created: No such agent \"never_created\" exists. Did you mean \"aNode1\"?\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(slave2.toComputer().isOnline(),equalTo(true))@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "connectNodeManyShouldFailIfANodeDoesNotExist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode1\",\"aNode2\",\"never_created\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "System.out.println(\"Waiting until aNode1 going online is in progress...\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "slave2.toComputer().waitUntilOnline()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "connectNodeManyShouldFailIfANodeDoesNotExist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DumbSlave slave1 = j.createSlave(\"aNode1\",\"\",null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->0 [style = solid, label="result"];
18->16 [style = dotted, label="true"];
11->1 [style = bold, label=""];
2->3 [style = bold, label=""];
17->14 [style = dotted, label="true"];
10->3 [style = bold, label=""];
7->4 [style = bold, label=""];
15->18 [style = bold, label=""];
13->16 [style = bold, label=""];
1->9 [style = bold, label=""];
4->0 [style = bold, label=""];
8->17 [style = bold, label=""];
8->1 [style = bold, label=""];
17->15 [style = dotted, label="true"];
5->6 [style = bold, label=""];
4->5 [style = solid, label="result"];
18->1 [style = bold, label=""];
3->7 [style = bold, label=""];
16->1 [style = bold, label=""];
17->14 [style = bold, label=""];
6->11 [style = bold, label=""];
6->8 [style = bold, label=""];
18->13 [style = bold, label=""];
14->15 [style = bold, label=""];
12->3 [style = bold, label=""];
8->11 [style = dashed, label="0"];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
18->13 [style = dotted, label="true"];
}
