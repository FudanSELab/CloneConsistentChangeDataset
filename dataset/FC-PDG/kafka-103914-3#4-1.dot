digraph {
4 [style = filled, label = "RequestFuture<ClientResponse> future = consumerClient.send(node,heartbeat())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "consumerClient.disconnectAsync(node)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testDisconnectWithUnsentRequests['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertFalse(client.hasInFlightRequests(node.idString()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDisconnectWithUnsentRequests['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "consumerClient.disconnect(node)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(future.exception() instanceof DisconnectException)@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testDisconnectWithInFlightRequests['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "consumerClient.pollNoWakeup()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "consumerClient.pollNoWakeup()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertTrue(future.exception() instanceof DisconnectException)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(consumerClient.hasPendingRequests(node))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(client.hasInFlightRequests(node.idString()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(future.failed())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
0->9 [style = bold, label=""];
7->1 [style = bold, label=""];
4->2 [style = bold, label=""];
1->8 [style = bold, label=""];
13->3 [style = bold, label=""];
4->11 [style = bold, label=""];
9->7 [style = bold, label=""];
12->4 [style = bold, label=""];
3->9 [style = dashed, label="0"];
11->2 [style = bold, label=""];
0->13 [style = dashed, label="0"];
2->13 [style = bold, label=""];
10->4 [style = bold, label=""];
}
