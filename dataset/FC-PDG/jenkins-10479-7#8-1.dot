digraph {
9 [style = filled, label = "FreeStyleBuild b3 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "p.getBuildersList().add(new TestBuilder(){@Override public boolean perform(AbstractBuild<?,?> build,Launcher launcher,BuildListener listener){assertEquals(alice2,Jenkins.getAuthentication2())return true}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "accessControl['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(),alice)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final FreeStyleBuild b1 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DumbSlave s1 = r.createSlave()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i < 3@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "r.jenkins.setAuthorizationStrategy(new AliceCannotBuild(b1.getBuiltOnStr()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "permissionSensitiveSlaveAllocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "accessControl['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "p.getBuildersList().add(new TestBuilder(){@Override public boolean perform(AbstractBuild<?,?> build,Launcher launcher,BuildListener listener){assertEquals(alice,Jenkins.getAuthentication())return true}})@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i++@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "r.jenkins.setNumExecutors(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotSame(b3.getBuiltOnStr(),b1.getBuiltOnStr())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DumbSlave s2 = r.createSlave()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(),alice)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final FreeStyleBuild b2 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->20 [style = dotted, label="true"];
16->7 [style = solid, label="i"];
1->4 [style = bold, label=""];
7->17 [style = bold, label=""];
8->15 [style = bold, label=""];
16->17 [style = solid, label="i"];
3->1 [style = bold, label=""];
17->9 [style = bold, label=""];
0->2 [style = bold, label=""];
9->20 [style = bold, label=""];
16->17 [style = bold, label=""];
15->19 [style = bold, label=""];
2->8 [style = dashed, label="0"];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
11->18 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
6->14 [style = bold, label=""];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
7->17 [style = solid, label="i"];
14->12 [style = bold, label=""];
17->9 [style = dotted, label="true"];
17->7 [style = dotted, label="true"];
18->8 [style = bold, label=""];
20->7 [style = bold, label=""];
}
