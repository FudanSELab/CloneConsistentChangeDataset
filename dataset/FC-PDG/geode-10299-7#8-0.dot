digraph {
13 [style = filled, label = "RegionConfigRealizer subject = new RegionConfigRealizer()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "subject.create(config,cache)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RegionConfigRealizer realizer = new RegionConfigRealizer()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "createsPartitionedInCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "createsPartitionedInCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(regionFactory).create(\"regionName\")@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RegionConfig config = new RegionConfig()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createsReplicateInCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "config.setType(\"PARTITION\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "config.setType(\"REPLICATE\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "config.setName(\"regionName\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "realizer.create(config,cache)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
12->5 [style = bold, label=""];
1->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
2->6 [style = bold, label=""];
5->15 [style = solid, label="config"];
5->6 [style = solid, label="config"];
15->3 [style = bold, label=""];
1->7 [style = bold, label=""];
14->7 [style = bold, label=""];
3->9 [style = bold, label=""];
2->0 [style = bold, label=""];
10->5 [style = bold, label=""];
8->2 [style = bold, label=""];
6->15 [style = dashed, label="0"];
11->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
9->14 [style = bold, label=""];
2->11 [style = dashed, label="0"];
13->15 [style = bold, label=""];
9->1 [style = bold, label=""];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
}
