digraph {
9 [style = filled, label = "when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MockInjector.setInstance(,configServiceLocator)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String someKeyPrefix = \"someKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "someAppId = \"someAppId\"@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MockInjector.setInstance(,remoteConfigLongPollService)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(someProperties.stringPropertyNames(),propertyNames)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "someProperties = new Properties()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "someProperties.setProperty(someKeyPrefix + i,someValuePrefix + i)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ServiceDTO serviceDTO = mock()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i < 10@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new Properties()}})@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "configUtil = new MockConfigUtil()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testGetPropertyNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "remoteConfigLongPollService = new RemoteConfigLongPollService()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "httpUtil = spy(new MockHttpUtil())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MockInjector.setInstance(,configUtil)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MockInjector.reset()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "someNamespace = \"someName\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String someValuePrefix = \"someValue\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(10,propertyNames.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MockInjector.setInstance(,httpUtil)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Set<String> propertyNames = defaultConfig.getPropertyNames()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "someServerUrl = \"http://someServer\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "someCluster = \"someCluster\"@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
11->16 [style = bold, label=""];
25->28 [style = solid, label="someKeyPrefix"];
22->25 [style = bold, label=""];
1->4 [style = bold, label=""];
21->31 [style = solid, label="someProperties"];
27->32 [style = bold, label=""];
32->28 [style = dotted, label="true"];
13->9 [style = solid, label="serviceDTO"];
26->32 [style = bold, label=""];
20->29 [style = bold, label=""];
4->6 [style = bold, label=""];
16->10 [style = bold, label=""];
25->23 [style = bold, label=""];
30->20 [style = bold, label=""];
31->24 [style = bold, label=""];
8->14 [style = bold, label=""];
26->28 [style = solid, label="i"];
30->29 [style = solid, label="propertyNames"];
10->7 [style = bold, label=""];
19->0 [style = bold, label=""];
24->30 [style = bold, label=""];
12->2 [style = solid, label="configUtil"];
5->1 [style = bold, label=""];
21->26 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
32->27 [style = dotted, label="true"];
4->6 [style = solid, label="remoteConfigLongPollService"];
17->15 [style = solid, label="someServerUrl"];
0->25 [style = dashed, label="0"];
23->21 [style = bold, label=""];
5->1 [style = solid, label="httpUtil"];
27->32 [style = solid, label="i"];
15->9 [style = bold, label=""];
26->27 [style = solid, label="i"];
6->11 [style = bold, label=""];
14->12 [style = bold, label=""];
23->28 [style = solid, label="someValuePrefix"];
27->28 [style = solid, label="i"];
0->8 [style = bold, label=""];
9->3 [style = bold, label=""];
17->13 [style = bold, label=""];
13->15 [style = bold, label=""];
28->27 [style = bold, label=""];
32->28 [style = bold, label=""];
18->0 [style = bold, label=""];
8->12 [style = bold, label=""];
32->31 [style = bold, label=""];
26->32 [style = solid, label="i"];
}
