digraph {
10 [style = filled, label = "f = (ZipFileSet)getInstance()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fail(\"can add dir to \" + f.getDataTypeName() + \" when a src is already present\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "f = (TarFileSet)getInstance()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "zid.setRefid(new Reference(getProject(),\"test\"))@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fail(\"Can add src to \" + f.getDataTypeName() + \" when a refid is already present\")@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(\"prefix attribute copied by copy constructor\",f.getPrefix(getProject()).equals(zid.getPrefix(getProject())))@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(\"dir mode attribute copied by copy constructor\",f.getDirMode(getProject()),zid.getDirMode(getProject()))@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ZipFileSet f = (ZipFileSet)getInstance()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testAttributes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertEquals(\"Cannot set both fullpath and prefix attributes\",be.getMessage())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testAttributes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "BuildException be@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "f.setFileMode(\"600\")@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "f.setDir(new File(\"examples\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BuildException be@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "f.setDirMode(\"530\")@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "f.setPrefix(\"/examples\")@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "f.setDir(new File(\"examples\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "fail(\"Can add fullpath to \" + f.getDataTypeName() + \" when a prefix is already present\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testAttributes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "f = (TarFileSet)getInstance()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "f = (TarFileSet)getInstance()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "f.setPrefix(\"/examples\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertTrue(\"dir mode attribute copied by copy constructor\",f.getDirMode(getProject()) == zid.getDirMode(getProject()))@@@61@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "f.setRefid(new Reference(getProject(),\"test\"))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "f.setPrefix(\"/examples\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "f = (TarFileSet)getInstance()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "TarFileSet zid = (TarFileSet)getInstance()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertTrue(\"file mode attribute copied by copy constructor\",f.getFileMode(getProject()) == zid.getFileMode(getProject()))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "f = (ZipFileSet)getInstance()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(\"src attribute copied by copy constructor\",zid.getSrc(getProject()).equals(f.getSrc(getProject())))@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(\"prefix attribute copied by copy constructor\",f.getPrefix(getProject()),zid.getPrefix(getProject()))@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(\"Cannot set both fullpath and prefix attributes\",be.getMessage())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "TarFileSet f = (TarFileSet)getInstance()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "fail(\"can add src to \" + f.getDataTypeName() + \" when a dir is already present\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "BuildException be@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "f = (ZipFileSet)getInstance()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "f.setFullpath(\"/doc/manual/index.html\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BuildException be@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "ZipFileSet zid = (ZipFileSet)getInstance()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "f = (ZipFileSet)getInstance()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "f = (TarFileSet)getInstance()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "f.setFullpath(\"/doc/manual/index.html\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"file mode attribute copied by copy constructor\",f.getFileMode(getProject()),zid.getFileMode(getProject()))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "f = (ZipFileSet)getInstance()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(\"src attribute copied by copy constructor\",zid.getSrc(getProject()),f.getSrc(getProject()))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"You must not specify more than one \" + \"attribute when using refid\",be.getMessage())@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "BuildException be@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "getProject().addReference(\"test\",f)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "fail(\"Can add prefix to \" + f.getDataTypeName() + \" when a fullpath is already present\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
20->58 [style = bold, label=""];
21->52 [style = dashed, label="0"];
1->27 [style = bold, label=""];
17->14 [style = dotted, label="true"];
59->57 [style = bold, label=""];
24->34 [style = bold, label=""];
56->15 [style = bold, label=""];
26->40 [style = bold, label=""];
36->11 [style = bold, label=""];
23->29 [style = bold, label=""];
51->48 [style = bold, label=""];
26->61 [style = dashed, label="0"];
62->53 [style = bold, label=""];
19->9 [style = bold, label=""];
0->55 [style = dashed, label="0"];
17->14 [style = bold, label=""];
15->20 [style = bold, label=""];
35->65 [style = dashed, label="0"];
0->24 [style = bold, label=""];
45->38 [style = bold, label=""];
31->60 [style = bold, label=""];
2->60 [style = dashed, label="0"];
14->9 [style = bold, label=""];
36->63 [style = bold, label=""];
7->11 [style = bold, label=""];
38->48 [style = dashed, label="0"];
21->19 [style = bold, label=""];
33->15 [style = bold, label=""];
34->52 [style = bold, label=""];
4->0 [style = dotted, label="true"];
43->32 [style = bold, label=""];
29->54 [style = dashed, label="0"];
28->54 [style = bold, label=""];
31->2 [style = bold, label=""];
41->6 [style = bold, label=""];
44->64 [style = dashed, label="0"];
52->19 [style = bold, label=""];
60->13 [style = bold, label=""];
4->0 [style = bold, label=""];
8->62 [style = bold, label=""];
5->1 [style = bold, label=""];
37->8 [style = dotted, label="true"];
19->57 [style = bold, label=""];
33->56 [style = dashed, label="0"];
58->34 [style = bold, label=""];
61->40 [style = bold, label=""];
10->42 [style = solid, label="f"];
18->7 [style = bold, label=""];
38->33 [style = bold, label=""];
10->62 [style = dashed, label="0"];
6->39 [style = bold, label=""];
7->63 [style = bold, label=""];
32->46 [style = dashed, label="0"];
11->26 [style = bold, label=""];
32->50 [style = bold, label=""];
25->38 [style = bold, label=""];
28->29 [style = bold, label=""];
13->10 [style = bold, label=""];
23->54 [style = bold, label=""];
46->16 [style = bold, label=""];
18->7 [style = dotted, label="true"];
35->3 [style = bold, label=""];
13->62 [style = bold, label=""];
62->42 [style = solid, label="f"];
3->47 [style = bold, label=""];
22->28 [style = bold, label=""];
42->65 [style = bold, label=""];
32->16 [style = bold, label=""];
40->12 [style = bold, label=""];
30->5 [style = bold, label=""];
16->44 [style = bold, label=""];
24->58 [style = dashed, label="0"];
50->64 [style = bold, label=""];
14->59 [style = dashed, label="0"];
63->61 [style = bold, label=""];
37->8 [style = bold, label=""];
10->30 [style = bold, label=""];
49->6 [style = bold, label=""];
34->21 [style = bold, label=""];
65->3 [style = bold, label=""];
48->56 [style = bold, label=""];
53->5 [style = bold, label=""];
29->31 [style = bold, label=""];
9->57 [style = dashed, label="0"];
22->28 [style = dotted, label="true"];
47->46 [style = bold, label=""];
30->53 [style = dashed, label="0"];
11->63 [style = dashed, label="0"];
27->42 [style = bold, label=""];
2->13 [style = bold, label=""];
42->35 [style = bold, label=""];
9->41 [style = bold, label=""];
41->49 [style = dashed, label="0"];
54->31 [style = bold, label=""];
43->47 [style = dashed, label="0"];
16->50 [style = dashed, label="0"];
57->49 [style = bold, label=""];
12->23 [style = bold, label=""];
3->43 [style = bold, label=""];
4->55 [style = bold, label=""];
17->59 [style = bold, label=""];
20->24 [style = bold, label=""];
39->36 [style = bold, label=""];
17->59 [style = dotted, label="true"];
55->58 [style = bold, label=""];
4->55 [style = dotted, label="true"];
}
