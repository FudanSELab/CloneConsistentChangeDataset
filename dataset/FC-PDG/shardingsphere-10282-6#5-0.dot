digraph {
11 [style = filled, label = "checkDuplicateTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Collection<String> shardingTableNames = null == currentRuleConfig? Collections.emptyList(): getShardingTables(currentRuleConfig)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "checkDuplicateTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "getToBeCreatedDuplicateRuleNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return sqlStatement.getRules().stream().collect(Collectors.toMap(null,null,null)).entrySet().stream().filter(null).map(null).collect(Collectors.toSet())@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "throw new DuplicateTablesException(duplicateTableNames)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "duplicateTableNames.addAll(sqlStatement.getRules().stream().map(null).filter(null).collect(Collectors.toSet()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new RuleDuplicatedException(\"sharding\",schemaName,duplicateTableNames)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Set<String> duplicateTableNames = sqlStatement.getRules().stream().collect(Collectors.toMap(null,null,null)).entrySet().stream().filter(null).map(null).collect(Collectors.toSet())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!duplicateTableNames.isEmpty()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
0->5 [style = solid, label="currentRuleConfig"];
11->10 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
3->8 [style = solid, label="duplicateTableNames"];
11->9 [style = dotted, label="true"];
10->8 [style = solid, label="schemaName"];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
14->15 [style = dotted, label="true"];
3->1 [style = solid, label="duplicateTableNames"];
3->7 [style = bold, label=""];
6->8 [style = dotted, label="true"];
9->5 [style = solid, label="currentRuleConfig"];
6->8 [style = bold, label=""];
7->6 [style = bold, label=""];
1->8 [style = dashed, label="0"];
14->13 [style = bold, label=""];
4->5 [style = bold, label=""];
4->2 [style = dotted, label="true"];
}
