digraph {
50 [style = filled, label = "RankStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ParallelStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "nInt <= 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "workersInt = Integer.parseInt(workersStr)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "StreamFactory factory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "StreamExpressionNamedParameter workersParam = factory.getNamedOperand(expression,\"workers\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "int nInt = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'n' parameter of type positive integer but didn't find one\",expression))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' must be greater than 0.\",expression,workersStr))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'workersParam' parameter of type positive integer but didn't find one\",expression))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' is not a valid integer.\",expression,nStr))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String zkHost = null@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "StreamExpressionNamedParameter zkHostExpression = factory.getNamedOperand(expression,\"zkHost\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "zkHost == null@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ParallelStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "streamFactory = factory@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 2@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int workersInt = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'sort' parameter telling us how to join the parallel streams but didn't find one\",expression))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'workers' parameter of type positive integer but didn't find one\",expression))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - zkHost not found for collection '%s'\",expression,collectionName))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "zkHost = factory.getDefaultZkHost()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "zkHost = factory.getCollectionZkHost(collectionName)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "null == zkHost@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "zkHostExpression.getParameter() instanceof StreamExpressionValue@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "init(zkHost,collectionName,stream,workersInt,comp)@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "null == workersParam || null == workersParam.getParameter() || !(workersParam.getParameter() instanceof StreamExpressionValue)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String workersStr = ((StreamExpressionValue)workersParam.getParameter()).getValue()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "1 != streamExpressions.size()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "init(stream,nInt,comp)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "null == nParam || null == nParam.getParameter() || !(nParam.getParameter() instanceof StreamExpressionValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 3 + (null != zkHostExpression? 1: 0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "null == zkHostExpression@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - collectionName expected as first operand\",expression))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "null == collectionName@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "StreamExpression expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "zkHost = ((StreamExpressionValue)zkHostExpression.getParameter()).getValue()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StreamFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String collectionName = factory.getValueOperand(expression,0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String nStr = ((StreamExpressionValue)nParam.getParameter()).getValue()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one\",expression))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "NumberFormatException e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "workersInt <= 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' is not a valid integer.\",expression,workersStr))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->36 [style = solid, label="collectionName"];
46->14 [style = solid, label="expression"];
34->25 [style = solid, label="expression"];
34->14 [style = solid, label="expression"];
32->37 [style = bold, label=""];
55->47 [style = bold, label=""];
42->45 [style = bold, label=""];
27->33 [style = dotted, label="true"];
10->19 [style = bold, label=""];
17->9 [style = bold, label=""];
16->19 [style = solid, label="zkHost"];
7->35 [style = bold, label=""];
44->0 [style = bold, label=""];
1->21 [style = dotted, label="true"];
34->22 [style = solid, label="expression"];
37->15 [style = bold, label=""];
0->6 [style = dotted, label="true"];
34->5 [style = solid, label="expression"];
3->28 [style = solid, label="workersStr"];
33->0 [style = bold, label=""];
0->49 [style = solid, label="stream"];
46->43 [style = solid, label="expression"];
48->43 [style = bold, label=""];
1->21 [style = bold, label=""];
6->11 [style = bold, label=""];
2->44 [style = bold, label=""];
9->18 [style = dotted, label="false"];
48->43 [style = dotted, label="true"];
27->33 [style = bold, label=""];
35->22 [style = dotted, label="true"];
46->31 [style = solid, label="expression"];
2->24 [style = bold, label=""];
11->25 [style = bold, label=""];
21->3 [style = bold, label=""];
28->27 [style = solid, label="workersInt"];
31->14 [style = bold, label=""];
52->57 [style = dotted, label="true"];
29->1 [style = solid, label="workersParam"];
26->7 [style = bold, label=""];
55->47 [style = solid, label="nInt"];
48->2 [style = bold, label=""];
27->0 [style = bold, label=""];
47->48 [style = bold, label=""];
18->16 [style = dotted, label="true"];
24->0 [style = bold, label=""];
2->24 [style = dotted, label="true"];
19->20 [style = bold, label=""];
34->51 [style = dashed, label="0"];
18->19 [style = bold, label=""];
10->19 [style = solid, label="zkHost"];
50->51 [style = dotted, label="true"];
6->49 [style = bold, label=""];
54->41 [style = bold, label=""];
16->19 [style = bold, label=""];
39->4 [style = bold, label=""];
32->12 [style = solid, label="stream"];
41->5 [style = dotted, label="true"];
1->40 [style = dotted, label="true"];
7->5 [style = bold, label=""];
22->5 [style = dashed, label="0"];
4->35 [style = solid, label="collectionName"];
40->3 [style = bold, label=""];
36->19 [style = solid, label="zkHost"];
34->4 [style = solid, label="expression"];
10->12 [style = solid, label="zkHost"];
23->10 [style = bold, label=""];
46->44 [style = solid, label="expression"];
33->56 [style = dashed, label="0"];
56->48 [style = bold, label=""];
11->17 [style = bold, label=""];
15->12 [style = bold, label=""];
16->12 [style = solid, label="zkHost"];
28->12 [style = solid, label="workersInt"];
24->57 [style = dashed, label="0"];
54->14 [style = dotted, label="true"];
27->47 [style = dashed, label="0"];
28->55 [style = dashed, label="0"];
39->34 [style = dotted, label="true"];
34->33 [style = solid, label="expression"];
42->55 [style = solid, label="nStr"];
34->40 [style = solid, label="expression"];
37->12 [style = solid, label="comp"];
45->55 [style = bold, label=""];
47->56 [style = bold, label=""];
50->58 [style = bold, label=""];
34->26 [style = solid, label="expression"];
34->21 [style = solid, label="expression"];
36->23 [style = solid, label="zkHost"];
34->31 [style = solid, label="expression"];
42->56 [style = solid, label="nStr"];
1->3 [style = bold, label=""];
0->11 [style = bold, label=""];
43->2 [style = bold, label=""];
4->29 [style = bold, label=""];
47->56 [style = dotted, label="true"];
46->5 [style = solid, label="expression"];
30->34 [style = dotted, label="true"];
25->17 [style = bold, label=""];
26->7 [style = solid, label="zkHostExpression"];
46->53 [style = solid, label="expression"];
7->5 [style = dotted, label="true"];
4->20 [style = solid, label="collectionName"];
2->0 [style = bold, label=""];
23->10 [style = dotted, label="true"];
38->15 [style = solid, label="factory"];
9->18 [style = bold, label=""];
35->1 [style = bold, label=""];
19->32 [style = bold, label=""];
58->53 [style = bold, label=""];
50->46 [style = dotted, label="true"];
9->23 [style = dotted, label="true"];
23->19 [style = bold, label=""];
17->19 [style = solid, label="zkHost"];
30->8 [style = dotted, label="true"];
22->1 [style = bold, label=""];
35->41 [style = dashed, label="0"];
14->41 [style = bold, label=""];
5->35 [style = bold, label=""];
25->44 [style = dashed, label="0"];
31->54 [style = bold, label=""];
54->14 [style = bold, label=""];
9->36 [style = bold, label=""];
4->12 [style = solid, label="collectionName"];
18->16 [style = bold, label=""];
34->29 [style = solid, label="expression"];
8->15 [style = solid, label="factory"];
0->6 [style = bold, label=""];
1->40 [style = bold, label=""];
2->44 [style = dotted, label="true"];
36->12 [style = solid, label="zkHost"];
35->22 [style = bold, label=""];
19->20 [style = dotted, label="true"];
29->31 [style = bold, label=""];
9->36 [style = dotted, label="true"];
39->38 [style = dotted, label="true"];
20->32 [style = bold, label=""];
31->2 [style = solid, label="sortExpression"];
34->6 [style = solid, label="expression"];
53->31 [style = bold, label=""];
26->9 [style = solid, label="zkHostExpression"];
57->48 [style = bold, label=""];
14->26 [style = bold, label=""];
46->56 [style = solid, label="expression"];
34->20 [style = solid, label="expression"];
46->58 [style = solid, label="expression"];
11->25 [style = dotted, label="true"];
14->11 [style = solid, label="sortExpression"];
6->49 [style = solid, label="comp"];
36->23 [style = bold, label=""];
15->49 [style = dashed, label="0"];
30->4 [style = bold, label=""];
17->12 [style = solid, label="zkHost"];
3->33 [style = solid, label="workersStr"];
53->41 [style = solid, label="nParam"];
21->40 [style = dashed, label="0"];
3->13 [style = bold, label=""];
55->49 [style = solid, label="nInt"];
28->27 [style = bold, label=""];
5->42 [style = bold, label=""];
52->57 [style = bold, label=""];
13->28 [style = bold, label=""];
41->5 [style = bold, label=""];
41->42 [style = bold, label=""];
}
