digraph {
29 [style = filled, label = "RuntimeContext context = Mockito.mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "alterTable()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "JdbcOptions options = JdbcOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "JdbcConnectorOptions options = JdbcConnectorOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "check(expected)@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = TEST_DATA.length / 2@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "check(Arrays.stream(TEST_DATA).map(null).toArray(null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "format.flush()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "format = new TableJdbcUpsertOutputFormat(new SimpleJdbcConnectionProvider(options),dmlOptions,JdbcExecutionOptions.defaults())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i++@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "format.open(0,1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "format.writeRecord(Tuple2.of(true,toRow(entry)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i < TEST_DATA.length@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JdbcDmlOptions dmlOptions = JdbcDmlOptions.builder().withTableName(options.getTableName()).withDialect(options.getDialect()).withFieldNames(fieldNames).withKeyFields(keyFields).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "format.writeRecord(Tuple2.of(false,toRow(TEST_DATA(i()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "format.open(0,1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "format = JdbcBatchingOutputFormat.builder().setOptions(JdbcOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()).setFieldNames(fieldNames).setKeyFields(null).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ExecutionConfig config = Mockito.mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "format.setRuntimeContext(context)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "format.flush()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "check(Arrays.stream(TEST_DATA).map(null).toArray(null))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < TEST_DATA.length / 2@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "format.flush()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expected(i - TEST_DATA.length / 2( = toRow(TEST_DATA(i()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testMaxRetry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "format.writeRecord(Tuple2.of(true,toRow(entry)))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "doReturn(config).when(context).getExecutionConfig()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testJdbcOutputFormat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "format.flush()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Row(( expected = new Row((((@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "doReturn(true).when(config).isObjectReuseEnabled()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testJdbcOutputFormat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24->10 [style = bold, label=""];
4->10 [style = bold, label=""];
13->3 [style = solid, label="i"];
27->15 [style = solid, label="options"];
22->33 [style = bold, label=""];
20->13 [style = bold, label=""];
3->20 [style = dotted, label="true"];
19->12 [style = bold, label=""];
29->30 [style = bold, label=""];
11->15 [style = solid, label="options"];
13->20 [style = solid, label="i"];
15->21 [style = bold, label=""];
24->10 [style = solid, label="i"];
14->22 [style = bold, label=""];
18->19 [style = bold, label=""];
8->14 [style = bold, label=""];
17->3 [style = solid, label="i"];
31->29 [style = bold, label=""];
5->18 [style = bold, label=""];
16->10 [style = solid, label="length"];
25->6 [style = bold, label=""];
33->9 [style = bold, label=""];
16->6 [style = solid, label="expected"];
21->22 [style = solid, label="context"];
26->11 [style = bold, label=""];
3->0 [style = bold, label=""];
1->9 [style = bold, label=""];
17->20 [style = solid, label="i"];
21->2 [style = bold, label=""];
30->21 [style = bold, label=""];
3->20 [style = bold, label=""];
4->16 [style = solid, label="i"];
13->3 [style = bold, label=""];
10->16 [style = bold, label=""];
17->13 [style = solid, label="i"];
10->25 [style = bold, label=""];
11->31 [style = dashed, label="0"];
0->24 [style = bold, label=""];
27->7 [style = bold, label=""];
4->10 [style = solid, label="i"];
17->3 [style = bold, label=""];
9->5 [style = bold, label=""];
7->15 [style = bold, label=""];
23->17 [style = bold, label=""];
12->23 [style = bold, label=""];
29->8 [style = solid, label="context"];
22->1 [style = bold, label=""];
28->27 [style = bold, label=""];
7->15 [style = solid, label="dmlOptions"];
16->4 [style = bold, label=""];
16->4 [style = solid, label="i"];
10->4 [style = dotted, label="true"];
11->27 [style = dashed, label="0"];
10->16 [style = dotted, label="true"];
32->31 [style = bold, label=""];
0->6 [style = solid, label="expected"];
11->7 [style = bold, label=""];
3->13 [style = dotted, label="true"];
2->8 [style = bold, label=""];
24->16 [style = solid, label="i"];
}
