digraph {
12 [style = filled, label = "Assert.assertTrue(actual.isEnablePlaintextPort())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(actual.isEnableTlsPort())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testSerde3['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DruidNode actual = mapper.readValue(mapper.writeValueAsString(new DruidNode(\"service\",\"host\",true,1234,null,5678,false,true)),)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testSerde2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(-1,actual.getPlaintextPort())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertFalse(actual.isEnablePlaintextPort())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(5678,actual.getTlsPort())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"host\",actual.getHost())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSerde3['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertTrue(actual.isBindOnHost())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(1234,actual.getPlaintextPort())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "DruidNode actual = mapper.readValue(mapper.writeValueAsString(new DruidNode(\"service\",\"host\",1234,null,5678,null,false)),)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertFalse(actual.isEnableTlsPort())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(\"service\",actual.getServiceName())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DruidNode actual = mapper.readValue(mapper.writeValueAsString(new DruidNode(\"service\",\"host\",1234,null,5678,false,true)),)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(-1,actual.getTlsPort())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
5->14 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
11->14 [style = bold, label=""];
9->2 [style = bold, label=""];
7->12 [style = bold, label=""];
2->3 [style = bold, label=""];
12->11 [style = bold, label=""];
15->16 [style = bold, label=""];
1->7 [style = bold, label=""];
7->9 [style = bold, label=""];
2->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
16->1 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
4->1 [style = bold, label=""];
14->13 [style = bold, label=""];
4->10 [style = dashed, label="0"];
10->1 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
