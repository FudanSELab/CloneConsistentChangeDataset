digraph {
75 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
91 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,startTime + increment * 7 - windowSize,startTime + increment * 7 + windowSize)))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
104 [style = filled, label = "windowStore = createWindowStore(context,false)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "final long startTime = segmentInterval * 2@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "windowStore.put(3,\"three\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "testRolling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRolling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "windowStore.put(6,\"six\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "windowStore.close()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
109 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
81 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
101 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,startTime + increment * 8 - windowSize,startTime + increment * 8 + windowSize)))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(8,startTime + increment * 8 - windowSize,startTime + increment * 8 + windowSize)))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
100 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + increment * 6 - windowSize,startTime + increment * 6 + windowSize)))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "windowStore = createWindowStore(context,false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "windowStore.put(8,\"eight\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
112 [style = filled, label = "windowStore.flush()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "setCurrentTime(startTime + increment)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "windowStore.put(1,\"one\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "windowStore.flush()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
105 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
103 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(7,startTime + increment * 7 - windowSize,startTime + increment * 7 + windowSize)))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "windowStore.put(7,\"seven\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
86 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "windowStore = createWindowStore(context,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + increment * 6 - windowSize,startTime + increment * 6 + windowSize)))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
95 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(6,startTime + increment * 6 - windowSize,startTime + increment * 6 + windowSize)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "windowStore.put(5,\"five\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "windowStore.put(2,\"two\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final long increment = segmentInterval / 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
87 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52->97 [style = bold, label=""];
92->24 [style = bold, label=""];
5->55 [style = bold, label=""];
52->74 [style = solid, label="increment"];
88->67 [style = bold, label=""];
107->49 [style = solid, label="startTime"];
59->49 [style = bold, label=""];
52->83 [style = solid, label="increment"];
107->22 [style = bold, label=""];
89->83 [style = bold, label=""];
57->14 [style = bold, label=""];
22->62 [style = solid, label="startTime"];
59->62 [style = dashed, label="0"];
20->89 [style = dashed, label="0"];
9->65 [style = bold, label=""];
48->95 [style = dashed, label="0"];
107->39 [style = solid, label="startTime"];
107->113 [style = solid, label="startTime"];
22->28 [style = solid, label="startTime"];
0->15 [style = bold, label=""];
23->57 [style = bold, label=""];
52->78 [style = solid, label="increment"];
22->63 [style = solid, label="startTime"];
22->72 [style = solid, label="startTime"];
22->0 [style = solid, label="increment"];
52->15 [style = solid, label="increment"];
22->9 [style = solid, label="increment"];
22->61 [style = solid, label="startTime"];
52->87 [style = solid, label="increment"];
22->12 [style = solid, label="startTime"];
22->79 [style = solid, label="startTime"];
62->49 [style = bold, label=""];
36->77 [style = dashed, label="0"];
44->18 [style = bold, label=""];
31->46 [style = bold, label=""];
22->84 [style = solid, label="startTime"];
7->105 [style = dashed, label="0"];
107->17 [style = solid, label="startTime"];
87->53 [style = bold, label=""];
52->30 [style = solid, label="increment"];
22->39 [style = solid, label="increment"];
12->21 [style = bold, label=""];
22->41 [style = solid, label="startTime"];
78->66 [style = bold, label=""];
18->28 [style = bold, label=""];
104->94 [style = bold, label=""];
22->91 [style = solid, label="increment"];
18->51 [style = bold, label=""];
50->79 [style = dashed, label="0"];
65->61 [style = bold, label=""];
22->48 [style = solid, label="startTime"];
22->82 [style = solid, label="startTime"];
107->24 [style = solid, label="startTime"];
22->53 [style = solid, label="startTime"];
22->89 [style = solid, label="startTime"];
109->107 [style = bold, label=""];
52->2 [style = solid, label="increment"];
22->2 [style = solid, label="startTime"];
1->7 [style = bold, label=""];
42->67 [style = dashed, label="0"];
72->87 [style = bold, label=""];
52->38 [style = solid, label="increment"];
52->21 [style = solid, label="increment"];
22->73 [style = solid, label="startTime"];
52->62 [style = solid, label="increment"];
25->111 [style = dashed, label="0"];
30->73 [style = dashed, label="0"];
67->63 [style = bold, label=""];
52->7 [style = solid, label="increment"];
22->105 [style = solid, label="increment"];
52->80 [style = solid, label="increment"];
22->1 [style = solid, label="startTime"];
107->10 [style = solid, label="startTime"];
33->37 [style = bold, label=""];
15->56 [style = bold, label=""];
22->32 [style = solid, label="startTime"];
16->15 [style = bold, label=""];
32->45 [style = bold, label=""];
39->100 [style = dashed, label="0"];
52->10 [style = solid, label="increment"];
8->19 [style = bold, label=""];
22->77 [style = solid, label="startTime"];
52->13 [style = solid, label="increment"];
22->103 [style = solid, label="increment"];
45->13 [style = bold, label=""];
42->12 [style = bold, label=""];
52->77 [style = solid, label="increment"];
39->91 [style = bold, label=""];
55->44 [style = bold, label=""];
41->51 [style = bold, label=""];
52->36 [style = solid, label="increment"];
102->104 [style = bold, label=""];
107->110 [style = solid, label="startTime"];
90->41 [style = bold, label=""];
97->11 [style = bold, label=""];
103->110 [style = bold, label=""];
64->70 [style = bold, label=""];
93->25 [style = bold, label=""];
54->1 [style = bold, label=""];
37->0 [style = bold, label=""];
22->88 [style = solid, label="startTime"];
22->70 [style = solid, label="startTime"];
22->60 [style = solid, label="startTime"];
22->80 [style = solid, label="startTime"];
7->48 [style = bold, label=""];
25->35 [style = bold, label=""];
22->11 [style = solid, label="startTime"];
52->46 [style = solid, label="increment"];
35->50 [style = bold, label=""];
22->21 [style = solid, label="startTime"];
22->90 [style = solid, label="startTime"];
107->8 [style = solid, label="startTime"];
25->105 [style = bold, label=""];
10->68 [style = dashed, label="0"];
53->29 [style = bold, label=""];
52->20 [style = solid, label="increment"];
52->59 [style = solid, label="increment"];
31->85 [style = dashed, label="0"];
60->85 [style = bold, label=""];
22->25 [style = solid, label="increment"];
21->41 [style = bold, label=""];
22->8 [style = solid, label="increment"];
22->4 [style = solid, label="startTime"];
22->37 [style = solid, label="startTime"];
6->53 [style = bold, label=""];
52->71 [style = solid, label="increment"];
71->84 [style = bold, label=""];
38->25 [style = bold, label=""];
22->69 [style = solid, label="startTime"];
85->80 [style = bold, label=""];
52->1 [style = solid, label="increment"];
52->72 [style = solid, label="increment"];
52->24 [style = solid, label="increment"];
107->56 [style = solid, label="startTime"];
107->48 [style = solid, label="startTime"];
52->64 [style = solid, label="increment"];
22->40 [style = solid, label="startTime"];
52->4 [style = solid, label="increment"];
106->100 [style = bold, label=""];
22->7 [style = solid, label="startTime"];
52->45 [style = solid, label="increment"];
46->80 [style = dashed, label="0"];
43->66 [style = dashed, label="0"];
22->83 [style = solid, label="startTime"];
38->110 [style = dashed, label="0"];
22->20 [style = solid, label="startTime"];
36->47 [style = bold, label=""];
86->81 [style = bold, label=""];
22->54 [style = solid, label="startTime"];
22->19 [style = solid, label="startTime"];
107->97 [style = solid, label="startTime"];
34->5 [style = bold, label=""];
22->52 [style = bold, label=""];
68->62 [style = bold, label=""];
8->60 [style = bold, label=""];
52->70 [style = solid, label="increment"];
107->43 [style = solid, label="startTime"];
22->108 [style = solid, label="increment"];
17->33 [style = bold, label=""];
2->58 [style = bold, label=""];
3->22 [style = bold, label=""];
1->82 [style = dashed, label="0"];
9->23 [style = bold, label=""];
14->54 [style = bold, label=""];
82->69 [style = bold, label=""];
73->77 [style = bold, label=""];
8->29 [style = bold, label=""];
107->18 [style = solid, label="startTime"];
99->102 [style = bold, label=""];
52->67 [style = solid, label="increment"];
56->27 [style = bold, label=""];
22->43 [style = solid, label="startTime"];
107->55 [style = solid, label="startTime"];
22->48 [style = solid, label="increment"];
69->78 [style = bold, label=""];
52->14 [style = solid, label="increment"];
107->105 [style = solid, label="startTime"];
107->92 [style = solid, label="startTime"];
52->54 [style = solid, label="increment"];
45->84 [style = dashed, label="0"];
35->79 [style = bold, label=""];
22->24 [style = solid, label="increment"];
1->25 [style = dashed, label="0"];
107->108 [style = solid, label="startTime"];
22->93 [style = solid, label="increment"];
63->90 [style = bold, label=""];
12->63 [style = dashed, label="0"];
22->45 [style = solid, label="startTime"];
22->24 [style = solid, label="startTime"];
22->18 [style = solid, label="increment"];
10->59 [style = bold, label=""];
50->30 [style = bold, label=""];
76->3 [style = bold, label=""];
52->57 [style = solid, label="increment"];
22->78 [style = solid, label="startTime"];
84->72 [style = bold, label=""];
22->10 [style = solid, label="increment"];
32->71 [style = dashed, label="0"];
11->17 [style = bold, label=""];
52->63 [style = solid, label="increment"];
113->106 [style = bold, label=""];
0->16 [style = bold, label=""];
52->81 [style = solid, label="increment"];
21->90 [style = dashed, label="0"];
52->84 [style = solid, label="increment"];
22->31 [style = solid, label="startTime"];
22->71 [style = solid, label="startTime"];
26->3 [style = bold, label=""];
91->113 [style = bold, label=""];
22->92 [style = solid, label="increment"];
52->61 [style = solid, label="increment"];
52->43 [style = solid, label="increment"];
47->75 [style = dashed, label="0"];
22->17 [style = solid, label="increment"];
52->32 [style = solid, label="increment"];
52->47 [style = solid, label="increment"];
22->49 [style = solid, label="increment"];
107->9 [style = solid, label="startTime"];
52->12 [style = solid, label="increment"];
52->42 [style = solid, label="increment"];
43->38 [style = bold, label=""];
52->34 [style = solid, label="increment"];
74->68 [style = bold, label=""];
108->5 [style = bold, label=""];
52->31 [style = solid, label="increment"];
40->44 [style = bold, label=""];
107->103 [style = solid, label="startTime"];
54->70 [style = dashed, label="0"];
22->74 [style = solid, label="startTime"];
19->31 [style = bold, label=""];
52->40 [style = solid, label="increment"];
80->71 [style = bold, label=""];
52->66 [style = solid, label="increment"];
52->73 [style = solid, label="increment"];
110->111 [style = bold, label=""];
58->88 [style = dashed, label="0"];
22->38 [style = solid, label="startTime"];
81->88 [style = bold, label=""];
52->90 [style = solid, label="increment"];
23->65 [style = dashed, label="0"];
28->2 [style = bold, label=""];
22->85 [style = solid, label="startTime"];
22->58 [style = solid, label="startTime"];
107->59 [style = solid, label="startTime"];
47->20 [style = bold, label=""];
96->108 [style = bold, label=""];
22->14 [style = solid, label="startTime"];
22->86 [style = solid, label="startTime"];
22->87 [style = solid, label="startTime"];
43->93 [style = bold, label=""];
22->81 [style = solid, label="startTime"];
52->69 [style = solid, label="increment"];
94->48 [style = bold, label=""];
22->10 [style = solid, label="startTime"];
55->40 [style = bold, label=""];
30->36 [style = bold, label=""];
14->64 [style = dashed, label="0"];
52->41 [style = solid, label="increment"];
61->64 [style = bold, label=""];
75->89 [style = bold, label=""];
49->39 [style = bold, label=""];
22->68 [style = solid, label="startTime"];
22->75 [style = solid, label="startTime"];
48->43 [style = bold, label=""];
22->30 [style = solid, label="startTime"];
52->89 [style = solid, label="increment"];
52->6 [style = solid, label="increment"];
24->74 [style = dashed, label="0"];
22->46 [style = solid, label="startTime"];
7->69 [style = dashed, label="0"];
24->10 [style = bold, label=""];
70->82 [style = bold, label=""];
22->67 [style = solid, label="startTime"];
56->96 [style = bold, label=""];
112->99 [style = bold, label=""];
77->75 [style = bold, label=""];
22->43 [style = solid, label="increment"];
18->86 [style = bold, label=""];
52->58 [style = solid, label="increment"];
52->85 [style = solid, label="increment"];
22->55 [style = solid, label="increment"];
22->65 [style = solid, label="startTime"];
17->37 [style = bold, label=""];
22->15 [style = solid, label="startTime"];
22->59 [style = solid, label="startTime"];
19->60 [style = dashed, label="0"];
22->95 [style = solid, label="increment"];
22->42 [style = solid, label="startTime"];
52->88 [style = solid, label="increment"];
95->103 [style = bold, label=""];
58->42 [style = bold, label=""];
22->113 [style = solid, label="increment"];
66->38 [style = bold, label=""];
22->36 [style = solid, label="startTime"];
52->75 [style = solid, label="increment"];
28->86 [style = dashed, label="0"];
111->101 [style = bold, label=""];
13->72 [style = dashed, label="0"];
22->57 [style = solid, label="startTime"];
101->92 [style = bold, label=""];
22->50 [style = solid, label="startTime"];
4->24 [style = bold, label=""];
22->110 [style = solid, label="increment"];
22->64 [style = solid, label="startTime"];
22->56 [style = solid, label="increment"];
48->78 [style = dashed, label="0"];
22->34 [style = solid, label="startTime"];
105->95 [style = bold, label=""];
9->98 [style = bold, label=""];
107->25 [style = solid, label="startTime"];
22->23 [style = solid, label="startTime"];
27->34 [style = bold, label=""];
107->0 [style = solid, label="startTime"];
22->59 [style = solid, label="increment"];
4->83 [style = dashed, label="0"];
43->103 [style = dashed, label="0"];
57->61 [style = dashed, label="0"];
107->95 [style = solid, label="startTime"];
13->6 [style = bold, label=""];
51->8 [style = bold, label=""];
46->32 [style = bold, label=""];
52->11 [style = bold, label=""];
52->37 [style = solid, label="increment"];
107->91 [style = solid, label="startTime"];
22->6 [style = solid, label="startTime"];
29->9 [style = bold, label=""];
107->93 [style = solid, label="startTime"];
22->47 [style = solid, label="startTime"];
2->81 [style = dashed, label="0"];
52->48 [style = solid, label="increment"];
107->101 [style = solid, label="startTime"];
79->73 [style = bold, label=""];
6->87 [style = dashed, label="0"];
20->4 [style = bold, label=""];
14->43 [style = dashed, label="0"];
83->74 [style = bold, label=""];
107->94 [style = solid, label="startTime"];
52->68 [style = solid, label="increment"];
22->13 [style = solid, label="startTime"];
98->112 [style = bold, label=""];
52->53 [style = solid, label="increment"];
22->66 [style = solid, label="startTime"];
52->82 [style = solid, label="increment"];
}
