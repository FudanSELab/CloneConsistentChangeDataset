digraph {
14 [style = filled, label = "return null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "byte(( sigBytes = org.bouncycastle.util.encoders.Base64.decode(publicKey)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return null@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "keyFactory == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "byte(( sigBytes = org.bouncycastle.util.encoders.Base64.decode(privateKey)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return keyFactory.generatePrivate(pkscs8KeySpec)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "decodePrivateKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return null@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(sigBytes)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "KeyFactory keyFactory = CertUtils.getKeyFactory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InvalidKeySpecException e@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "decodePublicKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PKCS8EncodedKeySpec pkscs8KeySpec = new PKCS8EncodedKeySpec(sigBytes)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String privateKey@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "decodePublicKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "s_logger.error(\"Unable to create PublicKey from PublicKey string:\" + e.getMessage())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String publicKey@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return keyFactory.generatePublic(x509KeySpec)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return null@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11->3 [style = bold, label=""];
13->4 [style = bold, label=""];
8->12 [style = bold, label=""];
14->16 [style = bold, label=""];
9->4 [style = bold, label=""];
3->16 [style = dashed, label="0"];
10->17 [style = dashed, label="0"];
7->16 [style = bold, label=""];
19->15 [style = bold, label=""];
4->15 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
10->3 [style = solid, label="x509KeySpec"];
0->3 [style = bold, label=""];
2->4 [style = solid, label="publicKey"];
7->11 [style = bold, label=""];
18->15 [style = solid, label="privateKey"];
1->6 [style = bold, label=""];
9->2 [style = dotted, label="true"];
5->7 [style = solid, label="keyFactory"];
7->11 [style = dotted, label="true"];
3->6 [style = bold, label=""];
7->14 [style = bold, label=""];
8->1 [style = bold, label=""];
7->3 [style = bold, label=""];
17->16 [style = solid, label="pkscs8KeySpec"];
13->2 [style = dotted, label="true"];
7->14 [style = dotted, label="true"];
7->0 [style = bold, label=""];
16->6 [style = bold, label=""];
1->12 [style = dashed, label="0"];
4->10 [style = bold, label=""];
7->0 [style = dotted, label="true"];
4->10 [style = solid, label="sigBytes"];
15->17 [style = solid, label="sigBytes"];
8->1 [style = dotted, label="true"];
10->5 [style = bold, label=""];
5->7 [style = bold, label=""];
17->5 [style = bold, label=""];
12->6 [style = bold, label=""];
8->12 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
15->17 [style = bold, label=""];
}
