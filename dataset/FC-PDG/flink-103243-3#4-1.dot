digraph {
35 [style = filled, label = "testIdlenessForwarding['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testIdleWatermarkHandling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "KeySelector<Long,Integer> dummyKeySelector = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testHarness.setup()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHarness.processStreamStatus(1,StreamStatus.ACTIVE)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testHarness.processElement(0,new StreamRecord<>(1L,1L))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testIdleWatermarkHandling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHarness.processStreamStatus(2,StreamStatus.IDLE)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "expectedOutput.add(new StreamRecord<>(1L))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.open()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testHarness.processElement(0,new StreamRecord<>(3L,3L))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectedOutput.add(new Watermark(3L))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness.emitStreamStatus(2,StreamStatus.IDLE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "expectedOutput.add(StreamStatus.IDLE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testHarness.processElement(0,new StreamRecord<>(4L,4L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testHarness.emitStreamStatus(2,StreamStatus.IDLE)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness.processWatermark(0,new Watermark(1L))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(testHarness.getOutput(),empty())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testHarness.emitStreamStatus(1,StreamStatus.ACTIVE)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "testHarness.emitStreamStatus(0,StreamStatus.IDLE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testHarness.processWatermark(0,new Watermark(3L))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expectedOutput.add(new Watermark(1L))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.processStreamStatus(1,StreamStatus.IDLE)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "expectedOutput.add(new StreamRecord<>(3L))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testHarness.setKeySelector(0,dummyKeySelector)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHarness.processWatermark(0,new Watermark(4L))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testHarness.setKeySelector(1,dummyKeySelector)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.setKeySelector(2,dummyKeySelector)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testHarness.emitStreamStatus(1,StreamStatus.IDLE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
11->21 [style = solid, label="dummyKeySelector"];
11->1 [style = solid, label="dummyKeySelector"];
29->17 [style = bold, label=""];
35->16 [style = bold, label=""];
16->11 [style = bold, label=""];
5->23 [style = bold, label=""];
0->6 [style = bold, label=""];
15->21 [style = bold, label=""];
24->0 [style = bold, label=""];
10->27 [style = bold, label=""];
16->12 [style = solid, label="expectedOutput"];
22->29 [style = dashed, label="0"];
28->7 [style = bold, label=""];
1->20 [style = bold, label=""];
14->10 [style = bold, label=""];
25->4 [style = bold, label=""];
34->31 [style = bold, label=""];
4->18 [style = bold, label=""];
32->34 [style = bold, label=""];
2->9 [style = bold, label=""];
11->15 [style = solid, label="dummyKeySelector"];
12->7 [style = bold, label=""];
11->15 [style = bold, label=""];
16->2 [style = solid, label="expectedOutput"];
20->5 [style = bold, label=""];
19->24 [style = bold, label=""];
23->32 [style = dashed, label="0"];
5->32 [style = bold, label=""];
26->16 [style = bold, label=""];
7->22 [style = bold, label=""];
27->4 [style = bold, label=""];
16->7 [style = solid, label="expectedOutput"];
16->18 [style = solid, label="expectedOutput"];
30->12 [style = bold, label=""];
3->2 [style = bold, label=""];
10->25 [style = bold, label=""];
25->27 [style = dashed, label="0"];
12->28 [style = dashed, label="0"];
31->33 [style = bold, label=""];
23->19 [style = bold, label=""];
21->1 [style = bold, label=""];
17->3 [style = bold, label=""];
33->30 [style = bold, label=""];
22->17 [style = bold, label=""];
16->10 [style = solid, label="expectedOutput"];
16->20 [style = bold, label=""];
17->30 [style = dashed, label="0"];
13->14 [style = bold, label=""];
16->31 [style = solid, label="expectedOutput"];
6->28 [style = bold, label=""];
9->13 [style = bold, label=""];
7->29 [style = bold, label=""];
6->12 [style = bold, label=""];
}
