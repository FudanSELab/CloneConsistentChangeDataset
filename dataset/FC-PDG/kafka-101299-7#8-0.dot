digraph {
21 [style = filled, label = "final List<KeyValue<byte((,byte((>> entries = new ArrayList<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "entries.add(new KeyValue<>(\"1\".getBytes(\"UTF-8\"),null))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "context.restore(rocksDBStore.name(),entries)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(stringDeserializer.deserialize(null,rocksDBStore.get(new Bytes(stringSerializer.serialize(null,\"1\")))),\"a\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldRestoreThenDeleteOnRestoreAll['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return entries@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "getKeyValueEntries['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "keys.add(stringDeserializer.deserialize(null,iterator.next().key.get()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "entries.add(new KeyValue<>(\"2\".getBytes(\"UTF-8\"),\"b\".getBytes(\"UTF-8\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final KeyValueIterator<Bytes,byte((> iterator = rocksDBStore.all()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "entries.add(new KeyValue<>(\"1\".getBytes(\"UTF-8\"),(byte(()null))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "shouldRestoreThenDeleteOnRestoreAll['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "entries.add(new KeyValue<>(\"3\".getBytes(\"UTF-8\"),\"c\".getBytes(\"UTF-8\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "iterator.hasNext()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Set<String> keys = new HashSet<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "context.restore(rocksDBStore.name(),entries)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "entries.add(new KeyValue<>(\"1\".getBytes(\"UTF-8\"),\"a\".getBytes(\"UTF-8\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "entries.clear()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "entries.add(new KeyValue<>(\"3\".getBytes(\"UTF-8\"),\"c\".getBytes(\"UTF-8\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(stringDeserializer.deserialize(null,rocksDBStore.get(new Bytes(stringSerializer.serialize(null,\"2\")))),\"b\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final List<KeyValue<byte((,byte((>> entries = getKeyValueEntries()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "entries.add(new KeyValue<>(\"2\".getBytes(\"UTF-8\"),\"b\".getBytes(\"UTF-8\")))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "rocksDBStore.init(context,rocksDBStore)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(stringDeserializer.deserialize(null,rocksDBStore.get(new Bytes(stringSerializer.serialize(null,\"3\")))),\"c\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(keys,equalTo(Utils.mkSet(\"2\",\"3\")))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
15->2 [style = bold, label=""];
7->1 [style = bold, label=""];
24->19 [style = bold, label=""];
0->6 [style = bold, label=""];
9->4 [style = bold, label=""];
18->11 [style = bold, label=""];
1->7 [style = bold, label=""];
22->23 [style = bold, label=""];
7->14 [style = bold, label=""];
20->21 [style = bold, label=""];
12->13 [style = bold, label=""];
11->6 [style = solid, label="entries"];
13->17 [style = bold, label=""];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
17->2 [style = bold, label=""];
3->7 [style = bold, label=""];
21->22 [style = bold, label=""];
21->19 [style = solid, label="entries"];
6->10 [style = bold, label=""];
3->14 [style = solid, label="keys"];
15->17 [style = dashed, label="0"];
10->9 [style = bold, label=""];
13->15 [style = bold, label=""];
11->2 [style = solid, label="entries"];
7->1 [style = dotted, label="true"];
8->11 [style = bold, label=""];
16->12 [style = bold, label=""];
4->16 [style = bold, label=""];
2->5 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
