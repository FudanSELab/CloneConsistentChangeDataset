digraph {
4 [style = filled, label = "PieSectionEntity e2 = (PieSectionEntity)e1.clone()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(e1,e2)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset<String>(),1,2,\"Key\",\"ToolTip\",\"URL\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertTrue(e1 != e2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(e1.equals(e2))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(e1.getClass() == e2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PieSectionEntity e2 = (PieSectionEntity)TestUtils.serialised(e1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset(),1,2,\"Key\",\"ToolTip\",\"URL\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
3->9 [style = bold, label=""];
3->1 [style = solid, label="e1"];
6->4 [style = bold, label=""];
6->1 [style = solid, label="e1"];
5->2 [style = bold, label=""];
4->1 [style = bold, label=""];
4->2 [style = solid, label="e2"];
9->10 [style = solid, label="e2"];
3->6 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
3->10 [style = solid, label="e1"];
9->10 [style = bold, label=""];
3->9 [style = solid, label="e1"];
1->10 [style = dashed, label="0"];
3->4 [style = bold, label=""];
7->6 [style = bold, label=""];
4->1 [style = solid, label="e2"];
8->3 [style = bold, label=""];
}
