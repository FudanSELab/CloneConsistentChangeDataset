digraph {
1 [style = filled, label = "DefaultTableXYDataset d1 = new DefaultTableXYDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(d1 != d2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(d1,d2)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DefaultTableXYDataset d2 = (DefaultTableXYDataset)TestUtilities.serialised(d1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "s1.add(2.0,2.2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DefaultTableXYDataset d2 = (DefaultTableXYDataset)TestUtils.serialised(d1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series 1\",true,false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "d1.addSeries(s1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultTableXYDataset d2 = (DefaultTableXYDataset)d1.clone()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(d1.equals(d2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s1.add(1.0,1.1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "s1.add(3.0,3.3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertFalse(d1.equals(d2))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15->13 [style = bold, label=""];
7->1 [style = bold, label=""];
4->6 [style = bold, label=""];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
3->2 [style = solid, label="s1"];
8->6 [style = bold, label=""];
1->12 [style = solid, label="d1"];
2->4 [style = bold, label=""];
14->16 [style = solid, label="d2"];
13->16 [style = bold, label=""];
11->15 [style = bold, label=""];
6->12 [style = dashed, label="0"];
1->8 [style = solid, label="d1"];
14->12 [style = solid, label="d2"];
8->6 [style = solid, label="d2"];
3->5 [style = bold, label=""];
5->0 [style = bold, label=""];
1->4 [style = solid, label="d1"];
14->12 [style = bold, label=""];
2->14 [style = bold, label=""];
4->8 [style = dashed, label="0"];
4->6 [style = solid, label="d2"];
1->6 [style = solid, label="d1"];
4->14 [style = dashed, label="0"];
14->15 [style = solid, label="d2"];
9->1 [style = bold, label=""];
10->1 [style = bold, label=""];
2->8 [style = bold, label=""];
}
