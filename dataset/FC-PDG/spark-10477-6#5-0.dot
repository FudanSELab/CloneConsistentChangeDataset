digraph {
14 [style = filled, label = "runLassoUsingStaticMethods['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "double A = 3.0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int nPoints = 100@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "LinearRegressionWithSGD linSGDImpl = new LinearRegressionWithSGD(1.0,100,0.0,1.0)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "LinearRegressionWithSGD linSGDImpl = new LinearRegressionWithSGD()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "List<LabeledPoint> validationData = LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,17,0.1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "runLinearRegressionUsingConstructor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "linSGDImpl.setIntercept(true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int numAccurate = validatePrediction(validationData,model)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "runLinearRegressionUsingConstructor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertTrue(numAccurate > nPoints * 4.0 / 5.0)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "LinearRegressionModel model = linSGDImpl.run(testRDD.rdd())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = jsc.parallelize(LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,42,0.1),2).cache()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int numAccurate = validatePrediction(validationData,model)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(numAccurate > nPoints * 4.0 / 5.0)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "LassoModel model = LassoWithSGD.train(testRDD.rdd(),100,1.0,0.01,1.0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int nPoints = 10000@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "double A = 0.0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "double(( weights = {-1.5,1.0e-2}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = jsc.parallelize(LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,42,0.1),2).cache()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
16->0 [style = bold, label=""];
15->2 [style = bold, label=""];
2->19 [style = bold, label=""];
9->16 [style = dashed, label="0"];
9->0 [style = bold, label=""];
2->17 [style = solid, label="validationData"];
2->3 [style = bold, label=""];
11->6 [style = bold, label=""];
9->2 [style = solid, label="A"];
16->2 [style = solid, label="A"];
13->18 [style = solid, label="nPoints"];
3->6 [style = bold, label=""];
19->17 [style = bold, label=""];
10->13 [style = dashed, label="0"];
13->16 [style = bold, label=""];
0->15 [style = bold, label=""];
19->17 [style = solid, label="model"];
0->7 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
12->10 [style = bold, label=""];
13->2 [style = solid, label="nPoints"];
7->2 [style = bold, label=""];
4->8 [style = solid, label="model"];
7->15 [style = dashed, label="0"];
4->8 [style = bold, label=""];
17->18 [style = solid, label="numAccurate"];
10->2 [style = solid, label="nPoints"];
10->9 [style = bold, label=""];
14->13 [style = bold, label=""];
0->2 [style = solid, label="weights"];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
3->11 [style = dashed, label="0"];
10->1 [style = solid, label="nPoints"];
8->1 [style = solid, label="numAccurate"];
2->8 [style = solid, label="validationData"];
}
