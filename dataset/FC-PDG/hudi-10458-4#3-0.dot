digraph {
24 [style = filled, label = "org.apache.flink.configuration.Configuration conf = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "conf.setBoolean(FlinkOptions.CLEAN_ASYNC_ENABLED,config.cleanAsyncEnable)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "conf.setString(FlinkOptions.TABLE_TYPE,config.tableType.toUpperCase())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "conf.setInteger(FlinkOptions.CLEAN_RETAIN_COMMITS,config.cleanRetainCommits)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "conf.setInteger(FlinkOptions.ARCHIVE_MIN_COMMITS,config.archiveMinCommits)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS,config.compactionDeltaCommits)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return conf@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "conf.setString(FlinkOptions.COMPACTION_TRIGGER_STRATEGY,config.compactionTriggerStrategy)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "conf.setLong(FlinkOptions.RETRY_INTERVAL_MS,Long.parseLong(config.instantRetryInterval))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "toFlinkConfig['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "conf.setString(FlinkOptions.TABLE_NAME,config.targetTableName)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "conf.setString(FlinkOptions.PAYLOAD_CLASS,config.payloadClassName)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "conf.setString(FlinkOptions.READ_AVRO_SCHEMA_PATH,config.readSchemaFilePath)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "conf.setString(FlinkOptions.PARTITION_PATH_FIELD,config.partitionPathField)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "conf.setInteger(FlinkOptions.RETRY_TIMES,Integer.parseInt(config.instantRetryTimes))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "conf.setString(FlinkOptions.OPERATION,config.operation.value())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "toFlinkConfig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "!StringUtils.isNullOrEmpty(config.keygenClass)@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "conf.setString(FlinkOptions.KEYGEN_CLASS,config.keygenClass)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "conf.setString(FlinkOptions.PATH,config.targetBasePath)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "FlinkCompactionConfig config@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "toFlinkConfig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "conf.setInteger(FlinkOptions.COMPACTION_DELTA_SECONDS,config.compactionDeltaSeconds)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "conf.setBoolean(FlinkOptions.INSERT_DROP_DUPS,config.filterDupes)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "conf.setBoolean(FlinkOptions.IGNORE_FAILED,config.commitOnErrors)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,String> propsMap = new HashMap<String,String>((Map)StreamerUtil.getProps(config))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "conf.setString(FlinkOptions.KEYGEN_TYPE,config.keygenType)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "FlinkStreamerConfig config@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return conf@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "conf.setInteger(FlinkOptions.COMPACTION_MAX_MEMORY,config.compactionMaxMemory)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "conf.setString(FlinkOptions.KEYGEN_CLASS,config.keygenClass)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "conf.setString(FlinkOptions.RECORD_KEY_FIELD,config.recordKeyField)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "conf.setInteger(FlinkOptions.WRITE_TASKS,config.writeTaskNum)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "org.apache.flink.configuration.Configuration conf = fromMap(propsMap)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "conf.setString(FlinkOptions.PATH,config.path)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "conf.setString(FlinkOptions.PRECOMBINE_FIELD,config.sourceOrderingField)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "conf.setInteger(FlinkOptions.ARCHIVE_MAX_COMMITS,config.archiveMaxCommits)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->30 [style = bold, label=""];
24->35 [style = solid, label="conf"];
25->32 [style = bold, label=""];
21->3 [style = bold, label=""];
3->14 [style = bold, label=""];
12->33 [style = dashed, label="0"];
0->4 [style = bold, label=""];
8->0 [style = solid, label="config"];
2->7 [style = bold, label=""];
11->0 [style = bold, label=""];
22->3 [style = bold, label=""];
13->6 [style = bold, label=""];
20->22 [style = bold, label=""];
9->15 [style = bold, label=""];
32->27 [style = bold, label=""];
5->10 [style = bold, label=""];
28->34 [style = dotted, label="true"];
4->14 [style = solid, label="conf"];
23->0 [style = bold, label=""];
10->18 [style = bold, label=""];
27->35 [style = bold, label=""];
20->21 [style = bold, label=""];
30->33 [style = bold, label=""];
11->8 [style = dotted, label="true"];
28->24 [style = bold, label=""];
1->27 [style = dashed, label="0"];
24->31 [style = bold, label=""];
9->36 [style = dashed, label="0"];
16->3 [style = bold, label=""];
23->8 [style = dotted, label="true"];
4->9 [style = bold, label=""];
19->17 [style = bold, label=""];
12->19 [style = bold, label=""];
36->26 [style = bold, label=""];
18->16 [style = bold, label=""];
20->22 [style = dotted, label="true"];
15->13 [style = bold, label=""];
13->29 [style = dashed, label="0"];
6->12 [style = bold, label=""];
8->34 [style = dashed, label="0"];
7->5 [style = bold, label=""];
16->20 [style = bold, label=""];
17->32 [style = dashed, label="0"];
31->36 [style = bold, label=""];
0->4 [style = solid, label="propsMap"];
33->25 [style = bold, label=""];
1->2 [style = bold, label=""];
26->29 [style = bold, label=""];
20->21 [style = dotted, label="false"];
17->1 [style = bold, label=""];
}
