digraph {
9 [style = filled, label = "EasyMock.replay(mock)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EasyMock.replay(taskRunner,taskMaster,taskStorageQueryAdapter,indexerMetadataStorageAdapter,req,workerTaskRunnerQueryAdapter)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final Response response = overlordResource.getLeader()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(200,response.getStatus())@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testLeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(\"boz\",response.getEntity())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expect(mock.getCurrentLeader()).andReturn(\"boz\").once()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EasyMock.replay(taskRunner,taskMaster,taskStorageQueryAdapter,indexerMetadataStorageAdapter,req)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(taskMaster.getCurrentLeader()).andReturn(\"boz\").once()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Response response = new CoordinatorResource(mock).getLeader()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testLeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
11->8 [style = bold, label=""];
5->2 [style = bold, label=""];
4->1 [style = bold, label=""];
2->0 [style = bold, label=""];
3->10 [style = dashed, label="0"];
2->7 [style = bold, label=""];
9->10 [style = bold, label=""];
0->7 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
8->9 [style = bold, label=""];
6->2 [style = bold, label=""];
10->4 [style = bold, label=""];
}
