digraph {
21 [style = filled, label = "testReplaceWithNewPartitionSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "PartitionSpec newSpec = PartitionSpec.unpartitioned()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "table.newAppend().appendFile(FILE_A).commit()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "replace.commitTransaction()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",schema.asStruct(),table.schema().asStruct())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Version should be 1\",1L,(long)version())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "replace.newAppend().appendFile(FILE_B).appendFile(FILE_C).appendFile(FILE_D).commit()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Snapshot start = table.currentSnapshot()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "validateSnapshot(null,table.currentSnapshot(),FILE_B,FILE_C,FILE_D)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "((TestTables.TestTableOperations)((BaseTransaction)replace).ops()).failCommits(1)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(\"Version should be 2\",2L,(long)version())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Snapshot start = table.currentSnapshot()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "table.refresh()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testReplaceTransactionRetry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",schema.asStruct(),table.schema().asStruct())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Table should have new unpartitioned spec\",0,table.spec().fields().size())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "replace.commitTransaction()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Schema schema = table.schema()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertNull(\"Table should not have a current snapshot\",table.currentSnapshot())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "validateSnapshot(start,table.currentSnapshot(),FILE_A)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testReplaceTransactionRetry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Transaction replace = TestTables.beginReplace(tableDir,\"test\",table.schema(),newSpec)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "table.ops().failCommits(1)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->9 [style = bold, label=""];
15->2 [style = bold, label=""];
9->0 [style = bold, label=""];
4->17 [style = bold, label=""];
21->19 [style = bold, label=""];
12->8 [style = dashed, label="0"];
4->17 [style = dashed, label="0"];
16->10 [style = bold, label=""];
2->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
3->11 [style = bold, label=""];
11->17 [style = solid, label="schema"];
3->4 [style = solid, label="schema"];
9->16 [style = bold, label=""];
14->1 [style = bold, label=""];
20->22 [style = bold, label=""];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
0->10 [style = bold, label=""];
5->6 [style = bold, label=""];
10->13 [style = bold, label=""];
7->2 [style = bold, label=""];
12->14 [style = bold, label=""];
12->18 [style = bold, label=""];
3->4 [style = solid, label="start"];
13->8 [style = bold, label=""];
2->6 [style = solid, label="start"];
19->3 [style = bold, label=""];
19->17 [style = solid, label="newSpec"];
8->12 [style = bold, label=""];
22->13 [style = bold, label=""];
17->20 [style = bold, label=""];
}
