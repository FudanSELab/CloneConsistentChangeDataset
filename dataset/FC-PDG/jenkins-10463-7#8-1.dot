digraph {
13 [style = filled, label = "j.assertLogContains(\"Threw AbortException from publisher!\",b)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"Third publisher must see FAILURE status\",FileUtils.readFileToString(file),Result.FAILURE.toString())@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "artifactArchiver.setOnlyIfSuccessful(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"Third publisher must see FAILURE status\",FileUtils.readFileToString(file,StandardCharsets.UTF_8),Result.FAILURE.toString())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "j.assertLogContains(\"Threw IOException from publisher!\",b)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(\"Build must fail, because we used FalsePublisher\",Result.FAILURE,b.getResult())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "FreeStyleProject p = j.createFreeStyleProject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "p.getPublishersList().add(new AbortExceptionPublisher())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "FreeStyleBuild b = p.scheduleBuild2(0).get()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "p.getPublishersList().add(new TrueFalsePublisher(true))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testFreestyleWithIOExceptionPublisher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"Build must fail, because we used AbortExceptionPublisher\",Result.FAILURE,b.getResult())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "p.getPublishersList().add(artifactArchiver)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "File file = new File(b.getArtifactsDir(),\"result.txt\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "p.getPublishersList().add(new ResultWriterPublisher(\"result.txt\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testFreestyleWithExceptionPublisher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final ArtifactArchiver artifactArchiver = new ArtifactArchiver(\"result.txt\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "j.assertLogContains(\"at hudson.model.utils.IOExceptionPublisher\",b)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "j.assertLogNotContains(\"at\",b)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(\"ArtifactArchiver is executed even prior publisher fails\",file.exists())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testFreestyleWithExceptionPublisher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "p.getPublishersList().add(new IOExceptionPublisher())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->14 [style = bold, label=""];
7->2 [style = solid, label="file"];
10->15 [style = bold, label=""];
7->15 [style = solid, label="file"];
16->8 [style = bold, label=""];
7->10 [style = bold, label=""];
9->4 [style = bold, label=""];
0->12 [style = bold, label=""];
18->17 [style = bold, label=""];
13->17 [style = dashed, label="0"];
8->6 [style = bold, label=""];
12->9 [style = bold, label=""];
4->21 [style = dashed, label="0"];
21->18 [style = bold, label=""];
19->8 [style = bold, label=""];
1->11 [style = bold, label=""];
2->15 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
17->7 [style = bold, label=""];
6->20 [style = bold, label=""];
6->1 [style = bold, label=""];
11->5 [style = bold, label=""];
9->14 [style = solid, label="b"];
9->18 [style = solid, label="b"];
5->0 [style = bold, label=""];
13->7 [style = bold, label=""];
3->8 [style = bold, label=""];
9->17 [style = solid, label="b"];
9->21 [style = bold, label=""];
10->2 [style = bold, label=""];
9->13 [style = solid, label="b"];
14->13 [style = bold, label=""];
14->18 [style = dashed, label="0"];
5->12 [style = solid, label="artifactArchiver"];
20->11 [style = bold, label=""];
}
