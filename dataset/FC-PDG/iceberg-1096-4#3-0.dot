digraph {
3 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "T upper = max(colStats,id)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "colStats != null && !colStats.isEmpty()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "valueCount == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "T lower = min(colStats,id)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Preconditions.checkNotNull(struct.field(id),\"Cannot filter by nested column: %s\",schema.findField(id))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "cmp > 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "isNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return ROWS_CANNOT_MATCH@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "!colStats.hasNonNullValue()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "colStats != null && !colStats.isEmpty() && colStats.getNumNulls() == 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Statistics<?> colStats = stats.get(id)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "cmp = lit.comparator().compare(upper,lit.value())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "schema.findType(id) instanceof Type.NestedType@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return ROWS_MIGHT_MATCH@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "eq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "eq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return ROWS_MIGHT_MATCH@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cmp < 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "return ROWS_MIGHT_MATCH@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return ROWS_CANNOT_MATCH@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return ROWS_MIGHT_MATCH@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return ROWS_CANNOT_MATCH@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return ROWS_CANNOT_MATCH@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return ROWS_CANNOT_MATCH@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22->4 [style = solid, label="id"];
23->16 [style = dotted, label="true"];
15->2 [style = bold, label=""];
16->9 [style = bold, label=""];
16->18 [style = bold, label=""];
20->13 [style = bold, label=""];
27->1 [style = bold, label=""];
10->15 [style = bold, label=""];
0->13 [style = bold, label=""];
14->12 [style = dotted, label="true"];
28->30 [style = bold, label=""];
23->8 [style = dotted, label="true"];
24->25 [style = dotted, label="true"];
6->22 [style = bold, label=""];
16->18 [style = dotted, label="true"];
21->28 [style = dashed, label="0"];
22->28 [style = solid, label="id"];
31->32 [style = bold, label=""];
13->14 [style = solid, label="colStats"];
2->3 [style = bold, label=""];
31->13 [style = bold, label=""];
20->0 [style = bold, label=""];
22->13 [style = solid, label="id"];
13->14 [style = solid, label="valueCount"];
20->0 [style = dotted, label="true"];
24->17 [style = dotted, label="true"];
22->21 [style = bold, label=""];
12->32 [style = dashed, label="0"];
22->28 [style = bold, label=""];
22->1 [style = solid, label="id"];
23->19 [style = dotted, label="true"];
7->19 [style = solid, label="upper"];
23->7 [style = dotted, label="true"];
14->27 [style = dotted, label="true"];
17->29 [style = dashed, label="0"];
12->1 [style = bold, label=""];
21->4 [style = solid, label="field"];
24->22 [style = bold, label=""];
23->2 [style = dotted, label="true"];
6->17 [style = dotted, label="true"];
14->1 [style = bold, label=""];
1->23 [style = bold, label=""];
8->7 [style = bold, label=""];
19->16 [style = bold, label=""];
26->22 [style = bold, label=""];
31->32 [style = dotted, label="true"];
10->15 [style = dotted, label="true"];
22->30 [style = solid, label="id"];
1->2 [style = solid, label="colStats"];
19->16 [style = solid, label="cmp"];
23->10 [style = dotted, label="true"];
8->5 [style = bold, label=""];
22->20 [style = bold, label=""];
22->20 [style = solid, label="id"];
8->5 [style = dotted, label="true"];
30->31 [style = bold, label=""];
22->7 [style = solid, label="id"];
3->8 [style = bold, label=""];
14->12 [style = bold, label=""];
3->8 [style = solid, label="cmp"];
2->3 [style = solid, label="lower"];
4->20 [style = bold, label=""];
23->10 [style = bold, label=""];
18->9 [style = bold, label=""];
23->3 [style = dotted, label="true"];
5->7 [style = bold, label=""];
26->29 [style = dotted, label="true"];
10->2 [style = bold, label=""];
1->23 [style = solid, label="colStats"];
14->27 [style = bold, label=""];
6->11 [style = dotted, label="true"];
1->7 [style = solid, label="colStats"];
32->13 [style = bold, label=""];
23->9 [style = bold, label=""];
7->19 [style = bold, label=""];
30->31 [style = solid, label="valueCount"];
13->14 [style = bold, label=""];
22->2 [style = solid, label="id"];
21->4 [style = bold, label=""];
23->14 [style = dashed, label="0"];
22->21 [style = solid, label="id"];
}
