digraph {
17 [style = filled, label = "tiep.scheme != null && tiep.scheme.equals(uri.getScheme())@@@140@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "URI uri = new URI(candidate)@@@138@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "return UnDecided@@@110@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "this.type = type@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return type@@@107@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "encodeStringIntoBroadcastUri['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return uri@@@141@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "BroadcastDomainType tiep = getSchemeValue(uri)@@@139@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "return new URI(scheme + \"://\" + value.toString())@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "toUri['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "T value@@@27@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "IsolationType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String candidate@@@151@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Long.parseLong(candidate)@@@153@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "return Vlan.toUri(candidate)@@@124@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getVlanUriWhenNumberFormatException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "BroadcastDomainType isolationMethod@@@151@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "fromString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String candidate@@@121@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "toEnumValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return isolationMethod.toUri(candidate)@@@154@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Long.parseLong(candidate)@@@123@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "throw new CloudRuntimeException(\"string '\" + candidate + \"' has an unknown BroadcastDomainType.\")@@@144@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0->2 [style = solid, label="scheme"];
0->4 [style = solid, label="scheme"];
2->4 [style = bold, label=""];
3->1 [style = dotted, label="true"];
22->20 [style = dotted, label="true"];
17->14 [style = bold, label=""];
4->0 [style = dotted, label="true"];
3->1 [style = bold, label=""];
1->4 [style = solid, label="type"];
12->10 [style = bold, label=""];
13->12 [style = bold, label=""];
7->13 [style = solid, label="candidate"];
7->8 [style = solid, label="scheme"];
2->1 [style = bold, label=""];
18->21 [style = bold, label=""];
15->7 [style = dotted, label="true"];
7->10 [style = solid, label="scheme"];
17->16 [style = bold, label=""];
4->3 [style = bold, label=""];
0->1 [style = solid, label="uri"];
1->2 [style = bold, label=""];
0->1 [style = solid, label="candidate"];
10->9 [style = dotted, label="false"];
19->18 [style = dotted, label="true"];
12->7 [style = dotted, label="true"];
18->20 [style = dotted, label="true"];
11->10 [style = dotted, label="true"];
1->4 [style = dotted, label="false"];
7->10 [style = solid, label="str"];
7->10 [style = solid, label="candidate"];
9->11 [style = dotted, label="true"];
4->1 [style = bold, label=""];
7->14 [style = solid, label="candidate"];
6->0 [style = dotted, label="true"];
10->7 [style = bold, label=""];
13->16 [style = solid, label="uri"];
10->8 [style = dotted, label="true"];
11->13 [style = bold, label=""];
1->4 [style = bold, label=""];
1->2 [style = dotted, label="true"];
7->9 [style = solid, label="candidate"];
7->11 [style = solid, label="candidate"];
19->18 [style = bold, label=""];
8->10 [style = bold, label=""];
9->10 [style = bold, label=""];
1->0 [style = bold, label=""];
22->19 [style = bold, label=""];
4->3 [style = dotted, label="true"];
17->16 [style = dotted, label="true"];
3->2 [style = bold, label=""];
0->1 [style = solid, label="str"];
10->8 [style = bold, label=""];
11->7 [style = dotted, label="true"];
8->7 [style = dotted, label="true"];
17->14 [style = dotted, label="false"];
12->17 [style = bold, label=""];
11->10 [style = bold, label=""];
11->8 [style = bold, label=""];
0->1 [style = solid, label="scheme"];
7->8 [style = solid, label="candidate"];
19->21 [style = solid, label="type"];
22->18 [style = bold, label=""];
7->10 [style = solid, label="uri"];
6->1 [style = bold, label=""];
15->10 [style = bold, label=""];
3->4 [style = bold, label=""];
13->12 [style = solid, label="uri"];
22->19 [style = dotted, label="true"];
8->9 [style = bold, label=""];
9->11 [style = bold, label=""];
10->9 [style = bold, label=""];
9->7 [style = dotted, label="true"];
19->20 [style = bold, label=""];
4->5 [style = bold, label=""];
9->13 [style = bold, label=""];
11->9 [style = bold, label=""];
0->4 [style = solid, label="str"];
0->2 [style = solid, label="candidate"];
3->5 [style = bold, label=""];
20->18 [style = solid, label="scheme"];
3->0 [style = dotted, label="true"];
19->21 [style = bold, label=""];
7->9 [style = solid, label="str"];
18->19 [style = bold, label=""];
0->1 [style = solid, label="uriString"];
10->9 [style = solid, label="type"];
19->21 [style = dotted, label="false"];
7->10 [style = solid, label="uriString"];
2->0 [style = dotted, label="true"];
7->9 [style = solid, label="scheme"];
}
