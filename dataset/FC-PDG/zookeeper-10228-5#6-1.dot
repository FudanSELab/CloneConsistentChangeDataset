digraph {
28 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(handshakeCompleted)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Socket badClientSocket = null@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testTLSDetectionNonBlockingStrictServerIdleClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{forceClose(badClientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "!handshakeCompleted@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "handshakeCompletedLock@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "forceClose(badClientSocket)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Socket badClientSocket = connectWithoutSSL()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Socket secureClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "testTLSDetectionNonBlockingStrictServerDisconnectedClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testTLSDetectionNonBlockingStrictServerIdleClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Socket secureClientSocket = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!handshakeCompleted@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "serverThread.start()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "serverThread.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
16->8 [style = dotted, label="true"];
4->14 [style = bold, label=""];
16->8 [style = bold, label=""];
25->22 [style = bold, label=""];
13->4 [style = solid, label="buf"];
3->31 [style = bold, label=""];
8->19 [style = bold, label=""];
27->3 [style = bold, label=""];
10->4 [style = solid, label="buf"];
4->14 [style = solid, label="bytesRead"];
31->29 [style = solid, label="badClientSocket"];
8->17 [style = dotted, label="true"];
31->29 [style = bold, label=""];
30->32 [style = bold, label=""];
13->16 [style = solid, label="buf"];
33->18 [style = solid, label="secureClientSocket"];
33->1 [style = bold, label=""];
25->24 [style = dotted, label="true"];
19->17 [style = bold, label=""];
25->28 [style = dotted, label="true"];
6->31 [style = dashed, label="0"];
26->6 [style = bold, label=""];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
5->17 [style = bold, label=""];
11->13 [style = solid, label="bytesRead"];
24->22 [style = solid, label="certKeyType"];
0->15 [style = bold, label=""];
7->26 [style = bold, label=""];
12->18 [style = solid, label="secureClientSocket"];
19->5 [style = bold, label=""];
6->1 [style = bold, label=""];
32->9 [style = bold, label=""];
14->16 [style = dotted, label="true"];
29->33 [style = bold, label=""];
10->11 [style = bold, label=""];
14->5 [style = dotted, label="true"];
8->5 [style = bold, label=""];
22->27 [style = bold, label=""];
3->7 [style = bold, label=""];
15->9 [style = bold, label=""];
6->18 [style = solid, label="badClientSocket"];
11->13 [style = bold, label=""];
7->6 [style = bold, label=""];
25->20 [style = dotted, label="true"];
19->5 [style = dotted, label="true"];
16->5 [style = bold, label=""];
9->3 [style = bold, label=""];
2->21 [style = solid, label="secureClientSocket"];
1->2 [style = bold, label=""];
20->22 [style = solid, label="caKeyType"];
18->21 [style = bold, label=""];
25->23 [style = dotted, label="true"];
1->21 [style = solid, label="badClientSocket"];
28->22 [style = solid, label="hostnameVerification"];
23->22 [style = solid, label="paramIndex"];
10->11 [style = solid, label="buf"];
17->18 [style = bold, label=""];
8->19 [style = dotted, label="true"];
13->4 [style = bold, label=""];
6->12 [style = bold, label=""];
}
