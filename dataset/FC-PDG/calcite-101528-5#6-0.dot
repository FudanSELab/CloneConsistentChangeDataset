digraph {
5 [style = filled, label = "testSemiJoinFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final RelBuilder builder = relBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final RelNode root = builder.scan(\"DEPT\").scan(\"EMP\").filter(builder.call(SqlStdOperatorTable.GREATER_THAN,builder.field(\"EMPNO\"),builder.literal((short)10))).join(JoinRelType.SEMI,builder.equals(builder.field(2,1,\"DEPTNO\"),builder.field(2,0,\"DEPTNO\"))).project(builder.field(\"DEPTNO\")).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final RelNode root = builder.scan(\"DEPT\").scan(\"EMP\").filter(builder.call(SqlStdOperatorTable.GREATER_THAN,builder.field(builder.peek().getRowType().getField(\"EMPNO\",false,false).getIndex()),builder.literal((short)10))).join(JoinRelType.SEMI,builder.equals(builder.field(2,1,\"DEPTNO\"),builder.field(2,0,\"DEPTNO\"))).project(builder.field(\"DEPTNO\")).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertThat(toSql(root),isLinux(expectedSql))@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String expectedSql = \"SELECT \"DEPTNO\"\" + \"FROM \"scott\".\"DEPT\"\" + \"WHERE EXISTS (SELECT 1\" + \"FROM (SELECT *\" + \"FROM \"scott\".\"EMP\"\" + \"WHERE \"EMPNO\" > 10) AS \"t\"\" + \"WHERE \"DEPT\".\"DEPTNO\" = \"t\".\"DEPTNO\")\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RelNode root = builder.scan(\"DEPT\").scan(\"EMP\").project(builder.field(builder.peek().getRowType().getField(\"EMPNO\",false,false).getIndex()),builder.field(builder.peek().getRowType().getField(\"DEPTNO\",false,false).getIndex())).join(JoinRelType.SEMI,builder.equals(builder.field(2,1,\"DEPTNO\"),builder.field(2,0,\"DEPTNO\"))).project(builder.field(\"DEPTNO\")).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSemiJoinProject['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final String expectedSql = \"SELECT \"DEPTNO\"\" + \"FROM \"scott\".\"DEPT\"\" + \"WHERE EXISTS (SELECT 1\" + \"FROM (SELECT \"EMPNO\", \"DEPTNO\"\" + \"FROM \"scott\".\"EMP\") AS \"t\"\" + \"WHERE \"DEPT\".\"DEPTNO\" = \"t\".\"DEPTNO\")\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSemiJoinFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6->1 [style = solid, label="root"];
8->1 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->6 [style = dashed, label="0"];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
8->1 [style = solid, label="expectedSql"];
0->1 [style = solid, label="expectedSql"];
3->9 [style = dashed, label="0"];
9->8 [style = bold, label=""];
9->1 [style = solid, label="root"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
2->6 [style = bold, label=""];
3->1 [style = solid, label="root"];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
}
