digraph {
16 [style = filled, label = "final String applicationId = \"1\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "!cmd.hasOption(GobblinClusterConfigurationKeys.APPLICATION_NAME_OPTION_NAME) || !cmd.hasOption(GobblinClusterConfigurationKeys.HELIX_INSTANCE_NAME_OPTION_NAME) || !cmd.hasOption(GobblinAWSConfigurationKeys.APP_WORK_DIR)@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "LOGGER.info(JvmUtils.getJvmInputArguments())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Options options = buildOptions()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final CommandLine cmd = new DefaultParser().parse(options,args)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Log4jConfigHelper.updateLog4jConfiguration(,GobblinAWSConfigurationKeys.GOBBLIN_AWS_LOG4J_CONFIGURATION_FILE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "gobblinTaskRunner.start()@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String helixInstanceName = cmd.getOptionValue(GobblinClusterConfigurationKeys.HELIX_INSTANCE_NAME_OPTION_NAME)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.getProperty(\"log4j.configuration\") == null@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "!cmd.hasOption(GobblinClusterConfigurationKeys.APPLICATION_NAME_OPTION_NAME) || !cmd.hasOption(GobblinAWSConfigurationKeys.APP_WORK_DIR)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Log4jConfigHelper.updateLog4jConfiguration(,GobblinAWSConfigurationKeys.GOBBLIN_AWS_LOG4J_CONFIGURATION_FILE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "clusterMaster.start()@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final String appWorkDir = cmd.getOptionValue(GobblinAWSConfigurationKeys.APP_WORK_DIR)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String appWorkDir = cmd.getOptionValue(GobblinAWSConfigurationKeys.APP_WORK_DIR)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String applicationName = cmd.getOptionValue(GobblinClusterConfigurationKeys.APPLICATION_NAME_OPTION_NAME)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.exit(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "printUsage(options)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final GobblinTaskRunner gobblinTaskRunner = new GobblinAWSTaskRunner(applicationName,helixInstanceName,ConfigFactory.load(),Optional.of(new Path(appWorkDir)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->10 [style = dotted, label="true"];
19->10 [style = dotted, label="true"];
5->10 [style = bold, label=""];
2->5 [style = bold, label=""];
20->17 [style = bold, label=""];
2->19 [style = dashed, label="0"];
10->15 [style = bold, label=""];
4->16 [style = dashed, label="0"];
0->6 [style = bold, label=""];
8->19 [style = bold, label=""];
12->0 [style = solid, label="helixInstanceName"];
13->0 [style = solid, label="appWorkDir"];
4->0 [style = solid, label="applicationName"];
18->1 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
10->21 [style = bold, label=""];
3->16 [style = bold, label=""];
21->3 [style = bold, label=""];
9->8 [style = bold, label=""];
15->3 [style = bold, label=""];
3->4 [style = bold, label=""];
7->9 [style = bold, label=""];
19->5 [style = bold, label=""];
9->5 [style = solid, label="options"];
12->13 [style = bold, label=""];
9->8 [style = solid, label="options"];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
11->3 [style = bold, label=""];
2->15 [style = bold, label=""];
18->9 [style = bold, label=""];
1->8 [style = solid, label="args"];
15->11 [style = dotted, label="true"];
19->5 [style = dotted, label="true"];
4->12 [style = bold, label=""];
14->9 [style = bold, label=""];
14->1 [style = dotted, label="true"];
2->5 [style = dotted, label="true"];
7->1 [style = dotted, label="true"];
11->21 [style = dashed, label="0"];
16->20 [style = bold, label=""];
2->11 [style = bold, label=""];
13->0 [style = bold, label=""];
10->11 [style = bold, label=""];
19->21 [style = bold, label=""];
}
