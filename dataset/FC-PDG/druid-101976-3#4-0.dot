digraph {
0 [style = filled, label = "testDoubles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo WHERE cnt > ? and cnt < ?\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(Granularities.ALL).filters(bound(\"cnt\",\"1.1\",\"100000001\",true,true,null,StringComparators.NUMERIC)).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(),ImmutableList.of(new SqlParameter(SqlType.DOUBLE,1.1),new SqlParameter(SqlType.FLOAT,100000001.0)))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo WHERE cnt = ?\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(Granularities.ALL).filters(selector(\"cnt\",\"1.0\",null)).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ab4515),ImmutableList.of(new SqlParameter(SqlType.REAL,1.0f)))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testFloats['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testDoubles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo WHERE cnt = ? or cnt = ?\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(Granularities.ALL).filters(in(\"cnt\",ImmutableList.of(\"1.0\",\"100000001\"),null)).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ab44cd),ImmutableList.of(new SqlParameter(SqlType.DOUBLE,1.0),new SqlParameter(SqlType.FLOAT,100000001.0)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo WHERE cnt = ? or cnt = ?\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(Granularities.ALL).filters(in(\"cnt\",ImmutableList.of(\"1.0\",\"100000001\"),null)).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ab4437),ImmutableList.of(new SqlParameter(SqlType.DOUBLE,1.0),new SqlParameter(SqlType.FLOAT,100000001.0)))@@@4@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo WHERE cnt > ? and cnt < ?\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(Granularities.ALL).filters(bound(\"cnt\",\"1.1\",\"100000001\",true,true,null,StringComparators.NUMERIC)).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ab4485),ImmutableList.of(new SqlParameter(SqlType.DOUBLE,1.1),new SqlParameter(SqlType.FLOAT,100000001.0)))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->4 [style = dashed, label="0"];
4->3 [style = bold, label=""];
1->2 [style = bold, label=""];
1->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
}
