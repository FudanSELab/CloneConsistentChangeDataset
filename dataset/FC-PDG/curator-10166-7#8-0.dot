digraph {
4 [style = filled, label = "List<ServiceInstance<String>> list = Lists.newArrayList()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(discovery.queryForNames(),Collections.singletonList(\"test\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(discovery.queryForInstances(\"test\"),list)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "client.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "discovery.start()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "list.add(instance)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(discovery.queryForInstances(\"test\"),list)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "CuratorFramework client = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "discovery.unregisterService(instance)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(discovery.queryForNames(),Collections.singletonList(\"test\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(((ServiceDiscoveryImpl)discovery).debugServicesQty(),0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(\"test\").port(10064).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCleaning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
4->1 [style = solid, label="list"];
15->10 [style = bold, label=""];
7->10 [style = solid, label="client"];
16->18 [style = bold, label=""];
11->14 [style = bold, label=""];
4->15 [style = solid, label="list"];
1->15 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
12->15 [style = bold, label=""];
18->17 [style = bold, label=""];
0->16 [style = solid, label="instance"];
5->10 [style = solid, label="discovery"];
19->2 [style = bold, label=""];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
12->1 [style = bold, label=""];
5->17 [style = solid, label="discovery"];
6->2 [style = bold, label=""];
8->0 [style = bold, label=""];
14->4 [style = bold, label=""];
9->14 [style = dashed, label="0"];
3->7 [style = bold, label=""];
7->17 [style = solid, label="client"];
4->12 [style = bold, label=""];
5->11 [style = bold, label=""];
0->12 [style = solid, label="instance"];
1->10 [style = bold, label=""];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
