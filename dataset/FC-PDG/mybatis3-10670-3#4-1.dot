digraph {
8 [style = filled, label = "assertEquals(i,cache.getObject(i))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache = new SynchronizedCache(cache)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldDemonstrateHowAllObjectsAreKept['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Cache cache = new PerpetualCache(\"DefaultCache\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cache = new ScheduledCache(cache)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < 100@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 100000@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldDemonstrateHowAllObjectsAreKept['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "shouldDemonstrateHowAllObjectsAreFlushedAfterBasedOnTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Cache cache = new PerpetualCache(\"default\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Thread.sleep(5000)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "((ScheduledCache)cache).setClearInterval(2500)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cache = new LoggingCache(cache)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "cache.putObject(i,i)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(0,cache.getSize())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->6 [style = dotted, label="true"];
0->3 [style = bold, label=""];
17->10 [style = bold, label=""];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
1->6 [style = solid, label="i"];
4->1 [style = dotted, label="true"];
4->6 [style = bold, label=""];
2->6 [style = solid, label="i"];
1->14 [style = solid, label="i"];
4->7 [style = dotted, label="true"];
1->8 [style = solid, label="i"];
7->18 [style = solid, label="i"];
1->4 [style = solid, label="i"];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
11->16 [style = solid, label="cache"];
0->10 [style = dashed, label="0"];
11->15 [style = bold, label=""];
8->7 [style = bold, label=""];
10->11 [style = solid, label="cache"];
1->18 [style = solid, label="i"];
7->14 [style = bold, label=""];
0->3 [style = solid, label="cache"];
13->12 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
16->1 [style = bold, label=""];
2->1 [style = solid, label="i"];
2->4 [style = solid, label="i"];
14->7 [style = dotted, label="true"];
14->8 [style = dotted, label="true"];
4->8 [style = bold, label=""];
14->18 [style = bold, label=""];
1->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
18->8 [style = bold, label=""];
14->13 [style = bold, label=""];
3->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
7->8 [style = solid, label="i"];
14->18 [style = dotted, label="true"];
1->7 [style = solid, label="i"];
7->14 [style = solid, label="i"];
10->11 [style = bold, label=""];
2->7 [style = solid, label="i"];
}
