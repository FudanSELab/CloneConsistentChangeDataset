digraph {
4 [style = filled, label = "Map<String,Object> queryContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testInnerJoinTableLookupLookupWithFilterWithoutLimit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testQuery(\"SELECT dim1\" + \"FROM foo\" + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\" + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\" + \"WHERE l.v = 'xa'\",ImmutableList.of(newScanQueryBuilder().dataSource(join(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.INNER),new LookupDataSource(\"lookyloo\"),\"_j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"_j0.k\")),JoinType.INNER)).intervals(querySegmentSpec(Filtration.eternity())).filters(selector(\"j0.v\",\"xa\",null)).columns(\"dim1\").context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8d6eac,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8d6eb0))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testInnerJoinTableLookupLookupWithFilterWithoutLimit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testInnerJoinTableLookupLookupWithFilterWithOuterLimitWithAllColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testQuery(\"SELECT __time, cnt, dim1, dim2, dim3, m1, m2, unique_dim1\" + \"FROM foo\" + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\" + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\" + \"WHERE l.v = 'xa'\" + \"LIMIT 100\",ImmutableList.of(newScanQueryBuilder().dataSource(join(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.INNER),new LookupDataSource(\"lookyloo\"),\"_j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"_j0.k\")),JoinType.INNER)).intervals(querySegmentSpec(Filtration.eternity())).limit(100).filters(selector(\"j0.v\",\"xa\",null)).columns(\"__time\",\"cnt\",\"dim1\",\"dim2\",\"dim3\",\"m1\",\"m2\",\"unique_dim1\").context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8d6f7c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8d6f87))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testQuery(\"SELECT dim1\" + \"FROM foo\" + \"INNER JOIN lookup.lookyloo l ON foo.dim2 = l.k\" + \"INNER JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\" + \"WHERE l.v = 'xa'\",queryContext,ImmutableList.of(newScanQueryBuilder().dataSource(join(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.INNER),new LookupDataSource(\"lookyloo\"),\"_j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"_j0.k\")),JoinType.INNER)).intervals(querySegmentSpec(Filtration.eternity())).filters(selector(\"j0.v\",\"xa\",null)).columns(\"dim1\").context(queryContext).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8d6f10,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8d6f14))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->3 [style = solid, label="queryContext"];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
5->6 [style = bold, label=""];
2->3 [style = bold, label=""];
0->6 [style = dashed, label="0"];
2->4 [style = dotted, label="true"];
}
