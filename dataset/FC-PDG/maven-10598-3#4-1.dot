digraph {
23 [style = filled, label = "globalResult.addToolchain(toolchain)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testBuildRequestWithUserToolchains['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"TYPE\",result.getEffectiveToolchains().getToolchains().get(0).getType())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "toolchain.setType(\"TYPE\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "toolchain.addProvide(\"key\",\"global_value\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"user_value\",result.getEffectiveToolchains().getToolchains().get(0).getProvides().getProperty(\"key\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testBuildRequestWithUserToolchains['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertNotNull(result.getProblems())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "PersistedToolchains globalResult = new PersistedToolchains()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(toolchainsReader.read(any(),anyMap())).thenReturn(userResult)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "ToolchainsBuildingRequest request = new DefaultToolchainsBuildingRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "toolchain.addProvide(\"key\",\"user_value\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testBuildRequestWithGlobalToolchains['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "request.setGlobalToolchainsSource(new StringSource(\"\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ToolchainModel toolchain = new ToolchainModel()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "request.setUserToolchainsSource(new StringSource(\"\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(0,result.getProblems().size())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "userResult.addToolchain(toolchain)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ToolchainsBuildingResult result = toolchainBuilder.build(request)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"global_value\",result.getEffectiveToolchains().getToolchains().get(0).getProvides().getProperty(\"key\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1,result.getEffectiveToolchains().getToolchains().size())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PersistedToolchains userResult = new PersistedToolchains()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(toolchainsReader.read(any(),anyMap())).thenReturn(globalResult)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "when(toolchainsReader.read(any(),ArgumentMatchers.anyMap())).thenReturn(userResult)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertNotNull(result.getEffectiveToolchains())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
17->8 [style = bold, label=""];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
24->19 [style = bold, label=""];
8->15 [style = bold, label=""];
4->17 [style = bold, label=""];
15->7 [style = bold, label=""];
13->24 [style = bold, label=""];
20->9 [style = bold, label=""];
13->8 [style = solid, label="request"];
6->21 [style = bold, label=""];
11->17 [style = solid, label="userResult"];
12->17 [style = dashed, label="0"];
19->22 [style = solid, label="globalResult"];
0->20 [style = dashed, label="0"];
2->4 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
6->2 [style = bold, label=""];
22->8 [style = bold, label=""];
19->5 [style = bold, label=""];
11->5 [style = bold, label=""];
3->20 [style = bold, label=""];
5->23 [style = solid, label="toolchain"];
23->22 [style = bold, label=""];
11->12 [style = solid, label="userResult"];
5->4 [style = solid, label="toolchain"];
5->6 [style = bold, label=""];
2->21 [style = dashed, label="0"];
11->19 [style = dashed, label="0"];
12->8 [style = bold, label=""];
12->22 [style = dashed, label="0"];
18->13 [style = bold, label=""];
4->12 [style = bold, label=""];
14->13 [style = bold, label=""];
9->1 [style = bold, label=""];
4->23 [style = dashed, label="0"];
21->23 [style = bold, label=""];
10->24 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
