digraph {
6 [style = filled, label = "parseReadwriteSplittingDataSourceRuleConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "factory.addConstructorArgValue(parseProperties(element,parserContext))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.QUERY_CONSISTENT))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "parseInternal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Element element@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.SERVER_LISTS_ATTRIBUTE))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final ParserContext parserContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "parseReadwriteSplittingDataSourceRuleConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "return factory.getBeanDefinition()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.READWRITE_SPLITTING_DATA_SOURCE_ID_ATTRIBUTE))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Element element@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.NAMESPACE_ATTRIBUTE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.AUTO_AWARE_DATA_SOURCE_NAME))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return factory.getBeanDefinition()@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ClusterPersistRepositoryBeanDefinitionTag.TYPE_ATTRIBUTE))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.LOAD_BALANCE_ALGORITHM_REF_ATTRIBUTE))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "factory.addConstructorArgValue(parseReadDataSourcesRef(element))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.WRITE_DATA_SOURCE_NAME_ATTRIBUTE))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->13 [style = solid, label="element"];
1->10 [style = bold, label=""];
9->0 [style = dotted, label="true"];
8->13 [style = dashed, label="0"];
4->15 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
4->8 [style = bold, label=""];
7->2 [style = bold, label=""];
11->14 [style = bold, label=""];
13->18 [style = bold, label=""];
2->3 [style = bold, label=""];
6->0 [style = dotted, label="true"];
8->1 [style = bold, label=""];
19->16 [style = dotted, label="true"];
0->8 [style = solid, label="element"];
15->13 [style = bold, label=""];
0->17 [style = dashed, label="0"];
7->12 [style = dashed, label="0"];
12->11 [style = bold, label=""];
19->17 [style = dotted, label="true"];
2->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
16->13 [style = solid, label="parserContext"];
14->15 [style = bold, label=""];
19->12 [style = bold, label=""];
3->4 [style = bold, label=""];
10->5 [style = bold, label=""];
1->5 [style = bold, label=""];
9->7 [style = bold, label=""];
}
