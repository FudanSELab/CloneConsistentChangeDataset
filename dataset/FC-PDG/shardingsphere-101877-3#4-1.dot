digraph {
5 [style = filled, label = "assertAddDatabaseShardingValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertAddTableShardingValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(HintManager.getDatabaseShardingValues(\"logicTable\").size(),is(2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Comparable<?>> shardingValues = new ArrayList<>(HintManager.getDatabaseShardingValues(\"logicTable\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(shardingValues.get(0),is(1))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertAddDatabaseShardingValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(HintManager.getTableShardingValues(\"logicTable\").size(),is(2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(HintManager.getTableShardingValues(\"logicTable\").contains(1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "hintManager.addDatabaseShardingValue(\"logicTable\",1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "hintManager.addTableShardingValue(\"logicTable\",1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "hintManager.addDatabaseShardingValue(\"logicTable\",3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(HintManager.getDatabaseShardingValues(\"logicTable\").contains(3))@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "hintManager.addTableShardingValue(\"logicTable\",3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(shardingValues.get(1),is(3))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(HintManager.getTableShardingValues(\"logicTable\").contains(3))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(HintManager.getDatabaseShardingValues(\"logicTable\").contains(1))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->9 [style = bold, label=""];
8->1 [style = bold, label=""];
4->3 [style = bold, label=""];
5->1 [style = bold, label=""];
13->10 [style = bold, label=""];
1->2 [style = bold, label=""];
15->13 [style = bold, label=""];
4->12 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
3->9 [style = dashed, label="0"];
2->4 [style = bold, label=""];
10->12 [style = bold, label=""];
14->11 [style = bold, label=""];
3->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
9->6 [style = bold, label=""];
12->14 [style = bold, label=""];
1->13 [style = dashed, label="0"];
}
