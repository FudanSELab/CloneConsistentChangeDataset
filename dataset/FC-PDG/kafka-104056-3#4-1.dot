digraph {
0 [style = filled, label = "mockClient.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setupCoordinator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "mockClient.prepareResponse(joinGroupFollowerResponse(generation,memberId,JoinGroupResponse.UNKNOWN_MEMBER_ID,Errors.NONE))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mockTime.sleep(HEARTBEAT_INTERVAL_MS)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Thread.sleep(10)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String memberId = \"memberId\"@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "coordinator.pollHeartbeat(mockTime.milliseconds())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "mockClient.prepareResponse(syncGroupResponse(Errors.FENCED_INSTANCE_ID))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "coordinator.ensureActiveGroup()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "System.currentTimeMillis() - startMs < 1000@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "long startMs = System.currentTimeMillis()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSyncGroupRequestWithFencedInstanceIdException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSyncGroupRequestWithFencedInstanceIdException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "mockClient.prepareResponse(heartbeatResponse(Errors.FENCED_INSTANCE_ID))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThrows(,null)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int generation = -1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHeartbeatRequestWithFencedInstanceIdException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "fail(\"Expected pollHeartbeat to raise fenced instance id exception in 1 second\")@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "mockClient.prepareResponse(syncGroupResponse(Errors.NONE))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
10->18 [style = bold, label=""];
15->10 [style = bold, label=""];
14->12 [style = dotted, label="true"];
0->6 [style = bold, label=""];
1->15 [style = bold, label=""];
18->11 [style = bold, label=""];
14->17 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
14->16 [style = dotted, label="true"];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
6->1 [style = solid, label="memberId"];
12->14 [style = bold, label=""];
9->14 [style = bold, label=""];
7->15 [style = dashed, label="0"];
8->4 [style = bold, label=""];
9->14 [style = solid, label="startMs"];
16->12 [style = bold, label=""];
0->5 [style = bold, label=""];
5->1 [style = solid, label="generation"];
13->4 [style = bold, label=""];
}
