digraph {
9 [style = filled, label = "TumblingEventTimeWindows.of(Time.seconds(10),Time.seconds(-1))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "TumblingEventTimeWindows.of(Time.seconds(10),Time.seconds(-11))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TumblingEventTimeWindows.of(Time.seconds(10),Time.seconds(20))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SlidingEventTimeWindows.of(Time.seconds(-2),Time.seconds(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IllegalArgumentException e@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testInvalidParameters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fail(\"should fail\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < size\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "SlidingEventTimeWindows.of(Time.seconds(2),Time.seconds(-1))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "IllegalArgumentException e@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"should fail\")@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SlidingEventTimeWindows.of(Time.seconds(20),Time.seconds(10),Time.seconds(-1))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fail(\"should fail\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < slide and size > 0\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < size\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "testInvalidParameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < size\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testInvalidParameters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "TumblingEventTimeWindows.of(Time.seconds(-1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < size\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < slide and size > 0\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
16->3 [style = bold, label=""];
4->14 [style = bold, label=""];
7->11 [style = bold, label=""];
2->19 [style = bold, label=""];
7->10 [style = dotted, label="true"];
4->17 [style = bold, label=""];
17->1 [style = bold, label=""];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
2->6 [style = bold, label=""];
8->15 [style = dashed, label="0"];
18->17 [style = bold, label=""];
3->15 [style = bold, label=""];
2->12 [style = bold, label=""];
14->1 [style = bold, label=""];
6->12 [style = dashed, label="0"];
10->11 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
9->14 [style = dashed, label="0"];
20->16 [style = bold, label=""];
7->11 [style = dotted, label="true"];
2->6 [style = dotted, label="true"];
12->8 [style = bold, label=""];
3->8 [style = bold, label=""];
9->17 [style = dashed, label="0"];
6->8 [style = bold, label=""];
6->19 [style = dashed, label="0"];
15->4 [style = bold, label=""];
13->5 [style = bold, label=""];
7->18 [style = bold, label=""];
2->12 [style = dotted, label="true"];
7->18 [style = dotted, label="true"];
10->9 [style = bold, label=""];
8->4 [style = bold, label=""];
19->15 [style = bold, label=""];
9->1 [style = bold, label=""];
10->18 [style = dashed, label="0"];
2->19 [style = dotted, label="true"];
0->5 [style = bold, label=""];
}
