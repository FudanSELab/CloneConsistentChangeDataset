digraph {
19 [style = filled, label = "++i@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testProjectionEvaluationDuringIndexResults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "qs.createIndex(\"PortFolioID\",IndexType.FUNCTIONAL,\"ID\",SEPARATOR + \"pos\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "qs.createIndex(\"CreateTime\",IndexType.FUNCTIONAL,\"createTime\",SEPARATOR + \"pos\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "++i@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ObjectType(( expectedTypes = new ObjectType((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@12a4f5@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i < queries.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "QueryObserverHolder.setInstance(new QueryObserverAdapter(){@Override public void beforeApplyingProjectionOnFilterEvaluatedResults(Object preProjectionApplied){actualCallback(i( = true}@Override public void afterQueryEvaluation(Object result){++i}})@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(expectedCallback(i(,actualCallback(i()@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < queries.length@@@49@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Query q = qs.newQuery(queries(i()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final boolean(( expectedCallback = {false,true,false,false,false,true}@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "QueryService qs = CacheUtils.getQueryService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testProjectionEvaluationDuringIndexResults_UNIMPLEMENTED['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "qs.createIndex(\"CreateTime\",IndexType.FUNCTIONAL,\"createTime\",\"/pos\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "String(( queries = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@12a4b1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SelectResults(((( sr = new SelectResults((((((@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Query q = qs.newQuery(queries(i()@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "qs.createIndex(\"PortFolioID\",IndexType.FUNCTIONAL,\"ID\",\"/pos\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CacheUtils.compareResultsOfWithAndWithoutIndex(sr,this)@@@56@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final boolean(( actualCallback = new boolean((((@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(expectedTypes(i(,sr(i((1(.getCollectionType().getElementType())@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sr(i((1( = (SelectResults)q.execute()@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testProjectionEvaluationDuringIndexResults_UNIMPLEMENTED['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sr(i((0( = (SelectResults)q.execute()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->17 [style = dotted, label="true"];
10->22 [style = bold, label=""];
11->16 [style = bold, label=""];
13->10 [style = bold, label=""];
16->19 [style = dotted, label="true"];
16->8 [style = dotted, label="true"];
25->1 [style = bold, label=""];
12->23 [style = dashed, label="0"];
3->1 [style = bold, label=""];
2->14 [style = solid, label="queries"];
8->16 [style = solid, label="i"];
20->9 [style = bold, label=""];
4->6 [style = bold, label=""];
8->15 [style = solid, label="sr"];
12->21 [style = bold, label=""];
8->19 [style = bold, label=""];
6->18 [style = bold, label=""];
0->15 [style = solid, label="sr"];
4->18 [style = solid, label="i"];
26->1 [style = bold, label=""];
12->20 [style = bold, label=""];
5->6 [style = dotted, label="true"];
0->11 [style = bold, label=""];
5->15 [style = bold, label=""];
16->23 [style = bold, label=""];
4->5 [style = solid, label="i"];
5->17 [style = bold, label=""];
22->5 [style = solid, label="i"];
22->5 [style = bold, label=""];
11->16 [style = solid, label="i"];
4->17 [style = solid, label="i"];
5->4 [style = dotted, label="true"];
19->16 [style = bold, label=""];
4->6 [style = solid, label="i"];
24->20 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
23->24 [style = bold, label=""];
21->20 [style = bold, label=""];
8->14 [style = solid, label="i"];
5->7 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
11->14 [style = solid, label="i"];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
10->6 [style = solid, label="actualCallback"];
4->15 [style = solid, label="sr"];
18->7 [style = bold, label=""];
9->6 [style = solid, label="expectedCallback"];
21->24 [style = dashed, label="0"];
16->12 [style = bold, label=""];
2->17 [style = solid, label="queries"];
17->4 [style = bold, label=""];
20->18 [style = solid, label="expectedTypes"];
5->18 [style = dotted, label="true"];
9->13 [style = bold, label=""];
22->17 [style = solid, label="i"];
}
