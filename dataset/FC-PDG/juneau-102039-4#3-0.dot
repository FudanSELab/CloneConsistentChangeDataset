digraph {
44 [style = filled, label = "final Queue<String> contents = new ConcurrentLinkedQueue<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testMergeWithConstantlyUpdatingFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1c)'(\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1b)(\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1c)(\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "{s.close()}@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1e)(\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThrown(null).is(\"Unable to store contents of config to store.\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ConfigMemoryStore s = new ConfigMemoryStore(null){@Override public synchronized String read(String name){return contents.poll()}}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1i)(\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1h)(\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertString(cm).replaceAll(\"\r?\n\",\"|\").is(\"(S1(|k1 = v1c|\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1d)'(\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testMergeWithConstantlyUpdatingFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testMergeWithOverwriteNoSignal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cm.setEntry(\"S1\",\"k1\",\"v1c\",null,null,null)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1k)(\")@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "cm.commit()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(10)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "LatchedListener l = new LatchedListener(latch){@Override public void check(ConfigEvents events){assertObject(events).asString().is(eventList.poll())}}@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cm.register(l)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Queue<String> eventList = new ConcurrentLinkedQueue<>()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "contents.add(\"(S1(k1 = v1a\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1j)(\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "contents.add(\"(S1(k1 = v1c\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "cm.unregister(l)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "contents.add(\"(S1(k1 = v1b\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ConfigMemoryStore s = new ConfigMemoryStore(null){@Override public synchronized String read(String name){return \"(S1(k1 = v1\" + (c++)}}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1d)(\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "contents.add(\"(S1(k1 = v1c\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ConfigMap cm = s.getMap(\"Foo.cfg\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "wait(latch)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cm.register(l)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cm.setEntry(\"S1\",\"k1\",\"v1c\",null,null,null)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1c)'(\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1j)'(\")@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1i)'(\")@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1b)'(\")@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1b)'(\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1f)(\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "ConfigMap cm = s.getMap(\"Foo.cfg\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1g)(\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1k)'(\")@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertNull(l.error)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "LatchedListener l = new LatchedListener(latch){@Override public void check(ConfigEvents events){assertObject(events).asJson().is(eventList.poll())}}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "wait(latch)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Queue<String> eventList = new ConcurrentLinkedQueue<>()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1e)'(\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8->10 [style = bold, label=""];
16->0 [style = bold, label=""];
3->19 [style = solid, label="l"];
39->46 [style = bold, label=""];
10->15 [style = bold, label=""];
4->3 [style = solid, label="latch"];
48->42 [style = solid, label="latch"];
48->2 [style = bold, label=""];
28->30 [style = bold, label=""];
22->19 [style = bold, label=""];
21->34 [style = dashed, label="0"];
33->28 [style = bold, label=""];
11->21 [style = bold, label=""];
29->31 [style = bold, label=""];
34->33 [style = bold, label=""];
32->0 [style = bold, label=""];
4->7 [style = solid, label="latch"];
9->28 [style = dashed, label="0"];
20->31 [style = dashed, label="0"];
24->34 [style = bold, label=""];
30->25 [style = bold, label=""];
20->3 [style = bold, label=""];
38->41 [style = bold, label=""];
2->9 [style = bold, label=""];
25->29 [style = bold, label=""];
47->38 [style = bold, label=""];
46->48 [style = bold, label=""];
45->44 [style = bold, label=""];
21->2 [style = bold, label=""];
6->20 [style = bold, label=""];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
7->22 [style = bold, label=""];
26->27 [style = bold, label=""];
37->43 [style = bold, label=""];
17->12 [style = bold, label=""];
1->6 [style = bold, label=""];
23->37 [style = bold, label=""];
35->40 [style = bold, label=""];
19->14 [style = bold, label=""];
15->11 [style = bold, label=""];
14->23 [style = bold, label=""];
36->23 [style = bold, label=""];
10->26 [style = dashed, label="0"];
43->35 [style = bold, label=""];
0->4 [style = bold, label=""];
6->29 [style = dashed, label="0"];
11->24 [style = dashed, label="0"];
48->23 [style = solid, label="latch"];
9->5 [style = bold, label=""];
3->12 [style = solid, label="l"];
4->8 [style = bold, label=""];
3->17 [style = bold, label=""];
27->24 [style = bold, label=""];
2->33 [style = dashed, label="0"];
15->27 [style = dashed, label="0"];
5->42 [style = bold, label=""];
42->22 [style = bold, label=""];
31->3 [style = bold, label=""];
18->7 [style = bold, label=""];
41->39 [style = bold, label=""];
42->19 [style = solid, label="l"];
1->25 [style = dashed, label="0"];
44->47 [style = bold, label=""];
4->48 [style = dashed, label="0"];
42->43 [style = solid, label="l"];
13->18 [style = bold, label=""];
5->30 [style = dashed, label="0"];
8->26 [style = bold, label=""];
14->36 [style = bold, label=""];
}
