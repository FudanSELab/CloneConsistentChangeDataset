digraph {
27 [style = filled, label = "r2.setDrawOutlines(true)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "r2.setPaintScale(new LookupPaintScale(1.0,2.0,Color.WHITE))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(r2.equals(r1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(r1.equals(r2))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "r2.setGuideLinesVisible(true)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(r1.equals(r2))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "r1.setUseOutlinePaint(false)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(r1.equals(r2))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "VectorRenderer r1 = new VectorRenderer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(r1.equals(r2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "r1.setGuideLinePaint(Color.RED)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(r1.equals(r2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "r1.setSeriesFillPaint(0,Color.GREEN)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertFalse(r1.equals(r2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "r1.setUseFillPaint(true)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "r2.setUseFillPaint(true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "r1.setPaintScale(new LookupPaintScale(1.0,2.0,Color.WHITE))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertFalse(r1.equals(r2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "r2.setUseOutlinePaint(false)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "r1.setSeriesFillPaint(0,Color.green)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "r1.setDrawOutlines(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "r2.setSeriesFillPaint(0,Color.green)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertTrue(r1.equals(r2))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "XYShapeRenderer r2 = new XYShapeRenderer()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(r1.equals(r2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(r1.equals(r2))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "r2.setSeriesFillPaint(0,Color.GREEN)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertFalse(r1.equals(r2))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "VectorRenderer r2 = new VectorRenderer()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertFalse(r1.equals(r2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "XYShapeRenderer r1 = new XYShapeRenderer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "r2.setGuideLinePaint(Color.RED)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "r1.setGuideLinesVisible(true)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(r1.equals(r2))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
8->34 [style = bold, label=""];
35->22 [style = solid, label="r2"];
23->25 [style = bold, label=""];
16->36 [style = bold, label=""];
35->18 [style = solid, label="r2"];
4->24 [style = bold, label=""];
35->12 [style = solid, label="r2"];
12->28 [style = bold, label=""];
14->35 [style = bold, label=""];
19->12 [style = bold, label=""];
4->6 [style = bold, label=""];
22->16 [style = bold, label=""];
7->14 [style = dashed, label="0"];
29->31 [style = bold, label=""];
33->4 [style = bold, label=""];
11->4 [style = bold, label=""];
14->3 [style = solid, label="r1"];
35->4 [style = solid, label="r2"];
3->11 [style = bold, label=""];
34->15 [style = bold, label=""];
6->9 [style = dashed, label="0"];
35->31 [style = solid, label="r2"];
35->25 [style = solid, label="r2"];
32->14 [style = bold, label=""];
3->33 [style = bold, label=""];
25->29 [style = bold, label=""];
21->30 [style = bold, label=""];
9->8 [style = bold, label=""];
7->3 [style = solid, label="r1"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
10->7 [style = bold, label=""];
5->4 [style = solid, label="r2"];
35->15 [style = solid, label="r2"];
35->36 [style = solid, label="r2"];
20->18 [style = bold, label=""];
13->17 [style = bold, label=""];
35->0 [style = bold, label=""];
7->5 [style = bold, label=""];
36->13 [style = bold, label=""];
5->35 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
6->24 [style = dashed, label="0"];
26->23 [style = bold, label=""];
6->8 [style = bold, label=""];
35->8 [style = solid, label="r2"];
2->11 [style = dashed, label="0"];
5->0 [style = solid, label="r2"];
35->0 [style = solid, label="r2"];
5->8 [style = solid, label="r2"];
2->33 [style = dashed, label="0"];
18->21 [style = bold, label=""];
24->8 [style = bold, label=""];
35->17 [style = solid, label="r2"];
15->27 [style = bold, label=""];
31->19 [style = bold, label=""];
35->30 [style = solid, label="r2"];
28->22 [style = bold, label=""];
17->20 [style = bold, label=""];
27->26 [style = bold, label=""];
35->26 [style = solid, label="r2"];
}
