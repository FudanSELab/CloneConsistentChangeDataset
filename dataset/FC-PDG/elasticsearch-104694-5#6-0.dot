digraph {
5 [style = filled, label = "testNULLQueryContextParsingBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(ExceptionsHelper.detailedMessage(e),containsString(\"category context must be an object, string, number or boolean\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "CategoryContextMapping mapping = ContextBuilder.category(\"cat\").build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(e.getMessage(),containsString(\"category context must be a string, number or boolean\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testNULLQueryContextParsingBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "XContentBuilder builder = jsonBuilder().startObject().nullField(\"context\").field(\"boost\",10).field(\"prefix\",true).endObject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Exception e = expectThrows(,null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testQueryContextParsingObjectHavingNULL['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(e.getMessage(),containsString(\"category context must be an object, string, number or boolean\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "XContentParseException e = expectThrows(,null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "XContentBuilder builder = jsonBuilder().nullValue()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
4->3 [style = bold, label=""];
3->6 [style = bold, label=""];
1->8 [style = dashed, label="0"];
2->0 [style = bold, label=""];
7->4 [style = bold, label=""];
3->1 [style = bold, label=""];
5->0 [style = bold, label=""];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
0->7 [style = dashed, label="0"];
10->7 [style = bold, label=""];
1->6 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
3->1 [style = solid, label="e"];
}
