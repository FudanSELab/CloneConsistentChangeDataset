digraph {
21 [style = filled, label = "pass = false@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "values.add(new Double(9.0))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "values = new Number((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2a994b@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "values.add(new Double(3.0))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "values.add(new Double(2.0))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "values.add(9.0)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "List<Double> values = new ArrayList<>()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "values.add(3.0)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "pass = true@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testCalculateMean_Array['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "values.add(Double.NaN)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "IllegalArgumentException e@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values,false),EPSILON)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "values.add(2.0)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values,true),EPSILON)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Statistics.calculateMean((Collection)null,false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "values.add(Double.NaN)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "values.add(2.0)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IllegalArgumentException e@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(pass)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "values.add(9.0)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(new Number((((,false)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values,false),EPSILON)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List values = new ArrayList()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "Statistics.calculateMean((Number(()null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "values.add(new Double(Double.NaN))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "double mean = Statistics.calculateMean(values)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "values = new ArrayList()@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "values = new ArrayList<>()@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "testCalculateMean_Collection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "boolean pass = false@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(pass)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Number(( values = new Number((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2a9924@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values,false),EPSILON)@@@38@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCalculateMean_Collection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.add(new Double(2.0))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,false)))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values,true),EPSILON)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values,false),EPSILON)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.add(new Double(Double.NaN))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "values.add(null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "values.add(9.0)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "values = new Number((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2a9975@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Statistics.calculateMean((Collection)null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values,false),EPSILON)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "pass = true@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.add(new Double(9.0))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "Statistics.calculateMean((Number(()null,false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(4.0,mean,EPSILON)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(new Number(((()))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->24 [style = bold, label=""];
6->43 [style = bold, label=""];
49->59 [style = bold, label=""];
58->56 [style = solid, label="values"];
46->13 [style = bold, label=""];
15->25 [style = bold, label=""];
23->48 [style = dashed, label="0"];
20->0 [style = bold, label=""];
13->10 [style = solid, label="pass"];
32->12 [style = solid, label="values"];
33->50 [style = dashed, label="0"];
58->60 [style = bold, label=""];
19->11 [style = bold, label=""];
8->44 [style = bold, label=""];
9->27 [style = solid, label="values"];
54->8 [style = solid, label="values"];
38->17 [style = solid, label="values"];
40->19 [style = solid, label="values"];
35->23 [style = bold, label=""];
2->14 [style = dashed, label="0"];
34->2 [style = bold, label=""];
40->27 [style = solid, label="values"];
26->58 [style = dashed, label="0"];
9->22 [style = solid, label="values"];
21->50 [style = bold, label=""];
28->52 [style = dashed, label="0"];
9->34 [style = solid, label="values"];
45->41 [style = bold, label=""];
40->0 [style = solid, label="values"];
26->7 [style = bold, label=""];
32->38 [style = dashed, label="0"];
40->7 [style = solid, label="values"];
9->29 [style = solid, label="values"];
58->14 [style = solid, label="values"];
14->47 [style = dashed, label="0"];
21->1 [style = solid, label="pass"];
32->17 [style = solid, label="values"];
25->42 [style = dashed, label="0"];
22->32 [style = bold, label=""];
30->34 [style = bold, label=""];
10->21 [style = bold, label=""];
13->16 [style = bold, label=""];
58->60 [style = solid, label="values"];
9->28 [style = solid, label="values"];
9->0 [style = solid, label="values"];
52->58 [style = bold, label=""];
22->38 [style = bold, label=""];
24->45 [style = dashed, label="0"];
18->4 [style = bold, label=""];
39->7 [style = bold, label=""];
43->12 [style = bold, label=""];
54->2 [style = bold, label=""];
38->47 [style = bold, label=""];
59->55 [style = bold, label=""];
9->36 [style = solid, label="values"];
27->29 [style = bold, label=""];
56->14 [style = bold, label=""];
11->30 [style = bold, label=""];
57->59 [style = solid, label="values"];
60->56 [style = bold, label=""];
26->39 [style = dashed, label="0"];
40->2 [style = solid, label="values"];
38->12 [style = solid, label="values"];
23->20 [style = bold, label=""];
17->6 [style = bold, label=""];
13->62 [style = bold, label=""];
28->39 [style = bold, label=""];
5->31 [style = dotted, label="true"];
1->61 [style = bold, label=""];
40->28 [style = solid, label="values"];
32->14 [style = bold, label=""];
28->26 [style = bold, label=""];
25->17 [style = bold, label=""];
8->35 [style = bold, label=""];
8->52 [style = bold, label=""];
51->13 [style = bold, label=""];
15->41 [style = dashed, label="0"];
1->9 [style = bold, label=""];
37->12 [style = bold, label=""];
40->30 [style = solid, label="values"];
9->27 [style = bold, label=""];
6->37 [style = bold, label=""];
40->34 [style = solid, label="values"];
9->30 [style = solid, label="values"];
9->2 [style = solid, label="values"];
31->10 [style = bold, label=""];
40->27 [style = bold, label=""];
4->1 [style = bold, label=""];
47->45 [style = bold, label=""];
4->1 [style = solid, label="pass"];
57->49 [style = solid, label="values"];
9->20 [style = solid, label="values"];
7->36 [style = bold, label=""];
17->6 [style = solid, label="mean"];
36->19 [style = bold, label=""];
24->15 [style = bold, label=""];
40->22 [style = solid, label="values"];
9->19 [style = solid, label="values"];
16->10 [style = bold, label=""];
1->40 [style = bold, label=""];
40->20 [style = solid, label="values"];
53->57 [style = bold, label=""];
21->33 [style = bold, label=""];
42->17 [style = bold, label=""];
62->10 [style = bold, label=""];
33->1 [style = bold, label=""];
54->2 [style = solid, label="values"];
54->52 [style = solid, label="values"];
37->43 [style = dashed, label="0"];
40->36 [style = solid, label="values"];
40->29 [style = solid, label="values"];
35->44 [style = dashed, label="0"];
29->28 [style = bold, label=""];
16->62 [style = dashed, label="0"];
61->53 [style = bold, label=""];
9->40 [style = dashed, label="0"];
5->31 [style = bold, label=""];
31->10 [style = solid, label="pass"];
50->1 [style = bold, label=""];
44->48 [style = bold, label=""];
0->22 [style = bold, label=""];
48->20 [style = bold, label=""];
57->55 [style = solid, label="values"];
3->13 [style = bold, label=""];
9->7 [style = solid, label="values"];
57->49 [style = bold, label=""];
18->4 [style = dotted, label="true"];
55->54 [style = bold, label=""];
2->8 [style = bold, label=""];
41->42 [style = bold, label=""];
}
