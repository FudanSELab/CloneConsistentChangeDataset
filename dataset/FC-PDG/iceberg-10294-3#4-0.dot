digraph {
24 [style = filled, label = "BaseRewriteDataFilesSparkAction realRewrite = (org.apache.iceberg.spark.actions.BaseRewriteDataFilesSparkAction)basicRewrite(table).option(RewriteDataFiles.MAX_FILE_GROUP_SIZE_BYTES,Integer.toString(fileSize * 2 + 100)).option(RewriteDataFiles.MAX_CONCURRENT_FILE_GROUP_REWRITES,\"3\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AssertHelpers.assertThrows(\"Should fail entire rewrite if commit fails\",,null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RewriteDataFilesCommitManager util = spy(new RewriteDataFilesCommitManager(table))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "table.refresh()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testParallelSingleCommitWithRewriteFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "doThrow(new RuntimeException(\"Rewrite Failed\")).when(spyRewrite).rewriteFiles(any(),argThat(failGroup))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<Object((> postRewriteData = currentData()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "doReturn(util).when(spyRewrite).commitManager()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "AssertHelpers.assertThrows(\"Should fail entire rewrite if part fails\",,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "doReturn(util).when(spyRewrite).commitManager(table.currentSnapshot().snapshotId())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testSingleCommitWithCommitFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "GroupInfoMatcher failGroup = new GroupInfoMatcher(1,3,7)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "BaseRewriteDataFilesSparkAction spyRewrite = Mockito.spy(realRewrite)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"We shouldn't have changed the data\",originalData,postRewriteData)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldHaveSnapshots(table,1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "doThrow(new RuntimeException(\"Commit Failure\")).when(util).commitFileGroups(any())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testSingleCommitWithCommitFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Table table = createTable(20)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldHaveNoOrphans(table)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldHaveACleanCache(table)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "BaseRewriteDataFilesSparkAction spyRewrite = spy(realRewrite)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldHaveACleanCache(table)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Object((> originalData = currentData()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int fileSize = averageFileSize(table)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BaseRewriteDataFilesSparkAction realRewrite = (org.apache.iceberg.spark.actions.BaseRewriteDataFilesSparkAction)basicRewrite(table).option(RewriteDataFiles.MAX_FILE_GROUP_SIZE_BYTES,Integer.toString(fileSize * 2 + 100))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->9 [style = solid, label="table"];
6->10 [style = solid, label="table"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
6->4 [style = solid, label="table"];
8->15 [style = bold, label=""];
18->23 [style = bold, label=""];
6->5 [style = solid, label="table"];
2->12 [style = solid, label="originalData"];
17->6 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
23->8 [style = bold, label=""];
11->9 [style = bold, label=""];
19->6 [style = bold, label=""];
13->16 [style = bold, label=""];
20->22 [style = bold, label=""];
4->0 [style = solid, label="fileSize"];
2->15 [style = solid, label="originalData"];
6->4 [style = bold, label=""];
6->3 [style = solid, label="table"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
22->18 [style = bold, label=""];
21->20 [style = bold, label=""];
16->1 [style = bold, label=""];
24->21 [style = bold, label=""];
13->7 [style = bold, label=""];
0->11 [style = solid, label="realRewrite"];
0->24 [style = dashed, label="0"];
15->12 [style = solid, label="postRewriteData"];
15->12 [style = bold, label=""];
24->21 [style = solid, label="realRewrite"];
2->24 [style = bold, label=""];
20->22 [style = solid, label="failGroup"];
8->15 [style = solid, label="postRewriteData"];
13->22 [style = dashed, label="0"];
14->6 [style = bold, label=""];
6->12 [style = solid, label="table"];
9->13 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
