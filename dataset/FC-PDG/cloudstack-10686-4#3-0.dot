digraph {
2 [style = filled, label = "Mockito.doReturn(\"volume path\").when(srcVolumeInfo).getPath()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MigrateCommand.MigrateDiskInfo migrateDiskInfo = storageSystemDataMotionStrategy.configureMigrateDiskInfo(srcVolumeInfo,\"destPath\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(MigrateCommand.MigrateDiskInfo.DriverType.RAW,migrateDiskInfo.getDriverType())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(MigrateCommand.MigrateDiskInfo.DiskType.BLOCK,migrateDiskInfo.getDiskType())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(MigrateCommand.MigrateDiskInfo.DiskType.FILE,migrateDiskInfo.getDiskType())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "configureMigrateDiskInfoTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "MigrateCommand.MigrateDiskInfo migrateDiskInfo = strategy.configureMigrateDiskInfo(srcVolumeInfo,\"destPath\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(MigrateCommand.MigrateDiskInfo.DriverType.QCOW2,migrateDiskInfo.getDriverType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(\"volume path\",migrateDiskInfo.getSerialNumber())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"destPath\",migrateDiskInfo.getSourceText())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(MigrateCommand.MigrateDiskInfo.Source.DEV,migrateDiskInfo.getSource())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(MigrateCommand.MigrateDiskInfo.Source.FILE,migrateDiskInfo.getSource())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "configureMigrateDiskInfoTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "configureMigrateDiskInfoTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "VolumeObject srcVolumeInfo = Mockito.spy(new VolumeObject())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MigrateCommand.MigrateDiskInfo migrateDiskInfo = kvmNonManagedStorageDataMotionStrategy.configureMigrateDiskInfo(srcVolumeInfo,\"destPath\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
11->12 [style = bold, label=""];
2->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
13->11 [style = bold, label=""];
2->13 [style = bold, label=""];
6->12 [style = dashed, label="0"];
8->0 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
3->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
15->0 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
12->14 [style = bold, label=""];
0->13 [style = solid, label="srcVolumeInfo"];
0->3 [style = solid, label="srcVolumeInfo"];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
0->9 [style = solid, label="srcVolumeInfo"];
14->5 [style = bold, label=""];
}
