digraph {
18 [style = filled, label = "LOG.debug(\"using table metadata to estimate table statistics\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return new Stats(0L,0L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sizeInBytes += file.length()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "long sizeInBytes = SparkSchemaUtil.estimateSize(readSchema(),numRows)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "estimateStatistics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "long numRows = 0L@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "estimateStatistics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return new Stats(SparkSchemaUtil.estimateSize(readSchema(),totalRecords),totalRecords)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "long totalRecords = PropertyUtil.propertyAsLong(table.currentSnapshot().summary(),SnapshotSummary.TOTAL_RECORDS_PROP,Long.MAX_VALUE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long sizeInBytes = 0L@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "return new Stats(sizeInBytes,numRows)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return new Stats(sizeInBytes,numRows)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "table.currentSnapshot() == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "numRows += file.file().recordCount()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long sizeInBytes = SparkSchemaUtil.estimateSize(lazyType(),numRows)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "!table.spec().isUnpartitioned() && filterExpressions.isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "estimateStatistics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "long numRows = 0L@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long totalRecords = PropertyUtil.propertyAsLong(table.currentSnapshot().summary(),SnapshotSummary.TOTAL_RECORDS_PROP,Long.MAX_VALUE)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!table.spec().isUnpartitioned() && filterExpression() == Expressions.alwaysTrue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "numRows += file.file().recordCount()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
8->4 [style = solid, label="totalRecords"];
20->17 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
4->16 [style = dashed, label="0"];
1->14 [style = dashed, label="0"];
2->3 [style = bold, label=""];
15->17 [style = solid, label="numRows"];
14->19 [style = bold, label=""];
7->0 [style = bold, label=""];
1->4 [style = dotted, label="true"];
2->9 [style = bold, label=""];
7->0 [style = dotted, label="true"];
12->9 [style = bold, label=""];
16->19 [style = bold, label=""];
12->9 [style = solid, label="sizeInBytes"];
2->12 [style = bold, label=""];
2->12 [style = solid, label="numRows"];
7->14 [style = bold, label=""];
3->9 [style = solid, label="sizeInBytes"];
14->16 [style = dotted, label="true"];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
10->5 [style = bold, label=""];
18->4 [style = bold, label=""];
3->2 [style = bold, label=""];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
15->20 [style = bold, label=""];
1->8 [style = dotted, label="true"];
14->18 [style = bold, label=""];
15->20 [style = solid, label="numRows"];
20->17 [style = solid, label="sizeInBytes"];
8->4 [style = bold, label=""];
19->15 [style = bold, label=""];
6->7 [style = bold, label=""];
14->4 [style = dotted, label="true"];
1->10 [style = bold, label=""];
4->5 [style = bold, label=""];
14->18 [style = dotted, label="true"];
4->16 [style = solid, label="totalRecords"];
11->7 [style = bold, label=""];
4->16 [style = bold, label=""];
2->9 [style = solid, label="numRows"];
}
