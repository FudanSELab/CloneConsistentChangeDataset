digraph {
19 [style = filled, label = "doc.add(new BinaryDocValuesField(\"field\",encodedRange))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Set.of(new RangeFieldMapper.Range(rangeType,1L,5L,true,true),new RangeFieldMapper.Range(rangeType,-3L,4L,true,true),new RangeFieldMapper.Range(rangeType,4L,13L,true,true),new RangeFieldMapper.Range(rangeType,22L,29L,true,true)))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(25d,histogram.getBuckets().get(6).getKey())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(0,histogram.getBuckets().get(4).getDocCount())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testOffset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testMultipleRanges['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "w.addDocument(doc)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(3).getKey())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(-1d,histogram.getBuckets().get(1).getKey())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(44d,histogram.getBuckets().get(5).getKey())@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(7,histogram.getBuckets().size())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(6).getDocCount())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(20d,histogram.getBuckets().get(5).getKey())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(6).getDocCount())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(49d,histogram.getBuckets().get(6).getKey())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RangeType rangeType = RangeType.LONG@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(15d,histogram.getBuckets().get(4).getKey())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(-5d,histogram.getBuckets().get(0).getKey())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(4d,histogram.getBuckets().get(2).getKey())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(2).getKey())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(9d,histogram.getBuckets().get(3).getKey())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Document doc = new Document()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "RangeType rangeType = RangeType.DOUBLE@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(3,histogram.getBuckets().get(2).getDocCount())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testMultipleRanges['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(1).getDocCount())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(-6d,histogram.getBuckets().get(0).getKey())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Set.of(new RangeFieldMapper.Range(rangeType,1L,5L,true,true),new RangeFieldMapper.Range(rangeType,-3L,4L,true,true),new RangeFieldMapper.Range(rangeType,4L,13L,true,true),new RangeFieldMapper.Range(rangeType,42L,49L,true,true)))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(39d,histogram.getBuckets().get(4).getKey())@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5).offset(4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(2).getDocCount())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45->41 [style = bold, label=""];
5->10 [style = bold, label=""];
8->33 [style = bold, label=""];
7->8 [style = solid, label="searcher"];
8->15 [style = bold, label=""];
28->30 [style = bold, label=""];
9->42 [style = dashed, label="0"];
42->45 [style = bold, label=""];
3->25 [style = bold, label=""];
3->31 [style = bold, label=""];
16->19 [style = solid, label="encodedRange"];
16->25 [style = dashed, label="0"];
8->33 [style = dashed, label="0"];
2->3 [style = bold, label=""];
13->44 [style = bold, label=""];
1->3 [style = bold, label=""];
1->26 [style = solid, label="rangeType"];
39->14 [style = bold, label=""];
35->32 [style = bold, label=""];
14->38 [style = bold, label=""];
19->2 [style = bold, label=""];
10->21 [style = bold, label=""];
20->11 [style = bold, label=""];
3->16 [style = bold, label=""];
12->26 [style = bold, label=""];
16->19 [style = bold, label=""];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
22->23 [style = bold, label=""];
41->10 [style = bold, label=""];
10->22 [style = dashed, label="0"];
12->7 [style = bold, label=""];
27->15 [style = bold, label=""];
3->2 [style = solid, label="doc"];
23->29 [style = bold, label=""];
43->13 [style = bold, label=""];
12->7 [style = solid, label="searcher"];
26->27 [style = bold, label=""];
15->17 [style = bold, label=""];
29->6 [style = bold, label=""];
40->7 [style = bold, label=""];
1->16 [style = solid, label="rangeType"];
40->8 [style = solid, label="aggBuilder"];
9->18 [style = bold, label=""];
12->26 [style = solid, label="searcher"];
1->32 [style = dashed, label="0"];
10->39 [style = bold, label=""];
1->7 [style = solid, label="rangeType"];
4->7 [style = solid, label="aggBuilder"];
0->1 [style = bold, label=""];
18->5 [style = bold, label=""];
25->19 [style = solid, label="encodedRange"];
34->36 [style = bold, label=""];
33->43 [style = bold, label=""];
25->19 [style = bold, label=""];
38->34 [style = bold, label=""];
18->45 [style = dashed, label="0"];
4->12 [style = bold, label=""];
8->27 [style = dashed, label="0"];
11->37 [style = dashed, label="0"];
31->19 [style = solid, label="encodedRange"];
17->13 [style = bold, label=""];
44->37 [style = bold, label=""];
24->1 [style = bold, label=""];
4->26 [style = solid, label="aggBuilder"];
32->8 [style = solid, label="rangeType"];
7->26 [style = dashed, label="0"];
21->23 [style = dashed, label="0"];
32->3 [style = bold, label=""];
5->22 [style = bold, label=""];
1->25 [style = solid, label="rangeType"];
14->29 [style = dashed, label="0"];
2->40 [style = bold, label=""];
14->6 [style = bold, label=""];
31->19 [style = bold, label=""];
37->42 [style = bold, label=""];
20->44 [style = dashed, label="0"];
6->28 [style = bold, label=""];
21->14 [style = bold, label=""];
13->20 [style = bold, label=""];
}
