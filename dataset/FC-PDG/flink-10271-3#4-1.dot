digraph {
37 [style = filled, label = "runAllDeletesTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "runKeyValueTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env.execute(\"Write KV to Kafka\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "DataStream<Tuple2<byte((,PojoValue>> fromKafka = env.addSource(kafkaServer.getConsumer(topic,schema,props))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "TypeInformationKeyValueSerializationSchema<byte((,PojoValue> schema = new TypeInformationKeyValueSerializationSchema<>(,,env.getConfig())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "props.putAll(secureProps)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DataStream<Tuple2<Long,PojoValue>> fromKafka = env.addSource(kafkaServer.getConsumer(topic,readSchema,props))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "fromKafka.flatMap(new RichFlatMapFunction<Tuple2<byte((,PojoValue>,Object>(){@Override public void flatMap(Tuple2<byte((,PojoValue> value,Collector<Object> out){assertNull(value.f1)counter++if (counter == elementCount) {throw new SuccessException()}}})@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "props.putAll(standardProps)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String topic = \"keyvaluetest\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "DataStream<Tuple2<byte((,PojoValue>> kvStream = env.addSource(new SourceFunction<Tuple2<byte((,PojoValue>>(){@Override public void run(SourceContext<Tuple2<byte((,PojoValue>> ctx){Random rnd = new Random(1337)for (long i = 0 i < elementCount i++){final byte(( key = new byte((((rnd.nextBytes(key)ctx.collect(new Tuple2<>(key,(PojoValue)null))}}@Override public void cancel(){}})@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "DataStream<Tuple2<Long,PojoValue>> kvStream = env.addSource(new SourceFunction<Tuple2<Long,PojoValue>>(){@Override public void run(SourceContext<Tuple2<Long,PojoValue>> ctx){Random rnd = new Random(1337)for (long i = 0 i < elementCount i++){PojoValue pojo = new PojoValue()pojo.when = new Date(rnd.nextLong())pojo.lon = rnd.nextLong()pojo.lat = iLong key = (i % 2 == 0)? null: ictx.collect(new Tuple2<>(key,pojo))}}@Override public void cancel(){}})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "fromKafka.flatMap(new RichFlatMapFunction<Tuple2<Long,PojoValue>,Object>(){@Override public void flatMap(Tuple2<Long,PojoValue> value,Collector<Object> out){Assert.assertTrue(\"Wrong value \" + value.f1.lat,value.f1.lat == counter)if (value.f1.lat % 2 == 0) {assertNull(\"key was not null\",value.f0)}{Assert.assertTrue(\"Wrong value \" + value.f0,value.f0 == counter)}counter++if (counter == elementCount) {throw new SuccessException()}}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Properties producerProperties = FlinkKafkaProducerBase.getPropertiesFromBrokerList(brokerConnectionStrings)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "props.putAll(secureProps)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "env.setRestartStrategy(RestartStrategies.noRestart())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "kafkaServer.produceIntoKafka(kvStream,topic,schema,producerProperties,null)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "runKeyValueTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "props.putAll(standardProps)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "tryExecute(env,\"Read deletes from Kafka\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "env.execute(\"Write deletes to Kafka\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "producerProperties.setProperty(\"retries\",\"3\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Properties props = new Properties()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "KeyedSerializationSchema<Tuple2<Long,PojoValue>> schema = new TypeInformationKeyValueSerializationSchema<>(,,env.getConfig())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int elementCount = 5000@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int elementCount = 300@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "DataStream<Tuple2<Long,PojoValue>> fromKafka = getStream(env,topic,readSchema,props)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "final String topic = \"alldeletestest\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "env.getConfig().setRestartStrategy(RestartStrategies.noRestart())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "KafkaDeserializationSchema<Tuple2<Long,PojoValue>> readSchema = new TypeInformationKeyValueSerializationSchema<>(,,env.getConfig())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tryExecute(env,\"Read KV from Kafka\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createTestTopic(topic,1,1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "deleteTestTopic(topic)@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "env = StreamExecutionEnvironment.getExecutionEnvironment()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "producerProperties.putAll(secureProps)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "deleteTestTopic(topic)@@@58@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "env.setParallelism(1)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "env.setRestartStrategy(RestartStrategies.noRestart())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "env.setParallelism(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "env.getConfig().setRestartStrategy(RestartStrategies.noRestart())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->32 [style = bold, label=""];
29->5 [style = bold, label=""];
9->11 [style = bold, label=""];
1->20 [style = bold, label=""];
6->34 [style = dashed, label="0"];
39->34 [style = solid, label="schema"];
0->34 [style = solid, label="props"];
40->38 [style = bold, label=""];
38->39 [style = bold, label=""];
15->38 [style = dashed, label="0"];
28->0 [style = bold, label=""];
12->10 [style = bold, label=""];
20->16 [style = bold, label=""];
20->21 [style = solid, label="topic"];
34->17 [style = bold, label=""];
36->5 [style = solid, label="topic"];
13->14 [style = bold, label=""];
2->6 [style = solid, label="readSchema"];
13->15 [style = solid, label="elementCount"];
17->35 [style = bold, label=""];
15->12 [style = solid, label="kvStream"];
35->31 [style = bold, label=""];
36->34 [style = solid, label="topic"];
12->28 [style = bold, label=""];
37->36 [style = bold, label=""];
36->16 [style = solid, label="topic"];
19->12 [style = bold, label=""];
16->26 [style = bold, label=""];
26->14 [style = bold, label=""];
36->31 [style = solid, label="topic"];
30->34 [style = bold, label=""];
0->24 [style = solid, label="env"];
13->26 [style = dashed, label="0"];
22->5 [style = bold, label=""];
7->24 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
20->24 [style = solid, label="topic"];
36->16 [style = bold, label=""];
14->18 [style = bold, label=""];
24->8 [style = bold, label=""];
2->17 [style = bold, label=""];
19->33 [style = bold, label=""];
16->13 [style = bold, label=""];
3->35 [style = dashed, label="0"];
18->23 [style = bold, label=""];
23->40 [style = dashed, label="0"];
18->40 [style = bold, label=""];
8->3 [style = bold, label=""];
23->15 [style = bold, label=""];
20->12 [style = solid, label="topic"];
33->12 [style = bold, label=""];
20->16 [style = solid, label="topic"];
4->7 [style = bold, label=""];
15->22 [style = bold, label=""];
5->19 [style = bold, label=""];
25->20 [style = bold, label=""];
8->17 [style = dashed, label="0"];
3->21 [style = bold, label=""];
13->8 [style = solid, label="elementCount"];
17->24 [style = solid, label="props"];
17->4 [style = bold, label=""];
22->12 [style = solid, label="schema"];
33->35 [style = solid, label="env"];
0->9 [style = bold, label=""];
2->24 [style = solid, label="readSchema"];
26->38 [style = solid, label="elementCount"];
10->19 [style = dashed, label="0"];
27->5 [style = solid, label="producerProperties"];
20->6 [style = solid, label="topic"];
9->30 [style = bold, label=""];
39->27 [style = bold, label=""];
38->5 [style = solid, label="kvStream"];
11->2 [style = bold, label=""];
26->17 [style = solid, label="elementCount"];
5->12 [style = solid, label="producerProperties"];
32->29 [style = bold, label=""];
11->28 [style = dashed, label="0"];
20->36 [style = dashed, label="0"];
6->24 [style = dashed, label="0"];
6->8 [style = bold, label=""];
17->6 [style = solid, label="props"];
22->39 [style = dashed, label="0"];
0->3 [style = solid, label="env"];
39->5 [style = solid, label="schema"];
}
