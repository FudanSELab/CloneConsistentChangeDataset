digraph {
6 [style = filled, label = "nl.add(\"groupValue\",fieldType.toObject(field))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "SchemaField schemaField = searcher.getSchema().getField(groupBy)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "nl.add(\"groupValue\",group.groupValue.toObject())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "List<IndexableField> fields = schemaField.createFields(group.groupValue.utf8ToString())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "addDocList(nl,group)@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "groupList.add(nl)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "populateScoresIfNecessary()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "secondPass != null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "finish['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "main@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "finish['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "groupResult.add(\"groups\",groupList)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "IndexableField field = schemaField.createField(readableValue)@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "numGroups == 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "nl.add(\"groupValue\",null)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "groupResult.add(\"doclist\",createSimpleResponse())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List groupList = new ArrayList()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "group.groupValue != null@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "format == Format.simple@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "FieldType fieldType = schemaField.getType()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result == null@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "finish['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "return@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "addDocList(nl,group)@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "result = secondPass.getTopGroups(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "NamedList groupResult = commonResponse()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String readableValue = fieldType.indexedToReadable(group.groupValue.utf8ToString())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "nl.add(\"groupValue\",fieldType.toObject(fields.get(0)))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "CollectionUtils.isNotEmpty(fields)@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "throw new SolrException(ErrorCode.INVALID_STATE,\"Couldn't create schema field for grouping, group value: \" + group.groupValue.utf8ToString() + \", field: \" + schemaField)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "NamedList nl = new SimpleOrderedMap()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mainResult = createSimpleResponse()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
11->33 [style = dotted, label="true"];
5->8 [style = bold, label=""];
0->16 [style = bold, label=""];
32->28 [style = dotted, label="true"];
27->32 [style = bold, label=""];
3->32 [style = dotted, label="true"];
7->17 [style = bold, label=""];
16->11 [style = bold, label=""];
35->18 [style = bold, label=""];
18->35 [style = solid, label="nl"];
18->4 [style = solid, label="nl"];
7->10 [style = bold, label=""];
15->30 [style = solid, label="schemaField"];
3->25 [style = bold, label=""];
5->8 [style = solid, label="readableValue"];
10->26 [style = solid, label="groupList"];
5->27 [style = dashed, label="0"];
25->4 [style = bold, label=""];
0->11 [style = bold, label=""];
2->18 [style = bold, label=""];
31->18 [style = bold, label=""];
10->26 [style = bold, label=""];
3->15 [style = bold, label=""];
8->6 [style = bold, label=""];
4->18 [style = bold, label=""];
1->14 [style = dotted, label="true"];
11->31 [style = bold, label=""];
36->12 [style = bold, label=""];
3->6 [style = dotted, label="true"];
32->30 [style = bold, label=""];
12->1 [style = bold, label=""];
7->24 [style = dotted, label="true"];
11->2 [style = bold, label=""];
11->18 [style = bold, label=""];
1->23 [style = bold, label=""];
20->5 [style = bold, label=""];
20->27 [style = bold, label=""];
21->12 [style = bold, label=""];
18->22 [style = solid, label="nl"];
3->27 [style = dotted, label="true"];
9->23 [style = bold, label=""];
22->3 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
19->1 [style = bold, label=""];
26->0 [style = bold, label=""];
13->19 [style = bold, label=""];
12->13 [style = dotted, label="true"];
11->2 [style = dotted, label="true"];
3->5 [style = dotted, label="true"];
11->31 [style = dotted, label="true"];
32->30 [style = dotted, label="false"];
17->24 [style = bold, label=""];
18->22 [style = bold, label=""];
29->12 [style = bold, label=""];
33->18 [style = bold, label=""];
12->19 [style = dotted, label="true"];
3->34 [style = dashed, label="0"];
30->4 [style = bold, label=""];
15->20 [style = bold, label=""];
13->0 [style = solid, label="result"];
1->9 [style = dotted, label="true"];
3->15 [style = dotted, label="true"];
22->34 [style = bold, label=""];
11->33 [style = bold, label=""];
6->28 [style = dashed, label="0"];
14->9 [style = bold, label=""];
1->14 [style = bold, label=""];
23->7 [style = bold, label=""];
0->16 [style = dotted, label="true"];
34->35 [style = bold, label=""];
27->32 [style = solid, label="fields"];
7->17 [style = dotted, label="true"];
3->8 [style = dotted, label="true"];
8->6 [style = solid, label="field"];
32->28 [style = bold, label=""];
3->25 [style = dotted, label="false"];
28->4 [style = bold, label=""];
3->20 [style = dotted, label="true"];
}
