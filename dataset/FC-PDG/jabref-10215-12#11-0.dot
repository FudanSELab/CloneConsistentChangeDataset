digraph {
1 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(StandardField.NOTE))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(StandardField.PUBLISHER))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(StandardField.JOURNAL))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(Optional.of(\"12\"),first.getField(StandardField.VOLUME))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getCiteKeyOptional())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "BibEntry second = bibEntries.get(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(StandardEntryType.Article,second.getType())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(StandardEntryType.Article,first.getType())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),first.getField(StandardField.TITLE))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(StandardField.JOURNAL))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "BibEntry fifth = bibEntries.get(4)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(StandardEntryType.Book,fourth.getType())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testImportEntries0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(StandardField.EDITOR))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(StandardField.KEYWORDS))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(StandardEntryType.Misc,first.getType())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "BibEntry first = bibEntries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Optional.of(Month.MAY),second.getMonth())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),first.getField(StandardField.PAGES))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testImportEntries0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(StandardField.DOI))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"3\"),second.getField(StandardField.NUMBER))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(StandardField.DATE))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(StandardField.SERIES))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),second.getField(StandardField.AUTHOR))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(StandardField.YEAR))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Path file = Path.of(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(StandardField.YEAR))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BibEntry fourth = bibEntries.get(3)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(StandardField.AUTHOR))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(StandardField.VOLUME))@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(StandardField.PAGES))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),first.getField(StandardField.AUTHOR))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(StandardField.BOOKTITLE))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "BibEntry third = bibEntries.get(2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),second.getField(StandardField.TITLE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(StandardField.URL))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"2006\"),second.getField(StandardField.YEAR))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(StandardField.ABSTRACT))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Optional.empty(),first.getField(StandardField.MONTH))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(StandardField.NUMBER))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(StandardField.SCHOOL))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(2,entries.size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Path file = Path.of(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(StandardField.ADDRESS))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),first.getField(StandardField.JOURNAL))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(StandardField.TITLE))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(StandardEntryType.MastersThesis,fifth.getType())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"20\"),first.getField(StandardField.NUMBER))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(Optional.of(\"13\"),second.getField(StandardField.VOLUME))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "testImportEntriesMedline['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getCitationKey())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(StandardField.EDITION))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(StandardEntryType.Article,third.getType())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),second.getField(StandardField.PAGES))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(StandardEntryType.Misc,second.getType())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48->59 [style = bold, label=""];
8->30 [style = bold, label=""];
54->52 [style = bold, label=""];
5->54 [style = dashed, label="0"];
42->41 [style = bold, label=""];
58->50 [style = bold, label=""];
13->56 [style = dashed, label="0"];
40->48 [style = bold, label=""];
33->44 [style = dashed, label="0"];
10->36 [style = dashed, label="0"];
22->16 [style = bold, label=""];
32->12 [style = bold, label=""];
15->25 [style = bold, label=""];
34->1 [style = bold, label=""];
31->0 [style = bold, label=""];
20->26 [style = bold, label=""];
21->52 [style = dashed, label="0"];
14->22 [style = bold, label=""];
59->51 [style = bold, label=""];
24->48 [style = dashed, label="0"];
7->43 [style = dashed, label="0"];
1->20 [style = bold, label=""];
26->9 [style = bold, label=""];
10->17 [style = bold, label=""];
18->46 [style = dashed, label="0"];
25->14 [style = bold, label=""];
52->55 [style = bold, label=""];
51->49 [style = bold, label=""];
53->54 [style = bold, label=""];
18->2 [style = bold, label=""];
4->33 [style = bold, label=""];
7->8 [style = bold, label=""];
55->42 [style = bold, label=""];
38->60 [style = bold, label=""];
45->44 [style = bold, label=""];
27->6 [style = bold, label=""];
56->43 [style = bold, label=""];
12->41 [style = dashed, label="0"];
49->47 [style = bold, label=""];
9->27 [style = bold, label=""];
37->5 [style = bold, label=""];
4->45 [style = dashed, label="0"];
5->21 [style = bold, label=""];
44->46 [style = bold, label=""];
30->19 [style = bold, label=""];
60->58 [style = bold, label=""];
17->34 [style = bold, label=""];
23->24 [style = bold, label=""];
3->5 [style = bold, label=""];
21->29 [style = bold, label=""];
43->38 [style = bold, label=""];
57->39 [style = bold, label=""];
12->4 [style = bold, label=""];
33->18 [style = bold, label=""];
8->38 [style = dashed, label="0"];
15->59 [style = dashed, label="0"];
28->23 [style = bold, label=""];
13->7 [style = bold, label=""];
16->31 [style = bold, label=""];
29->32 [style = bold, label=""];
11->39 [style = dashed, label="0"];
50->40 [style = bold, label=""];
11->13 [style = bold, label=""];
39->56 [style = bold, label=""];
32->42 [style = dashed, label="0"];
0->35 [style = bold, label=""];
19->58 [style = dashed, label="0"];
41->45 [style = bold, label=""];
35->10 [style = bold, label=""];
19->28 [style = bold, label=""];
36->17 [style = bold, label=""];
35->36 [style = bold, label=""];
14->49 [style = dashed, label="0"];
46->57 [style = bold, label=""];
2->11 [style = bold, label=""];
28->50 [style = dashed, label="0"];
24->15 [style = bold, label=""];
}
