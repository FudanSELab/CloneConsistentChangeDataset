digraph {
12 [style = filled, label = "Map<String,Object> attributes = this.errorAttributes.getErrorAttributes(buildServerRequest(request,ex),false,false,false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(attributes.get(\"message\")).asString().startsWith(\"Validation failed for argument at index 0 in method: \" + \"int org.springframework.boot.web.reactive.error.DefaultErrorAttributesTests\" + \".method(java.lang.String), with 1 error(s)\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "bindingResult.addError(new ObjectError(\"c\",\"d\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "extractBindingResultErrors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "notIncludeTrace['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(attributes.get(\"trace\")).isNull()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "MockServerHttpRequest request = MockServerHttpRequest.get(\"/test\").build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,Object> attributes = this.errorAttributes.getErrorAttributes(buildServerRequest(request,ex),ErrorAttributeOptions.of(Include.MESSAGE,Include.BINDING_ERRORS))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "MethodParameter stringParam = new MethodParameter(method,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "BindingResult bindingResult = new MapBindingResult(Collections.singletonMap(\"a\",\"b\"),\"objectName\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Exception ex = new WebExchangeBindException(stringParam,bindingResult)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RuntimeException ex = new RuntimeException(\"Test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(attributes.get(\"errors\")).isEqualTo(bindingResult.getAllErrors())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,Object> attributes = this.errorAttributes.getErrorAttributes(buildServerRequest(request,ex),false,true,true)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "MockServerHttpRequest request = MockServerHttpRequest.get(\"/test\").build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Method method = getClass().getDeclaredMethod(\"method\",)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "extractBindingResultErrors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
9->8 [style = solid, label="ex"];
4->8 [style = solid, label="request"];
0->9 [style = bold, label=""];
9->4 [style = bold, label=""];
3->9 [style = solid, label="bindingResult"];
12->15 [style = bold, label=""];
7->9 [style = solid, label="stringParam"];
16->12 [style = solid, label="request"];
8->12 [style = dashed, label="0"];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
9->11 [style = solid, label="ex"];
11->5 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
14->12 [style = solid, label="ex"];
4->8 [style = bold, label=""];
10->2 [style = bold, label=""];
1->2 [style = bold, label=""];
4->11 [style = solid, label="request"];
2->7 [style = bold, label=""];
8->11 [style = dashed, label="0"];
4->11 [style = bold, label=""];
16->12 [style = bold, label=""];
13->14 [style = bold, label=""];
2->7 [style = solid, label="method"];
}
