digraph {
13 [style = filled, label = "assertThat(this.repository.findAll()).hasSize(1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "filterCapturesSessionIdWhenSessionIsUsed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "filterCapturesSessionIdWhenSessionIsUsed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(this.repository.findAll()).hasSize(1)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "executeFilter(MockServerWebExchange.from(MockServerHttpRequest.get(\"https://api.example.com\")),null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(session).isNotNull()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(tracedPrincipal.getName()).isEqualTo(\"alice\")@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Principal principal = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "org.springframework.boot.actuate.trace.http.HttpTrace.Principal tracedPrincipal = this.repository.findAll().get(0).getPrincipal()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(tracedPrincipal).isNotNull()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Session session = this.repository.findAll().get(0).getSession()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "executeFilter(MockServerWebExchange.from(MockServerHttpRequest.get(\"https://api.example.com\")),null).block(Duration.ofSeconds(30))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Session session = this.repository.findAll().get(0).getSession()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(session).isNotNull()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(this.repository.findAll()).hasSize(1)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "given(principal.getName()).willReturn(\"alice\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(session.getId()).isNotNull()@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(session.getId()).isNotNull()@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "filterCapturesPrincipal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "executeFilter(new ServerWebExchangeDecorator(MockServerWebExchange.from(MockServerHttpRequest.get(\"https://api.example.com\"))){@SuppressWarnings(\"unchecked\") @Override public Mono<T> getPrincipal(){return Mono.just((T)principal)}},null).block(Duration.ofSeconds(30))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
0->2 [style = bold, label=""];
18->19 [style = bold, label=""];
8->6 [style = bold, label=""];
1->0 [style = bold, label=""];
16->17 [style = bold, label=""];
1->10 [style = dashed, label="0"];
7->8 [style = bold, label=""];
10->7 [style = bold, label=""];
12->13 [style = bold, label=""];
19->14 [style = bold, label=""];
11->10 [style = bold, label=""];
17->15 [style = bold, label=""];
2->18 [style = dashed, label="0"];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
6->9 [style = bold, label=""];
3->14 [style = dashed, label="0"];
5->19 [style = dashed, label="0"];
13->18 [style = bold, label=""];
2->5 [style = bold, label=""];
}
