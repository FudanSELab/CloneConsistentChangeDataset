digraph {
16 [style = filled, label = "verify(preparedStatement2).executeBatch()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "verify(preparedStatement2).executeBatch()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PreparedStatement preparedStatement2 = getPreparedStatement()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16eba38))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(preparedStatement2.executeBatch()).thenThrow(ex)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16eba84))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "setExecuteGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(preparedStatement1.executeBatch()).thenReturn(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16eba61)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "SQLException ex = new SQLException(\"\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsSuccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "when(preparedStatement2.executeBatch()).thenReturn(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16eba6e)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SQLException exp = new SQLException(\"\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "setExecuteGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(preparedStatement2.executeBatch()).thenThrow(exp)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "when(preparedStatement1.executeBatch()).thenThrow(exp)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "when(preparedStatement1.executeBatch()).thenThrow(ex)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "verify(preparedStatement1).executeBatch()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PreparedStatement preparedStatement1 = getPreparedStatement()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
3->8 [style = solid, label="exp"];
19->18 [style = bold, label=""];
6->18 [style = solid, label="preparedStatement1"];
2->6 [style = bold, label=""];
12->11 [style = bold, label=""];
14->19 [style = bold, label=""];
9->17 [style = bold, label=""];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
8->12 [style = dashed, label="0"];
10->12 [style = solid, label="ex"];
7->9 [style = bold, label=""];
11->5 [style = bold, label=""];
0->10 [style = bold, label=""];
0->14 [style = bold, label=""];
10->11 [style = solid, label="ex"];
6->5 [style = solid, label="preparedStatement1"];
10->12 [style = bold, label=""];
3->8 [style = bold, label=""];
3->4 [style = solid, label="exp"];
18->9 [style = bold, label=""];
5->7 [style = bold, label=""];
0->18 [style = solid, label="preparedStatement2"];
3->10 [style = dashed, label="0"];
8->4 [style = bold, label=""];
13->6 [style = bold, label=""];
4->11 [style = dashed, label="0"];
9->1 [style = bold, label=""];
4->5 [style = bold, label=""];
17->16 [style = bold, label=""];
0->5 [style = solid, label="preparedStatement2"];
}
