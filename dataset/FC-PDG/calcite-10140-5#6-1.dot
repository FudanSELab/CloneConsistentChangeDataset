digraph {
10 [style = filled, label = "equals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "o == null || getClass() != o.getClass()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return false@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this == o@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return true@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "BinaryExpression that = (BinaryExpression)o@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return false@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "equals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Object o@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "@Nullable Object o@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "!expression2.equals(that.expression2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return false@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "equals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return false@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "!expression0.equals(that.expression0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "primitive != that.primitive@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return false@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return true@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "!super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@10bf90eo@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!expression1.equals(that.expression1)@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TernaryExpression that = (TernaryExpression)o@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->20 [style = bold, label=""];
7->11 [style = bold, label=""];
12->20 [style = dashed, label="0"];
5->9 [style = bold, label=""];
0->20 [style = solid, label="o"];
11->14 [style = bold, label=""];
2->1 [style = bold, label=""];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
18->15 [style = dotted, label="true"];
0->16 [style = dashed, label="0"];
1->20 [style = bold, label=""];
5->15 [style = bold, label=""];
0->14 [style = solid, label="o"];
4->18 [style = bold, label=""];
16->7 [style = solid, label="o"];
5->15 [style = dotted, label="true"];
10->7 [style = bold, label=""];
8->3 [style = dotted, label="true"];
2->12 [style = bold, label=""];
7->14 [style = bold, label=""];
17->16 [style = dotted, label="true"];
6->2 [style = bold, label=""];
17->7 [style = bold, label=""];
20->8 [style = bold, label=""];
7->11 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
19->0 [style = dotted, label="true"];
12->8 [style = bold, label=""];
15->9 [style = bold, label=""];
18->9 [style = bold, label=""];
1->12 [style = bold, label=""];
13->5 [style = bold, label=""];
3->13 [style = bold, label=""];
10->0 [style = dotted, label="true"];
0->7 [style = solid, label="o"];
14->2 [style = bold, label=""];
16->14 [style = solid, label="o"];
13->18 [style = bold, label=""];
4->5 [style = bold, label=""];
19->7 [style = bold, label=""];
0->12 [style = solid, label="o"];
16->12 [style = solid, label="o"];
14->6 [style = bold, label=""];
13->4 [style = dotted, label="true"];
8->13 [style = bold, label=""];
13->4 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
