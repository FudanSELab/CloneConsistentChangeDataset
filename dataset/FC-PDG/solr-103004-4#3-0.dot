digraph {
20 [style = filled, label = "assertNotNull(registry)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(\"totalWrites\",meter.getCount() > 0)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "timer = (Timer)metrics.get(\"INDEX.merge.major\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "meter = (Meter)metrics.get(\"DIRECTORY.segments.writes\")@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Meter meter = (Meter)metrics.get(\"INDEX.merge.major.docs\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "System.setProperty(\"solr.tests.metrics.directory\",\"false\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "System.setProperty(\"solr.tests.metrics.merge\",\"false\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"majorMergeDocs: \" + meter.getCount(),0,meter.getCount())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(\"writeSizes\",histogram.getCount() > 0)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertTrue(\"segmentsWrites\",meter.getCount() > 0)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "System.setProperty(\"solr.tests.metrics.mergeDetails\",\"false\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(\"segmentsWriteSizes\",histogram.getCount() > 0)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"majorMerge: \" + timer.getCount(),0,timer.getCount())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(\"minorMerge: \" + timer.getCount(),timer.getCount() >= 3)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Histogram histogram = (Histogram)metrics.get(\"DIRECTORY.total.readSizes\")@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "meter = (Meter)metrics.get(\"DIRECTORY.total.writes\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "histogram = (Histogram)metrics.get(\"DIRECTORY.total.writeSizes\")@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "meter = (Meter)metrics.get(\"DIRECTORY.total.reads\")@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "histogram = (Histogram)metrics.get(\"DIRECTORY.segments.writeSizes\")@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(\"readSizes\",histogram.getCount() > 0)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "System.setProperty(\"solr.tests.metrics.directoryDetails\",\"false\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "addDocs()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(0,metrics.entrySet().stream().filter(null).count())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testIndexNoMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(\"totalReads\",meter.getCount() > 0)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "initCore(\"solrconfig-indexmetrics.xml\",\"schema.xml\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,Metric> metrics = registry.getMetrics()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(\"flush: \" + meter.getCount(),meter.getCount() > 10)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(metrics.entrySet().stream().filter(null).count() > 20)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "System.setProperty(\"solr.tests.metrics.mergeDetails\",\"true\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "System.setProperty(\"solr.tests.metrics.directoryDetails\",\"true\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertTrue(metrics.entrySet().stream().filter(null).count() >= 12)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "meter = (Meter)metrics.get(\"INDEX.flush\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testIndexMetricsWithDetails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testIndexMetricsWithDetails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,metrics.entrySet().stream().filter(null).count())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35->31 [style = bold, label=""];
30->24 [style = bold, label=""];
4->14 [style = bold, label=""];
2->20 [style = bold, label=""];
20->17 [style = bold, label=""];
22->15 [style = bold, label=""];
6->26 [style = bold, label=""];
12->33 [style = dashed, label="0"];
24->2 [style = bold, label=""];
23->27 [style = bold, label=""];
5->9 [style = bold, label=""];
21->19 [style = bold, label=""];
25->13 [style = bold, label=""];
29->3 [style = bold, label=""];
26->1 [style = bold, label=""];
28->34 [style = dashed, label="0"];
31->4 [style = bold, label=""];
31->36 [style = bold, label=""];
12->30 [style = bold, label=""];
8->6 [style = bold, label=""];
1->18 [style = bold, label=""];
21->37 [style = dashed, label="0"];
17->37 [style = bold, label=""];
36->14 [style = bold, label=""];
27->22 [style = bold, label=""];
14->33 [style = bold, label=""];
19->25 [style = bold, label=""];
21->28 [style = bold, label=""];
0->7 [style = bold, label=""];
3->10 [style = bold, label=""];
2->20 [style = solid, label="registry"];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
15->11 [style = bold, label=""];
10->8 [style = bold, label=""];
4->30 [style = bold, label=""];
4->36 [style = dashed, label="0"];
16->31 [style = bold, label=""];
37->34 [style = bold, label=""];
14->12 [style = bold, label=""];
28->19 [style = bold, label=""];
13->23 [style = bold, label=""];
33->30 [style = bold, label=""];
9->29 [style = bold, label=""];
17->21 [style = bold, label=""];
32->31 [style = bold, label=""];
}
