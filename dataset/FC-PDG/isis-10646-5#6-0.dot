digraph {
3 [style = filled, label = "whenNamedFaceNotPresentAndOnlyOneParamOfType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(objectActionParameter.getName(),is(\"string 2\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "objectActionParameter = new ObjectActionParameterAbstractToTest(0,parentAction,actionParamPeer)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "objectActionParameter = new ObjectActionParameterAbstractToTest(2,parentAction,actionParamPeer)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "context.checking(new Expectations(){})@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(objectActionParameter.getName(),is(\"string\"))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "objectActionParameter.setSpecification(stubSpecForString)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "whenNamedFaceNotPresentAndOnlyOneParamOfType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "getName_whenNamedFaceNotPresentAndMultipleParamsOfSameType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->8 [style = bold, label=""];
5->0 [style = bold, label=""];
0->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
1->8 [style = dashed, label="0"];
0->4 [style = bold, label=""];
7->4 [style = bold, label=""];
3->0 [style = bold, label=""];
2->1 [style = bold, label=""];
4->2 [style = bold, label=""];
}
