digraph {
6 [style = filled, label = "getTraces_maxDuration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(store().getTraces(requestBuilder().minDuration(CLIENT_SPAN.durationAsLong()).build()).execute()).flatExtracting(null).contains(CLIENT_SPAN)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "accept(CLIENT_SPAN)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getTraces_minDuration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(store().getTraces(requestBuilder().minDuration(CLIENT_SPAN.durationAsLong()).maxDuration(CLIENT_SPAN.durationAsLong()).build()).execute()).flatExtracting(null).contains(CLIENT_SPAN)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(store().getTraces(requestBuilder().minDuration(CLIENT_SPAN.durationAsLong() + 1).build()).execute()).isEmpty()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "getTraces_minDuration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(store().getTraces(requestBuilder().minDuration(CLIENT_SPAN.durationAsLong() - 2).maxDuration(CLIENT_SPAN.durationAsLong() - 1).build()).execute()).isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->7 [style = bold, label=""];
4->3 [style = bold, label=""];
6->3 [style = bold, label=""];
3->5 [style = bold, label=""];
1->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
3->1 [style = bold, label=""];
0->7 [style = dashed, label="0"];
2->3 [style = bold, label=""];
}
