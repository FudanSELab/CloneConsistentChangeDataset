digraph {
15 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "herder.tick()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "member.poll(EasyMock.anyInt())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectPostRebalanceCatchup(SNAPSHOT)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "member.wakeup()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "herder.tick()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "callback.get(1000L,TimeUnit.MILLISECONDS)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testRestartTaskRedirectToOwner['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "fail(\"Expected NotLeaderException to be raised\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PowerMock.verifyAll()@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRestartConnectorRedirectToOwner['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "PowerMock.expectLastCall()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(e.getCause() instanceof NotAssignedException)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "herder.restartTask(TASK0,callback)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "time.sleep(2000L)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "PowerMock.expectLastCall()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "time.sleep(1000L)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "PowerMock.expectLastCall()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "herder.restartConnector(CONN1,callback)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.expect(member.memberId()).andStubReturn(\"leader\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "member.poll(EasyMock.anyInt())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ExecutionException e@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRestartConnectorRedirectToOwner['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "member.ensureActive()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "FutureCallback<Void> callback = new FutureCallback<>()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expect(member.ownerUrl(CONN1)).andReturn(ownerUrl)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String ownerUrl = \"ownerUrl\"@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "EasyMock.expect(member.ownerUrl(TASK0)).andReturn(ownerUrl)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String ownerUrl = \"ownerUrl\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "PowerMock.expectLastCall()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(ownerUrl,notAssignedException.forwardUrl())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertStatistics(3,1,100,3000L)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "PowerMock.replayAll()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "NotAssignedException notAssignedException = (NotAssignedException)e.getCause()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
24->21 [style = bold, label=""];
10->16 [style = bold, label=""];
28->13 [style = bold, label=""];
12->7 [style = bold, label=""];
11->22 [style = bold, label=""];
25->29 [style = bold, label=""];
8->12 [style = bold, label=""];
1->32 [style = dashed, label="0"];
26->16 [style = bold, label=""];
34->33 [style = solid, label="ownerUrl"];
32->5 [style = bold, label=""];
3->19 [style = dotted, label="true"];
29->28 [style = bold, label=""];
16->15 [style = bold, label=""];
3->14 [style = dotted, label="true"];
13->1 [style = solid, label="callback"];
2->34 [style = bold, label=""];
34->33 [style = bold, label=""];
4->8 [style = bold, label=""];
9->0 [style = bold, label=""];
12->24 [style = bold, label=""];
17->4 [style = bold, label=""];
24->21 [style = solid, label="ownerUrl"];
2->9 [style = bold, label=""];
15->11 [style = bold, label=""];
3->18 [style = dotted, label="true"];
30->6 [style = bold, label=""];
23->20 [style = bold, label=""];
25->13 [style = bold, label=""];
3->19 [style = bold, label=""];
5->27 [style = bold, label=""];
7->25 [style = bold, label=""];
27->30 [style = bold, label=""];
21->7 [style = bold, label=""];
0->17 [style = bold, label=""];
33->9 [style = bold, label=""];
13->1 [style = bold, label=""];
13->32 [style = solid, label="callback"];
18->14 [style = bold, label=""];
13->32 [style = bold, label=""];
6->23 [style = bold, label=""];
19->18 [style = bold, label=""];
31->16 [style = bold, label=""];
14->20 [style = bold, label=""];
5->6 [style = bold, label=""];
1->5 [style = bold, label=""];
}
