digraph {
11 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "r1.setGroupPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "r1.setDrawLines(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(r1.equals(r2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MinMaxCategoryRenderer r1 = new MinMaxCategoryRenderer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(r1.equals(r2))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "r2.setGroupPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "StackedAreaRenderer r1 = new StackedAreaRenderer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "r1.setGroupPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "r2.setRenderAsPercentages(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "r1.setRenderAsPercentages(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(r1.equals(r2))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(r1,r2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MinMaxCategoryRenderer r2 = new MinMaxCategoryRenderer()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(r1.equals(r2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "r2.setGroupStroke(new BasicStroke(1.2f))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "r2.setGroupPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertTrue(r1.equals(r2))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "r1.setGroupStroke(new BasicStroke(1.2f))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "r2.setDrawLines(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StackedAreaRenderer r2 = new StackedAreaRenderer()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertFalse(r1.equals(r2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->8 [style = solid, label="r2"];
20->3 [style = solid, label="r2"];
17->8 [style = bold, label=""];
8->10 [style = bold, label=""];
2->20 [style = dashed, label="0"];
9->0 [style = bold, label=""];
22->3 [style = solid, label="r1"];
10->14 [style = bold, label=""];
12->16 [style = dashed, label="0"];
20->4 [style = solid, label="r2"];
2->3 [style = bold, label=""];
20->5 [style = solid, label="r2"];
4->15 [style = bold, label=""];
4->19 [style = bold, label=""];
2->9 [style = solid, label="r2"];
23->4 [style = bold, label=""];
2->4 [style = solid, label="r2"];
9->17 [style = bold, label=""];
20->3 [style = bold, label=""];
15->19 [style = dashed, label="0"];
2->3 [style = solid, label="r2"];
12->9 [style = bold, label=""];
7->3 [style = solid, label="r1"];
2->5 [style = solid, label="r2"];
2->6 [style = solid, label="r2"];
0->17 [style = dashed, label="0"];
13->23 [style = dashed, label="0"];
15->5 [style = bold, label=""];
14->1 [style = bold, label=""];
5->16 [style = bold, label=""];
19->5 [style = bold, label=""];
3->23 [style = bold, label=""];
1->6 [style = bold, label=""];
22->20 [style = bold, label=""];
5->12 [style = bold, label=""];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
0->8 [style = bold, label=""];
3->13 [style = bold, label=""];
18->7 [style = bold, label=""];
7->22 [style = dashed, label="0"];
16->9 [style = bold, label=""];
11->7 [style = bold, label=""];
2->14 [style = solid, label="r2"];
13->4 [style = bold, label=""];
}
