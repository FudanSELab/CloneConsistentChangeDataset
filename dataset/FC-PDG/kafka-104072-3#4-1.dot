digraph {
1 [style = filled, label = "coordinator.ensureActiveGroup()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "AtomicBoolean heartbeatReceived = prepareFirstHeartbeat()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,coordinator.onJoinCompleteInvokes)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "WakeupException e@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "consumerClient.poll(0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(1,coordinator.onJoinPrepareInvokes)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{}@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(1,coordinator.onJoinPrepareInvokes)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(heartbeatReceived.get())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "awaitFirstHeartbeat(heartbeatReceived)@@@27@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testWakeupAfterJoinGroupSent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testWakeupAfterJoinGroupSent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "WakeupException e@@@20@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "fail(\"Should have woken up from ensureActiveGroup()\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "mockClient.prepareResponse(syncGroupResponse(Errors.NONE))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mockClient.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(ClientRequest request){boolean isJoinGroupRequest = request.request().header().apiKey() == ApiKeys.JOIN_GROUP.idif (isJoinGroupRequest) consumerClient.wakeup()return isJoinGroupRequest}},joinGroupFollowerResponse(1,\"memberId\",\"leaderId\",Errors.NONE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mockClient.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "coordinator.ensureActiveGroup()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testWakeupAfterJoinGroupReceivedExternalCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(0,coordinator.onJoinCompleteInvokes)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
10->20 [style = bold, label=""];
19->12 [style = bold, label=""];
7->12 [style = bold, label=""];
16->6 [style = bold, label=""];
18->11 [style = bold, label=""];
1->3 [style = bold, label=""];
14->10 [style = bold, label=""];
5->15 [style = bold, label=""];
0->11 [style = bold, label=""];
15->6 [style = bold, label=""];
12->16 [style = bold, label=""];
20->1 [style = bold, label=""];
12->6 [style = bold, label=""];
6->14 [style = bold, label=""];
8->2 [style = bold, label=""];
9->2 [style = solid, label="heartbeatReceived"];
3->8 [style = bold, label=""];
11->13 [style = bold, label=""];
9->5 [style = bold, label=""];
10->1 [style = bold, label=""];
13->4 [style = bold, label=""];
17->11 [style = bold, label=""];
}
