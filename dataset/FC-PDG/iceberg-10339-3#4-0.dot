digraph {
18 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "table.refresh()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(\"Files table should have one row\",1,expected.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(\"Files table should have two rows\",2,expected.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "expected.add(file)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "DataFile toDelete = Iterables.getOnlyElement(table.currentSnapshot().addedFiles())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i += 1@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testAllDataFilesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "expected.add((GenericData.Record)record.get(\"data_file\"))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(\"Actual results should have two rows\",2,actual.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(\"Actual results should have one row\",1,actual.size())@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"files\")).collectAsList()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "file.put(0,FileContent.DATA.id())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "int i = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "i < expected.size()@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "actual.sort(Comparator.comparing(null))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"files\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Actual results should have one row\",1,actual.size())@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"all_data_files\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(0),actual.get(0))@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testFilesUnpartitionedTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"unpartitioned_files_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testFilesUnpartitionedTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "table.refresh()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "table.newDelete().deleteFile(toDelete).commit()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "GenericData.Record file = (GenericData.Record)record.get(\"data_file\")@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_data_files\")).orderBy(\"file_path\").collectAsList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
24->21 [style = bold, label=""];
40->30 [style = bold, label=""];
9->39 [style = dashed, label="0"];
41->27 [style = bold, label=""];
16->18 [style = solid, label="tableIdentifier"];
25->15 [style = bold, label=""];
19->10 [style = bold, label=""];
7->24 [style = bold, label=""];
10->2 [style = bold, label=""];
2->4 [style = bold, label=""];
36->37 [style = solid, label="i"];
32->37 [style = solid, label="i"];
7->21 [style = dotted, label="true"];
3->38 [style = dashed, label="0"];
16->1 [style = solid, label="tableIdentifier"];
16->11 [style = solid, label="tableIdentifier"];
0->7 [style = bold, label=""];
16->18 [style = bold, label=""];
17->38 [style = bold, label=""];
5->1 [style = bold, label=""];
25->7 [style = bold, label=""];
11->39 [style = bold, label=""];
30->28 [style = solid, label="tableIdentifier"];
13->22 [style = bold, label=""];
0->29 [style = bold, label=""];
23->16 [style = bold, label=""];
11->9 [style = bold, label=""];
26->33 [style = bold, label=""];
0->24 [style = dashed, label="0"];
18->28 [style = dashed, label="0"];
17->3 [style = bold, label=""];
6->19 [style = bold, label=""];
22->20 [style = bold, label=""];
15->7 [style = bold, label=""];
1->14 [style = bold, label=""];
3->13 [style = bold, label=""];
30->1 [style = solid, label="tableIdentifier"];
31->32 [style = bold, label=""];
34->36 [style = dotted, label="true"];
14->26 [style = dashed, label="0"];
27->35 [style = bold, label=""];
7->13 [style = bold, label=""];
32->34 [style = solid, label="i"];
21->25 [style = bold, label=""];
37->36 [style = bold, label=""];
12->5 [style = bold, label=""];
0->15 [style = bold, label=""];
39->12 [style = bold, label=""];
16->30 [style = dashed, label="0"];
2->41 [style = dashed, label="0"];
36->34 [style = bold, label=""];
7->24 [style = dotted, label="true"];
7->0 [style = bold, label=""];
25->13 [style = bold, label=""];
30->39 [style = solid, label="tableIdentifier"];
16->19 [style = solid, label="tableIdentifier"];
30->11 [style = solid, label="tableIdentifier"];
7->29 [style = bold, label=""];
14->6 [style = bold, label=""];
0->17 [style = bold, label=""];
29->7 [style = bold, label=""];
38->31 [style = bold, label=""];
24->25 [style = solid, label="file"];
7->17 [style = bold, label=""];
30->28 [style = bold, label=""];
1->26 [style = bold, label=""];
33->19 [style = bold, label=""];
19->41 [style = bold, label=""];
16->9 [style = solid, label="tableIdentifier"];
7->15 [style = bold, label=""];
35->29 [style = bold, label=""];
32->34 [style = bold, label=""];
7->0 [style = dotted, label="true"];
30->33 [style = solid, label="tableIdentifier"];
28->11 [style = bold, label=""];
7->25 [style = dotted, label="true"];
4->15 [style = bold, label=""];
34->37 [style = dotted, label="true"];
34->37 [style = bold, label=""];
18->11 [style = bold, label=""];
9->12 [style = bold, label=""];
36->34 [style = solid, label="i"];
}
