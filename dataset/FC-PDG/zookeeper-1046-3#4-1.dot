digraph {
15 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "String name = \"/foo\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "validateCreateStat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "validateCreateStat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "stat = newStat()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "testBasic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(0,stat.getCversion())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Stat stat@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(0,stat.getVersion())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Stat stat@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(0,stat.getAversion())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "zk.getData(name,false,stat)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->3 [style = bold, label=""];
2->20 [style = dashed, label="0"];
22->19 [style = bold, label=""];
3->21 [style = dashed, label="0"];
4->10 [style = dotted, label="true"];
19->20 [style = bold, label=""];
21->15 [style = bold, label=""];
27->30 [style = bold, label=""];
3->6 [style = bold, label=""];
30->25 [style = bold, label=""];
1->0 [style = bold, label=""];
11->17 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
17->22 [style = bold, label=""];
15->16 [style = bold, label=""];
14->10 [style = dotted, label="true"];
8->13 [style = dashed, label="0"];
25->31 [style = bold, label=""];
24->33 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
23->24 [style = bold, label=""];
33->11 [style = bold, label=""];
31->26 [style = bold, label=""];
24->33 [style = solid, label="stat"];
6->15 [style = dashed, label="0"];
28->23 [style = bold, label=""];
1->16 [style = dashed, label="0"];
29->32 [style = bold, label=""];
0->8 [style = bold, label=""];
2->27 [style = bold, label=""];
32->28 [style = solid, label="name"];
4->9 [style = dotted, label="true"];
8->11 [style = bold, label=""];
32->28 [style = bold, label=""];
16->12 [style = bold, label=""];
14->18 [style = dotted, label="true"];
32->33 [style = solid, label="name"];
14->21 [style = bold, label=""];
11->7 [style = bold, label=""];
7->22 [style = dashed, label="0"];
5->19 [style = dashed, label="0"];
}
