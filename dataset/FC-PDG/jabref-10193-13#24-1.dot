digraph {
3 [style = filled, label = "expected.remove()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expected.remove()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expected.remove()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expected.remove()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expected.remove()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expected.remove()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expected.remove()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(expected,getClasses(searchBasedFetchers))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expected.remove()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "expected.remove()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expected.remove()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expected.remove()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Set<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expected.remove()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
8->4 [style = solid, label="idFetchers"];
11->20 [style = bold, label=""];
6->21 [style = dashed, label="0"];
15->13 [style = bold, label=""];
20->17 [style = bold, label=""];
13->12 [style = solid, label="searchBasedFetchers"];
18->12 [style = solid, label="expected"];
9->4 [style = bold, label=""];
18->19 [style = bold, label=""];
7->8 [style = bold, label=""];
0->4 [style = solid, label="expected"];
1->9 [style = bold, label=""];
1->22 [style = dashed, label="0"];
19->16 [style = bold, label=""];
8->13 [style = dashed, label="0"];
3->19 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
6->1 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
17->12 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
2->14 [style = dashed, label="0"];
21->22 [style = bold, label=""];
16->21 [style = bold, label=""];
0->18 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
14->18 [style = bold, label=""];
13->14 [style = bold, label=""];
22->11 [style = bold, label=""];
}
