digraph {
3 [style = filled, label = "testSerializationPacked['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestUtil.assertPackedFieldsSet(message2)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestPackedTypes message = TestUtil.getPackedSet()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ByteString rawBytes = message.toByteString()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(rawBytes.size(),message.getSerializedSize())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestPackedTypes message2 = TestPackedTypes.parseFrom(rawBytes)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSerializationPacked['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSerializationPacked['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(message.getSerializedSize()).isEqualTo(rawBytes.size())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = solid, label="rawBytes"];
6->5 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = solid, label="message2"];
8->4 [style = bold, label=""];
7->4 [style = bold, label=""];
5->0 [style = bold, label=""];
3->4 [style = bold, label=""];
2->5 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
