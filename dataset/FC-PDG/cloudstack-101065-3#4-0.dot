digraph {
27 [style = filled, label = "lenient().when(this.nwDao.findById(NW_ID_3)).thenReturn(nw3)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS,IP4_ADDRES1,ip4address)@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(nic2.getNetworkId()).thenReturn(NW_ID_2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(nic3.getIPv4Address()).thenReturn(IP4_ADDRES2)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "nics.add(nic2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<NicVO> nics = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "lenient().when(nw3.getTrafficType()).thenReturn(TrafficType.Control)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "when(nw2.getTrafficType()).thenReturn(TrafficType.Control)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "nics.add(nic3)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "NetworkVO nw1 = mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "when(nic1.getIPv4Address()).thenReturn(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "NicVO nic1 = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "NetworkVO nw2 = mock()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testGetRouterControlIp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(nw1.getTrafficType()).thenReturn(TrafficType.Public)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(this.nwDao.findById(NW_ID_3)).thenReturn(nw3)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "lenient().when(nic3.getNetworkId()).thenReturn(NW_ID_3)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "when(nic2.getIPv4Address()).thenReturn(IP4_ADDRES1)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "NicVO nic2 = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "NicVO nic3 = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "lenient().when(nic2.getIPv4Address()).thenReturn(IP4_ADDRES1)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(nic1.getNetworkId()).thenReturn(NW_ID_1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "nics.add(nic1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(this.routerDao.findById(ROUTER_ID)).thenReturn(router)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "lenient().when(nic3.getIPv4Address()).thenReturn(IP4_ADDRES2)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS,IP4_ADDRES1,ip4address)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "NetworkVO nw3 = mock()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DomainRouterVO router = mock()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testGetRouterControlIp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "testGetRouterControlIpWithRouterIp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(router.getPrivateIpAddress()).thenReturn(IP4_ADDRES1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(nic3.getNetworkId()).thenReturn(NW_ID_3)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "when(this.nwDao.findById(NW_ID_2)).thenReturn(nw2)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(nw3.getTrafficType()).thenReturn(TrafficType.Control)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11->28 [style = bold, label=""];
35->31 [style = bold, label=""];
7->1 [style = bold, label=""];
33->3 [style = bold, label=""];
3->31 [style = solid, label="nics"];
7->30 [style = bold, label=""];
10->14 [style = bold, label=""];
1->30 [style = dashed, label="0"];
26->3 [style = bold, label=""];
11->27 [style = solid, label="nw3"];
16->25 [style = dashed, label="0"];
12->15 [style = bold, label=""];
18->2 [style = solid, label="nw1"];
22->29 [style = dashed, label="0"];
30->25 [style = bold, label=""];
15->6 [style = bold, label=""];
3->23 [style = solid, label="nics"];
2->9 [style = bold, label=""];
25->29 [style = bold, label=""];
20->6 [style = bold, label=""];
12->14 [style = solid, label="nic2"];
16->22 [style = bold, label=""];
19->24 [style = solid, label="ip4address"];
34->10 [style = bold, label=""];
6->36 [style = bold, label=""];
31->34 [style = bold, label=""];
19->24 [style = bold, label=""];
37->32 [style = solid, label="ip4address"];
9->27 [style = bold, label=""];
8->0 [style = bold, label=""];
20->10 [style = solid, label="nic1"];
5->19 [style = bold, label=""];
17->28 [style = dashed, label="0"];
28->2 [style = bold, label=""];
11->5 [style = solid, label="nw3"];
5->27 [style = dashed, label="0"];
3->20 [style = bold, label=""];
20->35 [style = solid, label="nic1"];
17->2 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
1->16 [style = bold, label=""];
10->23 [style = bold, label=""];
34->23 [style = solid, label="nw1"];
20->12 [style = bold, label=""];
22->10 [style = bold, label=""];
13->23 [style = bold, label=""];
0->9 [style = solid, label="nw2"];
9->5 [style = bold, label=""];
37->32 [style = bold, label=""];
5->8 [style = dashed, label="0"];
11->17 [style = bold, label=""];
29->10 [style = bold, label=""];
15->13 [style = solid, label="nic3"];
18->8 [style = bold, label=""];
27->19 [style = bold, label=""];
18->8 [style = solid, label="router"];
14->13 [style = bold, label=""];
36->35 [style = bold, label=""];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
2->37 [style = bold, label=""];
23->18 [style = bold, label=""];
7->36 [style = dashed, label="0"];
21->3 [style = bold, label=""];
}
