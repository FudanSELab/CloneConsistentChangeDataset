digraph {
19 [style = filled, label = "internalCluster().startMasterOnlyNode()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "setDisruptionScheme(disruption)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "ServiceDisruptionScheme disruption = new BusyMasterServiceDisruption(random(),Priority.HIGH)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "builders(i( = client().prepareIndex(\"test-idx\").setId(Integer.toString(i)).setSource(\"field1\",\"bar \" + i)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final String dataNode = blockNodeWithIndex(\"test-repo\",\"test-idx\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "internalCluster().startDataOnlyNodes(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "flushAndRefresh()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testDataNodeRestartAfterShardSnapshotFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "logger.info(\"- restarting data node, which should cause primary shards to be failed\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ensureGreen()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "internalCluster().restartNode(dataNode,InternalTestCluster.EMPTY_CALLBACK)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "logger.info(\"- wait for shard snapshots to show as failed\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "disruption.startDisrupting()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "disruption.stopDisrupting()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "logger.info(\"- restarting second data node, which should cause the primary shard on it to be failed\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "internalCluster().restartNode(dataNodes.get(0),InternalTestCluster.EMPTY_CALLBACK)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "createRepository(\"test-repo\",\"mock\",Settings.builder().put(\"location\",repoPath).put(\"compress\",randomBoolean()).put(\"chunk_size\",randomIntBetween(100,1000),ByteSizeUnit.BYTES))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "client(internalCluster().getMasterName()).admin().cluster().prepareCreateSnapshot(\"test-repo\",\"test-snap\").setWaitForCompletion(false).setIndices(\"test-idx\").get()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IndexRequestBuilder(( builders = new IndexRequestBuilder((((@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "logger.info(\"- starting a master node and two data nodes\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final int numdocs = randomIntBetween(50,100)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "maybeInitWithOldSnapshotVersion(\"test-repo\",repoPath)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertAcked(prepareCreate(\"test-idx\",0,Settings.builder().put(\"number_of_shards\",5).put(\"number_of_replicas\",0)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "unblockNode(\"test-repo\",dataNode)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "logger.info(\"- indexing some data\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testDataNodeRestartWithBusyMasterDuringSnapshot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertAcked(client().admin().cluster().preparePutRepository(\"test-repo\").setType(\"mock\").setSettings(Settings.builder().put(\"location\",repoPath).put(\"compress\",randomBoolean()).put(\"chunk_size\",randomIntBetween(100,1000),ByteSizeUnit.BYTES)))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "logger.info(\"- wait for shard snapshot of first primary to show as failed\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "logger.info(\"- creating repository\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertAcked(prepareCreate(\"test-idx\",0,Settings.builder().put(\"number_of_shards\",2).put(\"number_of_replicas\",0)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Path repoPath = randomRepoPath()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final List<String> dataNodes = internalCluster().startDataOnlyNodes(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "internalCluster().restartNode(dataNodes.get(1),InternalTestCluster.EMPTY_CALLBACK)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "logger.info(\"- restarting first data node, which should cause the primary shard on it to be failed\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "blockAllDataNodes(\"test-repo\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testDataNodeRestartAfterShardSnapshotFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "indexRandom(true,builders)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "logger.info(\"- snapshot\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < builders.length@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25->23 [style = solid, label="i"];
41->27 [style = bold, label=""];
23->25 [style = bold, label=""];
43->31 [style = bold, label=""];
22->8 [style = bold, label=""];
21->25 [style = dotted, label="true"];
28->20 [style = bold, label=""];
42->32 [style = bold, label=""];
18->24 [style = bold, label=""];
41->32 [style = solid, label="dataNode"];
1->12 [style = bold, label=""];
27->38 [style = bold, label=""];
12->2 [style = bold, label=""];
4->11 [style = bold, label=""];
34->5 [style = bold, label=""];
3->21 [style = bold, label=""];
37->43 [style = bold, label=""];
7->30 [style = dashed, label="0"];
33->17 [style = bold, label=""];
30->22 [style = bold, label=""];
38->34 [style = bold, label=""];
39->42 [style = bold, label=""];
4->17 [style = bold, label=""];
22->35 [style = bold, label=""];
21->23 [style = dotted, label="true"];
7->22 [style = bold, label=""];
6->19 [style = bold, label=""];
5->9 [style = bold, label=""];
16->13 [style = bold, label=""];
26->27 [style = bold, label=""];
35->10 [style = bold, label=""];
15->6 [style = bold, label=""];
19->33 [style = bold, label=""];
23->25 [style = solid, label="i"];
11->7 [style = bold, label=""];
5->37 [style = bold, label=""];
14->28 [style = bold, label=""];
25->21 [style = bold, label=""];
11->30 [style = bold, label=""];
32->36 [style = bold, label=""];
11->22 [style = solid, label="repoPath"];
26->41 [style = dashed, label="0"];
29->6 [style = bold, label=""];
24->41 [style = bold, label=""];
40->6 [style = bold, label=""];
21->18 [style = bold, label=""];
13->18 [style = solid, label="builders"];
41->31 [style = solid, label="dataNode"];
3->23 [style = solid, label="i"];
27->5 [style = bold, label=""];
38->34 [style = solid, label="disruption"];
36->44 [style = bold, label=""];
19->4 [style = bold, label=""];
17->11 [style = bold, label=""];
4->33 [style = dashed, label="0"];
13->3 [style = bold, label=""];
2->14 [style = bold, label=""];
3->21 [style = solid, label="i"];
31->39 [style = bold, label=""];
21->23 [style = bold, label=""];
24->26 [style = bold, label=""];
9->1 [style = bold, label=""];
25->21 [style = solid, label="i"];
8->35 [style = dashed, label="0"];
8->10 [style = bold, label=""];
10->0 [style = bold, label=""];
23->18 [style = solid, label="builders"];
0->16 [style = bold, label=""];
}
