digraph {
19 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol2.NAME,\"before the roundtrip\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertNotSame(\"The protocol list must have been really reloaded\",agentProtocolsBeforeReload,reloadedProtocols)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "newProtocols.add(MockOptInProtocol2.NAME)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Set<String> newProtocols = new HashSet<>(defaultProtocols)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(\"The protocol list must have been really reloaded\",agentProtocolsBeforeReload == reloadedProtocols)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol1.NAME,\"after the roundtrip\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol2.NAME,\"after the roundtrip\")@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "agentProtocols_singleEnable_roundtrip['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "agentProtocols_multipleEnable_roundtrip['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(\"There should be two additional enabled protocols\",reloadedProtocols.size(),equalTo(defaultProtocols.size() + 2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "j.jenkins.reload()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "agentProtocols_singleEnable_roundtrip['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(\"We should have additional enabled protocol\",reloadedProtocols.size(),equalTo(defaultProtocols.size() + 1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol1.NAME,\"before the roundtrip\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "j.jenkins.save()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "newProtocols.add(MockOptInProtocol1.NAME)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "j.jenkins.setAgentProtocols(newProtocols)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->12 [style = solid, label="agentProtocolsBeforeReload"];
1->4 [style = bold, label=""];
4->17 [style = bold, label=""];
5->9 [style = bold, label=""];
16->8 [style = bold, label=""];
0->2 [style = bold, label=""];
19->10 [style = bold, label=""];
11->12 [style = bold, label=""];
1->18 [style = dashed, label="0"];
9->7 [style = bold, label=""];
12->1 [style = bold, label=""];
13->1 [style = bold, label=""];
11->13 [style = solid, label="reloadedProtocols"];
7->3 [style = bold, label=""];
15->5 [style = bold, label=""];
7->13 [style = solid, label="agentProtocolsBeforeReload"];
8->0 [style = bold, label=""];
3->10 [style = bold, label=""];
18->4 [style = bold, label=""];
3->19 [style = bold, label=""];
8->0 [style = solid, label="defaultProtocols"];
11->13 [style = bold, label=""];
11->12 [style = solid, label="reloadedProtocols"];
6->8 [style = bold, label=""];
2->15 [style = bold, label=""];
12->18 [style = bold, label=""];
14->8 [style = bold, label=""];
12->13 [style = dashed, label="0"];
0->5 [style = solid, label="newProtocols"];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
