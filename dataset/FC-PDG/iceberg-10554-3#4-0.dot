digraph {
1 [style = filled, label = "return Types.MapType.ofOptional(map.keyId(),map.valueId(),map.keyType(),valueType)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Types.MapType map@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Supplier<Type> valueResult@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "map['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return map@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "this.current = requestedMap.valueType()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "map['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "map.isValueOptional()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Types.MapType map@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Supplier<Type> keyResult@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "MapType requestedMap = (MapType)current@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Type valueType = valueResult.get()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Supplier<Type> valueResult@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MapType m = (MapType)current@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Preconditions.checkArgument(.isInstance(m.keyType()),\"Invalid map key type (not string): %s\",m.keyType())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Preconditions.checkArgument(.isInstance(requestedMap.keyType()),\"Invalid map key type (not string): %s\",requestedMap.keyType())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "map.valueType() == valueType@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Supplier<Type> keyResult@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "{this.current = m}@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.current = m.valueType()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Preconditions.checkArgument(m.valueContainsNull() || !map.isValueOptional(),\"Cannot project a map of optional values as required values: %s\",map)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Types.MapType map@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "map['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Preconditions.checkArgument(current instanceof MapType,\"Not a map: %s\",current)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Preconditions.checkArgument(requestedMap.valueContainsNull() || !map.isValueOptional(),\"Cannot project a map of optional values as required values: %s\",map)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "return Types.MapType.ofRequired(map.keyId(),map.valueId(),map.keyType(),valueType)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->7 [style = dotted, label="true"];
4->10 [style = bold, label=""];
25->2 [style = solid, label="map"];
15->2 [style = bold, label=""];
19->18 [style = bold, label=""];
21->20 [style = dotted, label="true"];
25->8 [style = solid, label="map"];
4->16 [style = dashed, label="0"];
24->25 [style = dotted, label="true"];
15->13 [style = solid, label="m"];
19->13 [style = solid, label="requestedMap"];
12->1 [style = dotted, label="true"];
24->9 [style = dotted, label="true"];
5->6 [style = solid, label="valueType"];
11->9 [style = dotted, label="true"];
3->15 [style = bold, label=""];
21->17 [style = dotted, label="true"];
15->19 [style = dashed, label="0"];
10->22 [style = dashed, label="0"];
16->22 [style = bold, label=""];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
1->13 [style = bold, label=""];
22->5 [style = bold, label=""];
7->2 [style = solid, label="map"];
7->8 [style = solid, label="map"];
18->16 [style = bold, label=""];
17->8 [style = solid, label="map"];
21->9 [style = dotted, label="true"];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
24->23 [style = dotted, label="true"];
3->19 [style = bold, label=""];
5->1 [style = solid, label="valueType"];
11->3 [style = bold, label=""];
6->8 [style = dotted, label="true"];
5->14 [style = solid, label="valueType"];
11->0 [style = dotted, label="true"];
6->8 [style = bold, label=""];
12->14 [style = bold, label=""];
2->18 [style = dashed, label="0"];
14->13 [style = bold, label=""];
12->14 [style = dotted, label="false"];
17->18 [style = solid, label="map"];
24->3 [style = bold, label=""];
8->12 [style = bold, label=""];
21->3 [style = bold, label=""];
6->12 [style = bold, label=""];
}
