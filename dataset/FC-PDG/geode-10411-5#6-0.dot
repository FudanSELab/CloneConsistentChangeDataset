digraph {
10 [style = filled, label = "assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,StatsKey.GATEWAYSENDER_BYTES_IN_MEMORY,2048)).isEqualTo(1024L)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "computeDeltaShouldOperateForHandledStatistics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Map<String,Number> statsMap = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "statsMap.put(StatsKey.TOTAL_BUCKET_SIZE,1024)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "statsMap.put(StatsKey.LRU_EVICTIONS,12)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "statsMap.put(StatsKey.DISK_SPACE,2048)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "statsMap.put(StatsKey.PRIMARY_BUCKET_COUNT,5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(aggregateRegionStatsMonitor.computeDelta(statsMap,StatsKey.LRU_DESTROYS,6)).isEqualTo(1L)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(aggregateRegionStatsMonitor.computeDelta(statsMap,StatsKey.DISK_SPACE,2050)).isEqualTo(2L)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "computeDeltaShouldOperateForHandledStatistics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(aggregateRegionStatsMonitor.computeDelta(statsMap,StatsKey.BUCKET_COUNT,15)).isEqualTo(2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(aggregateRegionStatsMonitor.computeDelta(statsMap,StatsKey.PRIMARY_BUCKET_COUNT,6)).isEqualTo(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(aggregateRegionStatsMonitor.computeDelta(statsMap,StatsKey.LRU_EVICTIONS,20)).isEqualTo(8L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(aggregateRegionStatsMonitor.computeDelta(statsMap,StatsKey.TOTAL_BUCKET_SIZE,1030)).isEqualTo(6)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK,2100)).isEqualTo(52L)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK,150)).isEqualTo(50L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "computeDeltaShouldOperateForHandledStatistics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "statsMap.put(StatsKey.GATEWAYSENDER_ENTRIES_OVERFLOWED_TO_DISK,100)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "statsMap.put(StatsKey.GATEWAYSENDER_BYTES_IN_MEMORY,1024)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(gatewaySenderOverflowMonitor.computeDelta(statsMap,StatsKey.GATEWAYSENDER_LRU_EVICTIONS,60)).isEqualTo(10L)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "statsMap.put(StatsKey.LRU_DESTROYS,5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "statsMap.put(StatsKey.GATEWAYSENDER_BYTES_OVERFLOWED_TO_DISK,2048)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "statsMap.put(StatsKey.GATEWAYSENDER_LRU_EVICTIONS,50)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "statsMap.put(StatsKey.BUCKET_COUNT,13)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = bold, label=""];
4->23 [style = dashed, label="0"];
11->12 [style = bold, label=""];
21->15 [style = bold, label=""];
2->7 [style = bold, label=""];
15->19 [style = bold, label=""];
6->13 [style = dashed, label="0"];
22->20 [style = bold, label=""];
1->23 [style = bold, label=""];
14->11 [style = bold, label=""];
5->10 [style = bold, label=""];
6->8 [style = bold, label=""];
13->18 [style = bold, label=""];
3->1 [style = bold, label=""];
6->2 [style = bold, label=""];
12->22 [style = bold, label=""];
20->21 [style = bold, label=""];
8->2 [style = bold, label=""];
16->1 [style = bold, label=""];
17->13 [style = bold, label=""];
0->17 [style = dashed, label="0"];
1->4 [style = bold, label=""];
7->5 [style = bold, label=""];
18->14 [style = bold, label=""];
23->17 [style = bold, label=""];
9->1 [style = bold, label=""];
4->0 [style = bold, label=""];
}
