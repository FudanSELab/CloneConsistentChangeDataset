digraph {
16 [style = filled, label = "testCopyAndRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String f = getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan file:\") > -1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertFileIsPresent(c)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String f = getProject().getProperty(\"dest\") + \"/e/f\"@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String c = getProject().getProperty(\"dest\") + \"/a/b/c\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertContains(\"Removed 1 dangling directory from\",buildRule.getFullLog())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertFileIsNotPresent(f)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFileIsNotPresent(f)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCopyAndRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFileIsNotPresent(d)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFileIsPresent(d)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String target@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "executeTarget(\"emptydircopyandremove\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "executeTarget(target)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertDebuglogContaining(\"Removed 2 dangling directories from\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertDebuglogContaining(\"NO dangling file to remove from\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "testEmptyDirCopyAndRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(getFullLog().indexOf(\"Removing orphan directory:\") > -1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertDebuglogContaining(\"Removed 1 dangling directory from\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "buildRule.executeTarget(target)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "String d = getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertContains(\"Removed 1 dangling file from\",buildRule.getFullLog())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->1 [style = solid, label="target"];
5->13 [style = dashed, label="0"];
16->15 [style = bold, label=""];
4->15 [style = solid, label="target"];
18->24 [style = bold, label=""];
13->7 [style = solid, label="f"];
3->1 [style = bold, label=""];
21->6 [style = bold, label=""];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
6->22 [style = bold, label=""];
24->0 [style = bold, label=""];
8->19 [style = bold, label=""];
1->15 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
0->8 [style = solid, label="f"];
6->11 [style = dashed, label="0"];
6->2 [style = solid, label="d"];
3->4 [style = dotted, label="true"];
18->24 [style = solid, label="c"];
7->0 [style = bold, label=""];
1->21 [style = dashed, label="0"];
19->17 [style = bold, label=""];
8->14 [style = dashed, label="0"];
16->4 [style = dotted, label="true"];
17->23 [style = bold, label=""];
11->2 [style = bold, label=""];
0->10 [style = dashed, label="0"];
9->23 [style = dashed, label="0"];
11->2 [style = solid, label="d"];
6->22 [style = solid, label="d"];
2->13 [style = bold, label=""];
6->2 [style = bold, label=""];
20->21 [style = bold, label=""];
22->18 [style = bold, label=""];
1->6 [style = bold, label=""];
15->11 [style = bold, label=""];
13->7 [style = bold, label=""];
5->7 [style = solid, label="f"];
14->12 [style = bold, label=""];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
8->17 [style = dashed, label="0"];
5->7 [style = bold, label=""];
9->12 [style = dashed, label="0"];
2->22 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
