digraph {
11 [style = filled, label = "testOverwriteWithAppendOutsideOfDelete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Table should have 2 manifests\",2,table.currentSnapshot().allManifests().size())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Table should have one manifest\",1,table.currentSnapshot().manifests().size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Table should have 2 manifests\",2,table.currentSnapshot().manifests().size())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "validateManifestEntries(table.currentSnapshot().manifests().get(1),ids(overwriteId,baseId),files(FILE_0_TO_4,FILE_5_TO_9),statuses(Status.DELETED,Status.EXISTING))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testOverwriteWithoutAppend['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "validateManifestEntries(table.currentSnapshot().allManifests().get(0),ids(overwriteId),files(FILE_10_TO_14),statuses(Status.ADDED))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "long overwriteId = table.currentSnapshot().snapshotId()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TableMetadata base = TestTables.readMetadata(TABLE_NAME)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "validateManifestEntries(table.currentSnapshot().manifests().get(0),ids(overwriteId),files(FILE_10_TO_14),statuses(Status.ADDED))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "table.newOverwrite().overwriteByRowFilter(equal(\"date\",\"2018-06-08\")).commit()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testOverwriteWithAppendOutsideOfDelete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "validateManifestEntries(table.currentSnapshot().allManifests().get(1),ids(overwriteId,baseId),files(FILE_0_TO_4,FILE_5_TO_9),statuses(Status.DELETED,Status.EXISTING))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "long baseId = base.currentSnapshot().snapshotId()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "table.newOverwrite().overwriteByRowFilter(equal(\"date\",\"2018-06-08\")).addFile(FILE_10_TO_14).commit()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotEquals(\"Should create a new snapshot\",baseId,overwriteId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "validateManifestEntries(table.currentSnapshot().manifests().get(0),ids(overwriteId,baseId),files(FILE_0_TO_4,FILE_5_TO_9),statuses(Status.DELETED,Status.EXISTING))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->2 [style = solid, label="baseId"];
1->8 [style = bold, label=""];
16->6 [style = bold, label=""];
0->12 [style = bold, label=""];
11->6 [style = bold, label=""];
7->2 [style = solid, label="overwriteId"];
3->6 [style = bold, label=""];
7->0 [style = bold, label=""];
1->13 [style = bold, label=""];
8->7 [style = bold, label=""];
4->12 [style = dashed, label="0"];
8->13 [style = dashed, label="0"];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
12->10 [style = bold, label=""];
7->0 [style = solid, label="overwriteId"];
7->15 [style = solid, label="overwriteId"];
5->10 [style = dashed, label="0"];
7->10 [style = solid, label="overwriteId"];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
13->7 [style = bold, label=""];
7->5 [style = solid, label="overwriteId"];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
4->14 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
1->15 [style = solid, label="baseId"];
7->9 [style = solid, label="overwriteId"];
4->5 [style = bold, label=""];
1->0 [style = solid, label="baseId"];
1->9 [style = solid, label="baseId"];
}
