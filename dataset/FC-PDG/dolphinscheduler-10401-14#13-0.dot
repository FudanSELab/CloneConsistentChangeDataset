digraph {
0 [style = filled, label = "Map<String,Object> dataParameterRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"20200101 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "Map<String,Object> successRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Project project = getProject(projectName)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "Result executorNullRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "putMsg(result,Status.SUCCESS,projectName)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "pageReturn.setRecords(taskInstanceList)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR.getCode(),(int)executorErrorEndDateRes.getCode())@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "Assert.assertEquals(Status.SUCCESS.getCode(),(int)executorNullDateRes.getCode())@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(Status.PROJECT_NOT_FOUNT,proejctAuthFailRes.get(Constants.STATUS))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(Status.PROJECT_NOT_FOUNT.getCode(),(int)proejctAuthFailRes.getCode())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "taskInstanceList.add(taskInstance)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(null)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(project)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorEmptyRes.get(Constants.STATUS))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(loginUser)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Map<String,Object> executorNullRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "Page<ProcessInstance> pageReturn = new Page<>(1,10)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "Date end = DateUtils.getScheduleDate(\"2020-01-02 00:00:00\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1L),eq(\"\"),eq(-1),Mockito.any(),eq(\"192.168.xx.xx\"),eq(null),eq(null))).thenReturn(pageReturn)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "when(processDefineMapper.selectById(Mockito.anyInt())).thenReturn(getProcessDefinition())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "putMsg(result,Status.PROJECT_NOT_FOUNT,projectName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Result executorNullDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Map<String,Object> executorExistRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"admin\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String projectName = \"project_test1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorEmptyRes.get(Constants.STATUS))@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "Map<String,Object> dataParameterRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"20200101 00:00:00\",\"20200102 00:00:00\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(usersService.getUserIdByName(loginUser.getUserName())).thenReturn(-1)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "testQueryProcessInstanceList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Result successRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Map<String,Object> executorErrorEndDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,\"error date\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1L),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,null,projectName)).thenReturn(result)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR.getCode(),(int)executorErrorStartDateRes.getCode())@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Map<String,Object> proejctAuthFailRes = taskInstanceService.queryTaskListPaging(loginUser,\"project_test1\",0,\"\",\"\",\"test_user\",\"2019-02-26 19:48:00\",\"2019-02-26 19:48:22\",\"\",null,\"\",1,20)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "when(projectMapper.queryByName(Mockito.anyString())).thenReturn(project)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(Status.SUCCESS.getCode(),(int)successRes.getCode())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "Result dataParameterRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"20200101 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "Result executorEmptyRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "putMsg(result,Status.SUCCESS,projectName)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "User loginUser = getAdminUser()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "Map<String,Object> proejctAuthFailRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,46,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"test_user\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "List<TaskInstance> taskInstanceList = new ArrayList<>()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "putMsg(result,Status.SUCCESS,projectName)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(Status.SUCCESS.getCode(),(int)executorNullRes.getCode())@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,executorErrorStartDateRes.get(Constants.STATUS))@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,dataParameterRes.get(Constants.STATUS))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "ProcessInstance processInstance = getProcessInstance()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Page<TaskInstance> pageReturn = new Page<>(1,10)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(null)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "ProcessInstance processInstance = getProcessInstance()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "pageReturn.setRecords(processInstanceList)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "processInstanceList.add(processInstance)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "successRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"\",\"\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,executorErrorEndDateRes.get(Constants.STATUS))@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "List<ProcessInstance> processInstanceList = new ArrayList<>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,Object> executorNullDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR.getCode(),(int)dataParameterRes.getCode())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1L),eq(\"\"),eq(-1),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Result executorErrorEndDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,\"error date\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "Result proejctAuthFailRes = taskInstanceService.queryTaskListPaging(loginUser,\"project_test1\",0,\"\",\"\",\"test_user\",\"2019-02-26 19:48:00\",\"2019-02-26 19:48:22\",\"\",null,\"\",1,20)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "queryTaskListPaging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "Assert.assertEquals(Status.SUCCESS.getCode(),(int)executorEmptyRes.getCode())@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "when(processService.findProcessInstanceDetailById(taskInstance.getProcessInstanceId())).thenReturn(processInstance)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),Mockito.any(),Mockito.any(),Mockito.any(),Mockito.any(),Mockito.any(),eq(\"192.168.xx.xx\"),Mockito.any(),Mockito.any())).thenReturn(pageReturn)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(loginUser)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Result executorErrorStartDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",\"error date\",null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Map<String,Object> executorErrorStartDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",\"error date\",null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "when(usersService.getUserIdByName(loginUser.getUserName())).thenReturn(-1)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TaskInstance taskInstance = getTaskInstance()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(project)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Map<String,Object> executorEmptyRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(projectMapper.queryByName(Mockito.anyString())).thenReturn(project)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,dataParameterRes.get(Constants.STATUS))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "queryTaskListPaging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorNullRes.get(Constants.STATUS))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "Date start = DateUtils.getScheduleDate(\"2020-01-01 00:00:00\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorNullDateRes.get(Constants.STATUS))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
85 [style = filled, label = "when(usersService.getUserIdByName(loginUser.getUserName())).thenReturn(loginUser.getId())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<String,Object> result = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "when(usersService.queryUser(processInstance.getExecutorId())).thenReturn(loginUser)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorExistRes.get(Constants.STATUS))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74->69 [style = bold, label=""];
64->51 [style = bold, label=""];
34->20 [style = bold, label=""];
11->70 [style = dashed, label="0"];
18->61 [style = dashed, label="0"];
7->2 [style = solid, label="loginUser"];
87->43 [style = bold, label=""];
43->57 [style = solid, label="projectName"];
41->8 [style = bold, label=""];
46->2 [style = bold, label=""];
7->69 [style = solid, label="loginUser"];
7->32 [style = solid, label="loginUser"];
59->9 [style = bold, label=""];
73->74 [style = bold, label=""];
89->12 [style = bold, label=""];
7->63 [style = solid, label="loginUser"];
7->58 [style = solid, label="loginUser"];
7->89 [style = solid, label="loginUser"];
10->32 [style = bold, label=""];
43->44 [style = solid, label="projectName"];
43->61 [style = solid, label="projectName"];
28->41 [style = dashed, label="0"];
13->1 [style = bold, label=""];
7->14 [style = bold, label=""];
65->70 [style = solid, label="pageReturn"];
55->57 [style = bold, label=""];
72->90 [style = bold, label=""];
7->53 [style = solid, label="loginUser"];
32->64 [style = dashed, label="0"];
34->66 [style = solid, label="project"];
7->8 [style = solid, label="loginUser"];
43->56 [style = solid, label="projectName"];
32->13 [style = dashed, label="0"];
78->71 [style = bold, label=""];
71->85 [style = bold, label=""];
58->59 [style = bold, label=""];
90->68 [style = bold, label=""];
70->31 [style = bold, label=""];
7->42 [style = solid, label="loginUser"];
43->18 [style = solid, label="projectName"];
7->74 [style = solid, label="loginUser"];
57->54 [style = bold, label=""];
26->46 [style = bold, label=""];
5->54 [style = dashed, label="0"];
43->0 [style = solid, label="projectName"];
19->34 [style = bold, label=""];
47->6 [style = bold, label=""];
65->73 [style = solid, label="pageReturn"];
10->64 [style = bold, label=""];
14->21 [style = solid, label="result"];
45->63 [style = bold, label=""];
21->0 [style = bold, label=""];
11->56 [style = bold, label=""];
27->37 [style = solid, label="taskInstanceList"];
43->23 [style = solid, label="projectName"];
1->48 [style = dashed, label="0"];
11->44 [style = bold, label=""];
14->78 [style = solid, label="result"];
43->22 [style = solid, label="projectName"];
18->15 [style = bold, label=""];
14->22 [style = bold, label=""];
37->29 [style = bold, label=""];
65->75 [style = bold, label=""];
3->67 [style = dashed, label="0"];
38->45 [style = bold, label=""];
42->31 [style = bold, label=""];
84->78 [style = bold, label=""];
13->83 [style = bold, label=""];
7->56 [style = solid, label="loginUser"];
27->16 [style = bold, label=""];
45->81 [style = bold, label=""];
52->19 [style = bold, label=""];
13->62 [style = dashed, label="0"];
32->26 [style = bold, label=""];
50->39 [style = bold, label=""];
15->35 [style = bold, label=""];
85->73 [style = bold, label=""];
0->36 [style = bold, label=""];
1->11 [style = bold, label=""];
7->64 [style = solid, label="loginUser"];
14->39 [style = solid, label="result"];
36->50 [style = dashed, label="0"];
43->64 [style = solid, label="projectName"];
35->5 [style = bold, label=""];
22->38 [style = bold, label=""];
61->55 [style = bold, label=""];
34->84 [style = solid, label="project"];
33->52 [style = dashed, label="0"];
7->18 [style = solid, label="loginUser"];
7->71 [style = solid, label="loginUser"];
7->35 [style = solid, label="loginUser"];
4->63 [style = dashed, label="0"];
6->25 [style = solid, label="taskInstance"];
25->37 [style = bold, label=""];
7->4 [style = solid, label="loginUser"];
65->76 [style = solid, label="pageReturn"];
39->12 [style = bold, label=""];
31->41 [style = bold, label=""];
62->48 [style = bold, label=""];
29->40 [style = bold, label=""];
49->17 [style = bold, label=""];
7->31 [style = solid, label="loginUser"];
46->76 [style = dashed, label="0"];
14->40 [style = solid, label="result"];
44->56 [style = dashed, label="0"];
24->13 [style = bold, label=""];
82->88 [style = bold, label=""];
8->24 [style = bold, label=""];
16->11 [style = solid, label="pageReturn"];
17->10 [style = bold, label=""];
43->39 [style = solid, label="projectName"];
4->81 [style = dashed, label="0"];
23->84 [style = bold, label=""];
16->41 [style = solid, label="pageReturn"];
2->58 [style = dashed, label="0"];
30->43 [style = bold, label=""];
34->29 [style = solid, label="project"];
2->3 [style = bold, label=""];
43->35 [style = solid, label="projectName"];
34->20 [style = solid, label="project"];
69->79 [style = bold, label=""];
68->65 [style = bold, label=""];
43->62 [style = solid, label="projectName"];
7->44 [style = solid, label="loginUser"];
43->32 [style = solid, label="projectName"];
44->67 [style = bold, label=""];
7->13 [style = solid, label="loginUser"];
90->75 [style = solid, label="processInstance"];
75->86 [style = bold, label=""];
4->33 [style = bold, label=""];
28->49 [style = dashed, label="0"];
47->24 [style = solid, label="processInstance"];
36->39 [style = bold, label=""];
41->73 [style = dashed, label="0"];
7->81 [style = solid, label="loginUser"];
43->7 [style = bold, label=""];
53->50 [style = bold, label=""];
3->9 [style = bold, label=""];
6->27 [style = bold, label=""];
68->86 [style = solid, label="processInstanceList"];
9->18 [style = bold, label=""];
43->31 [style = solid, label="projectName"];
48->11 [style = bold, label=""];
43->58 [style = solid, label="projectName"];
86->19 [style = bold, label=""];
16->9 [style = solid, label="pageReturn"];
66->21 [style = bold, label=""];
63->52 [style = bold, label=""];
23->47 [style = bold, label=""];
28->17 [style = bold, label=""];
83->76 [style = bold, label=""];
43->81 [style = solid, label="projectName"];
33->19 [style = bold, label=""];
21->82 [style = bold, label=""];
60->43 [style = bold, label=""];
26->83 [style = dashed, label="0"];
14->19 [style = solid, label="result"];
8->80 [style = bold, label=""];
14->23 [style = solid, label="result"];
14->45 [style = solid, label="result"];
34->66 [style = bold, label=""];
43->89 [style = solid, label="projectName"];
26->51 [style = dashed, label="0"];
56->49 [style = bold, label=""];
80->13 [style = bold, label=""];
16->46 [style = solid, label="pageReturn"];
7->0 [style = solid, label="loginUser"];
65->88 [style = solid, label="pageReturn"];
43->53 [style = solid, label="projectName"];
43->13 [style = solid, label="projectName"];
88->89 [style = bold, label=""];
3->59 [style = dashed, label="0"];
0->53 [style = dashed, label="0"];
20->66 [style = dashed, label="0"];
16->25 [style = bold, label=""];
46->58 [style = bold, label=""];
7->61 [style = solid, label="loginUser"];
77->72 [style = bold, label=""];
35->57 [style = dashed, label="0"];
43->19 [style = solid, label="projectName"];
51->46 [style = bold, label=""];
45->4 [style = bold, label=""];
20->21 [style = bold, label=""];
76->44 [style = bold, label=""];
9->61 [style = bold, label=""];
79->70 [style = bold, label=""];
15->55 [style = dashed, label="0"];
7->62 [style = solid, label="loginUser"];
43->69 [style = solid, label="projectName"];
44->28 [style = bold, label=""];
43->34 [style = solid, label="projectName"];
33->77 [style = bold, label=""];
14->22 [style = solid, label="result"];
7->57 [style = solid, label="loginUser"];
12->23 [style = bold, label=""];
24->62 [style = bold, label=""];
81->33 [style = bold, label=""];
43->2 [style = solid, label="projectName"];
40->42 [style = bold, label=""];
21->53 [style = bold, label=""];
}
