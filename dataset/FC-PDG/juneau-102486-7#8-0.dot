digraph {
8 [style = filled, label = "throw new BasicRuntimeException(\"Odd number of parameters passed into HeaderList.ofPairs()\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ofPairs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "b.add(BasicHeader.of(stringify(pairs(i(),pairs(i + 1())@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i += 2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return EMPTY@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "pairs.length == 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "pairs.length % 2 != 0@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new BasicRuntimeException(\"Odd number of parameters passed into PartList.ofPairs()\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "pairs == null || pairs.length == 0@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return EMPTY@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Object pairs@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return new HeaderList(b.toArray())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < pairs.length@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return new PartList(b)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ofPairs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ofPairs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ArrayBuilder<Header> b = ArrayBuilder.create(,pairs.length / 2,true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "pairs.length % 2 != 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ArrayBuilder<Header> b = ArrayBuilder.create(,pairs.length / 2)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "b.add(stringify(pairs(i(),pairs(i + 1()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "PartListBuilder b = create()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return EMPTY@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i += 2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "b.add(BasicHeader.of(stringify(pairs(i(),pairs(i + 1())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Object pairs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "pairs.length % 2 != 0@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
4->7 [style = solid, label="i"];
6->1 [style = solid, label="i"];
4->12 [style = solid, label="i"];
16->8 [style = dotted, label="true"];
14->2 [style = dotted, label="true"];
5->3 [style = bold, label=""];
1->4 [style = bold, label=""];
21->17 [style = solid, label="i"];
2->10 [style = solid, label="pairs"];
15->10 [style = bold, label=""];
7->1 [style = bold, label=""];
16->13 [style = bold, label=""];
23->20 [style = bold, label=""];
7->17 [style = bold, label=""];
16->8 [style = bold, label=""];
20->24 [style = dotted, label="true"];
7->12 [style = bold, label=""];
19->20 [style = bold, label=""];
4->1 [style = solid, label="i"];
19->23 [style = dotted, label="true"];
10->3 [style = bold, label=""];
15->10 [style = dotted, label="true"];
7->0 [style = bold, label=""];
6->7 [style = solid, label="i"];
8->24 [style = dashed, label="0"];
15->16 [style = bold, label=""];
26->17 [style = solid, label="pairs"];
21->7 [style = solid, label="i"];
10->5 [style = dotted, label="true"];
24->18 [style = bold, label=""];
4->21 [style = dashed, label="0"];
0->22 [style = dashed, label="0"];
4->7 [style = bold, label=""];
18->22 [style = solid, label="b"];
7->12 [style = dotted, label="true"];
9->6 [style = bold, label=""];
10->23 [style = dashed, label="0"];
3->9 [style = bold, label=""];
20->18 [style = bold, label=""];
7->22 [style = bold, label=""];
11->2 [style = dotted, label="true"];
10->5 [style = bold, label=""];
10->16 [style = bold, label=""];
12->4 [style = bold, label=""];
6->17 [style = solid, label="i"];
18->6 [style = bold, label=""];
11->10 [style = bold, label=""];
3->8 [style = bold, label=""];
19->23 [style = bold, label=""];
7->4 [style = dotted, label="true"];
9->13 [style = dashed, label="0"];
25->19 [style = bold, label=""];
8->9 [style = bold, label=""];
2->1 [style = solid, label="pairs"];
21->7 [style = bold, label=""];
14->15 [style = bold, label=""];
6->12 [style = solid, label="i"];
13->6 [style = bold, label=""];
2->15 [style = solid, label="pairs"];
7->1 [style = dotted, label="true"];
3->8 [style = dotted, label="true"];
7->21 [style = dotted, label="true"];
7->17 [style = dotted, label="true"];
6->7 [style = bold, label=""];
20->24 [style = bold, label=""];
17->21 [style = bold, label=""];
2->12 [style = solid, label="pairs"];
25->26 [style = dotted, label="true"];
2->26 [style = dashed, label="0"];
8->13 [style = bold, label=""];
}
