digraph {
4 [style = filled, label = "TestCallback callback1 = new TestCallback()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "callback1.latch.await(4,TimeUnit.SECONDS)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "semaphore.release(2)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TransportContext context = new TransportContext(conf,handler)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(responseSize,callback1.successLength)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "client0.sendRpc(ByteBuffer.allocate(0),callback0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "timeoutCleanlyClosesClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TransportClient client1 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "timeoutInactiveRequests['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(responseSize,callback0.successLength)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "callback0.latch.await()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "callback1.latch.await()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "callback1.latch.await(60,TimeUnit.SECONDS)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final int responseSize = 16@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.sendRpc(ByteBuffer.allocate(0),callback1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "server = context.createServer()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "clientFactory = context.createClientFactory()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(callback0.failure instanceof IOException)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TransportClient client = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestCallback callback1 = new TestCallback()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestCallback callback0 = new TestCallback()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TransportClient client0 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.sendRpc(ByteBuffer.allocate(0),callback0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RpcHandler handler = new RpcHandler(){@Override public void receive(TransportClient client,ByteBuffer message,RpcResponseCallback callback){try {semaphore.acquire()callback.onSuccess(ByteBuffer.allocate(responseSize))}catch (InterruptedException e) }@Override public StreamManager getStreamManager(){return defaultManager}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertFalse(client0.isActive())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "client1.sendRpc(ByteBuffer.allocate(0),callback1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "timeoutInactiveRequests['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "semaphore.release()@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(callback1.failure instanceof IOException)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNull(callback1.failure)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Semaphore semaphore = new Semaphore(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->20 [style = dashed, label="0"];
5->8 [style = bold, label=""];
16->12 [style = solid, label="handler"];
7->1 [style = bold, label=""];
30->13 [style = bold, label=""];
29->30 [style = bold, label=""];
17->6 [style = bold, label=""];
1->15 [style = bold, label=""];
31->24 [style = bold, label=""];
3->18 [style = dashed, label="0"];
23->15 [style = bold, label=""];
27->31 [style = bold, label=""];
13->16 [style = solid, label="responseSize"];
22->28 [style = bold, label=""];
3->22 [style = dashed, label="0"];
19->6 [style = bold, label=""];
3->4 [style = bold, label=""];
13->16 [style = bold, label=""];
15->5 [style = bold, label=""];
4->20 [style = solid, label="callback1"];
4->0 [style = bold, label=""];
15->26 [style = bold, label=""];
20->22 [style = bold, label=""];
4->28 [style = dashed, label="0"];
26->27 [style = bold, label=""];
0->14 [style = bold, label=""];
12->10 [style = bold, label=""];
24->4 [style = bold, label=""];
9->18 [style = bold, label=""];
18->4 [style = bold, label=""];
8->9 [style = solid, label="callback1"];
13->28 [style = solid, label="responseSize"];
0->25 [style = dashed, label="0"];
2->21 [style = bold, label=""];
7->23 [style = solid, label="callback0"];
6->13 [style = bold, label=""];
7->23 [style = bold, label=""];
13->5 [style = solid, label="responseSize"];
4->20 [style = bold, label=""];
8->9 [style = bold, label=""];
7->1 [style = solid, label="callback0"];
28->25 [style = bold, label=""];
9->3 [style = bold, label=""];
21->7 [style = bold, label=""];
10->2 [style = bold, label=""];
6->30 [style = dashed, label="0"];
1->23 [style = dashed, label="0"];
16->12 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
