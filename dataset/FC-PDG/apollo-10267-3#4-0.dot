digraph {
5 [style = filled, label = "verify(someProperties,times(1)).getProperty(anotherKey)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testGetShortProperty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(anotherValue,defaultConfig.getIntProperty(anotherKey,someDefaultValue))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(someDefaultValue,defaultConfig.getShortProperty(someStringKey,someDefaultValue))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String someKey = \"someKey\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String someStringValue = \"someStringValue\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(someProperties.getProperty(anotherKey)).thenReturn(String.valueOf(anotherValue))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(someProperties,times(2)).getProperty(someKey)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Short someValue = 2@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(anotherValue,defaultConfig.getIntProperty(anotherKey,someDefaultValue))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "someProperties = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testGetIntPropertyMultipleTimesWithSmallCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "defineComponent(,)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "String someStringKey = \"someStringKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(someValue,defaultConfig.getShortProperty(someKey,someDefaultValue))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Integer someValue = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtilWithSmallCache())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Integer someDefaultValue = -1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testGetIntPropertyMultipleTimesWithSmallCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Short someDefaultValue = -1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "someProperties.setProperty(someKey,String.valueOf(someValue))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Integer anotherValue = 3@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "someProperties = new Properties()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "someProperties.setProperty(someStringKey,someStringValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->3 [style = bold, label=""];
28->1 [style = solid, label="someDefaultValue"];
5->8 [style = bold, label=""];
22->25 [style = bold, label=""];
32->22 [style = bold, label=""];
0->9 [style = bold, label=""];
15->8 [style = solid, label="someValue"];
6->32 [style = solid, label="someKey"];
6->23 [style = solid, label="someKey"];
27->1 [style = solid, label="someStringKey"];
30->32 [style = solid, label="someValue"];
7->10 [style = bold, label=""];
30->23 [style = solid, label="someValue"];
25->23 [style = bold, label=""];
2->1 [style = bold, label=""];
9->1 [style = solid, label="someDefaultValue"];
7->1 [style = dashed, label="0"];
26->29 [style = bold, label=""];
15->3 [style = solid, label="someValue"];
6->11 [style = solid, label="anotherKey"];
19->20 [style = dashed, label="0"];
15->30 [style = dashed, label="0"];
27->31 [style = bold, label=""];
28->26 [style = bold, label=""];
9->20 [style = bold, label=""];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
0->4 [style = solid, label="anotherValue"];
3->12 [style = bold, label=""];
31->29 [style = solid, label="someStringValue"];
9->4 [style = solid, label="someDefaultValue"];
1->7 [style = bold, label=""];
27->29 [style = solid, label="someStringKey"];
13->7 [style = solid, label="someKey"];
19->16 [style = bold, label=""];
0->11 [style = solid, label="anotherValue"];
8->17 [style = bold, label=""];
9->11 [style = solid, label="someDefaultValue"];
11->5 [style = bold, label=""];
30->28 [style = bold, label=""];
13->17 [style = solid, label="someKey"];
20->16 [style = bold, label=""];
31->6 [style = bold, label=""];
15->1 [style = solid, label="someValue"];
6->4 [style = solid, label="anotherKey"];
0->12 [style = solid, label="anotherValue"];
26->22 [style = solid, label="someProperties"];
9->8 [style = solid, label="someDefaultValue"];
29->32 [style = bold, label=""];
13->8 [style = solid, label="someKey"];
28->23 [style = solid, label="someDefaultValue"];
12->14 [style = bold, label=""];
18->13 [style = bold, label=""];
10->4 [style = bold, label=""];
23->1 [style = bold, label=""];
9->19 [style = bold, label=""];
14->2 [style = bold, label=""];
13->15 [style = bold, label=""];
13->10 [style = solid, label="someKey"];
15->7 [style = solid, label="someValue"];
16->14 [style = solid, label="someProperties"];
4->11 [style = bold, label=""];
9->7 [style = solid, label="someDefaultValue"];
6->5 [style = solid, label="anotherKey"];
1->23 [style = dashed, label="0"];
13->1 [style = solid, label="someKey"];
24->27 [style = bold, label=""];
21->13 [style = bold, label=""];
6->30 [style = bold, label=""];
}
