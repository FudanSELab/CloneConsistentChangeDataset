digraph {
19 [style = filled, label = "c.get().header(origin(null)).run().assertBody().is(VALUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "c.get().header(from(PARSED)).run().assertBody().is(VALUE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "c.get().header(origin(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "c.get().header(origin(null)).run().assertBody().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "c.get().header(origin((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "c.get().header(from(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "c.get().header(from((Supplier<String>)null)).run().assertBody().isEmpty()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "c.get().header(new From(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "c.get().header(from(VALUE)).run().assertBody().is(VALUE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c.get().header(from((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "c.get().header(origin((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "c.get().header(from((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "c.get().header(from(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "c.get().header(from((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "c.get().header(from(null)).run().assertBody().is(VALUE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "c.get().header(origin(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "c.get().header(from(VALUE)).run().assertBody().is(VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "c.get().header(from(null)).run().assertBody().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "c.get().header(from(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "c.get().header(origin(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "c.get().header(from((String)null)).run().assertBody().isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "c.get().header(origin((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "c.get().header(new Origin(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23->20 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
6->20 [style = dashed, label="0"];
0->23 [style = dashed, label="0"];
17->9 [style = bold, label=""];
3->18 [style = dashed, label="0"];
25->18 [style = bold, label=""];
18->19 [style = bold, label=""];
10->3 [style = bold, label=""];
4->26 [style = dashed, label="0"];
21->25 [style = bold, label=""];
8->24 [style = dashed, label="0"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
1->9 [style = bold, label=""];
20->22 [style = bold, label=""];
9->23 [style = bold, label=""];
3->5 [style = bold, label=""];
15->11 [style = bold, label=""];
10->16 [style = bold, label=""];
8->2 [style = bold, label=""];
24->21 [style = bold, label=""];
2->21 [style = dashed, label="0"];
19->26 [style = bold, label=""];
5->4 [style = bold, label=""];
12->14 [style = bold, label=""];
14->15 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->9 [style = bold, label=""];
22->24 [style = bold, label=""];
6->7 [style = bold, label=""];
5->19 [style = dashed, label="0"];
16->12 [style = bold, label=""];
7->22 [style = dashed, label="0"];
10->25 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
}
