digraph {
5 [style = filled, label = "inOrder.verify(subscriber,never()).onNext(\"onSuccessOnly\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "inOrder.verify(observer,never()).onError(any())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<>(subscriber)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Flowable<String> origin = Flowable.unsafeCreate(new FuncWithErrors(1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "inOrder.verify(observer,never()).onNext(\"onSuccessOnly\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "inOrder.verify(subscriber,times(1)).onComplete()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "InOrder inOrder = inOrder(observer)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "inOrder.verify(subscriber).onSubscribe((Subscription)notNull())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "inOrder.verify(observer).onSubscribe((Disposable)notNull())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "inOrder.verify(observer,never()).onNext(\"beginningEveryTime\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "origin.retryWhen(new Function<Observable<? extends Throwable>,Observable<?>>(){@Override public Observable<?> apply(Observable<? extends Throwable> t1){return Observable.empty()}}).subscribe(to)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestObserver<String> to = new TestObserver<String>(observer)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "onCompletedFromNotificationHandler['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Observable<String> origin = Observable.unsafeCreate(new FuncWithErrors(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "onCompletedFromNotificationHandler['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "inOrder.verify(subscriber,never()).onNext(\"beginningEveryTime\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "inOrder.verifyNoMoreInteractions()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "inOrder.verify(observer,times(1)).onComplete()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<String>(subscriber)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "onCompletedFromNotificationHandler['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "origin.retryWhen(new Function<Flowable<? extends Throwable>,Flowable<Object>>(){@Override public Flowable<Object> apply(Flowable<? extends Throwable> t1){return Flowable.empty()}}).subscribe(ts)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "InOrder inOrder = inOrder(subscriber)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "inOrder.verify(subscriber,never()).onError(any())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
1->0 [style = solid, label="subscriber"];
5->14 [style = dashed, label="0"];
10->21 [style = dashed, label="0"];
7->23 [style = dashed, label="0"];
9->11 [style = bold, label=""];
3->1 [style = bold, label=""];
1->12 [style = solid, label="subscriber"];
7->10 [style = bold, label=""];
4->6 [style = bold, label=""];
11->16 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
12->11 [style = bold, label=""];
1->9 [style = solid, label="subscriber"];
8->20 [style = dashed, label="0"];
9->11 [style = solid, label="ts"];
2->9 [style = bold, label=""];
16->22 [style = bold, label=""];
19->6 [style = bold, label=""];
2->17 [style = dashed, label="0"];
22->23 [style = bold, label=""];
0->22 [style = dashed, label="0"];
13->1 [style = bold, label=""];
2->12 [style = bold, label=""];
0->7 [style = bold, label=""];
24->22 [style = solid, label="observer"];
11->0 [style = bold, label=""];
10->5 [style = bold, label=""];
23->21 [style = bold, label=""];
1->24 [style = dashed, label="0"];
15->24 [style = bold, label=""];
12->11 [style = solid, label="ts"];
24->17 [style = bold, label=""];
18->16 [style = solid, label="to"];
4->19 [style = dashed, label="0"];
1->2 [style = bold, label=""];
9->12 [style = dashed, label="0"];
8->4 [style = bold, label=""];
20->19 [style = bold, label=""];
17->18 [style = bold, label=""];
14->20 [style = bold, label=""];
21->14 [style = bold, label=""];
24->18 [style = solid, label="observer"];
18->16 [style = bold, label=""];
}
