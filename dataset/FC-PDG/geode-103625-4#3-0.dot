digraph {
15 [style = filled, label = "pf.setSubscriptionMessageTrackingTimeout(8000)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verifyExpiry(90 * 1000)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "pf.setSubscriptionAckInterval(2000)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "fail(\"Test testPeriodicAckSendByClient Failed\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{if (server != null) {server.stop()}}@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Exception ex@@@42@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Exception ex@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testPeriodicAckSendByClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "verifyExpiry()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "seo = (SequenceIdAndExpirationObject)proxy.getThreadIdToSequenceIdMap().get(new ThreadIdentifier(new byte((((,1))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "verifyAckSend(false)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "verifyExpiry(15 * 1000)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertFalse(seo.getAckSend())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "verifyAckSend(60 * 1000,true)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ex.printStackTrace()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "eid = new EventID(new byte((((,1,2)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ex.printStackTrace()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "proxy.verifyIfDuplicate(eid)@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "fail(\"Failed to create server\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "seo = (SequenceIdAndExpirationObject)proxy.getThreadIdToSequenceIdMap().get(new ThreadIdentifier(new byte((((,1))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "CacheServer server = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "pf.setSubscriptionEnabled(true)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "pf.setSubscriptionRedundancy(1)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "proxy.verifyIfDuplicate(eid)@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verifyAckSend(30 * 1000,false)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "seo = (SequenceIdAndExpirationObject)proxy.getThreadIdToSequenceIdMap().get(new ThreadIdentifier(new byte((((,1))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Exception e@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "server = this.cache.addCacheServer()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\" eid should not be duplicate as it is a new entry\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{if (server != null) {server.stop()}}@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int port = AvailablePort.getRandomAvailablePort(AvailablePort.SOCKET)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EventID eid = new EventID(new byte((((,1,1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "pf.setSubscriptionAckInterval(5000)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "e.printStackTrace()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "pf.setReadTimeout(20000)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "proxy = (PoolImpl)pf.create(\"clientPool\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "seo = (SequenceIdAndExpirationObject)proxy.getThreadIdToSequenceIdMap().get(new ThreadIdentifier(new byte((((,1))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "pf.addServer(\"localhost\",port)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testNoAckSendByClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "server.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "pf.setSubscriptionMessageTrackingTimeout(15000)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "fail(\" eid should not be duplicate as it is a new entry\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testNoAckSendByClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "server.setPort(port)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "PoolFactory pf = PoolManager.createFactory()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "verifyAckSend(6000,true)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertFalse(seo.getAckSend())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
0->12 [style = dotted, label="true"];
12->39 [style = dotted, label="true"];
3->7 [style = dotted, label="true"];
10->28 [style = bold, label=""];
20->32 [style = solid, label="server"];
0->18 [style = dotted, label="true"];
21->6 [style = bold, label=""];
20->9 [style = bold, label=""];
29->30 [style = bold, label=""];
11->34 [style = dashed, label="0"];
44->35 [style = bold, label=""];
11->29 [style = dashed, label="0"];
20->27 [style = solid, label="server"];
42->8 [style = bold, label=""];
30->27 [style = bold, label=""];
18->12 [style = bold, label=""];
4->26 [style = bold, label=""];
23->4 [style = bold, label=""];
41->4 [style = bold, label=""];
31->4 [style = bold, label=""];
14->34 [style = bold, label=""];
46->36 [style = bold, label=""];
36->32 [style = bold, label=""];
4->9 [style = solid, label="port"];
28->1 [style = bold, label=""];
2->40 [style = bold, label=""];
15->19 [style = bold, label=""];
15->40 [style = dashed, label="0"];
28->1 [style = dotted, label="true"];
19->8 [style = bold, label=""];
43->46 [style = bold, label=""];
39->33 [style = bold, label=""];
1->17 [style = bold, label=""];
6->2 [style = bold, label=""];
24->16 [style = bold, label=""];
25->24 [style = bold, label=""];
7->5 [style = bold, label=""];
10->28 [style = solid, label="eid"];
3->5 [style = dotted, label="true"];
37->44 [style = solid, label="eid"];
22->27 [style = bold, label=""];
3->7 [style = bold, label=""];
34->37 [style = bold, label=""];
16->21 [style = bold, label=""];
5->24 [style = bold, label=""];
9->25 [style = bold, label=""];
22->30 [style = dashed, label="0"];
38->43 [style = bold, label=""];
2->15 [style = bold, label=""];
37->44 [style = bold, label=""];
14->29 [style = bold, label=""];
11->22 [style = bold, label=""];
28->17 [style = bold, label=""];
0->18 [style = bold, label=""];
33->32 [style = bold, label=""];
17->13 [style = bold, label=""];
35->38 [style = bold, label=""];
12->39 [style = bold, label=""];
4->16 [style = solid, label="port"];
44->45 [style = bold, label=""];
45->35 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
12->27 [style = bold, label=""];
40->42 [style = bold, label=""];
19->42 [style = dashed, label="0"];
12->33 [style = dotted, label="true"];
26->20 [style = bold, label=""];
44->45 [style = dotted, label="true"];
}
