digraph {
9 [style = filled, label = "TestHelper.assertExpectedResults(expectedResults,runner.run(QueryPlus.wrap(query),new HashMap<>()))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TestHelper.assertExpectedResults(expectedResults,runner.run(QueryPlus.wrap(query)))@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "TestHelper.assertExpectedResults(expectedResults,runner.run(QueryPlus.wrap(query),context))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "List<Result<TimeseriesResultValue>> expectedResults = Collections.singletonList(new Result<>(DateTimes.of(\"2013-01-01T00:00:00.000Z\"),new TimeseriesResultValue(ImmutableMap.builder().put(\"rows\",3L).put(\"val\",59L).build())))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TimeseriesQueryRunnerFactory factory = new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()),new TimeseriesQueryEngine(),QueryRunnerTestHelper.NOOP_QUERYWATCHER)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Result<TimeseriesResultValue>> expectedResults = Collections.singletonList(new Result<TimeseriesResultValue>(DateTimes.of(\"2013-01-01T00:00:00.000Z\"),new TimeseriesResultValue(ImmutableMap.builder().put(\"rows\",3L).put(\"val\",59L).build())))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSpatialQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testSpatialQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HashMap<String,Object> context = new HashMap<String,Object>()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "QueryRunner runner = new FinalizeResultsQueryRunner(factory.createRunner(segment),factory.getToolchest())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSpatialQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TimeseriesQueryRunnerFactory factory = new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()),new TimeseriesQueryEngine(),QueryRunnerTestHelper.NOOP_QUERYWATCHER)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TimeseriesQuery query = Druids.newTimeseriesQueryBuilder().dataSource(\"test\").granularity(Granularities.ALL).intervals(Collections.singletonList(Intervals.of(\"2013-01-01/2013-01-07\"))).filters(new SpatialDimFilter(\"dim.geo\",new RadiusBound(new float((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@984f01,5))).aggregators(Arrays.asList(new CountAggregatorFactory(\"rows\"),new LongSumAggregatorFactory(\"val\",\"val\"))).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
12->11 [style = bold, label=""];
0->4 [style = solid, label="query"];
0->9 [style = solid, label="query"];
3->4 [style = solid, label="context"];
6->8 [style = solid, label="expectedResults"];
7->0 [style = bold, label=""];
2->9 [style = bold, label=""];
3->4 [style = bold, label=""];
11->2 [style = bold, label=""];
6->12 [style = dashed, label="0"];
6->1 [style = bold, label=""];
6->4 [style = solid, label="expectedResults"];
5->0 [style = bold, label=""];
3->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
0->8 [style = solid, label="query"];
10->0 [style = bold, label=""];
12->9 [style = solid, label="expectedResults"];
1->2 [style = bold, label=""];
2->8 [style = bold, label=""];
}
