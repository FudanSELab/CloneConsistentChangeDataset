digraph {
9 [style = filled, label = "shouldInitTaskTimeoutAndEventuallyThrow['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThrows(,null)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "EasyMock.replay(stateManager)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "task = createStandbyTask()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(),null,log)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Logger log = new LogContext().logger()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "shouldCLearTaskTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(0L,null,log)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThrows(,null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).toMillis(),null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(0L,null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "shouldInitTaskTimeoutAndEventuallyThrow['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Logger log = new LogContext().logger()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(0L,null,log)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "task.clearTaskTimeout(log)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->6 [style = dashed, label="0"];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
2->3 [style = bold, label=""];
2->10 [style = solid, label="log"];
5->3 [style = solid, label="log"];
13->11 [style = bold, label=""];
11->2 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
2->12 [style = solid, label="log"];
1->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
2->14 [style = dashed, label="0"];
14->0 [style = bold, label=""];
2->0 [style = solid, label="log"];
10->12 [style = bold, label=""];
0->1 [style = bold, label=""];
5->0 [style = solid, label="log"];
2->14 [style = bold, label=""];
6->8 [style = bold, label=""];
0->8 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
