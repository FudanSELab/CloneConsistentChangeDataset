digraph {
31 [style = filled, label = "values.put(\"c\",3)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.put(\"b\",2.1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "values.put(\"a\",4.123456789123456)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(6 * 4.123456789123456,result)@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(-7.9D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(14L,result)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertEquals(.8D,result)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "values.put(\"b\",4.123456789123456)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "values.put(\"d\",4.12345678)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(14.2D,result)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "values.clear()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "values.put(\"c\",4.12345678)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "values.put(\"a\",4.12345678)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(14.623456789123456,result)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "values.put(\"a\",10.1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "values.put(\"c\",4.123456789123456)@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "subManyFieldsWithValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789L,result)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "values.clear()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.put(\"a\",1.1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "values.put(\"b\",4.12345678)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "addManyFieldsWithManySubAdds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "values.clear()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,c,d)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Assert.assertEquals(-8L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "values.put(\"c\",3.1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(14.6D,result)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "addManyFieldsWithManySubAdds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->39 [style = solid, label="result"];
13->56 [style = dashed, label="0"];
22->6 [style = solid, label="result"];
61->43 [style = bold, label=""];
46->5 [style = bold, label=""];
48->29 [style = bold, label=""];
20->0 [style = bold, label=""];
32->3 [style = solid, label="result"];
38->41 [style = bold, label=""];
9->7 [style = bold, label=""];
58->9 [style = bold, label=""];
50->59 [style = solid, label="result"];
49->8 [style = bold, label=""];
8->1 [style = bold, label=""];
4->59 [style = bold, label=""];
48->53 [style = dashed, label="0"];
46->54 [style = bold, label=""];
29->46 [style = bold, label=""];
45->38 [style = bold, label=""];
57->16 [style = bold, label=""];
40->22 [style = bold, label=""];
7->43 [style = bold, label=""];
28->25 [style = bold, label=""];
31->40 [style = bold, label=""];
56->53 [style = bold, label=""];
28->25 [style = solid, label="result"];
38->55 [style = bold, label=""];
25->57 [style = bold, label=""];
53->29 [style = bold, label=""];
5->54 [style = dashed, label="0"];
26->2 [style = solid, label="result"];
37->36 [style = bold, label=""];
35->20 [style = bold, label=""];
62->60 [style = bold, label=""];
29->5 [style = solid, label="result"];
1->11 [style = bold, label=""];
30->19 [style = bold, label=""];
29->54 [style = solid, label="result"];
51->27 [style = bold, label=""];
11->17 [style = bold, label=""];
43->10 [style = bold, label=""];
22->24 [style = solid, label="result"];
14->21 [style = bold, label=""];
22->6 [style = bold, label=""];
21->23 [style = bold, label=""];
50->4 [style = solid, label="result"];
22->58 [style = solid, label="result"];
39->16 [style = bold, label=""];
25->39 [style = bold, label=""];
50->4 [style = bold, label=""];
13->48 [style = bold, label=""];
6->24 [style = bold, label=""];
44->14 [style = bold, label=""];
4->33 [style = bold, label=""];
15->3 [style = bold, label=""];
47->50 [style = bold, label=""];
23->42 [style = bold, label=""];
12->13 [style = bold, label=""];
27->34 [style = bold, label=""];
16->30 [style = bold, label=""];
34->44 [style = bold, label=""];
24->58 [style = dashed, label="0"];
2->45 [style = bold, label=""];
41->12 [style = bold, label=""];
42->28 [style = bold, label=""];
55->52 [style = bold, label=""];
32->15 [style = solid, label="result"];
12->52 [style = dashed, label="0"];
24->9 [style = bold, label=""];
7->61 [style = dashed, label="0"];
33->35 [style = bold, label=""];
17->26 [style = bold, label=""];
27->60 [style = dashed, label="0"];
0->37 [style = bold, label=""];
41->55 [style = dashed, label="0"];
19->31 [style = bold, label=""];
39->57 [style = dashed, label="0"];
36->32 [style = bold, label=""];
52->56 [style = bold, label=""];
26->45 [style = solid, label="result"];
9->61 [style = bold, label=""];
26->2 [style = bold, label=""];
28->57 [style = solid, label="result"];
60->34 [style = bold, label=""];
18->27 [style = bold, label=""];
29->46 [style = solid, label="result"];
50->33 [style = solid, label="result"];
32->15 [style = bold, label=""];
10->47 [style = bold, label=""];
33->59 [style = dashed, label="0"];
3->49 [style = bold, label=""];
6->58 [style = bold, label=""];
}
