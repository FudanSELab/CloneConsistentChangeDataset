digraph {
2 [style = filled, label = "return new EnumerableFilter(cluster,traitSet,input,condition)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RexNode condition@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RexNode fetch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final RelNode input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final RelNode input@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final RelOptCluster cluster = input.getCluster()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIf(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.filter(input)}})@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.filter(input)}}).replaceIf(RelDistributionTraitDef.INSTANCE,new Supplier<RelDistribution>(){public RelDistribution get(){return RelMdDistribution.filter(input)}})@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "RexNode offset@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return new EnumerableLimit(cluster,traitSet,input,offset,fetch)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RexNode condition@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->2 [style = solid, label="condition"];
9->12 [style = dotted, label="true"];
10->3 [style = solid, label="input"];
3->7 [style = dashed, label="0"];
3->13 [style = solid, label="traitSet"];
4->3 [style = solid, label="input"];
9->11 [style = dotted, label="true"];
0->4 [style = dotted, label="true"];
7->2 [style = solid, label="traitSet"];
8->4 [style = dotted, label="true"];
6->7 [style = solid, label="input"];
5->13 [style = solid, label="cluster"];
4->2 [style = solid, label="input"];
4->12 [style = dashed, label="0"];
6->2 [style = solid, label="input"];
1->2 [style = solid, label="condition"];
8->6 [style = dotted, label="true"];
3->2 [style = bold, label=""];
8->5 [style = bold, label=""];
7->2 [style = bold, label=""];
2->13 [style = dashed, label="0"];
0->1 [style = dotted, label="true"];
3->2 [style = solid, label="traitSet"];
3->13 [style = bold, label=""];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
11->13 [style = solid, label="fetch"];
10->13 [style = solid, label="input"];
12->13 [style = solid, label="offset"];
5->2 [style = solid, label="cluster"];
9->10 [style = dotted, label="true"];
0->5 [style = bold, label=""];
}
