digraph {
16 [style = filled, label = "String address = \"localhost:\" + address1.getPort()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ConnectionManager connectionManager = new ConnectionManager(profile,localService.transport)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testServerNameAttributes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Settings bindSettings = Settings.builder().put(TransportSettings.BIND_HOST.getKey(),\"localhost\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PlainActionFuture<Void> connectFuture = PlainActionFuture.newFuture()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(connectionManager.getAllConnectedNodes().stream().anyMatch(null))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(strategy.assertNoRunningConnections())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "strategy.connect(connectFuture)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "localService.start()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "DiscoveryNode discoveryNode = connectionManager.getAllConnectedNodes().stream().findFirst().get()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(connectionManager.getAllConnectedNodes().stream().anyMatch(null))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testProxyStrategyWillOpenExpectedNumberOfConnectionsToAddress['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(numOfConnections,connectionManager.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "localService.acceptIncomingRequests()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int numOfConnections = randomIntBetween(4,8)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TransportAddress address1 = transport1.boundAddress().publishAddress()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String serverName = \"localhost:\" + address1.getPort()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "TransportAddress address1 = transport1.boundAddress().publishAddress()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int numOfConnections = randomIntBetween(4,8)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testServerNameAttributes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "connectFuture.actionGet()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(strategy.assertNoRunningConnections())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"localhost\",discoveryNode.getAttributes().get(\"server_name\"))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
8->16 [style = bold, label=""];
4->16 [style = dashed, label="0"];
11->1 [style = bold, label=""];
12->7 [style = solid, label="connectFuture"];
3->6 [style = bold, label=""];
7->14 [style = solid, label="connectFuture"];
11->19 [style = bold, label=""];
1->13 [style = bold, label=""];
12->7 [style = bold, label=""];
7->14 [style = bold, label=""];
21->12 [style = bold, label=""];
20->18 [style = bold, label=""];
18->22 [style = bold, label=""];
15->11 [style = bold, label=""];
10->8 [style = bold, label=""];
5->12 [style = bold, label=""];
6->10 [style = bold, label=""];
8->9 [style = bold, label=""];
22->10 [style = bold, label=""];
17->3 [style = bold, label=""];
9->5 [style = bold, label=""];
9->21 [style = bold, label=""];
9->11 [style = solid, label="numOfConnections"];
14->15 [style = bold, label=""];
8->4 [style = bold, label=""];
16->9 [style = bold, label=""];
13->2 [style = bold, label=""];
}
