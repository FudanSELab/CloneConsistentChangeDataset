digraph {
21 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "minusExp = Expressions.call(minusExp,BuiltInMethod.EXCEPT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()).append(Expressions.constant(all)))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "minusExp = childExp@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "minusExp == null@@@9@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.add(minusExp)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final Result result = implementor.visitChild(this,ord.i,input,pref)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "intersectExp = Expressions.call(intersectExp,BuiltInMethod.INTERSECT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()).append(Expressions.constant(all)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "builder.add(intersectExp)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "EnumerableRel input = (EnumerableRel)ord.e@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "pref = pref.of(result.format)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Prefer pref@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Expression intersectExp = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "intersectExp == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Expression childExp = builder.append(\"child\" + ord.i,result.block)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "intersectExp = childExp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Expression minusExp = null@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(implementor.getTypeFactory(),getRowType(),pref.prefer(JavaRowFormat.CUSTOM))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->11 [style = dotted, label="true"];
8->10 [style = bold, label=""];
0->3 [style = solid, label="minusExp"];
4->6 [style = bold, label=""];
8->3 [style = solid, label="minusExp"];
3->18 [style = dashed, label="0"];
13->11 [style = solid, label="childExp"];
13->22 [style = solid, label="childExp"];
23->20 [style = solid, label="intersectExp"];
0->12 [style = bold, label=""];
16->15 [style = dotted, label="true"];
8->23 [style = dashed, label="0"];
3->11 [style = bold, label=""];
11->22 [style = dashed, label="0"];
6->5 [style = solid, label="physType"];
11->12 [style = bold, label=""];
21->17 [style = dotted, label="true"];
18->20 [style = dotted, label="false"];
19->6 [style = bold, label=""];
0->20 [style = dashed, label="0"];
3->0 [style = dotted, label="false"];
20->18 [style = solid, label="intersectExp"];
3->0 [style = bold, label=""];
0->4 [style = solid, label="minusExp"];
10->9 [style = solid, label="input"];
23->18 [style = solid, label="intersectExp"];
21->2 [style = bold, label=""];
2->23 [style = bold, label=""];
11->0 [style = solid, label="minusExp"];
16->7 [style = dotted, label="true"];
6->5 [style = bold, label=""];
18->20 [style = bold, label=""];
12->9 [style = solid, label="pref"];
12->10 [style = bold, label=""];
18->22 [style = bold, label=""];
13->3 [style = bold, label=""];
12->4 [style = bold, label=""];
20->19 [style = solid, label="intersectExp"];
8->0 [style = solid, label="minusExp"];
22->19 [style = solid, label="intersectExp"];
22->12 [style = bold, label=""];
21->7 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
20->12 [style = bold, label=""];
11->3 [style = solid, label="minusExp"];
23->10 [style = bold, label=""];
4->19 [style = dashed, label="0"];
10->9 [style = bold, label=""];
22->20 [style = solid, label="intersectExp"];
14->2 [style = bold, label=""];
14->1 [style = dotted, label="true"];
11->4 [style = solid, label="minusExp"];
12->19 [style = bold, label=""];
22->18 [style = solid, label="intersectExp"];
9->5 [style = solid, label="result"];
13->18 [style = bold, label=""];
2->8 [style = bold, label=""];
7->9 [style = solid, label="pref"];
9->13 [style = bold, label=""];
18->22 [style = dotted, label="true"];
}
