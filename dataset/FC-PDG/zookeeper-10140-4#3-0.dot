digraph {
11 [style = filled, label = "learner.self.setTickTime(2000)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "connectionRetryTimeoutTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "learner.connectToLeader(addr,\"\")@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "learner.setPassConnectAttempt(5)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "learner.setTimeMultiplier((long)4000 * 1000000)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "connectToLearnerMasterLimitTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "learner.setTimeMultiplier((long)4000 * 1000000)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Learner learner = new TimeoutLearner()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fail(\"should have thrown IOException!\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "connectToLearnerMasterLimitTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "learner.self.setConnectToLearnerMasterLimit(5)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TimeoutLearner learner = new TimeoutLearner()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "learner.self.setInitLimit(2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "learner.self.setSyncLimit(2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "learner.self.setInitLimit(5)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "learner.self = new QuorumPeer()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "InetSocketAddress addr = new InetSocketAddress(1111)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.fail(\"should have thrown IOException!\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->3 [style = bold, label=""];
16->8 [style = bold, label=""];
10->14 [style = bold, label=""];
3->16 [style = dashed, label="0"];
0->15 [style = dashed, label="0"];
2->9 [style = bold, label=""];
4->7 [style = bold, label=""];
11->15 [style = bold, label=""];
14->7 [style = bold, label=""];
2->13 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
9->13 [style = dashed, label="0"];
10->4 [style = bold, label=""];
10->2 [style = bold, label=""];
4->14 [style = dashed, label="0"];
12->3 [style = bold, label=""];
10->2 [style = solid, label="addr"];
1->10 [style = bold, label=""];
8->11 [style = bold, label=""];
17->16 [style = bold, label=""];
15->1 [style = bold, label=""];
}
