digraph {
20 [style = filled, label = "EasyMock.expectLastCall().andAnswer(null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(exception,e.getCause())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expectAdd(SourceSink.SOURCE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "herder.restartConnector(CONNECTOR_NAME,restartCallback)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "herder.putConnectorConfig(CONNECTOR_NAME,config,false,createCallback)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(createdInfo(SourceSink.SOURCE),connectorInfo.result())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRestartConnector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "fail()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "FutureCallback<Void> restartCallback = new FutureCallback<>()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "worker.startConnector(EasyMock.eq(CONNECTOR_NAME),EasyMock.eq(config),EasyMock.anyObject(),EasyMock.eq(herder),EasyMock.eq(TargetState.STARTED),EasyMock.capture(onStart))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expectLastCall().andAnswer(new IAnswer<Boolean>(){@Override public Boolean answer(){onStart.getValue().onCompletion(exception,null)return true}})@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Exception exception = new ConnectException(\"Failed to start connector\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "worker.stopAndAwaitConnector(CONNECTOR_NAME)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Herder.Created<ConnectorInfo> connectorInfo = createCallback.get(1000L,TimeUnit.SECONDS)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRestartConnector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Capture<Callback<TargetState>> onStart = EasyMock.newCapture()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRestartConnectorFailureOnStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ExecutionException e@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expectConfigValidation(connectorMock,true,config)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PowerMock.verifyAll()@@@32@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PowerMock.replayAll()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Connector connectorMock = PowerMock.createMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "restartCallback.get(1000L,TimeUnit.MILLISECONDS)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PowerMock.replayAll()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,String> config = connectorConfig(SourceSink.SOURCE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->21 [style = dotted, label="true"];
8->10 [style = bold, label=""];
16->13 [style = bold, label=""];
12->5 [style = bold, label=""];
5->20 [style = bold, label=""];
11->1 [style = bold, label=""];
1->15 [style = bold, label=""];
0->12 [style = bold, label=""];
18->11 [style = bold, label=""];
22->21 [style = bold, label=""];
8->1 [style = solid, label="config"];
10->3 [style = bold, label=""];
25->14 [style = bold, label=""];
2->9 [style = bold, label=""];
15->16 [style = bold, label=""];
5->17 [style = bold, label=""];
3->4 [style = bold, label=""];
4->0 [style = bold, label=""];
8->5 [style = solid, label="config"];
6->14 [style = bold, label=""];
20->18 [style = bold, label=""];
2->23 [style = bold, label=""];
16->13 [style = solid, label="restartCallback"];
10->3 [style = solid, label="connectorMock"];
21->9 [style = bold, label=""];
19->14 [style = bold, label=""];
13->7 [style = solid, label="restartCallback"];
17->20 [style = dashed, label="0"];
13->7 [style = bold, label=""];
7->2 [style = bold, label=""];
5->24 [style = bold, label=""];
24->17 [style = bold, label=""];
24->17 [style = solid, label="exception"];
14->8 [style = bold, label=""];
23->9 [style = bold, label=""];
8->3 [style = solid, label="config"];
8->11 [style = solid, label="config"];
12->5 [style = solid, label="onStart"];
17->11 [style = bold, label=""];
}
