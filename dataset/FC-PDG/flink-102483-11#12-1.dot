digraph {
20 [style = filled, label = "verify(TestStreamSource.rawOperatorStateInputs).close()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Configuration taskManagerConfig = new Configuration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(StateBackendTestSource.operatorStateBackend).close()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(TestStreamSource.operatorStateBackend).close()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "verify(TestStreamSource.operatorStateBackend).dispose()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "verify(TestStreamSource.keyedStateBackend).dispose()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Task task = createTask(,cfg,taskManagerConfig)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cfg.setStateKeySerializer(mock())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "StateBackendTestSource.fail = true@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "verify(TestStreamSource.keyedStateBackend).close()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "TestStreamSource<Long,MockSourceFunction> streamSource = new TestStreamSource<>(new MockSourceFunction())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(ExecutionState.FINISHED,task.getExecutionState())@@@15@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testStateBackendLoadingAndClosing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(StateBackendTestSource.keyedStateBackend).close()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cfg.setStreamOperator(new StreamSource<>(new MockSourceFunction()))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testStateBackendLoadingAndClosing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "task.getExecutingThread().join()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "taskManagerConfig.setString(CheckpointingOptions.STATE_BACKEND,.getName())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "cfg.setStreamOperator(streamSource)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "testStateBackendClosingOnFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StreamConfig cfg = new StreamConfig(new Configuration())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "cfg.setOperatorID(new OperatorID(4711L,42L))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Task task = createTask(,cfg,taskManagerConfig)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(TestStreamSource.rawKeyedStateInputs).close()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(ExecutionState.FAILED,task.getExecutionState())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(ExecutionState.FINISHED,task.getExecutionState())@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "task.startTaskThread()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
1->5 [style = bold, label=""];
4->9 [style = bold, label=""];
13->10 [style = bold, label=""];
17->8 [style = bold, label=""];
14->24 [style = bold, label=""];
13->25 [style = bold, label=""];
25->1 [style = bold, label=""];
0->26 [style = bold, label=""];
8->23 [style = bold, label=""];
23->18 [style = solid, label="streamSource"];
2->3 [style = bold, label=""];
11->26 [style = dashed, label="0"];
27->3 [style = bold, label=""];
9->13 [style = solid, label="cfg"];
0->11 [style = bold, label=""];
9->17 [style = bold, label=""];
8->6 [style = bold, label=""];
15->19 [style = bold, label=""];
9->8 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
3->10 [style = solid, label="taskManagerConfig"];
19->16 [style = bold, label=""];
9->10 [style = solid, label="cfg"];
24->20 [style = bold, label=""];
22->3 [style = bold, label=""];
12->14 [style = dashed, label="0"];
5->12 [style = bold, label=""];
16->21 [style = bold, label=""];
3->13 [style = solid, label="taskManagerConfig"];
12->14 [style = bold, label=""];
18->13 [style = bold, label=""];
0->24 [style = dashed, label="0"];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
20->15 [style = bold, label=""];
23->18 [style = bold, label=""];
10->25 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
}
