digraph {
27 [style = filled, label = "i < numDocs@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int(( sliceCounters = new int((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "w.addDocument(doc)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int intValue = randomInt()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "BytesRef br = new BytesRef(uuid)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "sliceCounters(id(++@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testSearch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int hashCode = StringHelper.murmurhash3_x86_32(br,TermsSliceQuery.SEED)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"intField\",intValue))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "keys.add(uuid)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int max = randomIntBetween(2,10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int(( sliceCounters1 = new int((((@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(keys.size(),equalTo(0))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "doc.add(new StringField(\"uuid\",uuid,Field.Store.YES))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sliceCounters1(Math.floorMod(BitMixer.mix((long)intValue),max)(++@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "searcher.search(query1,new Collector(){@Override public LeafCollector getLeafCollector(LeafReaderContext context){return new LeafCollector(){@Override public void setScorer(Scorer scorer){}@Override public void collect(int doc){Document d = context.reader().document(doc,Collections.singleton(\"uuid\"))String uuid = d.get(\"uuid\")assertThat(keys.contains(uuid),equalTo(true))keys.remove(uuid)}}}@Override public ScoreMode scoreMode(){return ScoreMode.COMPLETE_NO_SCORES}})@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int id = 0@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "w.addDocument(doc)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "w.close()@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final IndexSearcher searcher = newSearcher(reader)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TermsSliceQuery query1 = new TermsSliceQuery(\"uuid\",id,max)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testSearch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "id < max@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String uuid = UUIDs.base64UUID()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int(( sliceCounters2 = new int((((@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(searcher.count(query1),equalTo(sliceCounters(id())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final IndexReader reader = w.getReader()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "++i@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "searcher.search(query1,new Collector(){@Override public LeafCollector getLeafCollector(LeafReaderContext context){return new LeafCollector(){@Override public void setScorer(Scorer scorer){}@Override public void collect(int doc){Document d = context.reader().document(doc,Collections.singleton(\"uuid\"))String uuid = d.get(\"uuid\")assertThat(keys.contains(uuid),equalTo(true))keys.remove(uuid)}}}@Override public boolean needsScores(){return false}})@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final IndexReader reader = w.getReader()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final RandomIndexWriter w = new RandomIndexWriter(random(),dir,new KeywordAnalyzer())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "id++@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Document doc = new Document()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RandomIndexWriter w = new RandomIndexWriter(random(),dir)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(searcher.count(query2),equalTo(sliceCounters2(id())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long doubleValue = NumericUtils.doubleToSortableLong(randomDouble())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final int numDocs = randomIntBetween(100,200)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testSearch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "keys.add(uuid)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "doc.add(new StringField(\"uuid\",uuid,Field.Store.YES))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Set<String> keys = new HashSet<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "dir.close()@@@52@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Directory dir = newDirectory()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "DocValuesSliceQuery query2 = new DocValuesSliceQuery(\"doubleField\",id,max)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "dir.close()@@@57@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int id = Math.floorMod(hashCode,max)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "reader.close()@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
27->1 [style = dotted, label="true"];
10->1 [style = solid, label="doubleValue"];
6->31 [style = dotted, label="true"];
4->25 [style = bold, label=""];
31->22 [style = solid, label="query1"];
14->35 [style = bold, label=""];
4->1 [style = dotted, label="true"];
6->22 [style = bold, label=""];
22->37 [style = bold, label=""];
26->19 [style = dotted, label="true"];
8->6 [style = bold, label=""];
18->4 [style = solid, label="numDocs"];
26->22 [style = dotted, label="true"];
1->19 [style = solid, label="sliceCounters2"];
5->6 [style = solid, label="id"];
5->19 [style = solid, label="id"];
4->30 [style = dotted, label="true"];
28->0 [style = bold, label=""];
12->40 [style = bold, label=""];
11->16 [style = solid, label="reader"];
31->6 [style = bold, label=""];
33->18 [style = bold, label=""];
9->24 [style = solid, label="uuid"];
27->9 [style = dotted, label="true"];
15->20 [style = bold, label=""];
39->43 [style = solid, label="id"];
43->37 [style = solid, label="sliceCounters"];
36->18 [style = bold, label=""];
28->19 [style = solid, label="sliceCounters2"];
12->20 [style = solid, label="max"];
44->18 [style = bold, label=""];
4->24 [style = dotted, label="true"];
27->35 [style = dotted, label="true"];
7->2 [style = solid, label="dir"];
22->47 [style = solid, label="query1"];
6->31 [style = solid, label="id"];
6->19 [style = solid, label="id"];
11->16 [style = bold, label=""];
13->25 [style = bold, label=""];
1->4 [style = bold, label=""];
27->25 [style = dotted, label="true"];
9->8 [style = solid, label="uuid"];
6->26 [style = solid, label="id"];
1->26 [style = solid, label="max"];
4->35 [style = dotted, label="true"];
25->8 [style = solid, label="doc"];
26->22 [style = solid, label="id"];
6->37 [style = dotted, label="true"];
0->27 [style = solid, label="i"];
22->32 [style = bold, label=""];
27->41 [style = dotted, label="true"];
23->3 [style = bold, label=""];
46->39 [style = bold, label=""];
27->16 [style = bold, label=""];
26->6 [style = bold, label=""];
17->20 [style = solid, label="sliceCounters1"];
12->39 [style = solid, label="max"];
4->13 [style = dotted, label="true"];
6->38 [style = bold, label=""];
30->14 [style = solid, label="intValue"];
40->37 [style = solid, label="sliceCounters"];
22->37 [style = dashed, label="0"];
10->34 [style = bold, label=""];
26->32 [style = dotted, label="true"];
7->2 [style = bold, label=""];
30->10 [style = bold, label=""];
1->20 [style = solid, label="floorMod"];
26->37 [style = solid, label="id"];
26->6 [style = dotted, label="true"];
34->14 [style = bold, label=""];
27->4 [style = solid, label="i"];
18->7 [style = bold, label=""];
5->31 [style = solid, label="id"];
3->29 [style = bold, label=""];
6->32 [style = solid, label="id"];
37->47 [style = bold, label=""];
24->13 [style = bold, label=""];
6->47 [style = dotted, label="true"];
12->26 [style = solid, label="max"];
31->22 [style = solid, label="id"];
40->43 [style = solid, label="sliceCounters"];
6->26 [style = bold, label=""];
26->8 [style = dotted, label="true"];
31->6 [style = solid, label="id"];
27->39 [style = dotted, label="true"];
35->15 [style = bold, label=""];
25->47 [style = solid, label="uuid"];
4->10 [style = dotted, label="true"];
12->31 [style = solid, label="max"];
47->31 [style = bold, label=""];
10->35 [style = solid, label="doubleValue"];
25->9 [style = bold, label=""];
12->17 [style = bold, label=""];
9->46 [style = bold, label=""];
46->39 [style = solid, label="hashCode"];
5->26 [style = bold, label=""];
5->22 [style = solid, label="id"];
26->6 [style = solid, label="id"];
13->35 [style = solid, label="doc"];
7->45 [style = solid, label="dir"];
27->13 [style = dotted, label="true"];
30->20 [style = solid, label="intValue"];
20->1 [style = bold, label=""];
32->19 [style = bold, label=""];
4->15 [style = dotted, label="true"];
6->22 [style = dotted, label="true"];
9->46 [style = solid, label="br"];
27->4 [style = dotted, label="true"];
29->21 [style = bold, label=""];
42->0 [style = bold, label=""];
22->37 [style = solid, label="query1"];
26->31 [style = dotted, label="true"];
26->31 [style = bold, label=""];
12->22 [style = solid, label="max"];
35->1 [style = bold, label=""];
6->22 [style = solid, label="id"];
27->46 [style = dotted, label="true"];
2->45 [style = dashed, label="0"];
16->5 [style = bold, label=""];
16->5 [style = solid, label="reader"];
43->41 [style = bold, label=""];
17->22 [style = solid, label="sliceCounters1"];
9->34 [style = solid, label="uuid"];
41->35 [style = bold, label=""];
28->1 [style = solid, label="sliceCounters2"];
25->9 [style = solid, label="uuid"];
12->32 [style = solid, label="max"];
31->22 [style = bold, label=""];
25->1 [style = solid, label="uuid"];
27->43 [style = dotted, label="true"];
1->31 [style = solid, label="max"];
31->22 [style = dashed, label="0"];
0->27 [style = bold, label=""];
5->32 [style = solid, label="id"];
12->6 [style = solid, label="max"];
25->15 [style = solid, label="doc"];
39->43 [style = bold, label=""];
4->20 [style = dotted, label="true"];
38->23 [style = bold, label=""];
9->30 [style = bold, label=""];
4->25 [style = dotted, label="true"];
1->32 [style = solid, label="max"];
4->14 [style = dotted, label="true"];
31->37 [style = solid, label="id"];
19->8 [style = bold, label=""];
2->12 [style = bold, label=""];
45->12 [style = bold, label=""];
20->1 [style = solid, label="floorMod"];
7->45 [style = bold, label=""];
26->31 [style = solid, label="id"];
27->4 [style = bold, label=""];
17->28 [style = bold, label=""];
1->24 [style = bold, label=""];
17->40 [style = dashed, label="0"];
26->23 [style = bold, label=""];
4->27 [style = bold, label=""];
32->19 [style = solid, label="query2"];
25->41 [style = solid, label="uuid"];
18->27 [style = solid, label="numDocs"];
31->8 [style = solid, label="query1"];
13->47 [style = solid, label="doc"];
4->34 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
4->11 [style = bold, label=""];
40->42 [style = bold, label=""];
5->26 [style = solid, label="id"];
13->4 [style = bold, label=""];
20->22 [style = solid, label="sliceCounters1"];
}
