digraph {
5 [style = filled, label = "ClusterState before = ClusterState.builder(ClusterName.DEFAULT).metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testAddWriteOnlyWithExistingWriteIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ClusterState after = service.applyAliasActions(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,null,null)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "after = service.applyAliasActions(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,null,null)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "IndexMetadata.Builder indexMetadata = IndexMetadata.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(),\"test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),equalTo(after.metaData().index(\"test\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertAliasesVersionUnchanged(\"test2\",before,after)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertAliasesVersionIncreased(\"test\",before,after)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "IndexMetadata.Builder indexMetadata2 = IndexMetadata.builder(\"test2\").putAlias(AliasMetadata.builder(\"alias\").writeIndex(true).build()).settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "after = service.applyAliasActions(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,true,null)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertNull(after.metadata().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testAddWriteOnlyWithExistingWriteIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testAddWriteOnlyWithNoExistingAliases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(exception.getMessage(),startsWith(\"alias (alias( has more than one write index (\"))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\").putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build()).settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(after.metadata().getIndicesLookup().get(\"alias\").getWriteIndex(),equalTo(after.metadata().index(\"test2\")))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),equalTo(after.metaData().index(\"test\")))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),equalTo(after.metaData().index(\"test2\")))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertNull(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ClusterState before = ClusterState.builder(ClusterName.DEFAULT).metadata(Metadata.builder().put(indexMetadata).put(indexMetadata2)).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertAliasesVersionIncreased(\"test\",before,after)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertAliasesVersionIncreased(\"test\",before,after)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ClusterState after = service.applyAliasActions(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,false,null)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
14->3 [style = bold, label=""];
22->26 [style = bold, label=""];
19->17 [style = solid, label="before"];
19->18 [style = bold, label=""];
5->14 [style = dashed, label="0"];
16->11 [style = bold, label=""];
26->17 [style = bold, label=""];
4->6 [style = bold, label=""];
25->9 [style = bold, label=""];
6->11 [style = dashed, label="0"];
19->28 [style = solid, label="before"];
5->7 [style = solid, label="before"];
11->12 [style = bold, label=""];
21->24 [style = bold, label=""];
5->3 [style = solid, label="before"];
9->10 [style = bold, label=""];
14->7 [style = solid, label="before"];
3->7 [style = solid, label="after"];
8->13 [style = dashed, label="0"];
0->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
7->9 [style = bold, label=""];
28->0 [style = bold, label=""];
6->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
17->28 [style = bold, label=""];
2->0 [style = bold, label=""];
18->22 [style = bold, label=""];
5->0 [style = solid, label="before"];
19->18 [style = solid, label="before"];
28->9 [style = solid, label="after"];
8->2 [style = bold, label=""];
19->23 [style = solid, label="before"];
0->25 [style = bold, label=""];
3->8 [style = bold, label=""];
15->0 [style = bold, label=""];
19->9 [style = solid, label="before"];
12->14 [style = bold, label=""];
9->21 [style = bold, label=""];
14->3 [style = solid, label="before"];
2->25 [style = dashed, label="0"];
3->13 [style = bold, label=""];
27->23 [style = bold, label=""];
21->23 [style = solid, label="after"];
13->15 [style = bold, label=""];
3->0 [style = solid, label="after"];
20->19 [style = bold, label=""];
14->0 [style = solid, label="before"];
18->17 [style = solid, label="after"];
24->27 [style = bold, label=""];
19->21 [style = solid, label="before"];
}
