digraph {
10 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "VectorSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "VectorSeriesCollection c2 = (VectorSeriesCollection)TestUtils.serialised(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "VectorSeries s1 = new VectorSeries(\"Series\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "VectorSeriesCollection c2 = (VectorSeriesCollection)c1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->13 [style = bold, label=""];
10->14 [style = bold, label=""];
13->10 [style = solid, label="c2"];
1->3 [style = bold, label=""];
6->8 [style = solid, label="c1"];
6->12 [style = solid, label="c1"];
6->0 [style = bold, label=""];
6->2 [style = solid, label="c1"];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
6->4 [style = solid, label="c1"];
12->9 [style = bold, label=""];
7->3 [style = bold, label=""];
13->12 [style = solid, label="c2"];
2->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
8->2 [style = solid, label="c2"];
8->2 [style = bold, label=""];
13->15 [style = solid, label="c2"];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
4->2 [style = solid, label="c2"];
0->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
3->0 [style = solid, label="s1"];
14->15 [style = bold, label=""];
4->13 [style = dashed, label="0"];
}
