digraph {
2 [style = filled, label = "ContextManager contextManager = mock(,RETURNS_DEEP_STUBS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "contextManagerField.setAccessible(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertSchemaExists['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = mockMetaDataMap()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ProxyContext.getInstance().getMetaData(\"schema1\")@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(ProxyContext.getInstance().schemaExists(\"schema\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "contextManagerField.set(ProxyContext.getInstance(),contextManager)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(ProxyContext.getInstance().schemaExists(\"schema_2\"))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MetaDataContexts metaDataContexts = new MetaDataContexts(mock(),metaDataMap,mock(),mock(),new ConfigurationProperties(new Properties()),mock())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertSchemaExists['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertGetSchemaWhenNotExisted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(),metaDataMap,mock(),mock(),new ConfigurationProperties(new Properties()),mock())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
2->0 [style = solid, label="contextManager"];
0->13 [style = bold, label=""];
11->1 [style = bold, label=""];
1->0 [style = bold, label=""];
7->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
3->4 [style = bold, label=""];
9->6 [style = bold, label=""];
6->2 [style = bold, label=""];
5->1 [style = bold, label=""];
10->8 [style = bold, label=""];
5->11 [style = dashed, label="0"];
12->8 [style = bold, label=""];
8->9 [style = bold, label=""];
8->11 [style = solid, label="metaDataMap"];
8->5 [style = solid, label="metaDataMap"];
5->1 [style = solid, label="metaDataContexts"];
2->11 [style = bold, label=""];
11->1 [style = solid, label="metaDataContexts"];
2->5 [style = bold, label=""];
}
