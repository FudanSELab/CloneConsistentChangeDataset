digraph {
31 [style = filled, label = "assertEquals(\"h\",subject.logestCommonSubsequence(\"elephant\",\"hippo\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"fly\",\"ant\")).isEqualTo(\"\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(\"\",subject.logestCommonSubsequence(\"left\",\"\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(\"\",subject.logestCommonSubsequence(\"\",\"\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(\"PENNSYLVNIA\",subject.logestCommonSubsequence(\"PENNSYLVANIA\",\"PENNCISYLVNIA\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"elephant\",\"hippo\")).isEqualTo(\"h\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(\"t\",subject.logestCommonSubsequence(\"left\",\"right\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(\"D H Enterprises Inc\",subject.logestCommonSubsequence(\"D N H Enterprises Inc\",\"D & H Enterprises, Inc.\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"leettteft\",\"ritttght\")).isEqualTo(\"tttt\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(\"\",subject.longestCommonSubsequence(\"fly\",\"ant\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"fog\",subject.logestCommonSubsequence(\"frog\",\"fog\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"left\",\"right\")).isEqualTo(\"t\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"h\",subject.longestCommonSubsequence(\"elephant\",\"hippo\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"My Gym Childrens Fitness\",subject.longestCommonSubsequence(\"My Gym Children's Fitness Center\",\"My Gym. Childrens Fitness\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"\",subject.logestCommonSubsequence(\"\",\"right\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(\"\",subject.logestCommonSubsequence(\"fly\",\"ant\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testLongestCommonSubsequence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(\"ABC Corp\",subject.longestCommonSubsequence(\"ABC Corporation\",\"ABC Corp\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"ABC Corporation\",\"ABC Corp\")).isEqualTo(\"ABC Corp\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"left\",\"\")).isEqualTo(\"\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"\",\"\")).isEqualTo(\"\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(\"tttt\",subject.logestCommonSubsequence(\"leettteft\",\"ritttght\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(\"My Gym Childrens Fitness\",subject.logestCommonSubsequence(\"My Gym Children's Fitness Center\",\"My Gym. Childrens Fitness\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"PENNSYLVNIA\",subject.longestCommonSubsequence(\"PENNSYLVANIA\",\"PENNCISYLVNIA\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"D H Enterprises Inc\",subject.longestCommonSubsequence(\"D N H Enterprises Inc\",\"D & H Enterprises, Inc.\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"the same string\",\"the same string\")).isEqualTo(\"the same string\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(\"\",subject.longestCommonSubsequence(\"\",\"\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"fog\",subject.longestCommonSubsequence(\"frog\",\"fog\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"PENNSYLVANIA\",\"PENNCISYLVNIA\")).isEqualTo(\"PENNSYLVNIA\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"D N H Enterprises Inc\",\"D & H Enterprises, Inc.\")).isEqualTo(\"D H Enterprises Inc\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testLongestCommonSubsequence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"tttt\",subject.longestCommonSubsequence(\"leettteft\",\"ritttght\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(\"the same string\",subject.logestCommonSubsequence(\"the same string\",\"the same string\"))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"\",\"right\")).isEqualTo(\"\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(\"the same string\",subject.longestCommonSubsequence(\"the same string\",\"the same string\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"\",subject.longestCommonSubsequence(\"left\",\"\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"\",subject.longestCommonSubsequence(\"\",\"right\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"frog\",\"fog\")).isEqualTo(\"fog\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(\"t\",subject.longestCommonSubsequence(\"left\",\"right\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertThat(subject.longestCommonSubsequence(\"My Gym Children's Fitness Center\",\"My Gym. Childrens Fitness\")).isEqualTo(\"My Gym Childrens Fitness\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(\"ABC Corp\",subject.logestCommonSubsequence(\"ABC Corporation\",\"ABC Corp\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testLogestCommonSubsequence['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->37 [style = dashed, label="0"];
33->35 [style = bold, label=""];
37->28 [style = bold, label=""];
0->13 [style = bold, label=""];
21->27 [style = bold, label=""];
7->10 [style = bold, label=""];
36->29 [style = bold, label=""];
10->19 [style = dashed, label="0"];
3->39 [style = dashed, label="0"];
18->26 [style = bold, label=""];
8->20 [style = dashed, label="0"];
1->3 [style = bold, label=""];
22->21 [style = bold, label=""];
16->25 [style = bold, label=""];
8->6 [style = bold, label=""];
0->26 [style = dashed, label="0"];
10->33 [style = dashed, label="0"];
19->17 [style = bold, label=""];
11->17 [style = dashed, label="0"];
13->40 [style = dashed, label="0"];
1->32 [style = dashed, label="0"];
40->38 [style = bold, label=""];
15->16 [style = bold, label=""];
5->36 [style = dashed, label="0"];
2->30 [style = dashed, label="0"];
11->2 [style = bold, label=""];
26->22 [style = bold, label=""];
24->14 [style = bold, label=""];
28->32 [style = bold, label=""];
5->16 [style = dashed, label="0"];
6->1 [style = bold, label=""];
6->28 [style = dashed, label="0"];
23->24 [style = bold, label=""];
2->0 [style = bold, label=""];
29->33 [style = bold, label=""];
41->36 [style = bold, label=""];
20->23 [style = bold, label=""];
34->37 [style = bold, label=""];
9->21 [style = dashed, label="0"];
30->31 [style = bold, label=""];
12->8 [style = bold, label=""];
1->24 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
0->31 [style = dashed, label="0"];
25->19 [style = bold, label=""];
38->34 [style = bold, label=""];
2->18 [style = dashed, label="0"];
7->25 [style = dashed, label="0"];
12->27 [style = dashed, label="0"];
31->40 [style = bold, label=""];
5->7 [style = bold, label=""];
32->39 [style = bold, label=""];
7->29 [style = dashed, label="0"];
13->9 [style = bold, label=""];
9->12 [style = bold, label=""];
3->14 [style = dashed, label="0"];
35->30 [style = bold, label=""];
13->22 [style = dashed, label="0"];
4->5 [style = bold, label=""];
27->20 [style = bold, label=""];
9->38 [style = dashed, label="0"];
12->34 [style = dashed, label="0"];
17->18 [style = bold, label=""];
11->35 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
