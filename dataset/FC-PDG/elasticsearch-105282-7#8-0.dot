digraph {
0 [style = filled, label = "assertEquals(3L,searchHits.getTotalHits().value)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "result = testCase(new MatchAllDocsQuery(),terms(\"term\").field(\"string\").subAggregation(topHits(\"top\").sort(\"string\",SortOrder.DESC)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result = testCase(query,topHits(\"_name\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits)result)))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(\"2\",searchHits.getAt(0).getId())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "searchHits = ((TopHits)terms.getBucketByKey(\"c\").getAggregations().get(\"top\")).getHits()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits)terms.getBucketByKey(\"b\").getAggregations().get(\"top\"))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testInsideTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"3\",searchHits.getAt(0).getId())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"type\",searchHits.getAt(2).getType())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "result = testCase(query,terms(\"term\").field(\"string\").subAggregation(topHits(\"top\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(1L,searchHits.getTotalHits().value)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Aggregation result@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TopHits hits = (TopHits)terms.getBucketByKey(\"a\").getAggregations().get(\"top\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits)terms.getBucketByKey(\"d\").getAggregations().get(\"top\"))))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(\"3\",searchHits.getAt(0).getId())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"1\",searchHits.getAt(2).getId())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "SearchHits searchHits = (hits).getHits()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(\"1\",searchHits.getAt(1).getId())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"2\",searchHits.getAt(1).getId())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(1L,searchHits.getTotalHits().value)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Terms terms = (Terms)result@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SearchHits searchHits = ((TopHits)result).getHits()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"1\",searchHits.getAt(1).getId())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Query query = new QueryParser(\"string\",new KeywordAnalyzer()).parse(\"d^1000 c^100 b^10 a^1\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testTopLevel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testTopLevel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2L,searchHits.getTotalHits().value)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits)terms.getBucketByKey(\"a\").getAggregations().get(\"top\"))))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"type\",searchHits.getAt(0).getType())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(2L,searchHits.getTotalHits().value)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "randomBoolean()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"2\",searchHits.getAt(0).getId())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "searchHits = ((TopHits)terms.getBucketByKey(\"b\").getAggregations().get(\"top\")).getHits()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(\"type\",searchHits.getAt(1).getType())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "result = testCase(new MatchAllDocsQuery(),topHits(\"_name\").sort(\"string\",SortOrder.DESC))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"3\",searchHits.getAt(0).getId())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "searchHits = ((TopHits)terms.getBucketByKey(\"d\").getAggregations().get(\"top\")).getHits()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(((InternalTopHits)terms.getBucketByKey(\"c\").getAggregations().get(\"top\"))))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->33 [style = bold, label=""];
3->29 [style = dashed, label="0"];
4->9 [style = bold, label=""];
14->26 [style = solid, label="query"];
27->38 [style = bold, label=""];
32->21 [style = bold, label=""];
9->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
13->3 [style = dotted, label="true"];
28->20 [style = bold, label=""];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
31->32 [style = bold, label=""];
17->31 [style = bold, label=""];
29->27 [style = solid, label="result"];
13->14 [style = dotted, label="false"];
11->4 [style = bold, label=""];
3->10 [style = solid, label="result"];
14->12 [style = solid, label="query"];
16->34 [style = bold, label=""];
38->36 [style = bold, label=""];
21->24 [style = bold, label=""];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
23->8 [style = bold, label=""];
9->7 [style = bold, label=""];
12->1 [style = bold, label=""];
25->16 [style = bold, label=""];
12->10 [style = solid, label="result"];
18->28 [style = bold, label=""];
22->30 [style = bold, label=""];
35->25 [style = bold, label=""];
12->26 [style = dashed, label="0"];
14->26 [style = bold, label=""];
29->27 [style = bold, label=""];
26->27 [style = bold, label=""];
13->29 [style = bold, label=""];
30->19 [style = bold, label=""];
13->3 [style = bold, label=""];
33->18 [style = bold, label=""];
6->25 [style = dashed, label="0"];
13->29 [style = dotted, label="true"];
13->12 [style = dotted, label="false"];
14->12 [style = bold, label=""];
5->4 [style = bold, label=""];
34->17 [style = bold, label=""];
20->37 [style = bold, label=""];
10->17 [style = dashed, label="0"];
11->37 [style = dashed, label="0"];
5->11 [style = bold, label=""];
37->35 [style = bold, label=""];
6->9 [style = bold, label=""];
13->26 [style = dotted, label="false"];
13->14 [style = bold, label=""];
15->8 [style = bold, label=""];
7->34 [style = dashed, label="0"];
26->27 [style = solid, label="result"];
8->13 [style = bold, label=""];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
36->22 [style = bold, label=""];
}
