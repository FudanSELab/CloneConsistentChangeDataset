digraph {
4 [style = filled, label = "t.maximum((String)null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertObject(t.maximum()).isType().is(123)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "t.minimum(\"123\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "t.minimum(123f)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "t.maximum(\"123\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "t.minimum(123)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "t.maximum(123f)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertOptional(t.maximum()).isType().is(123)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ParameterInfo t = new ParameterInfo()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertObject(t.maximum()).isNull()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertObject(t.minimum()).isNull()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertObject(t.maximum()).isType().is(123)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "a12_maximum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "t.maximum(123)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SchemaInfo t = new SchemaInfo()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertOptional(t.maximum()).isType().is(123f)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertOptional(t.maximum()).isType().is(123)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertOptional(t.maximum()).isNull()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "t.minimum((String)null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertObject(t.minimum()).isType().is(123)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertObject(t.maximum()).isType().is(123f)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertObject(t.minimum()).isType().is(123)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertObject(t.minimum()).isType().is(123f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "a12_maximum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "a08_minimum['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
8->16 [style = dashed, label="0"];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
7->20 [style = dashed, label="0"];
0->11 [style = bold, label=""];
6->0 [style = bold, label=""];
2->9 [style = bold, label=""];
7->4 [style = bold, label=""];
16->23 [style = bold, label=""];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
0->22 [style = dashed, label="0"];
6->10 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
8->1 [style = bold, label=""];
1->6 [style = bold, label=""];
18->22 [style = bold, label=""];
12->4 [style = bold, label=""];
9->17 [style = dashed, label="0"];
10->0 [style = bold, label=""];
24->17 [style = bold, label=""];
21->16 [style = bold, label=""];
7->12 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
4->19 [style = dashed, label="0"];
14->8 [style = bold, label=""];
9->12 [style = bold, label=""];
22->24 [style = bold, label=""];
2->24 [style = dashed, label="0"];
19->15 [style = bold, label=""];
20->19 [style = bold, label=""];
1->10 [style = bold, label=""];
1->23 [style = dashed, label="0"];
23->18 [style = bold, label=""];
17->20 [style = bold, label=""];
}
