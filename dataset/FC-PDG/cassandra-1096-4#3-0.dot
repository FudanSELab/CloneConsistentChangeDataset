digraph {
8 [style = filled, label = "int j = 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "defineSchemaAndPrepareSSTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "return Keyspace.open(KEYSPACE)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "defineSchemaAndPrepareSSTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "j++@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "new RowUpdateBuilder(store.metadata(),j,String.valueOf(j)).clustering(\"0\").add(\"val\",ByteBufferUtil.EMPTY_BYTE_BUFFER).build().applyUnsafe()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "setupSchemaAndKeySpace['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "j < 10@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SchemaLoader.createKeyspace(KEYSPACE,KeyspaceParams.simple(1),SchemaLoader.standardCFMD(KEYSPACE,CF_STANDARD),SchemaLoader.compositeIndexCFMD(KEYSPACE,CF_INDEXED,true),SchemaLoader.standardCFMD(KEYSPACE,CF_STANDARDLOWINDEXINTERVAL).minIndexInterval(8).maxIndexInterval(256).caching(CachingParams.CACHE_NOTHING))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "store.forceBlockingFlush()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "store = keyspace.getColumnFamilyStore(\"Standard1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "descriptor = sstable.descriptor@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "sstable = store.getLiveSSTables().iterator().next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SchemaLoader.prepareServer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CompactionManager.instance.performMaximal(store,false)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
12->0 [style = bold, label=""];
6->11 [style = dotted, label="true"];
8->6 [style = solid, label="j"];
1->10 [style = bold, label=""];
6->4 [style = bold, label=""];
6->7 [style = dotted, label="true"];
4->5 [style = bold, label=""];
0->3 [style = bold, label=""];
8->6 [style = bold, label=""];
0->5 [style = solid, label="store"];
11->6 [style = bold, label=""];
7->11 [style = bold, label=""];
10->12 [style = bold, label=""];
16->1 [style = bold, label=""];
12->15 [style = dashed, label="0"];
11->6 [style = solid, label="j"];
3->8 [style = bold, label=""];
13->1 [style = bold, label=""];
2->14 [style = bold, label=""];
10->15 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
8->11 [style = solid, label="j"];
}
