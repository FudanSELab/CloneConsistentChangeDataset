digraph {
17 [style = filled, label = "when(builder.apiCallAttemptTimeout(any())).thenReturn(builder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(builder.http2Configuration(any())).thenReturn(builder)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "when(builder.maxConcurrency(anyInt())).thenReturn(builder)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(builder.writeTimeout(any())).thenReturn(builder)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mockHttpClientBuilder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(builder.protocol(any())).thenReturn(builder)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "when(builder.connectionAcquisitionTimeout(any())).thenReturn(builder)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "when(builder.putAdvancedOption(any(),any())).thenReturn(builder)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return builder@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(builder.connectionMaxIdleTime(any())).thenReturn(builder)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(builder.connectionTimeout(any())).thenReturn(builder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "mockHttpClientBuilder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "mockClientOverrideConfigurationBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(builder.apiCallTimeout(any())).thenReturn(builder)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return builder@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "NettyNioAsyncHttpClient.Builder builder = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ClientOverrideConfiguration.Builder builder = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->17 [style = solid, label="builder"];
11->3 [style = bold, label=""];
14->17 [style = bold, label=""];
5->16 [style = dashed, label="0"];
4->14 [style = dashed, label="0"];
0->4 [style = bold, label=""];
4->7 [style = bold, label=""];
9->11 [style = bold, label=""];
8->0 [style = bold, label=""];
10->9 [style = bold, label=""];
5->1 [style = bold, label=""];
6->0 [style = bold, label=""];
0->5 [style = solid, label="builder"];
2->10 [style = bold, label=""];
0->13 [style = dashed, label="0"];
2->3 [style = bold, label=""];
13->14 [style = solid, label="builder"];
16->12 [style = bold, label=""];
7->17 [style = dashed, label="0"];
0->7 [style = solid, label="builder"];
13->16 [style = solid, label="builder"];
0->10 [style = solid, label="builder"];
0->3 [style = solid, label="builder"];
0->4 [style = solid, label="builder"];
13->12 [style = solid, label="builder"];
15->13 [style = bold, label=""];
0->1 [style = solid, label="builder"];
7->5 [style = bold, label=""];
0->2 [style = solid, label="builder"];
0->9 [style = solid, label="builder"];
13->14 [style = bold, label=""];
17->16 [style = bold, label=""];
1->2 [style = bold, label=""];
0->11 [style = solid, label="builder"];
}
