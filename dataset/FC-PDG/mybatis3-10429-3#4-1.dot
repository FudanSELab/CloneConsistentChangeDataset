digraph {
11 [style = filled, label = "shouldNotInheritAutoMappingInherited_ExternalNestedResultMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(Integer.valueOf(2),user.getId())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sqlSessionFactory.getConfiguration().setAutoMappingBehavior(AutoMappingBehavior.NONE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{sqlSession.close()}@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sqlSessionFactory.getConfiguration().setAutoMappingBehavior(AutoMappingBehavior.PARTIAL)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertNull(\"should not inherit auto-mapping\",user.getPets().get(0).getPetName())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldIgnorePartialAutoMappingBehavior_ExternalNestedResultMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "User user = mapper.getUserWithPets_External(2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldNotInheritAutoMappingInherited_ExternalNestedResultMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"John\",user.getPets().get(0).getBreeder().getBreederName())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"User2\",user.getName())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
5->8 [style = bold, label=""];
12->13 [style = bold, label=""];
8->6 [style = bold, label=""];
9->0 [style = bold, label=""];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
2->10 [style = bold, label=""];
0->4 [style = bold, label=""];
1->7 [style = bold, label=""];
2->13 [style = dashed, label="0"];
11->2 [style = bold, label=""];
2->5 [style = bold, label=""];
13->5 [style = bold, label=""];
}
