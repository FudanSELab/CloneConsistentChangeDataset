digraph {
2 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-skip-past-test\",\"tt\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "builder.finish()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "skipPastEnd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final RandomAccessReader reader = RandomAccessReader.open(treeFile)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals((int)reader.bytesRemaining(),builder.serializedSize())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "tokenTree.skipTo(simpleTokenMap.lastKey() + 10)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "treeFile.deleteOnExit()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-size-test\",\"tt\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final TokenTreeBuilder builder = new TokenTreeBuilder(simpleTokenMap).finish()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "skipPastEnd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tokenTree.skipTo(tokens.lastKey() + 10)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "SortedMap<Long,LongSet> tokens@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "writer.sync()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final TokenTreeBuilder builder = new TokenTreeBuilder(tokens).finish()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testSerializedSize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "builder.write(writer)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RangeIterator<Long,Token> tokenTree = new TokenTree(new MappedBuffer(reader)).iterator(KEY_CONVERTER)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->12 [style = dotted, label="true"];
5->14 [style = dashed, label="0"];
9->11 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
1->3 [style = bold, label=""];
11->2 [style = bold, label=""];
4->0 [style = bold, label=""];
6->10 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
0->10 [style = bold, label=""];
15->4 [style = solid, label="treeFile"];
17->14 [style = bold, label=""];
3->8 [style = bold, label=""];
9->13 [style = dotted, label="true"];
14->15 [style = bold, label=""];
8->4 [style = bold, label=""];
2->4 [style = solid, label="treeFile"];
4->16 [style = bold, label=""];
15->1 [style = bold, label=""];
}
