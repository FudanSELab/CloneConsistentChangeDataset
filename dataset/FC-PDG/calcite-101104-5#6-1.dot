digraph {
7 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "groupSets = new ArrayList<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testInduceGroupingType1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testInduceGroupingType0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "groupSets = new ArrayList<>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testInduceGroupingType1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "groupSets.add(groupSet)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "groupSets = new ArrayList<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
6->3 [style = bold, label=""];
5->10 [style = bold, label=""];
1->4 [style = bold, label=""];
13->0 [style = solid, label="groupSets"];
2->5 [style = bold, label=""];
7->1 [style = bold, label=""];
16->0 [style = solid, label="groupSet"];
16->11 [style = solid, label="groupSet"];
16->12 [style = solid, label="groupSet"];
3->1 [style = solid, label="groupSets"];
5->12 [style = solid, label="groupSets"];
6->12 [style = solid, label="groupSet"];
3->11 [style = bold, label=""];
6->2 [style = solid, label="groupSet"];
11->12 [style = bold, label=""];
3->12 [style = solid, label="groupSets"];
6->10 [style = solid, label="groupSet"];
15->16 [style = bold, label=""];
9->6 [style = bold, label=""];
12->13 [style = bold, label=""];
6->16 [style = dashed, label="0"];
8->2 [style = bold, label=""];
10->12 [style = bold, label=""];
4->8 [style = bold, label=""];
6->1 [style = solid, label="groupSet"];
6->11 [style = solid, label="groupSet"];
6->0 [style = solid, label="groupSet"];
4->2 [style = solid, label="groupSets"];
14->6 [style = bold, label=""];
11->7 [style = bold, label=""];
13->0 [style = bold, label=""];
}
