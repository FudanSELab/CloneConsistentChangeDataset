digraph {
3 [style = filled, label = "final TestObserver<Integer> to = new TestObserver<Integer>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "to.onSubscribe(Disposables.empty())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Runnable r2 = new Runnable(){@Override public void run(){HalfSerializer.onComplete(ts,wip,error)}}@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final AtomicInteger wip = new AtomicInteger()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(to.values().size() <= 1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "onNextOnCompleteRace['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(ts.values().size() <= 1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ts.assertComplete().assertNoErrors()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ts.onSubscribe(new BooleanSubscription())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestHelper.race(r1,r2)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Runnable r1 = new Runnable(){@Override public void run(){HalfSerializer.onNext(ts,1,wip,error)}}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "onNextOnCompleteRace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < TestHelper.RACE_DEFAULT_LOOPS@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "onNextOnCompleteRace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final AtomicThrowable error = new AtomicThrowable()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "to.assertComplete().assertNoErrors()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->7 [style = solid, label="i"];
17->16 [style = bold, label=""];
7->2 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
3->9 [style = solid, label="to"];
2->19 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
7->10 [style = dotted, label="true"];
16->8 [style = bold, label=""];
7->19 [style = dotted, label="true"];
3->14 [style = bold, label=""];
8->6 [style = solid, label="r1"];
4->1 [style = solid, label="i"];
0->15 [style = dashed, label="0"];
5->8 [style = solid, label="wip"];
6->19 [style = bold, label=""];
7->9 [style = dotted, label="true"];
17->8 [style = solid, label="ts"];
3->8 [style = solid, label="to"];
7->0 [style = dotted, label="true"];
1->7 [style = bold, label=""];
7->15 [style = dotted, label="true"];
5->9 [style = solid, label="wip"];
4->7 [style = bold, label=""];
9->6 [style = bold, label=""];
7->5 [style = dotted, label="true"];
6->2 [style = bold, label=""];
3->10 [style = bold, label=""];
7->5 [style = bold, label=""];
9->6 [style = solid, label="r2"];
2->0 [style = bold, label=""];
18->4 [style = bold, label=""];
10->8 [style = bold, label=""];
12->4 [style = bold, label=""];
7->11 [style = dotted, label="true"];
11->3 [style = bold, label=""];
15->1 [style = bold, label=""];
7->3 [style = dotted, label="true"];
0->1 [style = bold, label=""];
8->9 [style = bold, label=""];
7->16 [style = dotted, label="true"];
11->9 [style = solid, label="error"];
11->17 [style = bold, label=""];
5->11 [style = bold, label=""];
14->8 [style = bold, label=""];
11->8 [style = solid, label="error"];
10->16 [style = dashed, label="0"];
19->15 [style = bold, label=""];
7->1 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
7->17 [style = dotted, label="true"];
17->9 [style = solid, label="ts"];
10->14 [style = dashed, label="0"];
1->7 [style = solid, label="i"];
13->4 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
