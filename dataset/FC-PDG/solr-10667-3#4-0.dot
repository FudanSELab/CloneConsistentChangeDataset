digraph {
12 [style = filled, label = "assertTrue(expressionString.contains(\"search(collection1,\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCloudSolrStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expressionString = stream.toExpression(factory).toString()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testIntersectStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(expressionString.contains(\"q=\"id:(1 2)\"\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "System.out.println(\"ExpressionString: \" + expressionString.toString())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertTrue(expressionString.contains(\"on=\"a_f,a_s\"\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(expressionString.contains(\"sort=\"a_f asc, a_i asc\"\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(expressionString.contains(\"fq=\"a_s:two\"\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "String expressionString@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(expressionString.contains(\"fl=\"id,a_s,a_i,a_f\"\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(expressionString.contains(\"id=izzy\"))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloudSolrStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "stream = new CloudSolrStream(StreamExpressionParser.parse(\"search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\")\"),factory)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertTrue(expressionString.contains(\"fq=\"a_s:one\"\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "IntersectStream stream@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "stream = new CloudSolrStream(StreamExpressionParser.parse(\"search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\", fq=\"a_s:one\", fq=\"a_s:two\")\"),factory)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "stream = new CloudSolrStream(StreamExpressionParser.parse(\"search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\", aliases=\"id=izzy,a_s=kayden\")\"),factory)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(expressionString.contains(\"a_s=kayden\"))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(expressionString.contains(\"q=\"id:(0 3 4)\"\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "stream = new IntersectStream(StreamExpressionParser.parse(\"intersect(\" + \"search(collection1, q=\"id:(0 3 4)\", fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_s asc\"),\" + \"search(collection1, q=\"id:(1 2)\", fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_s asc\"),\" + \"on=\"a_f, a_s\")\"),factory)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(expressionString.contains(\"q=\"*:*\"\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expressionString = stream.toExpression(factory).toString()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CloudSolrStream stream@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
11->16 [style = bold, label=""];
4->3 [style = bold, label=""];
0->9 [style = bold, label=""];
22->19 [style = bold, label=""];
6->20 [style = dashed, label="0"];
5->23 [style = dashed, label="0"];
1->15 [style = bold, label=""];
17->9 [style = bold, label=""];
11->21 [style = bold, label=""];
14->10 [style = bold, label=""];
11->12 [style = bold, label=""];
7->4 [style = bold, label=""];
2->10 [style = bold, label=""];
12->6 [style = bold, label=""];
10->7 [style = bold, label=""];
12->21 [style = dashed, label="0"];
1->23 [style = bold, label=""];
2->13 [style = bold, label=""];
9->19 [style = dashed, label="0"];
20->18 [style = bold, label=""];
19->1 [style = bold, label=""];
21->20 [style = bold, label=""];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
6->8 [style = bold, label=""];
8->18 [style = dashed, label="0"];
5->11 [style = bold, label=""];
23->11 [style = bold, label=""];
9->1 [style = bold, label=""];
5->15 [style = dashed, label="0"];
16->12 [style = bold, label=""];
13->14 [style = bold, label=""];
}
