digraph {
6 [style = filled, label = "Assert.assertEquals(\"Record set should match\",Sets.newHashSet(expected),records)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Iterable<Record> results = IcebergGenerics.read(sharedTable).useSnapshot(sharedTable.history().get(1).snapshotId()).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expected.addAll(file3SecondSnapshotRecords)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Should produce correct number of records\",expected.size(),records.size())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertNotNull(Iterables.get(records,0).getField(\"id\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expected.addAll(file1SecondSnapshotRecords)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Set<Record> records = Sets.newHashSet(results)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "appendData()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expected.addAll(file2FirstSnapshotRecords)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testAppendsBetween['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expected.addAll(file2SecondSnapshotRecords)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expected.addAll(file1FirstSnapshotRecords)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "expected.addAll(file2SecondSnapshotRecords)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "expected.addAll(file1SecondSnapshotRecords)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertNotNull(Iterables.get(records,0).getField(\"data\"))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testUseSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testUseSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expected.addAll(file3FirstSnapshotRecords)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "overwriteExistingData()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Set<Record> expected = Sets.newHashSet()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expected.addAll(file3SecondSnapshotRecords)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Iterable<Record> results = IcebergGenerics.read(sharedTable).appendsBetween(sharedTable.history().get(1).snapshotId(),sharedTable.currentSnapshot().snapshotId()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
13->10 [style = bold, label=""];
16->10 [style = solid, label="results"];
9->2 [style = bold, label=""];
19->20 [style = bold, label=""];
2->3 [style = bold, label=""];
18->19 [style = bold, label=""];
8->6 [style = bold, label=""];
1->10 [style = solid, label="results"];
0->17 [style = dashed, label="0"];
3->4 [style = bold, label=""];
1->9 [style = bold, label=""];
20->10 [style = bold, label=""];
3->19 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
11->0 [style = bold, label=""];
9->18 [style = bold, label=""];
3->12 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
10->8 [style = bold, label=""];
4->20 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
0->1 [style = bold, label=""];
15->0 [style = bold, label=""];
14->12 [style = bold, label=""];
9->14 [style = bold, label=""];
2->18 [style = dashed, label="0"];
5->7 [style = bold, label=""];
9->6 [style = solid, label="expected"];
10->6 [style = solid, label="records"];
4->13 [style = dashed, label="0"];
21->17 [style = bold, label=""];
16->9 [style = bold, label=""];
17->16 [style = bold, label=""];
}
