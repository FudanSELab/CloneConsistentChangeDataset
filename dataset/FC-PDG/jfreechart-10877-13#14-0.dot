digraph {
8 [style = filled, label = "VectorSeriesCollection<String> c2 = TestUtils.serialised(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "TimeSeriesCollection<String> c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "VectorSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "c2.getSeries(0).setDescription(\"XYZ\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(c1.equals(c2))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "VectorSeries<String> s1 = new VectorSeries<>(\"Series\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "TimeSeries<String> s1 = new TimeSeries<>(\"Series\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "s1.add(new Year(2009),1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "VectorSeriesCollection<String> c1 = new VectorSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "TimeSeriesCollection<String> c1 = new TimeSeriesCollection<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
0->9 [style = bold, label=""];
15->13 [style = bold, label=""];
11->21 [style = solid, label="c2"];
1->8 [style = bold, label=""];
2->4 [style = solid, label="c2"];
21->19 [style = bold, label=""];
9->8 [style = solid, label="c1"];
0->6 [style = bold, label=""];
6->9 [style = dashed, label="0"];
11->12 [style = bold, label=""];
6->2 [style = solid, label="c1"];
16->17 [style = bold, label=""];
6->4 [style = solid, label="c1"];
14->11 [style = solid, label="c1"];
6->14 [style = dashed, label="0"];
2->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
0->17 [style = dashed, label="0"];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
14->1 [style = bold, label=""];
1->11 [style = bold, label=""];
4->12 [style = dashed, label="0"];
14->12 [style = solid, label="c1"];
6->1 [style = bold, label=""];
10->16 [style = bold, label=""];
17->14 [style = bold, label=""];
12->18 [style = bold, label=""];
11->20 [style = solid, label="c2"];
11->15 [style = solid, label="c2"];
16->1 [style = solid, label="s1"];
2->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
8->4 [style = solid, label="c2"];
8->4 [style = bold, label=""];
18->21 [style = bold, label=""];
19->15 [style = bold, label=""];
9->1 [style = bold, label=""];
3->1 [style = solid, label="s1"];
9->4 [style = solid, label="c1"];
11->12 [style = solid, label="c2"];
3->16 [style = dashed, label="0"];
13->20 [style = bold, label=""];
}
