digraph {
0 [style = filled, label = "iter = Parquet.read(location).project(expectedSchema).split(task.start(),task.length()).createBatchedReaderFunc(null).recordsPerBatch(batchSize).filter(task.residual()).caseSensitive(caseSensitive).reuseContainers().build()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "InputFile location = getInputFile(task)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CloseableIterable<ColumnarBatch> iter@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<Integer,?> idToConstant@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "FileScanTask task@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return iter.iterator()@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "open['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "task.file().format() == FileFormat.PARQUET@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "open['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Parquet.ReadBuilder builder = Parquet.read(location).project(expectedSchema).split(task.start(),task.length()).createBatchedReaderFunc(null).recordsPerBatch(batchSize).filter(task.residual()).caseSensitive(caseSensitive).reuseContainers()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "return ORC.read(location).project(readSchemaWithoutConstantAndMetadataFields).split(task.start(),task.length()).createReaderFunc(null).filter(task.residual()).caseSensitive(caseSensitive).build()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Schema readSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Preconditions.checkNotNull(location,\"Could not find InputFile associated with FileScanTask\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new UnsupportedOperationException(\"Format: \" + task.file().format() + \" not supported for batched reads\")@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new UnsupportedOperationException(\"Format: \" + task.file().format() + \" not supported for batched reads\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "InputFile location@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "builder.withNameMapping(NameMappingParser.fromJson(nameMapping))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "iter = builder.build()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "nameMapping != null@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Schema readSchemaWithoutConstantAndMetadataFields = TypeUtil.selectNot(readSchema,Sets.union(idToConstant.keySet(),MetadataColumns.metadataFieldIds()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "newOrcIterable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "FileScanTask task@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
8->7 [style = dotted, label="false"];
8->10 [style = bold, label=""];
2->20 [style = dashed, label="0"];
8->6 [style = dotted, label="false"];
3->4 [style = solid, label="location"];
11->14 [style = bold, label=""];
7->12 [style = bold, label=""];
15->21 [style = bold, label=""];
15->18 [style = dotted, label="true"];
18->21 [style = solid, label="readSchema"];
15->20 [style = dotted, label="true"];
2->3 [style = solid, label="task"];
8->6 [style = bold, label=""];
11->9 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
11->9 [style = bold, label=""];
3->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
8->7 [style = bold, label=""];
0->7 [style = bold, label=""];
15->17 [style = dotted, label="true"];
8->0 [style = bold, label=""];
13->2 [style = dotted, label="true"];
15->19 [style = dotted, label="true"];
14->12 [style = bold, label=""];
8->14 [style = dotted, label="true"];
9->14 [style = bold, label=""];
13->5 [style = bold, label=""];
21->16 [style = bold, label=""];
8->11 [style = dotted, label="true"];
4->8 [style = bold, label=""];
8->0 [style = dotted, label="true"];
6->7 [style = bold, label=""];
1->2 [style = dotted, label="true"];
10->11 [style = bold, label=""];
}
