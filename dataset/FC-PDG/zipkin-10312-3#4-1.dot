digraph {
3 [style = filled, label = "length > 32@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < bytes.size()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new AssertionError(\"hex field greater than 32 chars long: \" + length)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "readHexString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "byte b = input.readRawByte()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result(i( = HEX_DIGITS((b >> 4) & 0xf(@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CodedInputStream input@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int length = bytes.size() * 2@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "result(i + 1( = HEX_DIGITS(b & 0xf(@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ByteString bytes = input.readBytes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int size = input.readRawVarint32()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "result(2 * i( = HEX_DIGITS((b >> 4) & 0xf(@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i < length@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ProtoReader input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "char(( result = RecyclableBuffers.shortStringBuffer()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "char(( result = Platform.shortStringBuffer()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "readHexString['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "readHexString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i += 2@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return new String(result,0,length)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int length = size * 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result(2 * i + 1( = HEX_DIGITS(b & 0xf(@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "byte b = bytes.getByte(i)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->6 [style = dotted, label="true"];
4->5 [style = dotted, label="true"];
23->20 [style = bold, label=""];
20->17 [style = bold, label=""];
20->24 [style = solid, label="b"];
19->13 [style = solid, label="length"];
10->4 [style = solid, label="length"];
11->4 [style = solid, label="i"];
3->1 [style = bold, label=""];
5->9 [style = bold, label=""];
21->19 [style = bold, label=""];
18->23 [style = bold, label=""];
1->14 [style = dashed, label="0"];
7->16 [style = dashed, label="0"];
10->19 [style = dashed, label="0"];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
3->14 [style = bold, label=""];
18->23 [style = solid, label="i"];
10->13 [style = solid, label="length"];
22->21 [style = bold, label=""];
24->18 [style = solid, label="i"];
8->14 [style = bold, label=""];
10->3 [style = bold, label=""];
18->20 [style = solid, label="i"];
11->20 [style = solid, label="i"];
19->8 [style = solid, label="length"];
15->7 [style = dotted, label="true"];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
11->23 [style = solid, label="i"];
24->18 [style = bold, label=""];
0->10 [style = solid, label="size"];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
4->2 [style = dotted, label="true"];
6->2 [style = bold, label=""];
5->20 [style = dashed, label="0"];
8->1 [style = bold, label=""];
23->20 [style = dotted, label="true"];
0->10 [style = bold, label=""];
17->24 [style = bold, label=""];
24->13 [style = solid, label="result"];
23->18 [style = dotted, label="true"];
19->3 [style = solid, label="length"];
1->13 [style = solid, label="result"];
23->13 [style = bold, label=""];
0->21 [style = dashed, label="0"];
6->24 [style = dashed, label="0"];
3->8 [style = bold, label=""];
15->0 [style = bold, label=""];
22->16 [style = dotted, label="true"];
9->17 [style = dashed, label="0"];
2->4 [style = solid, label="i"];
6->13 [style = solid, label="result"];
2->18 [style = dashed, label="0"];
10->3 [style = solid, label="length"];
14->13 [style = solid, label="result"];
4->9 [style = dotted, label="true"];
5->6 [style = solid, label="b"];
12->7 [style = dotted, label="true"];
10->8 [style = solid, label="length"];
3->8 [style = dotted, label="true"];
23->17 [style = dotted, label="true"];
5->9 [style = solid, label="b"];
4->5 [style = bold, label=""];
14->11 [style = bold, label=""];
19->3 [style = bold, label=""];
11->23 [style = bold, label=""];
20->17 [style = solid, label="b"];
23->24 [style = dotted, label="true"];
4->23 [style = dashed, label="0"];
}
