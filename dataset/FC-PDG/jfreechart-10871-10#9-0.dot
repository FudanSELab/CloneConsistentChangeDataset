digraph {
16 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "XYSeriesCollection c2 = new XYSeriesCollection()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertTrue(d1.equals(d2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(d1.equals(d2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "d2.setAutoWidth(false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "XYSeries<String> s2 = new XYSeries<>(\"Series\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "MatrixSeriesCollection<String> c2 = TestUtils.serialised(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(d2.equals(d1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(d1.equals(d2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "d1.setIntervalPositionFactor(0.123)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(d1.equals(d2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c2.addSeries(s2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "s1.add(1.2,3.4)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "d2.setFixedIntervalWidth(1.23)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "s2.add(1.2,3.4)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "d1.setAutoWidth(false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "s1.update(0,0,1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(d1.equals(d2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(d1.equals(d2))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "d2.setIntervalPositionFactor(0.123)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MatrixSeriesCollection<String> c1 = new MatrixSeriesCollection<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "IntervalXYDelegate d1 = new IntervalXYDelegate(c1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "MatrixSeries<String> s1 = new MatrixSeries<>(\"Series\",2,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "IntervalXYDelegate d2 = new IntervalXYDelegate(c2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "XYSeries s2 = new XYSeries(\"Series\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "XYSeriesCollection<String> c2 = new XYSeriesCollection<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "d1.setFixedIntervalWidth(1.23)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertTrue(d1.equals(d2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
17->4 [style = solid, label="d2"];
7->17 [style = bold, label=""];
23->35 [style = dashed, label="0"];
11->13 [style = solid, label="c1"];
35->12 [style = solid, label="s1"];
14->25 [style = dashed, label="0"];
11->33 [style = dashed, label="0"];
19->29 [style = bold, label=""];
17->20 [style = solid, label="d2"];
25->18 [style = bold, label=""];
22->21 [style = bold, label=""];
17->1 [style = solid, label="d2"];
11->29 [style = dashed, label="0"];
35->32 [style = bold, label=""];
3->6 [style = bold, label=""];
28->26 [style = bold, label=""];
19->11 [style = bold, label=""];
11->12 [style = bold, label=""];
12->30 [style = bold, label=""];
20->3 [style = bold, label=""];
0->27 [style = dashed, label="0"];
16->23 [style = bold, label=""];
33->12 [style = bold, label=""];
23->26 [style = dashed, label="0"];
26->19 [style = bold, label=""];
13->3 [style = solid, label="d1"];
29->13 [style = solid, label="c1"];
32->33 [style = bold, label=""];
1->9 [style = bold, label=""];
33->31 [style = solid, label="c1"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
25->17 [style = solid, label="c2"];
0->14 [style = bold, label=""];
29->12 [style = bold, label=""];
13->27 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
17->15 [style = solid, label="d2"];
30->31 [style = bold, label=""];
14->17 [style = solid, label="c2"];
23->19 [style = bold, label=""];
27->7 [style = solid, label="s2"];
21->1 [style = bold, label=""];
2->15 [style = bold, label=""];
17->22 [style = solid, label="d2"];
14->18 [style = bold, label=""];
30->31 [style = solid, label="c2"];
34->35 [style = bold, label=""];
17->8 [style = solid, label="d2"];
23->12 [style = solid, label="s1"];
19->32 [style = dashed, label="0"];
18->7 [style = bold, label=""];
0->7 [style = solid, label="s2"];
5->22 [style = bold, label=""];
33->30 [style = solid, label="c1"];
4->5 [style = bold, label=""];
27->25 [style = bold, label=""];
9->24 [style = bold, label=""];
26->12 [style = solid, label="s1"];
17->24 [style = solid, label="d2"];
13->0 [style = bold, label=""];
17->20 [style = bold, label=""];
}
