digraph {
9 [style = filled, label = "BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.RED)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.RED)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.RED)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "LineBorder b1 = new LineBorder(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.0f),new RectangleInsets(1.0,1.0,1.0,1.0))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(b1.equals(b2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(b1,b2)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.BLUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.BLUE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LineBorder b2 = (LineBorder)TestUtils.serialised(b1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "LineBorder b2 = TestUtils.serialised(b1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.RED)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(b1.equals(b2))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertFalse(b1.equals(b2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(b2.equals(b2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertFalse(b1.equals(b2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(b1.equals(b2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->16 [style = solid, label="b2"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
17->10 [style = bold, label=""];
3->5 [style = dashed, label="0"];
0->1 [style = solid, label="b1"];
15->7 [style = bold, label=""];
3->1 [style = bold, label=""];
15->18 [style = solid, label="b2"];
8->18 [style = bold, label=""];
0->3 [style = solid, label="b1"];
18->11 [style = bold, label=""];
7->8 [style = bold, label=""];
3->1 [style = solid, label="b2"];
4->0 [style = bold, label=""];
1->13 [style = dashed, label="0"];
5->1 [style = bold, label=""];
9->6 [style = solid, label="b2"];
2->0 [style = bold, label=""];
15->7 [style = solid, label="b2"];
3->9 [style = dashed, label="0"];
0->5 [style = solid, label="b1"];
12->14 [style = bold, label=""];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
13->6 [style = bold, label=""];
9->13 [style = solid, label="b2"];
5->1 [style = solid, label="b2"];
9->14 [style = solid, label="b2"];
0->5 [style = bold, label=""];
9->13 [style = bold, label=""];
6->12 [style = bold, label=""];
}
