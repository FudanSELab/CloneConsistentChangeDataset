digraph {
5 [style = filled, label = "Subscriber<Integer> subscriber2 = TestHelper.mockSubscriber()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "m.subscribe(new Consumer<GroupedFlowable<Integer,Integer>>(){@Override public void accept(GroupedFlowable<Integer,Integer> t1){inner.set(t1)}})@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Flowable<Integer> source = Flowable.just(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verify(subscriber2).onError(any())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Observer<Integer> o2 = TestHelper.mockObserver()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Observable<GroupedObservable<Integer,Integer>> m = source.groupBy(identity,dbl)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "m.subscribe(new Consumer<GroupedObservable<Integer,Integer>>(){@Override public void accept(GroupedObservable<Integer,Integer> t1){inner.set(t1)}})@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Observable<Integer> source = Observable.just(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Flowable<GroupedFlowable<Integer,Integer>> m = source.groupBy(identity,dbl)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(subscriber2,never()).onNext(anyInt())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final AtomicReference<GroupedObservable<Integer,Integer>> inner = new AtomicReference<GroupedObservable<Integer,Integer>>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "inner.get().subscribe()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verify(o2,never()).onComplete()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "exceptionIfSubscribeToChildMoreThanOnce['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(o2).onError(any())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "exceptionIfSubscribeToChildMoreThanOnce['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "inner.get().subscribe(o2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "exceptionIfSubscribeToChildMoreThanOnce['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final AtomicReference<GroupedFlowable<Integer,Integer>> inner = new AtomicReference<GroupedFlowable<Integer,Integer>>()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "verify(subscriber2,never()).onComplete()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final AtomicReference<GroupedFlowable<Integer,Integer>> inner = new AtomicReference<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "verify(o2,never()).onNext(anyInt())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "inner.get().subscribe(subscriber2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
2->19 [style = dashed, label="0"];
20->13 [style = bold, label=""];
5->0 [style = solid, label="subscriber2"];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
1->21 [style = dashed, label="0"];
4->2 [style = bold, label=""];
15->19 [style = bold, label=""];
0->20 [style = dashed, label="0"];
17->20 [style = solid, label="o2"];
2->12 [style = dashed, label="0"];
6->5 [style = bold, label=""];
18->22 [style = bold, label=""];
5->17 [style = dashed, label="0"];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
4->15 [style = dashed, label="0"];
7->6 [style = bold, label=""];
9->13 [style = dashed, label="0"];
21->16 [style = bold, label=""];
4->12 [style = bold, label=""];
14->15 [style = bold, label=""];
12->3 [style = bold, label=""];
10->16 [style = dashed, label="0"];
8->4 [style = bold, label=""];
9->1 [style = bold, label=""];
13->21 [style = bold, label=""];
1->10 [style = bold, label=""];
7->22 [style = dashed, label="0"];
22->6 [style = bold, label=""];
17->20 [style = bold, label=""];
}
