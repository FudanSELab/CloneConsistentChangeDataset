digraph {
21 [style = filled, label = "subscriptions.seek(tp0,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "consumerClient.poll(time.timer(0))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "buildFetcher()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "v++@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "record.offset() >= 1@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.seek(tp1,0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<TopicPartition,FetchResponseData.PartitionData> partitions = new HashMap<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KafkaMetric recordsCountAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.recordsPerRequestAvg))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "v++@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "client.prepareResponse(FetchResponse.of(Errors.NONE,0,INVALID_SESSION_ID,new LinkedHashMap<>(partitions)))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assignFromUser(Utils.mkSet(tp0,tp1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int expectedBytes = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "KafkaMetric fetchSizeAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchSizeAvg))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testFetchResponseMetricsWithOnePartitionError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "testFetchResponseMetricsPartialResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "MemoryRecords records = builder.build()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "v < 3@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int v = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "partitions.put(tp0,new FetchResponseData.PartitionData().setPartitionIndex(tp0.partition()).setHighWatermark(100).setLogStartOffset(0).setRecords(records))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int expectedBytes = 0@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "partitions.put(tp1,new FetchResponseData.PartitionData().setPartitionIndex(tp1.partition()).setErrorCode(Errors.OFFSET_OUT_OF_RANGE.code()).setHighWatermark(100).setLogStartOffset(0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client.prepareResponse(FetchResponse.of(Errors.NONE,0,INVALID_SESSION_ID,new LinkedHashMap<>(partitions),topicIds))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(2,(Double)recordsCountAverage.metricValue(),EPSILON)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(expectedBytes,(Double)fetchSizeAverage.metricValue(),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fetcher.fetchedRecords()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "subscriptions.seek(tp0,1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "fetchRecords(tp0,records,Errors.NONE,100L,0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "v++@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(expectedBytes,(Double)fetchSizeAverage.metricValue(),EPSILON)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testFetchResponseMetricsWithOnePartitionError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(3,(Double)recordsCountAverage.metricValue(),EPSILON)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18->3 [style = bold, label=""];
4->14 [style = bold, label=""];
8->18 [style = solid, label="v"];
2->19 [style = bold, label=""];
14->25 [style = bold, label=""];
28->5 [style = bold, label=""];
16->23 [style = solid, label="v"];
22->25 [style = dashed, label="0"];
8->23 [style = bold, label=""];
3->37 [style = bold, label=""];
5->23 [style = bold, label=""];
23->8 [style = dotted, label="true"];
1->35 [style = dashed, label="0"];
7->12 [style = bold, label=""];
36->29 [style = bold, label=""];
37->30 [style = bold, label=""];
5->23 [style = solid, label="v"];
29->9 [style = bold, label=""];
18->26 [style = bold, label=""];
5->23 [style = dotted, label="true"];
14->22 [style = bold, label=""];
19->6 [style = solid, label="expectedBytes"];
8->23 [style = solid, label="v"];
9->17 [style = bold, label=""];
34->31 [style = bold, label=""];
23->3 [style = bold, label=""];
6->0 [style = bold, label=""];
5->18 [style = bold, label=""];
30->34 [style = bold, label=""];
3->31 [style = solid, label="expectedBytes"];
30->37 [style = bold, label=""];
19->6 [style = bold, label=""];
21->36 [style = dashed, label="0"];
11->2 [style = bold, label=""];
27->15 [style = bold, label=""];
15->35 [style = bold, label=""];
16->28 [style = solid, label="v"];
37->30 [style = dotted, label="true"];
26->18 [style = solid, label="v"];
23->28 [style = bold, label=""];
24->16 [style = bold, label=""];
17->24 [style = bold, label=""];
26->23 [style = solid, label="v"];
7->25 [style = solid, label="partitions"];
23->26 [style = dotted, label="true"];
23->18 [style = dotted, label="true"];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
30->31 [style = solid, label="expectedBytes"];
15->1 [style = bold, label=""];
1->21 [style = bold, label=""];
3->12 [style = solid, label="records"];
37->34 [style = bold, label=""];
31->33 [style = bold, label=""];
26->23 [style = bold, label=""];
5->18 [style = solid, label="v"];
7->22 [style = solid, label="partitions"];
0->33 [style = dashed, label="0"];
22->10 [style = bold, label=""];
32->15 [style = bold, label=""];
16->5 [style = bold, label=""];
28->5 [style = solid, label="v"];
28->23 [style = solid, label="v"];
18->34 [style = solid, label="records"];
25->10 [style = bold, label=""];
18->8 [style = bold, label=""];
13->9 [style = bold, label=""];
35->36 [style = bold, label=""];
5->26 [style = solid, label="v"];
20->15 [style = bold, label=""];
5->28 [style = dotted, label="true"];
23->18 [style = bold, label=""];
5->8 [style = solid, label="v"];
16->5 [style = solid, label="v"];
21->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
