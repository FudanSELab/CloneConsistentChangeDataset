digraph {
14 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "eq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return ROWS_CANNOT_MATCH@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "gtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cmp < 0@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return ROWS_CANNOT_MATCH@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Literal<T> lit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "gtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "cmp > 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return ROWS_MIGHT_MATCH@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22->19 [style = dotted, label="true"];
1->9 [style = bold, label=""];
2->4 [style = bold, label=""];
9->6 [style = solid, label="upper"];
1->9 [style = dotted, label="true"];
15->18 [style = bold, label=""];
11->0 [style = solid, label="field"];
2->8 [style = dotted, label="true"];
22->16 [style = dotted, label="true"];
20->18 [style = dotted, label="true"];
11->0 [style = bold, label=""];
4->11 [style = solid, label="id"];
4->0 [style = solid, label="id"];
4->9 [style = solid, label="id"];
4->11 [style = bold, label=""];
12->4 [style = bold, label=""];
2->5 [style = dotted, label="true"];
12->13 [style = dotted, label="true"];
20->17 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
1->6 [style = dotted, label="true"];
14->6 [style = solid, label="upper"];
1->14 [style = bold, label=""];
0->1 [style = bold, label=""];
20->1 [style = bold, label=""];
10->3 [style = bold, label=""];
4->1 [style = bold, label=""];
9->6 [style = bold, label=""];
6->10 [style = bold, label=""];
7->3 [style = bold, label=""];
20->15 [style = dotted, label="true"];
12->8 [style = dotted, label="true"];
6->10 [style = solid, label="cmp"];
0->20 [style = bold, label=""];
10->7 [style = bold, label=""];
8->19 [style = dashed, label="0"];
1->3 [style = bold, label=""];
9->14 [style = dashed, label="0"];
18->21 [style = dotted, label="true"];
17->15 [style = bold, label=""];
17->15 [style = solid, label="lower"];
4->1 [style = solid, label="id"];
22->4 [style = bold, label=""];
14->6 [style = bold, label=""];
18->21 [style = bold, label=""];
4->17 [style = solid, label="id"];
20->17 [style = bold, label=""];
18->1 [style = bold, label=""];
1->14 [style = dotted, label="true"];
4->14 [style = solid, label="id"];
21->1 [style = bold, label=""];
4->20 [style = solid, label="id"];
1->10 [style = dotted, label="true"];
15->18 [style = solid, label="cmp"];
}
