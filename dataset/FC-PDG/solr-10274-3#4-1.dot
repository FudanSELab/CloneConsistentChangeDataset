digraph {
6 [style = filled, label = "Collection<Slice> slices = CloudSolrStream.getSlices(this.collection,zkStateReader,false)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "List<String> baseUrls = new ArrayList<>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "getShardUrls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "replica.getState() == Replica.State.ACTIVE && liveNodes.contains(replica.getNodeName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "pickShards['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "shuffler.add(replica)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String url = zkProps.getCoreUrl()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String collection@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Slice(( slices = CloudSolrStream.getSlices(this.collection,zkStateReader,false)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Replica rep = shuffler.get(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Collection<Replica> replicas = slice.getReplicas()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ClusterState clusterState = zkStateReader.getClusterState()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replicaUrls.add(url)@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shuffler.add(replica)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Collections.shuffle(shuffler,new Random())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Collection<Slice> slices = clusterState.getCollection(collection).getActiveSlices()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "replica.getState() == Replica.State.ACTIVE && liveNodes.contains(replica.getNodeName())@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<Replica> shuffler = new ArrayList<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getShardUrls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return baseUrls@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Set<String> liveNodes = clusterState.getLiveNodes()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ZkCoreNodeProps zkProps = new ZkCoreNodeProps(rep)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "baseUrls.add(url)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
15->10 [style = bold, label=""];
4->6 [style = solid, label="zkStateReader"];
16->13 [style = bold, label=""];
14->9 [style = solid, label="baseUrls"];
22->15 [style = bold, label=""];
7->23 [style = dashed, label="0"];
18->23 [style = bold, label=""];
8->12 [style = solid, label="rep"];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
19->20 [style = dotted, label="true"];
0->2 [style = bold, label=""];
4->13 [style = bold, label=""];
17->4 [style = bold, label=""];
21->8 [style = bold, label=""];
10->8 [style = solid, label="shuffler"];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
13->11 [style = bold, label=""];
10->7 [style = bold, label=""];
3->4 [style = bold, label=""];
0->15 [style = bold, label=""];
7->5 [style = dotted, label="true"];
1->0 [style = solid, label="url"];
7->5 [style = bold, label=""];
12->1 [style = solid, label="rep"];
6->16 [style = dashed, label="0"];
23->18 [style = dotted, label="true"];
2->0 [style = dashed, label="0"];
23->21 [style = bold, label=""];
10->23 [style = bold, label=""];
6->13 [style = bold, label=""];
10->21 [style = solid, label="shuffler"];
0->2 [style = solid, label="url"];
2->15 [style = bold, label=""];
11->22 [style = bold, label=""];
5->7 [style = bold, label=""];
14->15 [style = bold, label=""];
4->16 [style = solid, label="zkStateReader"];
19->4 [style = bold, label=""];
18->21 [style = bold, label=""];
23->18 [style = bold, label=""];
8->12 [style = bold, label=""];
4->16 [style = bold, label=""];
}
