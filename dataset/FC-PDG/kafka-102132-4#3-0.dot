digraph {
12 [style = filled, label = "createClientWithPreviousActiveTasks(p2,1,task02)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "createClientWithPreviousActiveTasks(p1,1,task00)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final TaskId task04 = new TaskId(0,4)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "createClientWithPreviousActiveTasks(p2,1,task02,task03)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TaskId task05 = new TaskId(0,5)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "createClientWithPreviousActiveTasks(p2,1,task01)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldNotMoveAnyTasksWhenNewTasksAdded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(clients.get(p2).activeTasks(),hasItems(task02,task03))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final StickyTaskAssignor secondAssignor = createTaskAssignor(task00,task01,task02)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createClientWithPreviousActiveTasks(p1,1,task00,task01)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "createClientWithPreviousActiveTasks(p1,1,task01)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(clients.get(p2).activeTasks(),hasItems(task02))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final StickyTaskAssignor firstAssignor = createTaskAssignor(task00,task01,task02)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(clients.get(p1).activeTasks(),hasItems(task01))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "taskAssignor.assign(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldNotMoveAnyTasksWhenNewTasksAdded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(clients.get(p2).activeTasks(),hasItems(task01))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(allActiveTasks(),equalTo(Arrays.asList(task00,task01,task02)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(clients.get(p1).activeTasks(),hasItems(task00))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(allActiveTasks(),equalTo(Arrays.asList(task00,task01,task02)))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "secondAssignor.assign(0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final StickyTaskAssignor<Integer> taskAssignor = createTaskAssignor(task03,task01,task04,task02,task00,task05)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "firstAssignor.assign(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldNotMigrateActiveTaskToOtherProcess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(clients.get(p1).activeTasks(),hasItems(task00,task01))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clients.clear()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->22 [style = bold, label=""];
13->10 [style = bold, label=""];
15->23 [style = bold, label=""];
7->1 [style = bold, label=""];
20->13 [style = bold, label=""];
16->11 [style = bold, label=""];
1->19 [style = dashed, label="0"];
12->15 [style = bold, label=""];
6->5 [style = solid, label="task04"];
3->6 [style = bold, label=""];
14->19 [style = bold, label=""];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
19->24 [style = bold, label=""];
25->20 [style = bold, label=""];
23->21 [style = bold, label=""];
2->13 [style = dashed, label="0"];
24->25 [style = bold, label=""];
22->12 [style = bold, label=""];
5->4 [style = bold, label=""];
21->16 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
18->14 [style = bold, label=""];
17->18 [style = bold, label=""];
7->5 [style = solid, label="task05"];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
}
