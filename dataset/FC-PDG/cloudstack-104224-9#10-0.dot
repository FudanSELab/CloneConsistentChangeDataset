digraph {
83 [style = filled, label = "!KubernetesClusterUtil.isKubernetesClusterServerRunning(kubernetesCluster,publicIpAddress,CLUSTER_API_PORT,startTimeoutTime,15000)@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "MalformedURLException|UnknownHostException ex@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "LOGGER.info(String.format(\"Kubernetes cluster : %s VMs successfully provisioned\",kubernetesCluster.getName()))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CloudRuntimeException|ManagementServerException|ResourceUnavailableException|InsufficientCapacityException e@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clusterVMs.addAll(nodeVMs)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Strings.isNullOrEmpty(publicIpAddress)@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "InetAddress address = InetAddress.getByName(new URL(kubernetesCluster.getEndpoint()).getHost())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to setup Kubernetes cluster : %s as it does not have desired number of nodes in ready state\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "LOGGER.isInfoEnabled()@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "stateTransitTo(kubernetesCluster.getId(),KubernetesCluster.Event.StartRequested)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to setup Kubernetes cluster : %s in usable state as unable to get Dashboard service running for the cluster\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.OperationFailed)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!readyNodesCountValid@@@83@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<UserVm> additionalControlVMs = provisionKubernetesClusterAdditionalControlVms(publicIpAddress)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "stateTransitTo(kubernetesCluster.getId(),KubernetesCluster.Event.OperationSucceeded)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to start Kubernetes cluster : %s in usable state as unable to get Dashboard service running for the cluster\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.OperationFailed)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "sshPort = publicIpSshPort.second()@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Network network = null@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "LOGGER.info(String.format(\"Kubernetes cluster : %s successfully started\",kubernetesCluster.getName()))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "network = startKubernetesClusterNetwork(dest)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "startKubernetesClusterVMs()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "ManagementServerException e@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "startKubernetesClusterOnCreate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to start Kubernetes cluster : %s in usable state\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.OperationFailed)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "startStoppedKubernetesCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "!k8sApiServerSetup@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "!KubernetesClusterUtil.isKubernetesClusterControlVmRunning(kubernetesCluster,publicIpAddress,publicIpSshPort.second(),startTimeoutTime)@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "startKubernetesClusterOnCreate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "!isKubernetesClusterKubeConfigAvailable(startTimeoutTime)@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Provisioning the cluster failed due to insufficient capacity in the Kubernetes cluster: %s\",kubernetesCluster.getUuid()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed,e)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to setup Kubernetes cluster : %s in usable state as unable to retrieve kube-config for the cluster\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.OperationFailed)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "!isKubernetesClusterDashboardServiceRunning(false,startTimeoutTime)@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "DeployDestination dest = null@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "boolean readyNodesCountValid = KubernetesClusterUtil.validateKubernetesClusterReadyNodesCount(kubernetesCluster,publicIpAddress,sshPort,CLUSTER_NODE_VM_USER,sshKeyFile,startTimeoutTime,15000)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "dest = plan()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Strings.isNullOrEmpty(publicIpAddress)@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Provisioning additional control VM failed in the Kubernetes cluster : %s\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed,e)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "CloudRuntimeException|ManagementServerException|ResourceUnavailableException|InsufficientCapacityException e@@@55@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "logTransitStateDetachIsoAndThrow(Level.ERROR,msg,kubernetesCluster,clusterVMs,KubernetesCluster.Event.CreateFailed,null)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "publicIpSshPort = getKubernetesClusterServerIpSshPort(k8sControlVM)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to start Kubernetes cluster : %s as its network cannot be started\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed,e)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "LOGGER.isInfoEnabled()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to start Kubernetes cluster : %s as no public IP found for the cluster\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.OperationFailed)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "kubernetesCluster.getControlNodeCount() > 1 && Network.GuestType.Shared.equals(network.getGuestType())@@@70@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Provisioning the control VM failed in the Kubernetes cluster : %s\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed,e)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "publicIpAddress = sshIpPort.first()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "stateTransitTo(kubernetesCluster.getId(),KubernetesCluster.Event.OperationSucceeded)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "logTransitStateDetachIsoAndThrow(Level.ERROR,String.format(\"Failed to setup Kubernetes cluster : %s in usable state as unable to provision API endpoint for the cluster\",kubernetesCluster.getName()),kubernetesCluster,clusterVMs,KubernetesCluster.Event.CreateFailed,null)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "attachIsoKubernetesVMs(clusterVMs)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "setupKubernetesClusterNetworkRules(network,clusterVMs)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "logTransitStateAndThrow(Level.WARN,String.format(\"Failed to start Kubernetes cluster : %s as no public IP found for the cluster\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final long startTimeoutTime = System.currentTimeMillis() + KubernetesClusterService.KubernetesClusterStartTimeout.value() * 1000@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to start Kubernetes cluster : %s as no public IP found for the cluster\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Strings.isNullOrEmpty(publicIpAddress) && (Network.GuestType.Isolated.equals(network.getGuestType()) || kubernetesCluster.getControlNodeCount() > 1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return true@@@94@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "deployProvider()@@@92@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "UserVm k8sControlVM = null@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to start Kubernetes cluster : %s in usable state as unable to retrieve kube-config for the cluster\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.OperationFailed)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "LOGGER.info(String.format(\"Starting Kubernetes cluster : %s\",kubernetesCluster.getName()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "detachIsoKubernetesVMs(clusterVMs)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "InsufficientCapacityException e@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "k8sControlVM = provisionKubernetesClusterControlVm(network,publicIpAddress)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "!isKubernetesClusterDashboardServiceRunning(true,startTimeoutTime)@@@89@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "List<UserVm> clusterVMs = new ArrayList<>()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Failed to setup Kubernetes cluster : %s, unable to setup network rules\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed,e)@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "clusterVMs.addAll(additionalControlVMs)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Provisioning node VM failed in the Kubernetes cluster : %s\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.CreateFailed,e)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "init()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CloudRuntimeException|ManagementServerException|ResourceUnavailableException|InsufficientCapacityException e@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "clusterVMs.add(k8sControlVM)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "String msg = String.format(\"Failed to setup Kubernetes cluster : %s in usable state as unable to access control node VMs of the cluster\",kubernetesCluster.getName())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "logTransitStateAndThrow(Level.ERROR,String.format(\"Kubernetes cluster : %s has invalid API endpoint. Can not verify if cluster is in ready state\",kubernetesCluster.getName()),kubernetesCluster.getId(),KubernetesCluster.Event.OperationFailed)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Pair<String,Integer> publicIpSshPort = getKubernetesClusterServerIpSshPort(null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean k8sApiServerSetup = KubernetesClusterUtil.isKubernetesClusterServerRunning(kubernetesCluster,publicIpAddress,CLUSTER_API_PORT,startTimeoutTime,15000)@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Strings.isNullOrEmpty(publicIpAddress)@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "return true@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<UserVm> nodeVMs = provisionKubernetesClusterNodeVms(kubernetesCluster.getNodeCount(),publicIpAddress)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ManagementServerException e@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "LOGGER.isInfoEnabled()@@@32@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "msg = String.format(\"%s. Make sure external load-balancer has port forwarding rules for SSH access on ports %d-%d and API access on port %d\",msg,CLUSTER_NODES_DEFAULT_START_SSH_PORT,CLUSTER_NODES_DEFAULT_START_SSH_PORT + kubernetesCluster.getTotalNodeCount() - 1,CLUSTER_API_PORT)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "!isKubernetesClusterKubeConfigAvailable(startTimeoutTime)@@@86@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "publicIpAddress = publicIpSshPort.first()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "sshPort = sshIpPort.second()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "Pair<String,Integer> sshIpPort = getKubernetesClusterServerIpSshPort(null)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "publicIpAddress = publicIpSshPort.first()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "updateKubernetesClusterEntryEndpoint()@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56->58 [style = solid, label="publicIpAddress"];
79->69 [style = bold, label=""];
61->48 [style = bold, label=""];
54->21 [style = bold, label=""];
75->71 [style = bold, label=""];
83->66 [style = dotted, label="true"];
28->12 [style = solid, label="nodeVMs"];
50->9 [style = bold, label=""];
49->46 [style = solid, label="msg"];
83->68 [style = bold, label=""];
56->58 [style = bold, label=""];
23->46 [style = solid, label="msg"];
56->14 [style = solid, label="publicIpAddress"];
18->55 [style = dotted, label="true"];
34->49 [style = bold, label=""];
30->38 [style = bold, label=""];
39->42 [style = bold, label=""];
57->50 [style = solid, label="sshPort"];
26->82 [style = dashed, label="0"];
15->61 [style = bold, label=""];
5->32 [style = bold, label=""];
32->61 [style = bold, label=""];
84->33 [style = bold, label=""];
74->70 [style = bold, label=""];
44->28 [style = bold, label=""];
58->39 [style = bold, label=""];
81->65 [style = bold, label=""];
12->16 [style = bold, label=""];
41->10 [style = dotted, label="true"];
17->4 [style = bold, label=""];
7->36 [style = bold, label=""];
39->46 [style = solid, label="clusterVMs"];
34->49 [style = dotted, label="true"];
15->48 [style = solid, label="dest"];
55->40 [style = bold, label=""];
78->83 [style = bold, label=""];
52->43 [style = bold, label=""];
16->54 [style = bold, label=""];
34->14 [style = bold, label=""];
5->32 [style = dotted, label="true"];
26->51 [style = bold, label=""];
35->23 [style = dotted, label="true"];
5->79 [style = dashed, label="0"];
16->22 [style = dotted, label="true"];
33->27 [style = bold, label=""];
79->69 [style = dotted, label="true"];
24->44 [style = bold, label=""];
52->43 [style = solid, label="k8sControlVM"];
40->47 [style = bold, label=""];
4->14 [style = solid, label="startTimeoutTime"];
15->73 [style = dashed, label="0"];
52->30 [style = solid, label="k8sControlVM"];
45->72 [style = dashed, label="0"];
3->43 [style = bold, label=""];
64->51 [style = bold, label=""];
38->18 [style = bold, label=""];
0->7 [style = bold, label=""];
36->19 [style = bold, label=""];
0->7 [style = dotted, label="true"];
34->46 [style = dotted, label="true"];
37->56 [style = bold, label=""];
70->83 [style = bold, label=""];
70->78 [style = bold, label=""];
38->40 [style = solid, label="publicIpAddress"];
51->11 [style = bold, label=""];
49->35 [style = bold, label=""];
26->45 [style = dotted, label="true"];
2->38 [style = dotted, label="true"];
40->47 [style = solid, label="additionalControlVMs"];
42->52 [style = bold, label=""];
47->28 [style = bold, label=""];
0->36 [style = bold, label=""];
27->17 [style = bold, label=""];
68->77 [style = bold, label=""];
4->50 [style = solid, label="startTimeoutTime"];
19->26 [style = bold, label=""];
26->45 [style = bold, label=""];
35->23 [style = bold, label=""];
69->80 [style = bold, label=""];
21->34 [style = bold, label=""];
56->40 [style = solid, label="publicIpAddress"];
31->59 [style = dotted, label="true"];
6->62 [style = bold, label=""];
71->81 [style = dotted, label="true"];
19->77 [style = dashed, label="0"];
10->16 [style = bold, label=""];
56->2 [style = solid, label="publicIpAddress"];
38->28 [style = solid, label="publicIpAddress"];
60->8 [style = bold, label=""];
56->28 [style = solid, label="publicIpAddress"];
45->64 [style = bold, label=""];
67->74 [style = bold, label=""];
63->33 [style = bold, label=""];
38->50 [style = solid, label="publicIpAddress"];
49->23 [style = solid, label="msg"];
68->82 [style = bold, label=""];
73->80 [style = bold, label=""];
2->30 [style = dotted, label="true"];
9->0 [style = bold, label=""];
16->22 [style = bold, label=""];
24->44 [style = dotted, label="true"];
8->21 [style = bold, label=""];
39->54 [style = solid, label="clusterVMs"];
68->77 [style = dotted, label="true"];
14->31 [style = bold, label=""];
58->29 [style = dotted, label="true"];
48->37 [style = bold, label=""];
76->73 [style = bold, label=""];
1->3 [style = dotted, label="true"];
60->8 [style = dotted, label="true"];
82->72 [style = dotted, label="true"];
46->14 [style = bold, label=""];
2->18 [style = dotted, label="true"];
41->10 [style = bold, label=""];
18->40 [style = bold, label=""];
36->19 [style = dotted, label="true"];
56->50 [style = solid, label="publicIpAddress"];
77->82 [style = bold, label=""];
58->29 [style = bold, label=""];
4->13 [style = bold, label=""];
48->52 [style = solid, label="network"];
39->9 [style = solid, label="clusterVMs"];
66->68 [style = bold, label=""];
83->66 [style = bold, label=""];
18->55 [style = bold, label=""];
32->69 [style = dashed, label="0"];
80->67 [style = bold, label=""];
59->57 [style = bold, label=""];
20->33 [style = bold, label=""];
39->21 [style = solid, label="clusterVMs"];
26->64 [style = bold, label=""];
31->57 [style = bold, label=""];
25->50 [style = bold, label=""];
43->2 [style = bold, label=""];
67->70 [style = solid, label="publicIpAddress"];
28->12 [style = bold, label=""];
27->4 [style = bold, label=""];
62->37 [style = bold, label=""];
23->46 [style = bold, label=""];
27->17 [style = dotted, label="true"];
31->59 [style = bold, label=""];
48->54 [style = solid, label="network"];
34->35 [style = dotted, label="true"];
70->78 [style = dotted, label="true"];
82->72 [style = bold, label=""];
53->15 [style = bold, label=""];
39->59 [style = solid, label="clusterVMs"];
56->52 [style = solid, label="publicIpAddress"];
1->3 [style = bold, label=""];
13->76 [style = bold, label=""];
13->53 [style = bold, label=""];
29->39 [style = bold, label=""];
45->51 [style = bold, label=""];
35->46 [style = bold, label=""];
36->26 [style = bold, label=""];
2->40 [style = bold, label=""];
38->18 [style = solid, label="publicIpAddress"];
2->30 [style = bold, label=""];
82->75 [style = bold, label=""];
22->54 [style = bold, label=""];
6->62 [style = dotted, label="true"];
57->25 [style = bold, label=""];
72->75 [style = bold, label=""];
71->81 [style = bold, label=""];
71->65 [style = bold, label=""];
38->14 [style = solid, label="publicIpAddress"];
30->78 [style = dashed, label="0"];
}
