digraph {
90 [style = filled, label = "new UpdateRequest().add(id,\"12\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"13\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
109 [style = filled, label = "stream = factory.constructStream(expression)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "expression = StreamExpressionParser.parse(\"parallel(collection1, \" + \"workers=\"2\", \" + \"sort=\"_version_ asc\",\" + \"topic(collection1, \" + \"collection1, \" + \"q=\"a_s:hello\", \" + \"fl=\"id\", \" + \"id=\"1000000\", \" + \"partitionKeys=\"id\"))\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withFunctionName(\"topic\",).withFunctionName(\"search\",).withFunctionName(\"parallel\",).withFunctionName(\"daemon\",)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "new UpdateRequest().add(id,\"10\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"11\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "assertTrue(tuple3.EOF)@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertEquals(15,(long)tuple.getLong(id))@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "tuples = getTuples(cstream)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "testParallelTopicStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "context.setSolrClientCache(cache)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "stream.setStreamContext(context)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "expression = StreamExpressionParser.parse(\"parallel(collection1, \" + \"workers=\"2\", \" + \"sort=\"_version_ asc\",\" + \"topic(collection1, \" + \"collection1, \" + \"q=\"a_s:hello\", \" + \"fl=\"id\", \" + \"id=\"1000000\", \" + \"partitionKeys=\"id\"))\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "context = new StreamContext()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "context = new StreamContext()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\"id\", q=\"a_s:hello\", id=\"1000000\", checkpointEvery=2), id=\"test\", runInterval=\"1000\", queueSize=\"9\")\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Tuple tuple1 = stream.read()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(version1,version2)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "context = new StreamContext()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assertTopicRun(stream,\"10\",\"11\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "context = new StreamContext()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "List<String> checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "dstream.shutdown()@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "expression = StreamExpressionParser.parse(\"parallel(collection1, \" + \"workers=\"2\", \" + \"sort=\"_version_ asc\",\" + \"topic(collection1, \" + \"collection1, \" + \"q=\"subject:bla\", \" + \"fl=\"subject\", \" + \"id=\"3000000\", \" + \"initialCheckpoint=\"0\", \" + \"partitionKeys=\"id\"))\")@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "cluster.getSolrClient().commit(\"collection1\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "stream = factory.constructStream(expression)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(collection1, q=\"id:1000000\", fl=\"id, checkpoint_ss, _version_\", sort=\"id asc\")\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "Tuple tuple3 = stream.read()@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "stream.setStreamContext(context)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "context = new StreamContext()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "new UpdateRequest().add(id,\"14\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"15\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@86@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "tuple = dstream.read()@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertTopicSubject(stream,\"ha ha bla blah0\",\"ha ha bla blah1\",\"ha ha bla blah2\",\"ha ha bla blah3\",\"ha ha bla blah4\",\"ha ha bla blah5\",\"ha ha bla blah6\",\"ha ha bla blah7\",\"ha ha bla blah8\",\"ha ha bla blah9\",\"ha ha bla blah10\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "dstream.open()@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "stream.setStreamContext(context)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "context.setSolrClientCache(cache)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "tuple = dstream.read()@@@86@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "{cache.close()}@@@99@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "Tuple tuple = null@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "StreamContext context = new StreamContext()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(checkpoints.size(),2)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Long version2 = tuples.get(0).getLong(\"_version_\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "context = new StreamContext()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cluster.getSolrClient().commit(\"collection1\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "StreamExpression expression@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkpoints = tuples.get(0).getStrings(\"checkpoint_ss\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cluster.getSolrClient().commit(\"collection1\")@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertEquals(checkpoints.size(),2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "String id1 = tuples.get(0).getString(\"id\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "context = new StreamContext()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "Assume.assumeTrue(!useAlias)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "assertEquals((long)tuple2.getLong(\"id\"),11l)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "new UpdateRequest().add(id,\"12\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"13\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "expression = StreamExpressionParser.parse(\"parallel(collection1, \" + \"workers=\"2\", \" + \"sort=\"_version_ asc\",\" + \"topic(collection1, \" + \"collection1, \" + \"q=\"a_s:hello\", \" + \"fl=\"id\", \" + \"id=\"2000000\", \" + \"initialCheckpoint=\"0\", \" + \"partitionKeys=\"id\"))\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TupleStream stream@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "stream = factory.constructStream(expression)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "context.setSolrClientCache(cache)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assertTopicRun(stream,\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(collection1, q=\"id:1000000\", fl=\"id, checkpoint_ss, _version_\", sort=\"id asc\")\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals((long)tuple1.getLong(\"id\"),10l)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Tuple tuple = null@@@78@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(tuples.size(),1)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(tuples.size(),0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello\",\"a_i\",\"0\",\"a_f\",\"1\",\"subject\",\"ha ha bla blah0\").add(id,\"2\",\"a_s\",\"hello\",\"a_i\",\"2\",\"a_f\",\"2\",\"subject\",\"ha ha bla blah2\").add(id,\"3\",\"a_s\",\"hello\",\"a_i\",\"3\",\"a_f\",\"3\",\"subject\",\"ha ha bla blah3\").add(id,\"4\",\"a_s\",\"hello\",\"a_i\",\"4\",\"a_f\",\"4\",\"subject\",\"ha ha bla blah4\").add(id,\"1\",\"a_s\",\"hello\",\"a_i\",\"1\",\"a_f\",\"5\",\"subject\",\"ha ha bla blah5\").add(id,\"5\",\"a_s\",\"hello\",\"a_i\",\"10\",\"a_f\",\"6\",\"subject\",\"ha ha bla blah6\").add(id,\"6\",\"a_s\",\"hello\",\"a_i\",\"11\",\"a_f\",\"7\",\"subject\",\"ha ha bla blah7\").add(id,\"7\",\"a_s\",\"hello\",\"a_i\",\"12\",\"a_f\",\"8\",\"subject\",\"ha ha bla blah8\").add(id,\"8\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\",\"subject\",\"ha ha bla blah9\").add(id,\"9\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\",\"subject\",\"ha ha bla blah10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "stream.setStreamContext(context)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "assertEquals(tuples.size(),2)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "tuples = getTuples(stream)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(tuples.size(),1)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\"id\", q=\"a_s:hello\", id=\"1000000\", checkpointEvery=2)\")@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "dstream = (DaemonStream)factory.constructStream(expression)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "tuples = getTuples(stream)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "tuple = dstream.read()@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "context.setSolrClientCache(cache)@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "stream.setStreamContext(context)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "tuple = dstream.read()@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "TupleStream cstream = factory.constructStream(expression)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "cluster.getSolrClient().commit(\"collection1\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "context.setSolrClientCache(cache)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "{cache.close()}@@@57@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "cluster.getSolrClient().commit(\"collection1\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "testTopicStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "Long version1 = tuples.get(0).getLong(\"_version_\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(checkpoints.size(),2)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DaemonStream dstream = null@@@70@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(collection1, q=\"id:1000000*\", fl=\"id, checkpoint_ss, _version_\", sort=\"id asc\")\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Long version3 = tuples.get(0).getLong(\"_version_\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(14,(long)tuple.getLong(id))@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "new UpdateRequest().add(id,\"10\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"11\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "expression = StreamExpressionParser.parse(\"daemon(topic(collection1, collection1, fl=\"id\", q=\"a_s:hello\", id=\"1000000\", checkpointEvery=2), id=\"test\", runInterval=\"1000\", queueSize=\"9\")\")@@@72@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withFunctionName(\"topic\",).withFunctionName(\"search\",).withFunctionName(\"daemon\",)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertTrue(version3 > version2)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(13,(long)tuple.getLong(id))@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{cache.close()}@@@98@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tuple = dstream.read()@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(checkpoints.size(),2)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testTopicStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "stream.setStreamContext(context)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "SolrClientCache cache = new SolrClientCache()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expression = StreamExpressionParser.parse(\"topic(collection1, collection1, q=\"a_s:hello\", fl=\"id\", id=\"1000000\", checkpointEvery=3)\")@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "tuples = getTuples(stream)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "DaemonStream dstream = null@@@71@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
118 [style = filled, label = "assertTrue(id1.equals(\"1000000_0\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "context.setSolrClientCache(cache)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "cstream.setStreamContext(context)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "{dstream.close()}@@@95@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
110 [style = filled, label = "context = new StreamContext()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "{stream.close()}@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "assertEquals(12,(long)tuple.getLong(id))@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "stream = factory.constructStream(expression)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "String id2 = tuples.get(1).getString(\"id\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "stream.setStreamContext(context)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "stream = factory.constructStream(expression)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertTrue(tuple.EOF)@@@93@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "context.setSolrClientCache(cache)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "context.setSolrClientCache(cache)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<Tuple> tuples@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{stream.close()}@@@67@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "stream = factory.constructStream(expression)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "context.setSolrClientCache(cache)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cstream = factory.constructStream(expression)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "SolrClientCache cache = new SolrClientCache()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "dstream.setStreamContext(context)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{dstream.close()}@@@94@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tuple = dstream.read()@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "context = new StreamContext()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "assertTrue(id2.equals(\"1000000_1\"))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "Tuple tuple2 = stream.read()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "assertTopicRun(stream,\"12\",\"13\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expression = StreamExpressionParser.parse(\"topic(collection1, collection1, fl=\"id\", q=\"a_s:hello\", id=\"1000000\", checkpointEvery=2)\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100->75 [style = solid, label="cache"];
83->20 [style = bold, label=""];
8->0 [style = solid, label="expression"];
16->55 [style = bold, label=""];
37->49 [style = bold, label=""];
54->83 [style = bold, label=""];
56->1 [style = bold, label=""];
68->43 [style = bold, label=""];
29->54 [style = solid, label="expression"];
15->21 [style = bold, label=""];
43->98 [style = dashed, label="0"];
19->33 [style = solid, label="context"];
83->50 [style = solid, label="context"];
115->45 [style = solid, label="context"];
17->9 [style = bold, label=""];
81->51 [style = solid, label="expression"];
129->119 [style = bold, label=""];
74->126 [style = solid, label="cache"];
4->62 [style = bold, label=""];
55->2 [style = bold, label=""];
10->17 [style = bold, label=""];
6->92 [style = dashed, label="0"];
3->16 [style = bold, label=""];
1->30 [style = bold, label=""];
100->49 [style = solid, label="cache"];
75->119 [style = dashed, label="0"];
31->74 [style = bold, label=""];
51->33 [style = solid, label="stream"];
7->14 [style = bold, label=""];
8->0 [style = bold, label=""];
48->52 [style = bold, label=""];
62->6 [style = bold, label=""];
34->72 [style = bold, label=""];
79->19 [style = bold, label=""];
72->80 [style = bold, label=""];
74->19 [style = solid, label="cache"];
13->53 [style = solid, label="stream"];
79->28 [style = solid, label="context"];
69->106 [style = dashed, label="0"];
74->11 [style = solid, label="cache"];
2->84 [style = solid, label="expression"];
33->42 [style = bold, label=""];
41->67 [style = bold, label=""];
68->122 [style = dashed, label="0"];
88->95 [style = bold, label=""];
60->63 [style = bold, label=""];
11->107 [style = dashed, label="0"];
84->59 [style = bold, label=""];
60->46 [style = solid, label="context"];
105->109 [style = solid, label="expression"];
49->115 [style = bold, label=""];
19->28 [style = bold, label=""];
104->127 [style = bold, label=""];
21->34 [style = solid, label="version3"];
56->1 [style = solid, label="version2"];
79->42 [style = solid, label="stream"];
25->13 [style = solid, label="expression"];
84->75 [style = solid, label="context"];
64->40 [style = bold, label=""];
38->120 [style = bold, label=""];
108->51 [style = bold, label=""];
104->111 [style = solid, label="context"];
32->56 [style = bold, label=""];
63->53 [style = solid, label="context"];
6->92 [style = bold, label=""];
107->114 [style = solid, label="expression"];
114->102 [style = solid, label="stream"];
8->66 [style = solid, label="cstream"];
20->111 [style = dashed, label="0"];
65->26 [style = solid, label="expression"];
124->38 [style = bold, label=""];
90->77 [style = bold, label=""];
105->109 [style = bold, label=""];
77->36 [style = bold, label=""];
68->1 [style = solid, label="version1"];
109->103 [style = solid, label="stream"];
51->79 [style = bold, label=""];
95->99 [style = bold, label=""];
120->49 [style = bold, label=""];
81->51 [style = bold, label=""];
60->18 [style = solid, label="stream"];
10->88 [style = bold, label=""];
74->129 [style = solid, label="cache"];
130->118 [style = bold, label=""];
74->123 [style = bold, label=""];
117->105 [style = bold, label=""];
22->5 [style = bold, label=""];
43->30 [style = solid, label="version1"];
128->113 [style = bold, label=""];
47->58 [style = bold, label=""];
98->26 [style = bold, label=""];
100->13 [style = bold, label=""];
123->13 [style = bold, label=""];
35->57 [style = bold, label=""];
86->71 [style = bold, label=""];
13->60 [style = bold, label=""];
66->48 [style = bold, label=""];
100->28 [style = solid, label="cache"];
50->82 [style = bold, label=""];
6->85 [style = bold, label=""];
91->2 [style = bold, label=""];
45->121 [style = bold, label=""];
121->107 [style = bold, label=""];
38->37 [style = bold, label=""];
126->106 [style = bold, label=""];
44->32 [style = bold, label=""];
49->121 [style = solid, label="stream"];
0->48 [style = solid, label="cstream"];
57->122 [style = bold, label=""];
50->102 [style = dashed, label="0"];
23->7 [style = bold, label=""];
25->123 [style = dashed, label="0"];
73->81 [style = bold, label=""];
120->49 [style = solid, label="expression"];
1->72 [style = solid, label="version2"];
37->96 [style = solid, label="context"];
45->114 [style = dashed, label="0"];
74->83 [style = solid, label="cache"];
12->31 [style = bold, label=""];
18->73 [style = bold, label=""];
76->8 [style = bold, label=""];
54->82 [style = solid, label="cstream"];
75->39 [style = bold, label=""];
93->91 [style = bold, label=""];
52->15 [style = bold, label=""];
65->26 [style = bold, label=""];
103->116 [style = bold, label=""];
76->8 [style = solid, label="expression"];
45->23 [style = bold, label=""];
111->102 [style = bold, label=""];
66->117 [style = dashed, label="0"];
127->111 [style = bold, label=""];
61->69 [style = bold, label=""];
21->34 [style = bold, label=""];
14->29 [style = solid, label="expression"];
81->108 [style = dashed, label="0"];
122->130 [style = bold, label=""];
67->78 [style = bold, label=""];
82->101 [style = bold, label=""];
29->54 [style = bold, label=""];
43->98 [style = bold, label=""];
33->112 [style = bold, label=""];
101->106 [style = solid, label="context"];
74->25 [style = bold, label=""];
57->68 [style = bold, label=""];
24->41 [style = bold, label=""];
71->76 [style = bold, label=""];
42->112 [style = dashed, label="0"];
82->117 [style = solid, label="stream"];
74->63 [style = solid, label="cache"];
80->3 [style = bold, label=""];
61->66 [style = solid, label="context"];
63->46 [style = bold, label=""];
113->78 [style = bold, label=""];
74->100 [style = bold, label=""];
0->61 [style = bold, label=""];
40->27 [style = bold, label=""];
85->22 [style = bold, label=""];
74->59 [style = solid, label="cache"];
27->10 [style = bold, label=""];
43->65 [style = bold, label=""];
34->72 [style = solid, label="version3"];
2->84 [style = bold, label=""];
100->20 [style = solid, label="cache"];
14->29 [style = bold, label=""];
58->4 [style = bold, label=""];
100->69 [style = solid, label="cache"];
78->12 [style = bold, label=""];
69->66 [style = bold, label=""];
114->104 [style = bold, label=""];
49->11 [style = bold, label=""];
74->61 [style = solid, label="cache"];
73->108 [style = bold, label=""];
30->86 [style = bold, label=""];
13->60 [style = solid, label="expression"];
59->39 [style = solid, label="context"];
100->46 [style = solid, label="cache"];
97->78 [style = bold, label=""];
106->117 [style = bold, label=""];
20->50 [style = bold, label=""];
102->50 [style = bold, label=""];
92->22 [style = bold, label=""];
119->103 [style = bold, label=""];
110->129 [style = bold, label=""];
51->79 [style = solid, label="expression"];
36->47 [style = bold, label=""];
59->75 [style = bold, label=""];
101->126 [style = bold, label=""];
112->35 [style = bold, label=""];
25->13 [style = bold, label=""];
53->18 [style = bold, label=""];
118->124 [style = bold, label=""];
94->93 [style = bold, label=""];
55->2 [style = solid, label="expression"];
109->110 [style = bold, label=""];
46->53 [style = bold, label=""];
26->38 [style = solid, label="expression"];
11->45 [style = bold, label=""];
67->113 [style = dashed, label="0"];
70->77 [style = bold, label=""];
107->114 [style = bold, label=""];
39->70 [style = bold, label=""];
54->20 [style = solid, label="context"];
0->69 [style = solid, label="context"];
115->11 [style = bold, label=""];
42->35 [style = bold, label=""];
108->51 [style = solid, label="expression"];
107->82 [style = solid, label="expression"];
26->38 [style = bold, label=""];
125->128 [style = bold, label=""];
28->33 [style = bold, label=""];
74->127 [style = solid, label="cache"];
89->97 [style = bold, label=""];
80->94 [style = bold, label=""];
39->90 [style = dashed, label="0"];
1->30 [style = solid, label="version2"];
29->50 [style = solid, label="cstream"];
49->96 [style = bold, label=""];
123->13 [style = solid, label="expression"];
87->89 [style = bold, label=""];
110->119 [style = solid, label="context"];
74->37 [style = solid, label="cache"];
65->120 [style = dashed, label="0"];
96->45 [style = bold, label=""];
38->49 [style = solid, label="context"];
82->44 [style = bold, label=""];
39->90 [style = bold, label=""];
5->64 [style = bold, label=""];
56->34 [style = solid, label="version2"];
}
