digraph {
8 [style = filled, label = "schemaContexts.setAccessible(true)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertGetSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ShardingSphereSchema shardingSphereSchema = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertGetSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertGetAllSchemaNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(schemaContext.getRuntimeContext()).thenReturn(runtimeContext)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(keyList.get(i),is(ProxyContext.getInstance().getAllSchemaNames().get(i)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = Collections.singletonMap(\"schema\",schemaContext)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(null)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"\")))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(shardingSphereSchema.getDataSources()).thenReturn(Collections.emptyMap())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(schemaContext.getSchema()).thenReturn(shardingSphereSchema)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = getSchemaContextMap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(schemaContext,is(ProxyContext.getInstance().getSchema(\"schema\")))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SchemaContext schemaContext = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"schema1\")))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<String> keyList = Lists.newArrayList(schemaContextsMap.keySet())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int i = 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(shardingSphereSchema.getDataSources()).thenReturn(new HashMap<String,DataSource>())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "when(schemaContext.getName()).thenReturn(\"schema\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RuntimeContext runtimeContext = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < keyList.size()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17->10 [style = bold, label=""];
22->25 [style = bold, label=""];
7->21 [style = dashed, label="0"];
1->8 [style = bold, label=""];
15->7 [style = bold, label=""];
11->14 [style = bold, label=""];
23->1 [style = solid, label="i"];
0->17 [style = bold, label=""];
7->5 [style = solid, label="schemaContext"];
26->1 [style = bold, label=""];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
21->25 [style = solid, label="schemaContextsMap"];
16->7 [style = bold, label=""];
23->26 [style = bold, label=""];
26->19 [style = dotted, label="true"];
23->19 [style = solid, label="i"];
2->10 [style = bold, label=""];
2->17 [style = dashed, label="0"];
19->26 [style = solid, label="i"];
10->6 [style = bold, label=""];
21->18 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
14->1 [style = bold, label=""];
14->9 [style = solid, label="schemaContextsMap"];
20->21 [style = bold, label=""];
25->24 [style = bold, label=""];
19->1 [style = solid, label="i"];
18->22 [style = bold, label=""];
12->4 [style = bold, label=""];
19->26 [style = bold, label=""];
6->11 [style = bold, label=""];
26->1 [style = dotted, label="true"];
7->14 [style = solid, label="schemaContext"];
8->9 [style = bold, label=""];
13->5 [style = bold, label=""];
0->11 [style = solid, label="runtimeContext"];
9->12 [style = bold, label=""];
1->19 [style = bold, label=""];
23->26 [style = solid, label="i"];
3->6 [style = solid, label="shardingSphereSchema"];
24->23 [style = bold, label=""];
}
