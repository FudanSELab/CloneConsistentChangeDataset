digraph {
11 [style = filled, label = "testIdlenessForwarding['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "expectedOutput.add(new Watermark(1L))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testHarness.processStreamStatus1(StreamStatus.IDLE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testHarness.setup()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedOutput.add(new Watermark(3L))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testHarness.processStreamStatus2(StreamStatus.ACTIVE)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testHarness.open()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testIdleWatermarkHandling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testHarness.processElement1(3L,3L)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testHarness.processWatermark1(new Watermark(3L))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "KeySelector<Long,Integer> dummyKeySelector = null@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testHarness.processElement1(4L,4L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "expectedOutput.add(new StreamRecord<>(1L))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testHarness.processWatermarkStatus1(WatermarkStatus.IDLE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "expectedOutput.add(WatermarkStatus.IDLE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testHarness.processElement1(1L,1L)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(testHarness.getOutput(),empty())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final WatermarkTestingOperator testOperator = new WatermarkTestingOperator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness.processWatermarkStatus2(WatermarkStatus.IDLE)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testHarness.processStreamStatus2(StreamStatus.IDLE)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness.processStreamStatus2(StreamStatus.IDLE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "testHarness.processWatermark1(new Watermark(4L))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expectedOutput.add(new StreamRecord<>(3L))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testIdlenessForwarding['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testHarness.processWatermark1(new Watermark(1L))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedOutput.add(StreamStatus.IDLE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
22->26 [style = bold, label=""];
30->24 [style = bold, label=""];
0->15 [style = solid, label="expectedOutput"];
3->1 [style = bold, label=""];
26->17 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = solid, label="expectedOutput"];
18->30 [style = bold, label=""];
7->0 [style = bold, label=""];
25->29 [style = bold, label=""];
0->18 [style = solid, label="expectedOutput"];
8->7 [style = bold, label=""];
15->22 [style = bold, label=""];
0->16 [style = solid, label="expectedOutput"];
23->28 [style = bold, label=""];
12->13 [style = bold, label=""];
24->16 [style = bold, label=""];
5->2 [style = bold, label=""];
5->27 [style = dashed, label="0"];
1->6 [style = bold, label=""];
14->23 [style = bold, label=""];
5->10 [style = dashed, label="0"];
19->27 [style = bold, label=""];
17->18 [style = bold, label=""];
9->25 [style = dashed, label="0"];
29->14 [style = bold, label=""];
28->19 [style = bold, label=""];
21->7 [style = bold, label=""];
10->2 [style = bold, label=""];
9->12 [style = dashed, label="0"];
6->9 [style = bold, label=""];
4->13 [style = dashed, label="0"];
20->15 [style = bold, label=""];
4->5 [style = bold, label=""];
27->20 [style = bold, label=""];
11->7 [style = bold, label=""];
6->25 [style = bold, label=""];
6->12 [style = bold, label=""];
}
