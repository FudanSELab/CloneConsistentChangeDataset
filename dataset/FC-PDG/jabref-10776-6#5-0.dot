digraph {
20 [style = filled, label = "assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\").equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\")))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false).equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false)))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirst(\"John Smith\",false))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false).equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false)))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirst(\"John Smith\",false))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(\"John von Neumann and John Smith and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertTrue(AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\").equals(AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\")))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(\"John Smith\",AuthorList.fixAuthorFirstNameFirst(\"John Smith\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\",true))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(\"John Smith and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirst(\"John Smith and Black Brown, Peter\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"von Last, Jr, F.\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\",true))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\",true))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(\"von Neumann, John and Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"von Neumann, J. and Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(\"von Last, Jr, First\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "testFixAuthorFirstNameFirst['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"von Last, Jr, First\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(\"von Neumann, J. and Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirst(\"John Smith\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\",false))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"von Neumann, John and Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(\"von Neumann, John and Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\").equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\")))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"Smith, J.\",AuthorList.fixAuthorLastNameFirst(\"John Smith\",true))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(\"von Last, Jr, F.\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\",true))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirst(\"John Smith\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "testFixAuthorLastNameFirst['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true).equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true)))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"von Last, Jr, First\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\",false))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\",false))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testFixAuthorLastNameFirst['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Smith, J.\",AuthorList.fixAuthorLastNameFirst(\"John Smith\",true))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true).equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true)))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(\"von Neumann, John and Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(\"First von Last, Jr. III\",AuthorList.fixAuthorFirstNameFirst(\"von Last, Jr. III, First\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"von Last, Jr, First\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\",false))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
23->20 [style = bold, label=""];
25->28 [style = bold, label=""];
16->18 [style = bold, label=""];
29->17 [style = bold, label=""];
7->23 [style = dashed, label="0"];
32->37 [style = bold, label=""];
12->20 [style = dashed, label="0"];
9->16 [style = dashed, label="0"];
12->37 [style = dashed, label="0"];
3->21 [style = dashed, label="0"];
7->12 [style = bold, label=""];
2->1 [style = bold, label=""];
17->31 [style = bold, label=""];
30->26 [style = bold, label=""];
34->33 [style = bold, label=""];
2->27 [style = dashed, label="0"];
36->32 [style = bold, label=""];
21->25 [style = bold, label=""];
13->25 [style = dashed, label="0"];
12->9 [style = bold, label=""];
9->8 [style = bold, label=""];
11->36 [style = dashed, label="0"];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
6->22 [style = dashed, label="0"];
15->5 [style = bold, label=""];
26->22 [style = bold, label=""];
6->2 [style = bold, label=""];
8->0 [style = bold, label=""];
11->28 [style = dashed, label="0"];
18->29 [style = bold, label=""];
0->14 [style = bold, label=""];
10->26 [style = dashed, label="0"];
3->34 [style = dashed, label="0"];
20->16 [style = bold, label=""];
22->27 [style = bold, label=""];
28->23 [style = bold, label=""];
1->24 [style = dashed, label="0"];
33->36 [style = bold, label=""];
31->30 [style = bold, label=""];
0->29 [style = dashed, label="0"];
15->31 [style = dashed, label="0"];
3->13 [style = bold, label=""];
13->33 [style = dashed, label="0"];
7->32 [style = dashed, label="0"];
14->17 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
27->24 [style = bold, label=""];
35->34 [style = bold, label=""];
11->7 [style = bold, label=""];
5->30 [style = dashed, label="0"];
19->21 [style = bold, label=""];
}
