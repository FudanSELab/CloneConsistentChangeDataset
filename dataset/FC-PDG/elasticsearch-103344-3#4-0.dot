digraph {
20 [style = filled, label = "filter = filter == null? IntervalQueryBuilderTests.createRandomNonNullFilter(0,randomBoolean()): FilterIntervalsSourceProviderTests.mutateFilter(filter)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mutateInstance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "subSources = subSources == null? IntervalQueryBuilderTests.createRandomSourceList(0,randomBoolean(),randomInt(5) + 1): null@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mutateInstance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<IntervalsSourceProvider> subSources = instance.getSubSources()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ordered = !ordered@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "subSources = subSources == null? IntervalQueryBuilderTests.createRandomSourceList(0,randomBoolean(),randomInt(5) + 1): null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int maxGaps = instance.getMaxGaps()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "boolean ordered = instance.isOrdered()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IntervalsSourceProvider.IntervalFilter filter = instance.getFilter()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mutateInstance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Combine instance@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return new Combine(subSources,ordered,maxGaps,filter)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "between(0,3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "filter = filter == null? IntervalQueryBuilderTests.createRandomNonNullFilter(0,randomBoolean()): FilterIntervalsSourceProviderTests.mutateFilter(filter)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw new AssertionError(\"Illegal randomisation branch\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ordered = ordered == false@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Disjunction instance@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return new Disjunction(subSources,filter)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "maxGaps++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "randomBoolean()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0->12 [style = dotted, label="true"];
0->9 [style = bold, label=""];
3->7 [style = dotted, label="true"];
0->5 [style = dotted, label="true"];
0->13 [style = dotted, label="true"];
0->13 [style = bold, label=""];
12->2 [style = solid, label="subSources"];
9->2 [style = bold, label=""];
5->2 [style = solid, label="filter"];
0->12 [style = bold, label=""];
16->17 [style = dotted, label="true"];
0->4 [style = dotted, label="true"];
11->2 [style = solid, label="ordered"];
6->2 [style = solid, label="filter"];
6->5 [style = solid, label="filter"];
12->17 [style = dashed, label="0"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
17->18 [style = solid, label="subSources"];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
8->2 [style = solid, label="subSources"];
10->6 [style = bold, label=""];
9->2 [style = solid, label="ordered"];
6->20 [style = solid, label="filter"];
20->18 [style = bold, label=""];
20->18 [style = solid, label="filter"];
12->2 [style = bold, label=""];
5->2 [style = bold, label=""];
13->2 [style = solid, label="ordered"];
8->17 [style = solid, label="subSources"];
16->20 [style = dotted, label="false"];
7->19 [style = dashed, label="0"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
6->16 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
15->19 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
8->12 [style = solid, label="subSources"];
10->2 [style = solid, label="maxGaps"];
4->2 [style = solid, label="maxGaps"];
6->18 [style = solid, label="filter"];
9->13 [style = dashed, label="0"];
10->4 [style = solid, label="maxGaps"];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
11->13 [style = solid, label="ordered"];
16->20 [style = bold, label=""];
8->11 [style = bold, label=""];
0->9 [style = dotted, label="true"];
8->18 [style = solid, label="subSources"];
15->8 [style = bold, label=""];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
