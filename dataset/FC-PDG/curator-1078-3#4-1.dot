digraph {
19 [style = filled, label = "client.watches().removeAll().ofType(WatcherType.Children).forPath(path)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.checkExists().usingWatcher(watcher2).forPath(path)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.getChildren().usingWatcher(watcher2).forPath(path)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final AtomicBoolean removedFlag = new AtomicBoolean(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRemoveAllDataWatches['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(removedFlag.get(),false)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Watcher watcher1 = new BooleanWatcher(path,removedFlag,EventType.DataWatchRemoved)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String path = \"/\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Watcher watcher1 = new BooleanWatcher(path,removedFlag,EventType.ChildWatchRemoved)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Watcher watcher2 = new CountDownWatcher(path,removedLatch,EventType.ChildWatchRemoved)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "client.watches().removeAll().ofType(WatcherType.Data).forPath(path)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CountDownLatch removedLatch = new CountDownLatch(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.getChildren().usingWatcher(watcher1).forPath(path)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(removedFlag.get(),false)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.checkExists().usingWatcher(watcher1).forPath(path)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Watcher watcher2 = new CountDownWatcher(path,removedLatch,EventType.DataWatchRemoved)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testRemoveAllDataWatches['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testRemoveAllChildWatches['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(removedLatch),\"Timed out waiting for watch removal\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).retryPolicy(new RetryOneTime(1)).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(timing.awaitLatch(removedLatch),\"Timed out waiting for watch removal\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->23 [style = dashed, label="0"];
10->15 [style = dashed, label="0"];
5->8 [style = bold, label=""];
3->1 [style = solid, label="removedLatch"];
14->13 [style = solid, label="client"];
22->19 [style = bold, label=""];
5->23 [style = solid, label="path"];
5->18 [style = solid, label="path"];
4->17 [style = dashed, label="0"];
2->1 [style = bold, label=""];
4->13 [style = bold, label=""];
8->3 [style = bold, label=""];
3->10 [style = solid, label="removedLatch"];
5->7 [style = solid, label="path"];
8->2 [style = solid, label="removedFlag"];
19->10 [style = bold, label=""];
1->18 [style = dashed, label="0"];
1->0 [style = bold, label=""];
5->20 [style = solid, label="path"];
3->18 [style = solid, label="removedLatch"];
8->23 [style = solid, label="removedFlag"];
0->20 [style = dashed, label="0"];
6->15 [style = bold, label=""];
20->22 [style = bold, label=""];
0->7 [style = bold, label=""];
21->12 [style = bold, label=""];
5->22 [style = solid, label="path"];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
3->23 [style = bold, label=""];
18->20 [style = bold, label=""];
5->2 [style = solid, label="path"];
5->1 [style = solid, label="path"];
3->2 [style = bold, label=""];
6->10 [style = bold, label=""];
5->19 [style = solid, label="path"];
7->6 [style = bold, label=""];
6->19 [style = dashed, label="0"];
12->14 [style = bold, label=""];
10->4 [style = bold, label=""];
17->13 [style = bold, label=""];
9->12 [style = bold, label=""];
5->6 [style = solid, label="path"];
5->0 [style = solid, label="path"];
14->11 [style = bold, label=""];
16->12 [style = bold, label=""];
3->15 [style = solid, label="removedLatch"];
23->18 [style = bold, label=""];
7->22 [style = dashed, label="0"];
}
