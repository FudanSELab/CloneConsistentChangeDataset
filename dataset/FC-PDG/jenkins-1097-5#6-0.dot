digraph {
18 [style = filled, label = "assertEquals(Result.UNSTABLE,build(project))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(1,numberOf(project.getLastSuccessfulBuild()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(4,numberOf(project.getLastSuccessfulBuild()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Result.FAILURE,build(project))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Result.SUCCESS,build(project))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "project.getBuildersList().replaceBy(Collections.emptySet())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertNull(project.getBuildByNumber(2))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "project.getPublishersList().replaceBy(Collections.emptySet())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Result.SUCCESS,build(project))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(1,numberOf(project.getLastStableBuild()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(3,numberOf(project.getLastFailedBuild()))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Result.UNSTABLE,build(project))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "successVsFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "project.setLogRotator(new LogRotator(-1,2,-1,-1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "successVsFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Result.FAILURE,build(project))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(project.getBuildByNumber(1))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "project.getBuildersList().replaceBy(Collections.emptySet())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "stableVsUnstable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
7->11 [style = bold, label=""];
12->20 [style = dashed, label="0"];
21->19 [style = bold, label=""];
17->6 [style = bold, label=""];
6->7 [style = solid, label="project"];
7->16 [style = dashed, label="0"];
0->12 [style = bold, label=""];
8->3 [style = bold, label=""];
1->0 [style = bold, label=""];
11->9 [style = bold, label=""];
9->8 [style = bold, label=""];
10->6 [style = bold, label=""];
19->8 [style = bold, label=""];
11->15 [style = bold, label=""];
9->19 [style = dashed, label="0"];
20->18 [style = bold, label=""];
6->1 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
6->0 [style = solid, label="project"];
6->18 [style = solid, label="project"];
16->21 [style = bold, label=""];
5->13 [style = bold, label=""];
6->8 [style = solid, label="project"];
2->18 [style = dashed, label="0"];
0->20 [style = bold, label=""];
6->16 [style = solid, label="project"];
2->7 [style = bold, label=""];
8->4 [style = bold, label=""];
11->21 [style = dashed, label="0"];
15->8 [style = bold, label=""];
14->6 [style = bold, label=""];
6->2 [style = solid, label="project"];
9->15 [style = dashed, label="0"];
18->16 [style = bold, label=""];
}
