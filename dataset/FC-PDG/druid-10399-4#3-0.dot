digraph {
16 [style = filled, label = "prototype.addSegment(segmentA)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SegmentsCostCache.Bucket.Builder prototype = SegmentsCostCache.Bucket.builder(new Interval(REFERENCE_TIME.minusHours(5),REFERENCE_TIME.plusHours(5)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(bucket.inCalculationInterval(segmentA))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DataSegment segmentA = createSegment(DATA_SOURCE,shifted1HInterval(REFERENCE_TIME,-2),100)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(bucket.inCalculationInterval(segmentB))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SegmentsCostCache.Bucket bucket = prototype.build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "calculationIntervalTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DataSegment segmentA = createSegment(DATA_SOURCE,shifted1HInterval(REFERENCE_TIME,0),100)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "multipleSegmentsCostTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(0.001574717989780039,segmentCost,EPSILON)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(0.001574717989780039,segmentCost,EPSILON)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "double segmentCost = bucket.cost(segmentB)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DataSegment segmentB = createSegment(DATA_SOURCE,shifted1HInterval(REFERENCE_TIME,(int)TimeUnit.DAYS.toHours(50)),100)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DataSegment segmentC = createSegment(DATA_SOURCE,shifted1HInterval(REFERENCE_TIME,2),100)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "prototype.addSegment(segmentC)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DataSegment segmentB = createSegment(DATA_SOURCE,shifted1HInterval(REFERENCE_TIME,0),100)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "multipleSegmentsCostTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "SegmentsCostCache.Bucket.Builder prototype = SegmentsCostCache.Bucket.builder(new Interval(REFERENCE_TIME.minusHours(5),REFERENCE_TIME.plusHours(5)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
8->10 [style = bold, label=""];
16->0 [style = bold, label=""];
9->8 [style = solid, label="segmentB"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
4->17 [style = dashed, label="0"];
8->6 [style = solid, label="segmentCost"];
11->4 [style = bold, label=""];
3->7 [style = solid, label="segmentC"];
8->6 [style = bold, label=""];
12->16 [style = bold, label=""];
2->4 [style = bold, label=""];
1->13 [style = bold, label=""];
6->10 [style = dashed, label="0"];
0->7 [style = bold, label=""];
14->13 [style = solid, label="segmentB"];
15->17 [style = bold, label=""];
3->5 [style = bold, label=""];
9->14 [style = dashed, label="0"];
3->12 [style = dashed, label="0"];
5->0 [style = bold, label=""];
17->14 [style = bold, label=""];
0->1 [style = bold, label=""];
14->12 [style = bold, label=""];
17->1 [style = solid, label="segmentA"];
9->3 [style = bold, label=""];
4->0 [style = solid, label="segmentA"];
8->10 [style = solid, label="segmentCost"];
17->16 [style = solid, label="segmentA"];
}
