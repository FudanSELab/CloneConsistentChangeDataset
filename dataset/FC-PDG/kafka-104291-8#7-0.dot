digraph {
9 [style = filled, label = "partitions = new HashSet<>(assignment.partitions())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Set<AclOperation> authorizedOperations = validAclOperations(describedGroup.authorizedOperations())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AbstractResponse abstractResponse@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "failed.put(groupIdKey,new IllegalArgumentException(String.format(\"GroupId %s is not a consumer group (%s).\",groupIdKey.idValue,protocolType)))@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final Set<CoordinatorKey> groupsToUnmap = new HashSet<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "error != Errors.NONE@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<MemberDescription> memberDescriptions = new ArrayList<>(members.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "return new ApiResult<>(completed,failed,new ArrayList<>(groupsToUnmap))@@@34@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "final ConsumerGroupDescription consumerGroupDescription = new ConsumerGroupDescription(groupIdKey.idValue,protocolType.isEmpty(),memberDescriptions,describedGroup.protocolData(),ConsumerGroupState.parse(describedGroup.groupState()),coordinator,authorizedOperations)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "members@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Node coordinator@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "final Map<CoordinatorKey,Void> completed = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "completed.put(groupIdKey,consumerGroupDescription)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Node coordinator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "failed.put(groupIdKey,new IllegalArgumentException(String.format(\"GroupId %s is not a consumer group (%s).\",groupIdKey.idValue,protocolType)))@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "handleError(groupIdKey,error,failed,groupsToUnmap)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "handleResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "CoordinatorKey groupIdKey = CoordinatorKey.byGroupId(deletedGroup.groupId())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CoordinatorKey groupIdKey = CoordinatorKey.byGroupId(describedGroup.groupId())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "completed.put(groupIdKey,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final DescribeGroupsResponse response = (DescribeGroupsResponse)abstractResponse@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return new ApiResult<>(completed,failed,new ArrayList<>(groupsToUnmap))@@@35@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "memberDescriptions.add(memberDescription)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "handleResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "memberDescriptions.add(new MemberDescription(groupMember.memberId(),Optional.ofNullable(groupMember.groupInstanceId()),groupMember.clientId(),groupMember.clientHost(),new MemberAssignment(partitions)))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final List<DescribedGroupMember> members = describedGroup.members()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "groupMember.memberAssignment().length > 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "DescribedGroupMember groupMember@@@19@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "Set<CoordinatorKey> groupIds@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Set<CoordinatorKey> groupIds@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "completed.put(groupIdKey,consumerGroupDescription)@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String protocolType = describedGroup.protocolType()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "AbstractResponse abstractResponse@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Map<CoordinatorKey,ConsumerGroupDescription> completed = new HashMap<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "protocolType.equals(ConsumerProtocol.PROTOCOL_TYPE) || protocolType.isEmpty()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final DeleteGroupsResponse response = (DeleteGroupsResponse)abstractResponse@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "AbstractResponse abstractResponse@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Map<CoordinatorKey,Throwable> failed = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final MemberDescription memberDescription = new MemberDescription(groupMember.memberId(),Optional.ofNullable(groupMember.groupInstanceId()),groupMember.clientId(),groupMember.clientHost(),new MemberAssignment(partitions))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "DescribedGroupMember groupMember@@@19@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Errors error = Errors.forCode(deletedGroup.errorCode())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "handleResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "return new ApiResult<>(completed,failed,new ArrayList<>(groupsToUnmap))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Assignment assignment = ConsumerProtocol.deserializeAssignment(ByteBuffer.wrap(groupMember.memberAssignment()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Set<CoordinatorKey> groupIds@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Errors error = Errors.forCode(describedGroup.errorCode())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Set<TopicPartition> partitions = Collections.emptySet()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->38 [style = dashed, label="0"];
23->35 [style = solid, label="protocolType"];
5->18 [style = dotted, label="true"];
2->6 [style = bold, label=""];
26->0 [style = solid, label="error"];
5->19 [style = dotted, label="true"];
44->24 [style = solid, label="error"];
9->22 [style = solid, label="partitions"];
5->12 [style = dotted, label="true"];
7->8 [style = bold, label=""];
6->24 [style = solid, label="groupIdKey"];
3->4 [style = bold, label=""];
27->15 [style = bold, label=""];
2->20 [style = solid, label="groupsToUnmap"];
45->41 [style = solid, label="groupIdKey"];
5->22 [style = dotted, label="true"];
33->25 [style = bold, label=""];
28->46 [style = dashed, label="0"];
0->24 [style = dotted, label="true"];
28->4 [style = solid, label="coordinator"];
0->24 [style = bold, label=""];
43->46 [style = dotted, label="true"];
41->45 [style = bold, label=""];
17->27 [style = bold, label=""];
2->42 [style = solid, label="groupsToUnmap"];
19->4 [style = solid, label="authorizedOperations"];
41->42 [style = bold, label=""];
9->33 [style = bold, label=""];
37->1 [style = bold, label=""];
36->4 [style = bold, label=""];
30->27 [style = bold, label=""];
4->18 [style = bold, label=""];
25->33 [style = solid, label="partitions"];
5->33 [style = dotted, label="true"];
5->3 [style = dotted, label="true"];
26->44 [style = dashed, label="0"];
25->7 [style = bold, label=""];
19->25 [style = bold, label=""];
5->4 [style = dotted, label="true"];
24->20 [style = bold, label=""];
5->36 [style = dotted, label="true"];
7->33 [style = bold, label=""];
18->20 [style = bold, label=""];
26->0 [style = bold, label=""];
0->23 [style = bold, label=""];
6->45 [style = dashed, label="0"];
38->37 [style = bold, label=""];
5->25 [style = dotted, label="true"];
5->7 [style = dotted, label="true"];
44->0 [style = solid, label="error"];
33->36 [style = bold, label=""];
5->35 [style = dotted, label="false"];
25->22 [style = solid, label="partitions"];
30->32 [style = dotted, label="true"];
19->36 [style = solid, label="authorizedOperations"];
30->28 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
17->21 [style = dotted, label="true"];
9->22 [style = bold, label=""];
2->29 [style = solid, label="groupsToUnmap"];
1->42 [style = solid, label="failed"];
6->26 [style = bold, label=""];
35->29 [style = bold, label=""];
45->24 [style = solid, label="groupIdKey"];
23->5 [style = bold, label=""];
26->24 [style = solid, label="error"];
15->20 [style = solid, label="completed"];
5->10 [style = dotted, label="true"];
22->33 [style = dashed, label="0"];
5->31 [style = dotted, label="true"];
4->29 [style = bold, label=""];
22->3 [style = solid, label="memberDescription"];
2->24 [style = solid, label="groupsToUnmap"];
30->34 [style = dotted, label="true"];
45->44 [style = bold, label=""];
21->27 [style = solid, label="abstractResponse"];
9->33 [style = solid, label="partitions"];
24->45 [style = bold, label=""];
6->35 [style = solid, label="groupIdKey"];
0->41 [style = bold, label=""];
7->22 [style = bold, label=""];
25->9 [style = solid, label="partitions"];
5->13 [style = dotted, label="false"];
43->38 [style = bold, label=""];
12->4 [style = solid, label="memberDescriptions"];
4->18 [style = solid, label="consumerGroupDescription"];
18->6 [style = bold, label=""];
5->13 [style = bold, label=""];
5->16 [style = dotted, label="true"];
17->28 [style = dotted, label="true"];
2->45 [style = bold, label=""];
43->40 [style = dotted, label="true"];
1->2 [style = bold, label=""];
13->6 [style = bold, label=""];
5->35 [style = bold, label=""];
6->13 [style = solid, label="groupIdKey"];
24->42 [style = bold, label=""];
15->1 [style = bold, label=""];
17->11 [style = dotted, label="true"];
6->18 [style = solid, label="groupIdKey"];
5->14 [style = dotted, label="true"];
35->6 [style = bold, label=""];
4->6 [style = bold, label=""];
6->4 [style = solid, label="groupIdKey"];
3->25 [style = bold, label=""];
15->37 [style = dashed, label="0"];
32->36 [style = solid, label="coordinator"];
36->4 [style = solid, label="consumerGroupDescription"];
24->29 [style = bold, label=""];
46->38 [style = solid, label="abstractResponse"];
5->14 [style = bold, label=""];
7->9 [style = dotted, label="true"];
28->27 [style = solid, label="abstractResponse"];
37->42 [style = solid, label="completed"];
22->3 [style = bold, label=""];
1->24 [style = solid, label="failed"];
12->36 [style = solid, label="memberDescriptions"];
23->13 [style = solid, label="protocolType"];
14->12 [style = bold, label=""];
8->9 [style = bold, label=""];
15->29 [style = solid, label="completed"];
12->19 [style = bold, label=""];
24->6 [style = bold, label=""];
1->29 [style = solid, label="failed"];
1->20 [style = solid, label="failed"];
43->39 [style = dotted, label="true"];
44->0 [style = bold, label=""];
13->20 [style = bold, label=""];
}
