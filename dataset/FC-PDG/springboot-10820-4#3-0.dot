digraph {
0 [style = filled, label = "allowedHeadersCanBeConfigured['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "requestsWithDisallowedHeadersAreRejected['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "createMockMvc().perform(options(\"/application/beans\").header(\"Origin\",\"foo.example.com\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,\"GET\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS,\"Alpha\")).andExpect(status().isForbidden())@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createMockMvc().perform(options(\"/application/beans\").header(\"Origin\",\"foo.example.com\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,\"GET\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS,\"Alpha\")).andExpect(status().isOk()).andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS,\"Alpha\"))@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestPropertyValues.of(\"management.endpoints.web.cors.allowed-origins:foo.example.com\",\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\").applyTo(this.context)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "TestPropertyValues.of(\"management.endpoints.cors.allowed-origins:foo.example.com\").applyTo(this.context)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestPropertyValues.of(\"management.endpoints.cors.allowed-origins:foo.example.com\",\"management.endpoints.cors.allowed-headers:Alpha,Bravo\").applyTo(this.context)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "allowedHeadersCanBeConfigured['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->4 [style = dashed, label="0"];
6->5 [style = bold, label=""];
4->1 [style = bold, label=""];
1->5 [style = dashed, label="0"];
3->4 [style = bold, label=""];
2->1 [style = bold, label=""];
7->6 [style = bold, label=""];
0->2 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
