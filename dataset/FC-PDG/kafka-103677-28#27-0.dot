digraph {
4 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client.prepareResponse(fetchResponse(this.records,Errors.NONE.code(),100L,100 * i))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(3,records.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "v < 3@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "builder.append((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,0L,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "this.records.append((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "subscriptions.assignFromUser(singleton(tp))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "client.prepareResponse(fetchResponse(this.records.buffer(),Errors.NONE.code(),100L,100 * i))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i > 1@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < 4@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.records = MemoryRecords.emptyRecords(ByteBuffer.allocate(1024),CompressionType.NONE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "this.records = builder.build()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.records.close()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "v++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int v = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->22 [style = dotted, label="true"];
23->24 [style = solid, label="v"];
39->34 [style = solid, label="i"];
8->35 [style = dashed, label="0"];
34->29 [style = dotted, label="true"];
9->27 [style = dashed, label="0"];
5->15 [style = bold, label=""];
3->15 [style = solid, label="i"];
10->28 [style = dashed, label="0"];
7->15 [style = solid, label="i"];
12->24 [style = solid, label="v"];
3->34 [style = bold, label=""];
15->25 [style = dashed, label="0"];
11->2 [style = dotted, label="true"];
23->22 [style = bold, label=""];
20->16 [style = bold, label=""];
39->29 [style = solid, label="i"];
10->12 [style = bold, label=""];
15->20 [style = bold, label=""];
21->1 [style = bold, label=""];
9->5 [style = bold, label=""];
27->5 [style = bold, label=""];
11->15 [style = dotted, label="true"];
32->3 [style = bold, label=""];
2->28 [style = bold, label=""];
12->22 [style = bold, label=""];
2->10 [style = dotted, label="true"];
7->29 [style = bold, label=""];
23->22 [style = solid, label="v"];
11->7 [style = dotted, label="true"];
3->2 [style = solid, label="i"];
7->11 [style = bold, label=""];
22->23 [style = dotted, label="true"];
39->34 [style = bold, label=""];
22->9 [style = bold, label=""];
34->33 [style = bold, label=""];
36->31 [style = bold, label=""];
3->11 [style = bold, label=""];
7->18 [style = solid, label="i"];
11->5 [style = dotted, label="true"];
7->24 [style = solid, label="i"];
16->17 [style = bold, label=""];
22->24 [style = dotted, label="true"];
12->22 [style = solid, label="v"];
34->7 [style = dotted, label="true"];
26->6 [style = bold, label=""];
31->29 [style = solid, label="offset"];
2->30 [style = dashed, label="0"];
2->28 [style = dotted, label="true"];
3->29 [style = solid, label="i"];
5->25 [style = bold, label=""];
6->25 [style = solid, label="records"];
22->18 [style = bold, label=""];
2->27 [style = dotted, label="true"];
38->37 [style = bold, label=""];
30->7 [style = bold, label=""];
29->32 [style = bold, label=""];
16->25 [style = solid, label="records"];
2->12 [style = dotted, label="true"];
11->16 [style = dotted, label="true"];
3->24 [style = solid, label="i"];
4->14 [style = bold, label=""];
22->18 [style = dotted, label="true"];
18->23 [style = bold, label=""];
12->18 [style = solid, label="v"];
7->2 [style = solid, label="i"];
12->23 [style = solid, label="v"];
6->21 [style = bold, label=""];
11->34 [style = dashed, label="0"];
11->4 [style = bold, label=""];
1->3 [style = bold, label=""];
11->17 [style = dotted, label="true"];
28->12 [style = bold, label=""];
2->10 [style = bold, label=""];
3->18 [style = solid, label="i"];
11->20 [style = dotted, label="true"];
25->20 [style = bold, label=""];
2->9 [style = dotted, label="true"];
14->38 [style = dashed, label="0"];
31->39 [style = bold, label=""];
14->13 [style = bold, label=""];
37->35 [style = bold, label=""];
27->25 [style = solid, label="records"];
34->30 [style = dotted, label="true"];
3->34 [style = solid, label="i"];
2->5 [style = bold, label=""];
18->24 [style = dashed, label="0"];
24->23 [style = bold, label=""];
34->32 [style = dotted, label="true"];
3->25 [style = solid, label="i"];
13->37 [style = dashed, label="0"];
0->6 [style = bold, label=""];
8->19 [style = bold, label=""];
3->7 [style = solid, label="i"];
19->4 [style = dashed, label="0"];
34->30 [style = bold, label=""];
35->4 [style = bold, label=""];
11->2 [style = bold, label=""];
7->25 [style = solid, label="i"];
17->7 [style = bold, label=""];
39->3 [style = solid, label="i"];
34->3 [style = dotted, label="true"];
11->25 [style = dotted, label="true"];
22->27 [style = bold, label=""];
23->18 [style = solid, label="v"];
33->38 [style = bold, label=""];
3->11 [style = solid, label="i"];
22->24 [style = bold, label=""];
13->8 [style = bold, label=""];
7->11 [style = solid, label="i"];
}
