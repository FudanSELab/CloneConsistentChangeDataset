digraph {
6 [style = filled, label = "project.getBuildersList().add(new Shell(\"echo 1sleep 10s\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: \" + System.lineSeparator()))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Thread.sleep(1000)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "project.setAssignedLabel(new LabelAtom(\"never_created\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(\"Job wasn't scheduled properly\",project.scheduleBuild(0),equalTo(true))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "j.createFreeStyleProject(\"aProject\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such build #1\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(\"Job wasn't scheduled properly - it isn't in the queue\",project.isInQueue(),equalTo(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "consoleShouldFailWhenRequestedBuildDoesNotExist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ,Item.BUILD).invokeWithArgs(\"aProject\",\"1\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(result,succeeded())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(\"aProject\",\"1\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(\"aProject\",\"1\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(\"Job wasn't scheduled properly - it is running on non-exist node\",project.isBuilding(),equalTo(false))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(result,failedWith(3))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
1->8 [style = bold, label=""];
3->1 [style = bold, label=""];
11->1 [style = solid, label="result"];
11->1 [style = bold, label=""];
17->18 [style = solid, label="result"];
3->1 [style = solid, label="result"];
9->10 [style = bold, label=""];
17->13 [style = solid, label="result"];
13->16 [style = bold, label=""];
12->7 [style = bold, label=""];
4->0 [style = bold, label=""];
15->17 [style = bold, label=""];
7->6 [style = bold, label=""];
18->13 [style = bold, label=""];
10->4 [style = bold, label=""];
7->15 [style = dashed, label="0"];
14->15 [style = bold, label=""];
5->11 [style = bold, label=""];
2->7 [style = bold, label=""];
6->9 [style = bold, label=""];
17->18 [style = bold, label=""];
3->11 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
