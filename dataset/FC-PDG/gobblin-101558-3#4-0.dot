digraph {
15 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblinCompactionJob(\"workunit_stream\",basePath.getAbsolutePath().toString())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testWorkUnitStreamForAllFailures['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "File jobDir = new File(basePath,path)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "GenericRecord r1 = createRandomRecord()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String path = \"Identity/MemberAccount/minutely/2017/04/03/\" + i + \"/20_30/run_2017-04-03-10-20\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "File basePath = Files.createTempDir()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblinForAllFailures(\"workunit_stream_all_failure\",basePath.getAbsolutePath().toString())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int i = 22@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"workunit_stream\",basePath.getAbsolutePath().toString())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "++i@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testWorkUnitStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Assert.assertFalse(result.isSuccessful())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "basePath.deleteOnExit()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "JobExecutionResult result = embeddedGobblin.run()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testWorkUnitStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < 24@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "writeFileWithContent(jobDir,\"file_random\",r1,20)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = 1@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
8->11 [style = solid, label="i"];
16->0 [style = bold, label=""];
2->19 [style = dashed, label="0"];
4->17 [style = bold, label=""];
11->1 [style = bold, label=""];
7->10 [style = bold, label=""];
0->19 [style = bold, label=""];
11->1 [style = dotted, label="true"];
17->11 [style = solid, label="i"];
0->2 [style = bold, label=""];
11->12 [style = dotted, label="true"];
14->10 [style = bold, label=""];
1->9 [style = solid, label="path"];
11->9 [style = dotted, label="true"];
3->12 [style = bold, label=""];
12->6 [style = bold, label=""];
13->15 [style = dashed, label="0"];
9->12 [style = solid, label="jobDir"];
1->9 [style = bold, label=""];
11->15 [style = bold, label=""];
10->5 [style = bold, label=""];
17->1 [style = solid, label="i"];
18->10 [style = bold, label=""];
11->6 [style = dotted, label="true"];
8->1 [style = solid, label="i"];
15->0 [style = bold, label=""];
6->11 [style = bold, label=""];
11->13 [style = bold, label=""];
5->4 [style = bold, label=""];
10->9 [style = solid, label="basePath"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
8->17 [style = dashed, label="0"];
4->12 [style = solid, label="r1"];
11->3 [style = dotted, label="true"];
8->11 [style = bold, label=""];
13->0 [style = bold, label=""];
13->16 [style = dashed, label="0"];
17->11 [style = bold, label=""];
}
