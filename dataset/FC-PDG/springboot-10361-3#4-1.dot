digraph {
9 [style = filled, label = "verify(influxDB).ping()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Pong pong = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(health.getStatus()).isEqualTo(Status.UP)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "InfluxDbHealthIndicator healthIndicator = new InfluxDbHealthIndicator(influxDB)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "influxDbIsUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Health health = healthIndicator.health()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "influxDbIsDown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "verify(influxDB).ping()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "given(pong.getVersion()).willReturn(\"0.9\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(health.getStatus()).isEqualTo(Status.DOWN)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "influxDbIsUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "InfluxDB influxDB = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "given(influxDB.ping()).willReturn(pong)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat((String)health.getDetails().get(\"error\")).contains(\"Connection failed\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(health.getDetails().get(\"version\")).isEqualTo(\"0.9\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "given(influxDB.ping()).willThrow(new InfluxDBException(new IOException(\"Connection failed\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
4->14 [style = bold, label=""];
15->13 [style = bold, label=""];
1->5 [style = dashed, label="0"];
13->4 [style = solid, label="influxDB"];
11->4 [style = bold, label=""];
7->0 [style = bold, label=""];
2->9 [style = bold, label=""];
10->7 [style = bold, label=""];
13->11 [style = bold, label=""];
4->5 [style = solid, label="influxDB"];
8->7 [style = bold, label=""];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
5->6 [style = bold, label=""];
0->4 [style = bold, label=""];
2->6 [style = dashed, label="0"];
1->2 [style = bold, label=""];
7->3 [style = solid, label="pong"];
3->11 [style = dashed, label="0"];
14->5 [style = bold, label=""];
6->12 [style = bold, label=""];
}
