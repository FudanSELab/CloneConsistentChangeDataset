digraph {
1 [style = filled, label = "assertEquals(Rectangle.EMPTY,wkt.fromWKT(\"bbox EMPTY)\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"circle (20.0 10.0 15.0)\",wkt.toWKT(new Circle(20,10,15)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"bbox EMPTY\",wkt.toWKT(Rectangle.EMPTY))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"circle EMPTY\",wkt.toWKT(Circle.EMPTY))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(new Rectangle(10,20,40,30),wkt.fromWKT(\"BBOX (10.0, 20.0, 40.0, 30.0)\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(new Circle(20,10,15),wkt.fromWKT(\"circle (20.0 10.0 15.0)\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Circle.EMPTY,wkt.fromWKT(\"circle EMPTY)\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(\"circle (20.0 10.0 15.0 25.0)\",wkt.toWKT(new Circle(20,10,25,15)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "WellKnownText wkt = new WellKnownText(true,new GeographyValidator(true))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testBasicSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testBasicSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(new Rectangle(10,20,40,30),wkt.fromWKT(\"bbox (10.0, 20.0, 40.0, 30.0)\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"BBOX (10.0, 20.0, 40.0, 30.0)\",wkt.toWKT(new Rectangle(10,20,40,30)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(Rectangle.EMPTY,wkt.fromWKT(\"BBOX EMPTY)\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(new Circle(20,10,25,15),wkt.fromWKT(\"circle (20.0 10.0 15.0 25.0)\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"bbox (10.0, 20.0, 40.0, 30.0)\",wkt.toWKT(new Rectangle(10,20,40,30)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testBasicSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(\"BBOX EMPTY\",wkt.toWKT(Rectangle.EMPTY))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
3->6 [style = dashed, label="0"];
1->14 [style = dashed, label="0"];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
14->17 [style = bold, label=""];
12->16 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
9->6 [style = bold, label=""];
8->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->0 [style = bold, label=""];
5->0 [style = bold, label=""];
2->9 [style = dashed, label="0"];
6->10 [style = bold, label=""];
17->15 [style = bold, label=""];
4->1 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
13->14 [style = bold, label=""];
}
