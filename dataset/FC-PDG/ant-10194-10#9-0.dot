digraph {
13 [style = filled, label = "buildRule.executeTarget(\"emptydircopyandremove\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFileIsNotPresent(f)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertFileIsPresent(c)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testCopyNoRemoveSelectors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testEmptyDirCopyAndRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(buildRule.getFullLog(),not(containsString(\"Removing orphan file:\")))@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertContains(\"Removed 2 dangling directories from\",buildRule.getFullLog())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertContains(\"NO dangling file to remove from\",buildRule.getFullLog())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\"@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCopyNoRemoveSelectors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "String c = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFileIsPresent(f)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFileIsPresent(d)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFileIsNotPresent(d)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "buildRule.executeTarget(\"copynoremove-selectors\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(buildRule.getFullLog().contains(\"Removing orphan directory:\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
16->14 [style = solid, label="c"];
1->10 [style = bold, label=""];
6->4 [style = bold, label=""];
2->5 [style = bold, label=""];
2->10 [style = dashed, label="0"];
14->0 [style = bold, label=""];
4->1 [style = bold, label=""];
12->9 [style = bold, label=""];
1->2 [style = solid, label="d"];
0->12 [style = bold, label=""];
7->4 [style = bold, label=""];
9->17 [style = bold, label=""];
3->0 [style = bold, label=""];
16->14 [style = bold, label=""];
1->10 [style = solid, label="d"];
3->8 [style = bold, label=""];
0->9 [style = dashed, label="0"];
15->13 [style = bold, label=""];
17->11 [style = bold, label=""];
13->1 [style = bold, label=""];
4->13 [style = dashed, label="0"];
5->3 [style = solid, label="f"];
5->3 [style = bold, label=""];
3->12 [style = dashed, label="0"];
0->12 [style = solid, label="f"];
1->2 [style = bold, label=""];
0->8 [style = dashed, label="0"];
}
