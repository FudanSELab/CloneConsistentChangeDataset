digraph {
6 [style = filled, label = "assertThat(actualIterator.next().getLogicTable(),is(\"t_order\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(broadcastTables.containsAll(Arrays.asList(\"t_dict\",\"t_address\")))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(actualBindingTableRuleConfigurations.size(),is(4))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertThat(actualIterator.next().getLogicTable(),is(\"t_user_detail\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\",\"t_order, t_order_item\")))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertBindingRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertBroadcastRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(actualBroadcastTableConfigurations.size(),is(2))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigurations.iterator()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertBindingRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Iterator<ShardingTableRuleConfiguration> actualIterator = actualBindingTableRuleConfigus.iterator()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Collection<String> broadcastTables = broadcastRule.getBroadcastTables()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Iterator<ShardingTableRuleConfiguration> actualIterator = actualBroadcastTableConfigurations.iterator()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(actualIterator.next().getLogicTable(),is(\"t_user\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(actualIterator.next().getLogicTable(),is(\"t_order_item\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Collection<String> actualBindingTableGroups = broadcastRule.getBindingTableGroups()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigurations = bindingRule.getTables()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertThat(actualBindingTableGroups.size(),is(1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Collection<String> actualBindingTableGroups = bindingRule.getBindingTableGroups()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(broadcastTables.size(),is(2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Collection<ShardingTableRuleConfiguration> actualBindingTableRuleConfigus = bindingRule.getTables()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Collection<ShardingTableRuleConfiguration> actualBroadcastTableConfigurations = broadcastRule.getTables()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(actualBindingTableGroups.size(),is(2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(actualBindingTableGroups.containsAll(Arrays.asList(\"t_order, t_order_item\")))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(actualBindingTableRuleConfigus.size(),is(4))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23->16 [style = bold, label=""];
18->24 [style = bold, label=""];
5->14 [style = dashed, label="0"];
4->17 [style = dashed, label="0"];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
8->19 [style = bold, label=""];
21->15 [style = bold, label=""];
11->6 [style = bold, label=""];
1->18 [style = dashed, label="0"];
9->10 [style = bold, label=""];
10->22 [style = dashed, label="0"];
16->22 [style = bold, label=""];
0->7 [style = bold, label=""];
20->21 [style = bold, label=""];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
2->12 [style = dashed, label="0"];
15->17 [style = bold, label=""];
22->18 [style = bold, label=""];
13->12 [style = bold, label=""];
3->2 [style = bold, label=""];
2->21 [style = dashed, label="0"];
19->23 [style = bold, label=""];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
12->14 [style = bold, label=""];
4->11 [style = dashed, label="0"];
10->1 [style = bold, label=""];
5->15 [style = dashed, label="0"];
14->11 [style = bold, label=""];
2->5 [style = bold, label=""];
}
