digraph {
18 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(TIME '00:20:10')\").returns(\"EXPR$0=1210000\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(TIME '00:20:00')\").returns(\"EXPR$0=1200000\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 1, \"s\" => 0))\").returns(\"EXPR$0=0\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(TIME '01:20:00')\").returns(\"EXPR$0=4800000\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(DATE '1970-01-15')\").returns(\"EXPR$0=1209600000\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(TIMESTAMP '2003-04-11 00:00:00')\").returns(\"EXPR$0=1050019200000\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 'hello', \"s\" => 'x'))\").throws_(\"java.lang.NumberFormatException: For input string: \"hello\"\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 1, \"s\" => 0))\").throws_(\"No match found for function signature \" + \"MY_LEFT(n => <NUMERIC>, s => <NUMERIC>)\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testUdfArgumentName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(TIMESTAMP '2003-04-18 01:20:00')\").returns(\"EXPR$0=1050628800000\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(DATE '2002-08-11')\").returns(\"EXPR$0=1029024000000\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testUdfArgumentName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3))\").throws_(\"No match found for function signature MY_LEFT(n => <NUMERIC>)\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3, \"s\" => 'hello'))\").returns(\"EXPR$0=hel\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 1 + 2, \"s\" => 'hello'))\").returns(\"EXPR$0=hel\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CalciteAssert.AssertThat with = withUdf()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"s\" => 'hello', \"n\" => 3))\").returns(\"EXPR$0=hel\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3, \"n\" => 2, \"s\" => 'hello'))\").throws_(\"Duplicate argument name 'n'\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(DATE '2003-04-11')\").returns(\"EXPR$0=1050019200000\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testDateAndTimestamp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "with.query(\"values \"adhoc\".\"toLong\"(TIMESTAMP '2003-04-11 00:00:06')\").returns(\"EXPR$0=1050019206000\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3, \"m\" => 2, \"s\" => 'h'))\").throws_(\"No match found for function signature \" + \"MY_LEFT(n => <NUMERIC>, m => <NUMERIC>, s => <CHARACTER>)\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => '1', \"s\" => 'x'))\").returns(\"EXPR$0=x\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"s\" => 'hello'))\").throws_(\"No match found for function signature MY_LEFT(s => <CHARACTER>)\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 'hello', \"s\" => 'x'))\").throws_(\"No match found for function signature \" + \"MY_LEFT(n => <CHARACTER>, s => <CHARACTER>)\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24->10 [style = bold, label=""];
5->10 [style = bold, label=""];
10->20 [style = bold, label=""];
20->17 [style = bold, label=""];
2->20 [style = dashed, label="0"];
12->11 [style = bold, label=""];
14->10 [style = bold, label=""];
8->12 [style = dashed, label="0"];
16->23 [style = bold, label=""];
3->12 [style = bold, label=""];
15->19 [style = bold, label=""];
0->17 [style = dashed, label="0"];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
6->4 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
18->22 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
11->13 [style = bold, label=""];
17->15 [style = bold, label=""];
8->9 [style = bold, label=""];
21->16 [style = bold, label=""];
9->11 [style = dashed, label="0"];
10->2 [style = bold, label=""];
23->18 [style = bold, label=""];
19->21 [style = bold, label=""];
}
