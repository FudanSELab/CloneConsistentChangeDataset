digraph {
41 [style = filled, label = "getAliasedMultiTermQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "getAliasedMultiTermQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Query sub@@@42@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "subs.add(((BooleanQuery)lst.get(n)).clauses().get(c).getQuery())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "BooleanQuery booleanQuery = (BooleanQuery)boostQuery.getQuery()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "throw unknownField@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Query sub@@@14@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<Query> lst = getMultiTermQueries(a)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "lst == null || lst.size() == 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "FieldType ft = schema.getFieldTypeNoEx(field)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return new DisjunctionMaxQuery(lst,a.tie)@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "getAliasedQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "q.add(newBooleanClause(new DisjunctionMaxQuery(subs,a.tie),BooleanClause.Occur.SHOULD))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<Query> lst = getQueries(a)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "q.add(sub,BooleanClause.Occur.SHOULD)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "exceptions@@@49@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "c < firstBooleanQuery.clauses().size()@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "makeDismax@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "BooleanQuery firstBooleanQuery = firstQuery instanceof BoostQuery? (BooleanQuery)((BoostQuery)firstQuery).getQuery(): (BooleanQuery)firstQuery@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "return QueryUtils.build(q,parser)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "return getQuery()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.validateCyclicAliasing(field)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "lst@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "int c = 0@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "return getQuery()@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "return q.build()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "subs.add(new BoostQuery(booleanQuery.clauses().get(c).getQuery(),boostQuery.getBoost()))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "n < lst.size()@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int n = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Query firstQuery = lst.get(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "q.add(sub,BooleanClause.Occur.SHOULD)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return q.build()@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "(firstQuery instanceof BooleanQuery || (firstQuery instanceof BoostQuery && ((BoostQuery)firstQuery).getQuery() instanceof BooleanQuery)) && allSameQueryStructure(lst)@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "exceptions@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "lst == null || lst.size() == 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return q.build()@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "ft == null && null == MagicFieldName.get(field)@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<Query> subs = new ArrayList<>(lst.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "a != null@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Query sub@@@42@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "return getQuery()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Alias a = aliases.get(field)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "return QueryUtils.build(q,parser)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "FieldType ft = schema.getFieldTypeNoEx(field)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "throw unknownField@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "++n@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "lst@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "DisjunctionMaxQuery q = new DisjunctionMaxQuery(lst,a.tie)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "return getQuery()@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "subs.clear()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ft == null && null == MagicFieldName.get(field)@@@51@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "++c@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "lst.get(n) instanceof BoostQuery@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BoostQuery boostQuery = (BoostQuery)lst.get(n)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "return q@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
32->38 [style = dotted, label="false"];
34->20 [style = bold, label=""];
5->9 [style = bold, label=""];
7->25 [style = dotted, label="false"];
23->7 [style = solid, label="n"];
24->9 [style = solid, label="firstQuery"];
1->27 [style = bold, label=""];
42->57 [style = dotted, label="true"];
21->8 [style = bold, label=""];
11->29 [style = bold, label=""];
14->17 [style = bold, label=""];
51->53 [style = bold, label=""];
52->55 [style = bold, label=""];
15->33 [style = dotted, label="true"];
45->48 [style = bold, label=""];
28->40 [style = solid, label="q"];
47->53 [style = dotted, label="true"];
56->54 [style = bold, label=""];
21->56 [style = dotted, label="true"];
8->36 [style = bold, label=""];
20->38 [style = dashed, label="0"];
22->16 [style = dotted, label="true"];
21->8 [style = dotted, label="false"];
47->51 [style = bold, label=""];
30->14 [style = bold, label=""];
56->54 [style = dotted, label="true"];
2->32 [style = bold, label=""];
32->18 [style = bold, label=""];
51->53 [style = solid, label="ft"];
32->26 [style = dotted, label="false"];
42->32 [style = dotted, label="true"];
53->48 [style = bold, label=""];
2->3 [style = dotted, label="true"];
11->7 [style = dotted, label="true"];
21->42 [style = dotted, label="true"];
22->29 [style = dotted, label="true"];
21->44 [style = bold, label=""];
28->5 [style = bold, label=""];
22->19 [style = dotted, label="true"];
32->24 [style = dotted, label="true"];
42->46 [style = bold, label=""];
22->23 [style = dotted, label="true"];
27->12 [style = bold, label=""];
47->48 [style = bold, label=""];
12->21 [style = bold, label=""];
32->20 [style = dotted, label="false"];
7->13 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
2->56 [style = dashed, label="0"];
21->32 [style = dotted, label="true"];
4->28 [style = dotted, label="true"];
32->18 [style = dotted, label="false"];
57->32 [style = bold, label=""];
27->10 [style = solid, label="a"];
27->21 [style = solid, label="a"];
4->22 [style = dotted, label="true"];
33->36 [style = bold, label=""];
35->15 [style = solid, label="ft"];
42->52 [style = dotted, label="true"];
27->44 [style = solid, label="a"];
47->51 [style = dotted, label="true"];
10->2 [style = bold, label=""];
21->48 [style = dotted, label="false"];
34->38 [style = bold, label=""];
4->37 [style = dotted, label="false"];
19->22 [style = bold, label=""];
0->22 [style = solid, label="c"];
15->33 [style = bold, label=""];
22->6 [style = bold, label=""];
15->36 [style = bold, label=""];
21->47 [style = bold, label=""];
4->5 [style = dotted, label="true"];
44->56 [style = bold, label=""];
41->27 [style = bold, label=""];
32->34 [style = dotted, label="true"];
32->4 [style = dotted, label="true"];
35->15 [style = bold, label=""];
8->35 [style = dotted, label="true"];
42->43 [style = dotted, label="false"];
22->16 [style = bold, label=""];
18->34 [style = bold, label=""];
2->3 [style = bold, label=""];
11->17 [style = dotted, label="true"];
8->15 [style = dotted, label="true"];
21->2 [style = dotted, label="true"];
23->11 [style = solid, label="n"];
6->40 [style = dashed, label="0"];
16->23 [style = bold, label=""];
21->10 [style = dotted, label="true"];
53->45 [style = dotted, label="true"];
25->17 [style = bold, label=""];
8->35 [style = bold, label=""];
10->2 [style = solid, label="lst"];
32->31 [style = dotted, label="false"];
5->29 [style = solid, label="subs"];
54->42 [style = bold, label=""];
29->19 [style = bold, label=""];
42->57 [style = bold, label=""];
18->38 [style = solid, label="q"];
24->4 [style = solid, label="firstQuery"];
44->57 [style = solid, label="lst"];
32->39 [style = dotted, label="false"];
23->11 [style = bold, label=""];
21->47 [style = dotted, label="false"];
23->13 [style = solid, label="n"];
57->32 [style = solid, label="q"];
22->40 [style = bold, label=""];
44->56 [style = solid, label="lst"];
7->13 [style = bold, label=""];
4->6 [style = dotted, label="true"];
42->46 [style = dotted, label="false"];
9->0 [style = bold, label=""];
10->37 [style = solid, label="lst"];
4->40 [style = dotted, label="true"];
10->44 [style = dashed, label="0"];
22->11 [style = dotted, label="true"];
13->30 [style = bold, label=""];
49->27 [style = bold, label=""];
46->52 [style = bold, label=""];
4->28 [style = bold, label=""];
56->42 [style = bold, label=""];
10->4 [style = solid, label="lst"];
24->4 [style = bold, label=""];
42->55 [style = dotted, label="false"];
4->37 [style = bold, label=""];
21->44 [style = dotted, label="true"];
0->22 [style = bold, label=""];
7->25 [style = bold, label=""];
42->50 [style = dotted, label="false"];
4->9 [style = dotted, label="true"];
3->32 [style = bold, label=""];
7->30 [style = dotted, label="true"];
32->24 [style = bold, label=""];
21->36 [style = dotted, label="false"];
53->45 [style = bold, label=""];
11->7 [style = bold, label=""];
17->11 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
