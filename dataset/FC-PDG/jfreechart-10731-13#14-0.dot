digraph {
15 [style = filled, label = "assertFalse(s1.equals(s2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s2.add(new Task(\"T1\",new Date(1),new Date(2)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "c1.add(s1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s1.add(new Task(\"T2\",new Date(11),new Date(22)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "s1.add(new Task(\"T1\",new Date(1),new Date(2)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "s1.add(new Task(\"T3\",new Date(22),new Date(33)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TaskSeries<String> s1 = new TaskSeries<>(\"S\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "c1.add(s2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(s1.equals(s2))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "TaskSeries<String> s2 = CloneUtils.clone(s1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TaskSeriesCollection<String,String> c1 = new TaskSeriesCollection<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "TaskSeriesCollection c1 = new TaskSeriesCollection()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "TaskSeriesCollection<String,String> c2 = TestUtils.serialised(c1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TaskSeriesCollection c2 = TestUtils.serialised(c1)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(c1,c2)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(s1.equals(s2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "s2.add(new Task(\"T2\",new Date(11),new Date(22)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(s1.getClass() == s2.getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "s2.add(new Task(\"T3\",new Date(22),new Date(33)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TaskSeries<String> s2 = new TaskSeries<>(\"S\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(s1 != s2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
23->20 [style = bold, label=""];
19->18 [style = bold, label=""];
12->11 [style = solid, label="c2"];
18->23 [style = bold, label=""];
13->12 [style = solid, label="c1"];
22->15 [style = solid, label="s2"];
22->19 [style = bold, label=""];
9->8 [style = solid, label="c1"];
6->20 [style = dashed, label="0"];
12->11 [style = bold, label=""];
9->11 [style = solid, label="c1"];
8->12 [style = dashed, label="0"];
11->17 [style = dashed, label="0"];
16->17 [style = bold, label=""];
10->22 [style = dashed, label="0"];
15->16 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = solid, label="c1"];
2->12 [style = bold, label=""];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
1->22 [style = bold, label=""];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
7->9 [style = bold, label=""];
22->19 [style = solid, label="s2"];
4->19 [style = solid, label="s1"];
10->5 [style = bold, label=""];
0->1 [style = bold, label=""];
4->6 [style = solid, label="s1"];
9->13 [style = dashed, label="0"];
22->17 [style = solid, label="s2"];
22->23 [style = solid, label="s2"];
5->7 [style = bold, label=""];
21->4 [style = bold, label=""];
13->6 [style = bold, label=""];
8->11 [style = solid, label="c2"];
1->10 [style = bold, label=""];
8->11 [style = bold, label=""];
20->15 [style = bold, label=""];
10->2 [style = solid, label="s2"];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
4->22 [style = solid, label="s1"];
}
