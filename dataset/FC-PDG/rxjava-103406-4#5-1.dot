digraph {
21 [style = filled, label = "values.clear()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "buf.next(5)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "buf.complete()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buf.collect(values)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(Arrays.asList(1,2),values)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.clear()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(3,buf.size)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sizedTruncation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "sizedTruncation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "buf.next(3)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(Arrays.asList(4,5),values)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "buf.collect(values)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sizedTruncation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "buf.next(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "buf.next(2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(Arrays.asList(3,4),values)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "buf.collect(values)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertFalse(buf.hasCompleted())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(buf.hasCompleted())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<Integer> values = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "buf.collect(values)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<Integer> values = new ArrayList<Integer>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "buf.next(4)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SizeBoundReplayBuffer<Integer> buf = new SizeBoundReplayBuffer<>(2,false)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "values.clear()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(Arrays.asList(4,5),values)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertFalse(buf.hasError())@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SizeBoundReplayBuffer<Integer> buf = new SizeBoundReplayBuffer<Integer>(2,false)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
11->16 [style = bold, label=""];
27->12 [style = bold, label=""];
9->2 [style = bold, label=""];
0->19 [style = bold, label=""];
16->10 [style = bold, label=""];
6->23 [style = bold, label=""];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
26->9 [style = solid, label="values"];
12->17 [style = bold, label=""];
26->13 [style = solid, label="values"];
22->21 [style = bold, label=""];
17->18 [style = solid, label="values"];
26->1 [style = solid, label="values"];
17->7 [style = solid, label="values"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
26->11 [style = solid, label="values"];
21->18 [style = bold, label=""];
14->7 [style = bold, label=""];
8->1 [style = bold, label=""];
26->18 [style = solid, label="values"];
26->7 [style = solid, label="values"];
20->8 [style = bold, label=""];
12->25 [style = dashed, label="0"];
19->14 [style = bold, label=""];
5->12 [style = bold, label=""];
24->25 [style = bold, label=""];
15->0 [style = bold, label=""];
17->13 [style = solid, label="values"];
25->26 [style = bold, label=""];
17->11 [style = solid, label="values"];
18->9 [style = bold, label=""];
26->15 [style = solid, label="values"];
17->26 [style = dashed, label="0"];
13->22 [style = bold, label=""];
17->15 [style = solid, label="values"];
4->11 [style = bold, label=""];
17->9 [style = solid, label="values"];
17->1 [style = solid, label="values"];
26->20 [style = bold, label=""];
17->20 [style = bold, label=""];
26->16 [style = solid, label="values"];
17->16 [style = solid, label="values"];
}
