digraph {
8 [style = filled, label = "FileUtils.write(new File(d,\"1.groovy\"),\"hudson.util.BootFailureTest.runRecord << '1'\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "runRecord = new ArrayList<String>()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "FileUtils.write(new File(d,\"2.groovy\"),\"hudson.util.BootFailureTest.runRecord << '2'\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Collections.singletonList(\"1\"),runRecord)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "runRecord = new ArrayList<>()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(2,bootFailures(home))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "interruptedStartup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,bootFailures(home))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(j.newHudson())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "FileUtils.write(new File(home,\"boot-failure.groovy\"),\"hudson.util.BootFailureTest.problem = exception\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(,problem.getCause().getClass())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(BootFailure.getBootFailureFile(home).exists())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Arrays.asList(\"1\",\"2\"),runRecord)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNull(j.newHudson())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "makeBootFail = false@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final File home = tmpDir.newFolder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "File d = new File(home,\"boot-failure.groovy.d\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "j.with(new HudsonHomeLoader(){@Override public File allocate(){return home}})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "problem = null@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "makeBootFail = true@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull(j.newHudson())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "d.mkdirs()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "runBootFailureScript['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "runBootFailureScript['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "j.newHudson()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->20 [style = dashed, label="0"];
9->15 [style = solid, label="runRecord"];
20->17 [style = bold, label=""];
15->14 [style = bold, label=""];
21->0 [style = bold, label=""];
11->3 [style = solid, label="d"];
0->2 [style = solid, label="home"];
10->19 [style = bold, label=""];
8->3 [style = bold, label=""];
3->6 [style = bold, label=""];
9->17 [style = bold, label=""];
19->11 [style = bold, label=""];
11->12 [style = bold, label=""];
0->19 [style = solid, label="home"];
7->20 [style = bold, label=""];
23->0 [style = bold, label=""];
0->11 [style = solid, label="home"];
8->22 [style = bold, label=""];
20->15 [style = solid, label="runRecord"];
7->9 [style = bold, label=""];
6->4 [style = bold, label=""];
11->8 [style = solid, label="d"];
0->10 [style = bold, label=""];
17->2 [style = bold, label=""];
16->1 [style = bold, label=""];
0->10 [style = solid, label="home"];
12->8 [style = bold, label=""];
2->15 [style = bold, label=""];
0->5 [style = solid, label="home"];
5->7 [style = bold, label=""];
14->18 [style = bold, label=""];
22->24 [style = bold, label=""];
4->5 [style = bold, label=""];
13->0 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
