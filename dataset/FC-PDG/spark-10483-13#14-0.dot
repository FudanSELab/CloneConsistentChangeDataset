digraph {
14 [style = filled, label = "model.transform(dataset,model.threshold().w(0.0),model.probabilityCol().w(\"myProb\")).registerTempTable(\"predNotAllZero\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assert(parent.getThresholds()(0( == 0.4)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "LinearRegression parent2 = (LinearRegression)model2.parent()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "LogisticRegression lr = new LogisticRegression().setMaxIter(10).setRegParam(1.0).setThreshold(0.6).setProbabilityCol(\"myProbability\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assert(model2.getProbabilityCol().equals(\"theProb\"))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(1.0,parent.getRegParam(),0.0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assert(model2.getThreshold() == 0.4)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(10,parent.getMaxIter())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(10,parent.getMaxIter())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "r.getDouble(0) != 0.0@@@22@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "Assert.assertEquals(\"theProb\",model2.getProbabilityCol())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "LogisticRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.threshold().w(0.4),lr.probabilityCol().w(\"theProb\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(1.0,parent.getRegParam(),eps)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assert(parent.getMaxIter() == 10)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(0.1,parent2.getRegParam(),eps)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "LogisticRegression parent = (LogisticRegression)model.parent()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "model.setThreshold(1.0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "LinearRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.predictionCol().w(\"thePred\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertEquals(0.0,r.getDouble(0),eps)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assert(parent2.getRegParam() == 0.1)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assert(parent.getThresholds()(1( == 0.6)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(0.4,parent.getThresholds()(0(,eps)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(5,parent2.getMaxIter())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assert(parent.getThreshold() == 0.6)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "r.getDouble(0) != 0.0@@@22@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "LogisticRegressionModel model = lr.fit(dataset)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(0.1,parent2.getRegParam(),0.0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assert(r.getDouble(0) == 0.0)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(0.6,parent.getThresholds()(1(,eps)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "logisticRegressionWithSetters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "LinearRegression lr = new LinearRegression().setMaxIter(10).setRegParam(1.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "DataFrame predAllZero = jsql.sql(\"SELECT prediction, myProbability FROM predAllZero\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(0.4,parent2.getThreshold(),eps)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(0.6,model.getThreshold(),eps)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "foundNonZero = true@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "logisticRegressionWithSetters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assert(foundNonZero)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assert(parent2.getThreshold() == 0.4)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "LinearRegression parent = (LinearRegression)model.parent()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "LinearRegressionModel model = lr.fit(dataset)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(foundNonZero)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assert(parent2.getMaxIter() == 5)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "DataFrame predNotAllZero = jsql.sql(\"SELECT prediction, myProb FROM predNotAllZero\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "LogisticRegression parent2 = (LogisticRegression)model2.parent()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assert(model.getThreshold() == 0.6)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "model.transform(dataset).registerTempTable(\"predAllZero\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(0.6,parent.getThreshold(),eps)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(0.4,model2.getThreshold(),eps)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(\"thePred\",model2.getPredictionCol())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "linearRegressionWithSetters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assert(parent.getRegParam() == 1.0)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(5,parent2.getMaxIter())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "boolean foundNonZero = false@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
11->12 [style = solid, label="parent"];
3->40 [style = dashed, label="0"];
7->9 [style = solid, label="foundNonZero"];
22->29 [style = dashed, label="0"];
49->51 [style = bold, label=""];
10->27 [style = dashed, label="0"];
46->48 [style = bold, label=""];
41->20 [style = bold, label=""];
6->35 [style = dashed, label="0"];
3->5 [style = bold, label=""];
23->13 [style = bold, label=""];
8->51 [style = dashed, label="0"];
51->47 [style = bold, label=""];
15->33 [style = dashed, label="0"];
40->31 [style = bold, label=""];
27->33 [style = bold, label=""];
13->14 [style = bold, label=""];
19->28 [style = dashed, label="0"];
9->30 [style = dashed, label="0"];
7->1 [style = bold, label=""];
7->37 [style = bold, label=""];
48->44 [style = bold, label=""];
2->9 [style = bold, label=""];
42->48 [style = solid, label="parent"];
5->17 [style = bold, label=""];
43->46 [style = bold, label=""];
35->28 [style = bold, label=""];
16->34 [style = dashed, label="0"];
18->20 [style = bold, label=""];
22->18 [style = bold, label=""];
2->9 [style = solid, label="foundNonZero"];
5->43 [style = dashed, label="0"];
2->30 [style = solid, label="foundNonZero"];
11->42 [style = dashed, label="0"];
24->7 [style = bold, label=""];
44->45 [style = bold, label=""];
4->22 [style = bold, label=""];
21->23 [style = bold, label=""];
17->39 [style = dashed, label="0"];
47->42 [style = bold, label=""];
2->1 [style = bold, label=""];
37->30 [style = bold, label=""];
42->52 [style = bold, label=""];
0->12 [style = bold, label=""];
7->30 [style = solid, label="foundNonZero"];
25->47 [style = dashed, label="0"];
26->8 [style = bold, label=""];
13->38 [style = dashed, label="0"];
1->9 [style = bold, label=""];
52->43 [style = bold, label=""];
11->3 [style = bold, label=""];
39->32 [style = bold, label=""];
5->31 [style = dashed, label="0"];
36->8 [style = bold, label=""];
37->2 [style = bold, label=""];
1->2 [style = bold, label=""];
30->0 [style = bold, label=""];
31->39 [style = bold, label=""];
17->4 [style = bold, label=""];
3->52 [style = dashed, label="0"];
33->35 [style = bold, label=""];
10->15 [style = bold, label=""];
9->0 [style = bold, label=""];
16->10 [style = bold, label=""];
18->41 [style = dashed, label="0"];
29->41 [style = bold, label=""];
12->34 [style = bold, label=""];
15->6 [style = bold, label=""];
12->16 [style = bold, label=""];
6->19 [style = bold, label=""];
11->40 [style = bold, label=""];
38->14 [style = bold, label=""];
20->21 [style = bold, label=""];
32->29 [style = bold, label=""];
4->32 [style = dashed, label="0"];
20->50 [style = dashed, label="0"];
25->11 [style = bold, label=""];
45->50 [style = bold, label=""];
23->38 [style = bold, label=""];
2->37 [style = bold, label=""];
2->30 [style = bold, label=""];
1->2 [style = dotted, label="true"];
37->2 [style = dotted, label="true"];
8->25 [style = bold, label=""];
34->27 [style = bold, label=""];
}
