digraph {
12 [style = filled, label = "final RexProgram compensatingRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final MutableRel qInput0 = query.getLeft()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return null@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compensatingCalc)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final RexProgram compensatingRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final List<RexNode> qInput0Projs = qInput0Explained.right@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int i = 0@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "!canPullUpFilterUnderJoin(joinRelType,null,qInput1Cond)@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < query.rowType.getFieldCount()@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final JoinRelType joinRelType = sameJoinType(query.joinType,target.joinType)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput1Cond.isAlwaysTrue())@@@15@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "UnifyRuleCall call@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final RexNode qInput1CondShifted = RexUtil.shift(qInput1Cond,fieldCnt(qInput0.getInput()))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final MutableJoin target = (MutableJoin)call.target@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,qInput1Projs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput0Explained = explainCalc(qInput0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final RexNode shifted = RexUtil.shift(qInput1Projs.get(i - fieldCnt(qInput0)),qInput0.rowType.getFieldCount())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "return null@@@58@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i < fieldCnt(qInput0)@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final List<RexNode> qInput1Projs = qInput1Explained.right@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RexNode shifted = RexUtil.shift(qInput1Projs.get(i - fieldCnt(qInput0)),fieldCnt(qInput0.getInput()))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "final RexNode compenCond = RexUtil.composeConjunction(rexBuilder,ImmutableList.of(qInput0Cond,qInput1CondShifted))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue() && qInput1Cond.isAlwaysTrue())@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "return null@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "i++@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "splitted != null && splitted.isAlwaysTrue()@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final MutableCalc qInput0 = (MutableCalc)query.getLeft()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "compenProjs.add(shifted)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "final RexNode qInput0Cond = qInput0Explained.left@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return null@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "compenProjs.add(qInput0Projs.get(i))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final MutableJoin query = (MutableJoin)call.query@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RexBuilder rexBuilder = call.getCluster().getRexBuilder()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "joinRelType == null@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput1Explained = explainCalc(qInput1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final RexNode splitted = splitFilter(call.getSimplify(),newQueryJoinCond,target.condition)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!referenceByMapping(query.condition,identityProjects,qInput1Projs)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RexNode qInput1Cond = qInput1Explained.left@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final MutableCalc qInput1 = (MutableCalc)query.getRight()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final MutableCalc compensatingCalc = MutableCalc.of(target,compensatingRexProgram)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {return inputRef}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0)return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<RexNode> identityProjects = rexBuilder.identityProjects(qInput0.rowType)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = bold, label=""];
27->38 [style = bold, label=""];
22->15 [style = bold, label=""];
34->9 [style = bold, label=""];
46->25 [style = bold, label=""];
20->11 [style = dotted, label="true"];
38->44 [style = bold, label=""];
31->5 [style = dashed, label="0"];
32->13 [style = solid, label="i"];
39->14 [style = bold, label=""];
35->26 [style = dotted, label="true"];
20->36 [style = dotted, label="true"];
3->10 [style = solid, label="joinRelType"];
21->24 [style = bold, label=""];
34->9 [style = dotted, label="true"];
43->23 [style = solid, label="newQueryJoinCond"];
48->27 [style = bold, label=""];
43->23 [style = bold, label=""];
20->40 [style = dotted, label="true"];
19->22 [style = solid, label="target"];
25->31 [style = bold, label=""];
12->22 [style = solid, label="compensatingRexProgram"];
24->5 [style = dotted, label="false"];
6->12 [style = solid, label="compenCond"];
1->33 [style = bold, label=""];
45->43 [style = bold, label=""];
21->24 [style = dotted, label="true"];
33->18 [style = bold, label=""];
24->21 [style = bold, label=""];
13->21 [style = dotted, label="true"];
6->11 [style = bold, label=""];
23->20 [style = solid, label="splitted"];
10->49 [style = dashed, label="0"];
20->13 [style = dotted, label="true"];
48->24 [style = solid, label="qInput0"];
5->46 [style = solid, label="shifted"];
12->22 [style = bold, label=""];
20->15 [style = dotted, label="true"];
25->21 [style = bold, label=""];
40->37 [style = bold, label=""];
21->13 [style = bold, label=""];
33->7 [style = bold, label=""];
13->25 [style = bold, label=""];
13->21 [style = solid, label="i"];
24->41 [style = dashed, label="0"];
42->26 [style = dotted, label="true"];
50->43 [style = bold, label=""];
32->21 [style = solid, label="i"];
13->25 [style = solid, label="i"];
21->31 [style = solid, label="i"];
13->25 [style = dotted, label="true"];
25->5 [style = solid, label="i"];
31->5 [style = bold, label=""];
7->43 [style = dashed, label="0"];
26->15 [style = solid, label="call"];
0->29 [style = bold, label=""];
19->2 [style = bold, label=""];
21->13 [style = solid, label="i"];
15->36 [style = dashed, label="0"];
7->23 [style = solid, label="newQueryJoinCond"];
45->50 [style = dotted, label="true"];
24->5 [style = bold, label=""];
15->36 [style = solid, label="compensatingCalc"];
5->21 [style = bold, label=""];
25->24 [style = bold, label=""];
19->15 [style = solid, label="target"];
17->34 [style = bold, label=""];
16->48 [style = dashed, label="0"];
13->12 [style = bold, label=""];
31->5 [style = solid, label="shifted"];
21->22 [style = bold, label=""];
7->23 [style = bold, label=""];
33->18 [style = dotted, label="true"];
24->46 [style = dotted, label="false"];
32->25 [style = solid, label="i"];
20->22 [style = dotted, label="true"];
9->1 [style = bold, label=""];
18->7 [style = bold, label=""];
10->1 [style = bold, label=""];
37->13 [style = bold, label=""];
20->6 [style = dotted, label="true"];
15->36 [style = bold, label=""];
40->22 [style = solid, label="compenCond"];
17->10 [style = bold, label=""];
25->21 [style = solid, label="i"];
4->10 [style = bold, label=""];
49->45 [style = bold, label=""];
23->20 [style = bold, label=""];
32->24 [style = solid, label="i"];
3->17 [style = solid, label="joinRelType"];
16->27 [style = bold, label=""];
27->14 [style = bold, label=""];
3->49 [style = solid, label="joinRelType"];
17->4 [style = dotted, label="true"];
48->5 [style = solid, label="qInput0"];
2->3 [style = bold, label=""];
49->9 [style = dotted, label="true"];
37->22 [style = solid, label="compenProjs"];
13->5 [style = solid, label="i"];
25->24 [style = dotted, label="true"];
11->32 [style = bold, label=""];
10->9 [style = dotted, label="true"];
16->31 [style = solid, label="qInput0"];
24->41 [style = bold, label=""];
21->25 [style = solid, label="i"];
6->40 [style = solid, label="qInput1CondShifted"];
22->15 [style = solid, label="compensatingRexProgram"];
11->12 [style = solid, label="compenProjs"];
21->25 [style = dotted, label="true"];
20->37 [style = dotted, label="true"];
32->31 [style = solid, label="i"];
29->19 [style = bold, label=""];
15->28 [style = bold, label=""];
17->49 [style = bold, label=""];
25->5 [style = dotted, label="false"];
13->24 [style = solid, label="i"];
22->15 [style = solid, label="compenCalc"];
44->40 [style = solid, label="qInput0Cond"];
3->17 [style = bold, label=""];
10->9 [style = bold, label=""];
35->30 [style = bold, label=""];
17->4 [style = bold, label=""];
48->38 [style = solid, label="qInput0"];
4->34 [style = bold, label=""];
2->12 [style = solid, label="rexBuilder"];
2->22 [style = solid, label="rexBuilder"];
8->26 [style = dotted, label="true"];
24->41 [style = dotted, label="true"];
36->47 [style = bold, label=""];
27->14 [style = solid, label="qInput1"];
25->41 [style = solid, label="i"];
2->40 [style = solid, label="rexBuilder"];
34->1 [style = bold, label=""];
20->28 [style = bold, label=""];
21->24 [style = solid, label="i"];
20->21 [style = dotted, label="true"];
20->6 [style = bold, label=""];
44->39 [style = bold, label=""];
0->6 [style = solid, label="qInput1Cond"];
20->47 [style = bold, label=""];
13->41 [style = solid, label="i"];
26->36 [style = solid, label="call"];
22->15 [style = dashed, label="0"];
25->31 [style = dotted, label="false"];
14->0 [style = bold, label=""];
4->49 [style = bold, label=""];
42->30 [style = bold, label=""];
45->50 [style = bold, label=""];
6->40 [style = bold, label=""];
9->45 [style = bold, label=""];
25->24 [style = solid, label="i"];
20->12 [style = dotted, label="true"];
41->25 [style = bold, label=""];
30->48 [style = bold, label=""];
32->13 [style = bold, label=""];
30->16 [style = bold, label=""];
49->9 [style = bold, label=""];
13->21 [style = bold, label=""];
5->46 [style = bold, label=""];
20->32 [style = dotted, label="true"];
16->25 [style = solid, label="qInput0"];
}
