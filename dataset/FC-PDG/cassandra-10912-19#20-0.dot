digraph {
34 [style = filled, label = "i++@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(\"val\" + 0))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cachedStore.truncateBlocking()@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(101).build())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testRowCacheRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(((Cell)c).value(),ByteBufferUtil.bytes(values(i())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(r.clustering().get(0),ByteBufferUtil.bytes(values(i(.substring(3)))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(cachedCf.rowCount(),100)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "values(i( = \"val\" + i@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "rub.clustering(String.valueOf(i))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long startRowCacheHits = cachedStore.metric.rowCacheHit.getCount()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(1).build())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRoundTrip['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "rub.build().applyUnsafe()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CacheService.instance.setRowCacheCapacityInMB(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ColumnFamilyStore cachedStore = keyspace.getColumnFamilyStore(cf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(((Cell<?>)c).buffer(),ByteBufferUtil.bytes(\"val\" + 0))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Arrays.sort(values)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "RowUpdateBuilder rub = new RowUpdateBuilder(cachedStore.metadata(),System.currentTimeMillis(),key)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).fromIncl(String.valueOf(210)).toExcl(String.valueOf(215)).build())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE_CACHED)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "i++@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(((Cell)c).value(),ByteBufferUtil.bytes(\"val\" + 0))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(105).build())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "i < 200@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "String values = new String((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DecoratedKey dk = cachedStore.decorateKey(key)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "rub.clustering(String.valueOf(0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "cachedStore.truncateBlocking()@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RowCacheKey rck = new RowCacheKey(cachedStore.metadata(),dk)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(values(i())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "rub.build().applyUnsafe()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "long startRowCacheOutOfRange = cachedStore.metric.rowCacheHitOutOfRange.getCount()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testRoundTrip['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int i = 0@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"rowcachekey\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Row r = (Row)unfiltered@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String cf = \"CachedIntCF\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
31->37 [style = bold, label=""];
19->11 [style = solid, label="rck"];
19->55 [style = bold, label=""];
31->39 [style = solid, label="i"];
39->34 [style = solid, label="i"];
4->15 [style = bold, label=""];
1->20 [style = bold, label=""];
12->42 [style = solid, label="startRowCacheHits"];
55->35 [style = solid, label="values"];
14->17 [style = bold, label=""];
53->54 [style = bold, label=""];
2->9 [style = solid, label="key"];
46->48 [style = bold, label=""];
26->22 [style = bold, label=""];
37->9 [style = bold, label=""];
24->30 [style = bold, label=""];
48->52 [style = bold, label=""];
22->0 [style = bold, label=""];
54->16 [style = bold, label=""];
35->50 [style = bold, label=""];
19->9 [style = bold, label=""];
33->42 [style = bold, label=""];
39->49 [style = bold, label=""];
6->30 [style = solid, label="startRowCacheOutOfRange"];
51->39 [style = bold, label=""];
25->19 [style = bold, label=""];
13->51 [style = dashed, label="0"];
21->16 [style = bold, label=""];
49->4 [style = bold, label=""];
34->51 [style = solid, label="i"];
55->31 [style = bold, label=""];
34->37 [style = solid, label="i"];
2->25 [style = bold, label=""];
46->45 [style = solid, label="i"];
13->14 [style = bold, label=""];
31->37 [style = solid, label="i"];
47->45 [style = solid, label="i"];
16->40 [style = bold, label=""];
7->11 [style = bold, label=""];
9->51 [style = bold, label=""];
47->48 [style = bold, label=""];
36->44 [style = bold, label=""];
2->25 [style = solid, label="key"];
52->45 [style = bold, label=""];
47->43 [style = bold, label=""];
24->40 [style = dashed, label="0"];
37->49 [style = dotted, label="true"];
27->16 [style = bold, label=""];
37->9 [style = dotted, label="true"];
21->45 [style = dashed, label="0"];
41->53 [style = bold, label=""];
1->20 [style = solid, label="cf"];
37->4 [style = dotted, label="true"];
12->54 [style = solid, label="startRowCacheHits"];
8->38 [style = dashed, label="0"];
44->32 [style = bold, label=""];
34->39 [style = solid, label="i"];
5->7 [style = bold, label=""];
55->45 [style = solid, label="values"];
16->27 [style = bold, label=""];
30->33 [style = bold, label=""];
21->27 [style = dashed, label="0"];
38->24 [style = bold, label=""];
6->23 [style = bold, label=""];
37->51 [style = dotted, label="true"];
11->24 [style = bold, label=""];
28->41 [style = bold, label=""];
0->1 [style = bold, label=""];
19->16 [style = solid, label="rck"];
27->10 [style = bold, label=""];
37->34 [style = dotted, label="true"];
37->35 [style = bold, label=""];
23->18 [style = bold, label=""];
17->4 [style = bold, label=""];
15->8 [style = bold, label=""];
4->34 [style = bold, label=""];
39->35 [style = solid, label="values"];
6->7 [style = solid, label="startRowCacheOutOfRange"];
50->7 [style = bold, label=""];
42->36 [style = bold, label=""];
39->49 [style = solid, label="i"];
18->2 [style = bold, label=""];
12->6 [style = bold, label=""];
3->22 [style = bold, label=""];
12->15 [style = solid, label="startRowCacheHits"];
39->45 [style = solid, label="values"];
40->46 [style = bold, label=""];
24->16 [style = bold, label=""];
7->38 [style = bold, label=""];
12->32 [style = solid, label="startRowCacheHits"];
8->5 [style = bold, label=""];
34->37 [style = bold, label=""];
16->21 [style = bold, label=""];
37->39 [style = dotted, label="true"];
20->12 [style = bold, label=""];
45->47 [style = bold, label=""];
25->19 [style = solid, label="dk"];
12->7 [style = solid, label="startRowCacheHits"];
29->22 [style = bold, label=""];
46->47 [style = solid, label="i"];
32->28 [style = bold, label=""];
31->51 [style = solid, label="i"];
9->13 [style = bold, label=""];
}
