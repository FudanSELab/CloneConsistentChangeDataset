digraph {
8 [style = filled, label = "Assert.assertTrue(segmentManager.loadSegment(eachSegment))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testLoadSegment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final List<Future<Boolean>> futures = SEGMENTS.stream().map(null).collect(Collectors.toList())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertResult(SEGMENTS)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final List<Future<Void>> futures = ImmutableList.of(segments.get(0),segments.get(2)).stream().map(null).collect(Collectors.toList())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertResult(ImmutableList.of(segments.get(1),segments.get(3),segments.get(4)))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testLoadSegment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDropSegment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "eachFuture.get()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final List<Future<Boolean>> futures = segments.stream().map(null).collect(Collectors.toList())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(eachFuture.get())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertResult(segments)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->4 [style = bold, label=""];
8->10 [style = bold, label=""];
10->9 [style = bold, label=""];
0->4 [style = dashed, label="0"];
0->2 [style = bold, label=""];
4->2 [style = bold, label=""];
1->5 [style = dashed, label="0"];
9->11 [style = bold, label=""];
1->10 [style = dashed, label="0"];
7->8 [style = bold, label=""];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
2->5 [style = bold, label=""];
}
