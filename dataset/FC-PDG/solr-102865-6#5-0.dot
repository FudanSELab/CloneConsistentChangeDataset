digraph {
39 [style = filled, label = "reorderedDBQsUsingUpdatedValueFromADroppedUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "threadpool.shutdown()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(\"Thread pool didn't terminate within 15 secs\",threadpool.awaitTermination(15,TimeUnit.SECONDS))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "numActiveReplicas++@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "log.info(\"Testing client (testDBQUsingUpdatedFieldFromDroppedUpdate): \" + ((HttpSolrClient)client).getBaseURL())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "numActiveReplicas++@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "log.info(\"RTG with DBQs are not working in append replicas\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "log.info(\"Testing client (Fetch missing test): \" + ((HttpSolrClient)client).getBaseURL())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "clearIndex()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "log.info(\"delayedReorderingFetchesMissingUpdateFromLeaderTest: This test passed fine...\")@@@74@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "{clearIndex()commit()shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().unsetDelay()updates.add(regularDeleteRequest(1))shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",1,5999)shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",4,5998)threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))for (UpdateRequest update : updates){AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())threadpool.submit(task)Thread.sleep(100)}threadpool.shutdown()assertTrue(\"Thread pool didn't terminate within 15 secs\",threadpool.awaitTermination(15,TimeUnit.SECONDS))commit()ZkController zkController = shardToLeaderJetty.get(SHARD1).jetty.getCoreContainer().getZkController()String lirPath = zkController.getLeaderInitiatedRecoveryZnodePath(DEFAULT_TEST_COLLECTION_NAME,SHARD1)assertFalse(zkController.getZkClient().exists(lirPath,true))for (int i = 0 i < 100 i++){Thread.sleep(10)cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)ClusterState state = cloudClient.getZkStateReader().getClusterState()int numActiveReplicas = 0for (Replica rep : state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas())if (rep.getState().equals(Replica.State.ACTIVE)) numActiveReplicas++assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)}for (SolrClient client : new SolrClient((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ed37e5){SolrDocument doc = client.getById(String.valueOf(1),params(\"distrib\",\"false\"))assertNull(\"This doc was supposed to have been deleted, but was: \" + doc,doc)}}@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "log.info(\"reorderedDBQsUsingUpdatedValueFromADroppedUpdate: This test passed fine...\")@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int numActiveReplicas = 0@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",1,6000)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "updates.add(regularDeleteByQueryRequest(\"inplace_updatable_float:14\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "buildRandomIndex(inplace_updatable_float,Collections.singletonList(1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "threadpool.submit(task)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "commit()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "onlyLeaderIndexes@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",2,8000)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "commit()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Replica rep@@@33@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertReplicaValue(client,1,\"title_s\",\"title1_new\",\"Title didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@33@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<UpdateRequest> updates = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "numActiveReplicas++@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "float newinplace_updatable_float = 100F@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "reorderedDBQsUsingUpdatedValueFromADroppedUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "log.info(\"Version at \" + ((HttpSolrClient)client).getBaseURL() + \" is: \" + getReplicaValue(client,1,\"_version_\"))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ClusterState state = cloudClient.getZkStateReader().getClusterState()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "log.info(\"Version at \" + ((HttpSolrClient)client).getBaseURL() + \" is: \" + getReplicaValue(client,1,\"_version_\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "log.info(\"RTG with DBQs are not working in tlog replicas\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "i < 100@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Thread.sleep(10)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Replica rep@@@29@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "float inplace_updatable_float = 1F@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i++@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "ClusterState state = cloudClient.getZkStateReader().getClusterState()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Thread.sleep(100)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "delayedReorderingFetchesMissingUpdateFromLeaderTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"id_i\",1,\"inplace_updatable_float\",12,\"title_s\",\"mytitle\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNull(client.getById(\"1\",params(\"distrib\",\"false\")))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertReplicaValue(client,1,\"inplace_updatable_float\",(newinplace_updatable_float + 2.0f),\"inplace_updatable_float didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"title_s\",\"title1_new\",\"id_i\",1,\"inplace_updatable_float\",newinplace_updatable_float))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(\"Thread pool didn't terminate within 12 secs\",threadpool.awaitTermination(12,TimeUnit.SECONDS))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->24 [style = dotted, label="true"];
8->10 [style = bold, label=""];
21->8 [style = solid, label="inplace_updatable_float"];
13->27 [style = dotted, label="true"];
3->47 [style = solid, label="task"];
25->22 [style = bold, label=""];
14->35 [style = bold, label=""];
50->6 [style = dotted, label="true"];
57->33 [style = bold, label=""];
13->41 [style = dotted, label="true"];
13->20 [style = dotted, label="true"];
23->11 [style = solid, label="numActiveReplicas"];
21->8 [style = bold, label=""];
10->53 [style = bold, label=""];
51->43 [style = solid, label="numActiveReplicas"];
29->34 [style = bold, label=""];
58->3 [style = bold, label=""];
46->48 [style = bold, label=""];
32->6 [style = bold, label=""];
31->50 [style = bold, label=""];
54->51 [style = dotted, label="true"];
26->12 [style = bold, label=""];
40->11 [style = bold, label=""];
3->19 [style = bold, label=""];
33->18 [style = bold, label=""];
2->36 [style = bold, label=""];
29->14 [style = bold, label=""];
14->11 [style = solid, label="newinplace_updatable_float"];
13->15 [style = dotted, label="true"];
13->37 [style = dotted, label="true"];
13->22 [style = bold, label=""];
5->30 [style = bold, label=""];
59->6 [style = bold, label=""];
13->4 [style = dotted, label="true"];
13->51 [style = solid, label="numActiveReplicas"];
39->29 [style = bold, label=""];
50->45 [style = dotted, label="true"];
12->31 [style = solid, label="i"];
18->23 [style = dotted, label="true"];
17->5 [style = bold, label=""];
28->20 [style = solid, label="i"];
51->54 [style = bold, label=""];
18->11 [style = bold, label=""];
30->26 [style = bold, label=""];
22->9 [style = bold, label=""];
13->43 [style = solid, label="numActiveReplicas"];
0->29 [style = bold, label=""];
50->59 [style = dotted, label="true"];
48->44 [style = bold, label=""];
31->43 [style = solid, label="i"];
25->7 [style = bold, label=""];
33->27 [style = bold, label=""];
35->21 [style = bold, label=""];
47->58 [style = bold, label=""];
31->50 [style = solid, label="i"];
56->10 [style = bold, label=""];
44->55 [style = bold, label=""];
27->11 [style = bold, label=""];
2->21 [style = dashed, label="0"];
15->31 [style = bold, label=""];
51->15 [style = solid, label="numActiveReplicas"];
10->2 [style = bold, label=""];
29->38 [style = bold, label=""];
13->15 [style = bold, label=""];
40->11 [style = solid, label="numActiveReplicas"];
11->57 [style = bold, label=""];
12->31 [style = bold, label=""];
33->11 [style = solid, label="numActiveReplicas"];
27->40 [style = dotted, label="true"];
13->16 [style = dotted, label="true"];
29->1 [style = dotted, label="true"];
13->18 [style = dotted, label="true"];
20->13 [style = bold, label=""];
18->23 [style = bold, label=""];
29->34 [style = dotted, label="true"];
50->54 [style = dotted, label="true"];
31->32 [style = bold, label=""];
16->24 [style = bold, label=""];
22->33 [style = dashed, label="0"];
13->54 [style = bold, label=""];
3->47 [style = bold, label=""];
19->17 [style = bold, label=""];
54->15 [style = bold, label=""];
55->42 [style = bold, label=""];
20->13 [style = solid, label="i"];
38->1 [style = bold, label=""];
42->14 [style = bold, label=""];
24->33 [style = bold, label=""];
50->15 [style = dotted, label="true"];
33->23 [style = solid, label="numActiveReplicas"];
13->33 [style = dotted, label="true"];
33->40 [style = solid, label="numActiveReplicas"];
28->13 [style = solid, label="i"];
50->28 [style = dotted, label="true"];
50->13 [style = dotted, label="true"];
40->27 [style = bold, label=""];
30->26 [style = solid, label="task"];
13->15 [style = solid, label="numActiveReplicas"];
57->43 [style = bold, label=""];
13->11 [style = dotted, label="true"];
50->33 [style = bold, label=""];
23->11 [style = bold, label=""];
35->43 [style = solid, label="updates"];
23->18 [style = bold, label=""];
12->43 [style = solid, label="i"];
54->51 [style = bold, label=""];
11->20 [style = bold, label=""];
55->42 [style = solid, label="inplace_updatable_float"];
50->20 [style = dotted, label="true"];
8->56 [style = bold, label=""];
12->50 [style = bold, label=""];
34->38 [style = dashed, label="0"];
34->1 [style = bold, label=""];
53->3 [style = bold, label=""];
3->43 [style = solid, label="task"];
29->38 [style = dotted, label="true"];
12->30 [style = bold, label=""];
28->13 [style = bold, label=""];
15->16 [style = bold, label=""];
50->31 [style = dotted, label="true"];
32->30 [style = dashed, label="0"];
9->25 [style = bold, label=""];
43->49 [style = bold, label=""];
14->21 [style = solid, label="newinplace_updatable_float"];
1->14 [style = bold, label=""];
27->40 [style = bold, label=""];
58->52 [style = bold, label=""];
51->15 [style = bold, label=""];
12->50 [style = solid, label="i"];
52->30 [style = bold, label=""];
6->28 [style = bold, label=""];
50->59 [style = bold, label=""];
36->3 [style = bold, label=""];
}
