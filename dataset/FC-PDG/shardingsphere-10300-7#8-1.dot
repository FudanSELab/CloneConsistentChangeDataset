digraph {
13 [style = filled, label = "Collection<String> notExistedRuleNames = sqlStatement.getRuleNames().stream().filter(null).collect(Collectors.toList())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "!notExistedTableNames.isEmpty()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "throw new CurrentRuleNotExistedException(\"Encrypt\",schemaName,notExistedTableNames)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Collection<String> currentRuleNames = currentRuleConfig.getDataSources().stream().map(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "checkToBeDroppedEncryptTableNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "!notExistedRuleNames.isEmpty()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Collection<String> notExistedTableNames = sqlStatement.getTables().stream().filter(null).collect(Collectors.toList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkToBeDroppedEncryptTableNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "throw new CurrentRuleNotExistedException(\"Readwrite splitting\",schemaName,sqlStatement.getRuleNames())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final EncryptRuleConfiguration currentRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String schemaName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final DropReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "throw new RequiredRuleMissedException(\"Encrypt\",schemaName,notExistedTableNames)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final String schemaName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "checkToBeDroppedRuleNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Collection<String> currentEncryptTableNames = currentRuleConfig.getTables().stream().map(null).collect(Collectors.toList())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final ReadwriteSplittingRuleConfiguration currentRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final DropEncryptRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "final EncryptRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final DropEncryptRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1->4 [style = bold, label=""];
2->0 [style = dotted, label="true"];
7->18 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
5->6 [style = dotted, label="true"];
15->20 [style = dotted, label="true"];
14->19 [style = bold, label=""];
0->11 [style = dashed, label="0"];
4->2 [style = bold, label=""];
4->0 [style = solid, label="notExistedTableNames"];
17->20 [style = solid, label="schemaName"];
4->11 [style = solid, label="notExistedTableNames"];
5->3 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
0->20 [style = dashed, label="0"];
2->11 [style = dotted, label="true"];
2->15 [style = dashed, label="0"];
14->16 [style = dotted, label="true"];
8->1 [style = bold, label=""];
14->17 [style = dotted, label="true"];
5->1 [style = bold, label=""];
2->0 [style = bold, label=""];
8->12 [style = dotted, label="true"];
19->13 [style = bold, label=""];
5->7 [style = dotted, label="true"];
15->20 [style = bold, label=""];
12->11 [style = solid, label="schemaName"];
7->12 [style = dashed, label="0"];
3->0 [style = solid, label="schemaName"];
13->15 [style = bold, label=""];
8->9 [style = dotted, label="true"];
4->13 [style = dashed, label="0"];
14->18 [style = dotted, label="true"];
2->11 [style = bold, label=""];
}
