digraph {
8 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(view.getItems()).thenReturn(Collections.singletonList(i))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "View view = mock()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(view.getOwner()).thenReturn(parent)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(view.getItems()).thenReturn(Arrays.asList(i))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "createMockAncestors(req,createAncestor(computer,\".\"),createAncestor(j,\"../..\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(parent.getItemGroup()).thenReturn(parent)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mockStatic()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"/jenkins/job/i/\",result)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testGetRelativeLinkTo_JobFromComputer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Computer computer = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ItemGroup parent = j@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\",\"parent/job/i/\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"job/i/\",result)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->7 [style = solid, label="i"];
19->18 [style = solid, label="parent"];
18->24 [style = bold, label=""];
22->15 [style = bold, label=""];
9->11 [style = bold, label=""];
24->20 [style = solid, label="result"];
7->10 [style = bold, label=""];
16->10 [style = bold, label=""];
7->16 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
1->3 [style = bold, label=""];
18->24 [style = solid, label="i"];
5->14 [style = bold, label=""];
15->8 [style = solid, label="j"];
14->8 [style = solid, label="req"];
15->19 [style = bold, label=""];
1->9 [style = solid, label="parent"];
12->23 [style = solid, label="computer"];
0->20 [style = dashed, label="0"];
14->12 [style = solid, label="req"];
4->7 [style = bold, label=""];
5->14 [style = solid, label="contextPath"];
13->8 [style = solid, label="view"];
24->20 [style = bold, label=""];
12->13 [style = bold, label=""];
21->5 [style = bold, label=""];
3->5 [style = bold, label=""];
4->16 [style = solid, label="i"];
1->4 [style = solid, label="parent"];
10->0 [style = bold, label=""];
2->15 [style = bold, label=""];
15->19 [style = solid, label="j"];
17->15 [style = bold, label=""];
4->10 [style = solid, label="i"];
5->23 [style = solid, label="req"];
11->8 [style = bold, label=""];
12->23 [style = bold, label=""];
15->23 [style = solid, label="j"];
13->9 [style = bold, label=""];
1->8 [style = solid, label="parent"];
8->4 [style = bold, label=""];
10->0 [style = solid, label="result"];
5->6 [style = solid, label="req"];
13->12 [style = dashed, label="0"];
1->11 [style = solid, label="parent"];
14->6 [style = bold, label=""];
6->12 [style = bold, label=""];
23->18 [style = bold, label=""];
4->16 [style = bold, label=""];
21->5 [style = solid, label="contextPath"];
15->1 [style = bold, label=""];
19->21 [style = bold, label=""];
}
