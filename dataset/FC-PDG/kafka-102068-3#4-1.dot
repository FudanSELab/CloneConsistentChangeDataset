digraph {
3 [style = filled, label = "task.suspend()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(stateManager.changelogPartitions()).andReturn(Collections.emptySet()).anyTimes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "task = createOptimizedStatefulTask(createConfig(\"100\"),consumer)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "task.closeDirty()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(recordCollector.offsets()).andReturn(Collections.emptyMap()).anyTimes()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.replay(stateManager,recordCollector)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldUnregisterMetricsInCloseDirty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EasyMock.replay(stateManager)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "task = createOptimizedStatefulTask(createConfig(false,\"100\"),consumer)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(getTaskMetrics(),not(empty()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.reset(stateManager)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "closeShouldBeIdempotent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "task.closeDirty()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldUnregisterMetricsInCloseDirty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "task.closeClean()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "task.closeClean()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->12 [style = bold, label=""];
7->10 [style = dashed, label="0"];
5->1 [style = bold, label=""];
10->3 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
3->14 [style = bold, label=""];
8->4 [style = bold, label=""];
15->4 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
2->6 [style = bold, label=""];
6->10 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
13->1 [style = bold, label=""];
0->8 [style = bold, label=""];
12->11 [style = bold, label=""];
}
