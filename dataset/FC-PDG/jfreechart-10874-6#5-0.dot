digraph {
4 [style = filled, label = "assertTrue(d1.equals(d2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "XYSeries<String> s2 = new XYSeries<>(\"Series\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "XYSeries s2 = new XYSeries(\"Series\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "s1.add(1.2,3.4)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(d1.equals(d2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertFalse(d1.equals(d2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IntervalXYDelegate d1 = new IntervalXYDelegate(c1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "c2.addSeries(s2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(d1.equals(d2))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(d1.equals(d2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(d2.equals(d1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "VectorSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "d1.setAutoWidth(false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "d1.setIntervalPositionFactor(0.123)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "XYSeriesCollection c2 = new XYSeriesCollection()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "d2.setIntervalPositionFactor(0.123)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "VectorSeries s1 = new VectorSeries(\"Series\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(d1.equals(d2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(d1.equals(d2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "XYSeriesCollection<String> c2 = new XYSeriesCollection<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "s2.add(1.2,3.4)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "d2.setFixedIntervalWidth(1.23)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "IntervalXYDelegate d2 = new IntervalXYDelegate(c2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "d2.setAutoWidth(false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "d1.setFixedIntervalWidth(1.23)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
28->29 [style = bold, label=""];
20->13 [style = solid, label="c2"];
21->10 [style = bold, label=""];
32->37 [style = bold, label=""];
8->23 [style = bold, label=""];
35->34 [style = solid, label="c2"];
26->5 [style = bold, label=""];
35->36 [style = solid, label="c2"];
37->30 [style = bold, label=""];
29->13 [style = solid, label="c2"];
13->1 [style = solid, label="d2"];
33->36 [style = solid, label="c1"];
18->19 [style = bold, label=""];
28->10 [style = solid, label="s2"];
5->15 [style = bold, label=""];
36->32 [style = bold, label=""];
31->8 [style = solid, label="s1"];
31->38 [style = bold, label=""];
30->34 [style = bold, label=""];
16->22 [style = bold, label=""];
12->0 [style = bold, label=""];
2->4 [style = bold, label=""];
8->35 [style = bold, label=""];
33->35 [style = solid, label="c1"];
29->21 [style = bold, label=""];
11->18 [style = bold, label=""];
15->23 [style = solid, label="c1"];
13->4 [style = solid, label="d2"];
14->26 [style = dashed, label="0"];
24->28 [style = dashed, label="0"];
20->29 [style = dashed, label="0"];
20->21 [style = bold, label=""];
24->20 [style = bold, label=""];
7->9 [style = bold, label=""];
6->14 [style = bold, label=""];
23->28 [style = bold, label=""];
13->17 [style = bold, label=""];
14->8 [style = solid, label="s1"];
23->24 [style = bold, label=""];
17->12 [style = bold, label=""];
3->2 [style = bold, label=""];
10->13 [style = bold, label=""];
35->37 [style = solid, label="c2"];
39->31 [style = bold, label=""];
25->26 [style = bold, label=""];
13->22 [style = solid, label="d2"];
15->33 [style = dashed, label="0"];
24->10 [style = solid, label="s2"];
27->23 [style = solid, label="c1"];
13->3 [style = solid, label="d2"];
5->38 [style = dashed, label="0"];
15->27 [style = dashed, label="0"];
5->27 [style = bold, label=""];
13->7 [style = solid, label="d2"];
35->36 [style = bold, label=""];
9->1 [style = bold, label=""];
38->33 [style = bold, label=""];
33->8 [style = bold, label=""];
19->7 [style = bold, label=""];
27->8 [style = bold, label=""];
15->8 [style = bold, label=""];
22->11 [style = bold, label=""];
23->12 [style = solid, label="d1"];
4->16 [style = bold, label=""];
13->18 [style = solid, label="d2"];
26->8 [style = solid, label="s1"];
14->5 [style = bold, label=""];
13->17 [style = solid, label="d2"];
14->31 [style = dashed, label="0"];
}
