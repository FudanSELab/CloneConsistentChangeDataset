digraph {
5 [style = filled, label = "GenericRecord rec1 = HoodieAvroUtils.rewriteRecord(rec,new Schema.Parser().parse(EVOLVED_SCHEMA))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertNull(rec1.get(\"new_col2\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(rec1.get(\"new_col1\"),\"dummy_val\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "GenericRecord rec = new GenericData.Record(new Schema.Parser().parse(EXAMPLE_SCHEMA))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "GenericRecord rec = new GenericData.Record(new Schema.Parser().parse(EVOLVED_SCHEMA))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDefaultValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertNull(rec1.get(HoodieRecord.RECORD_KEY_METADATA_FIELD))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testMetadataField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertNull(rec1.get(\"_hoodie_commit_time\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "rec.put(\"pii_col\",\"val2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rec.put(\"_row_key\",\"key1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testDefaultValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Schema schemaWithMetadata = HoodieAvroUtils.addMetadataFields(new Schema.Parser().parse(EVOLVED_SCHEMA))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "GenericRecord rec1 = HoodieAvroUtils.rewriteRecord(rec,new Schema.Parser().parse(SCHEMA_WITH_METADATA_FIELD))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "rec.put(\"non_pii_col\",\"val1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(rec1.get(\"new_col1\"),\"dummy_val\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "rec.put(\"timestamp\",3.5)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "GenericRecord rec1 = HoodieAvroUtils.rewriteRecord(rec,schemaWithMetadata)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
12->10 [style = solid, label="schemaWithMetadata"];
5->12 [style = dashed, label="0"];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
16->7 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
1->17 [style = bold, label=""];
2->10 [style = solid, label="rec"];
0->14 [style = dashed, label="0"];
12->10 [style = bold, label=""];
5->17 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
17->14 [style = bold, label=""];
2->16 [style = dashed, label="0"];
6->13 [style = bold, label=""];
1->12 [style = bold, label=""];
16->17 [style = solid, label="rec"];
4->1 [style = bold, label=""];
2->5 [style = solid, label="rec"];
2->7 [style = bold, label=""];
8->4 [style = bold, label=""];
}
