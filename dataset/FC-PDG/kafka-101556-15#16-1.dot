digraph {
17 [style = filled, label = "assertEquals(ValueAndTimestamp.make(2L,30L),result.get(new Windowed<>(\"1\",new SessionWindow(10L,30L))))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Map<Windowed<String>,ValueAndTimestamp<Integer>> result = supplier.theCapturedProcessor().lastValueAndTimestampPerKey@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "inputTopic.pipeInput(\"1\",\"1\",10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(ValueAndTimestamp.make(2,30L),result.get(new Windowed<>(\"1\",new SessionWindow(10L,30L))))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(ValueAndTimestamp.make(3L,100L),result.get(new Windowed<>(\"1\",new SessionWindow(70L,100L))))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(ValueAndTimestamp.make(3,100L),result.get(new Windowed<>(\"1\",new SessionWindow(70L,100L))))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(ValueAndTimestamp.make(1,15L),result.get(new Windowed<>(\"2\",new SessionWindow(15L,15L))))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "inputTopic.pipeInput(\"1\",\"1\",70)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "inputTopic.pipeInput(\"2\",\"2\",15)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Map<Windowed<String>,ValueAndTimestamp<Integer>> result = supplier.theCapturedProcessor().lastValueAndTimestampPerKey()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(ValueAndTimestamp.make(1L,15L),result.get(new Windowed<>(\"2\",new SessionWindow(15L,15L))))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "doAggregateSessionWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "inputTopic.pipeInput(\"1\",\"1\",100)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "doCountSessionWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "inputTopic.pipeInput(\"1\",\"1\",30)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "doAggregateSessionWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "inputTopic.pipeInput(\"1\",\"1\",90)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final TestInputTopic<String,String> inputTopic = driver.createInputTopic(TOPIC,new StringSerializer(),new StringSerializer())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Map<Windowed<String>,ValueAndTimestamp<Long>> result = supplier.theCapturedProcessor().lastValueAndTimestampPerKey@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final MockProcessorSupplier<Windowed<String>,Long> supplier@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final MockProcessorSupplier<Windowed<String>,Integer> supplier@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
5->8 [style = bold, label=""];
8->15 [style = bold, label=""];
7->12 [style = bold, label=""];
18->19 [style = dotted, label="true"];
12->17 [style = dashed, label="0"];
9->6 [style = dotted, label="true"];
0->20 [style = dashed, label="0"];
3->4 [style = bold, label=""];
14->1 [style = bold, label=""];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
12->2 [style = bold, label=""];
15->17 [style = bold, label=""];
2->0 [style = bold, label=""];
13->12 [style = bold, label=""];
10->5 [style = bold, label=""];
18->1 [style = bold, label=""];
11->3 [style = bold, label=""];
2->16 [style = dashed, label="0"];
6->19 [style = dashed, label="0"];
7->13 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
9->1 [style = bold, label=""];
16->20 [style = bold, label=""];
17->16 [style = bold, label=""];
8->13 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
