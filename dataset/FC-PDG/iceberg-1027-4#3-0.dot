digraph {
7 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",30))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testIntegerNotEqRewritten['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",79))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(\"Should read: id below lower bound\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",29))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(lessThan(\"id\",5))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(\"Should read: id equal to upper bound\",shouldRead)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",85))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",80))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testIntegerNotEqRewritten['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",75))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",79))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertTrue(\"Should read: id equal to lower bound\",shouldRead)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",30))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertTrue(\"Should read: id between lower and upper bounds\",shouldRead)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(\"Should read: id above upper bound\",shouldRead)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",5))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertTrue(\"Should read: not(false)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",80))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertFalse(\"Should skip: not(true)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",29))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(\"Should read: id above upper bound\",shouldRead)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(greaterThan(\"id\",5))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testNot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",75))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(\"Should read: id below lower bound\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",5))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,not(equal(\"id\",85))).shouldRead(PARQUET_SCHEMA,ROW_GROUP_METADATA,DICTIONARY_STORE)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25->24 [style = solid, label="shouldRead"];
4->10 [style = bold, label=""];
16->3 [style = bold, label=""];
7->18 [style = dashed, label="0"];
19->6 [style = solid, label="shouldRead"];
7->13 [style = solid, label="shouldRead"];
0->6 [style = solid, label="shouldRead"];
7->12 [style = bold, label=""];
0->6 [style = bold, label=""];
0->19 [style = dashed, label="0"];
15->5 [style = solid, label="shouldRead"];
17->9 [style = bold, label=""];
26->25 [style = bold, label=""];
8->15 [style = dashed, label="0"];
3->27 [style = dashed, label="0"];
18->12 [style = bold, label=""];
14->11 [style = solid, label="shouldRead"];
14->20 [style = dashed, label="0"];
10->3 [style = bold, label=""];
17->18 [style = solid, label="shouldRead"];
2->9 [style = bold, label=""];
1->0 [style = bold, label=""];
9->7 [style = bold, label=""];
19->6 [style = bold, label=""];
2->17 [style = dashed, label="0"];
18->12 [style = solid, label="shouldRead"];
9->23 [style = dashed, label="0"];
13->1 [style = bold, label=""];
11->15 [style = bold, label=""];
15->5 [style = bold, label=""];
16->3 [style = solid, label="shouldRead"];
10->2 [style = solid, label="shouldRead"];
20->11 [style = solid, label="shouldRead"];
6->14 [style = bold, label=""];
6->20 [style = bold, label=""];
25->27 [style = bold, label=""];
13->1 [style = solid, label="shouldRead"];
19->20 [style = solid, label="shouldRead"];
12->13 [style = bold, label=""];
22->19 [style = solid, label="shouldRead"];
9->18 [style = bold, label=""];
24->23 [style = solid, label="shouldRead"];
3->2 [style = bold, label=""];
8->5 [style = bold, label=""];
10->3 [style = solid, label="shouldRead"];
22->1 [style = solid, label="shouldRead"];
25->27 [style = solid, label="shouldRead"];
13->0 [style = solid, label="shouldRead"];
20->15 [style = solid, label="shouldRead"];
16->17 [style = solid, label="shouldRead"];
2->9 [style = solid, label="shouldRead"];
14->8 [style = solid, label="shouldRead"];
17->9 [style = solid, label="shouldRead"];
21->16 [style = bold, label=""];
11->8 [style = bold, label=""];
2->7 [style = solid, label="shouldRead"];
3->17 [style = bold, label=""];
27->24 [style = bold, label=""];
8->5 [style = solid, label="shouldRead"];
10->16 [style = dashed, label="0"];
22->1 [style = bold, label=""];
2->24 [style = dashed, label="0"];
1->19 [style = bold, label=""];
0->14 [style = solid, label="shouldRead"];
14->11 [style = bold, label=""];
13->22 [style = dashed, label="0"];
10->25 [style = dashed, label="0"];
12->22 [style = bold, label=""];
7->12 [style = solid, label="shouldRead"];
18->22 [style = solid, label="shouldRead"];
20->11 [style = bold, label=""];
24->23 [style = bold, label=""];
}
