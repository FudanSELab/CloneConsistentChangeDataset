digraph {
1 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "BytesRef defaultValue = doc.rootDoc().getField(\"location\").binaryValue()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testNullValueWithIgnoreMalformed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(nullValue,equalTo(new GeoPoint(1,2)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().nullField(\"location\").endObject()),XContentType.JSON))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(defaultValue,equalTo(doc.rootDoc().getField(\"location\").binaryValue()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "doc = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"location\",\"3, 4\").endObject()),XContentType.JSON))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Object nullValue = ((GeoPointFieldMapper)fieldMapper).fieldType().nullValue()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testNullValueWithIgnoreMalformed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testNullValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(defaultValue,not(equalTo(doc.rootDoc().getField(\"location\").binaryValue())))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_point\").field(IGNORE_Z_VALUE.getPreferredName(),false).field(IGNORE_MALFORMED,true).field(NULL_VALUE,\"91,181\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "doc = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"location\",\"1, 2\").endObject()),XContentType.JSON))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(doc.rootDoc().getField(\"location\"),notNullValue())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(nullValue,equalTo(new GeoPoint(89,1)))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_point\").field(NULL_VALUE,\"1,2\").endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\",new CompressedXContent(mapping))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_point\").field(IGNORE_Z_VALUE.getPreferredName(),false).field(IGNORE_MALFORMED.getPreferredName(),true).field(NULL_VALUE.getPreferredName(),\"91,181\").endObject().endObject().endObject().endObject())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->6 [style = solid, label="mapping"];
16->18 [style = bold, label=""];
9->18 [style = solid, label="defaultValue"];
10->15 [style = bold, label=""];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
13->6 [style = solid, label="mapping"];
1->3 [style = bold, label=""];
9->10 [style = bold, label=""];
1->3 [style = solid, label="fieldMapper"];
12->9 [style = bold, label=""];
15->16 [style = bold, label=""];
8->7 [style = bold, label=""];
6->1 [style = bold, label=""];
0->6 [style = solid, label="mapping"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
14->12 [style = bold, label=""];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
0->13 [style = dashed, label="0"];
5->11 [style = bold, label=""];
17->13 [style = bold, label=""];
9->15 [style = solid, label="defaultValue"];
13->6 [style = bold, label=""];
4->11 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
}
