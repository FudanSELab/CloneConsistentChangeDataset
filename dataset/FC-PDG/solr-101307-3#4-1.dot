digraph {
10 [style = filled, label = "Map<String,Object> params = new HashMap<String,Object>()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<Normalizer> norms = new ArrayList<Normalizer>(Collections.nCopies(features.size(),IdentityNormalizer.INSTANCE))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "weights.put(\"constant1\",1d)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ModelException expectedException = new ModelException(\"Model test5 lacks weight(s) for (constant5(\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedException.toString(),ex.toString())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "createLinearModel(\"test5\",features,norms,\"test\",fstore.getFeatures(),params)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<Normalizer> norms = new ArrayList<>(Collections.nCopies(features.size(),IdentityNormalizer.INSTANCE))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "missingFeatureWeightTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "store.addModel(ltrScoringModel)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "missingFeatureWeightTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final LTRScoringModel ltrScoringModel = createLinearModel(\"test6\",features,norms,\"test\",fstore.getFeatures(),params)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final ModelException expectedException = new ModelException(\"no features declared for model test6\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "fail(\"unexpectedly got here instead of catching \" + expectedException)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "params.put(\"weights\",weights)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Map<String,Object> weights = new HashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "weights.put(\"constant5missing\",1d)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"unexpectedly got here instead of catching \" + expectedException)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "emptyFeaturesTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Map<String,Object> params = new HashMap<>()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ModelException ex = expectThrows(,null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final List<Feature> features = getFeatures(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@da48ad)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->4 [style = solid, label="weights"];
0->9 [style = bold, label=""];
4->14 [style = bold, label=""];
3->1 [style = solid, label="expectedException"];
7->1 [style = bold, label=""];
0->7 [style = solid, label="norms"];
19->20 [style = solid, label="expectedException"];
0->18 [style = solid, label="norms"];
7->18 [style = dashed, label="0"];
8->3 [style = bold, label=""];
10->18 [style = solid, label="params"];
3->6 [style = bold, label=""];
4->18 [style = bold, label=""];
6->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
10->13 [style = dashed, label="0"];
6->7 [style = solid, label="features"];
2->10 [style = bold, label=""];
12->9 [style = bold, label=""];
15->3 [style = bold, label=""];
19->6 [style = bold, label=""];
17->19 [style = bold, label=""];
4->7 [style = bold, label=""];
2->13 [style = bold, label=""];
10->7 [style = solid, label="params"];
3->19 [style = dashed, label="0"];
5->2 [style = bold, label=""];
6->18 [style = solid, label="features"];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
18->16 [style = solid, label="ltrScoringModel"];
16->20 [style = bold, label=""];
14->11 [style = bold, label=""];
6->12 [style = bold, label=""];
13->4 [style = bold, label=""];
18->16 [style = bold, label=""];
}
