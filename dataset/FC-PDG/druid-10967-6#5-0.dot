digraph {
18 [style = filled, label = "server.start()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(ForkJoinPool.commonPool(),config.createExecutor())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)}}))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Injector injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(null))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider = JsonConfigProvider.of(keyPrefix,)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "server.setHandler(handler)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final SystemSchema systemSchema = CalciteTests.createMockSystemSchema(druidSchema,walker)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "druidMeta = new DruidMeta(new PlannerFactory(druidSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper()),AVATICA_CONFIG,injector)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(-1L,config.getSizeInBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(-1,config.getExpireAfter())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "druidMeta = new DruidMeta(new PlannerFactory(druidSchema,systemSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper()),AVATICA_CONFIG,injector)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testDefaultFromProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final JsonConfigurator configurator = injector.getInstance()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final CaffeineCacheConfig config = caffeineCacheConfigJsonConfigProvider.get().get()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final DruidSchema druidSchema = CalciteTests.createMockSchema(conglomerate,walker,plannerConfig)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final DruidAvaticaHandler handler = new DruidAvaticaHandler(druidMeta,new DruidNode(\"dummy\",\"dummy\",1,null,true,false),new AvaticaMonitor())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final String keyPrefix = \"cache.config.prefix\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "url = StringUtils.format(\"jdbc:avatica:remote:url=http://127.0.0.1:%d%s\",port,DruidAvaticaHandler.AVATICA_PATH)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Properties properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->13 [style = solid, label="url"];
4->20 [style = solid, label="druidSchema"];
5->8 [style = bold, label=""];
8->1 [style = solid, label="handler"];
7->11 [style = bold, label=""];
32->23 [style = bold, label=""];
4->21 [style = solid, label="druidSchema"];
23->30 [style = solid, label="properties"];
30->33 [style = bold, label=""];
28->30 [style = bold, label=""];
10->5 [style = solid, label="plannerConfig"];
20->21 [style = solid, label="systemSchema"];
26->29 [style = bold, label=""];
24->32 [style = bold, label=""];
9->14 [style = solid, label="port"];
21->8 [style = bold, label=""];
23->26 [style = bold, label=""];
18->17 [style = bold, label=""];
4->5 [style = solid, label="druidSchema"];
1->18 [style = bold, label=""];
6->0 [style = bold, label=""];
7->5 [style = solid, label="operatorTable"];
11->19 [style = bold, label=""];
16->2 [style = bold, label=""];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
32->28 [style = solid, label="keyPrefix"];
29->28 [style = bold, label=""];
0->20 [style = solid, label="walker"];
11->21 [style = solid, label="macroTable"];
19->5 [style = bold, label=""];
0->5 [style = solid, label="walker"];
19->5 [style = solid, label="injector"];
0->10 [style = bold, label=""];
17->2 [style = solid, label="url"];
22->0 [style = bold, label=""];
15->13 [style = solid, label="propertiesLosAngeles"];
31->27 [style = bold, label=""];
10->4 [style = solid, label="plannerConfig"];
5->8 [style = solid, label="druidMeta"];
17->16 [style = solid, label="url"];
7->21 [style = solid, label="operatorTable"];
2->15 [style = bold, label=""];
0->4 [style = solid, label="walker"];
4->20 [style = bold, label=""];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
3->13 [style = bold, label=""];
33->31 [style = bold, label=""];
29->30 [style = solid, label="configurator"];
5->21 [style = dashed, label="0"];
15->12 [style = bold, label=""];
12->3 [style = bold, label=""];
9->17 [style = solid, label="port"];
20->7 [style = bold, label=""];
10->21 [style = solid, label="plannerConfig"];
19->21 [style = solid, label="injector"];
21->8 [style = solid, label="druidMeta"];
27->25 [style = bold, label=""];
0->21 [style = solid, label="walker"];
17->16 [style = bold, label=""];
11->5 [style = solid, label="macroTable"];
19->21 [style = bold, label=""];
}
