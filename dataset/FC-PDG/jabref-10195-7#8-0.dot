digraph {
9 [style = filled, label = "expected.remove()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "expected.remove()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expected.remove()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expected.remove()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expected.remove()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expected.remove()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getIdFetchersReturnsAllFetcherDerivingFromIdFetcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Set<Class<? extends IdBasedFetcher>> expected = reflections.getSubTypesOf()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10->13 [style = solid, label="idFetchers"];
4->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
2->7 [style = bold, label=""];
12->14 [style = bold, label=""];
7->9 [style = bold, label=""];
7->6 [style = bold, label=""];
14->13 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
9->6 [style = bold, label=""];
10->12 [style = bold, label=""];
12->13 [style = solid, label="expected"];
8->1 [style = bold, label=""];
11->10 [style = bold, label=""];
5->6 [style = solid, label="expected"];
1->10 [style = dashed, label="0"];
5->12 [style = dashed, label="0"];
1->6 [style = solid, label="idFetchers"];
4->3 [style = bold, label=""];
1->5 [style = bold, label=""];
}
