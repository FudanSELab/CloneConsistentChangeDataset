digraph {
5 [style = filled, label = "final Map<TaskId,Long> allTaskEndOffsetSums = Collections.singletonMap(taskId01,500L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.singletonMap(taskId01,Task.LATEST_OFFSET)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldReturnEndOffsetSumForLagOfTaskWeDidNotPreviouslyOwn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.addPreviousTasksAndOffsetSums(taskOffsetSums)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.emptyMap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldReturnLatestOffsetForLagOfPreviousActiveRunningTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.computeTaskLags(allTaskEndOffsetSums)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(client.lagFor(taskId01),equalTo(Task.LATEST_OFFSET))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(client.lagFor(taskId01),equalTo(500L))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.computeTaskLags(null,allTaskEndOffsetSums)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "shouldReturnEndOffsetSumForLagOfTaskWeDidNotPreviouslyOwn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10->0 [style = solid, label="taskOffsetSums"];
6->3 [style = bold, label=""];
4->8 [style = bold, label=""];
1->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
3->5 [style = bold, label=""];
3->10 [style = dashed, label="0"];
7->1 [style = bold, label=""];
10->5 [style = bold, label=""];
9->10 [style = bold, label=""];
5->0 [style = bold, label=""];
5->7 [style = solid, label="allTaskEndOffsetSums"];
0->4 [style = bold, label=""];
4->7 [style = dashed, label="0"];
2->3 [style = bold, label=""];
5->4 [style = solid, label="allTaskEndOffsetSums"];
0->7 [style = bold, label=""];
3->0 [style = solid, label="taskOffsetSums"];
}
