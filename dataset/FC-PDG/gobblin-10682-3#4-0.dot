digraph {
3 [style = filled, label = "BytesBoundedBatch batch = new BytesBoundedBatch(8,3000)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testBatchWithLargeRecord['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(batch.hasRoom(record),false)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testBatchWithLargeRecord['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.assertNull(batch.tryAppend(record,WriteCallback.EMPTY,LargeMessagePolicy.DROP))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertNull(batch.tryAppend(record,WriteCallback.EMPTY,LargeMessagePolicy.DROP))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String record = \"abcdefgh\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(batch.hasRoom(record),true)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testBatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertNull(batch.tryAppend(record,WriteCallback.EMPTY))@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "BytesBoundedBatch batch = new BytesBoundedBatch(200,3000)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
0->10 [style = solid, label="record"];
0->9 [style = bold, label=""];
15->2 [style = bold, label=""];
0->17 [style = solid, label="record"];
10->15 [style = bold, label=""];
0->18 [style = solid, label="record"];
0->6 [style = bold, label=""];
8->18 [style = bold, label=""];
0->19 [style = solid, label="record"];
0->2 [style = bold, label=""];
1->3 [style = bold, label=""];
14->10 [style = bold, label=""];
9->17 [style = bold, label=""];
19->11 [style = bold, label=""];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
0->11 [style = solid, label="record"];
3->0 [style = bold, label=""];
13->19 [style = bold, label=""];
0->14 [style = solid, label="record"];
3->12 [style = dashed, label="0"];
0->7 [style = solid, label="record"];
4->7 [style = dashed, label="0"];
0->15 [style = solid, label="record"];
0->9 [style = solid, label="record"];
2->6 [style = dashed, label="0"];
0->4 [style = solid, label="record"];
11->8 [style = bold, label=""];
0->8 [style = solid, label="record"];
17->13 [style = bold, label=""];
0->2 [style = solid, label="record"];
0->13 [style = solid, label="record"];
6->7 [style = bold, label=""];
0->6 [style = solid, label="record"];
16->12 [style = bold, label=""];
18->14 [style = bold, label=""];
}
