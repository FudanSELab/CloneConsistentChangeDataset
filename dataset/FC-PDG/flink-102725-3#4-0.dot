digraph {
19 [style = filled, label = "fail(\"should fail\")@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "EventTimeSessionWindows.withGap(Time.seconds(0))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "IllegalArgumentException e@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(20),Time.seconds(10),Time.seconds(11))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "IllegalArgumentException e@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "fail(\"should fail\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EventTimeSessionWindows.withGap(Time.seconds(-1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(2),Time.seconds(-1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testInvalidParameters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IllegalArgumentException e@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertThat(e.toString(),containsString(\"0 < size\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fail(\"should fail\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(20),Time.seconds(10),Time.seconds(-11))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < slide and size > 0\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < slide and size > 0\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "testInvalidParameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "fail(\"should fail\")@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testInvalidParameters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(20),Time.seconds(10),Time.seconds(-1))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(-2),Time.seconds(1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fail(\"should fail\")@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(-20),Time.seconds(10),Time.seconds(-1))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "IllegalArgumentException e@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14->16 [style = bold, label=""];
0->9 [style = bold, label=""];
20->17 [style = bold, label=""];
10->15 [style = bold, label=""];
4->6 [style = bold, label=""];
12->21 [style = bold, label=""];
8->18 [style = bold, label=""];
21->15 [style = bold, label=""];
5->1 [style = dotted, label="true"];
22->9 [style = bold, label=""];
8->6 [style = bold, label=""];
16->17 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
23->0 [style = bold, label=""];
12->21 [style = dotted, label="true"];
17->19 [style = bold, label=""];
11->18 [style = bold, label=""];
3->0 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
1->22 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
2->11 [style = dotted, label="true"];
14->16 [style = dotted, label="true"];
3->23 [style = dashed, label="0"];
5->24 [style = dotted, label="true"];
5->1 [style = bold, label=""];
18->10 [style = bold, label=""];
13->3 [style = bold, label=""];
5->22 [style = dotted, label="true"];
0->25 [style = bold, label=""];
1->24 [style = dashed, label="0"];
15->20 [style = bold, label=""];
5->24 [style = bold, label=""];
6->10 [style = bold, label=""];
24->25 [style = bold, label=""];
26->23 [style = bold, label=""];
2->4 [style = dotted, label="true"];
9->25 [style = dashed, label="0"];
25->8 [style = bold, label=""];
4->11 [style = dashed, label="0"];
5->22 [style = bold, label=""];
2->11 [style = bold, label=""];
}
