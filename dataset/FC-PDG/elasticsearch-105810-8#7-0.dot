digraph {
7 [style = filled, label = "ExpandSearchPhase phase = new ExpandSearchPhase(mockSearchPhaseContext,internalSearchResponse,null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AtomicReference<SearchResponse> reference = new AtomicReference<>()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ExpandSearchPhase phase = new ExpandSearchPhase(mockSearchPhaseContext,internalSearchResponse,null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSkipPhase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override void sendExecuteMultiSearch(MultiSearchRequest request,SearchTask task,ActionListener<MultiSearchResponse> listener){fail(\"no collapsing here\")}}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"boom\",mockSearchPhaseContext.phaseFailure.get().getMessage())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "mockSearchPhaseContext.getRequest().source(new SearchSourceBuilder().collapse(new CollapseBuilder(\"someField\").setInnerHits(new InnerHitBuilder().setName(\"foobarbaz\"))))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "InternalSearchResponse internalSearchResponse = new InternalSearchResponse(hits,null,null,null,false,null,1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(mockSearchPhaseContext.phaseFailure.get(),Matchers.instanceOf())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "phase.run()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "phase.run()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertNull(reference.get())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String collapseValue = randomBoolean()? null: \"boom\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "AtomicReference<SearchResponse> reference = new AtomicReference<>()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SearchHits collapsedHits = new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14875ce,1,1.0F)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "InternalSearchResponse internalSearchResponse = new InternalSearchResponse(hits,null,null,null,false,null,1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testSkipPhase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(0,mockSearchPhaseContext.phasesExecuted.get())@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "AtomicBoolean executedMultiSearch = new AtomicBoolean(false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SearchHits hits = new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@148755a,new TotalHits(1,TotalHits.Relation.EQUAL_TO),1.0F)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testFailOneItemFailsEntirePhase['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotNull(mockSearchPhaseContext.phaseFailure.get())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override void sendExecuteMultiSearch(MultiSearchRequest request,SearchTask task,ActionListener<MultiSearchResponse> listener){assertTrue(executedMultiSearch.compareAndSet(false,true))InternalSearchResponse internalSearchResponse = new InternalSearchResponse(collapsedHits,null,null,null,false,null,1)SearchResponse response = mockSearchPhaseContext.buildSearchResponse(internalSearchResponse,null)listener.onResponse(new MultiSearchResponse(new MultiSearchResponse.Item((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1487642,randomIntBetween(1,10000)))}}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SearchHits hits = new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1487659,1,1.0F)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->6 [style = bold, label=""];
23->25 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->4 [style = bold, label=""];
9->4 [style = bold, label=""];
1->0 [style = solid, label="mockSearchPhaseContext"];
15->18 [style = bold, label=""];
2->5 [style = bold, label=""];
23->7 [style = solid, label="mockSearchPhaseContext"];
5->10 [style = solid, label="hits"];
19->20 [style = bold, label=""];
7->20 [style = dashed, label="0"];
24->15 [style = bold, label=""];
0->9 [style = bold, label=""];
13->4 [style = solid, label="hits"];
11->1 [style = bold, label=""];
17->14 [style = bold, label=""];
16->22 [style = bold, label=""];
14->19 [style = bold, label=""];
10->0 [style = solid, label="internalSearchResponse"];
25->13 [style = solid, label="collapseValue"];
18->22 [style = solid, label="collapsedHits"];
5->10 [style = bold, label=""];
21->12 [style = bold, label=""];
10->3 [style = bold, label=""];
8->1 [style = bold, label=""];
20->21 [style = bold, label=""];
25->16 [style = bold, label=""];
3->0 [style = bold, label=""];
7->17 [style = bold, label=""];
6->19 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->7 [style = solid, label="internalSearchResponse"];
1->2 [style = bold, label=""];
22->13 [style = bold, label=""];
18->23 [style = bold, label=""];
}
