digraph {
26 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String basePath = \"/tmp/testRecompactionWithLimitation\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertTrue(fs.exists(new Path(basePath,\"Identity/MemberAccount/hourly/2017/04/03/10\")))@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(recordCount,42)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "embeddedGobblin_2.run()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "InputRecordCountHelper.saveState(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))),state)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "state.setProp(CompactionSlaEventHelper.LAST_RUN_START_TIME,Long.toString(state.getPropAsLong(CompactionSlaEventHelper.LAST_RUN_START_TIME) - 8 * 60 * 60 * 1000))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"Recompaction-First\",basePath)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(fs.exists(new Path(basePath,\"Identity/MemberAccount/hourly/2017/04/03/10/compaction_1\")))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(recordCount,20)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "GenericRecord r1 = createRandomRecord()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobExecutionResult result = embeddedGobblin.run()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EmbeddedGobblin embeddedGobblin_2 = createEmbeddedGobblin(\"Recompaction-Second\",basePath)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "embeddedGobblin_2.run()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "embeddedGobblin_2.setConfiguration(TimeBasedSubDirDatasetsFinder.MIN_RECOMPACTION_DURATION,\"8h\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testAvroRecompactionWithLimitation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "writeFileWithContent(jobDir,\"file1\",r1,20)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "File jobDir = new File(basePath,\"Identity/MemberAccount/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testAvroRecompactionWriteToNewPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "String basePath = \"/tmp/testRecompactionWriteToNewPath\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(fs.exists(new Path(basePath,\"Identity/MemberAccount/hourly/2017/04/03/10/compaction_2\")))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FileSystem fs = getFileSystem()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "fs.delete(new Path(basePath),true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testAvroRecompactionWriteToNewPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "State state = InputRecordCountHelper.loadState(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(recordCount,20)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "writeFileWithContent(jobDir,\"file2\",r1,22)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EmbeddedGobblin embeddedGobblin_2 = createEmbeddedGobblinCompactionJob(\"Recompaction-Second\",basePath)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "long recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "embeddedGobblin_2.setConfiguration(ConfigurationKeys.RECOMPACTION_WRITE_TO_NEW_FOLDER,\"true\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblinCompactionJob(\"Recompaction-First\",basePath)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "embeddedGobblin.setConfiguration(ConfigurationKeys.RECOMPACTION_WRITE_TO_NEW_FOLDER,\"true\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
17->8 [style = bold, label=""];
21->10 [style = bold, label=""];
20->7 [style = solid, label="basePath"];
34->21 [style = solid, label="basePath"];
2->9 [style = solid, label="jobDir"];
34->32 [style = solid, label="basePath"];
34->5 [style = solid, label="basePath"];
18->34 [style = bold, label=""];
18->21 [style = solid, label="fs"];
16->6 [style = bold, label=""];
26->29 [style = bold, label=""];
34->27 [style = solid, label="basePath"];
18->33 [style = solid, label="fs"];
20->21 [style = solid, label="basePath"];
2->11 [style = solid, label="jobDir"];
25->18 [style = bold, label=""];
35->33 [style = bold, label=""];
15->24 [style = dashed, label="0"];
22->23 [style = dashed, label="0"];
31->18 [style = bold, label=""];
10->32 [style = bold, label=""];
34->2 [style = solid, label="basePath"];
36->26 [style = bold, label=""];
34->29 [style = solid, label="basePath"];
34->12 [style = bold, label=""];
11->24 [style = bold, label=""];
4->9 [style = solid, label="r1"];
10->7 [style = bold, label=""];
5->6 [style = solid, label="recordCount"];
22->30 [style = bold, label=""];
7->3 [style = bold, label=""];
11->15 [style = bold, label=""];
21->28 [style = bold, label=""];
27->35 [style = bold, label=""];
5->16 [style = bold, label=""];
9->23 [style = bold, label=""];
30->19 [style = bold, label=""];
18->20 [style = bold, label=""];
12->2 [style = bold, label=""];
15->17 [style = bold, label=""];
2->0 [style = bold, label=""];
13->19 [style = bold, label=""];
19->1 [style = bold, label=""];
20->2 [style = solid, label="basePath"];
20->5 [style = solid, label="basePath"];
20->23 [style = solid, label="basePath"];
8->5 [style = bold, label=""];
34->22 [style = solid, label="basePath"];
20->34 [style = dashed, label="0"];
0->4 [style = bold, label=""];
23->13 [style = bold, label=""];
1->21 [style = bold, label=""];
34->15 [style = solid, label="basePath"];
33->36 [style = bold, label=""];
34->12 [style = solid, label="basePath"];
20->15 [style = solid, label="basePath"];
20->12 [style = bold, label=""];
24->17 [style = bold, label=""];
20->22 [style = solid, label="basePath"];
21->28 [style = solid, label="recordCount"];
27->33 [style = solid, label="state"];
18->5 [style = solid, label="fs"];
4->11 [style = solid, label="r1"];
21->10 [style = solid, label="recordCount"];
29->10 [style = bold, label=""];
18->27 [style = solid, label="fs"];
14->18 [style = bold, label=""];
29->10 [style = solid, label="recordCount"];
7->32 [style = dashed, label="0"];
28->27 [style = bold, label=""];
20->24 [style = solid, label="basePath"];
6->9 [style = bold, label=""];
4->11 [style = bold, label=""];
20->3 [style = solid, label="basePath"];
20->12 [style = solid, label="basePath"];
13->30 [style = dashed, label="0"];
15->8 [style = bold, label=""];
22->13 [style = bold, label=""];
34->33 [style = solid, label="basePath"];
18->29 [style = solid, label="fs"];
}
