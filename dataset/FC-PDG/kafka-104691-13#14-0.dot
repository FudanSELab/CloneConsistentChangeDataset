digraph {
19 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "{}@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "EasyMock.expect(connector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "ConnectException e@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "worker.stop()@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectStopStorage()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PowerMock.replayAll()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertStatistics(worker,0,0)@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,\"WorkerTestConnector\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "connector.stop()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "EasyMock.expect(connector.taskClass()).andReturn()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "worker.start()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expect(plugins.newConnector(\"WorkerTestConnector\")).andReturn(connector)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testAddConnectorByAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testReconfigureConnectorTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "connector.initialize(EasyMock.anyObject())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Connector connector = PowerMock.createMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ConnectorContext ctx = PowerMock.createMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "connector.start(props)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "props.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PowerMock.verifyAll()@@@55@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "EasyMock.expectLastCall()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expectLastCall()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertStatistics(worker,0,0)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertStatistics(worker,0,0)@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(3)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,2,Arrays.asList(\"foo\",\"bar\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testAddConnectorByAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "props.put(ConnectorConfig.TASKS_MAX_CONFIG,\"1\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(connector)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertStatistics(worker,1,0)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23->32 [style = bold, label=""];
24->13 [style = bold, label=""];
53->55 [style = bold, label=""];
44->42 [style = bold, label=""];
3->38 [style = solid, label="worker"];
42->32 [style = bold, label=""];
58->57 [style = bold, label=""];
26->60 [style = solid, label="ctx"];
37->33 [style = bold, label=""];
62->46 [style = bold, label=""];
15->22 [style = bold, label=""];
2->10 [style = bold, label=""];
54->66 [style = solid, label="expectedTaskProps"];
10->45 [style = bold, label=""];
56->52 [style = bold, label=""];
19->27 [style = bold, label=""];
36->28 [style = bold, label=""];
5->33 [style = bold, label=""];
26->56 [style = bold, label=""];
34->29 [style = bold, label=""];
35->50 [style = bold, label=""];
3->41 [style = solid, label="worker"];
3->36 [style = solid, label="worker"];
4->36 [style = bold, label=""];
17->1 [style = bold, label=""];
12->0 [style = bold, label=""];
41->40 [style = bold, label=""];
11->20 [style = bold, label=""];
33->31 [style = bold, label=""];
66->34 [style = bold, label=""];
57->47 [style = bold, label=""];
14->21 [style = bold, label=""];
39->13 [style = bold, label=""];
6->61 [style = bold, label=""];
49->53 [style = bold, label=""];
48->14 [style = bold, label=""];
38->34 [style = bold, label=""];
3->42 [style = solid, label="worker"];
65->47 [style = bold, label=""];
3->44 [style = solid, label="worker"];
1->25 [style = bold, label=""];
5->37 [style = bold, label=""];
8->18 [style = bold, label=""];
35->5 [style = bold, label=""];
5->50 [style = dashed, label="0"];
17->52 [style = dashed, label="0"];
63->48 [style = bold, label=""];
47->54 [style = bold, label=""];
61->2 [style = bold, label=""];
10->14 [style = bold, label=""];
3->40 [style = solid, label="worker"];
50->64 [style = bold, label=""];
13->15 [style = bold, label=""];
20->3 [style = bold, label=""];
52->1 [style = bold, label=""];
21->16 [style = bold, label=""];
26->12 [style = solid, label="ctx"];
45->59 [style = bold, label=""];
25->12 [style = solid, label="props"];
25->60 [style = solid, label="props"];
55->66 [style = bold, label=""];
22->17 [style = solid, label="connector"];
3->43 [style = solid, label="worker"];
59->48 [style = solid, label="taskProps"];
0->43 [style = bold, label=""];
33->64 [style = dashed, label="0"];
34->41 [style = bold, label=""];
54->62 [style = bold, label=""];
40->29 [style = bold, label=""];
7->17 [style = bold, label=""];
27->6 [style = bold, label=""];
16->30 [style = bold, label=""];
23->44 [style = bold, label=""];
7->56 [style = dashed, label="0"];
18->35 [style = bold, label=""];
31->19 [style = bold, label=""];
3->4 [style = bold, label=""];
60->65 [style = bold, label=""];
46->49 [style = bold, label=""];
0->60 [style = bold, label=""];
25->27 [style = solid, label="props"];
28->12 [style = bold, label=""];
51->13 [style = bold, label=""];
9->2 [style = bold, label=""];
30->11 [style = bold, label=""];
59->63 [style = bold, label=""];
54->55 [style = solid, label="expectedTaskProps"];
29->23 [style = bold, label=""];
6->9 [style = bold, label=""];
4->28 [style = bold, label=""];
22->26 [style = bold, label=""];
22->52 [style = solid, label="connector"];
26->7 [style = bold, label=""];
25->8 [style = bold, label=""];
9->61 [style = dashed, label="0"];
64->31 [style = bold, label=""];
0->34 [style = bold, label=""];
43->38 [style = bold, label=""];
}
