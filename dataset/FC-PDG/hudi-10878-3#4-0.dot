digraph {
6 [style = filled, label = "testDefaultValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "rec.put(\"_row_key\",\"key1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "GenericRecord rec1 = HoodieAvroUtils.rewriteRecord(rec,schemaWithMetadata)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testDefaultValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertNull(rec1.get(\"new_col_nullable_wo_default\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(rec1.get(\"new_col_not_nullable_default_dummy_val\"),\"dummy_val\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertNull(rec1.get(\"new_col_nullable_default_null\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertNull(rec1.get(HoodieRecord.RECORD_KEY_METADATA_FIELD))@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "rec.put(\"pii_col\",\"val2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "GenericRecord rec = new GenericData.Record(new Schema.Parser().parse(EVOLVED_SCHEMA))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(rec1.get(\"non_nullable_field_with_default\"),\"dummy\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(rec1.get(\"new_col1\"),\"dummy_val\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Schema schemaWithMetadata = HoodieAvroUtils.addMetadataFields(new Schema.Parser().parse(EVOLVED_SCHEMA))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "rec.put(\"timestamp\",3.5)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "GenericRecord rec1 = HoodieAvroUtils.rewriteRecord(rec,new Schema.Parser().parse(SCHEMA_WITH_NON_NULLABLE_FIELD_WITH_DEFAULT))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNull(rec1.get(\"new_col2\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(rec1.get(\"new_col_nullable_default_dummy_val\"),\"dummy_val\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testNonNullableFieldWithDefault['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "GenericRecord rec = new GenericData.Record(new Schema.Parser().parse(EXAMPLE_SCHEMA))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertNull(rec1.get(HoodieRecord.RECORD_KEY_METADATA_FIELD))@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "rec.put(\"non_pii_col\",\"val1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->11 [style = bold, label=""];
2->20 [style = dashed, label="0"];
9->0 [style = bold, label=""];
11->14 [style = bold, label=""];
19->20 [style = bold, label=""];
18->17 [style = bold, label=""];
10->13 [style = dashed, label="0"];
15->16 [style = bold, label=""];
1->13 [style = bold, label=""];
7->3 [style = bold, label=""];
8->7 [style = bold, label=""];
6->2 [style = bold, label=""];
3->9 [style = bold, label=""];
12->2 [style = bold, label=""];
20->8 [style = bold, label=""];
9->18 [style = bold, label=""];
10->5 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
2->1 [style = solid, label="rec"];
20->18 [style = solid, label="rec"];
0->18 [style = dashed, label="0"];
0->1 [style = solid, label="schemaWithMetadata"];
13->15 [style = bold, label=""];
5->15 [style = dashed, label="0"];
1->10 [style = bold, label=""];
2->8 [style = bold, label=""];
}
