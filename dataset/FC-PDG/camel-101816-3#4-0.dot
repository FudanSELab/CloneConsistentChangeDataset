digraph {
40 [style = filled, label = "repository.close()@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE_ALL)}})@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "count++@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "count = 0@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "fileToAdd1.createNewFile()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE)}})@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE_BRANCH)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "status = git.status().call()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageBranch)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Git git = new Git(repository)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "fileToAdd.createNewFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertFalse(status.getAdded().contains(FILENAME_TO_ADD))@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "count == 1@@@41@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int count = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "count++@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageBranch)}})@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "commitBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "count == 1@@@41@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "commitBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "count == 0@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "logs = git.log().call()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "count = 0@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "File gitDir = new File(GIT_LOCAL_REPO,\".git\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_BRANCH_TO_ADD)}})@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "repository.close()@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "git.checkout().setCreateBranch(true).setName(BRANCH_TEST).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(count,2)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "count == 1@@@49@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "count == 0@@@40@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "removeFileBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "count++@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "git.checkout().setCreateBranch(false).setName(BRANCH_TEST).call()@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "git = new Git(repository)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_TO_ADD)}})@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Status status = new Git(repository).status().call()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE_ALL)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_TO_ADD)}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(count,1)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_TO_ADD))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "logs = git.log().call()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File fileToAdd = new File(GIT_LOCAL_REPO,FILENAME_TO_ADD)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "File fileToAdd1 = new File(GIT_LOCAL_REPO,FILENAME_BRANCH_TO_ADD)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->11 [style = dotted, label="true"];
38->52 [style = bold, label=""];
25->47 [style = solid, label="repository"];
27->33 [style = dotted, label="true"];
22->29 [style = dashed, label="0"];
52->13 [style = bold, label=""];
25->35 [style = bold, label=""];
9->16 [style = bold, label=""];
22->8 [style = bold, label=""];
43->40 [style = bold, label=""];
13->37 [style = solid, label="count"];
37->38 [style = dotted, label="true"];
34->24 [style = bold, label=""];
21->36 [style = bold, label=""];
45->43 [style = bold, label=""];
20->38 [style = dashed, label="0"];
15->20 [style = bold, label=""];
37->38 [style = bold, label=""];
20->37 [style = solid, label="count"];
26->15 [style = bold, label=""];
27->17 [style = bold, label=""];
20->37 [style = bold, label=""];
28->25 [style = bold, label=""];
52->48 [style = dotted, label="true"];
20->32 [style = dashed, label="0"];
27->33 [style = bold, label=""];
17->20 [style = bold, label=""];
7->29 [style = bold, label=""];
47->53 [style = bold, label=""];
4->3 [style = bold, label=""];
20->52 [style = solid, label="count"];
20->13 [style = solid, label="count"];
42->46 [style = bold, label=""];
21->19 [style = bold, label=""];
15->27 [style = solid, label="count"];
31->5 [style = bold, label=""];
30->27 [style = bold, label=""];
10->31 [style = dashed, label="0"];
16->19 [style = bold, label=""];
50->49 [style = bold, label=""];
3->0 [style = bold, label=""];
1->17 [style = bold, label=""];
15->17 [style = solid, label="count"];
13->37 [style = bold, label=""];
15->30 [style = solid, label="count"];
52->48 [style = bold, label=""];
44->41 [style = bold, label=""];
18->25 [style = bold, label=""];
30->32 [style = dotted, label="true"];
5->7 [style = bold, label=""];
51->25 [style = bold, label=""];
46->20 [style = bold, label=""];
17->1 [style = solid, label="count"];
2->33 [style = dashed, label="0"];
48->13 [style = bold, label=""];
17->27 [style = solid, label="count"];
12->34 [style = dashed, label="0"];
14->6 [style = bold, label=""];
4->35 [style = dashed, label="0"];
0->31 [style = bold, label=""];
2->17 [style = bold, label=""];
16->36 [style = bold, label=""];
35->3 [style = bold, label=""];
6->34 [style = bold, label=""];
17->13 [style = solid, label="count"];
15->1 [style = solid, label="count"];
30->32 [style = bold, label=""];
32->27 [style = bold, label=""];
12->24 [style = bold, label=""];
20->1 [style = bold, label=""];
13->50 [style = bold, label=""];
7->22 [style = bold, label=""];
24->26 [style = bold, label=""];
10->5 [style = bold, label=""];
37->52 [style = bold, label=""];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
12->39 [style = bold, label=""];
33->17 [style = bold, label=""];
20->11 [style = bold, label=""];
21->14 [style = bold, label=""];
19->21 [style = bold, label=""];
6->12 [style = bold, label=""];
29->8 [style = bold, label=""];
15->20 [style = solid, label="count"];
16->21 [style = solid, label="count"];
39->44 [style = bold, label=""];
11->1 [style = bold, label=""];
25->4 [style = bold, label=""];
17->20 [style = solid, label="count"];
17->30 [style = bold, label=""];
15->30 [style = bold, label=""];
21->14 [style = solid, label="count"];
49->47 [style = bold, label=""];
36->21 [style = bold, label=""];
0->10 [style = bold, label=""];
19->36 [style = dashed, label="0"];
13->52 [style = solid, label="count"];
25->6 [style = solid, label="repository"];
8->9 [style = bold, label=""];
13->23 [style = bold, label=""];
13->50 [style = solid, label="count"];
1->2 [style = dotted, label="true"];
17->30 [style = solid, label="count"];
53->45 [style = bold, label=""];
41->42 [style = bold, label=""];
}
