digraph {
7 [style = filled, label = "testResultArraySignatureDayGran['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testResultArraySignatureAllGran['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testResultArraySignatureAllGran['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final GroupByQuery query = new GroupByQuery.Builder().setDataSource(QueryRunnerTestHelper.DATA_SOURCE).setGranularity(Granularities.DAY).setDimensions(new DefaultDimensionSpec(\"col\",\"dim\")).setInterval(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).setAggregatorSpecs(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS).setPostAggregatorSpecs(ImmutableList.of(QueryRunnerTestHelper.CONSTANT)).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(RowSignature.builder().addTimeColumn().add(\"dim\",ValueType.STRING).add(\"rows\",ValueType.LONG).add(\"index\",ValueType.DOUBLE).add(\"uniques\",null).add(\"const\",null).build(),new GroupByQueryQueryToolChest(null,null).resultArraySignature(query))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(RowSignature.builder().add(\"dim\",ValueType.STRING).add(\"rows\",ValueType.LONG).add(\"index\",ValueType.DOUBLE).add(\"uniques\",null).add(\"const\",null).build(),new GroupByQueryQueryToolChest(null,null).resultArraySignature(query))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "final GroupByQuery query = new GroupByQuery.Builder().setDataSource(QueryRunnerTestHelper.DATA_SOURCE).setGranularity(Granularities.ALL).setDimensions(new DefaultDimensionSpec(\"col\",\"dim\")).setInterval(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).setAggregatorSpecs(QueryRunnerTestHelper.COMMON_DOUBLE_AGGREGATORS).setPostAggregatorSpecs(ImmutableList.of(QueryRunnerTestHelper.CONSTANT)).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(RowSignature.builder().add(\"dim\",ValueType.STRING).add(\"rows\",ValueType.LONG).add(\"index\",ValueType.DOUBLE).add(\"uniques\",null).add(\"const\",ValueType.LONG).build(),new GroupByQueryQueryToolChest(null,null).resultArraySignature(query))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
4->1 [style = bold, label=""];
7->5 [style = bold, label=""];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
5->6 [style = solid, label="query"];
5->6 [style = bold, label=""];
1->5 [style = dashed, label="0"];
1->3 [style = solid, label="query"];
1->0 [style = solid, label="query"];
2->1 [style = bold, label=""];
0->6 [style = dashed, label="0"];
}
