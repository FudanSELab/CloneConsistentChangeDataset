digraph {
15 [style = filled, label = "int i = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int i = 0@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,vehicleBuilder.getWheelCount())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i++@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(5).setWidth(6)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(1).setWidth(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Wheel> wheels = new ArrayList<Wheel>(vehicleBuilder.getWheelList())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "vehicleBuilder.getWheel(i)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNotSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Vehicle.Builder vehicleBuilder = Vehicle.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < wheels.size()@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "i < 3@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(7).setWidth(8)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i < wheels.size()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(3).setWidth(4)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(1).setWidth(2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(vehicleBuilder.getWheel(0).getRadius()).isEqualTo(2)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "i++@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(2,vehicleBuilder.getWheel(0).getRadius())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i < wheels.size()@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testRemove_WithNestedBuilders['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < wheels.size()@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testRemove_WithNestedBuilders['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "vehicleBuilder.removeWheel(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(vehicleBuilder.getWheelCount()).isEqualTo(1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "i++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testMessagesAreCached['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int i = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "vehicleBuilder.getWheelBuilder(3).setRadius(20).setWidth(20)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(2).setWidth(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
2->17 [style = bold, label=""];
14->24 [style = bold, label=""];
13->34 [style = bold, label=""];
34->20 [style = bold, label=""];
15->25 [style = solid, label="i"];
21->19 [style = bold, label=""];
29->30 [style = solid, label="i"];
12->20 [style = solid, label="i"];
24->15 [style = bold, label=""];
18->25 [style = dotted, label="true"];
4->17 [style = dashed, label="0"];
5->26 [style = dashed, label="0"];
1->27 [style = dashed, label="0"];
24->29 [style = dotted, label="true"];
15->18 [style = solid, label="i"];
12->22 [style = solid, label="i"];
18->33 [style = bold, label=""];
25->32 [style = bold, label=""];
5->9 [style = dashed, label="0"];
15->32 [style = solid, label="i"];
12->10 [style = solid, label="i"];
10->34 [style = solid, label="i"];
33->21 [style = solid, label="i"];
24->30 [style = dotted, label="true"];
23->19 [style = solid, label="i"];
34->20 [style = dotted, label="true"];
9->8 [style = bold, label=""];
13->10 [style = dotted, label="true"];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
10->13 [style = solid, label="i"];
30->29 [style = bold, label=""];
31->12 [style = bold, label=""];
11->2 [style = bold, label=""];
1->9 [style = bold, label=""];
18->32 [style = dotted, label="true"];
4->0 [style = bold, label=""];
24->30 [style = bold, label=""];
34->22 [style = bold, label=""];
6->2 [style = bold, label=""];
20->10 [style = bold, label=""];
29->24 [style = solid, label="i"];
26->16 [style = bold, label=""];
12->13 [style = bold, label=""];
17->28 [style = bold, label=""];
33->23 [style = solid, label="i"];
21->31 [style = bold, label=""];
32->18 [style = solid, label="i"];
14->30 [style = solid, label="i"];
34->22 [style = dotted, label="false"];
14->24 [style = solid, label="i"];
23->21 [style = bold, label=""];
10->13 [style = bold, label=""];
14->29 [style = solid, label="i"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
21->23 [style = dotted, label="true"];
21->19 [style = dotted, label="true"];
12->13 [style = solid, label="i"];
10->22 [style = solid, label="i"];
0->28 [style = dashed, label="0"];
22->10 [style = bold, label=""];
18->25 [style = bold, label=""];
23->21 [style = solid, label="i"];
3->8 [style = dashed, label="0"];
16->14 [style = bold, label=""];
32->25 [style = solid, label="i"];
28->27 [style = bold, label=""];
32->18 [style = bold, label=""];
33->19 [style = solid, label="i"];
33->21 [style = bold, label=""];
12->34 [style = solid, label="i"];
29->24 [style = bold, label=""];
3->16 [style = dashed, label="0"];
10->20 [style = solid, label="i"];
13->34 [style = dotted, label="true"];
27->26 [style = bold, label=""];
}
