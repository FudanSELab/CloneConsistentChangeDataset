digraph {
32 [style = filled, label = "{exitRule()}@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{setState(562)constant()}@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "setState(575)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "return _localctx@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "primaryExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "enterOuterAlt(_localctx,5)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{setState(560)castExpression()}@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "getInterpreter().adaptivePredict(_input,90,_ctx)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "_errHandler.recover(this,re)@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "enterOuterAlt(_localctx,8)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "getInterpreter().adaptivePredict(_input,89,_ctx)@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "TableIdentifierContext _localctx = new TableIdentifierContext(_ctx,getState())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "_localctx = new CastContext(_localctx)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "_errHandler.sync(this)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "setState(693)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "enterOuterAlt(_localctx,1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PrimaryExpressionContext _localctx = new PrimaryExpressionContext(_ctx,getState())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "_localctx.exception = re@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "_localctx = new ExtractContext(_localctx)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "tableIdentifier['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "getInterpreter().adaptivePredict(_input,77,_ctx)@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "(((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (SYS - 64)) | (1L << (TABLES - 64)) | (1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)@@@36@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "setState(579)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "_localctx = new ParenthesizedExpressionContext(_localctx)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "_localctx = new DereferenceContext(_localctx)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "enterOuterAlt(_localctx,1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "(((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)@@@36@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "RecognitionException re@@@86@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int _la@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "{setState(684)_la = _input.LA(1)if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)) {{setState(681)((TableIdentifierContext)_localctx).catalog = identifier()setState(682)match(T__3)}}setState(686)match(TABLE_IDENTIFIER)}@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "_localctx = new FunctionContext(_localctx)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "(((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "_localctx = new ConstantDefaultContext(_localctx)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return _localctx@@@94@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "enterOuterAlt(_localctx,3)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "_errHandler.reportError(this,re)@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "enterOuterAlt(_localctx,7)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "_errHandler.reportError(this,re)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "enterOuterAlt(_localctx,2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{setState(566)_la = _input.LA(1)if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (SYS - 64)) | (1L << (TABLES - 64)) | (1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)) {{setState(563)qualifiedName()setState(564)match(DOT)}}setState(568)match(ASTERISK)}@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "{setState(690)_errHandler.sync(this)switch (getInterpreter().adaptivePredict(_input,89,_ctx)) {case 1:{setState(687)((TableIdentifierContext)_localctx).catalog = identifier()setState(688)match(T__3)}breaksetState(692)((TableIdentifierContext)_localctx).name = identifier()}@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "enterRule(_localctx,88,RULE_tableIdentifier)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "_localctx = new SubqueryExpressionContext(_localctx)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "RecognitionException re@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{setState(561)extractExpression()}@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "primaryExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "_localctx = new StarContext(_localctx)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "enterOuterAlt(_localctx,2)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{setState(570)match(T__0)setState(571)query()setState(572)match(T__1)}@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{setState(574)qualifiedName()}@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "{exitRule()}@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{setState(575)match(T__0)setState(576)expression()setState(577)match(T__1)}@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "_errHandler.recover(this,re)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "enterOuterAlt(_localctx,4)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "enterRule(_localctx,60,RULE_primaryExpression)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "enterOuterAlt(_localctx,6)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "_localctx.exception = re@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "getInterpreter().adaptivePredict(_input,76,_ctx)@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
12->38 [style = dashed, label="0"];
32->35 [style = bold, label=""];
7->32 [style = bold, label=""];
56->42 [style = dotted, label="true"];
43->55 [style = bold, label=""];
39->11 [style = dotted, label="true"];
33->28 [style = dotted, label="true"];
57->14 [style = bold, label=""];
28->10 [style = solid, label="_localctx"];
41->9 [style = bold, label=""];
51->48 [style = dotted, label="true"];
18->20 [style = dotted, label="true"];
46->45 [style = solid, label="_localctx"];
33->26 [style = dotted, label="true"];
1->23 [style = bold, label=""];
56->47 [style = bold, label=""];
33->0 [style = bold, label=""];
13->17 [style = bold, label=""];
9->1 [style = solid, label="_localctx"];
39->31 [style = bold, label=""];
51->52 [style = dotted, label="true"];
22->57 [style = bold, label=""];
22->54 [style = solid, label="_la"];
33->2 [style = dotted, label="true"];
33->16 [style = dotted, label="true"];
19->15 [style = bold, label=""];
33->37 [style = dotted, label="true"];
33->27 [style = dotted, label="true"];
9->0 [style = solid, label="_localctx"];
39->29 [style = bold, label=""];
18->13 [style = dotted, label="true"];
6->32 [style = bold, label=""];
33->11 [style = dotted, label="true"];
33->16 [style = bold, label=""];
39->2 [style = dotted, label="true"];
42->46 [style = bold, label=""];
37->26 [style = bold, label=""];
39->25 [style = dotted, label="true"];
2->11 [style = solid, label="_localctx"];
33->28 [style = bold, label=""];
39->26 [style = dotted, label="true"];
51->44 [style = bold, label=""];
55->47 [style = solid, label="_localctx"];
46->36 [style = bold, label=""];
37->47 [style = dashed, label="0"];
24->40 [style = dashed, label="0"];
29->25 [style = solid, label="_localctx"];
14->56 [style = bold, label=""];
23->8 [style = bold, label=""];
26->6 [style = bold, label=""];
56->47 [style = dotted, label="true"];
9->31 [style = solid, label="_localctx"];
39->29 [style = dotted, label="true"];
33->29 [style = bold, label=""];
0->34 [style = bold, label=""];
18->20 [style = bold, label=""];
21->9 [style = bold, label=""];
39->27 [style = dotted, label="true"];
47->54 [style = bold, label=""];
1->23 [style = solid, label="_localctx"];
52->48 [style = bold, label=""];
33->56 [style = dashed, label="0"];
39->10 [style = dotted, label="true"];
55->53 [style = solid, label="_localctx"];
18->17 [style = dotted, label="true"];
37->26 [style = solid, label="_localctx"];
14->39 [style = bold, label=""];
39->0 [style = dotted, label="true"];
24->57 [style = dashed, label="0"];
33->10 [style = dotted, label="true"];
39->34 [style = dotted, label="true"];
33->31 [style = dotted, label="true"];
39->37 [style = bold, label=""];
39->31 [style = dotted, label="true"];
9->28 [style = solid, label="_localctx"];
33->0 [style = dotted, label="true"];
9->55 [style = dashed, label="0"];
39->16 [style = bold, label=""];
20->13 [style = bold, label=""];
56->50 [style = dotted, label="true"];
16->27 [style = bold, label=""];
22->15 [style = solid, label="_la"];
1->35 [style = solid, label="_localctx"];
33->12 [style = dotted, label="true"];
33->39 [style = dashed, label="0"];
16->42 [style = dashed, label="0"];
5->32 [style = bold, label=""];
0->35 [style = solid, label="_localctx"];
31->35 [style = solid, label="_localctx"];
39->23 [style = dotted, label="true"];
11->5 [style = bold, label=""];
33->25 [style = dotted, label="true"];
39->37 [style = dotted, label="true"];
54->36 [style = bold, label=""];
39->2 [style = bold, label=""];
33->29 [style = dotted, label="true"];
40->14 [style = bold, label=""];
39->1 [style = bold, label=""];
33->37 [style = bold, label=""];
39->1 [style = dotted, label="true"];
9->30 [style = solid, label="_localctx"];
2->11 [style = bold, label=""];
33->2 [style = bold, label=""];
31->19 [style = bold, label=""];
22->40 [style = bold, label=""];
30->22 [style = bold, label=""];
9->37 [style = solid, label="_localctx"];
27->36 [style = bold, label=""];
28->10 [style = bold, label=""];
48->36 [style = bold, label=""];
8->32 [style = bold, label=""];
37->35 [style = solid, label="_localctx"];
39->19 [style = dotted, label="true"];
2->35 [style = solid, label="_localctx"];
33->34 [style = dotted, label="true"];
39->38 [style = dotted, label="true"];
16->27 [style = solid, label="_localctx"];
34->7 [style = bold, label=""];
29->25 [style = bold, label=""];
36->32 [style = bold, label=""];
10->3 [style = bold, label=""];
25->4 [style = bold, label=""];
9->30 [style = bold, label=""];
33->1 [style = bold, label=""];
53->22 [style = bold, label=""];
9->16 [style = solid, label="_localctx"];
17->32 [style = bold, label=""];
39->16 [style = dotted, label="true"];
9->2 [style = solid, label="_localctx"];
30->53 [style = dashed, label="0"];
39->28 [style = bold, label=""];
14->33 [style = bold, label=""];
56->42 [style = bold, label=""];
24->14 [style = bold, label=""];
55->42 [style = solid, label="_localctx"];
31->19 [style = solid, label="_localctx"];
33->23 [style = dotted, label="true"];
28->35 [style = solid, label="_localctx"];
39->0 [style = bold, label=""];
29->35 [style = solid, label="_localctx"];
16->35 [style = solid, label="_localctx"];
0->34 [style = solid, label="_localctx"];
55->53 [style = bold, label=""];
44->52 [style = bold, label=""];
33->1 [style = dotted, label="true"];
33->31 [style = bold, label=""];
33->19 [style = dotted, label="true"];
39->28 [style = dotted, label="true"];
9->29 [style = solid, label="_localctx"];
54->45 [style = solid, label="_localctx"];
56->49 [style = dotted, label="true"];
22->24 [style = bold, label=""];
36->45 [style = bold, label=""];
51->44 [style = dotted, label="true"];
3->32 [style = bold, label=""];
15->32 [style = bold, label=""];
4->32 [style = bold, label=""];
}
