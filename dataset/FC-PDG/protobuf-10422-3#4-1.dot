digraph {
0 [style = filled, label = "TestOneof2 message = builder.build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(message.getSerializedSize()).isEqualTo(rawBytes.size())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testOneofWireFormat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "TestOneof2 message2 = TestOneof2.parseFrom(rawBytes)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestOneof2.Builder builder = TestOneof2.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ByteString rawBytes = message.toByteString()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestUtil.assertOneofSet(message2)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testOneofWireFormat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestUtil.setOneof(builder)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(rawBytes.size(),message.getSerializedSize())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testOneofWireFormat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3->6 [style = bold, label=""];
1->2 [style = bold, label=""];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
1->4 [style = solid, label="rawBytes"];
4->5 [style = solid, label="message2"];
6->7 [style = bold, label=""];
2->9 [style = dashed, label="0"];
2->4 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
10->6 [style = bold, label=""];
1->9 [style = bold, label=""];
9->4 [style = bold, label=""];
6->7 [style = solid, label="builder"];
}
