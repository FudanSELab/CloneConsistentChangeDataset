digraph {
0 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testInduceGroupingType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "{}@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "groupSets = new ArrayList<>()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "groupSets = Lists.newArrayList()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "groupSets = Lists.newArrayList()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<ImmutableBitSet> groupSets = Lists.newArrayList()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "groupSets = Lists.newArrayList()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "groupSets = Lists.newArrayList()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final Aggregate.Group x = Aggregate.Group.induce(groupSet,groupSets)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "groupSets = Lists.newArrayList()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "groupSets = Lists.newArrayList()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testInduceGroupingType0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "IllegalArgumentException ignore@@@38@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fail(\"expected error, got \" + x)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,5))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(1,2,4,5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testInduceGroupingType0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->7 [style = dashed, label="0"];
21->6 [style = solid, label="groupSets"];
17->16 [style = solid, label="groupSet"];
12->28 [style = bold, label=""];
47->18 [style = bold, label=""];
17->0 [style = solid, label="groupSet"];
0->4 [style = bold, label=""];
46->32 [style = solid, label="groupSets"];
17->4 [style = solid, label="groupSet"];
3->17 [style = dashed, label="0"];
17->25 [style = solid, label="groupSet"];
30->46 [style = bold, label=""];
24->23 [style = bold, label=""];
22->24 [style = bold, label=""];
14->21 [style = bold, label=""];
7->4 [style = solid, label="groupSets"];
8->6 [style = solid, label="groupSets"];
41->47 [style = bold, label=""];
1->6 [style = solid, label="groupSets"];
38->29 [style = bold, label=""];
9->3 [style = bold, label=""];
13->22 [style = bold, label=""];
40->28 [style = bold, label=""];
46->31 [style = bold, label=""];
15->19 [style = bold, label=""];
27->42 [style = bold, label=""];
4->8 [style = bold, label=""];
11->16 [style = bold, label=""];
8->6 [style = bold, label=""];
34->40 [style = bold, label=""];
1->8 [style = dashed, label="0"];
10->25 [style = bold, label=""];
1->41 [style = bold, label=""];
1->6 [style = bold, label=""];
3->7 [style = bold, label=""];
35->39 [style = bold, label=""];
3->5 [style = bold, label=""];
19->33 [style = bold, label=""];
31->32 [style = bold, label=""];
25->1 [style = bold, label=""];
4->1 [style = bold, label=""];
39->45 [style = bold, label=""];
2->3 [style = bold, label=""];
33->13 [style = bold, label=""];
3->4 [style = solid, label="groupSet"];
28->27 [style = bold, label=""];
16->12 [style = bold, label=""];
17->33 [style = solid, label="groupSet"];
1->14 [style = solid, label="groupSets"];
28->27 [style = solid, label="groupSets"];
5->0 [style = bold, label=""];
37->17 [style = bold, label=""];
17->32 [style = solid, label="groupSet"];
5->4 [style = solid, label="groupSets"];
17->27 [style = solid, label="groupSet"];
7->0 [style = bold, label=""];
18->43 [style = bold, label=""];
23->36 [style = bold, label=""];
42->30 [style = solid, label="groupSets"];
21->38 [style = bold, label=""];
36->11 [style = bold, label=""];
4->10 [style = bold, label=""];
17->6 [style = solid, label="groupSet"];
3->6 [style = solid, label="groupSet"];
43->20 [style = bold, label=""];
10->25 [style = solid, label="groupSets"];
3->0 [style = solid, label="groupSet"];
26->44 [style = bold, label=""];
13->16 [style = solid, label="groupSets"];
16->12 [style = solid, label="x"];
6->35 [style = bold, label=""];
35->33 [style = solid, label="groupSets"];
20->14 [style = bold, label=""];
17->30 [style = solid, label="groupSet"];
17->5 [style = bold, label=""];
13->28 [style = solid, label="groupSets"];
45->15 [style = bold, label=""];
44->6 [style = bold, label=""];
42->30 [style = bold, label=""];
29->26 [style = bold, label=""];
17->14 [style = solid, label="groupSet"];
}
