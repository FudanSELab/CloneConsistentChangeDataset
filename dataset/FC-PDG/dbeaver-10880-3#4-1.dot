digraph {
4 [style = filled, label = "String delimiter = sqlDialect.getScriptDelimiter()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "removeQueryDelimiter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String query@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!delimiter.isEmpty()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return false@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "String query@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return query@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "query.endsWith(delimiter)@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return queryWithoutDelimiter@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "return queryWithoutDelimiter@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return !query.endsWith(delimiter)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return true@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "SQLDialect sqlDialect@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "String(( scriptDelimiters = sqlDialect.getScriptDelimiters()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "return true@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "return !query.endsWith(delimiter)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Character.isLetterOrDigit(delimiter.charAt(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String queryWithoutDelimiter = query.substring(0,query.lastIndexOf(delimiter))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "needQueryDelimiter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "!Character.isLetterOrDigit(query.charAt(query.length() - delimiter.length() - 1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "!delimiter.isEmpty()@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "needQueryDelimiter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "!delimiter.isEmpty() && query.contains(delimiter)@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "query.toUpperCase().endsWith(delimiter.toUpperCase())@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String query@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SQLDialect sqlDialect@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
4->21 [style = solid, label="delimiter"];
13->16 [style = dotted, label="true"];
8->19 [style = dashed, label="0"];
1->4 [style = bold, label=""];
5->12 [style = dotted, label="false"];
9->0 [style = bold, label=""];
25->22 [style = bold, label=""];
2->6 [style = bold, label=""];
11->6 [style = bold, label=""];
12->15 [style = bold, label=""];
23->21 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
23->5 [style = dotted, label="true"];
7->20 [style = dashed, label="0"];
7->0 [style = bold, label=""];
7->20 [style = bold, label=""];
21->22 [style = solid, label="queryWithoutDelimiter"];
21->20 [style = solid, label="queryWithoutDelimiter"];
10->22 [style = dashed, label="0"];
9->6 [style = dotted, label="true"];
12->6 [style = bold, label=""];
13->11 [style = bold, label=""];
9->23 [style = dashed, label="0"];
6->15 [style = bold, label=""];
5->25 [style = bold, label=""];
9->6 [style = bold, label=""];
7->20 [style = dotted, label="true"];
7->14 [style = bold, label=""];
1->3 [style = dotted, label="true"];
21->5 [style = bold, label=""];
25->24 [style = bold, label=""];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
23->24 [style = bold, label=""];
2->0 [style = bold, label=""];
7->24 [style = bold, label=""];
18->4 [style = bold, label=""];
5->0 [style = bold, label=""];
5->12 [style = bold, label=""];
23->21 [style = bold, label=""];
13->8 [style = dotted, label="true"];
2->7 [style = dotted, label="true"];
6->10 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
2->15 [style = bold, label=""];
1->8 [style = dotted, label="true"];
5->25 [style = dotted, label="false"];
25->22 [style = dotted, label="true"];
0->24 [style = dashed, label="0"];
7->15 [style = bold, label=""];
14->15 [style = bold, label=""];
18->17 [style = dotted, label="true"];
2->7 [style = bold, label=""];
2->24 [style = bold, label=""];
22->24 [style = bold, label=""];
6->10 [style = dotted, label="false"];
20->24 [style = bold, label=""];
4->11 [style = dashed, label="0"];
4->25 [style = solid, label="delimiter"];
4->23 [style = solid, label="delimiter"];
14->6 [style = bold, label=""];
4->23 [style = bold, label=""];
19->24 [style = solid, label="query"];
6->5 [style = dotted, label="true"];
5->2 [style = dotted, label="true"];
7->14 [style = dotted, label="true"];
}
