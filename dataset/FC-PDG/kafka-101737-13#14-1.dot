digraph {
13 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/2(\",2L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L),new KeyValueTimestamp<>(\"(k1@0/2(\",3L,1L),new KeyValueTimestamp<>(\"(k1@0/2(\",4L,1L),new KeyValueTimestamp<>(\"(k1@4/6(\",1L,5L)))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",3L))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldSupportFinalResultsForTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "valueCounts.toStream().map(null).to(\"output-raw\",Produced.with(STRING_SERDE,Serdes.Long()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "inputTopic.pipeInput(\"k1\",\"v1\",1L)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final TestInputTopic<String,String> inputTopic = driver.createInputTopic(\"input\",STRING_SERIALIZER,STRING_SERIALIZER)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "inputTopic.pipeInput(\"k1\",\"v1\",1L)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final ConsumerRecordFactory<String,String> recordFactory = new ConsumerRecordFactory<>(STRING_SERIALIZER,STRING_SERIALIZER)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "inputTopic.pipeInput(\"k1\",\"v1\",0L)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final Topology topology = builder.build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).windowedBy(TimeWindows.of(ofMillis(2L)).grace(ofMillis(2L))).count(Materialized.as(\"counts\").withCachingDisabled().withKeySerde(STRING_SERDE))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",2L))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "inputTopic.pipeInput(\"k1\",\"v1\",2L)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",4L))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "System.out.println(topology.describe())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",4L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",2L,3L),new KeyValueTimestamp<>(\"(k1@4/6(\",1L,4L)))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",1L))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/2(\",2L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L),new KeyValueTimestamp<>(\"(k1@0/2(\",3L,1L),new KeyValueTimestamp<>(\"(k1@0/2(\",4L,1L),new KeyValueTimestamp<>(\"(k1@4/6(\",1L,5L)))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "inputTopic.pipeInput(\"k1\",\"v1\",5L)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "inputTopic.pipeInput(\"k1\",\"v1\",0L)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",5L))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "shouldSupportFinalResultsForTimeWindowsWithLargeJump['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "valueCounts.suppress(untilWindowCloses(unbounded())).toStream().map(null).to(\"output-suppressed\",Produced.with(STRING_SERDE,Serdes.Long()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",1L))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/2(\",2L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L),new KeyValueTimestamp<>(\"(k1@0/2(\",3L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",2L,3L),new KeyValueTimestamp<>(\"(k1@0/2(\",4L,1L),new KeyValueTimestamp<>(\"(k1@4/6(\",1L,4L),new KeyValueTimestamp<>(\"(k1@30/32(\",1L,30L)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "shouldSupportFinalResultsForTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",4L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L)))@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",30L))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).windowedBy(TimeWindows.of(ofMillis(2L)).grace(ofMillis(1L))).count(Materialized.as(\"counts\").withCachingDisabled())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "inputTopic.pipeInput(\"k1\",\"v1\",0L)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8->15 [style = bold, label=""];
18->23 [style = bold, label=""];
3->1 [style = bold, label=""];
15->34 [style = bold, label=""];
30->33 [style = bold, label=""];
16->10 [style = bold, label=""];
0->27 [style = bold, label=""];
34->1 [style = bold, label=""];
29->31 [style = bold, label=""];
0->2 [style = bold, label=""];
2->27 [style = dashed, label="0"];
22->21 [style = bold, label=""];
12->16 [style = bold, label=""];
16->17 [style = bold, label=""];
5->14 [style = bold, label=""];
11->9 [style = bold, label=""];
9->8 [style = bold, label=""];
15->3 [style = bold, label=""];
20->25 [style = bold, label=""];
24->22 [style = bold, label=""];
21->18 [style = bold, label=""];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
28->0 [style = bold, label=""];
25->24 [style = bold, label=""];
26->0 [style = bold, label=""];
13->19 [style = bold, label=""];
1->6 [style = bold, label=""];
3->34 [style = dashed, label="0"];
23->13 [style = bold, label=""];
6->13 [style = bold, label=""];
14->12 [style = bold, label=""];
31->30 [style = bold, label=""];
7->15 [style = bold, label=""];
33->32 [style = bold, label=""];
27->5 [style = bold, label=""];
1->29 [style = bold, label=""];
2->5 [style = bold, label=""];
17->20 [style = bold, label=""];
10->11 [style = bold, label=""];
}
