digraph {
19 [style = filled, label = "client.poll()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).updateLog(null).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "log.appendAsLeader(Arrays.asList(new SimpleRecord(\"foo\".getBytes()),new SimpleRecord(\"bar\".getBytes())),lastEpoch)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "pollUntilSend(client)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "deliverResponse(correlationId,otherNodeId,response)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(3L,log.endOffset().offset)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "FetchResponseData response = outOfRangeFetchRecordsResponse(epoch,otherNodeId,2L,lastEpoch,1L)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "context.pollUntilSend()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "quorumStateStore.writeElectionState(ElectionState.withElectedLeader(epoch,otherNodeId,voters))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KafkaRaftClient client = buildClient(voters)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int epoch = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "log.appendAsLeader(Collections.singleton(new SimpleRecord(\"foo\".getBytes())),lastEpoch)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int correlationId = assertSentFetchRequest(epoch,3L,lastEpoch)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int otherNodeId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFollowerLogReconciliation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "context.assertSentFetchRequest(epoch,1L,lastEpoch)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "int localId = 0@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "client.poll()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(ElectionState.withElectedLeader(epoch,otherNodeId,voters),quorumStateStore.readElectionState())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "log.appendAsLeader(Arrays.asList(new SimpleRecord(\"baz\".getBytes())),lastEpoch)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertSentFetchRequest(epoch,2L,lastEpoch)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int lastEpoch = 3@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(2L,log.endOffset().offset)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "KafkaRaftClient client = buildClient(voters)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->17 [style = bold, label=""];
0->3 [style = solid, label="lastEpoch"];
9->20 [style = dashed, label="0"];
16->13 [style = bold, label=""];
18->24 [style = bold, label=""];
10->13 [style = solid, label="epoch"];
10->9 [style = solid, label="epoch"];
5->6 [style = solid, label="voters"];
10->7 [style = solid, label="epoch"];
3->21 [style = dashed, label="0"];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
21->27 [style = bold, label=""];
25->23 [style = bold, label=""];
2->1 [style = bold, label=""];
8->6 [style = solid, label="client"];
0->26 [style = solid, label="lastEpoch"];
7->16 [style = dashed, label="0"];
17->9 [style = bold, label=""];
18->24 [style = solid, label="response"];
0->20 [style = solid, label="lastEpoch"];
9->20 [style = bold, label=""];
10->26 [style = solid, label="epoch"];
0->14 [style = solid, label="lastEpoch"];
0->27 [style = solid, label="lastEpoch"];
20->24 [style = solid, label="correlationId"];
12->1 [style = bold, label=""];
1->24 [style = solid, label="otherNodeId"];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
0->9 [style = solid, label="lastEpoch"];
10->6 [style = solid, label="epoch"];
10->4 [style = solid, label="epoch"];
10->20 [style = solid, label="epoch"];
5->16 [style = bold, label=""];
20->18 [style = bold, label=""];
5->4 [style = solid, label="voters"];
27->4 [style = bold, label=""];
12->5 [style = solid, label="localId"];
5->7 [style = solid, label="voters"];
24->25 [style = bold, label=""];
3->8 [style = bold, label=""];
23->19 [style = bold, label=""];
19->26 [style = bold, label=""];
10->0 [style = bold, label=""];
4->9 [style = solid, label="client"];
7->21 [style = bold, label=""];
1->4 [style = solid, label="otherNodeId"];
5->7 [style = bold, label=""];
10->18 [style = solid, label="epoch"];
5->8 [style = solid, label="voters"];
15->12 [style = bold, label=""];
10->14 [style = solid, label="epoch"];
22->1 [style = bold, label=""];
8->4 [style = bold, label=""];
1->6 [style = solid, label="otherNodeId"];
6->9 [style = bold, label=""];
0->21 [style = solid, label="lastEpoch"];
1->10 [style = bold, label=""];
0->18 [style = solid, label="lastEpoch"];
1->5 [style = solid, label="otherNodeId"];
1->13 [style = solid, label="otherNodeId"];
1->7 [style = solid, label="otherNodeId"];
0->5 [style = bold, label=""];
1->18 [style = solid, label="otherNodeId"];
}
