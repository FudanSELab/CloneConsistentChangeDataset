digraph {
6 [style = filled, label = "RelMetadataQuery mq@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "final RexBuilder rexBuilder = rel.getCluster().getRexBuilder()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final RexBuilder rexBuilder = calc.getCluster().getRexBuilder()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "getExpressionLineage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "idx >= rel.getGroupCount()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RelNode input = rel.getInput()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexInputRef ref = RexInputRef.of(idx,rel.getRowType().getFieldList())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Pair<ImmutableList<RexNode>,ImmutableList<RexNode>> calcProjectsAndFilter = calc.getProgram().split()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final RexInputRef inputRef = RexInputRef.of(rel.getGroupSet().nth(idx),input.getRowType().getFieldList())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Calc calc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "originalExprs == null@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final RelNode input = calc.getInput()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Aggregate rel@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final RexNode inputExpr = calcProjectsAndFilter.getKey().get(idx)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final Set<RexNode> originalExprs = mq.getExpressionLineage(input,inputExpr)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return createAllPossibleExpressions(rexBuilder,outputExpression,mapping)@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Aggregate rel@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "getExpressionLineage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "RexNode outputExpression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RexNode outputExpression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "RexNode outputExpression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "mapping.put(ref,originalExprs)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RelMetadataQuery mq@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Map<RexInputRef,Set<RexNode>> mapping = new LinkedHashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final ImmutableBitSet inputFieldsUsed = extractInputRefs(outputExpression)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return null@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Set<RexNode> originalExprs = mq.getExpressionLineage(input,inputRef)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RelMetadataQuery mq@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "return null@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final RexInputRef ref = RexInputRef.of(idx,calc.getRowType().getFieldList())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "getExpressionLineage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19->5 [style = solid, label="outputExpression"];
14->24 [style = dashed, label="0"];
16->3 [style = bold, label=""];
25->2 [style = solid, label="ref"];
5->8 [style = bold, label=""];
7->6 [style = dotted, label="true"];
15->11 [style = solid, label="originalExprs"];
8->23 [style = bold, label=""];
16->8 [style = bold, label=""];
29->30 [style = bold, label=""];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
20->17 [style = dotted, label="true"];
26->27 [style = dotted, label="true"];
11->4 [style = bold, label=""];
11->12 [style = dotted, label="true"];
1->5 [style = solid, label="outputExpression"];
24->13 [style = solid, label="rexBuilder"];
15->30 [style = dashed, label="0"];
10->28 [style = dashed, label="0"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
8->13 [style = solid, label="mapping"];
2->9 [style = bold, label=""];
3->16 [style = bold, label=""];
26->22 [style = dotted, label="true"];
7->0 [style = dotted, label="true"];
16->3 [style = dotted, label="true"];
25->2 [style = bold, label=""];
9->15 [style = solid, label="inputRef"];
28->30 [style = solid, label="input"];
24->5 [style = bold, label=""];
2->13 [style = bold, label=""];
20->10 [style = bold, label=""];
10->15 [style = solid, label="input"];
5->16 [style = bold, label=""];
23->29 [style = bold, label=""];
4->25 [style = dashed, label="0"];
15->2 [style = solid, label="originalExprs"];
30->11 [style = bold, label=""];
15->11 [style = bold, label=""];
12->4 [style = bold, label=""];
30->2 [style = solid, label="originalExprs"];
30->11 [style = solid, label="originalExprs"];
26->21 [style = dotted, label="true"];
9->15 [style = bold, label=""];
12->25 [style = bold, label=""];
3->8 [style = bold, label=""];
6->27 [style = dashed, label="0"];
22->13 [style = solid, label="outputExpression"];
6->19 [style = dashed, label="0"];
22->5 [style = solid, label="outputExpression"];
4->2 [style = solid, label="ref"];
8->9 [style = bold, label=""];
20->18 [style = dotted, label="true"];
28->24 [style = bold, label=""];
29->30 [style = solid, label="inputExpr"];
20->19 [style = dotted, label="true"];
26->28 [style = bold, label=""];
7->1 [style = dotted, label="true"];
2->29 [style = bold, label=""];
1->13 [style = solid, label="outputExpression"];
14->13 [style = solid, label="rexBuilder"];
11->25 [style = bold, label=""];
19->13 [style = solid, label="outputExpression"];
14->5 [style = bold, label=""];
}
