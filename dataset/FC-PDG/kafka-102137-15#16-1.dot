digraph {
7 [style = filled, label = "createClientWithPreviousActiveTasks(UUID_1,1,TASK_0_1,TASK_0_2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(\"clients shouldn't have same task assignment\",clients.get(otherUUID).assignedTasks(),not(equalTo(taskIds)))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<UUID> allUUIDs = asList(UUID_1,UUID_2,UUID_3,UUID_4)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "shouldNotHaveSameAssignmentOnAnyTwoHostsWhenThereArePreviousActiveTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createClientWithPreviousActiveTasks(UUID_2,1,TASK_0_3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c2.addPreviousStandbyTasks(Utils.mkSet(TASK_0_1,TASK_0_2))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "!uuid.equals(otherUUID)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldNotHaveSameAssignmentOnAnyTwoHostsWhenThereArePreviousActiveTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "taskAssignor.assign()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createClientWithPreviousActiveTasks(UUID_3,1,TASK_0_0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final boolean probingRebalanceNeeded = assign(1,TASK_0_0,TASK_0_2,TASK_0_1,TASK_0_3)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "createClient(UUID_4,1)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "createClient(UUID_3,1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final List<UUID> allUUIDs = asList(UUID_1,UUID_2,UUID_3)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "c1.addPreviousStandbyTasks(Utils.mkSet(TASK_0_3,TASK_0_0))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Set<TaskId> taskIds = clients.get(uuid).assignedTasks()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(probingRebalanceNeeded,is(false))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertThat(\"clients shouldn't have same task assignment\",clients.get(otherUUID).assignedTasks(),not(equalTo(taskIds)))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ClientState c2 = createClientWithPreviousActiveTasks(UUID_2,1,TASK_0_3,TASK_0_0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final ClientState c1 = createClientWithPreviousActiveTasks(UUID_1,1,TASK_0_1,TASK_0_2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createClient(UUID_4,1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final StickyTaskAssignor taskAssignor = createTaskAssignor(1,TASK_0_0,TASK_0_2,TASK_0_1,TASK_0_3)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final StickyTaskAssignor taskAssignor = createTaskAssignor(1,TASK_0_0,TASK_0_2,TASK_0_1,TASK_0_3)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "shouldNotHaveSameAssignmentOnAnyTwoHostsWhenThereArePreviousStandbyTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
21->19 [style = bold, label=""];
18->23 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
6->18 [style = bold, label=""];
7->14 [style = dashed, label="0"];
19->20 [style = bold, label=""];
6->23 [style = solid, label="taskIds"];
14->17 [style = bold, label=""];
6->0 [style = bold, label=""];
1->0 [style = bold, label=""];
20->1 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
4->21 [style = dashed, label="0"];
13->11 [style = bold, label=""];
9->6 [style = bold, label=""];
1->22 [style = bold, label=""];
0->9 [style = solid, label="taskIds"];
5->16 [style = dashed, label="0"];
11->0 [style = bold, label=""];
10->5 [style = bold, label=""];
22->0 [style = bold, label=""];
3->2 [style = bold, label=""];
6->9 [style = dotted, label="true"];
18->6 [style = bold, label=""];
2->13 [style = dashed, label="0"];
23->6 [style = bold, label=""];
3->13 [style = bold, label=""];
5->7 [style = bold, label=""];
16->14 [style = bold, label=""];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
13->11 [style = solid, label="probingRebalanceNeeded"];
17->21 [style = bold, label=""];
23->18 [style = bold, label=""];
18->23 [style = dotted, label="true"];
}
