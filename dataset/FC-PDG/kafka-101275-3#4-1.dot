digraph {
11 [style = filled, label = "shouldIterateCacheAndStore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "cachingStore.put(key,bytesValue(\"b\"),DEFAULT_TIMESTAMP + WINDOW_SIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "cachingStore.put(bytesKey(\"1\"),bytesValue(\"a\"),DEFAULT_TIMESTAMP)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verifyKeyValue(fetch.next(),DEFAULT_TIMESTAMP + WINDOW_SIZE,\"b\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "cachingStore.put(bytesKey(\"1\"),bytesValue(\"b\"),DEFAULT_TIMESTAMP + WINDOW_SIZE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldIterateBackwardAcrossWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertFalse(fetch.hasNext())@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final WindowStoreIterator<byte((> fetch = cachingStore.fetch(bytesKey(\"1\"),ofEpochMilli(DEFAULT_TIMESTAMP),ofEpochMilli(DEFAULT_TIMESTAMP + WINDOW_SIZE))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Bytes key = Bytes.wrap(\"1\".getBytes())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final WindowStoreIterator<byte((> fetch = cachingStore.backwardFetch(bytesKey(\"1\"),ofEpochMilli(DEFAULT_TIMESTAMP),ofEpochMilli(DEFAULT_TIMESTAMP + WINDOW_SIZE))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "shouldIterateBackwardAcrossWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "bytesStore.put(WindowKeySchema.toStoreKeyBinary(key,DEFAULT_TIMESTAMP,0),\"a\".getBytes())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verifyKeyValue(fetch.next(),DEFAULT_TIMESTAMP + WINDOW_SIZE,\"b\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verifyKeyValue(fetch.next(),DEFAULT_TIMESTAMP,\"a\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
2->10 [style = dashed, label="0"];
7->5 [style = bold, label=""];
9->12 [style = bold, label=""];
8->4 [style = bold, label=""];
0->12 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
9->12 [style = solid, label="key"];
11->9 [style = bold, label=""];
2->6 [style = bold, label=""];
10->6 [style = bold, label=""];
6->8 [style = bold, label=""];
0->2 [style = bold, label=""];
9->13 [style = solid, label="key"];
}
