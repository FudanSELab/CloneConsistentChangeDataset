digraph {
9 [style = filled, label = "SQLRewriteUnit sqlRewriteUnit2 = new SQLRewriteUnit(\"sql2\",Collections.singletonList(\"parameter2\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expected.add(expectedUnit1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(mock(),buildLogicSchemaMetaData(),mock(),mock())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ExecutionUnit expectedUnit2 = new ExecutionUnit(\"actualName2\",new SQLUnit(\"sql2\",Collections.singletonList(\"parameter2\")))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SQLRewriteUnit sqlRewriteUnit1 = new SQLRewriteUnit(\"sql1\",Collections.singletonList(\"parameter1\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(actual.iterator().next().getSqlUnit().getSqlRuntimeContext().getPrimaryKeysMetaData().size(),is(0))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RouteUnit routeUnit1 = new RouteUnit(new RouteMapper(\"logicName1\",\"actualName1\"),Collections.singletonList(new RouteMapper(\"logicName1\",\"actualName1\")))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<RouteUnit,SQLRewriteUnit> sqlRewriteUnits = new HashMap<>(2,1)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sqlRewriteUnits.put(routeUnit1,sqlRewriteUnit1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Collection<ExecutionUnit> expected = new LinkedHashSet<>(2,1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(actual,is(expected))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Collection<ExecutionUnit> expected = new LinkedHashSet<>(1,1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RouteUnit routeUnit2 = new RouteUnit(new RouteMapper(\"logicName2\",\"actualName2\"),Collections.singletonList(new RouteMapper(\"logicName1\",\"actualName1\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sqlRewriteUnits.put(routeUnit2,sqlRewriteUnit2)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Collection<ExecutionUnit> actual = ExecutionContextBuilder.build(metaData,new RouteSQLRewriteResult(sqlRewriteUnits),mock())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(actual.iterator().next().getSqlUnit().getSqlRuntimeContext().getPrimaryKeysMetaData().size(),is(0))@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Collection<ExecutionUnit> actual = ExecutionContextBuilder.build(metaData,new RouteSQLRewriteResult(sqlRewriteUnits),mock())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Map<RouteUnit,SQLRewriteUnit> sqlRewriteUnits = new HashMap<>(2,1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertBuildRouteSQLRewriteResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SQLRewriteUnit sqlRewriteUnit2 = new SQLRewriteUnit(\"sql2\",Collections.singletonList(\"parameter2\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expected.add(expectedUnit2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(mock(),mock(),buildPhysicalSchemaMetaDataWithoutPrimaryKey(),mock())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertBuildRouteSQLRewriteResultWithEmptyPrimaryKeyMeta['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertBuildRouteSQLRewriteResultWithEmptyPrimaryKeyMeta['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RouteUnit routeUnit2 = new RouteUnit(new RouteMapper(\"logicName2\",\"actualName2\"),Collections.singletonList(new RouteMapper(\"logicName2\",\"actualName2\")))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ExecutionUnit expectedUnit1 = new ExecutionUnit(\"actualName1\",new SQLUnit(\"sql1\",Collections.singletonList(\"parameter1\")))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ExecutionUnit expectedUnit2 = new ExecutionUnit(\"actualName2\",new SQLUnit(\"sql2\",Collections.singletonList(\"parameter2\")))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(actual.iterator().next().getSqlUnit().getSqlRuntimeContext().getPrimaryKeysMetaData().size(),is(1))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->24 [style = dashed, label="0"];
13->7 [style = bold, label=""];
11->0 [style = solid, label="expectedUnit2"];
25->23 [style = solid, label="actual"];
2->15 [style = solid, label="sqlRewriteUnits"];
27->12 [style = bold, label=""];
20->12 [style = solid, label="routeUnit2"];
1->12 [style = solid, label="logicSchemaMetaData"];
8->0 [style = bold, label=""];
26->27 [style = solid, label="sqlRewriteUnit1"];
0->22 [style = bold, label=""];
1->12 [style = bold, label=""];
16->19 [style = bold, label=""];
26->20 [style = bold, label=""];
24->25 [style = solid, label="metaData"];
7->9 [style = solid, label="routeUnit2"];
1->14 [style = dashed, label="0"];
0->10 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
1->27 [style = bold, label=""];
0->3 [style = solid, label="expected"];
0->18 [style = solid, label="expectedUnit1"];
10->23 [style = solid, label="expected"];
12->24 [style = bold, label=""];
2->11 [style = solid, label="sqlRewriteUnits"];
22->17 [style = solid, label="expectedUnit2"];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
10->18 [style = bold, label=""];
3->6 [style = bold, label=""];
14->15 [style = solid, label="metaData"];
23->21 [style = bold, label=""];
0->10 [style = bold, label=""];
2->9 [style = bold, label=""];
15->10 [style = solid, label="actual"];
8->10 [style = solid, label="expected"];
15->11 [style = bold, label=""];
9->12 [style = solid, label="sqlRewriteUnit2"];
7->4 [style = bold, label=""];
11->8 [style = bold, label=""];
1->25 [style = solid, label="sqlRewriteUnits"];
19->26 [style = bold, label=""];
4->9 [style = solid, label="sqlRewriteUnit2"];
9->14 [style = bold, label=""];
17->23 [style = bold, label=""];
11->3 [style = solid, label="actual"];
6->21 [style = dashed, label="0"];
25->0 [style = bold, label=""];
18->17 [style = bold, label=""];
12->11 [style = bold, label=""];
19->27 [style = solid, label="routeUnit1"];
24->25 [style = bold, label=""];
20->9 [style = bold, label=""];
12->11 [style = solid, label="metaData"];
14->15 [style = bold, label=""];
9->1 [style = bold, label=""];
22->10 [style = bold, label=""];
8->10 [style = solid, label="expectedUnit2"];
5->7 [style = bold, label=""];
}
