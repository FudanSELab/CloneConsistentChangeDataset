digraph {
4 [style = filled, label = "JDBCExecutorCallback<Boolean> jdbcExecutorCallback = new JDBCExecutorCallback<Boolean>(metaDataContexts.getDefaultMetaData().getResource().getDatabaseType(),sqlStatement,isExceptionThrown){@Override protected Boolean executeSQL(final String sql,final Statement statement,final ConnectionMode connectionMode){return executor.execute(sql,statement)}@Override protected Optional<Boolean> getSaneResult(final SQLStatement sqlStatement){return Optional.empty()}}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "boolean isExceptionThrown = SQLExecutorExceptionHandler.isExceptionThrown()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ExecutionGroupContext<JDBCExecutionUnit> executionGroupContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final ExecutionGroupContext<JDBCExecutionUnit> executionGroupContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return driverJDBCExecutor.execute(executionGroupContext,executionContext.getSqlStatementContext(),routeUnits,jdbcExecutorCallback)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createExecuteCallback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final SQLStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return new JDBCExecutorCallback<Boolean>(metaDataContexts.getDefaultMetaData().getResource().getDatabaseType(),sqlStatement,isExceptionThrown){@Override protected Boolean executeSQL(final String sql,final Statement statement,final ConnectionMode connectionMode){return ((PreparedStatement)statement).execute()}@Override protected Optional<Boolean> getSaneResult(final SQLStatement sqlStatement){return Optional.of(sqlStatement instanceof SelectStatement)}}@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Collection<RouteUnit> routeUnits@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final ExecuteCallback executor@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final SQLStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final Collection<RouteUnit> routeUnits@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10->8 [style = dotted, label="true"];
11->6 [style = solid, label="routeUnits"];
4->6 [style = bold, label=""];
5->4 [style = solid, label="sqlStatement"];
1->3 [style = bold, label=""];
0->6 [style = solid, label="routeUnits"];
10->3 [style = bold, label=""];
8->6 [style = solid, label="executionGroupContext"];
10->9 [style = dotted, label="true"];
3->4 [style = bold, label=""];
3->4 [style = solid, label="isExceptionThrown"];
1->7 [style = dotted, label="true"];
4->6 [style = solid, label="jdbcExecutorCallback"];
10->11 [style = dotted, label="true"];
2->6 [style = solid, label="executionGroupContext"];
9->4 [style = solid, label="sqlStatement"];
3->13 [style = bold, label=""];
12->3 [style = bold, label=""];
1->0 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
4->13 [style = dashed, label="0"];
1->5 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
3->13 [style = solid, label="isExceptionThrown"];
}
