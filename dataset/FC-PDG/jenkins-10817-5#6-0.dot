digraph {
0 [style = filled, label = "final FilePath d = new FilePath(tmp)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(d.installIfNecessaryFrom(url,new StreamTaskListener(baos),message))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final HttpURLConnection con = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(d.installIfNecessaryFrom(url,null,\"\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "installIfNecessaryAvoidsExcessiveDownloadsByUsingIfModifiedSince['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final URL url = someUrlToZipFile(con)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(log,log.contains(message))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String log = baos.toString()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "when(con.getResponseCode()).thenReturn(HttpURLConnection.HTTP_GATEWAY_TIMEOUT)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFalse(d.installIfNecessaryFrom(url,null,\"message if failed\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertTrue(log,log.contains(\"504 Gateway Timeout\"))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(con.getInputStream()).thenThrow(new ConnectException())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(con.getResponseCode()).thenReturn(HttpURLConnection.HTTP_NOT_MODIFIED)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String message = \"going ahead\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "d.child(\".timestamp\").touch(123000)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "installIfNecessaryAvoidsExcessiveDownloadsByUsingIfModifiedSince['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(con.getResponseMessage()).thenReturn(\"Gateway Timeout\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "File tmp = temp.getRoot()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(con).setIfModifiedSince(123000)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verify(con).setIfModifiedSince(123000)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "installIfNecessarySkipsDownloadWhenErroneous['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
5->8 [style = bold, label=""];
6->4 [style = solid, label="con"];
21->12 [style = solid, label="message"];
7->1 [style = bold, label=""];
21->18 [style = solid, label="message"];
4->17 [style = bold, label=""];
4->12 [style = solid, label="url"];
3->6 [style = bold, label=""];
5->9 [style = dashed, label="0"];
14->12 [style = solid, label="baos"];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
15->18 [style = solid, label="log"];
2->9 [style = bold, label=""];
20->1 [style = bold, label=""];
9->8 [style = bold, label=""];
2->17 [style = dashed, label="0"];
15->18 [style = bold, label=""];
21->12 [style = bold, label=""];
6->4 [style = bold, label=""];
1->0 [style = solid, label="tmp"];
11->13 [style = bold, label=""];
4->5 [style = solid, label="url"];
4->9 [style = solid, label="url"];
14->21 [style = bold, label=""];
19->15 [style = bold, label=""];
12->19 [style = bold, label=""];
10->1 [style = bold, label=""];
13->14 [style = bold, label=""];
15->16 [style = solid, label="log"];
2->5 [style = bold, label=""];
17->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
