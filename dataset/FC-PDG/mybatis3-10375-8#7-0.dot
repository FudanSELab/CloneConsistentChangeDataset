digraph {
17 [style = filled, label = "Assertions.assertEquals(\"Christian\",person.getFirstName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assertions.assertNotNull(parent,\"parent must not be null\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertEquals(\"John\",parent.getFirstName())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assertions.assertNotNull(person,\"person must not be null\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "criteria.setFirstName(\"Christian\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testWithComplex4['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Person parent = person.getParent()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assertions.assertNotNull(parent,\"parent must not be null\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assertions.assertEquals(\"Smith\",parent.getLastName())@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Person person = personMapper.getParentWithComplex(criteria)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PersonMapper personMapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assertions.assertEquals(\"Smith\",parent.getLastName())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Person criteria = new Person()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testWithComplex4['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assertions.assertEquals(\"John\",parent.getFirstName())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Person person = personMapper.getWithComplex3(2l)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testWithComplex3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assertions.assertEquals(\"Poitras\",person.getLastName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "criteria.setLastName(\"Poitras\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = solid, label="person"];
13->7 [style = bold, label=""];
1->10 [style = bold, label=""];
10->9 [style = bold, label=""];
5->1 [style = bold, label=""];
5->1 [style = solid, label="parent"];
6->0 [style = bold, label=""];
11->6 [style = bold, label=""];
7->11 [style = bold, label=""];
11->2 [style = solid, label="criteria"];
3->4 [style = solid, label="parent"];
14->15 [style = solid, label="person"];
7->14 [style = bold, label=""];
2->3 [style = bold, label=""];
12->5 [style = bold, label=""];
16->3 [style = bold, label=""];
4->12 [style = bold, label=""];
8->7 [style = bold, label=""];
0->2 [style = bold, label=""];
14->15 [style = bold, label=""];
17->16 [style = bold, label=""];
3->4 [style = bold, label=""];
18->7 [style = bold, label=""];
11->14 [style = dashed, label="0"];
15->17 [style = bold, label=""];
}
