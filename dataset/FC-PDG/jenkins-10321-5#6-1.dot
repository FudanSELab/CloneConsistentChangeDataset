digraph {
7 [style = filled, label = "j.jenkins.addView(new ListView(\"aView1\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(j.jenkins.getView(\"never_created1\"),nullValue())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created1: No view named never_created1 inside view Jenkins\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final CLICommandInvoker.Result result = command.invokeWithArgs(\"never_created\",\"aView1\",\"aView2\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(View.READ,View.DELETE,Jenkins.READ).invokeWithArgs(\"never_created\",\"aView1\",\"aView2\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertThat(j.jenkins.getView(\"aView1\"),nullValue())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "deleteViewManyShouldFailIfMoreViewsDoNotExist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created2: No view named never_created2 inside view Jenkins\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created: No view named never_created inside view Jenkins\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(View.READ,View.DELETE,Jenkins.READ).invokeWithArgs(\"aView1\",\"never_created1\",\"never_created2\",\"aView2\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(j.jenkins.getView(\"aView2\"),nullValue())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(j.jenkins.getView(\"never_created\"),nullValue())@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "deleteViewManyShouldFailIfFirstViewDoesNotExist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(result,failedWith(5))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "j.jenkins.addView(new ListView(\"aView2\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "deleteViewManyShouldFailIfFirstViewDoesNotExist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.READ,View.DELETE,Jenkins.READ).everywhere().toAuthenticated())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(j.jenkins.getView(\"never_created2\"),nullValue())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10->20 [style = bold, label=""];
15->7 [style = bold, label=""];
20->9 [style = bold, label=""];
7->10 [style = bold, label=""];
1->5 [style = solid, label="result"];
0->2 [style = bold, label=""];
4->19 [style = bold, label=""];
8->6 [style = bold, label=""];
5->17 [style = bold, label=""];
0->17 [style = dashed, label="0"];
1->9 [style = bold, label=""];
19->16 [style = bold, label=""];
14->5 [style = solid, label="result"];
1->20 [style = dashed, label="0"];
1->12 [style = dashed, label="0"];
6->4 [style = bold, label=""];
1->9 [style = solid, label="result"];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
10->12 [style = bold, label=""];
13->7 [style = bold, label=""];
14->0 [style = solid, label="result"];
12->14 [style = bold, label=""];
9->5 [style = bold, label=""];
20->9 [style = solid, label="result"];
4->19 [style = dashed, label="0"];
18->8 [style = bold, label=""];
20->5 [style = solid, label="result"];
4->11 [style = bold, label=""];
10->1 [style = bold, label=""];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
14->5 [style = bold, label=""];
}
