digraph {
3 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,c,d)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "values.put(\"c\",-3.1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(2.2D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(2.2D,result)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "values.put(\"c\",-3.1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "addManyFieldsWithManySubAddsWithNegative['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "addManyFieldsWithValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "values.put(\"b\",2.1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(3.323456789123456,result)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "values.put(\"a\",1.1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "values.put(\"d\",-4.12345678)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "values.put(\"d\",4)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "values.put(\"b\",-4.12345678)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "values.clear()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "values.put(\"d\",5.223456789123456)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "addManyFieldsWithValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "values.put(\"d\",4.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "values.put(\"c\",-3)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "values.clear()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "values.put(\"b\",-123456789123456789L)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(10.4D,result)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(4 * 123456789123456789L,result)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertEquals(6 * -4.12345678,result)@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "values.put(\"a\",-1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "values.put(\"a\",-4.12345678)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "values.put(\"c\",-4.12345678)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(10D,result)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "values.clear()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->3 [style = bold, label=""];
20->27 [style = bold, label=""];
28->3 [style = bold, label=""];
8->14 [style = bold, label=""];
10->21 [style = bold, label=""];
7->24 [style = bold, label=""];
6->41 [style = solid, label="result"];
43->46 [style = bold, label=""];
5->18 [style = solid, label="result"];
16->0 [style = bold, label=""];
23->16 [style = bold, label=""];
4->8 [style = bold, label=""];
3->45 [style = dashed, label="0"];
1->23 [style = bold, label=""];
25->12 [style = bold, label=""];
35->32 [style = bold, label=""];
20->25 [style = bold, label=""];
0->20 [style = bold, label=""];
54->33 [style = bold, label=""];
17->13 [style = bold, label=""];
3->9 [style = bold, label=""];
29->17 [style = bold, label=""];
39->47 [style = bold, label=""];
20->12 [style = solid, label="result"];
36->24 [style = bold, label=""];
53->60 [style = bold, label=""];
9->26 [style = bold, label=""];
14->10 [style = bold, label=""];
20->25 [style = solid, label="result"];
59->34 [style = bold, label=""];
6->4 [style = solid, label="result"];
37->53 [style = bold, label=""];
57->37 [style = bold, label=""];
44->31 [style = bold, label=""];
11->18 [style = bold, label=""];
8->41 [style = dashed, label="0"];
30->57 [style = bold, label=""];
24->6 [style = solid, label="result"];
22->36 [style = bold, label=""];
26->1 [style = bold, label=""];
15->40 [style = dashed, label="0"];
15->5 [style = bold, label=""];
51->56 [style = bold, label=""];
48->38 [style = bold, label=""];
41->14 [style = bold, label=""];
11->2 [style = solid, label="result"];
44->52 [style = solid, label="result"];
34->46 [style = solid, label="result"];
38->51 [style = bold, label=""];
26->50 [style = bold, label=""];
21->40 [style = bold, label=""];
40->5 [style = bold, label=""];
49->59 [style = bold, label=""];
6->4 [style = bold, label=""];
21->15 [style = bold, label=""];
47->49 [style = bold, label=""];
34->43 [style = solid, label="result"];
58->44 [style = bold, label=""];
60->54 [style = bold, label=""];
30->57 [style = solid, label="result"];
6->8 [style = solid, label="result"];
12->17 [style = bold, label=""];
24->4 [style = solid, label="result"];
11->35 [style = solid, label="result"];
50->23 [style = bold, label=""];
24->6 [style = bold, label=""];
34->43 [style = bold, label=""];
7->36 [style = dashed, label="0"];
56->30 [style = bold, label=""];
44->31 [style = solid, label="result"];
18->35 [style = bold, label=""];
52->42 [style = bold, label=""];
42->39 [style = bold, label=""];
31->52 [style = bold, label=""];
18->2 [style = bold, label=""];
13->22 [style = bold, label=""];
30->37 [style = solid, label="result"];
45->9 [style = bold, label=""];
27->29 [style = bold, label=""];
55->45 [style = bold, label=""];
5->11 [style = solid, label="result"];
4->41 [style = bold, label=""];
33->58 [style = bold, label=""];
5->11 [style = bold, label=""];
22->7 [style = bold, label=""];
1->50 [style = dashed, label="0"];
32->48 [style = bold, label=""];
11->18 [style = solid, label="result"];
2->35 [style = dashed, label="0"];
25->27 [style = dashed, label="0"];
20->27 [style = solid, label="result"];
}
