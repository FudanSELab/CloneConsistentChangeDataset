digraph {
6 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DefaultHighLowDataset d2 = CloneUtils.clone(d1)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(d1,d2)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(d1 != d2)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DefaultHighLowDataset d2 = (DefaultHighLowDataset)d1.clone()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertTrue(d1.equals(d2))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DefaultHighLowDataset d2 = (DefaultHighLowDataset)TestUtils.serialised(d1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",new Date((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@26486c,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@264872,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@264876,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@26487a,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@26487e,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@264882)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
7->1 [style = bold, label=""];
3->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
3->1 [style = solid, label="d2"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
2->9 [style = bold, label=""];
2->9 [style = solid, label="d1"];
3->4 [style = solid, label="d2"];
9->8 [style = bold, label=""];
7->1 [style = solid, label="d2"];
6->2 [style = bold, label=""];
2->1 [style = solid, label="d1"];
7->4 [style = solid, label="d2"];
3->9 [style = dashed, label="0"];
5->4 [style = bold, label=""];
2->8 [style = solid, label="d1"];
1->8 [style = dashed, label="0"];
10->2 [style = bold, label=""];
9->8 [style = solid, label="d2"];
2->7 [style = bold, label=""];
2->7 [style = solid, label="d1"];
}
