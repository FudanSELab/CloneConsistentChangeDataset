digraph {
9 [style = filled, label = "assertTrue(\"Expected < 42, but was \" + project.getEstimatedDuration(),project.getEstimatedDuration() < 42)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestBuild lastBuild = new TestBuild(project,Result.SUCCESS,42,previousBuild)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testGetEstimatedDurationWithOneRun['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestBuild previousPreviousBuild = new TestBuild(project,Result.SUCCESS,20,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testGetEstimatedDuration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(42,project.getEstimatedDuration())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "runs.put(3,previousPreviousBuild)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final SortedMap<Integer,TestBuild> runs = new TreeMap<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "runs.put(1,lastBuild)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Job project = createMockProject(runs)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testGetEstimatedDuration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestBuild previousBuild = new TestBuild(project,Result.SUCCESS,15,previousPreviousBuild)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TestBuild lastBuild = new TestBuild(project,Result.SUCCESS,42,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "runs.put(1,lastBuild)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SortedMap<Integer,TestBuild> runs = new TreeMap<Integer,TestBuild>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(\"Expected > 15, but was \" + project.getEstimatedDuration(),project.getEstimatedDuration() > 15)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "runs.put(2,previousBuild)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->5 [style = solid, label="project"];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
12->11 [style = bold, label=""];
4->0 [style = solid, label="project"];
0->5 [style = solid, label="previousPreviousBuild"];
13->16 [style = bold, label=""];
7->3 [style = bold, label=""];
5->7 [style = solid, label="previousBuild"];
4->0 [style = bold, label=""];
4->7 [style = solid, label="project"];
3->9 [style = bold, label=""];
0->10 [style = solid, label="previousPreviousBuild"];
0->10 [style = bold, label=""];
5->2 [style = bold, label=""];
9->14 [style = dashed, label="0"];
10->5 [style = bold, label=""];
4->13 [style = solid, label="project"];
0->13 [style = dashed, label="0"];
6->8 [style = bold, label=""];
5->2 [style = solid, label="previousBuild"];
11->4 [style = solid, label="runs"];
16->14 [style = bold, label=""];
7->3 [style = solid, label="lastBuild"];
8->4 [style = solid, label="runs"];
8->4 [style = bold, label=""];
2->7 [style = bold, label=""];
8->11 [style = dashed, label="0"];
9->1 [style = bold, label=""];
15->8 [style = bold, label=""];
13->16 [style = solid, label="lastBuild"];
}
