digraph {
10 [style = filled, label = "InputFile inFile = Files.localInput(PARQUET_FILE)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "ParquetFileReader reader = ParquetFileReader.open(ParquetIO.file(inFile))@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "builder.set(\"_all_nulls\",null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.set(\"_id\",INT_MIN_VALUE + i)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertTrue(parquetFile.delete())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "structNotNull.put(\"_int_field\",INT_MIN_VALUE + i)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File parquetFile = temp.newFile()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "OutputFile outFile = Files.localOutput(PARQUET_FILE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "appender.add(builder.build())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "dictionaryStore = reader.getNextDictionaryReader()@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.set(\"_no_nulls\",\"\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.set(\"_some_nulls\",(i % 10 == 0)? null: \"some\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "copy += 1@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "builder.set(\"_str\",i + \"str\" + i)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertTrue(parquetFile.delete())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PARQUET_FILE.exists()@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "GenericRecordBuilder builder = new GenericRecordBuilder(convert(FILE_SCHEMA,\"table\"))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "builder.set(\"_required\",\"req\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "parquetFile.exists()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < INT_MAX_VALUE - INT_MIN_VALUE + 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "builder.set(\"_no_stats_parquet\",TOO_LONG_FOR_STATS_PARQUET)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "org.apache.avro.Schema structSchema = AvroSchemaUtil.convert(_structFieldType)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "InputFile inFile = Files.localInput(parquetFile)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "createInputFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Record structNotNull = new Record(structSchema)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "OutputFile outFile = Files.localOutput(parquetFile)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "createInputFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "builder.set(\"_required\",\"req\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i += 1@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "copy < 20@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.set(\"_struct_not_null\",structNotNull)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(PARQUET_FILE.delete())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Record structNotNull = new Record(structSchema)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "createParquetInputFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "org.apache.avro.Schema structSchema = AvroSchemaUtil.convert(_structFieldType)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "GenericRecordBuilder builder = new GenericRecordBuilder(convert(FILE_SCHEMA,\"table\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "dictionaryStore = reader.getNextDictionaryReader()@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "InputFile inFile = Files.localInput(parquetFile)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "parquetFile.deleteOnExit()@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "PARQUET_FILE.deleteOnExit()@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->24 [style = bold, label=""];
0->12 [style = dotted, label="true"];
0->13 [style = bold, label=""];
37->11 [style = bold, label=""];
10->36 [style = dashed, label="0"];
2->6 [style = bold, label=""];
41->8 [style = bold, label=""];
20->0 [style = dotted, label="true"];
20->0 [style = bold, label=""];
40->15 [style = bold, label=""];
24->3 [style = solid, label="i"];
19->36 [style = bold, label=""];
0->4 [style = solid, label="i"];
36->33 [style = bold, label=""];
0->25 [style = dotted, label="true"];
23->28 [style = bold, label=""];
23->43 [style = dashed, label="0"];
30->11 [style = bold, label=""];
8->20 [style = bold, label=""];
0->21 [style = dotted, label="true"];
8->19 [style = solid, label="copy"];
17->14 [style = bold, label=""];
0->24 [style = dotted, label="true"];
31->30 [style = bold, label=""];
35->8 [style = bold, label=""];
34->32 [style = bold, label=""];
20->13 [style = dotted, label="true"];
0->3 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
2->6 [style = solid, label="copy"];
0->21 [style = solid, label="i"];
20->39 [style = solid, label="i"];
21->3 [style = bold, label=""];
2->21 [style = solid, label="i"];
0->44 [style = dotted, label="true"];
2->20 [style = bold, label=""];
5->23 [style = bold, label=""];
20->24 [style = dotted, label="true"];
24->0 [style = bold, label=""];
20->26 [style = dotted, label="true"];
0->42 [style = bold, label=""];
16->26 [style = bold, label=""];
30->25 [style = solid, label="structSchema"];
9->17 [style = bold, label=""];
19->2 [style = bold, label=""];
10->1 [style = solid, label="inFile"];
19->6 [style = bold, label=""];
32->36 [style = solid, label="parquetFile"];
39->4 [style = bold, label=""];
13->16 [style = bold, label=""];
42->40 [style = bold, label=""];
11->18 [style = bold, label=""];
6->20 [style = dotted, label="true"];
43->11 [style = bold, label=""];
0->39 [style = dotted, label="true"];
28->31 [style = dashed, label="0"];
2->4 [style = solid, label="i"];
20->3 [style = dotted, label="true"];
0->14 [style = dotted, label="true"];
0->20 [style = bold, label=""];
0->26 [style = dotted, label="true"];
10->1 [style = bold, label=""];
2->24 [style = solid, label="i"];
32->31 [style = bold, label=""];
24->13 [style = bold, label=""];
4->9 [style = bold, label=""];
4->17 [style = solid, label="structNotNull"];
20->25 [style = dotted, label="true"];
20->3 [style = solid, label="i"];
20->9 [style = dotted, label="true"];
22->45 [style = bold, label=""];
24->13 [style = solid, label="i"];
20->17 [style = dotted, label="true"];
23->28 [style = dotted, label="true"];
0->4 [style = dotted, label="true"];
0->20 [style = solid, label="i"];
16->44 [style = dashed, label="0"];
22->29 [style = bold, label=""];
3->12 [style = bold, label=""];
20->13 [style = solid, label="i"];
15->22 [style = bold, label=""];
2->20 [style = solid, label="i"];
26->21 [style = bold, label=""];
6->20 [style = bold, label=""];
11->41 [style = bold, label=""];
6->2 [style = dotted, label="true"];
17->0 [style = bold, label=""];
11->4 [style = solid, label="structSchema"];
20->4 [style = dotted, label="true"];
6->10 [style = bold, label=""];
20->0 [style = solid, label="i"];
18->8 [style = bold, label=""];
0->16 [style = dotted, label="true"];
12->39 [style = bold, label=""];
23->11 [style = bold, label=""];
36->33 [style = solid, label="inFile"];
0->9 [style = dotted, label="true"];
25->39 [style = dashed, label="0"];
38->43 [style = bold, label=""];
24->0 [style = solid, label="i"];
0->13 [style = dotted, label="true"];
28->37 [style = dashed, label="0"];
18->11 [style = dashed, label="0"];
19->2 [style = dotted, label="true"];
8->19 [style = bold, label=""];
19->20 [style = dotted, label="true"];
18->41 [style = dashed, label="0"];
1->15 [style = bold, label=""];
28->11 [style = bold, label=""];
0->2 [style = bold, label=""];
13->44 [style = bold, label=""];
25->4 [style = bold, label=""];
33->1 [style = bold, label=""];
19->6 [style = solid, label="copy"];
20->21 [style = dotted, label="true"];
6->19 [style = bold, label=""];
20->6 [style = bold, label=""];
43->37 [style = bold, label=""];
11->35 [style = bold, label=""];
24->39 [style = solid, label="i"];
43->37 [style = dotted, label="true"];
44->26 [style = bold, label=""];
12->25 [style = bold, label=""];
25->9 [style = solid, label="structNotNull"];
0->24 [style = solid, label="i"];
7->27 [style = bold, label=""];
29->7 [style = bold, label=""];
0->17 [style = dotted, label="true"];
19->6 [style = dotted, label="true"];
20->12 [style = dotted, label="true"];
20->24 [style = bold, label=""];
6->19 [style = solid, label="copy"];
20->9 [style = solid, label="i"];
32->11 [style = solid, label="parquetFile"];
20->16 [style = dotted, label="true"];
24->9 [style = solid, label="i"];
}
