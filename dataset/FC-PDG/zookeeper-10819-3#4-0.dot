digraph {
28 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "int n@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "offerThread.join()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "takeThread.start()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final byte(( takeResult = new byte((((((@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "int num_attempts = 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "takeThread.join()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Thread.sleep(1000)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(threadTestString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String threadTestString = testString + i@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final ZooKeeper clients = new ZooKeeper((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String dir@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "offerThread.start()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "byte(( data = null@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testTakeWait2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i < num_attempts@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),threadTestString)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "byte data = null@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final int num_clients = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "createNremoveMelementTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "String dir = \"/testTakeWait2\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createNremoveMelementTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "i < m@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(new String(queueHandles(1(.element()),testString + m)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final int num_clients = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29->9 [style = dotted, label="true"];
9->12 [style = solid, label="m"];
11->1 [style = dotted, label="true"];
21->8 [style = dotted, label="true"];
23->48 [style = dashed, label="0"];
11->1 [style = solid, label="i"];
4->15 [style = bold, label=""];
16->7 [style = bold, label=""];
14->17 [style = bold, label=""];
40->38 [style = bold, label=""];
38->42 [style = bold, label=""];
22->5 [style = solid, label="i"];
27->12 [style = solid, label="m"];
22->4 [style = bold, label=""];
1->3 [style = dotted, label="true"];
47->49 [style = bold, label=""];
25->4 [style = solid, label="n"];
41->48 [style = bold, label=""];
3->36 [style = bold, label=""];
11->2 [style = dotted, label="true"];
32->42 [style = dotted, label="true"];
48->43 [style = bold, label=""];
39->31 [style = bold, label=""];
4->15 [style = solid, label="i"];
30->46 [style = bold, label=""];
36->2 [style = bold, label=""];
3->36 [style = solid, label="clients"];
27->20 [style = solid, label="m"];
32->30 [style = dotted, label="true"];
20->18 [style = dotted, label="true"];
37->32 [style = solid, label="num_attempts"];
22->15 [style = solid, label="i"];
19->28 [style = bold, label=""];
4->16 [style = bold, label=""];
42->15 [style = bold, label=""];
32->15 [style = dotted, label="true"];
15->13 [style = bold, label=""];
8->4 [style = solid, label="n"];
32->35 [style = dotted, label="true"];
6->3 [style = solid, label="dir"];
32->49 [style = dotted, label="true"];
15->32 [style = solid, label="i"];
7->18 [style = solid, label="i"];
29->23 [style = bold, label=""];
1->11 [style = bold, label=""];
23->15 [style = solid, label="testString"];
45->11 [style = bold, label=""];
4->13 [style = dotted, label="true"];
18->20 [style = bold, label=""];
26->0 [style = bold, label=""];
21->9 [style = dotted, label="true"];
33->47 [style = bold, label=""];
23->12 [style = solid, label="testString"];
32->47 [style = dotted, label="true"];
2->1 [style = solid, label="i"];
20->10 [style = dotted, label="true"];
15->30 [style = solid, label="i"];
44->38 [style = solid, label="takeResult"];
13->5 [style = bold, label=""];
4->32 [style = solid, label="i"];
24->7 [style = bold, label=""];
21->6 [style = dotted, label="true"];
21->23 [style = bold, label=""];
36->2 [style = solid, label="i"];
44->30 [style = bold, label=""];
10->18 [style = bold, label=""];
4->5 [style = dotted, label="true"];
4->24 [style = bold, label=""];
34->40 [style = bold, label=""];
3->1 [style = bold, label=""];
32->34 [style = dotted, label="true"];
14->28 [style = dashed, label="0"];
2->1 [style = bold, label=""];
2->3 [style = bold, label=""];
44->42 [style = solid, label="takeResult"];
1->3 [style = bold, label=""];
14->39 [style = dashed, label="0"];
0->11 [style = bold, label=""];
2->3 [style = solid, label="clients"];
28->26 [style = bold, label=""];
18->20 [style = solid, label="i"];
7->20 [style = bold, label=""];
4->15 [style = dotted, label="true"];
32->33 [style = dotted, label="true"];
9->20 [style = solid, label="m"];
17->0 [style = bold, label=""];
19->14 [style = bold, label=""];
23->19 [style = bold, label=""];
5->4 [style = bold, label=""];
46->35 [style = bold, label=""];
11->22 [style = bold, label=""];
1->11 [style = solid, label="i"];
32->44 [style = bold, label=""];
32->38 [style = dotted, label="true"];
32->46 [style = dotted, label="true"];
11->3 [style = dotted, label="true"];
43->39 [style = bold, label=""];
32->44 [style = dotted, label="true"];
29->25 [style = dotted, label="true"];
1->37 [style = bold, label=""];
7->20 [style = solid, label="i"];
11->1 [style = bold, label=""];
16->24 [style = dashed, label="0"];
5->4 [style = solid, label="i"];
29->27 [style = dotted, label="true"];
35->33 [style = bold, label=""];
3->1 [style = solid, label="i"];
22->4 [style = solid, label="i"];
43->30 [style = solid, label="testString"];
32->40 [style = dotted, label="true"];
48->36 [style = solid, label="dir"];
49->34 [style = bold, label=""];
17->31 [style = dashed, label="0"];
11->2 [style = bold, label=""];
37->4 [style = bold, label=""];
20->10 [style = bold, label=""];
4->32 [style = dashed, label="0"];
1->36 [style = dotted, label="true"];
5->15 [style = solid, label="i"];
30->42 [style = solid, label="threadTestString"];
19->43 [style = dashed, label="0"];
0->11 [style = solid, label="i"];
20->12 [style = bold, label=""];
4->30 [style = solid, label="i"];
17->26 [style = dashed, label="0"];
1->2 [style = dotted, label="true"];
15->32 [style = bold, label=""];
9->3 [style = solid, label="dir"];
31->45 [style = bold, label=""];
4->32 [style = bold, label=""];
}
