digraph {
8 [style = filled, label = "Value<RestOpArgList.Builder> v = Value.empty()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "createHookMethodArgs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "BeanStore.of(beanStore,r).addBean(,v.get()).beanCreateMethodFinder(,r).find(\"createRestOpArgs\").run(null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "beanStore.getBean(\"RestContext.restOpArgs\",).map(null).ifPresent(null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "v.isEmpty()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BeanStore beanStore@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "beanStore.getBean(\"RestContext.restOpArgs\",).ifPresent(null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "v.set(RestOpArgList.of(,,,,,,,,,,,,,,,,,))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "beanStore.getBean(\"RestContext.hookMethodArgs\",).ifPresent(null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "BeanStore beanStore@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BeanStore.of(beanStore,r).addBean(,v.get()).beanCreateMethodFinder(,r).find(\"createRestOpArgs\").execute().ifPresent(null)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "createRestOpArgs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "return v.get()@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Supplier<?> resource@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createRestOpArgs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "beanStore.getBean(\"RestContext.hookMethodArgs\",).map(null).ifPresent(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "BeanStore.of(beanStore,r).addBean(,v.get()).beanCreateMethodFinder(,r).find(\"createHookMethodArgs\").execute().ifPresent(null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Object r = resource.get()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BeanStore.of(beanStore,r).addBean(,v.get()).beanCreateMethodFinder(,r).find(\"createRestOpArgs\").run(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "BeanStore.of(beanStore,r).addBean(,v.get()).beanCreateMethodFinder(,r).find(\"createHookMethodArgs\").execute().ifPresent(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "BeanStore.of(beanStore,r).addBean(,v.get()).beanCreateMethodFinder(,r).find(\"createRestOpArgs\").execute().ifPresent(null)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "v.set(RestOpArgList.of(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Supplier<?> resource@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Supplier<?> resource@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9->22 [style = bold, label=""];
1->8 [style = bold, label=""];
22->19 [style = bold, label=""];
0->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
17->9 [style = bold, label=""];
1->4 [style = dotted, label="true"];
20->21 [style = dotted, label="true"];
9->10 [style = bold, label=""];
6->14 [style = dashed, label="0"];
10->22 [style = dashed, label="0"];
16->22 [style = bold, label=""];
4->21 [style = dashed, label="0"];
5->17 [style = bold, label=""];
9->16 [style = bold, label=""];
15->4 [style = dotted, label="true"];
7->9 [style = bold, label=""];
3->10 [style = bold, label=""];
20->8 [style = bold, label=""];
8->5 [style = bold, label=""];
10->13 [style = bold, label=""];
19->23 [style = bold, label=""];
6->11 [style = bold, label=""];
10->0 [style = bold, label=""];
0->13 [style = dashed, label="0"];
20->18 [style = dotted, label="true"];
15->12 [style = dotted, label="true"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
9->16 [style = dotted, label="true"];
23->11 [style = bold, label=""];
1->2 [style = dotted, label="true"];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
15->8 [style = bold, label=""];
9->3 [style = dotted, label="true"];
6->23 [style = dashed, label="0"];
}
