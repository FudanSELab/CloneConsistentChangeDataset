digraph {
7 [style = filled, label = "assertEquals(Collections.singleton(TEST_TOPIC),adminClient.listTopics().names().get())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCreateRetriesOnTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "WorkerUtils.createTopics(log,adminClient,Collections.singletonMap(TEST_TOPIC,NEW_TEST_TOPIC),true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(new TopicDescription(TEST_TOPIC,false,Collections.singletonList(new TopicPartitionInfo(0,broker1,singleReplica,Collections.emptyList()))),adminClient.describeTopics(Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "adminClient.timeoutNextRequest(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testCreateRetriesOnTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "WorkerUtils.createTopics(log,adminClient,Collections.singletonMap(TEST_TOPIC,NEW_TEST_TOPIC),false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,adminClient.listTopics().names().get().size())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(new TopicDescription(TEST_TOPIC,false,Collections.singletonList(new TopicPartitionInfo(0,broker1,singleReplica,Collections.emptyList()))),adminClient.describeTopics(Collections.singleton(TEST_TOPIC)).topicNameValues().get(TEST_TOPIC).get())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testCreatesNotExistingTopics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(new TopicDescription(TEST_TOPIC,false,Collections.singletonList(new TopicPartitionInfo(0,broker1,singleReplica,Collections.emptyList()))),adminClient.describeTopics(Collections.singleton(TEST_TOPIC)).values().get(TEST_TOPIC).get())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->3 [style = bold, label=""];
8->7 [style = bold, label=""];
7->9 [style = bold, label=""];
0->8 [style = dashed, label="0"];
4->3 [style = bold, label=""];
2->5 [style = dashed, label="0"];
3->6 [style = dashed, label="0"];
10->6 [style = bold, label=""];
0->5 [style = bold, label=""];
3->0 [style = bold, label=""];
6->8 [style = bold, label=""];
0->2 [style = bold, label=""];
}
