digraph {
6 [style = filled, label = "functionRegister.put(metricsFunction.functionName(),(Class<? extends MeterFunction>)functionClass)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "!.isAssignableFrom(functionClass)@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MetricsFunction metricsFunction = aClass.getAnnotation()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "throw new UnexpectedException(\"Load class path failure.\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "functionClass.isAnnotationPresent()@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Class<?> functionClass = classInfo.load()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IOException e@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ClassPath classpath = ClassPath.from(.getClassLoader())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "classpath = ClassPath.from(.getClassLoader())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Class<?> aClass = classInfo.load()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ImmutableSet<ClassPath.ClassInfo> classes = classpath.getTopLevelClassesRecursive(\"org.apache.skywalking\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final ModuleManager manager@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "aClass.isAnnotationPresent()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "init['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MeterSystem['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "functionRegister.put(metricsFunction.functionName(),(Class<? extends AcceptableValue>)functionClass)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "classPool = ClassPool.getDefault()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MeterFunction metricsFunction = functionClass.getAnnotation()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ImmutableSet<ClassPath.ClassInfo> classes = classpath.getTopLevelClassesRecursive(\"org.apache.skywalking\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "REGISTER.put(metricsFunction.functionName(),(Class<? extends Metrics>)aClass)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new IllegalArgumentException(\"Function \" + functionClass.getCanonicalName() + \" doesn't implement AcceptableValue.\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MeterSystem['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "this.manager = manager@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ClassPath classpath = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->18 [style = dashed, label="0"];
5->8 [style = bold, label=""];
0->16 [style = bold, label=""];
19->18 [style = bold, label=""];
9->0 [style = dotted, label="true"];
9->0 [style = bold, label=""];
15->7 [style = bold, label=""];
12->7 [style = solid, label="manager"];
22->23 [style = dotted, label="true"];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
5->6 [style = dotted, label="true"];
4->6 [style = solid, label="functionClass"];
4->16 [style = solid, label="functionClass"];
1->7 [style = bold, label=""];
22->23 [style = bold, label=""];
9->16 [style = bold, label=""];
7->3 [style = bold, label=""];
9->6 [style = bold, label=""];
6->4 [style = bold, label=""];
18->17 [style = solid, label="aClass"];
22->18 [style = bold, label=""];
18->22 [style = bold, label=""];
6->16 [style = dashed, label="0"];
21->20 [style = bold, label=""];
10->11 [style = dotted, label="true"];
5->4 [style = bold, label=""];
2->14 [style = bold, label=""];
1->12 [style = dotted, label="true"];
5->16 [style = dotted, label="true"];
8->9 [style = bold, label=""];
13->2 [style = bold, label=""];
3->13 [style = bold, label=""];
15->12 [style = dotted, label="true"];
5->9 [style = dotted, label="true"];
23->17 [style = bold, label=""];
22->17 [style = dotted, label="true"];
16->4 [style = bold, label=""];
5->8 [style = dotted, label="true"];
20->19 [style = bold, label=""];
4->5 [style = bold, label=""];
17->18 [style = bold, label=""];
8->23 [style = dashed, label="0"];
14->4 [style = bold, label=""];
10->11 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
