digraph {
70 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.count(builder.fields()).as(\"ck\"))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "variablesSet.isEmpty()@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "return builder.literal(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "builder.as(\"ct\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "!keyIsNulls.isEmpty()@@@73@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "builder.aggregate(builder.groupKey(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "builder.distinct()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "builder.push(e.rel)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RexNode project = builder.and(fields.stream().map(null).collect(Collectors.toList()))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "logic@@@53@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "logic@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "builder.as(\"dt\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "b = null@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "List<RexNode> isNullOpperands = fields.stream().map(null).collect(Collectors.toList())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "variablesSet.isEmpty()@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),builder.literal(false))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "return builder.call(SqlStdOperatorTable.CASE,operands.build())@@@88@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "builder.join(JoinRelType.INNER,builder.and(conditions),variablesSet)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "RexSubQuery e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "builder.distinct()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "operands.add(builder.literal(false))@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "expressionOperands.clear()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "rewriteExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final List<RexNode> expressionOperands = new ArrayList<>(e.getOperands())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final List<RexNode> fields = new ArrayList<>(builder.fields())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "builder.project(builder.alias(project,\"cs\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "builder.distinct()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"i\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "RelBuilder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "fields.add(builder.alias(builder.literal(true),\"i\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),builder.literal(false)),builder.literal(b))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "RelBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,fields).stream().map(null).collect(Collectors.toList())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "return builder.isNotNull(Util.last(builder.fields()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "operands.add(builder.or(keyIsNulls),builder.literal(null))@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "int refOffset = offset@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,builder.fields()).stream().map(null).collect(Collectors.toList())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "builder.distinct()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rewriteIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "builder.filter(conditions)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "allLiterals@@@62@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "allLiterals@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "isNullOpperands.addAll(keyIsNulls)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final List<RexNode> keyIsNulls = e.getOperands().stream().filter(null).map(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "logic@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),builder.literal(false))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.push(e.rel)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "builder.aggregate(builder.groupKey(fields))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOpperands)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.and(conditions),variablesSet)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!variablesSet.isEmpty()@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "offset += 2@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "builder.as(\"dt\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "logic@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final ImmutableList.Builder<RexNode> operands = ImmutableList.builder()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.call(SqlStdOperatorTable.DESC,builder.field(\"cs\"))))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),builder.literal(true))@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RexSubQuery e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "builder.as(\"dt\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "builder.project(fields)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!allLiterals@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "fields.clear()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "allLiterals@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "rewriteIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.aggregateCall(SqlStdOperatorTable.COUNT,builder.fields()).as(\"ck\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return builder.literal(true)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "RexSubQuery e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "logic@@@83@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "builder.aggregate(builder.groupKey(builder.field(\"cs\")),builder.count(false,\"c\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"cs\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "int offset@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Boolean b = true@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "boolean allLiterals = RexUtil.allLiterals(e.getOperands())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "operands.add(builder.call(SqlStdOperatorTable.LESS_THAN,builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),builder.literal(b))@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RelBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),builder.literal(true))@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
46->72 [style = bold, label=""];
63->15 [style = bold, label=""];
16->37 [style = bold, label=""];
67->62 [style = solid, label="variablesSet"];
35->54 [style = solid, label="fields"];
19->55 [style = bold, label=""];
5->18 [style = dotted, label="true"];
67->37 [style = solid, label="variablesSet"];
11->70 [style = dashed, label="0"];
49->34 [style = dotted, label="true"];
77->82 [style = dotted, label="true"];
24->39 [style = bold, label=""];
43->13 [style = solid, label="allLiterals"];
63->20 [style = bold, label=""];
68->69 [style = dotted, label="true"];
33->50 [style = dotted, label="true"];
61->12 [style = bold, label=""];
68->71 [style = dotted, label="true"];
25->48 [style = bold, label=""];
35->43 [style = bold, label=""];
74->81 [style = dotted, label="true"];
66->50 [style = solid, label="logic"];
15->57 [style = bold, label=""];
55->48 [style = bold, label=""];
22->59 [style = bold, label=""];
23->84 [style = dashed, label="0"];
8->20 [style = bold, label=""];
43->1 [style = bold, label=""];
44->40 [style = dotted, label="true"];
54->33 [style = bold, label=""];
17->44 [style = bold, label=""];
63->16 [style = dotted, label="true"];
47->60 [style = bold, label=""];
51->14 [style = solid, label="keyIsNulls"];
77->78 [style = dotted, label="true"];
41->26 [style = solid, label="logic"];
13->63 [style = bold, label=""];
67->61 [style = solid, label="variablesSet"];
41->47 [style = solid, label="logic"];
58->16 [style = bold, label=""];
26->17 [style = bold, label=""];
63->8 [style = dotted, label="true"];
9->33 [style = bold, label=""];
49->30 [style = dotted, label="true"];
26->44 [style = dotted, label="true"];
77->73 [style = dotted, label="true"];
4->30 [style = solid, label="conditions"];
47->28 [style = dotted, label="true"];
39->45 [style = bold, label=""];
35->15 [style = solid, label="fields"];
30->34 [style = bold, label=""];
10->26 [style = bold, label=""];
74->47 [style = bold, label=""];
56->57 [style = bold, label=""];
63->12 [style = dotted, label="true"];
66->47 [style = solid, label="logic"];
47->60 [style = dotted, label="true"];
33->50 [style = bold, label=""];
68->66 [style = dotted, label="true"];
3->0 [style = bold, label=""];
45->9 [style = dotted, label="true"];
44->65 [style = dotted, label="true"];
65->6 [style = bold, label=""];
47->3 [style = dotted, label="true"];
73->81 [style = solid, label="variablesSet"];
5->36 [style = dotted, label="true"];
29->27 [style = bold, label=""];
63->70 [style = dotted, label="true"];
83->81 [style = bold, label=""];
68->67 [style = dotted, label="true"];
5->42 [style = dotted, label="true"];
21->22 [style = bold, label=""];
64->38 [style = bold, label=""];
4->62 [style = solid, label="conditions"];
67->30 [style = solid, label="variablesSet"];
1->51 [style = bold, label=""];
34->62 [style = bold, label=""];
5->7 [style = dotted, label="true"];
63->11 [style = dotted, label="true"];
68->42 [style = dotted, label="true"];
77->80 [style = dotted, label="true"];
28->19 [style = bold, label=""];
10->21 [style = solid, label="b"];
23->64 [style = bold, label=""];
80->74 [style = solid, label="logic"];
60->3 [style = solid, label="isNullOpperands"];
44->24 [style = dotted, label="false"];
47->38 [style = dotted, label="true"];
57->53 [style = bold, label=""];
11->58 [style = bold, label=""];
2->23 [style = solid, label="conditions"];
16->61 [style = dotted, label="true"];
10->40 [style = solid, label="b"];
63->29 [style = dotted, label="true"];
42->31 [style = solid, label="builder"];
66->26 [style = solid, label="logic"];
63->11 [style = bold, label=""];
65->40 [style = bold, label=""];
2->3 [style = solid, label="conditions"];
19->55 [style = dotted, label="false"];
36->37 [style = solid, label="variablesSet"];
74->83 [style = dotted, label="true"];
63->27 [style = dotted, label="true"];
5->41 [style = dotted, label="true"];
47->19 [style = dotted, label="true"];
74->84 [style = bold, label=""];
16->61 [style = bold, label=""];
63->70 [style = bold, label=""];
43->44 [style = solid, label="allLiterals"];
47->23 [style = dotted, label="true"];
50->21 [style = dotted, label="true"];
38->48 [style = bold, label=""];
85->47 [style = bold, label=""];
41->49 [style = solid, label="logic"];
51->13 [style = bold, label=""];
37->12 [style = bold, label=""];
13->2 [style = dotted, label="true"];
17->21 [style = solid, label="b"];
60->14 [style = bold, label=""];
40->39 [style = bold, label=""];
26->44 [style = bold, label=""];
49->30 [style = bold, label=""];
31->10 [style = bold, label=""];
12->8 [style = bold, label=""];
26->17 [style = dotted, label="true"];
39->32 [style = bold, label=""];
46->35 [style = bold, label=""];
73->76 [style = solid, label="variablesSet"];
47->64 [style = dotted, label="true"];
35->29 [style = solid, label="fields"];
42->82 [style = dashed, label="0"];
47->0 [style = dotted, label="true"];
16->37 [style = dotted, label="false"];
44->24 [style = bold, label=""];
75->76 [style = bold, label=""];
47->23 [style = bold, label=""];
41->63 [style = solid, label="logic"];
2->47 [style = bold, label=""];
45->9 [style = bold, label=""];
33->22 [style = bold, label=""];
47->75 [style = bold, label=""];
36->61 [style = solid, label="variablesSet"];
13->2 [style = bold, label=""];
74->47 [style = dotted, label="true"];
43->45 [style = solid, label="allLiterals"];
32->45 [style = bold, label=""];
19->25 [style = dotted, label="true"];
72->74 [style = bold, label=""];
48->56 [style = bold, label=""];
65->6 [style = dotted, label="true"];
68->46 [style = bold, label=""];
81->85 [style = bold, label=""];
20->29 [style = bold, label=""];
63->58 [style = dotted, label="true"];
74->85 [style = dotted, label="true"];
36->62 [style = solid, label="variablesSet"];
36->30 [style = solid, label="variablesSet"];
63->15 [style = dotted, label="true"];
66->49 [style = solid, label="logic"];
13->63 [style = dotted, label="false"];
66->63 [style = solid, label="logic"];
74->84 [style = dotted, label="true"];
7->31 [style = solid, label="builder"];
63->20 [style = dotted, label="true"];
45->54 [style = dotted, label="false"];
19->52 [style = dotted, label="true"];
77->46 [style = bold, label=""];
45->54 [style = bold, label=""];
62->31 [style = bold, label=""];
70->58 [style = bold, label=""];
52->25 [style = bold, label=""];
4->49 [style = bold, label=""];
39->32 [style = dotted, label="true"];
27->57 [style = bold, label=""];
6->40 [style = bold, label=""];
42->53 [style = solid, label="offset"];
44->65 [style = bold, label=""];
12->53 [style = solid, label="offset"];
47->14 [style = dotted, label="true"];
13->56 [style = dotted, label="true"];
76->79 [style = bold, label=""];
51->32 [style = solid, label="keyIsNulls"];
13->48 [style = dotted, label="true"];
71->53 [style = solid, label="offset"];
53->4 [style = bold, label=""];
13->47 [style = dotted, label="true"];
50->21 [style = bold, label=""];
0->28 [style = solid, label="project"];
17->40 [style = solid, label="b"];
5->46 [style = bold, label=""];
84->83 [style = bold, label=""];
0->28 [style = bold, label=""];
19->52 [style = bold, label=""];
41->50 [style = solid, label="logic"];
}
