digraph {
30 [style = filled, label = "templateMetadataBuilder.put(\"template4\",IndexTemplateMetadata.builder(\"template4\").patterns(Arrays.asList(\"nope\")).order(4).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline4\").build()).build())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "ImmutableOpenMap.Builder<String,IndexTemplateMetaData> templateMetaDataBuilder = ImmutableOpenMap.builder()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"pipeline2\",indexRequest.getPipeline())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "templateMetaDataBuilder.put(\"template3\",IndexTemplateMetaData.builder(\"template3\").patterns(Arrays.asList(\"missing*\")).order(3).build())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "when(metadata.templates()).thenReturn(templateMetadataBuilder.build())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(IngestService.NOOP_PIPELINE_NAME,indexRequest.getPipeline())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(metaData.getTemplates()).thenReturn(templateMetaDataBuilder.build())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "AtomicBoolean responseCalled = new AtomicBoolean(false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MetaData metaData = mock()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Exception exception = new Exception(\"fake exception\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ImmutableOpenMap.Builder<String,IndexTemplateMetadata> templateMetadataBuilder = ImmutableOpenMap.builder()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "IndexRequest indexRequest = new IndexRequest(\"missing_index\").id(\"id\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "templateMetadataBuilder.put(\"template1\",IndexTemplateMetadata.builder(\"template1\").patterns(Arrays.asList(\"missing_index\")).order(1).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline1\").build()).build())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Metadata metadata = mock()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "AtomicBoolean failureCalled = new AtomicBoolean(false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "templateMetadataBuilder.put(\"template2\",IndexTemplateMetadata.builder(\"template2\").patterns(Arrays.asList(\"missing_*\")).order(2).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline2\").build()).build())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "when(metaData.indices()).thenReturn(ImmutableOpenMap.of())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "templateMetaDataBuilder.put(\"template4\",IndexTemplateMetaData.builder(\"template4\").patterns(Arrays.asList(\"nope\")).order(4).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline4\").build()).build())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "testNotFindDefaultPipelineFromTemplateMatches['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "templateMetaDataBuilder.put(\"template2\",IndexTemplateMetaData.builder(\"template2\").patterns(Arrays.asList(\"missing_*\")).order(2).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline2\").build()).build())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "testFindDefaultPipelineFromTemplateMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "verifyZeroInteractions(ingestService)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "when(metadata.indices()).thenReturn(ImmutableOpenMap.of())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "verify(ingestService).executeBulkRequest(eq(1),bulkDocsItr.capture(),failureHandler.capture(),completionHandler.capture(),any())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "when(metadata.getTemplates()).thenReturn(templateMetadataBuilder.build())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "when(metaData.templates()).thenReturn(templateMetaDataBuilder.build())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "when(state.getMetaData()).thenReturn(metaData)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "when(state.metaData()).thenReturn(metaData)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "indexRequest.source(Collections.emptyMap())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(state.metadata()).thenReturn(metadata)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ActionTestUtils.execute(singleItemBulkWriteAction,null,indexRequest,ActionListener.wrap(null,null))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testFindDefaultPipelineFromTemplateMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "templateMetadataBuilder.put(\"template3\",IndexTemplateMetadata.builder(\"template3\").patterns(Arrays.asList(\"missing*\")).order(3).build())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "ClusterState state = clusterService.state()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "when(state.getMetadata()).thenReturn(metadata)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "templateMetaDataBuilder.put(\"template1\",IndexTemplateMetaData.builder(\"template1\").patterns(Arrays.asList(\"missing_index\")).order(1).settings(Settings.builder().put(IndexSettings.DEFAULT_PIPELINE.getKey(),\"pipeline1\").build()).build())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->8 [style = solid, label="indexRequest"];
8->34 [style = bold, label=""];
16->0 [style = bold, label=""];
18->23 [style = bold, label=""];
25->22 [style = bold, label=""];
21->27 [style = bold, label=""];
35->6 [style = bold, label=""];
2->1 [style = bold, label=""];
6->18 [style = bold, label=""];
27->30 [style = bold, label=""];
8->3 [style = bold, label=""];
4->19 [style = bold, label=""];
24->32 [style = bold, label=""];
34->33 [style = bold, label=""];
11->29 [style = dashed, label="0"];
12->31 [style = dashed, label="0"];
5->15 [style = bold, label=""];
30->25 [style = bold, label=""];
31->4 [style = bold, label=""];
25->28 [style = solid, label="metadata"];
22->28 [style = bold, label=""];
14->22 [style = dashed, label="0"];
1->32 [style = dashed, label="0"];
26->6 [style = bold, label=""];
17->21 [style = dashed, label="0"];
29->21 [style = bold, label=""];
9->6 [style = bold, label=""];
7->27 [style = dashed, label="0"];
17->7 [style = bold, label=""];
23->29 [style = bold, label=""];
19->5 [style = bold, label=""];
13->28 [style = dashed, label="0"];
6->4 [style = bold, label=""];
25->22 [style = solid, label="metadata"];
0->14 [style = bold, label=""];
3->20 [style = bold, label=""];
3->34 [style = dashed, label="0"];
0->25 [style = dashed, label="0"];
18->10 [style = bold, label=""];
12->4 [style = bold, label=""];
16->30 [style = dashed, label="0"];
7->16 [style = bold, label=""];
1->12 [style = bold, label=""];
0->13 [style = solid, label="metaData"];
28->24 [style = bold, label=""];
11->17 [style = bold, label=""];
14->13 [style = bold, label=""];
0->14 [style = solid, label="metaData"];
2->24 [style = dashed, label="0"];
10->23 [style = dashed, label="0"];
15->8 [style = bold, label=""];
32->31 [style = bold, label=""];
13->2 [style = bold, label=""];
10->11 [style = bold, label=""];
}
