digraph {
16 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),Matchers.lessThanOrEqualTo(totalDuration - sleepTimeInsideMail))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "long startTs = System.currentTimeMillis()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.greaterThanOrEqualTo(sleepTimeOutsideMail))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AvailabilityTestInputProcessor inputProcessor = new AvailabilityTestInputProcessor(numberOfProcessCalls)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RunnableWithException completeFutureTask = null@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "long totalDuration = System.currentTimeMillis() - startTs@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "executor.submit(null,\"Start WaitingThread after Task starts processing input.\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testProcessWithUnAvailableInput['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testProcessWithUnAvailableOutput['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),is(0L))@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final RunnableWithException completeFutureTask = null@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final int numberOfProcessCalls = 10@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "testProcessWithUnAvailableOutput['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "waitingThread = new WaitingThread(executor,completeFutureTask,sleepTimeInsideMail,sleepTimeOutsideMail)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "long startTs = System.currentTimeMillis()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "{if (waitingThread != null) {waitingThread.join()}}@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final MailboxExecutor executor = task.mailboxProcessor.getMainMailboxExecutor()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TaskIOMetricGroup ioMetricGroup = task.getEnvironment().getMetricGroup().getIOMetricGroup()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "@Nullable WaitingThread waitingThread = null@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),is(0L))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.lessThanOrEqualTo(totalDuration - sleepTimeInsideMail))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),Matchers.greaterThanOrEqualTo(sleepTimeOutsideMail))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "task.invoke()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final long sleepTimeInsideMail = 44@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final long sleepTimeOutsideMail = 42@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final UnAvailableTestInputProcessor inputProcessor = new UnAvailableTestInputProcessor()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->15 [style = bold, label=""];
15->21 [style = solid, label="executor"];
21->17 [style = solid, label="waitingThread"];
3->16 [style = solid, label="totalDuration"];
16->11 [style = bold, label=""];
9->0 [style = bold, label=""];
21->19 [style = bold, label=""];
11->7 [style = solid, label="totalDuration"];
0->6 [style = bold, label=""];
9->16 [style = solid, label="sleepTimeInsideMail"];
7->16 [style = dashed, label="0"];
26->3 [style = bold, label=""];
27->28 [style = bold, label=""];
9->21 [style = solid, label="sleepTimeInsideMail"];
11->4 [style = bold, label=""];
23->11 [style = solid, label="startTs"];
1->27 [style = bold, label=""];
0->5 [style = solid, label="numberOfProcessCalls"];
24->29 [style = bold, label=""];
0->6 [style = solid, label="numberOfProcessCalls"];
5->17 [style = bold, label=""];
13->16 [style = bold, label=""];
12->21 [style = dashed, label="0"];
4->7 [style = bold, label=""];
6->15 [style = bold, label=""];
7->14 [style = bold, label=""];
1->21 [style = solid, label="completeFutureTask"];
20->8 [style = bold, label=""];
18->22 [style = bold, label=""];
9->18 [style = bold, label=""];
22->0 [style = bold, label=""];
23->13 [style = bold, label=""];
10->12 [style = bold, label=""];
1->21 [style = bold, label=""];
3->11 [style = solid, label="startTs"];
19->23 [style = bold, label=""];
25->26 [style = bold, label=""];
12->27 [style = dashed, label="0"];
8->9 [style = bold, label=""];
3->13 [style = bold, label=""];
28->25 [style = bold, label=""];
8->21 [style = solid, label="sleepTimeOutsideMail"];
22->5 [style = solid, label="numberOfProcessCalls"];
12->3 [style = bold, label=""];
8->4 [style = solid, label="sleepTimeOutsideMail"];
30->8 [style = bold, label=""];
22->0 [style = solid, label="numberOfProcessCalls"];
8->13 [style = solid, label="sleepTimeOutsideMail"];
4->13 [style = dashed, label="0"];
1->10 [style = bold, label=""];
9->7 [style = solid, label="sleepTimeInsideMail"];
9->24 [style = bold, label=""];
14->11 [style = dashed, label="0"];
28->3 [style = solid, label="startTs"];
2->8 [style = bold, label=""];
14->5 [style = bold, label=""];
15->1 [style = bold, label=""];
}
