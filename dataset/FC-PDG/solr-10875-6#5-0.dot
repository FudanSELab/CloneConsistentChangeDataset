digraph {
4 [style = filled, label = "indexr(id,\"8\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"4\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "commit()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "indexr(id,\"6\",\"a_s\",\"hello2\",\"a_i\",\"8\",\"a_f\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "indexr(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(4 1 8 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String zkHost = zkServer.getZkAddress()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assert(tuples.size() == 9)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "totalCount += t.getLong(\"count\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assert(tuples.size() == totalCount)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "indexr(id,\"5\",\"a_s\",\"hello0\",\"a_i\",\"10\",\"a_f\",\"0\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ParallelStream pstream = new ParallelStream(zkHost,\"collection1\",cstream,2,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "indexr(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertOrder(tuples,0,1,2,3,4,7,6,8,9)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "indexr(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "del(\"*:*\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertOrder(tuples,9,8,6,4,3,2,1,0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map paramsA = mapParams(\"q\",\"id:(4 1 8 7 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new StreamComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "long totalCount = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "commit()@@@35@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "tuples = getTuples(pstream)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "pstream = new ParallelStream(zkHost,\"collection1\",mstream,2,new StreamComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testParallelMergeStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "indexr(id,\"9\",\"a_s\",\"hello1\",\"a_i\",\"100\",\"a_f\",\"1\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CountStream cstream = new CountStream(mstream)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ParallelStream pstream = new ParallelStream(zkHost,\"collection1\",cstream,2,new StreamComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new StreamComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "indexr(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assert(tuples.size() == 8)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Tuple t = it.next()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map paramsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ParallelStream pstream = new ParallelStream(zkHost,\"collection1\",mstream,2,new StreamComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "indexr(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"7\",\"a_f\",\"3\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "del(\"*:*\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "streamFactory.withCollectionZkHost(\"collection1\",zkHost)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "indexr(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "it.hasNext()@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "List<Tuple> tuples = getTuples(pstream)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testParallelEOF['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testParallelEOF['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Iterator<Tuple> it = eofTuples.values().iterator()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,Tuple> eofTuples = pstream.getEofTuples()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assert(eofTuples.size() == 2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->45 [style = solid, label="zkHost"];
11->14 [style = bold, label=""];
42->45 [style = bold, label=""];
17->9 [style = bold, label=""];
4->15 [style = bold, label=""];
29->0 [style = bold, label=""];
40->25 [style = bold, label=""];
10->35 [style = bold, label=""];
19->11 [style = bold, label=""];
22->34 [style = dashed, label="0"];
18->43 [style = solid, label="mstream"];
6->28 [style = bold, label=""];
32->35 [style = solid, label="streamA"];
24->17 [style = bold, label=""];
28->3 [style = bold, label=""];
1->10 [style = solid, label="paramsB"];
2->25 [style = bold, label=""];
10->18 [style = solid, label="streamB"];
38->44 [style = solid, label="tuples"];
22->13 [style = bold, label=""];
19->42 [style = bold, label=""];
28->43 [style = solid, label="zkHost"];
46->38 [style = bold, label=""];
43->48 [style = solid, label="pstream"];
14->30 [style = bold, label=""];
27->12 [style = bold, label=""];
30->27 [style = bold, label=""];
28->10 [style = solid, label="zkHost"];
26->47 [style = dashed, label="0"];
28->22 [style = solid, label="zkHost"];
32->18 [style = solid, label="streamA"];
42->45 [style = solid, label="paramsA"];
35->21 [style = bold, label=""];
33->29 [style = bold, label=""];
7->24 [style = bold, label=""];
37->46 [style = bold, label=""];
21->22 [style = bold, label=""];
28->34 [style = solid, label="zkHost"];
38->47 [style = bold, label=""];
47->44 [style = bold, label=""];
23->7 [style = bold, label=""];
48->13 [style = bold, label=""];
34->13 [style = solid, label="pstream"];
10->35 [style = solid, label="streamB"];
48->19 [style = solid, label="tuples"];
0->31 [style = bold, label=""];
36->39 [style = solid, label="paramsB"];
39->37 [style = bold, label=""];
10->18 [style = bold, label=""];
22->13 [style = solid, label="pstream"];
21->34 [style = bold, label=""];
45->36 [style = bold, label=""];
35->21 [style = solid, label="mstream"];
5->26 [style = solid, label="totalCount"];
45->37 [style = solid, label="streamA"];
36->39 [style = bold, label=""];
13->19 [style = bold, label=""];
3->8 [style = bold, label=""];
32->1 [style = bold, label=""];
16->5 [style = bold, label=""];
18->21 [style = bold, label=""];
21->43 [style = dashed, label="0"];
28->32 [style = solid, label="zkHost"];
31->23 [style = bold, label=""];
18->21 [style = solid, label="mstream"];
8->32 [style = bold, label=""];
20->29 [style = bold, label=""];
30->26 [style = solid, label="totalCount"];
21->34 [style = solid, label="cstream"];
41->29 [style = bold, label=""];
9->4 [style = bold, label=""];
43->48 [style = bold, label=""];
34->13 [style = bold, label=""];
44->40 [style = bold, label=""];
39->37 [style = solid, label="streamB"];
28->46 [style = solid, label="zkHost"];
15->6 [style = bold, label=""];
12->16 [style = bold, label=""];
12->26 [style = bold, label=""];
21->22 [style = solid, label="cstream"];
8->32 [style = solid, label="paramsA"];
18->35 [style = dashed, label="0"];
37->46 [style = solid, label="mstream"];
26->2 [style = bold, label=""];
28->3 [style = solid, label="zkHost"];
18->43 [style = bold, label=""];
12->16 [style = dotted, label="true"];
5->12 [style = bold, label=""];
12->5 [style = dotted, label="true"];
28->39 [style = solid, label="zkHost"];
1->10 [style = bold, label=""];
46->38 [style = solid, label="pstream"];
}
