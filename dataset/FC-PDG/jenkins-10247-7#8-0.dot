digraph {
5 [style = filled, label = "project.getBuildersList().add(createScriptBuilder(\"echo 1\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(result,failedWith(3))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(project.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(project.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "consoleShouldFailWithoutJobReadPermission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such job 'aProject'\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "changeProjectOnTheDisc(project,\"echo 1\",\"echo 2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "j.createFreeStyleProject(\"aProject\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "reloadJobShouldFailWithoutJobReadPermission['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such item �ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽaProject�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ exists.\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "reloadJobShouldFailWithoutJobReadPermission['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Item.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(result,failedWith(3))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).invokeWithArgs(\"aProject\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
15->13 [style = bold, label=""];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
7->10 [style = bold, label=""];
11->4 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->10 [style = dashed, label="0"];
2->9 [style = bold, label=""];
3->4 [style = bold, label=""];
17->12 [style = solid, label="result"];
4->7 [style = solid, label="project"];
13->17 [style = bold, label=""];
17->12 [style = bold, label=""];
17->14 [style = solid, label="result"];
5->6 [style = bold, label=""];
1->9 [style = solid, label="result"];
12->14 [style = bold, label=""];
0->8 [style = bold, label=""];
10->2 [style = bold, label=""];
1->2 [style = bold, label=""];
10->9 [style = solid, label="result"];
6->7 [style = bold, label=""];
10->2 [style = solid, label="result"];
4->13 [style = dashed, label="0"];
4->5 [style = bold, label=""];
1->2 [style = solid, label="result"];
}
