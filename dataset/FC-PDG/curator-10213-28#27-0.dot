digraph {
13 [style = filled, label = "i++@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNodeExists(observer,path)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "curator.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Trigger deletionTrigger = Trigger.deletedOrSetData()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Trigger deletedTrigger = Trigger.deletedOrSetData()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String path = node.getActualPath()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "curator.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertNotNull(stat,\"node should exist: \" + path)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "node.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < 5@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertNotNull(stat,\"node should exist: \" + path)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "node.debugWaitMsForBackgroundBeforeClose.set(timing.forSleepingABit().milliseconds())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
4->10 [style = bold, label=""];
9->20 [style = solid, label="path"];
17->20 [style = dotted, label="true"];
2->23 [style = dashed, label="0"];
15->13 [style = bold, label=""];
9->8 [style = solid, label="path"];
13->17 [style = solid, label="i"];
8->23 [style = bold, label=""];
17->18 [style = dotted, label="true"];
17->6 [style = bold, label=""];
7->12 [style = bold, label=""];
22->16 [style = bold, label=""];
25->30 [style = bold, label=""];
31->32 [style = bold, label=""];
8->23 [style = solid, label="stat"];
29->31 [style = bold, label=""];
12->17 [style = bold, label=""];
30->27 [style = bold, label=""];
21->8 [style = bold, label=""];
17->14 [style = dotted, label="true"];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
16->19 [style = bold, label=""];
20->15 [style = solid, label="stat"];
3->4 [style = bold, label=""];
32->26 [style = bold, label=""];
26->22 [style = bold, label=""];
17->23 [style = dotted, label="true"];
4->25 [style = solid, label="observer"];
17->16 [style = dotted, label="true"];
9->7 [style = solid, label="path"];
8->2 [style = solid, label="stat"];
13->17 [style = bold, label=""];
18->20 [style = bold, label=""];
17->8 [style = dotted, label="true"];
23->22 [style = bold, label=""];
17->15 [style = dotted, label="true"];
19->14 [style = bold, label=""];
8->2 [style = bold, label=""];
12->17 [style = solid, label="i"];
12->13 [style = solid, label="i"];
9->25 [style = dashed, label="0"];
17->19 [style = dotted, label="true"];
17->22 [style = dotted, label="true"];
14->18 [style = bold, label=""];
5->11 [style = bold, label=""];
17->2 [style = dotted, label="true"];
28->3 [style = bold, label=""];
19->32 [style = dashed, label="0"];
9->23 [style = solid, label="path"];
27->29 [style = bold, label=""];
2->22 [style = bold, label=""];
4->7 [style = solid, label="observer"];
10->1 [style = bold, label=""];
17->13 [style = dotted, label="true"];
20->15 [style = bold, label=""];
17->21 [style = dotted, label="true"];
17->21 [style = bold, label=""];
24->3 [style = bold, label=""];
10->6 [style = solid, label="node"];
9->2 [style = solid, label="path"];
11->25 [style = bold, label=""];
3->10 [style = solid, label="curator"];
10->22 [style = solid, label="node"];
}
