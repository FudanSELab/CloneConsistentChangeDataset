digraph {
7 [style = filled, label = "assertThat(this.registry.get(\"http.server.requests\").tags(\"exception\",\"IOException\").timer().count()).isEqualTo(1L)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MvcResult result = this.mvc.perform(get(\"/api/c1/completableFutureException\")).andExpect(request().asyncStarted()).andReturn()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MvcResult result = this.mvc.perform(get(\"/api/c1/streamingError\")).andExpect(request().asyncStarted()).andReturn()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer().activeTasks()).isEqualTo(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "asyncRequestThatThrowsUncheckedException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(this.registry.get(\"my.long.request.exception\").longTaskTimer().activeTasks()).isEqualTo(0)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "streamingError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThatExceptionOfType().isThrownBy(null).withRootCauseInstanceOf()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThatCode(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "asyncRequestThatThrowsUncheckedException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
8->9 [style = bold, label=""];
}
