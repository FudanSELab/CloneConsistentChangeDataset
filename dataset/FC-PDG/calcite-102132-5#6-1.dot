digraph {
7 [style = filled, label = "final RelNode input@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.limit(input)}}).replaceIf(RelDistributionTraitDef.INSTANCE,new Supplier<RelDistribution>(){public RelDistribution get(){return RelMdDistribution.limit(input)}})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RexNode condition@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RelNode input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RexNode offset@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "RexNode fetch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return new EnumerableFilter(cluster,traitSet,input,condition)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final RelNode input@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final RelOptCluster cluster = input.getCluster()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return new EnumerableLimit(cluster,traitSet,input,offset,fetch)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final RelMetadataQuery mq = RelMetadataQuery.instance()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->13 [style = dashed, label="0"];
6->3 [style = bold, label=""];
10->3 [style = solid, label="input"];
4->3 [style = solid, label="input"];
2->1 [style = bold, label=""];
1->3 [style = bold, label=""];
8->7 [style = dotted, label="true"];
1->0 [style = solid, label="cluster"];
4->0 [style = solid, label="input"];
12->1 [style = bold, label=""];
3->9 [style = solid, label="traitSet"];
3->0 [style = bold, label=""];
10->9 [style = solid, label="input"];
12->11 [style = dotted, label="true"];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
12->13 [style = dotted, label="true"];
1->6 [style = bold, label=""];
13->9 [style = solid, label="fetch"];
7->0 [style = solid, label="input"];
1->9 [style = solid, label="cluster"];
12->10 [style = dotted, label="true"];
8->5 [style = dotted, label="true"];
3->0 [style = solid, label="traitSet"];
2->4 [style = dotted, label="true"];
5->0 [style = solid, label="condition"];
0->9 [style = dashed, label="0"];
2->5 [style = dotted, label="true"];
6->3 [style = solid, label="mq"];
11->9 [style = solid, label="offset"];
7->3 [style = solid, label="input"];
}
