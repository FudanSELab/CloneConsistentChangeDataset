digraph {
19 [style = filled, label = "assertThat(topDocs.scoreDocs.length,equalTo(3))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(topDocs.totalHits.value,equalTo(3L))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(topDocs.scoreDocs.length,equalTo(3))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(),10,new Sort(sortField))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<LeafReaderContext> readerContexts = refreshReader()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "topDocs = searcher.search(new MatchAllDocsQuery(),10,new Sort(sortField))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "writer.forceMerge(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(topDocs.scoreDocs(1(.doc,equalTo(0))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertValues(bytesValues,2,three())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<LeafReaderContext> readerContexts = refreshReader()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(topDocs.scoreDocs(2(.doc,equalTo(1))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(topDocs.totalHits,equalTo(3L))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "SortedBinaryDocValues bytesValues = fieldData.getBytesValues()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(topDocs.scoreDocs(0(.doc,equalTo(0))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sortField = indexFieldData.sortField(null,MultiValueMode.MAX,null,true)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "fillMultiValueWithMissing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "AtomicFieldData fieldData = indexFieldData.load(readerContext)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testMultiValueWithMissing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "IndexFieldData<?> indexFieldData = getForField(\"value\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(topDocs.totalHits.value,equalTo(3L))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertThat(topDocs.totalHits,equalTo(3L))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertValues(bytesValues,0,two(),four())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertValues(bytesValues,1,one())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testMultiValueAllSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "MultiGeoPointValues fieldValues = ((AbstractAtomicGeoPointFieldData)fieldData).getGeoPointValues()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testMultiValueAllSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertMissing(fieldValues,1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SortField sortField = indexFieldData.sortField(null,MultiValueMode.MIN,null,false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertValues(fieldValues,0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(topDocs.scoreDocs(0(.doc,equalTo(1))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertValues(fieldValues,2)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(topDocs.scoreDocs(2(.doc,equalTo(2))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "fillMultiValueAllSet()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(topDocs.scoreDocs(1(.doc,equalTo(2))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(fieldData.ramBytesUsed(),greaterThanOrEqualTo(minRamBytesUsed()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
35->31 [style = bold, label=""];
18->4 [style = solid, label="sortField"];
17->26 [style = bold, label=""];
25->1 [style = bold, label=""];
22->15 [style = bold, label=""];
10->28 [style = bold, label=""];
28->6 [style = bold, label=""];
13->33 [style = solid, label="fieldValues"];
0->13 [style = bold, label=""];
25->32 [style = dashed, label="0"];
12->21 [style = bold, label=""];
11->26 [style = dashed, label="0"];
9->28 [style = dashed, label="0"];
22->16 [style = solid, label="bytesValues"];
18->17 [style = bold, label=""];
16->25 [style = bold, label=""];
1->18 [style = bold, label=""];
31->21 [style = bold, label=""];
21->30 [style = bold, label=""];
11->19 [style = bold, label=""];
26->19 [style = bold, label=""];
15->16 [style = bold, label=""];
32->30 [style = bold, label=""];
23->0 [style = bold, label=""];
18->17 [style = solid, label="sortField"];
3->0 [style = bold, label=""];
9->6 [style = bold, label=""];
22->15 [style = solid, label="bytesValues"];
20->2 [style = bold, label=""];
22->25 [style = solid, label="bytesValues"];
6->20 [style = bold, label=""];
2->23 [style = bold, label=""];
16->34 [style = dashed, label="0"];
7->24 [style = bold, label=""];
13->32 [style = solid, label="fieldValues"];
5->35 [style = dashed, label="0"];
5->12 [style = bold, label=""];
15->33 [style = dashed, label="0"];
4->10 [style = solid, label="sortField"];
34->32 [style = bold, label=""];
13->34 [style = solid, label="fieldValues"];
10->9 [style = bold, label=""];
30->0 [style = bold, label=""];
13->22 [style = bold, label=""];
29->35 [style = bold, label=""];
8->4 [style = bold, label=""];
24->8 [style = bold, label=""];
27->5 [style = bold, label=""];
13->33 [style = bold, label=""];
33->34 [style = bold, label=""];
19->7 [style = bold, label=""];
4->18 [style = solid, label="sortField"];
21->3 [style = bold, label=""];
14->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
