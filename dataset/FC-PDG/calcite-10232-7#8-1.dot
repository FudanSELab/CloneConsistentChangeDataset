digraph {
8 [style = filled, label = "assertThat(b,is(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(r.next(),is(true))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(b,is(false))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "b = s.execute(\"create table w (i int not null, j mytype)\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(r.getInt(1),is(4))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(x,is(1))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(b,is(false))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(r.next(),is(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(b,is(false))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(r.next(),is(false))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "boolean b = s.execute(\"create type mytype1 as BIGINT\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "b = s.execute(\"create table t (c mytype1 NOT NULL)\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(x,is(1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "x = s.executeUpdate(\"insert into w values (1, NULL)\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(b,is(false))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(b,is(false))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(x,is(1))@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(b,is(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "b = s.execute(\"create type mytype4 as BIGINT\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "b = s.execute(\"create type a.b.mytype as (i varchar(5))\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "boolean b = s.execute(\"create table t (i int not null)\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "b = s.execute(\"create schema a\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(b,is(false))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "x = s.executeUpdate(\"insert into t2 values (1, NULL)\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(b,is(false))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCreateType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(r.next(),is(true))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(x,is(1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "b = s.execute(\"create or replace type mytype1 as DOUBLE\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(b,is(false))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(x,is(1))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "b = s.execute(\"create type mytype as (i int)\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(b,is(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(x,is(1))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "b = s.execute(\"create schema a.b\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(r.next(),is(true))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testCreateType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(b,is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
14->3 [style = bold, label=""];
32->35 [style = bold, label=""];
29->8 [style = bold, label=""];
24->28 [style = bold, label=""];
16->36 [style = bold, label=""];
4->24 [style = bold, label=""];
8->41 [style = bold, label=""];
3->1 [style = bold, label=""];
5->9 [style = bold, label=""];
21->18 [style = solid, label="b"];
4->6 [style = bold, label=""];
43->31 [style = bold, label=""];
24->28 [style = solid, label="x"];
18->11 [style = bold, label=""];
41->37 [style = bold, label=""];
12->15 [style = bold, label=""];
1->19 [style = solid, label="b"];
30->26 [style = bold, label=""];
23->4 [style = bold, label=""];
5->24 [style = dashed, label="0"];
8->14 [style = bold, label=""];
27->16 [style = solid, label="b"];
21->38 [style = dashed, label="0"];
38->34 [style = solid, label="b"];
42->11 [style = solid, label="b"];
29->8 [style = solid, label="b"];
7->20 [style = bold, label=""];
9->7 [style = bold, label=""];
16->2 [style = bold, label=""];
27->16 [style = bold, label=""];
36->12 [style = bold, label=""];
43->31 [style = solid, label="b"];
26->39 [style = bold, label=""];
21->18 [style = bold, label=""];
2->12 [style = bold, label=""];
20->21 [style = bold, label=""];
23->4 [style = solid, label="b"];
19->5 [style = bold, label=""];
40->29 [style = bold, label=""];
12->38 [style = bold, label=""];
22->0 [style = bold, label=""];
33->25 [style = bold, label=""];
42->11 [style = bold, label=""];
11->10 [style = bold, label=""];
41->37 [style = solid, label="x"];
32->35 [style = solid, label="x"];
4->6 [style = solid, label="x"];
31->33 [style = bold, label=""];
0->29 [style = dashed, label="0"];
0->8 [style = bold, label=""];
0->8 [style = solid, label="b"];
36->12 [style = solid, label="b"];
10->4 [style = bold, label=""];
37->32 [style = bold, label=""];
38->34 [style = bold, label=""];
13->0 [style = bold, label=""];
7->20 [style = solid, label="b"];
11->43 [style = dashed, label="0"];
28->27 [style = bold, label=""];
33->25 [style = solid, label="x"];
1->19 [style = bold, label=""];
34->43 [style = bold, label=""];
39->42 [style = bold, label=""];
35->30 [style = bold, label=""];
5->9 [style = solid, label="b"];
14->3 [style = solid, label="b"];
11->23 [style = bold, label=""];
1->23 [style = dashed, label="0"];
7->36 [style = dashed, label="0"];
17->16 [style = bold, label=""];
11->10 [style = solid, label="x"];
}
