digraph {
9 [style = filled, label = "i++@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor,new LogContext())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(400,maxMetric.value(),EPSILON)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeAvg))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int throttleTimeMs = 100 * i@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "selector.clear()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "buffer = response.serialize(ApiKeys.FETCH.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int i = 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<TopicPartition,PartitionData>())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "client.close()@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "client.poll(1,time.milliseconds())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "client.poll(1,time.milliseconds())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,metricsRegistry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "client.send(request,time.milliseconds())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.respond(produceResponse(tp0,offset,Errors.NONE,100 * i))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "FetchResponse response = fetchResponse(tp0,nextRecords,Errors.NONE,i,throttleTimeMs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "selector.clear()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(250,avgMetric.value(),EPSILON)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i <= 3@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "accumulator.append(tp0,0L,\"key\".getBytes(),\"value\".getBytes(),null,null,MAX_BLOCK_TIMEOUT)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeMax))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i <= 3@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "accumulator.append(tp0,0L,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final long offset = 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->39 [style = dotted, label="true"];
30->20 [style = bold, label=""];
13->23 [style = solid, label="i"];
1->31 [style = dotted, label="true"];
26->40 [style = bold, label=""];
3->6 [style = dotted, label="true"];
3->4 [style = bold, label=""];
13->1 [style = bold, label=""];
14->7 [style = bold, label=""];
1->28 [style = bold, label=""];
10->41 [style = dashed, label="0"];
27->17 [style = solid, label="apiVersionsResponseVersion"];
9->6 [style = solid, label="i"];
33->25 [style = bold, label=""];
43->24 [style = bold, label=""];
36->19 [style = solid, label="selector"];
39->23 [style = bold, label=""];
27->17 [style = bold, label=""];
16->43 [style = bold, label=""];
20->18 [style = dotted, label="true"];
1->23 [style = dotted, label="true"];
28->23 [style = solid, label="throttleTimeMs"];
34->19 [style = solid, label="throttleTimeSensor"];
8->6 [style = solid, label="i"];
17->30 [style = solid, label="buffer"];
3->7 [style = dotted, label="true"];
1->35 [style = dotted, label="true"];
21->19 [style = bold, label=""];
13->29 [style = dashed, label="0"];
37->21 [style = bold, label=""];
1->43 [style = dotted, label="true"];
1->41 [style = dotted, label="true"];
1->32 [style = dotted, label="true"];
29->26 [style = bold, label=""];
23->35 [style = bold, label=""];
20->18 [style = bold, label=""];
18->20 [style = bold, label=""];
0->33 [style = dashed, label="0"];
2->1 [style = solid, label="i"];
7->6 [style = bold, label=""];
31->41 [style = bold, label=""];
2->28 [style = solid, label="i"];
32->31 [style = bold, label=""];
1->28 [style = dotted, label="true"];
13->1 [style = solid, label="i"];
1->26 [style = dashed, label="0"];
2->1 [style = bold, label=""];
3->10 [style = dotted, label="true"];
8->3 [style = bold, label=""];
22->29 [style = bold, label=""];
3->12 [style = bold, label=""];
3->9 [style = dotted, label="true"];
4->7 [style = bold, label=""];
3->14 [style = dotted, label="true"];
28->32 [style = bold, label=""];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
40->33 [style = bold, label=""];
2->0 [style = bold, label=""];
13->2 [style = solid, label="i"];
6->10 [style = bold, label=""];
20->42 [style = bold, label=""];
9->3 [style = bold, label=""];
4->14 [style = dashed, label="0"];
10->9 [style = bold, label=""];
1->2 [style = bold, label=""];
13->28 [style = solid, label="i"];
1->16 [style = dotted, label="true"];
36->34 [style = bold, label=""];
32->31 [style = solid, label="builder"];
5->8 [style = bold, label=""];
42->13 [style = bold, label=""];
35->16 [style = bold, label=""];
8->3 [style = solid, label="i"];
24->2 [style = bold, label=""];
3->14 [style = bold, label=""];
1->24 [style = dotted, label="true"];
2->23 [style = solid, label="i"];
3->4 [style = dotted, label="true"];
38->36 [style = bold, label=""];
17->30 [style = bold, label=""];
8->9 [style = solid, label="i"];
15->5 [style = bold, label=""];
1->22 [style = bold, label=""];
34->37 [style = bold, label=""];
31->41 [style = solid, label="request"];
19->27 [style = bold, label=""];
5->6 [style = solid, label="offset"];
35->16 [style = solid, label="buffer"];
2->40 [style = dashed, label="0"];
41->39 [style = bold, label=""];
1->2 [style = dotted, label="true"];
9->3 [style = solid, label="i"];
}
