digraph {
6 [style = filled, label = "tracer = (MockTracer)fieldReader.read()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "!GlobalTracer.isRegistered()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "JDBCExecutorCallbackAdviceTest.tracer = (MockTracer)fieldReader.read()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "FieldReader fieldReader = new FieldReader(GlobalTracer.get(),.getDeclaredField(\"tracer\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "executeCommandMethod = .getDeclaredMethod(\"executeCommand\",,,)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "executeMethod = .getDeclaredMethod(\"execute\",,,)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "GlobalTracer.register(new MockTracer())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tracer = (MockTracer)fieldReader.read()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
4->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
7->1 [style = bold, label=""];
3->2 [style = bold, label=""];
10->1 [style = bold, label=""];
0->4 [style = bold, label=""];
2->6 [style = bold, label=""];
2->8 [style = bold, label=""];
0->6 [style = dashed, label="0"];
8->9 [style = bold, label=""];
1->3 [style = dotted, label="true"];
}
