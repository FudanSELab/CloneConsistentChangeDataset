digraph {
45 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,10,\"HelixController should have 10 (6+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final int n = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "i < n@@@75@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (6 + 5 * n)}},500)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String oldSessionId = controller.getSessionId()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (7 + 5 * n)}},500)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "controller.syncStart()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},500)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "i++@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i < n@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,9,\"HelixController should have 9 (5+2n) callback handlers for 2 (n) participant\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "controller.syncStop()@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@79@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "participants(i(.syncStart()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "System.out.println(\"Expired controller session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},500)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry, but was \" + printHandlers(participantManager))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "handlerNb = participantManager.getHandlers().size()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handlers\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "participants(i(.syncStop()@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (6 + 5 * n)}},500)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertTrue(result)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,9,\"HelixController should have 9 (5+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final MockParticipantManager participantManager = participants(0(@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ZkTestHelper.expireSession(controller.getZkClient())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher after session expiry.\")@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "System.out.println(\"Expried participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry, but was \" + printHandlers(controller))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int particHandlerNb = participantManagerToExpire.getHandlers().size()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 6 + 5*n zk-watchers.\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handler, but was \" + particHandlerNb + \", \" + printHandlers(participantManager))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,n,2,\"MasterSlave\",true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int i = 0@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){int controllerHandlerNb = controller.getHandlers().size()int particHandlerNb = participantManager.getHandlers().size()if (controllerHandlerNb == 10 && particHandlerNb == 2) return truereturn false}},1000)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String newSessionId = controller.getSessionId()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "int i = 0@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "i < n@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry\")@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 6 + 5*n zk-watchers after session expiry.\")@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry\")@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int particHandlerNb = participantManager.getHandlers().size()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "handlerNb = participantManagerToExpire.getHandlers().size()@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final MockParticipantManager participantManagerToExpire = participants(1(@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher. MESSAGESHelixTaskExecutor\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "controller.syncStop()@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "System.out.println(\"Expiring controller session...\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(result)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->53 [style = bold, label=""];
70->69 [style = bold, label=""];
8->43 [style = solid, label="n"];
2->6 [style = bold, label=""];
15->25 [style = bold, label=""];
5->36 [style = solid, label="methodName"];
56->16 [style = solid, label="controllerHandlerNb"];
36->59 [style = solid, label="clusterName"];
8->30 [style = solid, label="n"];
56->12 [style = bold, label=""];
4->45 [style = solid, label="controllerHandlerNb"];
18->21 [style = solid, label="participantManager"];
54->61 [style = dotted, label="true"];
11->25 [style = solid, label="particHandlerNb"];
43->4 [style = bold, label=""];
21->2 [style = bold, label=""];
7->26 [style = bold, label=""];
4->24 [style = solid, label="controllerHandlerNb"];
8->1 [style = bold, label=""];
18->25 [style = solid, label="participantManager"];
22->14 [style = solid, label="newSessionId"];
42->44 [style = bold, label=""];
24->21 [style = bold, label=""];
42->24 [style = solid, label="controller"];
26->35 [style = bold, label=""];
2->60 [style = dashed, label="0"];
20->37 [style = bold, label=""];
57->55 [style = solid, label="i"];
31->33 [style = solid, label="i"];
36->1 [style = solid, label="clusterName"];
60->68 [style = bold, label=""];
13->20 [style = bold, label=""];
32->39 [style = solid, label="i"];
63->50 [style = bold, label=""];
28->3 [style = bold, label=""];
40->31 [style = bold, label=""];
58->64 [style = solid, label="result"];
5->36 [style = bold, label=""];
16->67 [style = bold, label=""];
36->20 [style = solid, label="clusterName"];
57->54 [style = bold, label=""];
25->70 [style = dashed, label="0"];
57->54 [style = solid, label="i"];
6->68 [style = dashed, label="0"];
8->10 [style = solid, label="n"];
36->29 [style = solid, label="clusterName"];
17->41 [style = bold, label=""];
43->51 [style = bold, label=""];
34->33 [style = bold, label=""];
12->70 [style = solid, label="particHandlerNb"];
35->27 [style = solid, label="result"];
19->52 [style = dashed, label="0"];
13->40 [style = bold, label=""];
33->40 [style = solid, label="i"];
11->21 [style = solid, label="particHandlerNb"];
51->58 [style = bold, label=""];
4->9 [style = solid, label="controllerHandlerNb"];
3->13 [style = solid, label="i"];
33->13 [style = bold, label=""];
46->41 [style = bold, label=""];
38->32 [style = bold, label=""];
0->7 [style = bold, label=""];
36->42 [style = solid, label="clusterName"];
31->18 [style = solid, label="participants"];
61->55 [style = bold, label=""];
8->54 [style = solid, label="n"];
20->37 [style = solid, label="result"];
39->27 [style = dotted, label="true"];
36->31 [style = solid, label="clusterName"];
24->45 [style = dashed, label="0"];
18->65 [style = dashed, label="0"];
3->40 [style = solid, label="i"];
43->51 [style = solid, label="result"];
41->36 [style = solid, label="className"];
32->23 [style = solid, label="i"];
30->0 [style = solid, label="result"];
45->21 [style = bold, label=""];
67->70 [style = solid, label="handlerNb"];
13->40 [style = dotted, label="true"];
22->14 [style = bold, label=""];
54->61 [style = bold, label=""];
19->22 [style = bold, label=""];
28->65 [style = solid, label="participants"];
52->63 [style = bold, label=""];
13->34 [style = dotted, label="true"];
25->38 [style = bold, label=""];
63->50 [style = solid, label="newSessionId"];
59->0 [style = solid, label="result"];
9->16 [style = dashed, label="0"];
39->16 [style = bold, label=""];
68->52 [style = bold, label=""];
35->9 [style = solid, label="handlerNb"];
18->47 [style = bold, label=""];
35->9 [style = bold, label=""];
67->70 [style = bold, label=""];
15->25 [style = solid, label="handlerNb"];
36->48 [style = solid, label="clusterName"];
11->24 [style = bold, label=""];
8->13 [style = solid, label="n"];
37->65 [style = bold, label=""];
31->34 [style = bold, label=""];
39->23 [style = dotted, label="true"];
66->16 [style = solid, label="handlerNb"];
15->67 [style = dashed, label="0"];
62->41 [style = bold, label=""];
13->33 [style = dotted, label="true"];
36->10 [style = solid, label="clusterName"];
66->16 [style = bold, label=""];
8->39 [style = solid, label="n"];
49->60 [style = bold, label=""];
14->29 [style = bold, label=""];
23->39 [style = bold, label=""];
36->8 [style = bold, label=""];
32->39 [style = bold, label=""];
36->16 [style = solid, label="clusterName"];
30->0 [style = bold, label=""];
23->39 [style = solid, label="i"];
42->9 [style = solid, label="controller"];
47->4 [style = bold, label=""];
14->50 [style = dashed, label="0"];
12->49 [style = solid, label="particHandlerNb"];
58->64 [style = bold, label=""];
35->27 [style = bold, label=""];
55->54 [style = solid, label="i"];
65->43 [style = bold, label=""];
11->45 [style = bold, label=""];
69->57 [style = bold, label=""];
54->48 [style = bold, label=""];
12->30 [style = bold, label=""];
6->19 [style = bold, label=""];
11->12 [style = dashed, label="0"];
39->27 [style = bold, label=""];
22->63 [style = dashed, label="0"];
28->18 [style = solid, label="participants"];
42->45 [style = solid, label="controller"];
40->31 [style = solid, label="instanceName"];
33->13 [style = solid, label="i"];
53->49 [style = bold, label=""];
24->53 [style = dashed, label="0"];
13->31 [style = dotted, label="true"];
29->12 [style = bold, label=""];
64->56 [style = bold, label=""];
18->43 [style = bold, label=""];
10->42 [style = bold, label=""];
7->26 [style = solid, label="result"];
43->47 [style = dashed, label="0"];
6->14 [style = solid, label="oldSessionId"];
9->15 [style = bold, label=""];
44->28 [style = bold, label=""];
68->50 [style = solid, label="oldSessionId"];
37->18 [style = bold, label=""];
3->13 [style = bold, label=""];
29->12 [style = solid, label="result"];
31->65 [style = solid, label="participants"];
27->23 [style = bold, label=""];
27->66 [style = bold, label=""];
59->0 [style = bold, label=""];
54->55 [style = dotted, label="true"];
21->49 [style = dashed, label="0"];
55->54 [style = bold, label=""];
4->11 [style = bold, label=""];
1->10 [style = bold, label=""];
56->53 [style = solid, label="controllerHandlerNb"];
8->7 [style = solid, label="n"];
41->5 [style = bold, label=""];
50->59 [style = bold, label=""];
}
