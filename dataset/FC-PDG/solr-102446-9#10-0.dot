digraph {
26 [style = filled, label = "myId.equals(props.getStr(\"id\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "boolean success = true@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "log.error(\"\",e)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return LeaderStatus.NO@@@35@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "amILeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "amILeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Timer.Context timerContext = stats.time(\"am_i_leader\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "KeeperException e@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "success = false@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "log.info(\"According to ZK I (id=\" + myId + \") am no longer a leader.\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "e.code() == KeeperException.Code.CONNECTIONLOSS@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread.currentThread().interrupt()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return LeaderStatus.DONT_KNOW@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "{timerContext.stop()if (success) {stats.success(\"am_i_leader\")}{stats.error(\"am_i_leader\")}}@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "InterruptedException e@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "log.warn(\"\",e)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{timerContext.stop()if (success) {stats.success(statsName)}{stats.error(statsName)}}@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "log.warn(\"\",e)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "boolean success = true@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String statsName = \"collection_am_i_leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "e.code() != KeeperException.Code.SESSIONEXPIRED@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ZkNodeProps props = ZkNodeProps.load(zkStateReader.getZkClient().getData(OverseerElectionContext.OVERSEER_ELECT + \"/leader\",null,null,true))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Timer.Context timerContext = stats.time(statsName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ZkNodeProps props = ZkNodeProps.load(zkClient.getData(OverseerElectionContext.OVERSEER_ELECT + \"/leader\",null,null,true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return LeaderStatus.NO@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Thread.currentThread().interrupt()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return LeaderStatus.YES@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "success = false@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ZkNodeProps props = ZkNodeProps.load(zkStateReader.getZkClient().getData(Overseer.OVERSEER_ELECT + \"/leader\",null,null,true))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "return LeaderStatus.DONT_KNOW@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return LeaderStatus.YES@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "amILeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
10->6 [style = dotted, label="true"];
29->17 [style = dotted, label="true"];
30->22 [style = bold, label=""];
4->1 [style = solid, label="statsName"];
29->17 [style = bold, label=""];
24->19 [style = bold, label=""];
7->21 [style = dashed, label="0"];
7->31 [style = dashed, label="0"];
28->30 [style = bold, label=""];
14->0 [style = dotted, label="true"];
2->1 [style = bold, label=""];
6->23 [style = bold, label=""];
5->10 [style = dotted, label="true"];
4->11 [style = solid, label="statsName"];
25->9 [style = bold, label=""];
26->14 [style = bold, label=""];
2->15 [style = dotted, label="true"];
22->31 [style = bold, label=""];
18->1 [style = solid, label="success"];
10->2 [style = dotted, label="false"];
5->6 [style = dotted, label="true"];
4->30 [style = dashed, label="0"];
27->2 [style = dotted, label="true"];
22->23 [style = solid, label="success"];
3->12 [style = bold, label=""];
12->1 [style = bold, label=""];
10->6 [style = bold, label=""];
17->3 [style = dotted, label="true"];
11->18 [style = bold, label=""];
13->1 [style = bold, label=""];
14->1 [style = bold, label=""];
19->8 [style = bold, label=""];
20->4 [style = bold, label=""];
7->14 [style = bold, label=""];
5->27 [style = dotted, label="false"];
2->23 [style = bold, label=""];
25->5 [style = dotted, label="true"];
31->26 [style = bold, label=""];
3->23 [style = bold, label=""];
23->24 [style = bold, label=""];
25->9 [style = dotted, label="true"];
14->0 [style = bold, label=""];
14->23 [style = bold, label=""];
9->23 [style = solid, label="success"];
10->13 [style = dotted, label="true"];
17->12 [style = dotted, label="true"];
0->1 [style = bold, label=""];
26->14 [style = dotted, label="true"];
6->13 [style = bold, label=""];
26->23 [style = bold, label=""];
2->15 [style = bold, label=""];
5->1 [style = solid, label="success"];
17->3 [style = bold, label=""];
9->5 [style = bold, label=""];
17->23 [style = solid, label="success"];
10->2 [style = bold, label=""];
27->23 [style = bold, label=""];
5->27 [style = bold, label=""];
18->21 [style = bold, label=""];
16->4 [style = bold, label=""];
18->7 [style = bold, label=""];
4->11 [style = bold, label=""];
3->1 [style = solid, label="success"];
1->19 [style = bold, label=""];
9->10 [style = dotted, label="true"];
29->3 [style = dotted, label="true"];
27->2 [style = bold, label=""];
21->14 [style = bold, label=""];
15->1 [style = bold, label=""];
9->5 [style = dotted, label="true"];
}
