digraph {
7 [style = filled, label = "byte(( tk1 = new byte((((,tk2 = new byte((((@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tmd.updateNormalToken(new BytesToken(tk2),InetAddressAndPort.getByName(\"127.0.0.2\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tmd.updateNormalToken(new BytesToken(tk2),InetAddress.getByName(\"127.0.0.2\"))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCleanupWithNewToken['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF_STANDARD1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(LOOPS,Util.getAll(Util.cmd(cfs).build()).size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CompactionManager.instance.performCleanup(cfs,2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TokenMetadata tmd = StorageService.instance.getTokenMetadata()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCleanupWithNewToken['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "fillCF(cfs,\"val\",LOOPS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CompactionManager.instance.forceUserDefinedCleanup(r.getFilename())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tk2(0( = 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tmd.updateNormalToken(new BytesToken(tk1),InetAddressAndPort.getByName(\"127.0.0.1\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "StorageService.instance.getTokenMetadata().clearUnsafe()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tk1(0( = 2@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testuserDefinedCleanupWithNewToken['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tmd.updateNormalToken(new BytesToken(tk1),InetAddress.getByName(\"127.0.0.1\"))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,Util.getAll(Util.cmd(cfs).build()).size())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
6->17 [style = bold, label=""];
17->10 [style = bold, label=""];
18->3 [style = bold, label=""];
8->16 [style = dashed, label="0"];
7->11 [style = bold, label=""];
5->9 [style = bold, label=""];
8->6 [style = bold, label=""];
3->12 [style = bold, label=""];
6->14 [style = dashed, label="0"];
2->6 [style = solid, label="tk2"];
15->3 [style = bold, label=""];
11->16 [style = solid, label="tk1"];
11->2 [style = bold, label=""];
14->1 [style = bold, label=""];
4->1 [style = solid, label="cfs"];
6->1 [style = bold, label=""];
1->17 [style = dashed, label="0"];
12->4 [style = bold, label=""];
13->7 [style = bold, label=""];
2->14 [style = solid, label="tk2"];
11->8 [style = solid, label="tk1"];
16->14 [style = bold, label=""];
1->10 [style = bold, label=""];
4->5 [style = bold, label=""];
4->5 [style = solid, label="cfs"];
2->8 [style = bold, label=""];
9->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
