digraph {
53 [style = filled, label = "testHarness1.processElement(new Tuple2<>(key1,\"SET_EVENT_TIME_TIMER:30\"),0)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "testEnsureProcessingTimeTimerRegisteredOnRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_EVENT_TIME:CIAO\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testHarness1.processElement(new Tuple2<>(key1,\"SET_STATE:HELLO\"),0)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_PROC_TIME:HELLO\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "testHarness.setProcessingTime(0L)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_STATE:CIAO\"),0)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "KeyGroupRange subKeyGroupRange1 = new KeyGroupRange(0,(maxParallelism / 2) - 1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@46@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testStateAndTimerStateShufflingScalingDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testHarness1.initializeState(snapshot)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OperatorSubtaskState repackagedState = AbstractStreamOperatorTestHarness.repackageState(testHarness1.snapshot(0,0),testHarness2.snapshot(0,0))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testHarness3.initializeState(initSubTaskState)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testHarness.processElement(new Tuple2<>(0,\"SET_STATE:HELLO\"),0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testHarness1.setProcessingTime(0L)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testHarness3.open()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "testHarness.processElement(new Tuple2<>(0,\"SET_PROC_TIME_TIMER:10\"),0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testHarness3.open()@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_EVENT_TIME:HELLO\"))@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness2.open()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testHarness1.setup()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "snapshot1 = testHarness1.snapshot(0,0)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testHarness3.setProcessingTime(30L)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_STATE:CIAO\"),0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testHarness1.setup()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_EVENT_TIME_TIMER:40\"),0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_PROC_TIME:CIAO\"))@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "OperatorSubtaskState snapshot = testHarness.snapshot(0,0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "OperatorSubtaskState snapshot1,snapshot2@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "TestOperator testOperator = new TestOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testHarness1.setProcessingTime(10L)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "TestOperator testOperator2 = new TestOperator()@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testHarness.open()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int key2 = getKeyInKeyGroupRange(subKeyGroupRange2,maxParallelism)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_PROC_TIME_TIMER:40\"),0)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "testHarness1.setProcessingTime(20L)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testHarness2.setup()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int key1 = getKeyInKeyGroupRange(subKeyGroupRange1,maxParallelism)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testHarness2.processWatermark(0L)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final int maxParallelism = 10@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "KeyGroupRange subKeyGroupRange2 = new KeyGroupRange(subKeyGroupRange1.getEndKeyGroup() + 1,maxParallelism - 1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testHarness.processElement(new Tuple2<>(1,\"SET_PROC_TIME_TIMER:20\"),0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testHarness2.processWatermark(0L)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testHarness3.setup()@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "TestOperator testOperator1 = new TestOperator()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(testOperator,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testHarness1.open()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testHarness3.processWatermark(40L)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness1 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator1,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_EVENT_TIME:HELLO\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHarness2.open()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness3.processWatermark(30L)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_PROC_TIME:CIAO\"))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "testHarness.processElement(new Tuple2<>(1,\"SET_STATE:CIAO\"),0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testHarness3.setProcessingTime(40L)@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "testHarness1.processElement(new Tuple2<>(key1,\"SET_PROC_TIME_TIMER:30\"),0)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "testHarness1.setProcessingTime(0L)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "snapshot2 = testHarness2.snapshot(0,0)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "testStateAndTimerStateShufflingScalingDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_PROC_TIME:HELLO\"))@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "testHarness3.setup()@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OperatorSubtaskState initSubTaskState = AbstractStreamOperatorTestHarness.repartitionOperatorState(repackagedState,maxParallelism,2,1,0)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_PROC_TIME_TIMER:40\"),0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testHarness1.open()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness1 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator1,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,2,0)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "OperatorSubtaskState repackagedState = AbstractStreamOperatorTestHarness.repackageState(snapshot1,snapshot2)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testHarness2.setProcessingTime(0L)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestOperator testOperator1 = new TestOperator()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHarness3.initializeState(initSubTaskState)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testHarness2.setProcessingTime(0L)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->28 [style = solid, label="maxParallelism"];
59->60 [style = solid, label="snapshot"];
18->64 [style = bold, label=""];
6->53 [style = solid, label="key1"];
64->69 [style = solid, label="testHarness1"];
70->65 [style = bold, label=""];
65->62 [style = bold, label=""];
18->57 [style = dashed, label="0"];
39->6 [style = bold, label=""];
31->6 [style = solid, label="maxParallelism"];
11->46 [style = bold, label=""];
52->55 [style = bold, label=""];
24->43 [style = bold, label=""];
47->11 [style = bold, label=""];
63->73 [style = bold, label=""];
20->71 [style = dashed, label="0"];
17->14 [style = bold, label=""];
2->36 [style = bold, label=""];
25->19 [style = bold, label=""];
20->37 [style = bold, label=""];
0->8 [style = bold, label=""];
43->47 [style = solid, label="snapshot2"];
40->24 [style = bold, label=""];
31->38 [style = solid, label="maxParallelism"];
18->64 [style = solid, label="testOperator1"];
66->63 [style = bold, label=""];
6->50 [style = solid, label="key1"];
48->41 [style = bold, label=""];
16->24 [style = solid, label="key2"];
14->30 [style = bold, label=""];
27->12 [style = bold, label=""];
24->2 [style = solid, label="testHarness3"];
35->44 [style = bold, label=""];
31->25 [style = solid, label="maxParallelism"];
16->56 [style = bold, label=""];
60->21 [style = bold, label=""];
16->34 [style = bold, label=""];
47->11 [style = solid, label="repackagedState"];
28->6 [style = solid, label="subKeyGroupRange1"];
7->0 [style = bold, label=""];
57->71 [style = bold, label=""];
12->35 [style = bold, label=""];
33->13 [style = bold, label=""];
22->5 [style = bold, label=""];
8->38 [style = bold, label=""];
67->61 [style = bold, label=""];
37->23 [style = solid, label="testOperator2"];
16->7 [style = solid, label="key2"];
18->20 [style = bold, label=""];
8->38 [style = solid, label="repackagedState"];
43->47 [style = bold, label=""];
19->26 [style = bold, label=""];
30->7 [style = bold, label=""];
29->32 [style = bold, label=""];
6->14 [style = solid, label="key1"];
59->18 [style = bold, label=""];
40->24 [style = solid, label="testOperator3"];
5->11 [style = bold, label=""];
31->28 [style = bold, label=""];
61->70 [style = bold, label=""];
6->17 [style = solid, label="key1"];
11->29 [style = solid, label="initSubTaskState"];
9->22 [style = bold, label=""];
72->69 [style = bold, label=""];
48->47 [style = solid, label="snapshot1"];
21->57 [style = bold, label=""];
28->39 [style = bold, label=""];
31->24 [style = solid, label="maxParallelism"];
16->40 [style = solid, label="key2"];
50->48 [style = bold, label=""];
62->66 [style = bold, label=""];
49->50 [style = bold, label=""];
46->29 [style = bold, label=""];
64->71 [style = solid, label="testHarness1"];
71->72 [style = bold, label=""];
38->22 [style = solid, label="initSubTaskState"];
4->31 [style = bold, label=""];
39->16 [style = solid, label="subKeyGroupRange2"];
6->41 [style = solid, label="key1"];
58->23 [style = bold, label=""];
31->23 [style = solid, label="maxParallelism"];
3->41 [style = bold, label=""];
32->1 [style = bold, label=""];
38->40 [style = bold, label=""];
64->58 [style = bold, label=""];
24->9 [style = bold, label=""];
34->25 [style = solid, label="testOperator1"];
16->0 [style = solid, label="key2"];
54->45 [style = bold, label=""];
30->38 [style = bold, label=""];
15->2 [style = bold, label=""];
24->32 [style = solid, label="testHarness3"];
34->25 [style = bold, label=""];
25->64 [style = dashed, label="0"];
1->15 [style = bold, label=""];
21->33 [style = bold, label=""];
16->30 [style = solid, label="key2"];
6->49 [style = solid, label="key1"];
16->38 [style = solid, label="key2"];
11->42 [style = bold, label=""];
20->53 [style = bold, label=""];
37->23 [style = bold, label=""];
23->60 [style = bold, label=""];
53->49 [style = bold, label=""];
24->42 [style = solid, label="testHarness3"];
31->16 [style = solid, label="maxParallelism"];
41->17 [style = bold, label=""];
36->27 [style = bold, label=""];
13->3 [style = bold, label=""];
23->21 [style = bold, label=""];
10->29 [style = bold, label=""];
6->16 [style = bold, label=""];
42->10 [style = bold, label=""];
31->39 [style = solid, label="maxParallelism"];
44->52 [style = bold, label=""];
68->59 [style = bold, label=""];
56->19 [style = bold, label=""];
61->70 [style = solid, label="testOperator"];
73->68 [style = bold, label=""];
51->31 [style = bold, label=""];
55->54 [style = bold, label=""];
31->11 [style = solid, label="maxParallelism"];
24->12 [style = solid, label="testHarness3"];
26->18 [style = bold, label=""];
}
