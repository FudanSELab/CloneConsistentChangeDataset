digraph {
11 [style = filled, label = "final MockInternalTopicManager internalTopicManager = configureDefault()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "builder.addSource(null,\"source3\",null,null,null,\"topicZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "builder.addProcessor(\"processor2\",new MockApiProcessorSupplier<>(),\"source2\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(2,internalTopicManager.readyTopics.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "builder.addInternalTopic(\"topicX\",InternalTopicProperties.empty())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "builder.addProcessor(\"processor1\",new MockApiProcessorSupplier<>(),\"source1\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final MockInternalTopicManager internalTopicManager = configureDefault()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "builder.addInternalTopic(\"topicZ\",InternalTopicProperties.empty())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "builder.addProcessor(\"processor2\",new MockProcessorSupplier<>(),\"source2\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<String> topics = asList(\"topic1\",APPLICATION_ID + \"-topicX\",APPLICATION_ID + \"-topicZ\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "builder.addSink(\"sink2\",\"topicZ\",null,null,null,\"processor2\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "builder.addSource(null,\"source1\",null,null,null,\"topic1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "partitionAssignor.assign(metadata,new GroupSubscription(subscriptions))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "builder.addSink(\"sink1\",\"topicX\",null,null,null,\"processor1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Set<TaskId> allTasks = mkSet(TASK_0_0,TASK_0_1,TASK_0_2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testAssignWithInternalTopicThatsSourceIsAnotherInternalTopic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "builder.addSource(null,\"source2\",null,null,null,\"topicX\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "subscriptions.put(\"consumer10\",new Subscription(topics,defaultSubscriptionInfo.encode()))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "builder.addProcessor(\"processor1\",new MockProcessorSupplier<>(),\"source1\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testAssignWithInternalTopics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final List<String> topics = asList(\"topic1\",APPLICATION_ID + \"-topicX\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Set<TaskId> allTasks = mkSet(TASK_0_0,TASK_0_1,TASK_0_2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(allTasks.size(),(long)internalTopicManager.readyTopics.get(APPLICATION_ID + \"-topicZ\"))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testAssignWithInternalTopics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18->3 [style = bold, label=""];
4->14 [style = bold, label=""];
7->17 [style = bold, label=""];
12->5 [style = bold, label=""];
0->13 [style = bold, label=""];
18->0 [style = solid, label="topics"];
2->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
16->6 [style = bold, label=""];
19->20 [style = bold, label=""];
13->20 [style = dashed, label="0"];
3->11 [style = bold, label=""];
4->21 [style = bold, label=""];
10->3 [style = bold, label=""];
17->22 [style = bold, label=""];
7->8 [style = bold, label=""];
4->7 [style = bold, label=""];
5->16 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
13->19 [style = bold, label=""];
11->0 [style = bold, label=""];
22->18 [style = bold, label=""];
2->16 [style = dashed, label="0"];
8->3 [style = solid, label="topics"];
21->7 [style = bold, label=""];
23->12 [style = bold, label=""];
14->8 [style = bold, label=""];
15->12 [style = bold, label=""];
9->12 [style = bold, label=""];
1->10 [style = bold, label=""];
}
