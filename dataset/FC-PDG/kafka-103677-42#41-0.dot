digraph {
8 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "buffer = response.serialize(ApiKeys.FETCH.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "subscriptions.seek(tp1,0)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "int i = 1@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<TopicPartition,PartitionData>())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,\"consumer\" + groupId)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "v++@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "i <= 3@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.assignFromUser(singleton(tp1))@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "client.poll(1,time.milliseconds())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "builder.appendWithOffset(i * 3 + v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records = fetchRecords(builder.build(),Errors.NONE,100L,100 * i).get(tp1)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "i < 4@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "selector.clear()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i <= 3@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "i++@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "accumulator.append(tp0,0L,\"key\".getBytes(),\"value\".getBytes(),null,null,MAX_BLOCK_TIMEOUT)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int throttleTimeMs = 100 * i@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "client.respond(produceResponse(tp0,offset,Errors.NONE,100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(400,maxMetric.value(),EPSILON)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "client.close()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(250,avgMetric.value(),EPSILON)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "v < 3@@@10@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int v = 0@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "client.send(request,time.milliseconds())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "selector.clear()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "client.poll(1,time.milliseconds())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "FetchResponse response = fetchResponse(nextRecords,Errors.NONE,i,throttleTimeMs)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6->9 [style = solid, label="i"];
15->12 [style = solid, label="v"];
16->0 [style = bold, label=""];
9->12 [style = dotted, label="true"];
12->5 [style = bold, label=""];
7->15 [style = solid, label="v"];
10->19 [style = bold, label=""];
1->30 [style = solid, label="i"];
12->15 [style = dotted, label="true"];
25->40 [style = solid, label="throttleTimeSensor"];
5->15 [style = bold, label=""];
51->55 [style = solid, label="i"];
38->31 [style = bold, label=""];
1->19 [style = solid, label="i"];
52->0 [style = solid, label="i"];
0->6 [style = dotted, label="true"];
42->29 [style = bold, label=""];
56->54 [style = bold, label=""];
21->38 [style = bold, label=""];
49->55 [style = bold, label=""];
45->26 [style = solid, label="apiVersionsResponseVersion"];
41->22 [style = solid, label="buffer"];
9->19 [style = dashed, label="0"];
0->53 [style = bold, label=""];
19->44 [style = dotted, label="true"];
55->57 [style = bold, label=""];
51->52 [style = solid, label="i"];
28->43 [style = bold, label=""];
0->52 [style = dotted, label="true"];
47->51 [style = bold, label=""];
35->10 [style = bold, label=""];
41->22 [style = bold, label=""];
8->4 [style = bold, label=""];
29->1 [style = bold, label=""];
4->54 [style = dashed, label="0"];
0->55 [style = dotted, label="true"];
24->28 [style = bold, label=""];
23->25 [style = bold, label=""];
19->34 [style = bold, label=""];
30->41 [style = bold, label=""];
1->50 [style = bold, label=""];
33->32 [style = dotted, label="true"];
6->5 [style = solid, label="i"];
25->36 [style = bold, label=""];
14->10 [style = bold, label=""];
9->17 [style = bold, label=""];
51->0 [style = bold, label=""];
6->49 [style = bold, label=""];
4->2 [style = bold, label=""];
13->16 [style = bold, label=""];
0->57 [style = dotted, label="true"];
52->0 [style = bold, label=""];
34->30 [style = solid, label="throttleTimeMs"];
19->29 [style = dotted, label="true"];
11->18 [style = dashed, label="0"];
10->30 [style = solid, label="i"];
19->41 [style = dotted, label="true"];
12->14 [style = bold, label=""];
19->22 [style = dotted, label="true"];
9->0 [style = dashed, label="0"];
44->24 [style = solid, label="builder"];
53->56 [style = bold, label=""];
15->12 [style = bold, label=""];
36->37 [style = bold, label=""];
24->28 [style = solid, label="request"];
2->1 [style = dashed, label="0"];
9->1 [style = bold, label=""];
1->19 [style = bold, label=""];
47->55 [style = solid, label="offset"];
9->10 [style = dotted, label="true"];
0->6 [style = solid, label="i"];
26->20 [style = bold, label=""];
22->42 [style = bold, label=""];
52->55 [style = solid, label="i"];
26->20 [style = solid, label="buffer"];
19->1 [style = dotted, label="true"];
19->34 [style = dotted, label="true"];
1->8 [style = bold, label=""];
4->38 [style = dashed, label="0"];
7->12 [style = solid, label="v"];
1->34 [style = solid, label="i"];
10->34 [style = solid, label="i"];
10->1 [style = solid, label="i"];
19->24 [style = dotted, label="true"];
19->30 [style = dotted, label="true"];
19->42 [style = dotted, label="true"];
10->6 [style = bold, label=""];
32->33 [style = bold, label=""];
19->28 [style = dotted, label="true"];
18->39 [style = bold, label=""];
7->5 [style = solid, label="v"];
34->44 [style = bold, label=""];
19->43 [style = dotted, label="true"];
33->32 [style = bold, label=""];
44->24 [style = bold, label=""];
9->7 [style = dotted, label="true"];
27->21 [style = bold, label=""];
46->23 [style = bold, label=""];
2->11 [style = bold, label=""];
10->19 [style = solid, label="i"];
0->9 [style = solid, label="i"];
0->9 [style = bold, label=""];
33->35 [style = bold, label=""];
7->12 [style = bold, label=""];
0->6 [style = bold, label=""];
23->40 [style = solid, label="selector"];
9->17 [style = dotted, label="true"];
11->50 [style = dashed, label="0"];
31->18 [style = bold, label=""];
8->21 [style = dashed, label="0"];
9->6 [style = dotted, label="true"];
9->14 [style = dotted, label="true"];
43->30 [style = bold, label=""];
20->33 [style = bold, label=""];
0->5 [style = solid, label="i"];
2->31 [style = dashed, label="0"];
57->52 [style = bold, label=""];
17->7 [style = bold, label=""];
51->0 [style = solid, label="i"];
8->56 [style = dashed, label="0"];
0->49 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
48->47 [style = bold, label=""];
19->27 [style = bold, label=""];
3->13 [style = bold, label=""];
45->26 [style = bold, label=""];
40->45 [style = bold, label=""];
6->9 [style = bold, label=""];
37->40 [style = bold, label=""];
15->5 [style = solid, label="v"];
54->1 [style = bold, label=""];
}
