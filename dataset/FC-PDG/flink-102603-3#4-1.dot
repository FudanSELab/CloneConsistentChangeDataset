digraph {
27 [style = filled, label = "testHarness.open()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "operator.setInputType(TypeInfoParser.parse(\"Tuple2<String, Integer>\"),new ExecutionConfig())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "long initialTime = 0L@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5999))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 999))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "expectedOutput.add(new Watermark(1999))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3999))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1000))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",2),initialTime + 5999))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testSlidingEventTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 999))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingTimeWindows.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,TimeWindow,Tuple2<String,Integer>>(new SumReducer()),EventTimeTrigger.create())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "long initialTime = 0L@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "testHarness.close()@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(SlidingTimeWindows.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS),Time.of(WINDOW_SLIDE,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,TimeWindow,Tuple2<String,Integer>>(new SumReducer()),EventTimeTrigger.create())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "expectedOutput.add(new Watermark(999))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "expectedOutput.add(new Watermark(4999))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "closeCalled.set(0)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSlidingEventTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "expectedOutput.add(new Watermark(3999))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1998))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final int WINDOW_SIZE = 3@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "testTumblingEventTimeWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4999))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2999))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@47@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "expectedOutput.add(new Watermark(7999))@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final int WINDOW_SLIDE = 1@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "windowBufferFactory instanceof PreAggregatingHeapWindowBuffer.Factory@@@46@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 1999))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectedOutput.add(new Watermark(5999))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7999))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",1,closeCalled.get())@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness = new OneInputStreamOperatorTestHarness<>(operator)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",1,closeCalled.get())@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "expectedOutput.add(new Watermark(1999))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 2999))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6999))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->37 [style = bold, label=""];
55->53 [style = solid, label="initialTime"];
51->14 [style = solid, label="initialTime"];
60->53 [style = bold, label=""];
29->39 [style = solid, label="expectedOutput"];
58->60 [style = bold, label=""];
14->28 [style = bold, label=""];
25->43 [style = bold, label=""];
41->11 [style = bold, label=""];
3->16 [style = bold, label=""];
53->54 [style = bold, label=""];
34->50 [style = bold, label=""];
30->18 [style = bold, label=""];
3->4 [style = bold, label=""];
29->25 [style = solid, label="initialTime"];
55->22 [style = solid, label="initialTime"];
55->29 [style = solid, label="initialTime"];
19->63 [style = solid, label="WINDOW_SIZE"];
29->36 [style = solid, label="initialTime"];
29->28 [style = solid, label="initialTime"];
34->50 [style = solid, label="WINDOW_SLIDE"];
29->37 [style = solid, label="initialTime"];
29->46 [style = solid, label="initialTime"];
36->24 [style = bold, label=""];
27->32 [style = solid, label="expectedOutput"];
23->13 [style = bold, label=""];
19->63 [style = bold, label=""];
27->7 [style = solid, label="expectedOutput"];
58->43 [style = solid, label="expectedOutput"];
51->21 [style = solid, label="initialTime"];
29->21 [style = solid, label="initialTime"];
35->10 [style = bold, label=""];
39->47 [style = bold, label=""];
2->52 [style = bold, label=""];
29->30 [style = solid, label="initialTime"];
27->1 [style = solid, label="expectedOutput"];
6->62 [style = bold, label=""];
17->21 [style = bold, label=""];
50->51 [style = solid, label="operator"];
29->41 [style = solid, label="initialTime"];
12->22 [style = bold, label=""];
52->35 [style = bold, label=""];
21->3 [style = bold, label=""];
51->9 [style = solid, label="initialTime"];
45->41 [style = bold, label=""];
29->12 [style = solid, label="initialTime"];
29->17 [style = solid, label="initialTime"];
15->38 [style = bold, label=""];
19->34 [style = bold, label=""];
29->3 [style = solid, label="initialTime"];
55->35 [style = solid, label="initialTime"];
47->6 [style = bold, label=""];
58->4 [style = solid, label="expectedOutput"];
51->48 [style = solid, label="initialTime"];
27->31 [style = bold, label=""];
61->13 [style = bold, label=""];
6->49 [style = bold, label=""];
7->0 [style = bold, label=""];
51->22 [style = solid, label="initialTime"];
48->17 [style = bold, label=""];
51->2 [style = solid, label="initialTime"];
55->37 [style = solid, label="initialTime"];
29->18 [style = solid, label="expectedOutput"];
49->44 [style = dotted, label="false"];
29->27 [style = bold, label=""];
55->33 [style = solid, label="initialTime"];
29->48 [style = solid, label="initialTime"];
51->32 [style = solid, label="initialTime"];
58->18 [style = solid, label="expectedOutput"];
34->63 [style = dashed, label="0"];
51->17 [style = solid, label="initialTime"];
63->20 [style = solid, label="operator"];
64->20 [style = bold, label=""];
29->14 [style = solid, label="initialTime"];
29->45 [style = solid, label="initialTime"];
6->49 [style = dotted, label="true"];
33->30 [style = bold, label=""];
54->59 [style = bold, label=""];
27->2 [style = solid, label="expectedOutput"];
29->24 [style = solid, label="expectedOutput"];
51->7 [style = solid, label="initialTime"];
55->24 [style = solid, label="initialTime"];
22->14 [style = bold, label=""];
18->7 [style = bold, label=""];
29->22 [style = solid, label="initialTime"];
29->4 [style = solid, label="expectedOutput"];
27->10 [style = solid, label="expectedOutput"];
8->24 [style = bold, label=""];
29->11 [style = solid, label="expectedOutput"];
38->5 [style = bold, label=""];
55->54 [style = solid, label="initialTime"];
58->41 [style = solid, label="expectedOutput"];
51->12 [style = solid, label="initialTime"];
29->9 [style = solid, label="initialTime"];
52->46 [style = bold, label=""];
27->15 [style = solid, label="expectedOutput"];
27->47 [style = solid, label="expectedOutput"];
0->45 [style = bold, label=""];
49->44 [style = bold, label=""];
5->26 [style = bold, label=""];
29->52 [style = solid, label="initialTime"];
55->40 [style = solid, label="initialTime"];
55->0 [style = solid, label="initialTime"];
49->42 [style = dotted, label="true"];
37->12 [style = bold, label=""];
51->29 [style = bold, label=""];
55->27 [style = solid, label="initialTime"];
40->33 [style = bold, label=""];
13->19 [style = bold, label=""];
27->37 [style = bold, label=""];
55->14 [style = solid, label="initialTime"];
55->11 [style = solid, label="initialTime"];
51->1 [style = solid, label="initialTime"];
32->40 [style = bold, label=""];
46->35 [style = bold, label=""];
20->51 [style = bold, label=""];
56->57 [style = dotted, label="true"];
36->8 [style = bold, label=""];
51->37 [style = solid, label="initialTime"];
51->15 [style = solid, label="initialTime"];
10->9 [style = bold, label=""];
16->4 [style = bold, label=""];
55->32 [style = solid, label="initialTime"];
29->16 [style = solid, label="initialTime"];
58->46 [style = solid, label="expectedOutput"];
49->42 [style = bold, label=""];
29->33 [style = solid, label="initialTime"];
24->2 [style = bold, label=""];
29->38 [style = solid, label="initialTime"];
51->28 [style = solid, label="initialTime"];
11->1 [style = bold, label=""];
51->38 [style = solid, label="initialTime"];
63->64 [style = bold, label=""];
29->40 [style = solid, label="initialTime"];
50->20 [style = bold, label=""];
58->8 [style = solid, label="expectedOutput"];
40->18 [style = bold, label=""];
29->8 [style = solid, label="initialTime"];
1->36 [style = bold, label=""];
29->0 [style = solid, label="initialTime"];
26->39 [style = bold, label=""];
51->10 [style = solid, label="initialTime"];
19->50 [style = solid, label="WINDOW_SIZE"];
51->45 [style = solid, label="initialTime"];
55->1 [style = solid, label="initialTime"];
51->31 [style = solid, label="initialTime"];
55->60 [style = solid, label="initialTime"];
29->5 [style = solid, label="initialTime"];
55->3 [style = solid, label="initialTime"];
59->29 [style = bold, label=""];
55->17 [style = solid, label="initialTime"];
43->15 [style = bold, label=""];
55->10 [style = solid, label="initialTime"];
55->12 [style = solid, label="initialTime"];
55->21 [style = solid, label="initialTime"];
9->25 [style = bold, label=""];
6->62 [style = dotted, label="false"];
55->2 [style = solid, label="initialTime"];
28->48 [style = bold, label=""];
29->35 [style = solid, label="expectedOutput"];
55->59 [style = solid, label="initialTime"];
58->48 [style = solid, label="expectedOutput"];
29->43 [style = solid, label="expectedOutput"];
55->7 [style = solid, label="initialTime"];
51->0 [style = solid, label="initialTime"];
55->58 [style = bold, label=""];
4->32 [style = bold, label=""];
56->55 [style = bold, label=""];
}
