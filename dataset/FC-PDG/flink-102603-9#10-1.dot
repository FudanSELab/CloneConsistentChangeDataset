digraph {
9 [style = filled, label = "testHarness.restore(snapshot,10L)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 1999))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "expectedOutput.add(new Watermark(7999))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",2),5999))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testSlidingEventTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6999))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),3999))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testHarness.open()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),3000))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 999))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1000))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@44@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",2),initialTime + 4999))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),20))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1998))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectedOutput.add(new Watermark(999))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5999))@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3999))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 999))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2999))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "expectedOutput.add(new Watermark(5999))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testHarness.setup()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 1999))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testHarness.close()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",5),3999))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "testHarness.processWatermark(new Watermark(999))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 2999))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectedOutput.add(new Watermark(4999))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectedOutput.add(new Watermark(3999))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),0))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "testHarness.processWatermark(new Watermark(6999))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "testTumblingEventTimeWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),1999))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expectedOutput.add(new Watermark(1999))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 2999))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "testHarness.processWatermark(new Watermark(2999))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7999))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long initialTime = 0L@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1998))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),999))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),999))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",2),initialTime + 5999))@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",2),4999))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "StreamTaskState snapshot = testHarness.snapshot(0L,0L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1999))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "testHarness.processWatermark(new Watermark(5999))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "testHarness.processWatermark(new Watermark(7999))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",5),initialTime + 3999))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1000))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "testHarness.processWatermark(new Watermark(1999))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),2999))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2999))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),2999))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "testHarness.processWatermark(new Watermark(4999))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 999))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "testHarness.processWatermark(new Watermark(3999))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testSlidingEventTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),1999))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 1999))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "testHarness.open()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4999))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78->36 [style = bold, label=""];
0->36 [style = solid, label="initialTime"];
0->30 [style = bold, label=""];
55->17 [style = bold, label=""];
62->13 [style = bold, label=""];
0->3 [style = solid, label="initialTime"];
30->4 [style = solid, label="expectedOutput"];
25->1 [style = bold, label=""];
14->77 [style = dashed, label="0"];
76->0 [style = bold, label=""];
69->60 [style = bold, label=""];
68->69 [style = bold, label=""];
46->13 [style = bold, label=""];
37->11 [style = bold, label=""];
29->9 [style = solid, label="snapshot"];
57->62 [style = bold, label=""];
0->39 [style = solid, label="initialTime"];
38->61 [style = dashed, label="0"];
0->38 [style = solid, label="initialTime"];
28->14 [style = dotted, label="true"];
37->15 [style = bold, label=""];
9->7 [style = bold, label=""];
73->75 [style = bold, label=""];
41->20 [style = bold, label=""];
70->51 [style = bold, label=""];
0->24 [style = solid, label="initialTime"];
1->23 [style = bold, label=""];
20->27 [style = bold, label=""];
23->29 [style = bold, label=""];
28->0 [style = bold, label=""];
26->65 [style = bold, label=""];
56->72 [style = bold, label=""];
29->2 [style = bold, label=""];
65->50 [style = bold, label=""];
22->55 [style = dashed, label="0"];
23->52 [style = bold, label=""];
30->23 [style = solid, label="expectedOutput"];
47->26 [style = bold, label=""];
67->47 [style = bold, label=""];
49->67 [style = bold, label=""];
0->35 [style = solid, label="initialTime"];
7->73 [style = bold, label=""];
18->38 [style = bold, label=""];
45->41 [style = bold, label=""];
0->42 [style = solid, label="initialTime"];
35->31 [style = bold, label=""];
5->49 [style = dashed, label="0"];
0->40 [style = solid, label="initialTime"];
21->68 [style = dashed, label="0"];
0->22 [style = solid, label="initialTime"];
74->78 [style = bold, label=""];
8->18 [style = bold, label=""];
31->51 [style = dashed, label="0"];
46->62 [style = dashed, label="0"];
36->57 [style = dashed, label="0"];
0->79 [style = solid, label="initialTime"];
7->57 [style = bold, label=""];
30->8 [style = solid, label="expectedOutput"];
66->15 [style = bold, label=""];
30->78 [style = solid, label="expectedOutput"];
44->49 [style = bold, label=""];
24->47 [style = bold, label=""];
58->56 [style = bold, label=""];
19->37 [style = bold, label=""];
34->58 [style = dashed, label="0"];
0->46 [style = solid, label="initialTime"];
71->61 [style = bold, label=""];
36->46 [style = bold, label=""];
12->29 [style = bold, label=""];
18->1 [style = bold, label=""];
48->55 [style = bold, label=""];
52->48 [style = bold, label=""];
0->5 [style = solid, label="initialTime"];
53->68 [style = bold, label=""];
64->66 [style = bold, label=""];
38->25 [style = bold, label=""];
22->17 [style = bold, label=""];
63->14 [style = dotted, label="true"];
35->70 [style = dashed, label="0"];
75->79 [style = bold, label=""];
42->22 [style = bold, label=""];
33->60 [style = dashed, label="0"];
0->25 [style = solid, label="initialTime"];
32->42 [style = bold, label=""];
0->31 [style = solid, label="initialTime"];
2->43 [style = bold, label=""];
40->72 [style = dashed, label="0"];
30->26 [style = solid, label="expectedOutput"];
40->35 [style = bold, label=""];
19->64 [style = bold, label=""];
0->6 [style = solid, label="initialTime"];
16->8 [style = bold, label=""];
37->64 [style = dashed, label="0"];
0->37 [style = solid, label="initialTime"];
32->52 [style = dashed, label="0"];
23->32 [style = bold, label=""];
15->44 [style = bold, label=""];
0->75 [style = solid, label="initialTime"];
30->53 [style = bold, label=""];
0->21 [style = solid, label="initialTime"];
43->9 [style = bold, label=""];
76->77 [style = dotted, label="true"];
3->53 [style = dashed, label="0"];
42->48 [style = dashed, label="0"];
39->33 [style = bold, label=""];
18->71 [style = dashed, label="0"];
60->58 [style = bold, label=""];
13->19 [style = bold, label=""];
17->12 [style = bold, label=""];
80->3 [style = bold, label=""];
36->13 [style = bold, label=""];
21->39 [style = bold, label=""];
10->16 [style = bold, label=""];
30->3 [style = bold, label=""];
0->73 [style = solid, label="initialTime"];
31->10 [style = bold, label=""];
5->24 [style = bold, label=""];
0->41 [style = solid, label="initialTime"];
8->71 [style = bold, label=""];
3->21 [style = bold, label=""];
0->18 [style = solid, label="initialTime"];
61->54 [style = bold, label=""];
10->59 [style = dashed, label="0"];
44->5 [style = bold, label=""];
7->36 [style = bold, label=""];
41->50 [style = dashed, label="0"];
25->54 [style = dashed, label="0"];
31->16 [style = bold, label=""];
30->44 [style = solid, label="expectedOutput"];
72->70 [style = bold, label=""];
50->20 [style = bold, label=""];
30->80 [style = bold, label=""];
0->10 [style = solid, label="initialTime"];
30->12 [style = solid, label="expectedOutput"];
0->11 [style = solid, label="initialTime"];
45->65 [style = dashed, label="0"];
59->16 [style = bold, label=""];
0->34 [style = solid, label="initialTime"];
63->30 [style = bold, label=""];
11->15 [style = bold, label=""];
0->33 [style = solid, label="initialTime"];
51->59 [style = bold, label=""];
27->4 [style = bold, label=""];
0->45 [style = solid, label="initialTime"];
30->19 [style = solid, label="expectedOutput"];
6->40 [style = bold, label=""];
0->32 [style = solid, label="initialTime"];
34->6 [style = bold, label=""];
79->74 [style = bold, label=""];
6->56 [style = dashed, label="0"];
26->45 [style = bold, label=""];
39->69 [style = dashed, label="0"];
11->66 [style = dashed, label="0"];
33->34 [style = bold, label=""];
24->67 [style = dashed, label="0"];
54->1 [style = bold, label=""];
}
