digraph {
6 [style = filled, label = "TestPropertyValues.of(\"zipkin.collector.rabbitmq.addresses:\",\"zipkin.collector.rabbitmq.uri:\").applyTo(context)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.register(,,)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:\").applyTo(context)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "providesCollectorComponent_whenBootstrapServersEmptyString['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "context.getBean()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "context = new AnnotationConfigApplicationContext()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "thrown.expect()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.refresh()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "context.getBean()@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "context.register(,,)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->6 [style = bold, label=""];
0->1 [style = bold, label=""];
3->2 [style = bold, label=""];
8->11 [style = bold, label=""];
0->9 [style = bold, label=""];
11->4 [style = bold, label=""];
5->11 [style = dashed, label="0"];
4->0 [style = bold, label=""];
10->2 [style = bold, label=""];
1->9 [style = dashed, label="0"];
2->8 [style = solid, label="context"];
5->4 [style = bold, label=""];
6->5 [style = bold, label=""];
2->8 [style = bold, label=""];
2->6 [style = solid, label="context"];
7->2 [style = bold, label=""];
}
