digraph {
19 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k2\",\"A\",1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "testInputTopic3.pipeInput(\"k2\",\"B\",500L)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testInputTopic.pipeInput(\"k2\",\"A\",1L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final KTable<String,String> customers = grouped1.cogroup(STRING_AGGREGATOR).cogroup(grouped2,STRING_AGGREGATOR).cogroup(grouped3,STRING_AGGREGATOR).aggregate(STRING_INITIALIZER)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final KStream<String,String> stream3 = builder.stream(\"three\",stringConsumed)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k1\",\"AAB\",10)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k1\",\"A\",0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testInputTopic2.pipeInput(\"k3\",\"B\",500L)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final KTable<String,String> customers = grouped1.cogroup(STRING_AGGREGATOR).cogroup(grouped2,STRING_AGGREGATOR).aggregate(STRING_INITIALIZER)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testInputTopic.pipeInput(\"k1\",\"A\",10L)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final TestInputTopic<String,String> testInputTopic = driver.createInputTopic(\"one\",new StringSerializer(),new StringSerializer())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testInputTopic2.pipeInput(\"k2\",\"B\",200L)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final KGroupedStream<String,String> grouped3 = stream3.groupByKey()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k1\",\"AABB\",500)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testInputTopic3.pipeInput(\"k1\",\"B\",500L)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testInputTopic2.pipeInput(\"k2\",\"B\",100L)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final KStream<String,String> stream2 = builder.stream(\"two\",stringConsumed)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testInputTopic3.pipeInput(\"k3\",\"B\",500L)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k2\",\"AA\",500)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final TestOutputTopic<String,String> testOutputTopic = driver.createOutputTopic(OUTPUT,new StringDeserializer(),new StringDeserializer())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "customers.toStream().to(OUTPUT)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testInputTopic3.pipeInput(\"k2\",\"B\",100L)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testInputTopic2.pipeInput(\"k2\",\"B\",100L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k2\",\"AA\",100)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final KStream<String,String> stream1 = builder.stream(\"one\",stringConsumed)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k2\",\"AAB\",100)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final KGroupedStream<String,String> grouped1 = stream1.groupByKey()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testCogroupWithThreeGroupedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k1\",\"A\",0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k3\",\"B\",500)@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k2\",\"AAB\",500)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testInputTopic2.pipeInput(\"k2\",\"B\",500L)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shouldCogroupAndAggregateTwoKStreamsWithSharedKeys['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final KGroupedStream<String,String> grouped2 = stream2.groupByKey()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final TestInputTopic<String,String> testInputTopic = driver.createInputTopic(\"one\",new StringSerializer(),new StringSerializer())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "shouldCogroupAndAggregateTwoKStreamsWithSharedKeys['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final TestInputTopic<String,String> testInputTopic2 = driver.createInputTopic(\"two\",new StringSerializer(),new StringSerializer())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testInputTopic.pipeInput(\"k2\",\"A\",100L)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k1\",\"AA\",10)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "customers.toStream().to(OUTPUT)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertOutputKeyValueTimestamp(testOutputTopic,\"k2\",\"AABB\",200)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testInputTopic2.pipeInput(\"k2\",\"B\",500L)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final TestInputTopic<String,String> testInputTopic3 = driver.createInputTopic(\"three\",new StringSerializer(),new StringSerializer())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testInputTopic2.pipeInput(\"k1\",\"B\",1L)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testInputTopic.pipeInput(\"k1\",\"A\",0L)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->26 [style = bold, label=""];
17->25 [style = bold, label=""];
42->34 [style = bold, label=""];
23->20 [style = bold, label=""];
4->43 [style = bold, label=""];
14->37 [style = dashed, label="0"];
8->15 [style = bold, label=""];
24->4 [style = solid, label="testOutputTopic"];
24->20 [style = solid, label="testOutputTopic"];
29->20 [style = solid, label="testOutputTopic"];
19->31 [style = bold, label=""];
11->6 [style = bold, label=""];
29->4 [style = solid, label="testOutputTopic"];
24->22 [style = solid, label="testOutputTopic"];
24->39 [style = bold, label=""];
29->5 [style = solid, label="testOutputTopic"];
24->2 [style = solid, label="testOutputTopic"];
24->5 [style = solid, label="testOutputTopic"];
10->3 [style = bold, label=""];
28->13 [style = bold, label=""];
31->2 [style = bold, label=""];
29->26 [style = solid, label="testOutputTopic"];
29->35 [style = solid, label="testOutputTopic"];
24->29 [style = bold, label=""];
16->23 [style = bold, label=""];
1->30 [style = bold, label=""];
9->8 [style = bold, label=""];
6->44 [style = bold, label=""];
38->3 [style = bold, label=""];
32->33 [style = bold, label=""];
36->20 [style = bold, label=""];
24->19 [style = solid, label="testOutputTopic"];
29->31 [style = solid, label="testOutputTopic"];
3->18 [style = bold, label=""];
6->14 [style = bold, label=""];
7->9 [style = bold, label=""];
24->31 [style = solid, label="testOutputTopic"];
26->12 [style = bold, label=""];
13->27 [style = bold, label=""];
45->25 [style = bold, label=""];
15->11 [style = bold, label=""];
12->4 [style = bold, label=""];
33->25 [style = bold, label=""];
40->36 [style = bold, label=""];
43->35 [style = bold, label=""];
24->12 [style = solid, label="testOutputTopic"];
30->7 [style = bold, label=""];
29->2 [style = solid, label="testOutputTopic"];
29->19 [style = solid, label="testOutputTopic"];
21->40 [style = dashed, label="0"];
16->36 [style = dashed, label="0"];
21->16 [style = bold, label=""];
29->12 [style = solid, label="testOutputTopic"];
25->10 [style = bold, label=""];
27->24 [style = bold, label=""];
44->37 [style = bold, label=""];
18->41 [style = bold, label=""];
29->22 [style = solid, label="testOutputTopic"];
29->43 [style = solid, label="testOutputTopic"];
29->1 [style = bold, label=""];
20->19 [style = bold, label=""];
39->29 [style = bold, label=""];
24->23 [style = solid, label="testOutputTopic"];
5->22 [style = bold, label=""];
6->44 [style = dashed, label="0"];
18->0 [style = bold, label=""];
14->21 [style = bold, label=""];
37->40 [style = bold, label=""];
0->28 [style = bold, label=""];
10->38 [style = bold, label=""];
24->26 [style = solid, label="testOutputTopic"];
2->5 [style = bold, label=""];
34->27 [style = bold, label=""];
41->42 [style = bold, label=""];
}
