digraph {
22 [style = filled, label = "DataStreamWriter<Row> writer = streamingInput.writeStream().format(\"org.apache.hudi\").option(\"hoodie.insert.shuffle.parallelism\",\"2\").option(\"hoodie.upsert.shuffle.parallelism\",\"2\").option(\"hoodie.delete.shuffle.parallelism\",\"2\").option(DataSourceWriteOptions.OPERATION().key(),operationType).option(DataSourceWriteOptions.TABLE_TYPE().key(),tableType).option(DataSourceWriteOptions.RECORDKEY_FIELD().key(),\"_row_key\").option(DataSourceWriteOptions.PARTITIONPATH_FIELD().key(),\"partition\").option(DataSourceWriteOptions.PRECOMBINE_FIELD().key(),\"timestamp\").option(HoodieCompactionConfig.INLINE_COMPACT_NUM_DELTA_COMMITS.key(),\"1\").option(DataSourceWriteOptions.ASYNC_COMPACT_ENABLE().key(),\"true\").option(DataSourceWriteOptions.ASYNC_CLUSTERING_ENABLE().key(),\"true\").option(HoodieWriteConfig.TABLE_NAME.key(),tableName).option(\"checkpointLocation\",checkpointLocation).outputMode(OutputMode.Append())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<HoodieRecord> recordsSoFar = new ArrayList<>(dataGen.generateInserts(instantTime,100))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamingQuery query = writer.trigger(Trigger.ProcessingTime(500)).start(tablePath)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "updateHiveSyncConfig(writer)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "updateHiveSyncConfig(writer)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "SparkSession spark@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Dataset<Row> streamingInput@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "insert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "stream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "LOG.info(\"Commit at instant time :\" + commitInstantTime1)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "query.awaitTermination(streamingDurationInMs)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "DataFrameWriter<Row> writer = inputDF1.write().format(\"org.apache.hudi\").option(\"hoodie.insert.shuffle.parallelism\",\"2\").option(\"hoodie.upsert.shuffle.parallelism\",\"2\").option(DataSourceWriteOptions.TABLE_TYPE().key(),tableType).option(DataSourceWriteOptions.OPERATION().key(),DataSourceWriteOptions.INSERT_OPERATION_OPT_VAL()).option(DataSourceWriteOptions.RECORDKEY_FIELD().key(),\"_row_key\").option(DataSourceWriteOptions.PARTITIONPATH_FIELD().key(),\"partition\").option(DataSourceWriteOptions.PRECOMBINE_FIELD().key(),\"timestamp\").option(HoodieWriteConfig.TBL_NAME.key(),tableName).option(DataSourceWriteOptions.KEYGENERATOR_CLASS_NAME().key(),nonPartitionedTable? .getCanonicalName(): .getCanonicalName()).mode(commitType)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "FileSystem fs = FileSystem.get(jssc.hadoopConfiguration())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String operationType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "insert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DataFrameWriter<Row> writer = inputDF1.write().format(\"org.apache.hudi\").option(\"hoodie.insert.shuffle.parallelism\",\"2\").option(\"hoodie.upsert.shuffle.parallelism\",\"2\").option(DataSourceWriteOptions.TABLE_TYPE().key(),tableType).option(DataSourceWriteOptions.OPERATION().key(),DataSourceWriteOptions.INSERT_OPERATION_OPT_VAL()).option(DataSourceWriteOptions.RECORDKEY_FIELD().key(),\"_row_key\").option(DataSourceWriteOptions.PARTITIONPATH_FIELD().key(),\"partition\").option(DataSourceWriteOptions.PRECOMBINE_FIELD().key(),\"timestamp\").option(HoodieWriteConfig.TABLE_NAME.key(),tableName).option(DataSourceWriteOptions.KEYGENERATOR_CLASS().key(),nonPartitionedTable? .getCanonicalName(): .getCanonicalName()).mode(commitType)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "String commitInstantTime1 = HoodieDataSourceHelpers.latestCommit(fs,tablePath)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "JavaSparkContext jssc = new JavaSparkContext(spark.sparkContext())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Dataset<Row> inputDF1 = spark.read().json(jssc.parallelize(records1,2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "writer.save(tablePath)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HoodieTestDataGenerator dataGen = getDataGenerate()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String checkpointLocation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<String> records1 = recordsToStrings(recordsSoFar)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String instantTime = HoodieActiveTimeline.createNewInstantTime()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
17->20 [style = dotted, label="true"];
5->10 [style = bold, label=""];
10->1 [style = solid, label="records1"];
0->6 [style = bold, label=""];
11->5 [style = solid, label="instantTime"];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
9->7 [style = bold, label=""];
15->3 [style = bold, label=""];
17->22 [style = bold, label=""];
15->3 [style = solid, label="writer"];
13->11 [style = bold, label=""];
22->23 [style = bold, label=""];
3->0 [style = bold, label=""];
5->10 [style = solid, label="recordsSoFar"];
14->7 [style = bold, label=""];
9->8 [style = dotted, label="true"];
2->15 [style = dashed, label="0"];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
2->3 [style = solid, label="writer"];
6->4 [style = solid, label="fs"];
17->19 [style = dotted, label="true"];
14->8 [style = dotted, label="true"];
4->12 [style = bold, label=""];
0->18 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->12 [style = solid, label="commitInstantTime1"];
22->23 [style = solid, label="writer"];
10->1 [style = bold, label=""];
17->21 [style = dotted, label="true"];
23->18 [style = bold, label=""];
18->16 [style = bold, label=""];
}
