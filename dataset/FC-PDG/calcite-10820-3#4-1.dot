digraph {
18 [style = filled, label = "testSomeAggFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tester.checkType(\"some(1.5 = 1.4)\",\"BOOLEAN\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkType(\"some(1.2 = 1.2)\",\"BOOLEAN\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkFails(\"^some()^\",\"Invalid number of arguments to function 'SOME'. Was expecting 1 arguments\",false)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.setFor(SqlStdOperatorTable.EVERY,VM_EXPAND)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testEveryFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testEveryFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.setFor(SqlStdOperatorTable.SOME,VM_EXPAND)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tester.checkFails(\"^every()^\",\"Invalid number of arguments to function 'EVERY'. Was expecting 1 arguments\",false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tester.checkType(\"every(1 = 1)\",\"BOOLEAN\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkFails(\"^every(1, 2)^\",\"Invalid number of arguments to function 'EVERY'. Was expecting 1 arguments\",false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tester.checkAgg(\"every(x = 2)\",values,\"false\",0d)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String(( values = {\"0\",\"CAST(null AS INTEGER)\",\"2\",\"2\"}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkType(\"some(1 = 1)\",\"BOOLEAN\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.checkType(\"every(1.5 = 1.4)\",\"BOOLEAN\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkFails(\"some(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "!enable@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkFails(\"^some(1, 2)^\",\"Invalid number of arguments to function 'SOME'. Was expecting 1 arguments\",false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tester.checkFails(\"every(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.checkType(\"every(1.2 = 1.2)\",\"BOOLEAN\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkAgg(\"some(x = 2)\",values,\"true\",0d)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = solid, label="values"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
0->6 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
14->19 [style = bold, label=""];
9->17 [style = bold, label=""];
9->10 [style = bold, label=""];
3->9 [style = dotted, label="true"];
8->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
12->7 [style = bold, label=""];
5->20 [style = dashed, label="0"];
6->2 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
21->20 [style = bold, label=""];
6->13 [style = dashed, label="0"];
19->13 [style = bold, label=""];
4->17 [style = solid, label="values"];
2->21 [style = dashed, label="0"];
15->4 [style = bold, label=""];
10->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
3->17 [style = bold, label=""];
13->21 [style = bold, label=""];
20->15 [style = bold, label=""];
11->7 [style = bold, label=""];
2->5 [style = bold, label=""];
18->16 [style = bold, label=""];
}
