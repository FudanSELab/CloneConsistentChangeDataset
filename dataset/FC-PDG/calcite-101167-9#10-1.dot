digraph {
4 [style = filled, label = "expr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles',\" + \" CAST('2000-01-01' AS TIMESTAMP))\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "wholeExpr(\"TO_DATE(2000, 'YYYY')\").withOperatorTable(postgresTable).withTypeCoercion(false).fails(\"Cannot apply 'TO_DATE' to arguments of type \" + \"'TO_DATE\(<INTEGER>, <CHAR\(4\)>\)'\. \" + \"Supported form\(s\): 'TO_DATE\(<STRING>, <STRING>\)'\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "wholeExpr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles',\" + \" CAST('2000-01-01' AS TIMESTAMP))\").fails(\"No match found for function signature \" + \"CONVERT_TIMEZONE\(<CHARACTER>, <CHARACTER>, <TIMESTAMP>\)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "wholeExpr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', \" + \"'UTC', CAST('2000-01-01' AS TIMESTAMP))\").withOperatorTable(opTable).fails(\"Invalid number of arguments to function 'CONVERT_TIMEZONE'. \" + \"Was expecting 3 arguments\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD')\").fails(\"No match found for function signature \" + \"TO_DATE\(<CHARACTER>, <CHARACTER>\)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles',\" + \" CAST('2000-01-01' AS TIMESTAMP))\").withOperatorTable(opTable).columnType(\"DATE NOT NULL\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testConvertTimezoneFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_DATE'. \" + \"Was expecting 2 arguments\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "wholeExpr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', '2000-01-01')\").withOperatorTable(postgresTable).fails(\"Cannot apply 'CONVERT_TIMEZONE' to arguments of type \" + \"'CONVERT_TIMEZONE\(<CHAR\(3\)>, <CHAR\(19\)>, \" + \"<CHAR\(10\)>\)'\. Supported form\(s\): \" + \"'CONVERT_TIMEZONE\(<CHARACTER>, <CHARACTER>, <DATETIME>\)'\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "expr(\"TO_DATE(2000, 'YYYY')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "wholeExpr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', '2000-01-01')\").withOperatorTable(opTable).fails(\"Cannot apply 'CONVERT_TIMEZONE' to arguments of type \" + \"'CONVERT_TIMEZONE\(<CHAR\(3\)>, <CHAR\(19\)>, \" + \"<CHAR\(10\)>\)'\. Supported form\(s\): \" + \"'CONVERT_TIMEZONE\(<CHARACTER>, <CHARACTER>, <DATETIME>\)'\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "wholeExpr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'CONVERT_TIMEZONE'. \" + \"Was expecting 3 arguments\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "expr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "wholeExpr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles')\").withOperatorTable(opTable).fails(\"Invalid number of arguments to function 'CONVERT_TIMEZONE'. \" + \"Was expecting 3 arguments\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final SqlOperatorTable opTable = operatorTableFor(SqlLibrary.POSTGRESQL)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testToDateFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "wholeExpr(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', \" + \"'UTC', CAST('2000-01-01' AS TIMESTAMP))\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'CONVERT_TIMEZONE'. \" + \"Was expecting 3 arguments\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testConvertTimezoneFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final SqlOperatorTable postgresTable = SqlLibraryOperatorTableFactory.INSTANCE.getOperatorTable(SqlLibrary.STANDARD,SqlLibrary.POSTGRESQL)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD', 'YYYY-MM-DD')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_DATE'. \" + \"Was expecting 2 arguments\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
6->8 [style = dashed, label="0"];
12->5 [style = bold, label=""];
2->6 [style = bold, label=""];
18->15 [style = bold, label=""];
14->17 [style = bold, label=""];
4->2 [style = bold, label=""];
16->19 [style = bold, label=""];
9->8 [style = bold, label=""];
2->17 [style = dashed, label="0"];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
19->1 [style = bold, label=""];
2->9 [style = dashed, label="0"];
4->7 [style = dashed, label="0"];
1->14 [style = bold, label=""];
5->11 [style = bold, label=""];
17->13 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->14 [style = dashed, label="0"];
5->19 [style = dashed, label="0"];
11->7 [style = bold, label=""];
13->18 [style = bold, label=""];
0->5 [style = bold, label=""];
}
