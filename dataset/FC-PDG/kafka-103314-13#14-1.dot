digraph {
3 [style = filled, label = "short epoch = 15@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,RecordBatch.CURRENT_MAGIC_VALUE,args.compressionType,TimestampType.CREATE_TIME,0L,0L,pid,epoch,sequence,true,false,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MemoryRecordsBuilder builder = supplier.get()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "int sequence = RecordBatch.NO_SEQUENCE@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "long pid = 9809@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testWriteIdempotentWithInvalidBaseSequence['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThrows(,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThrows(,null)@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Supplier<MemoryRecordsBuilder> supplier = null@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int sequence = 2342@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "long pid = RecordBatch.NO_PRODUCER_ID@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "args.magic < MAGIC_VALUE_V2@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testWriteTransactionalWithInvalidPID['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ByteBuffer buffer = allocateBuffer(128,args)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThrows(,null)@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Args args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Args args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testWriteTransactionalWithInvalidPID['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
0->4 [style = solid, label="sequence"];
14->4 [style = solid, label="pid"];
17->4 [style = solid, label="sequence"];
7->1 [style = bold, label=""];
15->7 [style = bold, label=""];
1->14 [style = dashed, label="0"];
1->4 [style = solid, label="pid"];
4->6 [style = bold, label=""];
11->10 [style = dotted, label="true"];
0->12 [style = bold, label=""];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
15->16 [style = dotted, label="true"];
0->17 [style = dashed, label="0"];
3->0 [style = bold, label=""];
4->12 [style = dashed, label="0"];
7->14 [style = bold, label=""];
13->2 [style = dotted, label="true"];
7->4 [style = solid, label="buffer"];
16->7 [style = solid, label="args"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
13->7 [style = bold, label=""];
2->16 [style = dashed, label="0"];
11->9 [style = dotted, label="false"];
8->9 [style = bold, label=""];
2->7 [style = solid, label="args"];
5->7 [style = bold, label=""];
11->8 [style = bold, label=""];
3->17 [style = bold, label=""];
11->8 [style = dotted, label="false"];
3->4 [style = solid, label="epoch"];
17->4 [style = bold, label=""];
5->2 [style = dotted, label="true"];
}
