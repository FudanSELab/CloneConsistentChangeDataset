digraph {
5 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "String someValuePrefix = \"someValue\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i++@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String someKeyPrefix = \"someKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i < 10@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testGetPropertyNamesWithOrderedProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new OrderedProperties()}})@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "someProperties.setProperty(someKeyPrefix + i,someValuePrefix + i)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MockInjector.reset()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(someProperties.stringPropertyNames(),propertyNames)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(10,propertyNames.size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Set<String> propertyNames = defaultConfig.getPropertyNames()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "someProperties = new OrderedProperties()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "someNamespace = \"someName\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
6->17 [style = bold, label=""];
17->10 [style = bold, label=""];
16->15 [style = bold, label=""];
7->13 [style = solid, label="someValuePrefix"];
6->13 [style = dotted, label="true"];
0->2 [style = bold, label=""];
1->3 [style = bold, label=""];
8->6 [style = bold, label=""];
12->16 [style = bold, label=""];
11->17 [style = solid, label="someProperties"];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
3->0 [style = bold, label=""];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
8->13 [style = solid, label="i"];
9->13 [style = solid, label="i"];
3->2 [style = bold, label=""];
9->6 [style = solid, label="i"];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
12->15 [style = solid, label="propertyNames"];
6->8 [style = dotted, label="true"];
6->13 [style = bold, label=""];
9->8 [style = solid, label="i"];
13->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
14->13 [style = solid, label="someKeyPrefix"];
18->14 [style = bold, label=""];
2->11 [style = bold, label=""];
8->6 [style = solid, label="i"];
}
