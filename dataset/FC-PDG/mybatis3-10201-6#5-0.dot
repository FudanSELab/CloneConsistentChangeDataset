digraph {
1 [style = filled, label = "List<Map<String,Object>> answer = sqlSession.selectList(\"org.apache.ibatis.submitted.dynsql.ognlStaticMethodCall\",\"Rock 'n Roll\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(new Integer(6),answer.get(1).get(\"ID\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Integer.valueOf(7),answer.get(0).get(\"ID\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testOgnlStaticMethodCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(new Integer(4),answer.get(0).get(\"ID\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(new Integer(7),answer.get(0).get(\"ID\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testOgnlStaticMethodCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<Map<String,Object>> answer = sqlSession.selectList(\"org.apache.ibatis.submitted.dynsql.selectLike\",\"Ba\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testSelectLike['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(answer.size() == 2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(answer.size() == 1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
1->8 [style = dashed, label="0"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
2->9 [style = dashed, label="0"];
3->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
2->4 [style = dashed, label="0"];
}
