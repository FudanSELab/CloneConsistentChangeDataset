digraph {
12 [style = filled, label = "final List<HasMetadata> resources = this.externalServiceDecorator.buildAccompanyingKubernetesResources()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Map<String,String> resultAnnotations = restService.getMetadata().getAnnotations()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testBuildAccompanyingKubernetesResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final List<ContainerPort> expectedContainerPorts = Arrays.asList(new ContainerPortBuilder().withName(Constants.REST_PORT_NAME).withContainerPort(REST_PORT).build(),new ContainerPortBuilder().withName(Constants.JOB_MANAGER_RPC_PORT_NAME).withContainerPort(RPC_PORT).build(),new ContainerPortBuilder().withName(Constants.BLOB_SERVER_PORT_NAME).withContainerPort(BLOB_SERVER_PORT).build())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(expectedContainerPorts,this.resultMainContainer.getPorts())@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(KubernetesConfigOptions.ServiceExposedType.LoadBalancer.name(),restService.getSpec().getType())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Service restService = (Service)resources.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Constants.API_VERSION,restService.getApiVersion())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedLabels.put(Constants.LABEL_COMPONENT_KEY,Constants.LABEL_COMPONENT_JOB_MANAGER)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testMainContainerPorts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(resultAnnotations,is(equalTo(customizedAnnotations)))@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(expectedLabels,restService.getSpec().getSelector())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,resources.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final List<ServicePort> expectedServicePorts = Collections.singletonList(new ServicePortBuilder().withName(Constants.REST_PORT_NAME).withPort(REST_PORT).withNewTargetPort(Integer.valueOf(REST_BIND_PORT)).build())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(expectedServicePorts,restService.getSpec().getPorts())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Map<String,String> expectedLabels = getCommonLabels()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testBuildAccompanyingKubernetesResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedLabels,restService.getMetadata().getLabels())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectedLabels.putAll(userLabels)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(KubernetesUtils.getRestServiceName(CLUSTER_ID),restService.getMetadata().getName())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->16 [style = solid, label="resultAnnotations"];
1->4 [style = solid, label="expectedLabels"];
8->5 [style = bold, label=""];
6->4 [style = bold, label=""];
7->9 [style = bold, label=""];
2->17 [style = dashed, label="0"];
11->0 [style = bold, label=""];
12->2 [style = bold, label=""];
18->17 [style = solid, label="expectedContainerPorts"];
14->12 [style = bold, label=""];
1->11 [style = solid, label="expectedLabels"];
3->1 [style = bold, label=""];
2->8 [style = bold, label=""];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
0->10 [style = bold, label=""];
10->7 [style = bold, label=""];
13->12 [style = bold, label=""];
15->16 [style = bold, label=""];
18->17 [style = bold, label=""];
5->3 [style = bold, label=""];
4->15 [style = bold, label=""];
19->18 [style = bold, label=""];
10->7 [style = solid, label="expectedServicePorts"];
}
