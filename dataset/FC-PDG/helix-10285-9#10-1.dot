digraph {
28 [style = filled, label = "testIdealStateValidity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "ClusterEvent event = new ClusterEvent(ClusterEventType.Unknown)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MockAccessor accessor = new MockAccessor()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String masterSlaveSemiAutoInvalidResource = \"masterSlaveSemiAutoInvalidResource\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Map<String,Resource> finalResourceMap = event.getAttribute(AttributeName.RESOURCES.name())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String masterSlaveCustomResource = \"masterSlaveCustomResource\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(finalResourceMap.containsKey(masterSlaveCustomResource))@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),cache)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "createISSpec(accessor,masterSlaveCustomResource + \"_spec\",\"MasterSlave\",RebalanceMode.CUSTOMIZED)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(finalResourceMap.containsKey(onlineOfflineFullAutoResource))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "new ResourceValidationStage().process(event)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "new ResourceComputationStage().process(event)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(finalResourceMap.containsKey(masterSlaveSemiAutoInvalidResource))@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(resourceMap.containsKey(onlineOfflineFullAutoResource))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(resourceMap.containsKey(masterSlaveCustomResource))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createISSpec(accessor,onlineOfflineFullAutoResource + \"_spec\",\"OnlineOffline\",RebalanceMode.FULL_AUTO)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createIS(accessor,onlineOfflineFullAutoResource,\"OnlineOffline\",RebalanceMode.FULL_AUTO)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cache.refresh(accessor)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String onlineOfflineFullAutoResource = \"onlineOfflineFullAutoResource\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "accessor.setProperty(accessor.keyBuilder().clusterConfig(),new ClusterConfig(\"TestCluster\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<String,Resource> resourceMap = event.getAttribute(AttributeName.RESOURCES_TO_REBALANCE.name())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "createIS(accessor,masterSlaveSemiAutoInvalidResource,\"MasterSlave\",RebalanceMode.SEMI_AUTO)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testNoSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "createIS(accessor,masterSlaveCustomResource,\"MasterSlave\",RebalanceMode.CUSTOMIZED)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClusterDataCache cache = new ClusterDataCache()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "event.addAttribute(AttributeName.ControllerDataProvider.name(),cache)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.assertTrue(resourceMap.containsKey(masterSlaveSemiAutoInvalidResource))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testIdealStateValidity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "addStateModels(accessor)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Map<String,Resource> resourceMap = event.getAttribute(AttributeName.RESOURCES.name())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
22->26 [style = bold, label=""];
28->10 [style = bold, label=""];
12->9 [style = solid, label="masterSlaveCustomResource"];
3->16 [style = solid, label="onlineOfflineFullAutoResource"];
10->21 [style = solid, label="accessor"];
5->26 [style = dashed, label="0"];
15->21 [style = bold, label=""];
8->18 [style = bold, label=""];
10->24 [style = solid, label="accessor"];
22->19 [style = solid, label="event"];
20->27 [style = dashed, label="0"];
4->21 [style = bold, label=""];
12->14 [style = solid, label="masterSlaveCustomResource"];
30->25 [style = bold, label=""];
11->12 [style = bold, label=""];
26->27 [style = solid, label="cache"];
5->20 [style = solid, label="cache"];
25->6 [style = bold, label=""];
26->24 [style = bold, label=""];
12->25 [style = solid, label="masterSlaveCustomResource"];
0->1 [style = solid, label="masterSlaveSemiAutoInvalidResource"];
22->5 [style = bold, label=""];
25->2 [style = bold, label=""];
9->16 [style = bold, label=""];
10->4 [style = solid, label="accessor"];
3->0 [style = bold, label=""];
0->17 [style = solid, label="masterSlaveSemiAutoInvalidResource"];
24->20 [style = bold, label=""];
2->23 [style = bold, label=""];
10->14 [style = solid, label="accessor"];
3->6 [style = solid, label="onlineOfflineFullAutoResource"];
17->2 [style = bold, label=""];
12->4 [style = bold, label=""];
16->1 [style = bold, label=""];
0->4 [style = bold, label=""];
21->22 [style = bold, label=""];
5->24 [style = bold, label=""];
19->30 [style = bold, label=""];
7->30 [style = dashed, label="0"];
10->18 [style = solid, label="accessor"];
10->8 [style = solid, label="accessor"];
4->8 [style = bold, label=""];
29->10 [style = bold, label=""];
3->15 [style = solid, label="onlineOfflineFullAutoResource"];
14->15 [style = bold, label=""];
7->25 [style = bold, label=""];
12->3 [style = bold, label=""];
27->19 [style = bold, label=""];
10->15 [style = solid, label="accessor"];
3->8 [style = solid, label="onlineOfflineFullAutoResource"];
20->19 [style = bold, label=""];
23->9 [style = bold, label=""];
19->7 [style = bold, label=""];
18->14 [style = bold, label=""];
24->27 [style = bold, label=""];
12->4 [style = solid, label="masterSlaveCustomResource"];
0->18 [style = solid, label="masterSlaveSemiAutoInvalidResource"];
22->2 [style = solid, label="event"];
10->11 [style = bold, label=""];
}
