digraph {
4 [style = filled, label = "throw closer.rethrow(t)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "versionNumber != SCHEMA_VERSION@@@10@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Closer closer = Closer.create()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "deserializeReportFromJson['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int versionNumber = inputStream.readInt()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "byte(( bytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Throwable t@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "throw closer.rethrow(t)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Decoder decoder = DecoderFactory.get().binaryDecoder(inputStream,null)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "DataInputStream inputStream = closer.register(new DataInputStream(new ByteArrayInputStream(bytes)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{closer.close()}@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "{closer.close()}@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MetricReport reuse@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "reader = Optional.of(new SpecificDatumReader<>())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "READER = Optional.of(new SpecificDatumReader<>())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "deserializeReportFromAvroSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "GobblinTrackingEvent reuse@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "!READER.isPresent()@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return READER.get().read(reuse,decoder)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Decoder decoder = DecoderFactory.get().jsonDecoder(GobblinTrackingEvent.SCHEMA$,inputStream)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "readAndVerifySchemaVersion(inputStream)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "return reader.get().read(reuse,decoder)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Throwable t@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return READER.get().read(reuse,decoder)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "schemaId != null@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "throw new IOException(String.format(\"MetricReport schema version not recognized. Found version %d, expected %d.\",versionNumber,SCHEMA_VERSION))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "throw new IOException(String.format(\"MetricReport schema version not recognized. Found version %d, expected %d.\",versionNumber,SCHEMA_VERSION))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MetricReport reuse@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "deserializeReportFromAvroSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "!reader.isPresent()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "readAndVerifySchemaId(inputStream,schemaId)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "byte(( bytes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "byte(( bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "@Nullable String schemaId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21->13 [style = solid, label="reuse"];
31->14 [style = bold, label=""];
29->4 [style = dotted, label="true"];
9->22 [style = solid, label="inputStream"];
9->28 [style = solid, label="inputStream"];
3->5 [style = solid, label="versionNumber"];
4->14 [style = bold, label=""];
0->5 [style = dotted, label="true"];
1->8 [style = bold, label=""];
22->15 [style = bold, label=""];
23->22 [style = dotted, label="false"];
0->13 [style = bold, label=""];
15->13 [style = bold, label=""];
29->4 [style = bold, label=""];
26->32 [style = bold, label=""];
11->1 [style = bold, label=""];
18->19 [style = solid, label="schemaId"];
26->27 [style = dotted, label="true"];
33->28 [style = bold, label=""];
24->17 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
0->33 [style = dotted, label="true"];
28->31 [style = bold, label=""];
9->19 [style = solid, label="inputStream"];
24->18 [style = dotted, label="true"];
6->31 [style = dashed, label="0"];
2->9 [style = solid, label="bytes"];
9->13 [style = solid, label="inputStream"];
32->7 [style = bold, label=""];
13->6 [style = solid, label="decoder"];
17->9 [style = solid, label="bytes"];
23->19 [style = dotted, label="true"];
30->9 [style = solid, label="bytes"];
0->28 [style = bold, label=""];
28->31 [style = solid, label="decoder"];
12->30 [style = dashed, label="0"];
25->7 [style = bold, label=""];
1->32 [style = dashed, label="0"];
1->7 [style = bold, label=""];
10->29 [style = dashed, label="0"];
13->16 [style = bold, label=""];
12->21 [style = dashed, label="0"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
20->10 [style = bold, label=""];
6->14 [style = bold, label=""];
7->9 [style = bold, label=""];
9->23 [style = bold, label=""];
13->28 [style = dashed, label="0"];
3->33 [style = solid, label="versionNumber"];
11->2 [style = dotted, label="true"];
32->25 [style = dotted, label="true"];
23->22 [style = bold, label=""];
18->23 [style = solid, label="schemaId"];
10->16 [style = bold, label=""];
0->33 [style = bold, label=""];
26->30 [style = dotted, label="true"];
15->13 [style = solid, label="decoder"];
5->13 [style = bold, label=""];
23->19 [style = bold, label=""];
20->10 [style = dotted, label="true"];
32->25 [style = bold, label=""];
5->33 [style = dashed, label="0"];
1->8 [style = dotted, label="true"];
3->0 [style = solid, label="versionNumber"];
10->4 [style = bold, label=""];
9->3 [style = bold, label=""];
8->25 [style = dashed, label="0"];
12->6 [style = solid, label="reuse"];
24->1 [style = bold, label=""];
10->4 [style = dotted, label="true"];
13->6 [style = bold, label=""];
19->15 [style = bold, label=""];
24->21 [style = dotted, label="true"];
27->31 [style = solid, label="reuse"];
9->15 [style = solid, label="inputStream"];
0->5 [style = bold, label=""];
}
