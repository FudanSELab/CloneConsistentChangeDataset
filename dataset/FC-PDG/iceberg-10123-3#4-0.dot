digraph {
19 [style = filled, label = "isOptionSchemaWithNonNullFirstOption(newSchema)@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Schema newSchemaReordered@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "copy.addProp(AvroSchemaUtil.FIELD_ID_PROP,fieldId)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "return copy@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Schema.Field field@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Preconditions.checkArgument(existingFieldId == fieldId,\"Existing field does match with that fetched from name mapping\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "AvroSchemaUtil.hasFieldId(field)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "copyField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Schema.Field field@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Schema.Field field@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Schema.Field copy = new Schema.Field(field.name(),newSchema,field.doc(),field.defaultVal(),field.order())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Schema.Field copy = new Schema.Field(field.name(),newSchemaReordered,field.doc(),AvroSchemaUtil.isOptionSchema(newSchemaReordered)? JsonProperties.NULL_VALUE: null,field.order())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "copyField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Schema newSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "copyField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "return copy@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Preconditions.checkArgument(existingFieldId == fieldId,\"Existing field does match with that fetched from name mapping\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "key != AvroSchemaUtil.FIELD_ID_PROP@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Schema newSchema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int existingFieldId = AvroSchemaUtil.getFieldId(field)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Schema newSchema@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "copy.addProp(prop.getKey(),prop.getValue())@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "newSchemaReordered = AvroSchemaUtil.toOption(AvroSchemaUtil.fromOption(newSchema))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Integer fieldId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "AvroSchemaUtil.hasFieldId(field)@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int existingFieldId = AvroSchemaUtil.getFieldId(field)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "copy.addProp(key,prop.getValue())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "copy.addProp(prop.getKey(),prop.getValue())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "newSchemaReordered = newSchema@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "String key = prop.getKey()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->26 [style = bold, label=""];
15->20 [style = solid, label="fieldId"];
18->15 [style = dotted, label="true"];
11->12 [style = bold, label=""];
8->4 [style = bold, label=""];
7->17 [style = dotted, label="true"];
14->22 [style = solid, label="newSchemaReordered"];
13->14 [style = solid, label="newSchema"];
5->9 [style = dotted, label="true"];
9->1 [style = solid, label="fieldId"];
25->24 [style = bold, label=""];
25->26 [style = bold, label=""];
18->9 [style = dotted, label="true"];
27->0 [style = solid, label="newSchema"];
10->8 [style = bold, label=""];
6->4 [style = solid, label="field"];
16->22 [style = bold, label=""];
17->20 [style = bold, label=""];
0->26 [style = solid, label="copy"];
7->11 [style = bold, label=""];
3->7 [style = bold, label=""];
28->27 [style = dotted, label="true"];
6->8 [style = solid, label="field"];
29->25 [style = bold, label=""];
0->24 [style = bold, label=""];
18->13 [style = dotted, label="true"];
9->3 [style = solid, label="fieldId"];
0->10 [style = bold, label=""];
8->1 [style = bold, label=""];
9->17 [style = solid, label="field"];
19->16 [style = bold, label=""];
5->6 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
5->0 [style = bold, label=""];
21->19 [style = bold, label=""];
10->24 [style = dashed, label="0"];
2->0 [style = solid, label="newSchema"];
13->19 [style = solid, label="newSchema"];
17->20 [style = solid, label="existingFieldId"];
8->1 [style = dotted, label="false"];
24->29 [style = solid, label="key"];
9->7 [style = solid, label="field"];
0->7 [style = solid, label="copy"];
18->21 [style = bold, label=""];
16->22 [style = solid, label="newSchemaReordered"];
7->17 [style = bold, label=""];
28->23 [style = dotted, label="true"];
8->3 [style = dotted, label="true"];
19->14 [style = bold, label=""];
29->24 [style = bold, label=""];
1->7 [style = bold, label=""];
19->14 [style = dotted, label="false"];
29->25 [style = dotted, label="true"];
24->29 [style = bold, label=""];
22->1 [style = bold, label=""];
4->3 [style = solid, label="existingFieldId"];
13->16 [style = solid, label="newSchema"];
15->11 [style = solid, label="fieldId"];
22->12 [style = solid, label="copy"];
4->3 [style = bold, label=""];
20->12 [style = bold, label=""];
24->25 [style = solid, label="key"];
28->0 [style = bold, label=""];
8->4 [style = dotted, label="true"];
5->2 [style = dotted, label="true"];
7->20 [style = dotted, label="true"];
7->11 [style = dotted, label="false"];
9->27 [style = dashed, label="0"];
14->22 [style = bold, label=""];
}
