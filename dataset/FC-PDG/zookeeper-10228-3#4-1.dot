digraph {
22 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(handshakeCompleted)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "{forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Socket badClientSocket = connectWithoutSSL()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testTLSDetectionNonBlockingStrictServerIdleClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Socket secureClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "handshakeCompletedLock@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "forceClose(badClientSocket)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "!handshakeCompleted@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "serverThread.start()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testTLSDetectionNonBlockingStrictServerDisconnectedClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "serverThread.start()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Socket badClientSocket = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testTLSDetectionNonBlockingStrictServerIdleClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
17->25 [style = bold, label=""];
7->6 [style = dotted, label="true"];
25->28 [style = bold, label=""];
15->23 [style = dashed, label="0"];
20->13 [style = bold, label=""];
15->7 [style = bold, label=""];
5->9 [style = bold, label=""];
16->8 [style = bold, label=""];
21->19 [style = bold, label=""];
11->14 [style = bold, label=""];
16->19 [style = dashed, label="0"];
6->21 [style = bold, label=""];
26->3 [style = bold, label=""];
18->15 [style = bold, label=""];
0->11 [style = bold, label=""];
14->18 [style = solid, label="bytesRead"];
7->9 [style = dotted, label="true"];
2->10 [style = bold, label=""];
3->22 [style = bold, label=""];
27->8 [style = solid, label="secureClientSocket"];
25->28 [style = solid, label="badClientSocket"];
9->16 [style = bold, label=""];
19->8 [style = bold, label=""];
11->14 [style = solid, label="buf"];
22->4 [style = bold, label=""];
29->26 [style = bold, label=""];
14->24 [style = solid, label="bytesRead"];
5->21 [style = bold, label=""];
12->13 [style = bold, label=""];
11->15 [style = solid, label="buf"];
6->5 [style = bold, label=""];
11->23 [style = solid, label="buf"];
13->3 [style = bold, label=""];
9->21 [style = dashed, label="0"];
27->10 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
3->17 [style = bold, label=""];
14->18 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
23->7 [style = bold, label=""];
28->27 [style = bold, label=""];
6->9 [style = bold, label=""];
1->25 [style = dashed, label="0"];
7->21 [style = dotted, label="true"];
1->8 [style = solid, label="badClientSocket"];
17->4 [style = bold, label=""];
2->8 [style = solid, label="secureClientSocket"];
6->5 [style = dotted, label="true"];
18->24 [style = dashed, label="0"];
24->23 [style = bold, label=""];
17->22 [style = dashed, label="0"];
}
