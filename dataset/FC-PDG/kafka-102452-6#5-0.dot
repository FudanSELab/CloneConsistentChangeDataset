digraph {
5 [style = filled, label = "stateMgr.checkpoint(singletonMap(persistentStorePartition,987L))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertFalse(changelogReader.isPartitionRegistered(persistentStorePartition))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "shouldNotWriteCheckpointForStoresWithoutChangelogTopic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Map<TopicPartition,Long> read = checkpoint.read()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(read,equalTo(emptyMap()))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "shouldNotRegisterNonLoggedStore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "stateMgr.checkpoint()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "{stateMgr.close()}@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final Map<TopicPartition,Long> read = checkpoint.read()@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldNotWriteCheckpointForStoresWithoutChangelogTopic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "stateMgr.updateChangelogOffsets(singletonMap(persistentStorePartition,987L))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "{stateMgr.close()}@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final ProcessorStateManager stateMgr = new ProcessorStateManager(taskId,Task.TaskType.STANDBY,false,logContext,stateDirectory,changelogReader,emptyMap(),emptySet())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stateMgr.registerStore(persistentStore,persistentStore.stateRestoreCallback)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{stateMgr.close()}@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
5->3 [style = bold, label=""];
3->6 [style = solid, label="read"];
6->1 [style = bold, label=""];
3->6 [style = bold, label=""];
14->2 [style = bold, label=""];
2->0 [style = bold, label=""];
7->11 [style = bold, label=""];
13->12 [style = bold, label=""];
4->2 [style = bold, label=""];
6->9 [style = solid, label="read"];
6->9 [style = bold, label=""];
9->10 [style = bold, label=""];
8->2 [style = bold, label=""];
0->13 [style = bold, label=""];
5->7 [style = dashed, label="0"];
11->6 [style = bold, label=""];
0->5 [style = bold, label=""];
0->7 [style = bold, label=""];
}
