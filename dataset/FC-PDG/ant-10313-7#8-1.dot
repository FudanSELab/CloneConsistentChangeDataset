digraph {
2 [style = filled, label = "loader = buildRule.getProject().createClassLoader(myPath)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String mainjarstring = buildRule.getProject().getProperty(\"main.jar\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String extjarstring = buildRule.getProject().getProperty(\"ext.jar\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testJarWithManifestInNonAsciiDir['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testJarWithManifestInDirWithSpace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "buildRule.getProject().setUserProperty(MagicNames.BUILD_SYSCLASSPATH,\"ignore\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "myPath.setLocation(new File(mainjarstring))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String extjarstring = buildRule.getProject().getProperty(\"ext.jar.nonascii\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "buildRule.getProject().setUserProperty(\"build.sysclasspath\",\"ignore\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String mainjarstring = buildRule.getProject().getProperty(\"main.jar.nonascii\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Path myPath = new Path(buildRule.getProject())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String path = loader.getClasspath()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(mainjarstring + File.pathSeparator + extjarstring,path)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testJarWithManifestInDirWithSpace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
3->1 [style = bold, label=""];
5->9 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
7->2 [style = solid, label="myPath"];
2->3 [style = bold, label=""];
6->11 [style = dashed, label="0"];
12->11 [style = bold, label=""];
4->1 [style = solid, label="extjarstring"];
10->6 [style = bold, label=""];
4->7 [style = bold, label=""];
8->9 [style = dashed, label="0"];
6->5 [style = solid, label="mainjarstring"];
6->1 [style = solid, label="mainjarstring"];
6->4 [style = bold, label=""];
7->5 [style = bold, label=""];
13->1 [style = solid, label="extjarstring"];
8->2 [style = bold, label=""];
13->7 [style = bold, label=""];
11->13 [style = bold, label=""];
11->1 [style = solid, label="mainjarstring"];
11->5 [style = solid, label="mainjarstring"];
4->13 [style = dashed, label="0"];
3->1 [style = solid, label="path"];
}
