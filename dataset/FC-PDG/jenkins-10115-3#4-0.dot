digraph {
6 [style = filled, label = "createViewShouldFailWithoutViewCreatePermission['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "createViewShouldFailWithoutViewCreatePermission['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: user is missing the View/Create permission\"))@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final CLICommandInvoker.Result result = command.withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\")).invoke()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(result,failedWith(6))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "clearQueueShouldFailWithoutAdministerPermission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(result.stderr(),containsString(\"user is missing the Overall/Administer permission\"))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).invoke()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().toAuthenticated())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\")).invoke()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->3 [style = solid, label="result"];
4->10 [style = dashed, label="0"];
1->8 [style = bold, label=""];
3->1 [style = bold, label=""];
11->10 [style = bold, label=""];
0->3 [style = bold, label=""];
2->4 [style = bold, label=""];
10->0 [style = solid, label="result"];
7->1 [style = solid, label="result"];
4->0 [style = solid, label="result"];
6->5 [style = bold, label=""];
3->9 [style = bold, label=""];
5->7 [style = bold, label=""];
10->0 [style = bold, label=""];
4->0 [style = bold, label=""];
10->3 [style = solid, label="result"];
1->9 [style = dashed, label="0"];
4->3 [style = solid, label="result"];
7->3 [style = bold, label=""];
}
