digraph {
4 [style = filled, label = "testHarness.open()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness2.processWatermark(20L)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_PROC_TIME_TIMER:40\"),0)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testHarness1.processWatermark(0L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_PROC_TIME:CIAO\"))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(extractResult(testHarness2),contains(\"ON_EVENT_TIME:CIAO\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_PROC_TIME_TIMER:10\"),0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testHarness1.processElement(new Tuple2<>(key1,\"SET_STATE:HELLO\"),0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "testHarness1.processElement(new Tuple2<>(key1,\"SET_PROC_TIME_TIMER:30\"),0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testHarness2.setProcessingTime(10L)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness2.initializeState(snapshot)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "testHarness3.processWatermark(40L)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "testHarness3.processWatermark(30L)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_PROC_TIME_TIMER:20\"),0)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_EVENT_TIME:HELLO\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness2 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator2,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,2,1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "testHarness2.setup()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(extractResult(testHarness2),contains(\"ON_PROC_TIME:CIAO\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "testStateAndTimerStateShufflingScalingDown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testHarness1.setup()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_STATE:CIAO\"),0)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testHarness3.setProcessingTime(40L)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "testHarness2.processWatermark(0L)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testStateAndTimerStateShufflingScalingUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "testHarness2.open()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_STATE:HELLO\"),0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_EVENT_TIME_TIMER:20\"),0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_PROC_TIME:HELLO\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(extractResult(testHarness).isEmpty())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "KeyGroupRange subKeyGroupRange1 = new KeyGroupRange(0,(maxParallelism / 2) - 1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness3 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator3,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,1,0)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "OperatorSubtaskState snapshot = testHarness.snapshot(0,0)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "testHarness3.initializeState(repackagedState)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_EVENT_TIME:HELLO\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_PROC_TIME:HELLO\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_STATE:CIAO\"),0)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_EVENT_TIME_TIMER:10\"),0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness1 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator1,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,2,0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testHarness1.initializeState(snapshot)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHarness.setProcessingTime(0L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testStateAndTimerStateShufflingScalingUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertTrue(extractResult(testHarness3).isEmpty())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "testHarness3.setProcessingTime(30L)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testHarness1.open()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(testOperator,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,1,0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testHarness2.processWatermark(10L)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "TestOperator testOperator3 = new TestOperator()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "int key2 = getKeyInKeyGroupRange(subKeyGroupRange2,maxParallelism)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testHarness1.processWatermark(10L)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testHarness1.setProcessingTime(20L)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "testHarness1.setProcessingTime(0L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "OperatorStateHandles snapshot = testHarness.snapshot(0,0)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "final int maxParallelism = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testHarness3.open()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "TestOperator testOperator = new TestOperator()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.processWatermark(0L)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestOperator testOperator1 = new TestOperator()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "testHarness1.processElement(new Tuple2<>(key1,\"SET_EVENT_TIME_TIMER:30\"),0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "KeyGroupRange subKeyGroupRange2 = new KeyGroupRange(subKeyGroupRange1.getEndKeyGroup() + 1,maxParallelism - 1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testHarness2.processElement(new Tuple2<>(key2,\"SET_EVENT_TIME_TIMER:40\"),0)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int key1 = getKeyInKeyGroupRange(subKeyGroupRange1,maxParallelism)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testHarness1.setProcessingTime(10L)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(extractResult(testHarness3),contains(\"ON_EVENT_TIME:CIAO\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "testHarness3.setup()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testHarness2.setProcessingTime(20L)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness1.processWatermark(20L)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "TestOperator testOperator2 = new TestOperator()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "OperatorStateHandles repackagedState = AbstractStreamOperatorTestHarness.repackageState(testHarness1.snapshot(0,0),testHarness2.snapshot(0,0))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testHarness2.setProcessingTime(0L)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41->39 [style = solid, label="subKeyGroupRange2"];
12->45 [style = bold, label=""];
46->0 [style = bold, label=""];
5->20 [style = bold, label=""];
67->61 [style = solid, label="testOperator3"];
43->5 [style = solid, label="key1"];
43->15 [style = solid, label="key1"];
35->3 [style = solid, label="testHarness2"];
32->43 [style = solid, label="subKeyGroupRange1"];
42->9 [style = bold, label=""];
37->76 [style = dashed, label="0"];
16->7 [style = bold, label=""];
18->30 [style = bold, label=""];
58->60 [style = bold, label=""];
2->47 [style = dashed, label="0"];
34->59 [style = dashed, label="0"];
39->19 [style = solid, label="key2"];
25->27 [style = solid, label="testOperator"];
57->58 [style = bold, label=""];
73->68 [style = solid, label="testOperator2"];
46->1 [style = solid, label="testHarness1"];
14->35 [style = solid, label="maxParallelism"];
53->70 [style = solid, label="repackagedState"];
21->46 [style = bold, label=""];
49->6 [style = solid, label="snapshot"];
3->36 [style = bold, label=""];
24->21 [style = bold, label=""];
14->61 [style = solid, label="maxParallelism"];
52->69 [style = bold, label=""];
14->41 [style = solid, label="maxParallelism"];
72->47 [style = bold, label=""];
61->56 [style = solid, label="testHarness3"];
60->65 [style = bold, label=""];
75->77 [style = bold, label=""];
39->33 [style = solid, label="key2"];
19->15 [style = bold, label=""];
49->7 [style = solid, label="snapshot"];
77->59 [style = bold, label=""];
8->55 [style = dashed, label="0"];
14->43 [style = solid, label="maxParallelism"];
47->35 [style = solid, label="testOperator2"];
28->18 [style = bold, label=""];
43->47 [style = solid, label="key1"];
50->70 [style = bold, label=""];
14->68 [style = solid, label="maxParallelism"];
26->14 [style = bold, label=""];
20->31 [style = bold, label=""];
34->8 [style = bold, label=""];
56->57 [style = bold, label=""];
13->11 [style = bold, label=""];
67->61 [style = bold, label=""];
55->76 [style = bold, label=""];
45->1 [style = bold, label=""];
25->27 [style = bold, label=""];
7->33 [style = bold, label=""];
30->19 [style = bold, label=""];
45->52 [style = dashed, label="0"];
14->39 [style = solid, label="maxParallelism"];
70->54 [style = bold, label=""];
63->62 [style = bold, label=""];
16->33 [style = bold, label=""];
40->17 [style = bold, label=""];
62->78 [style = bold, label=""];
66->71 [style = bold, label=""];
59->55 [style = bold, label=""];
61->63 [style = solid, label="testHarness3"];
39->25 [style = bold, label=""];
41->43 [style = bold, label=""];
71->56 [style = bold, label=""];
54->64 [style = bold, label=""];
9->16 [style = dashed, label="0"];
43->30 [style = solid, label="key1"];
22->2 [style = bold, label=""];
36->53 [style = dashed, label="0"];
78->51 [style = bold, label=""];
31->24 [style = bold, label=""];
0->12 [style = bold, label=""];
48->14 [style = bold, label=""];
14->27 [style = solid, label="maxParallelism"];
39->20 [style = solid, label="key2"];
15->44 [style = bold, label=""];
31->49 [style = bold, label=""];
74->14 [style = bold, label=""];
39->16 [style = solid, label="key2"];
39->21 [style = bold, label=""];
37->22 [style = bold, label=""];
46->13 [style = solid, label="testHarness1"];
39->35 [style = solid, label="key2"];
10->23 [style = bold, label=""];
43->76 [style = solid, label="key1"];
9->3 [style = bold, label=""];
29->10 [style = bold, label=""];
32->41 [style = bold, label=""];
8->37 [style = bold, label=""];
35->22 [style = solid, label="testHarness2"];
1->29 [style = bold, label=""];
21->46 [style = solid, label="testOperator1"];
14->32 [style = bold, label=""];
43->39 [style = bold, label=""];
44->5 [style = bold, label=""];
53->67 [style = bold, label=""];
43->72 [style = solid, label="key1"];
24->49 [style = dashed, label="0"];
6->12 [style = bold, label=""];
39->44 [style = solid, label="key2"];
14->46 [style = solid, label="maxParallelism"];
14->32 [style = solid, label="maxParallelism"];
35->16 [style = bold, label=""];
0->6 [style = bold, label=""];
17->47 [style = bold, label=""];
64->63 [style = bold, label=""];
24->7 [style = solid, label="snapshot"];
11->40 [style = bold, label=""];
47->35 [style = bold, label=""];
33->53 [style = bold, label=""];
49->21 [style = bold, label=""];
4->28 [style = bold, label=""];
61->60 [style = solid, label="testHarness3"];
27->4 [style = bold, label=""];
76->72 [style = bold, label=""];
24->6 [style = solid, label="snapshot"];
23->38 [style = bold, label=""];
68->75 [style = bold, label=""];
61->50 [style = bold, label=""];
12->52 [style = bold, label=""];
69->73 [style = bold, label=""];
73->68 [style = bold, label=""];
38->13 [style = bold, label=""];
42->35 [style = dashed, label="0"];
33->34 [style = bold, label=""];
2->42 [style = bold, label=""];
61->51 [style = solid, label="testHarness3"];
51->66 [style = bold, label=""];
}
