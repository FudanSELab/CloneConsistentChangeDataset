digraph {
1 [style = filled, label = "sourceTask.start(EMPTY_TASK_PROPS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(workerTask.commitOffsets())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expectOffsetFlush(false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(true,workerTask.awaitStop(1000))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sourceTask.stop()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expectLastCall()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final CountDownLatch pollLatch = expectPolls(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testPollsInBackground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "EasyMock.expectLastCall()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final CountDownLatch pollLatch = expectPolls(10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expectLastCall()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sourceTask.stop()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testCommitFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createWorkerTask()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "executor.submit(workerTask)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sourceTask.initialize(EasyMock.anyObject())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testPollsInBackground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expectLastCall()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "awaitPolls(pollLatch)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PowerMock.verifyAll()@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PowerMock.replayAll()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "workerTask.stop()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "statusListener.onShutdown(taskId)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "expectOffsetFlush(true)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "statusListener.onStartup(taskId)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13->10 [style = bold, label=""];
16->3 [style = bold, label=""];
10->18 [style = bold, label=""];
22->15 [style = bold, label=""];
15->14 [style = bold, label=""];
4->6 [style = bold, label=""];
6->22 [style = bold, label=""];
26->3 [style = bold, label=""];
25->6 [style = solid, label="pollLatch"];
18->17 [style = bold, label=""];
0->21 [style = bold, label=""];
1->0 [style = bold, label=""];
8->4 [style = solid, label="pollLatch"];
12->1 [style = bold, label=""];
17->11 [style = bold, label=""];
6->15 [style = bold, label=""];
2->13 [style = bold, label=""];
3->9 [style = bold, label=""];
25->24 [style = bold, label=""];
7->5 [style = bold, label=""];
20->8 [style = bold, label=""];
21->20 [style = bold, label=""];
14->23 [style = bold, label=""];
8->2 [style = bold, label=""];
0->25 [style = bold, label=""];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
8->25 [style = dashed, label="0"];
9->12 [style = bold, label=""];
19->3 [style = bold, label=""];
11->7 [style = bold, label=""];
24->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
