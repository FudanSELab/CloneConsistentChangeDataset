digraph {
27 [style = filled, label = "final long end = System.nanoTime()@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "client().execute(RetentionLeaseActions.Add.INSTANCE,new RetentionLeaseActions.AddRequest(indexService.getShard(0).shardId(),id,retainingSequenceNumber,source)).actionGet()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final IndexService indexService = createIndex(\"index\",settings)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertNotNull(stats.getShards()(0(.getRetentionLeaseStats())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final RetentionLease initialRetentionLease = initialStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases().iterator().next()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertThat(renewedStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(2))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final IndicesStatsResponse renewedStats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final long retainingSequenceNumber = randomBoolean()? RETAIN_ALL: randomNonNegativeLong()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(initialStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(1))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final String id = randomAlphaOfLength(8)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(initialStats.getShards(),arrayWithSize(1))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertThat(stats.getShards(),arrayWithSize(1))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final long timestampUpperBound = threadPool.absoluteTimeInMillis()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "threadPool.absoluteTimeInMillis() <= timestampUpperBound@@@27@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(renewedRetentionLease.source(),equalTo(source))@@@48@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertNotNull(initialStats.getShards())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final RetentionLease retentionLease = stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases().iterator().next()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertNotNull(renewedStats.getShards()(0(.getRetentionLeaseStats())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ThreadPool threadPool = getInstanceFromNode()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final RetentionLease initialRetentionLease = initialStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().get(id)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(renewedRetentionLease.retainingSequenceNumber(),equalTo(nextRetainingSequenceNumber == RETAIN_ALL? 0L: nextRetainingSequenceNumber))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(renewedRetentionLease.id(),equalTo(id))@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "end - start < estimatedTimeInterval.nanos()@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testRenewUnderBlock['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(retentionLease.retainingSequenceNumber(),equalTo(retainingSequenceNumber == RETAIN_ALL? 0L: retainingSequenceNumber))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final long nextRetainingSequenceNumber = retainingSequenceNumber == RETAIN_ALL && randomBoolean()? RETAIN_ALL: randomLongBetween(Math.max(retainingSequenceNumber,0L),Long.MAX_VALUE)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertThat(initialStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(2))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "testRenewUnderBlock['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertNotNull(renewedStats.getShards())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final IndicesStatsResponse renewedStats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(renewedStats.getShards(),arrayWithSize(1))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testAddUnderBlock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertNotNull(stats.getShards())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertTrue(renewedStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().contains(ReplicationTracker.getPeerRecoveryRetentionLeaseId(renewedStats.getShards()(0(.getShardRouting())))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "Thread.sleep(TimeUnit.NANOSECONDS.toMillis(estimatedTimeInterval.nanos() - (end - start)))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "assertThat(renewedRetentionLease.timestamp(),greaterThan(initialRetentionLease.timestamp()))@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final long end = System.nanoTime()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final RetentionLease renewedRetentionLease = renewedStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().get(id)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ensureGreen(\"index\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(initialStats.getShards()(0(.getRetentionLeaseStats())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "threadPool.absoluteTimeInMillis() <= timestampUpperBound@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final long start = System.nanoTime()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "runActionUnderBlockTest(indexService,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final Settings settings = Settings.builder().put(\"index.number_of_shards\",1).put(\"index.number_of_replicas\",0).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(1))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "final IndicesStatsResponse stats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final long nextRetainingSequenceNumber = retainingSequenceNumber == RETAIN_ALL && randomBoolean()? RETAIN_ALL: randomLongBetween(Math.max(retainingSequenceNumber,0L),Long.MAX_VALUE)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "runActionUnderBlockTest(indexService,null)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertThat(renewedRetentionLease.id(),equalTo(id))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(renewedRetentionLease.retainingSequenceNumber(),equalTo(nextRetainingSequenceNumber == RETAIN_ALL? 0L: nextRetainingSequenceNumber))@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(retentionLease.id(),equalTo(id))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String source = randomAlphaOfLength(8)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(initialStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().contains(ReplicationTracker.getPeerRecoveryRetentionLeaseId(initialStats.getShards()(0(.getShardRouting())))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final TimeValue estimatedTimeInterval = ThreadPool.ESTIMATED_TIME_INTERVAL_SETTING.get(getInstanceFromNode().settings())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final RetentionLease renewedRetentionLease = renewedStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases().iterator().next()@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final IndicesStatsResponse initialStats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(retentionLease.source(),equalTo(source))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31->37 [style = bold, label=""];
26->38 [style = dashed, label="0"];
23->48 [style = dashed, label="0"];
15->31 [style = dotted, label="true"];
0->54 [style = solid, label="source"];
20->0 [style = bold, label=""];
16->7 [style = bold, label=""];
34->15 [style = bold, label=""];
19->35 [style = solid, label="id"];
2->15 [style = dotted, label="true"];
25->14 [style = bold, label=""];
45->24 [style = bold, label=""];
27->15 [style = bold, label=""];
56->47 [style = bold, label=""];
7->9 [style = bold, label=""];
55->48 [style = bold, label=""];
30->11 [style = bold, label=""];
1->28 [style = bold, label=""];
48->51 [style = bold, label=""];
28->21 [style = bold, label=""];
4->36 [style = dashed, label="0"];
3->19 [style = bold, label=""];
2->15 [style = bold, label=""];
20->49 [style = solid, label="retainingSequenceNumber"];
22->37 [style = solid, label="start"];
17->27 [style = bold, label=""];
5->55 [style = dashed, label="0"];
8->27 [style = bold, label=""];
12->22 [style = bold, label=""];
25->52 [style = dashed, label="0"];
11->41 [style = solid, label="indexService"];
47->53 [style = bold, label=""];
12->8 [style = solid, label="timestampUpperBound"];
5->23 [style = bold, label=""];
19->20 [style = bold, label=""];
25->40 [style = dashed, label="0"];
31->2 [style = bold, label=""];
15->31 [style = solid, label="end"];
41->6 [style = bold, label=""];
6->53 [style = dashed, label="0"];
34->13 [style = solid, label="nextRetainingSequenceNumber"];
50->49 [style = bold, label=""];
19->50 [style = solid, label="id"];
22->18 [style = bold, label=""];
15->31 [style = bold, label=""];
39->35 [style = bold, label=""];
33->30 [style = bold, label=""];
35->34 [style = bold, label=""];
49->54 [style = bold, label=""];
24->13 [style = bold, label=""];
11->2 [style = solid, label="indexService"];
2->41 [style = bold, label=""];
0->43 [style = solid, label="source"];
29->17 [style = bold, label=""];
30->11 [style = solid, label="settings"];
8->15 [style = dotted, label="true"];
4->29 [style = bold, label=""];
51->52 [style = bold, label=""];
2->10 [style = bold, label=""];
17->32 [style = solid, label="nextRetainingSequenceNumber"];
10->6 [style = bold, label=""];
36->39 [style = bold, label=""];
21->12 [style = bold, label=""];
6->5 [style = bold, label=""];
0->13 [style = solid, label="source"];
46->30 [style = bold, label=""];
8->2 [style = bold, label=""];
11->3 [style = bold, label=""];
19->14 [style = solid, label="id"];
32->49 [style = dashed, label="0"];
0->1 [style = bold, label=""];
19->45 [style = solid, label="id"];
20->13 [style = solid, label="retainingSequenceNumber"];
52->50 [style = bold, label=""];
37->2 [style = bold, label=""];
20->17 [style = solid, label="retainingSequenceNumber"];
30->1 [style = solid, label="settings"];
22->15 [style = solid, label="start"];
12->2 [style = solid, label="timestampUpperBound"];
15->37 [style = solid, label="end"];
14->32 [style = bold, label=""];
38->40 [style = bold, label=""];
31->8 [style = bold, label=""];
15->8 [style = bold, label=""];
14->50 [style = dashed, label="0"];
9->36 [style = bold, label=""];
18->16 [style = bold, label=""];
53->55 [style = bold, label=""];
19->24 [style = solid, label="id"];
26->51 [style = dashed, label="0"];
31->37 [style = dotted, label="true"];
9->4 [style = bold, label=""];
26->25 [style = bold, label=""];
13->44 [style = bold, label=""];
29->39 [style = dashed, label="0"];
23->26 [style = bold, label=""];
11->56 [style = solid, label="indexService"];
2->31 [style = dotted, label="true"];
20->34 [style = solid, label="retainingSequenceNumber"];
44->43 [style = bold, label=""];
26->38 [style = bold, label=""];
42->30 [style = bold, label=""];
22->31 [style = solid, label="start"];
0->56 [style = bold, label=""];
20->32 [style = solid, label="retainingSequenceNumber"];
40->45 [style = bold, label=""];
8->27 [style = dotted, label="true"];
27->15 [style = solid, label="end"];
32->24 [style = bold, label=""];
10->47 [style = dashed, label="0"];
27->31 [style = solid, label="end"];
}
