digraph {
13 [style = filled, label = "d1.add(1.0,1.1,\"Series 1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CategoryTableXYDataset d1 = new CategoryTableXYDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(d1.equals(d2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(d1.equals(d2))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(d1.equals(d2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(d1.equals(d2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "d1.setIntervalPositionFactor(0.33)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "d1.add(3.0,3.3,\"Series 1\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d2.add(3.0,3.3,\"Series 1\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "CategoryTableXYDataset d2 = (CategoryTableXYDataset)TestUtils.serialised(d1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(d1,d2)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(d1 != d2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(d1.equals(d2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CategoryTableXYDataset d2 = (CategoryTableXYDataset)d1.clone()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "CategoryTableXYDataset d2 = CloneUtils.clone(d1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "d1.add(2.0,2.2,\"Series 1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "d2.setIntervalPositionFactor(0.33)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
4->18 [style = dashed, label="0"];
5->8 [style = bold, label=""];
0->16 [style = bold, label=""];
15->2 [style = bold, label=""];
3->2 [style = solid, label="d2"];
9->18 [style = solid, label="d1"];
17->9 [style = bold, label=""];
20->18 [style = solid, label="d2"];
8->14 [style = bold, label=""];
3->14 [style = solid, label="d2"];
16->4 [style = solid, label="d2"];
3->12 [style = solid, label="d2"];
9->20 [style = solid, label="d1"];
3->4 [style = solid, label="d2"];
2->10 [style = bold, label=""];
16->7 [style = solid, label="d2"];
3->4 [style = bold, label=""];
1->9 [style = bold, label=""];
20->18 [style = bold, label=""];
6->5 [style = bold, label=""];
16->14 [style = solid, label="d2"];
16->2 [style = solid, label="d2"];
19->9 [style = bold, label=""];
9->4 [style = solid, label="d1"];
10->12 [style = bold, label=""];
3->20 [style = dashed, label="0"];
7->6 [style = bold, label=""];
16->12 [style = solid, label="d2"];
3->5 [style = solid, label="d2"];
16->5 [style = solid, label="d2"];
9->16 [style = solid, label="d1"];
0->20 [style = bold, label=""];
14->15 [style = bold, label=""];
16->4 [style = bold, label=""];
3->7 [style = solid, label="d2"];
4->11 [style = bold, label=""];
11->7 [style = bold, label=""];
3->16 [style = dashed, label="0"];
13->0 [style = bold, label=""];
9->13 [style = bold, label=""];
}
