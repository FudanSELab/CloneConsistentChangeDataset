digraph {
9 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final File cacheDir = temporaryFolder.newFolder()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "segmentLoader = new SegmentLoaderLocalCacheManager(indexIO,new SegmentLoaderConfig(){@Override public List<StorageLocationConfig> getLocations(){return Collections.singletonList(new StorageLocationConfig(cacheDir,null,null))}},jsonMapper)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "segmentDeepStorageDir = temporaryFolder.newFolder()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "EmittingLogger.registerEmitter(new NoopServiceEmitter())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "segmentLoader = new SegmentLoaderLocalCacheManager(indexIO,new SegmentLoaderConfig(){@Override public List<StorageLocationConfig> getLocations(){return Collections.singletonList(new StorageLocationConfig(segmentCacheDir,null,null))}},objectMapper)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "objectMapper = new DefaultObjectMapper().registerModule(new SimpleModule().registerSubtypes(new NamedType(,\"local\"),new NamedType(,\"test\"))).setInjectableValues(new Std().addValue(,segmentPuller))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "segmentCacheManager = new SegmentLocalCacheManager(new SegmentLoaderConfig(){@Override public List<StorageLocationConfig> getLocations(){return Collections.singletonList(new StorageLocationConfig(segmentCacheDir,null,null))}},objectMapper)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "segmentManager = new SegmentManager(new SegmentLocalCacheLoader(segmentCacheManager,indexIO,objectMapper))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "taskRunner = new TestTaskRunner()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "segmentCacheDir = temporaryFolder.newFolder()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "segmentPuller = new TestSegmentPuller()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "exec = Execs.multiThreaded(NUM_THREAD,\"SegmentManagerThreadSafetyTest-%d\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "appenderatorsManager = new TestAppenderatorsManager()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "segmentManager = new SegmentManager(segmentLoader)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "indexIO = new IndexIO(objectMapper,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->7 [style = solid, label="indexIO"];
2->1 [style = bold, label=""];
11->12 [style = solid, label="segmentCacheManager"];
3->7 [style = solid, label="segmentCacheDir"];
1->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
2->12 [style = solid, label="objectMapper"];
15->16 [style = solid, label="cacheDir"];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
0->12 [style = dashed, label="0"];
3->11 [style = solid, label="segmentCacheDir"];
15->16 [style = bold, label=""];
10->6 [style = bold, label=""];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
6->2 [style = bold, label=""];
1->12 [style = solid, label="indexIO"];
6->13 [style = dashed, label="0"];
12->4 [style = bold, label=""];
0->4 [style = bold, label=""];
3->8 [style = bold, label=""];
2->1 [style = solid, label="objectMapper"];
6->2 [style = solid, label="segmentPuller"];
16->14 [style = bold, label=""];
2->11 [style = solid, label="objectMapper"];
17->13 [style = bold, label=""];
7->0 [style = solid, label="segmentLoader"];
13->15 [style = bold, label=""];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
2->7 [style = solid, label="objectMapper"];
}
