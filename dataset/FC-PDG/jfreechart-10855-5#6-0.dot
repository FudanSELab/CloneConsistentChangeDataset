digraph {
0 [style = filled, label = "assertNotSame(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "XYSeriesCollection c2 = (XYSeriesCollection)c1.clone()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "VectorSeriesCollection c2 = (VectorSeriesCollection)TestUtils.serialised(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s1.add(1.0,1.1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "VectorSeries s1 = new VectorSeries(\"Series\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertSame(c1.getClass(),c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "XYSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(c1,c2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3->0 [style = solid, label="c2"];
11->4 [style = solid, label="c2"];
5->8 [style = bold, label=""];
2->0 [style = solid, label="c1"];
3->8 [style = solid, label="c2"];
9->11 [style = bold, label=""];
2->11 [style = solid, label="c1"];
15->9 [style = solid, label="s1"];
17->14 [style = solid, label="c1"];
17->16 [style = solid, label="c1"];
17->9 [style = bold, label=""];
3->16 [style = dashed, label="0"];
18->17 [style = bold, label=""];
16->14 [style = solid, label="c2"];
6->9 [style = solid, label="s1"];
1->18 [style = dashed, label="0"];
2->9 [style = bold, label=""];
7->4 [style = bold, label=""];
12->6 [style = bold, label=""];
2->17 [style = dashed, label="0"];
15->18 [style = bold, label=""];
10->6 [style = bold, label=""];
9->16 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
2->8 [style = solid, label="c1"];
6->1 [style = bold, label=""];
11->0 [style = solid, label="c2"];
11->0 [style = bold, label=""];
6->15 [style = dashed, label="0"];
3->4 [style = solid, label="c2"];
11->8 [style = solid, label="c2"];
9->3 [style = bold, label=""];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
3->11 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
