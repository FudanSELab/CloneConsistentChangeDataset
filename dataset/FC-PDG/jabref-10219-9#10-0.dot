digraph {
10 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(StandardField.NOTE))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getCiteKeyOptional())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "BibEntry fifth = bibEntries.get(4)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(StandardField.NUMBER))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(StandardField.DATE))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(StandardField.PUBLISHER))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(StandardField.AUTHOR))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testImportEntries0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(StandardField.AUTHOR))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(StandardField.EDITION))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "BibEntry fourth = bibEntries.get(3)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(StandardField.PAGES))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(StandardField.URL))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(StandardField.KEYWORDS))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(StandardField.DOI))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testImportEntries0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(StandardField.URL))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(StandardField.SERIES))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(StandardEntryType.Misc,second.getType())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(StandardField.EDITION))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "BibEntry third = bibEntries.get(2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(StandardField.KEYWORDS))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "BibEntry first = bibEntries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(StandardField.TITLE))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(StandardField.SCHOOL))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(StandardEntryType.Book,entry.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(StandardField.TITLE))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Path file = Path.of(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(StandardField.BOOKTITLE))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(StandardField.ADDRESS))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(StandardField.YEAR))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "BibEntry entry = bibEntries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getCitationKey())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(StandardField.YEAR))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "BibEntry second = bibEntries.get(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(StandardEntryType.Article,third.getType())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(StandardField.EDITOR))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(StandardField.ADDRESS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(1,bibEntries.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(StandardEntryType.MastersThesis,fifth.getType())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testImportEntriesBookExample['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Path file = Path.of(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(StandardField.PAGES))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(StandardField.JOURNAL))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(StandardEntryType.Misc,first.getType())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(StandardField.JOURNAL))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(StandardField.PUBLISHER))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(StandardField.ABSTRACT))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(StandardEntryType.Book,fourth.getType())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(StandardField.VOLUME))@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33->7 [style = bold, label=""];
49->42 [style = bold, label=""];
3->41 [style = dashed, label="0"];
0->16 [style = bold, label=""];
46->38 [style = bold, label=""];
42->43 [style = bold, label=""];
8->15 [style = bold, label=""];
28->10 [style = bold, label=""];
32->37 [style = bold, label=""];
24->2 [style = bold, label=""];
23->27 [style = bold, label=""];
5->20 [style = bold, label=""];
18->47 [style = bold, label=""];
0->37 [style = dashed, label="0"];
45->51 [style = bold, label=""];
4->38 [style = dashed, label="0"];
34->1 [style = bold, label=""];
34->50 [style = dashed, label="0"];
31->32 [style = bold, label=""];
32->0 [style = bold, label=""];
11->21 [style = bold, label=""];
15->51 [style = dashed, label="0"];
18->19 [style = bold, label=""];
19->47 [style = dashed, label="0"];
7->31 [style = bold, label=""];
29->23 [style = bold, label=""];
47->39 [style = bold, label=""];
51->49 [style = bold, label=""];
17->48 [style = dashed, label="0"];
12->6 [style = bold, label=""];
35->14 [style = bold, label=""];
30->29 [style = bold, label=""];
9->35 [style = bold, label=""];
43->46 [style = bold, label=""];
11->49 [style = dashed, label="0"];
21->12 [style = bold, label=""];
12->43 [style = dashed, label="0"];
1->40 [style = dashed, label="0"];
38->50 [style = bold, label=""];
13->39 [style = dashed, label="0"];
6->46 [style = dashed, label="0"];
6->4 [style = bold, label=""];
19->13 [style = bold, label=""];
13->3 [style = bold, label=""];
15->11 [style = bold, label=""];
16->28 [style = bold, label=""];
1->24 [style = bold, label=""];
44->48 [style = bold, label=""];
3->8 [style = bold, label=""];
17->18 [style = bold, label=""];
50->40 [style = bold, label=""];
25->26 [style = bold, label=""];
22->17 [style = bold, label=""];
8->45 [style = dashed, label="0"];
39->41 [style = bold, label=""];
41->45 [style = bold, label=""];
10->9 [style = bold, label=""];
36->17 [style = bold, label=""];
48->18 [style = bold, label=""];
2->30 [style = bold, label=""];
26->33 [style = bold, label=""];
27->25 [style = bold, label=""];
37->16 [style = bold, label=""];
4->34 [style = bold, label=""];
14->5 [style = bold, label=""];
}
