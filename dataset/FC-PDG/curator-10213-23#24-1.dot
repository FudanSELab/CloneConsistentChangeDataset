digraph {
30 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Compatibility.injectSessionExpiration(curator.getZookeeperClient().getZooKeeper())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "node.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Trigger deletionTrigger = Trigger.deletedOrSetData()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "KillSession2.kill(curator.getZookeeperClient().getZooKeeper())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "KillSession2.kill(curator.getZookeeperClient().getZooKeeper())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Trigger deletedTrigger = Trigger.deletedOrSetData()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < 5@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "node.debugWaitMsForBackgroundBeforeClose.set(timing.forSleepingABit().milliseconds())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNodeExists(observer,path)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertNotNull(stat,\"node should exist: \" + path)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "String path = node.getActualPath()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i++@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
0->3 [style = bold, label=""];
23->31 [style = bold, label=""];
16->0 [style = bold, label=""];
15->13 [style = bold, label=""];
24->32 [style = dotted, label="true"];
30->17 [style = bold, label=""];
21->0 [style = bold, label=""];
28->20 [style = bold, label=""];
24->25 [style = dotted, label="true"];
4->8 [style = solid, label="node"];
25->30 [style = bold, label=""];
1->15 [style = bold, label=""];
24->29 [style = dotted, label="true"];
24->17 [style = dotted, label="true"];
24->32 [style = bold, label=""];
24->31 [style = dotted, label="true"];
27->31 [style = solid, label="path"];
31->29 [style = bold, label=""];
24->30 [style = dotted, label="true"];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
26->19 [style = bold, label=""];
2->10 [style = bold, label=""];
3->26 [style = solid, label="observer"];
24->18 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
13->11 [style = bold, label=""];
17->23 [style = bold, label=""];
28->20 [style = solid, label="stat"];
24->28 [style = dotted, label="true"];
0->4 [style = solid, label="curator"];
19->24 [style = bold, label=""];
4->18 [style = solid, label="node"];
27->26 [style = solid, label="path"];
20->8 [style = bold, label=""];
19->24 [style = solid, label="i"];
10->5 [style = bold, label=""];
24->23 [style = dotted, label="true"];
5->12 [style = bold, label=""];
24->22 [style = dotted, label="true"];
24->20 [style = dotted, label="true"];
3->12 [style = solid, label="observer"];
12->14 [style = bold, label=""];
27->20 [style = solid, label="path"];
12->27 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
11->8 [style = bold, label=""];
14->9 [style = bold, label=""];
5->27 [style = bold, label=""];
22->24 [style = bold, label=""];
29->22 [style = bold, label=""];
24->8 [style = dotted, label="true"];
9->1 [style = bold, label=""];
32->28 [style = bold, label=""];
8->25 [style = bold, label=""];
31->29 [style = solid, label="stat"];
27->28 [style = solid, label="path"];
19->22 [style = solid, label="i"];
22->24 [style = solid, label="i"];
13->30 [style = dashed, label="0"];
27->26 [style = bold, label=""];
}
