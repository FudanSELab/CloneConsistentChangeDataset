digraph {
9 [style = filled, label = "showDetailsWhenShowDetailsIsWhenAuthorizedAndUserHasRightAuthorityReturnsTrue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "given(principal.getAuthorities()).willAnswer(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "AutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup(null,this.statusAggregator,this.httpCodeStatusMapper,null,Show.WHEN_AUTHORIZED,Arrays.asList(\"admin\",\"root\",\"bossmode\"),null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertThat(group.showDetails(this.securityContext)).isTrue()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "showDetailsWhenShowDetailsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "given(this.securityContext.getPrincipal()).willReturn(this.principal)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AutoConfiguredHealthEndpointGroup group = new AutoConfiguredHealthEndpointGroup(null,this.statusAggregator,this.httpCodeStatusMapper,null,Show.WHEN_AUTHORIZED,Arrays.asList(\"admin\",\"root\",\"bossmode\"))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "given(this.securityContext.getPrincipal()).willReturn(principal)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Authentication principal = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "showDetailsWhenShowDetailsIsWhenAuthorizedAndUserIsNotInRoleReturnsFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(group.showDetails(this.securityContext)).isFalse()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
8->6 [style = solid, label="principal"];
8->10 [style = bold, label=""];
2->4 [style = dashed, label="0"];
4->1 [style = bold, label=""];
6->7 [style = bold, label=""];
9->2 [style = bold, label=""];
10->6 [style = bold, label=""];
2->1 [style = bold, label=""];
5->4 [style = bold, label=""];
2->8 [style = bold, label=""];
0->2 [style = bold, label=""];
}
