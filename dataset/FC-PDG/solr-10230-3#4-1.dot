digraph {
0 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the first value, expecting a list of numbers\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "doWork['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Array2DRowRealMatrix matrix2 = new Array2DRowRealMatrix(data2)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "!(first instanceof List)@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Object first@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Object second@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "first instanceof List && second instanceof List@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "List<Number> numbers = new ArrayList()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return numbers@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "double d@@@12@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "return numbers@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "double(((( data2 = ((Matrix)second).getData()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "double(( result = MathArrays.ebeAdd(((List)first).stream().mapToDouble(null).toArray(),((List)second).stream().mapToDouble(null).toArray())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Object second@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the second value, expecting a list of numbers\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "numbers.add(d)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw new IOException(\"Parameters for ebeAdd must either be two numeric arrays or two matrices. \")@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "null == second@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Object second@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RealMatrix matrix3 = matrix1.add(matrix2)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "!(second instanceof List)@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "null == first@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "doWork['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "double(( result = MathArrays.ebeSubtract(((List)first).stream().mapToDouble(null).toArray(),((List)second).stream().mapToDouble(null).toArray())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "numbers.add(d)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return new Matrix(matrix3.getData())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "doWork['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "first instanceof Matrix && second instanceof Matrix@@@17@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "List<Number> numbers = new ArrayList()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17->20 [style = dotted, label="true"];
13->6 [style = dotted, label="true"];
4->9 [style = bold, label=""];
17->26 [style = dotted, label="true"];
1->4 [style = bold, label=""];
23->9 [style = solid, label="second"];
15->2 [style = bold, label=""];
7->11 [style = bold, label=""];
29->4 [style = bold, label=""];
3->17 [style = dashed, label="0"];
7->31 [style = dashed, label="0"];
0->13 [style = bold, label=""];
15->25 [style = bold, label=""];
12->4 [style = solid, label="first"];
12->15 [style = solid, label="first"];
15->2 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
14->22 [style = bold, label=""];
28->7 [style = bold, label=""];
22->21 [style = bold, label=""];
4->8 [style = dotted, label="true"];
27->23 [style = dotted, label="true"];
5->9 [style = solid, label="second"];
10->3 [style = bold, label=""];
15->22 [style = dotted, label="true"];
22->21 [style = solid, label="matrix2"];
9->17 [style = bold, label=""];
10->17 [style = bold, label=""];
29->12 [style = dotted, label="true"];
9->10 [style = bold, label=""];
15->21 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
27->12 [style = dotted, label="true"];
23->15 [style = solid, label="second"];
11->14 [style = solid, label="numbers"];
17->15 [style = dotted, label="false"];
11->2 [style = bold, label=""];
3->0 [style = bold, label=""];
21->18 [style = bold, label=""];
31->11 [style = bold, label=""];
12->9 [style = solid, label="second"];
27->4 [style = bold, label=""];
6->31 [style = bold, label=""];
2->14 [style = solid, label="data1"];
15->25 [style = dotted, label="false"];
13->7 [style = bold, label=""];
1->12 [style = dotted, label="true"];
2->14 [style = bold, label=""];
17->19 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
17->28 [style = dotted, label="true"];
29->30 [style = dotted, label="true"];
8->9 [style = bold, label=""];
12->17 [style = solid, label="first"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
3->13 [style = bold, label=""];
17->15 [style = bold, label=""];
17->7 [style = dotted, label="true"];
23->17 [style = solid, label="second"];
16->22 [style = solid, label="data2"];
16->14 [style = bold, label=""];
19->28 [style = bold, label=""];
13->31 [style = bold, label=""];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
9->10 [style = dotted, label="true"];
19->7 [style = solid, label="numbers"];
1->5 [style = dotted, label="true"];
17->24 [style = dotted, label="true"];
17->20 [style = bold, label=""];
30->4 [style = solid, label="first"];
2->16 [style = bold, label=""];
}
