digraph {
9 [style = filled, label = "with.query(\"select `X`.`DID2` from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X (DID2)\").returnsUnordered(\"DID2=1\",\"DID2=2\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testUnquotedCaseSensitiveSubQueryMySql['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "with.query(\"select X.DID2 from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X (DID2)\").returnsUnordered(\"DID2=1\",\"DID2=2\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "with.query(\"select `x`.`DID` from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X \").returnsUnordered(\"DID=1\",\"DID=2\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "with.query(\"select DID from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) \").returnsUnordered(\"DID=1\",\"DID=2\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "with.query(\"select `DID` from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) \").returnsUnordered(\"DID=1\",\"DID=2\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testQuotedCaseSensitiveSubQueryMySql['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testUnquotedCaseSensitiveSubQueryMySql['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "with.query(\"select X.DID from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X \").returnsUnordered(\"DID=1\",\"DID=2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "with.query(\"select X.DID2 from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X (DID2)\").returnsUnordered(\"DID2=1\",\"DID2=2\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "with.query(\"select `X`.`DID2` from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X (DID2)\").returnsUnordered(\"DID2=1\",\"DID2=2\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "with.query(\"select `X`.`DID` from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X \").returnsUnordered(\"DID=1\",\"DID=2\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "with.query(\"select x.DID from (select deptid as did FROM\" + \" ( values (1), (2) ) as T1(deptid) ) X \").returnsUnordered(\"DID=1\",\"DID=2\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final CalciteAssert.AssertThat with = CalciteAssert.that().with(Lex.MYSQL)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
5->13 [style = dashed, label="0"];
0->11 [style = bold, label=""];
10->0 [style = bold, label=""];
7->0 [style = bold, label=""];
6->0 [style = bold, label=""];
13->12 [style = bold, label=""];
3->12 [style = dashed, label="0"];
3->2 [style = bold, label=""];
12->9 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
2->9 [style = dashed, label="0"];
11->13 [style = bold, label=""];
4->8 [style = dashed, label="0"];
}
