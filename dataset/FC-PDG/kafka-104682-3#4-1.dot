digraph {
5 [style = filled, label = "statusListener.onStartup(taskId)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(workerTask)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){thread.start()return null}})@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "workerTask.stop()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "workerTask.stop()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "workerTask.execute()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expectLastCall()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "workerTask.run()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TaskStatus.Listener statusListener = EasyMock.createMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ClassLoader loader = EasyMock.createMock()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "workerTask.awaitStop(1000L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,).withArgs(taskId,statusListener,TargetState.STARTED).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerTask.execute()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "workerTask.close()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final CountDownLatch stopped = new CountDownLatch(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "stopped.countDown()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "statusListener.onShutdown(taskId)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "statusListener.onStartup(taskId)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "standardStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectLastCall()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cancelBeforeStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "replay(workerTask)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectLastCall()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "standardStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "workerTask.close()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final Thread thread = new Thread(){@Override public void run(){try {stopped.await()}catch (Exception e) }}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "workerTask.cancel()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "verify(workerTask)@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "thread.join()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expectLastCall()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->31 [style = dashed, label="0"];
7->32 [style = bold, label=""];
16->13 [style = bold, label=""];
27->1 [style = bold, label=""];
28->36 [style = bold, label=""];
1->4 [style = solid, label="taskId"];
25->33 [style = bold, label=""];
7->10 [style = bold, label=""];
1->8 [style = solid, label="taskId"];
2->6 [style = bold, label=""];
0->17 [style = bold, label=""];
34->5 [style = bold, label=""];
19->29 [style = bold, label=""];
17->29 [style = solid, label="workerTask"];
2->34 [style = bold, label=""];
23->11 [style = solid, label="workerTask"];
29->25 [style = bold, label=""];
17->5 [style = solid, label="workerTask"];
1->0 [style = bold, label=""];
6->34 [style = dashed, label="0"];
23->21 [style = solid, label="workerTask"];
12->1 [style = bold, label=""];
1->15 [style = solid, label="taskId"];
32->2 [style = bold, label=""];
1->18 [style = solid, label="taskId"];
6->15 [style = bold, label=""];
33->26 [style = bold, label=""];
1->5 [style = solid, label="taskId"];
17->7 [style = bold, label=""];
26->31 [style = bold, label=""];
36->24 [style = bold, label=""];
19->14 [style = bold, label=""];
20->23 [style = bold, label=""];
8->5 [style = bold, label=""];
3->19 [style = bold, label=""];
10->32 [style = dashed, label="0"];
11->3 [style = bold, label=""];
30->7 [style = bold, label=""];
15->4 [style = bold, label=""];
9->21 [style = bold, label=""];
23->10 [style = bold, label=""];
14->9 [style = bold, label=""];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
18->8 [style = bold, label=""];
0->20 [style = bold, label=""];
22->1 [style = bold, label=""];
31->28 [style = bold, label=""];
35->30 [style = bold, label=""];
4->16 [style = bold, label=""];
13->18 [style = bold, label=""];
17->24 [style = solid, label="workerTask"];
17->35 [style = bold, label=""];
17->9 [style = solid, label="workerTask"];
}
