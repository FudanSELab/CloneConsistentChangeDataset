digraph {
11 [style = filled, label = "tester.checkFails(\"^floor(time '12:34:56')^\",\"(?s)Cannot apply 'FLOOR' to arguments .*\",false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "tester.checkFails(\"^ceil(timestamp '2015-02-19 12:34:56.78' to nanosecond)^\",\"(?s)Encountered \"nanosecond\" at .*\",false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tester.checkFails(\"^ceil('abcde' to minute)^\",\"(?s)Cannot apply 'CEIL' to arguments .*\",false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "tester.checkScalar(\"ceiling(timestamp '2015-02-19 12:34:56' to month)\",\"2015-03-01 00:00:00\",\"TIMESTAMP(0) NOT NULL\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testFloorFuncDateTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tester.checkScalar(\"ceiling(date '2015-02-19' to month)\",\"2015-03-01\",\"DATE NOT NULL\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tester.checkScalar(\"floor(timestamp '2015-02-19 12:34:56' to month)\",\"2015-02-01 00:00:00\",\"TIMESTAMP(0) NOT NULL\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "tester.checkNull(\"ceiling(cast(null as timestamp) to month)\")@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkNull(\"floor(cast(null as date) to month)\")@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkFails(\"^floor(timestamp '2015-02-19 12:34:56.78' to microsecond)^\",\"(?s)Encountered \"microsecond\" at .*\",false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkFails(\"^ceil(123.45 to minute)^\",\"(?s)Cannot apply 'CEIL' to arguments .*\",false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "tester.checkType(\"floor('12:34:56')\",\"DECIMAL(19, 0) NOT NULL\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkScalar(\"ceil(timestamp '2015-02-19 12:34:56.78' to second)\",\"2015-02-19 12:34:57\",\"TIMESTAMP(2) NOT NULL\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "tester.checkNull(\"ceil(cast(null as date) to month)\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testCeilFuncDateTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "strictTester.checkFails(\"^ceil('12:34:56')^\",\"Cannot apply 'CEIL' to arguments of type 'CEIL\(<CHAR\(8\)>\)'\. Supported form\(s\): 'CEIL\(<NUMERIC>\)'\" + \"'CEIL\(<DATETIME_INTERVAL>\)'\" + \"'CEIL\(<DATE> TO <TIME_UNIT>\)'\" + \"'CEIL\(<TIME> TO <TIME_UNIT>\)'\" + \"'CEIL\(<TIMESTAMP> TO <TIME_UNIT>\)'\",false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tester.checkScalar(\"floor(time '12:34:56' to minute)\",\"12:34:00\",\"TIME(0) NOT NULL\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "tester.checkScalar(\"ceil(date '2015-02-19' to year)\",\"2016-01-01\",\"DATE NOT NULL\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "tester.checkScalar(\"ceil(time '12:34:56' to minute)\",\"12:35:00\",\"TIME(0) NOT NULL\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "tester.checkScalar(\"ceil(timestamp '2015-02-19 12:34:56' to month)\",\"2015-03-01 00:00:00\",\"TIMESTAMP(0) NOT NULL\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "strictTester.checkFails(\"^floor('12:34:56')^\",\"Cannot apply 'FLOOR' to arguments of type 'FLOOR\(<CHAR\(8\)>\)'\. Supported form\(s\): 'FLOOR\(<NUMERIC>\)'\" + \"'FLOOR\(<DATETIME_INTERVAL>\)'\" + \"'FLOOR\(<DATE> TO <TIME_UNIT>\)'\" + \"'FLOOR\(<TIME> TO <TIME_UNIT>\)'\" + \"'FLOOR\(<TIMESTAMP> TO <TIME_UNIT>\)'\",false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tester.checkScalar(\"floor(timestamp '2015-02-19 12:34:56' to year)\",\"2015-01-01 00:00:00\",\"TIMESTAMP(0) NOT NULL\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkFails(\"^floor('abcde' to minute)^\",\"(?s)Cannot apply 'FLOOR' to arguments .*\",false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "tester.checkFails(\"^floor(timestamp '2015-02-19 12:34:56.78' to nanosecond)^\",\"(?s)Encountered \"nanosecond\" at .*\",false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "tester.checkScalar(\"ceil(timestamp '2015-02-19 12:34:56.00' to second)\",\"2015-02-19 12:34:56\",\"TIMESTAMP(2) NOT NULL\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "tester.checkType(\"ceil('12:34:56')\",\"DECIMAL(19, 0) NOT NULL\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "tester.checkFails(\"^ceil(time '12:34:56')^\",\"(?s)Cannot apply 'CEIL' to arguments .*\",false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "tester.checkScalar(\"ceil(time '12:59:56' to minute)\",\"13:00:00\",\"TIME(0) NOT NULL\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "tester.checkScalar(\"floor(timestamp '2015-02-19 12:34:56.78' to second)\",\"2015-02-19 12:34:56\",\"TIMESTAMP(2) NOT NULL\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tester.checkFails(\"^ceil(timestamp '2015-02-19 12:34:56.78' to microsecond)^\",\"(?s)Encountered \"microsecond\" at .*\",false)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkFails(\"^floor(123.45 to minute)^\",\"(?s)Cannot apply 'FLOOR' to arguments .*\",false)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tester.checkNull(\"floor(cast(null as timestamp) to month)\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkScalar(\"floor(date '2015-02-19' to year)\",\"2015-01-01\",\"DATE NOT NULL\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "tester.checkScalar(\"ceil(date '2015-02-19' to month)\",\"2015-03-01\",\"DATE NOT NULL\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "tester.checkNull(\"ceil(cast(null as timestamp) to month)\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tester.checkScalar(\"ceil(timestamp '2015-02-19 12:34:56' to year)\",\"2016-01-01 00:00:00\",\"TIMESTAMP(0) NOT NULL\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "tester.checkScalar(\"ceil(timestamp '2015-02-19 12:34:56' to minute)\",\"2015-02-19 12:35:00\",\"TIMESTAMP(0) NOT NULL\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tester.checkScalar(\"floor(timestamp '2015-02-19 12:34:56' to minute)\",\"2015-02-19 12:34:00\",\"TIMESTAMP(0) NOT NULL\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.checkScalar(\"floor(date '2015-02-19' to month)\",\"2015-02-01\",\"DATE NOT NULL\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testFloorFuncDateTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28->37 [style = bold, label=""];
10->15 [style = bold, label=""];
5->9 [style = bold, label=""];
16->8 [style = bold, label=""];
20->29 [style = bold, label=""];
0->12 [style = bold, label=""];
27->28 [style = bold, label=""];
6->32 [style = dashed, label="0"];
34->33 [style = bold, label=""];
30->26 [style = bold, label=""];
18->19 [style = bold, label=""];
37->20 [style = bold, label=""];
22->21 [style = bold, label=""];
4->31 [style = dashed, label="0"];
2->27 [style = dashed, label="0"];
10->28 [style = dashed, label="0"];
31->18 [style = bold, label=""];
8->6 [style = bold, label=""];
13->19 [style = dashed, label="0"];
8->21 [style = dashed, label="0"];
2->10 [style = bold, label=""];
9->16 [style = bold, label=""];
7->3 [style = bold, label=""];
15->5 [style = bold, label=""];
14->1 [style = bold, label=""];
5->20 [style = dashed, label="0"];
25->31 [style = bold, label=""];
23->24 [style = bold, label=""];
17->12 [style = bold, label=""];
38->30 [style = bold, label=""];
14->23 [style = dashed, label="0"];
3->34 [style = dashed, label="0"];
9->29 [style = dashed, label="0"];
12->4 [style = bold, label=""];
1->24 [style = dashed, label="0"];
11->18 [style = dashed, label="0"];
19->23 [style = bold, label=""];
11->13 [style = bold, label=""];
21->32 [style = bold, label=""];
26->35 [style = bold, label=""];
32->36 [style = bold, label=""];
33->38 [style = bold, label=""];
1->2 [style = bold, label=""];
39->25 [style = bold, label=""];
29->22 [style = bold, label=""];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
13->14 [style = bold, label=""];
24->27 [style = bold, label=""];
7->36 [style = dashed, label="0"];
36->34 [style = bold, label=""];
16->22 [style = dashed, label="0"];
}
