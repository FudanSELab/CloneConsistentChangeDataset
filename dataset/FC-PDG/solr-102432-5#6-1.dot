digraph {
13 [style = filled, label = "HashMap<String,Object> propMap = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "markAllShardsAsActive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "markAllShardsAsConstruction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ccc.getDistributedClusterStateUpdater().isDistributedStateUpdate()@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "propMap.put(ZkStateReader.COLLECTION_PROP,restoreCollection.getName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ocmh.overseer.offerStateUpdate(Utils.toJSON(new ZkNodeProps(propMap)))@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "propMap.put(shard.getName(),Slice.State.CONSTRUCTION.toString())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ocmh.getDistributedClusterStateUpdater().isDistributedStateUpdate()@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ocmh.getDistributedClusterStateUpdater().doSingleStateUpdate(DistributedClusterStateUpdater.MutatingCommand.SliceUpdateShardState,new ZkNodeProps(propMap),ocmh.cloudManager,ocmh.zkStateReader)@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ccc.getDistributedClusterStateUpdater().doSingleStateUpdate(DistributedClusterStateUpdater.MutatingCommand.SliceUpdateShardState,new ZkNodeProps(propMap),ccc.getSolrCloudManager(),ccc.getZkStateReader())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "DocCollection restoreCollection@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "propMap.put(ZkStateReader.COLLECTION_PROP,restoreCollection.getName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "propMap.put(Overseer.QUEUE_OPERATION,OverseerAction.UPDATESHARDSTATE.toLower())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "propMap.put(shard.getName(),Slice.State.ACTIVE.toString())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<String,Object> propMap = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "markAllShardsAsConstruction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "DocCollection restoreCollection@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ccc.offerStateUpdate(Utils.toJSON(new ZkNodeProps(propMap)))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->4 [style = dotted, label="false"];
5->3 [style = bold, label=""];
12->11 [style = dotted, label="false"];
1->8 [style = bold, label=""];
15->14 [style = bold, label=""];
0->6 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->12 [style = bold, label=""];
12->11 [style = bold, label=""];
5->15 [style = bold, label=""];
9->8 [style = bold, label=""];
8->2 [style = solid, label="propMap"];
3->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
8->13 [style = dashed, label="0"];
6->2 [style = bold, label=""];
1->7 [style = dotted, label="true"];
17->16 [style = dotted, label="true"];
6->12 [style = dashed, label="0"];
6->4 [style = bold, label=""];
12->10 [style = bold, label=""];
8->4 [style = solid, label="propMap"];
6->2 [style = dotted, label="true"];
8->11 [style = solid, label="propMap"];
8->5 [style = bold, label=""];
12->10 [style = dotted, label="true"];
13->4 [style = solid, label="propMap"];
13->5 [style = bold, label=""];
17->13 [style = bold, label=""];
8->10 [style = solid, label="propMap"];
9->7 [style = dotted, label="true"];
4->11 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
13->2 [style = solid, label="propMap"];
14->6 [style = bold, label=""];
}
