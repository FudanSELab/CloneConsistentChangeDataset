digraph {
3 [style = filled, label = "assertEquals(m1,m2)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ValueMarker m1 = new ValueMarker(25.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CategoryMarker m2 = (CategoryMarker)TestUtils.serialised(m1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CategoryMarker m2 = TestUtils.serialised(m1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertTrue(m1 != m2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(m1.equals(m2))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ValueMarker m2 = (ValueMarker)m1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->3 [style = bold, label=""];
2->3 [style = solid, label="m1"];
0->3 [style = solid, label="m2"];
2->4 [style = solid, label="m1"];
0->4 [style = dashed, label="0"];
8->11 [style = solid, label="m2"];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
8->9 [style = solid, label="m2"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
2->0 [style = solid, label="m1"];
11->10 [style = bold, label=""];
7->11 [style = solid, label="m1"];
0->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
4->3 [style = solid, label="m2"];
6->7 [style = bold, label=""];
8->11 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
