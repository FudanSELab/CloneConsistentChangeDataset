digraph {
5 [style = filled, label = "consumerConfigMustContainStreamPartitionAssignorConfig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "props.put(StreamsConfig.adminClientPrefix(StreamsConfig.RETRIES_CONFIG),5)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Map<String,Object> returnedProps = streamsConfig.getMainConsumerConfigs(groupId,clientId)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "props.put(StreamsConfig.APPLICATION_SERVER_CONFIG,\"dummy:host\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "props.put(ConsumerConfig.METRICS_NUM_SAMPLES_CONFIG,1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "props.put(StreamsConfig.REPLICATION_FACTOR_CONFIG,42)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String groupId = \"example-application\"@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "props.put(StreamsConfig.WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_CONFIG,7L)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"earliest\",consumerConfigs.get(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(null,returnedProps.get(StreamsConfig.RETRIES_CONFIG))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "props.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG,\"earliest\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "shouldBeSupportNonPrefixedConsumerConfigs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "props.put(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG,1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(100,returnedProps.get(StreamsConfig.topicPrefix(TopicConfig.SEGMENT_BYTES_CONFIG)))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,returnedProps.get(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"dummy:host\",returnedProps.get(StreamsConfig.APPLICATION_SERVER_CONFIG))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Map<String,Object> consumerConfigs = streamsConfig.getMainConsumerConfigs(\"groupId\",\"clientId\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(5,returnedProps.get(StreamsConfig.adminClientPrefix(StreamsConfig.RETRIES_CONFIG)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "props.put(StreamsConfig.RETRIES_CONFIG,10)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final StreamsConfig streamsConfig = new StreamsConfig(props)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(7L,returnedProps.get(StreamsConfig.WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_CONFIG))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(42,returnedProps.get(StreamsConfig.REPLICATION_FACTOR_CONFIG))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,consumerConfigs.get(ConsumerConfig.METRICS_NUM_SAMPLES_CONFIG))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String clientId = \"client\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "props.put(StreamsConfig.topicPrefix(TopicConfig.SEGMENT_BYTES_CONFIG),100)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final StreamsConfig streamsConfig = new StreamsConfig(props)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(.getName(),returnedProps.get(ConsumerConfig.PARTITION_ASSIGNMENT_STRATEGY_CONFIG))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNull(returnedProps.get(StreamsConfig.RETRIES_CONFIG))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "consumerConfigMustContainStreamPartitionAssignorConfig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10->20 [style = bold, label=""];
16->11 [style = bold, label=""];
2->20 [style = dashed, label="0"];
0->6 [style = bold, label=""];
6->18 [style = bold, label=""];
2->3 [style = bold, label=""];
15->24 [style = dashed, label="0"];
4->19 [style = bold, label=""];
20->3 [style = bold, label=""];
3->12 [style = bold, label=""];
13->1 [style = bold, label=""];
1->17 [style = bold, label=""];
19->16 [style = bold, label=""];
26->27 [style = bold, label=""];
6->18 [style = solid, label="clientId"];
17->0 [style = bold, label=""];
18->4 [style = bold, label=""];
11->10 [style = bold, label=""];
24->25 [style = bold, label=""];
25->26 [style = bold, label=""];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
21->7 [style = bold, label=""];
7->15 [style = bold, label=""];
5->7 [style = bold, label=""];
10->2 [style = bold, label=""];
27->23 [style = bold, label=""];
0->18 [style = solid, label="groupId"];
14->13 [style = bold, label=""];
22->24 [style = bold, label=""];
15->8 [style = bold, label=""];
28->22 [style = bold, label=""];
}
