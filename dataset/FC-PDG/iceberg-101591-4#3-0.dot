digraph {
6 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(hmsTableLocation).length)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "org.apache.hadoop.hive.metastore.api.Table hmsTable = shell.metastore().clientPool().run(null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testTables.loadTable(identifier)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(PartitionSpec.unpartitioned(),icebergTable.spec())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(BaseMetastoreTableOperations.ICEBERG_TABLE_TYPE_VALUE.toUpperCase(),hmsTable.getParameters().get(BaseMetastoreTableOperations.TABLE_TYPE_PROP))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Map<String,String> hmsParams = hmsTable.getParameters()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(hmsTableLocation).length)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "expectedIcebergProperties.put(\"dummy\",\"test\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "!Catalogs.hiveCatalog(shell.getHiveConf())@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Path hmsTableLocation = new Path(hmsTable.getSd().getLocation())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "hmsTable = shell.metastore().clientPool().run(null)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shell.executeStatement(\"CREATE EXTERNAL TABLE customers \" + \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" + testTables.locationForCreateTableSQL(identifier) + \"TBLPROPERTIES ('\" + InputFormatConfig.TABLE_SCHEMA + \"'='\" + SchemaParser.toJson(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA) + \"', \" + \"'\" + InputFormatConfig.EXTERNAL_TABLE_PURGE + \"'='FALSE')\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AssertHelpers.assertThrows(\"should throw exception\",,\"Table does not exist\",null)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "expectedIcebergProperties.put(TableProperties.ENGINE_HIVE_ENABLED,\"true\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testCreateDropTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Assert.assertEquals(\"test\",hmsParams.get(\"dummy\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "FileSystem fs = Util.getFs(hmsTableLocation,shell.getHiveConf())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testDeleteBackingTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Catalogs.hiveCatalog(shell.getHiveConf())@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "org.apache.hadoop.hive.metastore.api.Table hmsTable = shell.metastore().getTable(\"default\",\"customers\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(.getName(),hmsTable.getSd().getSerdeInfo().getSerializationLib())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertEquals(.getName(),hmsTable.getParameters().get(hive_metastoreConstants.META_TABLE_STORAGE))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "fs.exists(hmsTableLocation)@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Path hmsTableLocation = new Path(hmsTable.getSd().getLocation())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Map<String,String> expectedIcebergProperties = new HashMap<>(2)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(6,hmsParams.size())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "AssertHelpers.assertThrows(\"should throw exception\",,\"Table does not exist\",null)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(expectedIcebergProperties,icebergTable.properties())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "FileSystem fs = Util.getFs(hmsTableLocation,shell.getHiveConf())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testDeleteBackingTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "Assert.assertEquals(0,fs.listStatus(new Path(hmsTableLocation,\"metadata\")).length)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "AssertHelpers.assertThrows(\"should throw exception\",,\"Table does not exist\",null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(Collections.singletonMap(\"dummy\",\"test\"),icebergTable.properties())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "hmsParams.remove(BaseMetastoreTableOperations.METADATA_LOCATION_PROP)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(.getName(),hmsTable.getSd().getInputFormat())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(\"TRUE\",hmsParams.get(InputFormatConfig.EXTERNAL_TABLE_PURGE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "org.apache.hadoop.hive.metastore.api.Table hmsTable = shell.metastore().clientPool().run(null)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(.getName(),hmsTable.getSd().getOutputFormat())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(new Path(hmsTableLocation,\"metadata\")).length)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(\"TRUE\",hmsParams.get(\"EXTERNAL\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "!Catalogs.hiveCatalog(shell.getHiveConf())@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "IGNORED_PARAMS.forEach(null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertNotNull(hmsParams.get(hive_metastoreConstants.DDL_TIME))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TableIdentifier identifier = TableIdentifier.of(\"default\",\"customers\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA.asStruct(),icebergTable.schema().asStruct())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertTrue(hmsParams.get(BaseMetastoreTableOperations.METADATA_LOCATION_PROP).startsWith(icebergTable.location()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "org.apache.iceberg.Table icebergTable = testTables.loadTable(identifier)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "shell.executeStatement(\"CREATE EXTERNAL TABLE customers \" + \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" + testTables.locationForCreateTableSQL(identifier) + \"TBLPROPERTIES ('\" + InputFormatConfig.TABLE_SCHEMA + \"'='\" + SchemaParser.toJson(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA) + \"', \" + \"'\" + InputFormatConfig.PARTITION_SPEC + \"'='\" + PartitionSpecParser.toJson(PartitionSpec.unpartitioned()) + \"', \" + \"'dummy'='test')\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
29->15 [style = bold, label=""];
3->40 [style = dashed, label="0"];
12->5 [style = bold, label=""];
10->31 [style = solid, label="identifier"];
27->37 [style = dotted, label="false"];
15->25 [style = bold, label=""];
9->5 [style = solid, label="hmsTableLocation"];
27->28 [style = bold, label=""];
41->40 [style = solid, label="hmsTableLocation"];
10->0 [style = solid, label="identifier"];
9->3 [style = solid, label="hmsTableLocation"];
48->35 [style = bold, label=""];
1->6 [style = dotted, label="false"];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
1->13 [style = bold, label=""];
30->29 [style = bold, label=""];
26->51 [style = bold, label=""];
10->48 [style = solid, label="identifier"];
17->38 [style = bold, label=""];
27->20 [style = dotted, label="false"];
38->30 [style = bold, label=""];
18->22 [style = bold, label=""];
1->12 [style = dotted, label="false"];
43->24 [style = bold, label=""];
31->48 [style = bold, label=""];
34->17 [style = bold, label=""];
27->46 [style = dotted, label="false"];
20->37 [style = bold, label=""];
1->5 [style = dotted, label="false"];
27->19 [style = bold, label=""];
8->4 [style = bold, label=""];
1->13 [style = dotted, label="false"];
46->40 [style = dotted, label="true"];
22->46 [style = bold, label=""];
10->31 [style = bold, label=""];
1->7 [style = dotted, label="false"];
27->50 [style = dotted, label="false"];
1->9 [style = dotted, label="false"];
14->10 [style = bold, label=""];
1->4 [style = dotted, label="true"];
27->21 [style = dotted, label="true"];
41->46 [style = solid, label="hmsTableLocation"];
32->26 [style = bold, label=""];
1->11 [style = bold, label=""];
25->27 [style = bold, label=""];
9->6 [style = solid, label="hmsTableLocation"];
5->6 [style = bold, label=""];
1->11 [style = dotted, label="false"];
10->0 [style = bold, label=""];
1->8 [style = dotted, label="true"];
46->44 [style = bold, label=""];
1->8 [style = bold, label=""];
27->47 [style = dotted, label="false"];
45->23 [style = bold, label=""];
27->18 [style = dotted, label="false"];
37->41 [style = bold, label=""];
35->49 [style = bold, label=""];
19->50 [style = bold, label=""];
27->22 [style = dotted, label="false"];
2->10 [style = bold, label=""];
41->44 [style = solid, label="hmsTableLocation"];
24->45 [style = bold, label=""];
23->32 [style = dotted, label="true"];
27->42 [style = dotted, label="false"];
23->39 [style = dotted, label="true"];
51->36 [style = bold, label=""];
0->1 [style = bold, label=""];
39->32 [style = bold, label=""];
27->41 [style = dotted, label="false"];
23->39 [style = bold, label=""];
10->4 [style = solid, label="identifier"];
13->9 [style = bold, label=""];
19->20 [style = solid, label="expectedIcebergProperties"];
36->34 [style = bold, label=""];
27->16 [style = dotted, label="true"];
1->3 [style = dotted, label="false"];
27->19 [style = dotted, label="false"];
42->18 [style = bold, label=""];
7->12 [style = bold, label=""];
23->26 [style = bold, label=""];
44->40 [style = bold, label=""];
33->10 [style = bold, label=""];
46->44 [style = dotted, label="true"];
28->16 [style = bold, label=""];
49->43 [style = bold, label=""];
27->28 [style = dotted, label="true"];
11->13 [style = dashed, label="0"];
41->22 [style = solid, label="hmsTableLocation"];
50->47 [style = bold, label=""];
16->21 [style = bold, label=""];
47->20 [style = bold, label=""];
0->31 [style = dashed, label="0"];
41->42 [style = bold, label=""];
}
