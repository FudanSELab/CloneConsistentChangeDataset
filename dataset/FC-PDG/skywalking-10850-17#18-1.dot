digraph {
7 [style = filled, label = "sourceBuilder.size(queryMaxSize)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "database.setName(service.getName())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SearchResponse response = getClient().search(ServiceTraffic.INDEX_NAME,sourceBuilder)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "searchServices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SearchResponse response = getClient().search(IndexController.LogicIndicesRegister.getPhysicalTableName(ServiceTraffic.INDEX_NAME),sourceBuilder)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getAllDatabases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "SearchResponse response = getClient().search(ServiceTraffic.INDEX_NAME,sourceBuilder)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.NODE_TYPE,NodeType.Database.value()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String matchCName = MatchCNameBuilder.INSTANCE.build(ServiceTraffic.NAME)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String keyword@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "getAllDatabases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.NODE_TYPE,NodeType.Normal.value()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "!Strings.isNullOrEmpty(keyword)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return databases@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.matchQuery(matchCName,keyword))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "database.setId(service.getId())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return buildServices(response)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "sourceBuilder.size(queryMaxSize)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "databases.add(database)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<Service> serviceList = buildServices(response)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
17->19 [style = solid, label="keyword"];
10->20 [style = bold, label=""];
12->20 [style = dashed, label="0"];
23->19 [style = solid, label="matchCName"];
21->6 [style = bold, label=""];
6->22 [style = bold, label=""];
9->10 [style = solid, label="sourceBuilder"];
0->2 [style = bold, label=""];
8->15 [style = dashed, label="0"];
9->15 [style = solid, label="sourceBuilder"];
1->6 [style = solid, label="boolQueryBuilder"];
6->2 [style = solid, label="databases"];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
19->6 [style = bold, label=""];
10->20 [style = solid, label="response"];
9->8 [style = solid, label="sourceBuilder"];
5->16 [style = dashed, label="0"];
0->10 [style = bold, label=""];
11->0 [style = bold, label=""];
10->0 [style = solid, label="database"];
3->7 [style = bold, label=""];
1->16 [style = bold, label=""];
16->21 [style = bold, label=""];
8->12 [style = solid, label="response"];
6->10 [style = bold, label=""];
23->19 [style = bold, label=""];
21->23 [style = dotted, label="true"];
21->19 [style = dotted, label="true"];
22->10 [style = bold, label=""];
18->9 [style = bold, label=""];
10->4 [style = bold, label=""];
15->12 [style = solid, label="response"];
7->15 [style = bold, label=""];
1->3 [style = solid, label="boolQueryBuilder"];
14->9 [style = bold, label=""];
15->12 [style = bold, label=""];
13->9 [style = bold, label=""];
18->17 [style = dotted, label="true"];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
8->12 [style = bold, label=""];
21->23 [style = bold, label=""];
}
