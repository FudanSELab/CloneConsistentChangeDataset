digraph {
17 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "nestedMessageBuilder.setBb(expected)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "builder.addRepeatedField(UnittestProto.repeatedNestedMessageExtension.getDescriptor(),nestedMessageBuilder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testGetRepeatedFieldBuilderForExistingBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int expected = 7432@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testGetRepeatedFieldBuilderForExtensionField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "FieldDescriptor field = NestedMessage.getDescriptor().findFieldByNumber(NestedMessage.BB_FIELD_NUMBER)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.addExtension(UnittestProto.repeatedNestedMessageExtension,NestedMessage.newBuilder().setBb(123).build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expected += 100@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testGetRepeatedFieldBuilderForExtensionField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "expected += 100@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "NestedMessage.Builder nestedMessageBuilder = NestedMessage.newBuilder().setBb(123)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Message.Builder fieldBuilder = builder.getRepeatedFieldBuilder(UnittestProto.repeatedNestedMessageExtension.getDescriptor(),0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb()).isEqualTo(expected)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Message.Builder fieldBuilder = builder.getRepeatedFieldBuilder(UnittestProto.repeatedNestedMessageExtension.getDescriptor(),0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fieldBuilder.setField(field,expected)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fieldBuilder.setField(field,expected)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb()).isEqualTo(expected)@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "TestAllExtensions.Builder builder = TestAllExtensions.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = solid, label="expected"];
8->16 [style = dashed, label="0"];
1->3 [style = solid, label="field"];
2->12 [style = solid, label="expected"];
5->4 [style = solid, label="expected"];
15->7 [style = solid, label="expected"];
5->10 [style = solid, label="field"];
8->0 [style = bold, label=""];
2->5 [style = bold, label=""];
1->12 [style = bold, label=""];
5->1 [style = bold, label=""];
12->4 [style = bold, label=""];
13->6 [style = bold, label=""];
7->11 [style = dashed, label="0"];
4->10 [style = solid, label="expected"];
10->18 [style = solid, label="expected"];
10->11 [style = bold, label=""];
15->17 [style = solid, label="expected"];
5->1 [style = solid, label="field"];
15->7 [style = bold, label=""];
16->20 [style = solid, label="nestedMessageBuilder"];
6->8 [style = bold, label=""];
4->11 [style = solid, label="expected"];
10->19 [style = bold, label=""];
9->6 [style = bold, label=""];
6->16 [style = bold, label=""];
10->7 [style = bold, label=""];
1->3 [style = bold, label=""];
10->19 [style = solid, label="expected"];
14->6 [style = bold, label=""];
2->1 [style = solid, label="expected"];
4->10 [style = bold, label=""];
16->20 [style = bold, label=""];
7->17 [style = bold, label=""];
4->7 [style = solid, label="expected"];
1->7 [style = solid, label="field"];
20->2 [style = bold, label=""];
0->2 [style = bold, label=""];
3->12 [style = dashed, label="0"];
19->18 [style = bold, label=""];
5->3 [style = solid, label="expected"];
3->4 [style = bold, label=""];
18->15 [style = bold, label=""];
}
