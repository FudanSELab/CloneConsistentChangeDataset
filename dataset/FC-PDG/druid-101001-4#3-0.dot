digraph {
3 [style = filled, label = "EasyMock.replay(mockLookupExtractorFactory)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(mockLookupExtractorFactory.getIntrospectHandler()).andReturn(mockLookupIntrospectHandler)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(mockLookupExtractorFactory.get()).andReturn(new MapLookupExtractor(ImmutableMap.of(),false)).anyTimes()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testExistingLookup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "EasyMock.expect(mockLookupExtractorFactory.getIntrospectHandler()).andReturn(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(mockLookupIntrospectHandler,lookupIntrospectionResource.introspectLookup(\"lookupId\"))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(Response.status(Response.Status.NOT_FOUND).build().getStatus(),((Response)lookupIntrospectionResource.introspectLookup(\"lookupId\")).getStatus())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testExistingLookup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testNotImplementedIntrospectLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->6 [style = bold, label=""];
3->8 [style = bold, label=""];
1->6 [style = dashed, label="0"];
1->2 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
6->2 [style = bold, label=""];
4->8 [style = dashed, label="0"];
2->3 [style = bold, label=""];
5->1 [style = bold, label=""];
}
