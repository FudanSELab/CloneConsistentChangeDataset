digraph {
10 [style = filled, label = "assertThat(simulateDocumentBaseResult.getIngestDocument(),nullValue())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testExecuteItemWithFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(exception,instanceOf())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(processor.getInvokedCounter(),equalTo(1))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "latch.await()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Processor processor2 = new DropProcessor.Factory().create(Map.of(),null,Map.of())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,true,null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor,processor))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(1).getFailure(),nullValue())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(simulateDocumentBaseResult.getFailure(),instanceOf())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,false,null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(verboseResult.getProcessorResults().size(),equalTo(2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "TestProcessor processor1 = new TestProcessor(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "SimulateDocumentResult actualItemResponse = holder.get()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult)actualItemResponse@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Exception exception = simulateDocumentBaseResult.getFailure()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestProcessor processor = new TestProcessor(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(0).getIngestDocument(),notNullValue())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor1,processor2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(exception.getMessage(),equalTo(\"java.lang.RuntimeException: processor failed\"))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(1).getIngestDocument(),nullValue())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testDropDocumentVerbose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(verboseResult.getProcessorResults().get(0).getFailure(),nullValue())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "SimulateDocumentVerboseResult verboseResult = (SimulateDocumentVerboseResult)actualItemResponse@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testExecuteItemWithFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(processor1.getInvokedCounter(),equalTo(1))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(exception,instanceOf())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30->24 [style = bold, label=""];
28->1 [style = solid, label="actualItemResponse"];
23->20 [style = bold, label=""];
1->8 [style = solid, label="actualItemResponse"];
24->19 [style = bold, label=""];
31->25 [style = bold, label=""];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
19->31 [style = bold, label=""];
2->6 [style = bold, label=""];
16->6 [style = bold, label=""];
4->15 [style = bold, label=""];
28->30 [style = solid, label="actualItemResponse"];
20->21 [style = solid, label="processor2"];
22->28 [style = bold, label=""];
5->16 [style = solid, label="exception"];
9->8 [style = bold, label=""];
1->30 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
8->1 [style = dashed, label="0"];
21->18 [style = bold, label=""];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
20->21 [style = bold, label=""];
5->16 [style = bold, label=""];
28->0 [style = bold, label=""];
23->21 [style = solid, label="processor1"];
5->2 [style = bold, label=""];
18->29 [style = bold, label=""];
12->11 [style = dashed, label="0"];
13->12 [style = bold, label=""];
29->11 [style = bold, label=""];
15->11 [style = bold, label=""];
1->7 [style = solid, label="actualItemResponse"];
15->12 [style = solid, label="pipeline"];
0->1 [style = bold, label=""];
2->16 [style = dashed, label="0"];
7->30 [style = dashed, label="0"];
11->13 [style = bold, label=""];
25->26 [style = bold, label=""];
9->0 [style = dashed, label="0"];
5->2 [style = solid, label="exception"];
11->22 [style = bold, label=""];
5->31 [style = dashed, label="0"];
27->23 [style = bold, label=""];
21->11 [style = solid, label="pipeline"];
4->23 [style = dashed, label="0"];
17->4 [style = bold, label=""];
14->5 [style = bold, label=""];
4->15 [style = solid, label="processor"];
}
