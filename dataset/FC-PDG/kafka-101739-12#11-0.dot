digraph {
8 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).windowedBy(SessionWindows.with(ofMillis(5L)).grace(ofMillis(5L))).count(Materialized.as(\"counts\").withCachingDisabled())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).windowedBy(SessionWindows.with(ofMillis(5L)).grace(ofMillis(0L))).count(Materialized.as(\"counts\").withCachingDisabled())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",5L))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",30L))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ConsumerRecordFactory<String,String> recordFactory = new ConsumerRecordFactory<>(STRING_SERIALIZER,STRING_SERIALIZER)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/0(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/0(\",null,1L),new KeyValueTimestamp<>(\"(k1@0/1(\",2L,1L),new KeyValueTimestamp<>(\"(k1@7/7(\",1L,7L),new KeyValueTimestamp<>(\"(k1@30/30(\",1L,30L)))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "valueCounts.toStream().map(null).to(\"output-raw\",Produced.with(STRING_SERDE,Serdes.Long()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.println(topology.describe())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "shouldSupportFinalResultsForTimeWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",5L))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k2\",\"v1\",6L))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/2(\",2L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L),new KeyValueTimestamp<>(\"(k1@0/2(\",3L,1L),new KeyValueTimestamp<>(\"(k1@0/2(\",4L,0L),new KeyValueTimestamp<>(\"(k1@4/6(\",1L,5L)))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldSupportFinalResultsForSessionWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",5L))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/5(\",3L,1L),new KeyValueTimestamp<>(\"(k2@6/6(\",1L,6L)))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",4L,0L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L)))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/0(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/0(\",null,5L),new KeyValueTimestamp<>(\"(k1@0/5(\",2L,5L),new KeyValueTimestamp<>(\"(k1@0/5(\",null,1L),new KeyValueTimestamp<>(\"(k1@0/5(\",3L,1L),new KeyValueTimestamp<>(\"(k2@6/6(\",1L,6L),new KeyValueTimestamp<>(\"(k1@30/30(\",1L,30L)))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",1L))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/1(\",2L,1L),new KeyValueTimestamp<>(\"(k1@7/7(\",1L,7L)))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "shouldSupportFinalResultsForSessionWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",7L))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",1L))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "valueCounts.suppress(untilWindowCloses(unbounded())).toStream().map(null).to(\"output-suppressed\",Produced.with(STRING_SERDE,Serdes.Long()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Topology topology = builder.build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).windowedBy(TimeWindows.of(ofMillis(2L)).grace(ofMillis(1L))).count(Materialized.as(\"counts\").withCachingDisabled())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",2L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
21->10 [style = bold, label=""];
2->26 [style = bold, label=""];
29->4 [style = bold, label=""];
4->17 [style = bold, label=""];
5->23 [style = bold, label=""];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
15->21 [style = bold, label=""];
26->5 [style = bold, label=""];
12->16 [style = dashed, label="0"];
10->19 [style = bold, label=""];
27->28 [style = bold, label=""];
11->4 [style = bold, label=""];
18->2 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
20->4 [style = bold, label=""];
19->16 [style = bold, label=""];
25->27 [style = bold, label=""];
6->1 [style = bold, label=""];
8->22 [style = dashed, label="0"];
7->5 [style = bold, label=""];
23->24 [style = bold, label=""];
9->18 [style = bold, label=""];
13->3 [style = bold, label=""];
24->25 [style = bold, label=""];
14->12 [style = bold, label=""];
2->15 [style = bold, label=""];
7->15 [style = dashed, label="0"];
5->21 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
4->8 [style = bold, label=""];
14->19 [style = dashed, label="0"];
17->13 [style = bold, label=""];
2->7 [style = bold, label=""];
7->26 [style = dashed, label="0"];
4->22 [style = bold, label=""];
10->23 [style = dashed, label="0"];
22->13 [style = bold, label=""];
8->13 [style = bold, label=""];
}
