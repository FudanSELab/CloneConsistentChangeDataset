digraph {
34 [style = filled, label = "deltaStreamer.shutdownGracefully()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "char sep@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestHelpers.assertRecordCount(CSV_NUM_RECORDS,tableBasePath + \"/*/*.parquet\",sqlContext)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "totalExpectedRecords += 20@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "int totalExpectedRecords = parquetRecords + ((autoResetToLatest)? 0: JSON_KAFKA_NUM_RECORDS)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "boolean autoResetToLatest@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<String> transformerClassNames@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String sourceOrderingField = (hasHeader || useSchemaProvider)? \"timestamp\": \"_c0\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "prepareJsonKafkaDFSSource(PROPS_FILENAME_TEST_JSON_KAFKA,autoResetToLatest? \"latest\": \"earliest\",topicName)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),transformerClassNames,PROPS_FILENAME_TEST_CSV,false,useSchemaProvider,1000,false,null,null,sourceOrderingField,null),jsc)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_PARQUET,false,false,100000,false,null,null,\"timestamp\"),jsc)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_csv_table\" + testNum@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TestHelpers.assertRecordCount(parquetRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "prepareParquetDFSSource(true,false,\"source_uber.avsc\",\"target_uber.avsc\",PROPS_FILENAME_TEST_PARQUET,PARQUET_SOURCE_ROOT,false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testDeltaStreamerTransitionFromParquetToKafkaSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "boolean useSchemaProvider@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "prepareParquetDFSFiles(parquetRecords,PARQUET_SOURCE_ROOT,FIRST_PARQUET_FILE_NAME,true,HoodieTestDataGenerator.TRIP_SCHEMA,HoodieTestDataGenerator.AVRO_TRIP_SCHEMA)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "deltaStreamer.sync()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "deltaStreamer.sync()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean hasHeader@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "deltaStreamer.sync()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "PARQUET_SOURCE_ROOT = dfsBasePath + \"/parquetFilesDfsToKafka\" + testNum@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "boolean hasHeader@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "prepareJsonKafkaDFSFiles(20,false,topicName)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\"),jsc)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "deltaStreamer.sync()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_dfs_to_kakfa\" + testNum@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "char sep@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testNum++@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "prepareCsvDFSSource(hasHeader,sep,useSchemaProvider,transformerClassNames != null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean useSchemaProvider@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testCsvDFSSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "prepareJsonKafkaDFSFiles(JSON_KAFKA_NUM_RECORDS,true,topicName)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "topicName = \"topic\" + testNum@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testCsvDFSSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),transformerClassNames,PROPS_FILENAME_TEST_CSV,false,useSchemaProvider,1000,false,null,null,sourceOrderingField),jsc)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "int parquetRecords = 10@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->1 [style = solid, label="transformerClassNames"];
13->10 [style = bold, label=""];
0->30 [style = bold, label=""];
22->35 [style = solid, label="tableBasePath"];
38->28 [style = solid, label="topicName"];
29->17 [style = bold, label=""];
38->32 [style = solid, label="topicName"];
16->11 [style = bold, label=""];
14->9 [style = solid, label="hasHeader"];
31->25 [style = bold, label=""];
22->30 [style = solid, label="tableBasePath"];
16->12 [style = dotted, label="true"];
24->0 [style = bold, label=""];
25->35 [style = solid, label="totalExpectedRecords"];
3->9 [style = solid, label="useSchemaProvider"];
12->11 [style = solid, label="useSchemaProvider"];
2->1 [style = solid, label="tableBasePath"];
23->17 [style = solid, label="PARQUET_SOURCE_ROOT"];
15->11 [style = solid, label="sep"];
16->15 [style = dotted, label="true"];
9->13 [style = solid, label="sourceOrderingField"];
5->6 [style = dotted, label="true"];
14->11 [style = solid, label="hasHeader"];
21->27 [style = dotted, label="true"];
29->25 [style = solid, label="parquetRecords"];
29->30 [style = solid, label="parquetRecords"];
30->34 [style = bold, label=""];
20->31 [style = bold, label=""];
33->26 [style = solid, label="totalExpectedRecords"];
2->9 [style = bold, label=""];
38->18 [style = solid, label="topicName"];
36->26 [style = bold, label=""];
3->11 [style = solid, label="useSchemaProvider"];
17->37 [style = bold, label=""];
25->35 [style = bold, label=""];
26->19 [style = bold, label=""];
22->20 [style = solid, label="tableBasePath"];
5->3 [style = dotted, label="true"];
27->32 [style = solid, label="autoResetToLatest"];
11->2 [style = bold, label=""];
12->9 [style = solid, label="useSchemaProvider"];
5->4 [style = dotted, label="true"];
4->11 [style = solid, label="hasHeader"];
6->11 [style = solid, label="sep"];
8->0 [style = bold, label=""];
3->1 [style = solid, label="useSchemaProvider"];
23->29 [style = bold, label=""];
35->28 [style = bold, label=""];
16->7 [style = dotted, label="true"];
37->22 [style = bold, label=""];
1->13 [style = dashed, label="0"];
27->25 [style = solid, label="autoResetToLatest"];
38->18 [style = bold, label=""];
2->8 [style = solid, label="tableBasePath"];
10->8 [style = bold, label=""];
28->33 [style = bold, label=""];
5->7 [style = dotted, label="true"];
22->26 [style = solid, label="tableBasePath"];
33->36 [style = bold, label=""];
2->13 [style = solid, label="tableBasePath"];
16->14 [style = dotted, label="true"];
18->32 [style = bold, label=""];
29->17 [style = solid, label="parquetRecords"];
8->30 [style = dashed, label="0"];
5->11 [style = bold, label=""];
9->1 [style = solid, label="sourceOrderingField"];
4->9 [style = solid, label="hasHeader"];
7->11 [style = solid, label="transformerClassNames"];
23->37 [style = solid, label="PARQUET_SOURCE_ROOT"];
22->24 [style = bold, label=""];
9->1 [style = bold, label=""];
34->38 [style = bold, label=""];
1->10 [style = bold, label=""];
21->23 [style = bold, label=""];
32->20 [style = bold, label=""];
12->13 [style = solid, label="useSchemaProvider"];
9->13 [style = bold, label=""];
7->13 [style = solid, label="transformerClassNames"];
22->24 [style = solid, label="tableBasePath"];
}
