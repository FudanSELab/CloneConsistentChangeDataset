digraph {
14 [style = filled, label = "list['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "list['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "{this.sourceType = sourceList}@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "list.isElementOptional()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int newId = nextId.get()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return Types.ListType.ofOptional(newId,future.get())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "list['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return Types.ListType.ofRequired(sourceElementId,elementTypeFuture.get())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return Types.ListType.ofRequired(newId,future.get())@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Preconditions.checkArgument(sourceType.isListType(),\"Not a list: %s\",sourceType)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Supplier<Type> elementTypeFuture@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Types.ListType list@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Types.ListType sourceList = sourceType.asListType()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Preconditions.checkArgument(sourceType.isListType(),\"Not a list: \" + sourceType)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Supplier<Type> future@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Types.ListType list@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return Types.ListType.ofOptional(sourceElementId,elementTypeFuture.get())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int sourceElementId = sourceList.elementId()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "this.sourceType = sourceList.elementType()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Types.ListType list@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
13->10 [style = bold, label=""];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
7->6 [style = dotted, label="true"];
14->19 [style = dotted, label="true"];
3->1 [style = bold, label=""];
18->5 [style = solid, label="newId"];
10->3 [style = bold, label=""];
7->0 [style = bold, label=""];
2->9 [style = bold, label=""];
8->5 [style = dashed, label="0"];
18->15 [style = solid, label="newId"];
12->11 [style = dotted, label="true"];
2->15 [style = dashed, label="0"];
14->17 [style = dotted, label="true"];
12->13 [style = bold, label=""];
3->2 [style = solid, label="sourceElementId"];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
12->6 [style = dotted, label="true"];
0->13 [style = dashed, label="0"];
7->4 [style = dotted, label="true"];
6->19 [style = dashed, label="0"];
10->9 [style = solid, label="sourceList"];
8->9 [style = bold, label=""];
16->5 [style = bold, label=""];
14->18 [style = bold, label=""];
3->8 [style = solid, label="sourceElementId"];
16->5 [style = dotted, label="false"];
5->8 [style = dotted, label="false"];
5->2 [style = dotted, label="true"];
16->15 [style = dotted, label="true"];
18->16 [style = bold, label=""];
}
