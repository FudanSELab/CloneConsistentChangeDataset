digraph {
30 [style = filled, label = "this.pulsarRecordCursors.put(split.getKey(),pulsarRecordCursor)@@@199@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "mockKeyValueSchemaPulsarRecordCursor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "PulsarSqlSchemaInfoProvider pulsarSqlSchemaInfoProvider = mock()@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "PulsarRecordCursor pulsarRecordCursor = spy(new PulsarRecordCursor(ColumnHandles,split,pulsarConnectorConfig,managedLedgerFactory,new ManagedLedgerConfig(),new PulsarConnectorMetricsTracker(new NullStatsProvider()),dispatchingRowDecoderFactory))@@@79@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "schemas = mock()@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "when(PulsarConnectorCache.instance.getManagedLedgerFactory()).thenReturn(managedLedgerFactory)@@@192@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "doReturn(tenants).when(pulsarAdmin).tenants()@@@71@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final KeyValueSchema schema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Topics topics = mock()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final TopicName topicName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "pulsarRecordCursor.setPulsarSqlSchemaInfoProvider(pulsarSqlSchemaInfoProvider)@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "when(schemas.getSchemaInfo(anyString())).thenAnswer(new Answer<SchemaInfo>(){@Override public SchemaInfo answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String topic = (String)args(0(if (topicsToSchemas.get(topic) != null) {return topicsToSchemas.get(topic)}{throw new PulsarAdminException(new ClientErrorException(Response.status(404).build()))}}})@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doReturn(topics).when(pulsarAdmin).topics()@@@73@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "PulsarConnectorCache.instance = mock()@@@195@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "doReturn(tenants).when(pulsarAdmin).tenants()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "when(PulsarConnectorCache.instance.getManagedLedgerFactory()).thenReturn(managedLedgerFactory)@@@196@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "final Long entriesNum@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "when(managedLedgerFactory.openReadOnlyCursor(any(),any(),any())).then(new Answer<ReadOnlyCursor>(){@Override public ReadOnlyCursor answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String topic = (String)args(0(PositionImpl positionImpl = (PositionImpl)args(1(int position = positionImpl.getEntryId() == -1? 0: (int)positionImpl.getEntryId()positions.put(topic,position)ReadOnlyCursorImpl readOnlyCursor = mock()doReturn(entriesNum).when(readOnlyCursor).getNumberOfEntries()doAnswer(new Answer<Void>(){@Override public Void answer(InvocationOnMock invocation){Object(( args = invocation.getArguments()Integer skipEntries = (Integer)args(0(positions.put(topic,positions.get(topic) + skipEntries)return null}}).when(readOnlyCursor).skipEntries(anyInt())when(readOnlyCursor.getReadPosition()).thenAnswer(new Answer<PositionImpl>(){@Override public PositionImpl answer(InvocationOnMock invocationOnMock){return PositionImpl.get(0,positions.get(topic))}})doAnswer(new Answer(){@Override public Object answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()Integer readEntries = (Integer)args(0(AsyncCallbacks.ReadEntriesCallback callback = (AsyncCallbacks.ReadEntriesCallback)args(2(Object ctx = args(3(new Thread(new Runnable(){@Override public void run(){List<Entry> entries = new LinkedList<>()for (int i = 0 i < readEntries i++){MessageMetadata messageMetadata = new MessageMetadata().setProducerName(\"test-producer\").setSequenceId(positions.get(topic)).setPublishTime(System.currentTimeMillis())if (KeyValueEncodingType.SEPARATED.equals(schema.getKeyValueEncodingType())) {messageMetadata.setPartitionKey(new String(schema.getKeySchema().encode(message.getKey()),Charset.forName(\"UTF-8\"))).setPartitionKeyB64Encoded(false)}ByteBuf dataPayload = io.netty.buffer.Unpooled.copiedBuffer(schema.encode(message))ByteBuf byteBuf = serializeMetadataAndPayload(Commands.ChecksumType.Crc32c,messageMetadata,dataPayload)entries.add(EntryImpl.create(0,positions.get(topic),byteBuf))positions.put(topic,positions.get(topic) + 1)}callback.readEntriesComplete(entries,ctx)}}).start()return null}}).when(readOnlyCursor).asyncReadEntries(anyInt(),anyLong(),any(),any(),any())when(readOnlyCursor.hasMoreEntries()).thenAnswer(new Answer<Boolean>(){@Override public Boolean answer(InvocationOnMock invocationOnMock){return positions.get(topic) < entriesNum}})when(readOnlyCursor.getNumberOfEntries(any())).then(new Answer<Long>(){@Override public Long answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()com.google.common.collect.Range<PositionImpl> range = (com.google.common.collect.Range<PositionImpl>)args(0(return (range.upperEndpoint().getEntryId() + 1) - range.lowerEndpoint().getEntryId()}})when(readOnlyCursor.getCurrentLedgerInfo()).thenReturn(MLDataFormats.ManagedLedgerInfo.LedgerInfo.newBuilder().setLedgerId(0).build())return readOnlyCursor}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "pulsarAdmin = mock()@@@70@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "pulsarAdmin = mock()@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PulsarSplit split = new PulsarSplit(0,pulsarConnectorId.toString(),topicName.getNamespace(),topicName.getLocalName(),topicName.getLocalName(),entriesNum,new String(schema.getSchemaInfo().getSchema()),schema.getSchemaInfo().getType(),0,entriesNum,0,0,TupleDomain.all(),objectMapper.writeValueAsString(schema.getSchemaInfo().getProperties()),null)@@@78@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ManagedLedgerFactory managedLedgerFactory = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "doReturn(new LinkedList<>(topicNames.stream().map(null).collect(Collectors.toSet()))).when(tenants).getTenants()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "this.pulsarConnectorConfig = spy(new PulsarConnectorConfig())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "doReturn(namespaces).when(pulsarAdmin).namespaces()@@@72@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "doReturn(topics).when(pulsarAdmin).topics()@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.pulsarConnectorConfig.setMaxSplitEntryQueueSize(10)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "KeyValue message@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "when(topics.getList(anyString(),any())).thenAnswer(new Answer<List<String>>(){@Override public List<String> answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String ns = (String)args(0(List<String> topics = getTopics(ns)if (topics.isEmpty()) {ClientErrorException cee = new ClientErrorException(Response.status(404).build())throw new PulsarAdminException(cee,cee.getMessage(),cee.getResponse().getStatus())}return topics}})@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "when(managedLedgerFactory.openReadOnlyCursor(any(),any(),any())).then(new Answer<ReadOnlyCursor>(){@Override public ReadOnlyCursor answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String topic = (String)args(0(PositionImpl positionImpl = (PositionImpl)args(1(int position = positionImpl.getEntryId() == -1? 0: (int)positionImpl.getEntryId()positions.put(topic,position)String schemaName = TopicName.get(TopicName.get(topic.replaceAll(\"/persistent\",\"\")).getPartitionedTopicName()).getSchemaName()long entries = topicsToNumEntries.get(schemaName)ReadOnlyCursorImpl readOnlyCursor = mock()doReturn(entries).when(readOnlyCursor).getNumberOfEntries()doAnswer(new Answer<Void>(){@Override public Void answer(InvocationOnMock invocation){Object(( args = invocation.getArguments()Integer skipEntries = (Integer)args(0(positions.put(topic,positions.get(topic) + skipEntries)return null}}).when(readOnlyCursor).skipEntries(anyInt())when(readOnlyCursor.getReadPosition()).thenAnswer(new Answer<PositionImpl>(){@Override public PositionImpl answer(InvocationOnMock invocationOnMock){return PositionImpl.get(0,positions.get(topic))}})doAnswer(new Answer(){@Override public Object answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()Integer readEntries = (Integer)args(0(AsyncCallbacks.ReadEntriesCallback callback = (AsyncCallbacks.ReadEntriesCallback)args(2(Object ctx = args(3(new Thread(new Runnable(){@Override public void run(){List<Entry> entries = new LinkedList<>()for (int i = 0 i < readEntries i++){TestPulsarConnector.Bar bar = new TestPulsarConnector.Bar()bar.field1 = fooFunctions.get(\"bar.field1\").apply(count) == null? null: (int)fooFunctions.get(\"bar.field1\").apply(count)bar.field2 = fooFunctions.get(\"bar.field2\").apply(count) == null? null: (String)fooFunctions.get(\"bar.field2\").apply(count)bar.field3 = (float)fooFunctions.get(\"bar.field3\").apply(count)Foo foo = new Foo()foo.field1 = (int)fooFunctions.get(\"field1\").apply(count)foo.field2 = (String)fooFunctions.get(\"field2\").apply(count)foo.field3 = (float)fooFunctions.get(\"field3\").apply(count)foo.field4 = (double)fooFunctions.get(\"field4\").apply(count)foo.field5 = (boolean)fooFunctions.get(\"field5\").apply(count)foo.field6 = (long)fooFunctions.get(\"field6\").apply(count)foo.timestamp = (long)fooFunctions.get(\"timestamp\").apply(count)foo.time = (int)fooFunctions.get(\"time\").apply(count)foo.date = (int)fooFunctions.get(\"date\").apply(count)foo.bar = barfoo.field7 = (Foo.TestEnum)fooFunctions.get(\"field7\").apply(count)MessageMetadata messageMetadata = new MessageMetadata().setProducerName(\"test-producer\").setSequenceId(positions.get(topic)).setPublishTime(System.currentTimeMillis())Schema schema = topicsToSchemas.get(schemaName).getType() == SchemaType.AVRO? AvroSchema.of(): JSONSchema.of()ByteBuf payload = io.netty.buffer.Unpooled.copiedBuffer(schema.encode(foo))ByteBuf byteBuf = serializeMetadataAndPayload(Commands.ChecksumType.Crc32c,messageMetadata,payload)completedBytes += byteBuf.readableBytes()entries.add(EntryImpl.create(0,positions.get(topic),byteBuf))positions.put(topic,positions.get(topic) + 1)count++}callback.readEntriesComplete(entries,ctx)}}).start()return null}}).when(readOnlyCursor).asyncReadEntries(anyInt(),anyLong(),any(),any(),any())when(readOnlyCursor.hasMoreEntries()).thenAnswer(new Answer<Boolean>(){@Override public Boolean answer(InvocationOnMock invocationOnMock){return positions.get(topic) < entries}})when(readOnlyCursor.findNewestMatching(any(),any())).then(new Answer<Position>(){@Override public Position answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()com.google.common.base.Predicate<Entry> predicate = (com.google.common.base.Predicate<Entry>)args(1(String schemaName = TopicName.get(TopicName.get(topic.replaceAll(\"/persistent\",\"\")).getPartitionedTopicName()).getSchemaName()List<Entry> entries = getTopicEntries(schemaName)Integer target = nullfor (int i = entries.size() - 1 i >= 0 i--){Entry entry = entries.get(i)if (predicate.apply(entry)) {target = ibreak}}return target == null? null: new PositionImpl(0,target)}})when(readOnlyCursor.getNumberOfEntries(any())).then(new Answer<Long>(){@Override public Long answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()com.google.common.collect.Range<PositionImpl> range = (com.google.common.collect.Range<PositionImpl>)args(0(return (range.upperEndpoint().getEntryId() + 1) - range.lowerEndpoint().getEntryId()}})when(readOnlyCursor.getCurrentLedgerInfo()).thenReturn(MLDataFormats.ManagedLedgerInfo.LedgerInfo.newBuilder().setLedgerId(0).build())return readOnlyCursor}})@@@83@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Topics topics = mock()@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ManagedLedgerFactory managedLedgerFactory = mock()@@@82@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "when(topics.getPartitionedTopicMetadata(anyString())).thenAnswer(new Answer<PartitionedTopicMetadata>(){@Override public PartitionedTopicMetadata answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String topic = (String)args(0(int partitions = partitionedTopicsToPartitions.get(topic) == null? 0: partitionedTopicsToPartitions.get(topic)return new PartitionedTopicMetadata(partitions)}})@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "schemas = mock()@@@56@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(namespaces.getNamespaces(anyString())).thenAnswer(new Answer<List<String>>(){@Override public List<String> answer(InvocationOnMock invocation){Object(( args = invocation.getArguments()String tenant = (String)args(0(List<String> ns = getNamespace(tenant)if (ns.isEmpty()) {ClientErrorException cee = new ClientErrorException(Response.status(404).build())throw new PulsarAdminException(cee,cee.getMessage(),cee.getResponse().getStatus())}return ns}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "List<PulsarColumnHandle> ColumnHandles@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(topics.getPartitionedTopicMetadata(anyString())).thenAnswer(new Answer<PartitionedTopicMetadata>(){@Override public PartitionedTopicMetadata answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String topic = (String)args(0(int partitions = partitionedTopicsToPartitions.get(topic) == null? 0: partitionedTopicsToPartitions.get(topic)return new PartitionedTopicMetadata(partitions)}})@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "this.pulsarSplitManager = Mockito.spy(new PulsarSplitManager(pulsarConnectorId,this.pulsarConnectorConfig))@@@81@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "PulsarRecordCursor pulsarRecordCursor = spy(new PulsarRecordCursor(topicsToColumnHandles.get(split.getKey()),split.getValue(),pulsarConnectorConfig,managedLedgerFactory,new ManagedLedgerConfig(),new PulsarConnectorMetricsTracker(new NullStatsProvider()),dispatchingRowDecoderFactory))@@@194@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Tenants tenants = mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "when(topics.getPartitionedTopicList(anyString())).thenAnswer(new Answer<List<String>>(){@Override public List<String> answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String ns = (String)args(0(List<String> topics = getPartitionedTopics(ns)if (topics.isEmpty()) {ClientErrorException cee = new ClientErrorException(Response.status(404).build())throw new PulsarAdminException(cee,cee.getMessage(),cee.getResponse().getStatus())}return topics}})@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "ObjectMapper objectMapper = new ObjectMapper()@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "when(schemas.getSchemaInfo(anyString())).thenAnswer(new Answer<SchemaInfo>(){@Override public SchemaInfo answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String topic = (String)args(0(if (topicsToSchemas.get(topic) != null) {return topicsToSchemas.get(topic)}{ClientErrorException cee = new ClientErrorException(Response.status(404).build())throw new PulsarAdminException(cee,cee.getMessage(),cee.getResponse().getStatus())}}})@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "doReturn(namespaces).when(pulsarAdmin).namespaces()@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Namespaces namespaces = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PulsarConnectorCache.instance = mock()@@@191@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "when(pulsarSqlSchemaInfoProvider.getSchemaByVersion(any())).thenReturn(completedFuture(schema.getSchemaInfo()))@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(topics.getPartitionedTopicList(anyString())).thenAnswer(new Answer<List<String>>(){@Override public List<String> answer(InvocationOnMock invocationOnMock){Object(( args = invocationOnMock.getArguments()String ns = (String)args(0(List<String> topics = getPartitionedTopics(ns)if (topics.isEmpty()) {throw new PulsarAdminException(new ClientErrorException(Response.status(404).build()))}return topics}})@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "return pulsarRecordCursor@@@83@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "this.pulsarConnectorConfig.setMaxEntryReadBatchSize(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "PulsarRecordCursor pulsarRecordCursor = spy(new PulsarRecordCursor(topicsToColumnHandles.get(split.getKey()),split.getValue(),pulsarConnectorConfig,managedLedgerFactory,new ManagedLedgerConfig(),new PulsarConnectorMetricsTracker(new NullStatsProvider()),dispatchingRowDecoderFactory))@@@198@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "this.pulsarMetadata = new PulsarMetadata(pulsarConnectorId,this.pulsarConnectorConfig,dispatchingRowDecoderFactory)@@@80@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "this.pulsarConnectorConfig.setMaxSplitMessageQueueSize(100)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43->46 [style = dotted, label="true"];
21->3 [style = bold, label=""];
27->7 [style = bold, label=""];
20->6 [style = bold, label=""];
43->45 [style = bold, label=""];
7->17 [style = solid, label="tenants"];
17->21 [style = bold, label=""];
36->30 [style = bold, label=""];
25->26 [style = bold, label=""];
29->31 [style = solid, label="args"];
40->34 [style = solid, label="args"];
31->34 [style = solid, label="cee"];
19->22 [style = bold, label=""];
51->54 [style = bold, label=""];
19->21 [style = solid, label="pulsarConnectorConfig"];
26->25 [style = solid, label="pulsarRecordCursor"];
43->47 [style = dotted, label="true"];
19->41 [style = solid, label="pulsarConnectorConfig"];
1->23 [style = bold, label=""];
7->11 [style = bold, label=""];
12->24 [style = bold, label=""];
4->2 [style = bold, label=""];
39->41 [style = bold, label=""];
0->27 [style = bold, label=""];
26->25 [style = bold, label=""];
9->18 [style = solid, label="args"];
50->53 [style = bold, label=""];
15->26 [style = bold, label=""];
41->38 [style = bold, label=""];
28->18 [style = bold, label=""];
46->24 [style = solid, label="ColumnHandles"];
5->29 [style = bold, label=""];
12->26 [style = solid, label="managedLedgerFactory"];
9->28 [style = bold, label=""];
24->14 [style = bold, label=""];
25->37 [style = bold, label=""];
19->26 [style = solid, label="pulsarConnectorConfig"];
19->39 [style = solid, label="pulsarConnectorConfig"];
43->49 [style = dotted, label="true"];
40->32 [style = bold, label=""];
4->5 [style = solid, label="args"];
48->50 [style = solid, label="entriesNum"];
31->40 [style = solid, label="args"];
43->48 [style = dotted, label="true"];
31->3 [style = solid, label="topics"];
5->16 [style = solid, label="args"];
52->51 [style = bold, label=""];
12->15 [style = solid, label="managedLedgerFactory"];
11->13 [style = bold, label=""];
36->30 [style = solid, label="pulsarRecordCursor"];
18->24 [style = solid, label="args"];
32->34 [style = bold, label=""];
38->33 [style = bold, label=""];
48->12 [style = solid, label="entriesNum"];
30->36 [style = bold, label=""];
5->16 [style = bold, label=""];
28->6 [style = solid, label="schemas"];
12->24 [style = solid, label="split"];
8->19 [style = bold, label=""];
34->33 [style = solid, label="args"];
13->4 [style = bold, label=""];
24->39 [style = bold, label=""];
34->6 [style = bold, label=""];
22->0 [style = bold, label=""];
45->24 [style = solid, label="managedLedgerFactory"];
13->23 [style = solid, label="namespaces"];
10->1 [style = bold, label=""];
3->12 [style = bold, label=""];
7->1 [style = solid, label="tenants"];
23->20 [style = bold, label=""];
29->31 [style = bold, label=""];
38->37 [style = solid, label="managedLedgerFactory"];
24->52 [style = bold, label=""];
4->29 [style = solid, label="args"];
16->20 [style = solid, label="topics"];
45->50 [style = bold, label=""];
14->15 [style = bold, label=""];
2->5 [style = solid, label="topics"];
38->36 [style = solid, label="managedLedgerFactory"];
31->40 [style = bold, label=""];
2->5 [style = bold, label=""];
4->5 [style = bold, label=""];
5->29 [style = solid, label="topics"];
53->12 [style = bold, label=""];
19->3 [style = solid, label="pulsarConnectorConfig"];
6->17 [style = bold, label=""];
54->44 [style = bold, label=""];
37->36 [style = bold, label=""];
43->42 [style = dotted, label="true"];
24->44 [style = solid, label="pulsarRecordCursor"];
16->9 [style = solid, label="args"];
18->10 [style = bold, label=""];
19->36 [style = solid, label="pulsarConnectorConfig"];
13->21 [style = solid, label="namespaces"];
52->54 [style = solid, label="pulsarSqlSchemaInfoProvider"];
35->19 [style = bold, label=""];
33->25 [style = bold, label=""];
32->12 [style = solid, label="schemas"];
16->9 [style = bold, label=""];
}
