digraph {
15 [style = filled, label = "Evaluator evaluator@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ignoreExisting@@@13@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return Iterables.transform(matchingManifests,null)@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "deleteManifestReaders['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "BiFunction<ManifestFile,CloseableIterable<ManifestEntry<DataFile>>,CloseableIterable<T>> entryFn@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Iterable<ManifestFile> matchingManifests = evalCache == null? dataManifests: Iterables.filter(dataManifests,null)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "matchingManifests = Iterables.filter(matchingManifests,null)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "ignoreExisting@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "evaluator = null@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Iterable<ManifestFile> matchingManifests = evalCache == null? dataManifests: Iterables.filter(dataManifests,null)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Iterable<ManifestFile> matchingManifests = evalCache == null? deleteManifests: Iterables.filter(deleteManifests,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LoadingCache<Integer,ManifestEvaluator> evalCache = specsById == null? null: Caffeine.newBuilder().build(null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "entries['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "fileFilter != null && fileFilter != Expressions.alwaysTrue()@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "matchingManifests = Iterables.filter(matchingManifests,null)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Evaluator evaluator = new Evaluator(DataFile.getType(EMPTY_STRUCT),fileFilter,caseSensitive)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "evaluator = new Evaluator(DataFile.getType(EMPTY_STRUCT),fileFilter,caseSensitive)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "return Iterables.transform(matchingManifests,null)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "matchingManifests = Iterables.filter(matchingManifests,null)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ignoreDeleted@@@10@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ignoreDeleted@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "matchingManifests = Iterables.filter(matchingManifests,null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "matchingManifests = Iterables.filter(matchingManifests,null)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "entries['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->8 [style = bold, label=""];
16->13 [style = bold, label=""];
14->9 [style = solid, label="matchingManifests"];
7->1 [style = bold, label=""];
7->10 [style = dotted, label="true"];
16->13 [style = dotted, label="true"];
14->11 [style = solid, label="matchingManifests"];
7->10 [style = bold, label=""];
3->8 [style = solid, label="evalCache"];
18->11 [style = bold, label=""];
1->9 [style = solid, label="matchingManifests"];
4->1 [style = solid, label="matchingManifests"];
1->18 [style = bold, label=""];
8->6 [style = bold, label=""];
3->15 [style = bold, label=""];
23->3 [style = bold, label=""];
10->1 [style = solid, label="matchingManifests"];
14->20 [style = solid, label="matchingManifests"];
18->20 [style = dotted, label="true"];
11->19 [style = bold, label=""];
15->16 [style = bold, label=""];
8->1 [style = solid, label="matchingManifests"];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
14->1 [style = bold, label=""];
4->10 [style = solid, label="matchingManifests"];
20->11 [style = solid, label="matchingManifests"];
21->22 [style = solid, label="matchingManifests"];
6->4 [style = bold, label=""];
18->20 [style = bold, label=""];
3->14 [style = solid, label="evalCache"];
3->5 [style = bold, label=""];
9->11 [style = solid, label="matchingManifests"];
9->18 [style = bold, label=""];
6->4 [style = dotted, label="true"];
21->22 [style = bold, label=""];
8->4 [style = solid, label="matchingManifests"];
1->9 [style = dotted, label="true"];
12->14 [style = bold, label=""];
17->3 [style = bold, label=""];
9->20 [style = solid, label="matchingManifests"];
3->21 [style = bold, label=""];
17->2 [style = dotted, label="true"];
3->21 [style = solid, label="evalCache"];
0->2 [style = dotted, label="true"];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
11->19 [style = solid, label="matchingManifests"];
5->15 [style = dashed, label="0"];
16->12 [style = bold, label=""];
13->14 [style = bold, label=""];
16->12 [style = dotted, label="false"];
8->10 [style = solid, label="matchingManifests"];
20->11 [style = bold, label=""];
}
