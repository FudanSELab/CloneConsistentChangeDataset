digraph {
44 [style = filled, label = "DataCenter zone@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "getDefaultNetwork['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "s_logger.warn(\"Failed to implement network \" + guestNetwork + \" elements and resources as a part of\" + \" network provision due to \",ex)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Account callerAccount = CallContext.current().getCallingAccount()@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Network guestNetworkFinal@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CloudRuntimeException e = new CloudRuntimeException(\"Failed to implement network (with specified id)\" + \" elements and resources as a part of network provision for persistent network\")@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final Long vlanId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "long userId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Network guestNetwork = pair.third()@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "UserVO callerUser = _userDao.findById(CallContext.current().getCallingUserId())@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Long vlanId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "DataCenter zone = _dcDao.findById(zoneId)@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "associateIpAddressListToAccount['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "Ternary<Boolean,List<NetworkOfferingVO>,Network> pair = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Account owner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Pair<? extends NetworkGuru,? extends Network> implementedNetwork = _networkMgr.implementNetwork(guestNetwork.getId(),dest,context)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Exception e1@@@78@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Journal journal = new Journal.LogJournal(\"Implementing \" + guestNetwork,s_logger)@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "guestNetworkFinal != null && guestNetworkFinal.getTrafficType() != TrafficType.Guest@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw new IllegalStateException(e1)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "implementedNetwork == null || implementedNetwork.first() == null@@@97@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "implementedNetwork != null@@@100@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ReservationContext context = new ReservationContextImpl(UUID.randomUUID().toString(),journal,callerUser,callerAccount)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "pair = Transaction.execute(new TransactionCallbackWithException<Ternary<Boolean,List<NetworkOfferingVO>,Network>,Exception>(){@Override public Ternary<Boolean,List<NetworkOfferingVO>,Network> doInTransaction(TransactionStatus status){boolean createNetwork = falseNetwork guestNetwork = guestNetworkFinalif (guestNetwork == null) {List<? extends Network> networks = getIsolatedNetworksWithSourceNATOwnedByAccountInZone(zoneId,owner)if (networks.size() == 0) {createNetwork = true}if (networks.size() == 1) {guestNetwork = networks.get(0)}{throw new InvalidParameterValueException(\"Error, more than 1 Guest Isolated Networks with SourceNAT \" + \"service enabled found for this account, cannot assosiate the IP range, please provide the network ID\")}}List<NetworkOfferingVO> requiredOfferings = _networkOfferingDao.listByAvailability(Availability.Required,false)if (requiredOfferings.size() < 1) {throw new CloudRuntimeException(\"Unable to find network offering with availability=\" + Availability.Required + \" to automatically create the network as part of createVlanIpRange\")}if (createNetwork) {if (requiredOfferings.get(0).getState() == NetworkOffering.State.Enabled) {long physicalNetworkId = _networkModel.findPhysicalNetworkId(zoneId,requiredOfferings.get(0).getTags(),requiredOfferings.get(0).getTrafficType())PhysicalNetwork physicalNetwork = _physicalNetworkDao.findById(physicalNetworkId)if (physicalNetwork == null) {throw new InvalidParameterValueException(\"Unable to find physical network with id: \" + physicalNetworkId + \" and tag: \" + requiredOfferings.get(0).getTags())}s_logger.debug(\"Creating network for account \" + owner + \" from the network offering id=\" + requiredOfferings.get(0).getId() + \" as a part of createVlanIpRange process\")guestNetwork = _networkMgr.createGuestNetwork(requiredOfferings.get(0).getId(),owner.getAccountName() + \"-network\",owner.getAccountName() + \"-network\",null,null,null,false,null,owner,null,physicalNetwork,zoneId,ACLType.Account,null,null,null,null,true,null,null,null,null,null)if (guestNetwork == null) {s_logger.warn(\"Failed to create default Virtual network for the account \" + accountId + \"in zone \" + zoneId)throw new CloudRuntimeException(\"Failed to create a Guest Isolated Networks with SourceNAT \" + \"service enabled as a part of createVlanIpRange, for the account \" + accountId + \"in zone \" + zoneId)}}{throw new CloudRuntimeException(\"Required network offering id=\" + requiredOfferings.get(0).getId() + \" is not in \" + NetworkOffering.State.Enabled)}}boolean allocateSourceNat = falseList<IPAddressVO> sourceNat = _ipAddressDao.listByAssociatedNetwork(guestNetwork.getId(),true)if (sourceNat.isEmpty()) {allocateSourceNat = true}List<IPAddressVO> ips = _ipAddressDao.listByVlanId(vlanId)boolean isSourceNatAllocated = falsefor (IPAddressVO addr : ips){if (addr.getState() != State.Allocated) {if (!isSourceNatAllocated && allocateSourceNat) {addr.setSourceNat(true)isSourceNatAllocated = true}{addr.setSourceNat(false)}addr.setAssociatedWithNetworkId(guestNetwork.getId())addr.setVpcId(guestNetwork.getVpcId())addr.setAllocatedTime(new Date())addr.setAllocatedInDomainId(owner.getDomainId())addr.setAllocatedToAccountId(owner.getId())addr.setSystem(false)addr.setState(IpAddress.State.Allocating)markPublicIpAsAllocated(addr)}}return new Ternary<Boolean,List<NetworkOfferingVO>,Network>(createNetwork,requiredOfferings,guestNetwork)}})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s_logger.debug(\"Implementing network \" + guestNetwork + \" as a part of network provision for persistent network\")@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return true@@@111@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "throw e@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "e.addProxyObject(guestNetwork.getUuid(),\"networkId\")@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new InvalidParameterValueException(\"Network \" + guestNetworkFinal + \" is not of a type \" + TrafficType.Guest)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "createNetwork && requiredOfferings.get(0).isPersistent()@@@87@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final long zoneId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final long accountId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "long userId@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ExceptionUtil.rethrow(e1,)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ExceptionUtil.rethrow(e1,)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "guestNetwork = implementedNetwork.second()@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final Network guestNetworkFinal@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final Account owner = _accountMgr.getActiveAccountById(accountId)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<NetworkOfferingVO> requiredOfferings = pair.second()@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "boolean createNetwork = pair.first()@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ExceptionUtil.rethrowRuntime(e1)@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Exception ex@@@104@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "s_logger.warn(\"Failed to implement the network \" + guestNetwork)@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "boolean selectAny@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DeployDestination dest = new DeployDestination(zone,null,null,null)@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "associateIpAddressListToAccount['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final long accountId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31->25 [style = dotted, label="true"];
11->23 [style = dotted, label="true"];
42->30 [style = solid, label="vlanId"];
10->15 [style = solid, label="context"];
37->26 [style = dotted, label="true"];
16->7 [style = solid, label="guestNetworkFinal"];
27->7 [style = bold, label=""];
2->5 [style = dotted, label="true"];
21->22 [style = dotted, label="true"];
41->13 [style = bold, label=""];
19->0 [style = bold, label=""];
25->17 [style = bold, label=""];
13->30 [style = solid, label="owner"];
40->30 [style = solid, label="accountId"];
41->33 [style = dotted, label="true"];
20->25 [style = bold, label=""];
38->30 [style = solid, label="zoneId"];
46->43 [style = dotted, label="true"];
37->32 [style = dotted, label="true"];
23->13 [style = solid, label="accountId"];
41->40 [style = dotted, label="true"];
35->18 [style = bold, label=""];
46->44 [style = dotted, label="true"];
23->30 [style = solid, label="accountId"];
36->24 [style = bold, label=""];
11->4 [style = dotted, label="true"];
27->34 [style = bold, label=""];
24->14 [style = bold, label=""];
28->29 [style = bold, label=""];
21->0 [style = dotted, label="true"];
41->39 [style = dotted, label="true"];
21->18 [style = dotted, label="true"];
14->0 [style = solid, label="guestNetwork"];
14->21 [style = bold, label=""];
9->30 [style = solid, label="vlanId"];
35->18 [style = solid, label="zone"];
21->8 [style = bold, label=""];
21->2 [style = dotted, label="true"];
46->45 [style = dotted, label="true"];
21->15 [style = dotted, label="true"];
33->35 [style = solid, label="zoneId"];
11->16 [style = dotted, label="true"];
37->3 [style = dotted, label="true"];
13->27 [style = bold, label=""];
21->35 [style = dotted, label="true"];
18->15 [style = solid, label="dest"];
39->7 [style = solid, label="guestNetworkFinal"];
16->30 [style = solid, label="guestNetworkFinal"];
11->13 [style = bold, label=""];
1->15 [style = bold, label=""];
31->20 [style = dotted, label="true"];
14->1 [style = solid, label="guestNetwork"];
22->10 [style = solid, label="callerAccount"];
26->3 [style = bold, label=""];
34->30 [style = bold, label=""];
30->36 [style = bold, label=""];
28->29 [style = dotted, label="true"];
33->30 [style = solid, label="zoneId"];
11->33 [style = dotted, label="true"];
22->19 [style = bold, label=""];
5->8 [style = bold, label=""];
18->22 [style = bold, label=""];
6->26 [style = bold, label=""];
29->2 [style = bold, label=""];
21->1 [style = dotted, label="true"];
40->13 [style = solid, label="accountId"];
26->32 [style = solid, label="e"];
15->2 [style = solid, label="implementedNetwork"];
21->10 [style = dotted, label="true"];
2->8 [style = bold, label=""];
16->27 [style = solid, label="guestNetworkFinal"];
10->1 [style = bold, label=""];
14->29 [style = solid, label="guestNetwork"];
32->8 [style = bold, label=""];
39->30 [style = solid, label="guestNetworkFinal"];
31->20 [style = bold, label=""];
41->42 [style = dotted, label="true"];
31->12 [style = dotted, label="true"];
21->35 [style = bold, label=""];
39->27 [style = solid, label="guestNetworkFinal"];
28->2 [style = bold, label=""];
21->28 [style = dotted, label="true"];
27->7 [style = dotted, label="true"];
36->21 [style = solid, label="createNetwork"];
11->9 [style = dotted, label="true"];
19->10 [style = solid, label="callerUser"];
15->28 [style = solid, label="implementedNetwork"];
2->5 [style = bold, label=""];
17->12 [style = bold, label=""];
3->32 [style = bold, label=""];
0->10 [style = solid, label="journal"];
0->10 [style = bold, label=""];
15->28 [style = bold, label=""];
38->35 [style = solid, label="zoneId"];
37->6 [style = bold, label=""];
31->17 [style = dotted, label="true"];
7->34 [style = bold, label=""];
21->19 [style = dotted, label="true"];
37->6 [style = dotted, label="true"];
41->38 [style = dotted, label="true"];
12->36 [style = bold, label=""];
}
