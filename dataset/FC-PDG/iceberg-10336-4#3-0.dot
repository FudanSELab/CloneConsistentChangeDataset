digraph {
18 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"all_data_files\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Files table should have two rows\",2,expected.size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "file.put(0,FileContent.DATA.id())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"b\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_entries\")).orderBy(\"snapshot_id\").collectAsList()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "actual.sort(Comparator.comparing(null))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(\"Files table should have two rows\",2,expected.size())@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TestHelpers.assertEqualsSafe(entriesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"entries_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_data_files\")).orderBy(\"file_path\").collectAsList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "expected.add(file)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "i < expected.size()@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "i += 1@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testAllDataFilesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "table.refresh()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i += 1@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "int i = 0@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "GenericData.Record file = (GenericData.Record)record.get(\"data_file\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testAllEntriesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i < expected.size()@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Actual results should have two rows\",2,actual.size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.add((GenericData.Record)record.get(\"data_file\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expected.add(record)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testAllDataFilesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "actual.sort(Comparator.comparing(null))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"all_entries\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->39 [style = dashed, label="0"];
42->41 [style = bold, label=""];
22->15 [style = bold, label=""];
6->1 [style = dotted, label="true"];
11->29 [style = bold, label=""];
21->37 [style = dashed, label="0"];
7->8 [style = bold, label=""];
36->20 [style = bold, label=""];
2->23 [style = bold, label=""];
5->28 [style = dashed, label="0"];
20->16 [style = bold, label=""];
21->23 [style = solid, label="tableIdentifier"];
37->31 [style = bold, label=""];
23->13 [style = bold, label=""];
21->12 [style = solid, label="tableIdentifier"];
15->20 [style = bold, label=""];
6->11 [style = bold, label=""];
13->36 [style = bold, label=""];
43->8 [style = bold, label=""];
9->14 [style = bold, label=""];
35->33 [style = solid, label="i"];
13->22 [style = bold, label=""];
6->11 [style = dotted, label="true"];
4->16 [style = bold, label=""];
40->37 [style = bold, label=""];
21->0 [style = bold, label=""];
7->17 [style = dashed, label="0"];
34->33 [style = bold, label=""];
26->14 [style = bold, label=""];
14->10 [style = bold, label=""];
4->18 [style = bold, label=""];
26->4 [style = bold, label=""];
10->6 [style = solid, label="i"];
10->11 [style = solid, label="i"];
1->11 [style = bold, label=""];
21->3 [style = solid, label="tableIdentifier"];
4->28 [style = dotted, label="true"];
24->20 [style = bold, label=""];
26->16 [style = bold, label=""];
25->11 [style = solid, label="i"];
37->42 [style = solid, label="tableIdentifier"];
37->43 [style = solid, label="tableIdentifier"];
44->20 [style = bold, label=""];
39->35 [style = bold, label=""];
18->9 [style = bold, label=""];
28->26 [style = solid, label="file"];
33->38 [style = dotted, label="true"];
37->2 [style = solid, label="tableIdentifier"];
44->45 [style = bold, label=""];
4->26 [style = dotted, label="true"];
22->13 [style = dashed, label="0"];
21->8 [style = solid, label="tableIdentifier"];
27->26 [style = bold, label=""];
4->5 [style = dotted, label="true"];
1->29 [style = solid, label="i"];
4->14 [style = bold, label=""];
0->12 [style = bold, label=""];
11->29 [style = dotted, label="true"];
15->24 [style = dashed, label="0"];
45->32 [style = bold, label=""];
5->18 [style = bold, label=""];
21->0 [style = solid, label="tableIdentifier"];
10->6 [style = bold, label=""];
5->16 [style = bold, label=""];
17->43 [style = bold, label=""];
6->1 [style = bold, label=""];
31->42 [style = bold, label=""];
30->21 [style = bold, label=""];
1->6 [style = bold, label=""];
12->42 [style = dashed, label="0"];
8->2 [style = bold, label=""];
5->4 [style = bold, label=""];
38->34 [style = bold, label=""];
1->11 [style = solid, label="i"];
3->17 [style = bold, label=""];
32->39 [style = bold, label=""];
12->3 [style = bold, label=""];
35->38 [style = solid, label="i"];
16->4 [style = bold, label=""];
4->5 [style = bold, label=""];
19->21 [style = bold, label=""];
25->29 [style = solid, label="i"];
1->6 [style = solid, label="i"];
11->1 [style = bold, label=""];
33->34 [style = dotted, label="true"];
35->33 [style = bold, label=""];
37->31 [style = solid, label="tableIdentifier"];
29->25 [style = bold, label=""];
34->33 [style = solid, label="i"];
4->28 [style = bold, label=""];
20->44 [style = bold, label=""];
17->7 [style = bold, label=""];
11->38 [style = dashed, label="0"];
41->17 [style = bold, label=""];
11->25 [style = dotted, label="true"];
25->11 [style = bold, label=""];
0->31 [style = dashed, label="0"];
4->27 [style = dotted, label="true"];
33->38 [style = bold, label=""];
28->27 [style = bold, label=""];
22->24 [style = bold, label=""];
34->38 [style = solid, label="i"];
}
