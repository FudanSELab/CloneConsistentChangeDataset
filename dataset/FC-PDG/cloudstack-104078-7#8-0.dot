digraph {
11 [style = filled, label = "s_logger.debug(\"Apparently we are supposed to provide SourceNat on this network\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "devices.isEmpty()@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "vtag = BroadcastDomainType.Vlan.getValueFrom(BroadcastDomainType.fromString(vtag))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "NetworkOffering offering@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "throw new CloudRuntimeException(\"only vlans are supported for sourceNatIp, at this moment: \" + vtag)@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Network network@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "vtag = BroadcastDomainType.Vlan.getValueFrom(BroadcastDomainType.fromString(vtag))@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "CreateLogicalRouterCommand cmd = new CreateLogicalRouterCommand(niciraNvpHost.getDetail(\"l3gatewayserviceuuid\"),vlanid,BroadcastDomainType.getValue(network.getBroadcastUri()),\"router-\" + network.getDisplayText(),publicCidr,sourceNatIp.getGateway(),internalCidr,context.getDomain().getName() + \"-\" + context.getAccount().getAccountName())@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "ReservationContext context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String publicCidr = sourceNatIp.getAddress().addr() + \"/\" + NetUtils.getCidrSize(sourceNatIp.getVlanNetmask())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "networkModel.isProviderSupportServiceInNetwork(network.getId(),Service.SourceNat,Provider.NiciraNvp)@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String publicCidr = sourceNatIp.getAddress().addr() + \"/\" + NetUtils.getCidrSize(sourceNatIp.getVlanNetmask())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String internalCidr = network.getGateway() + \"/\" + network.getCidr().split(\"/\")(1(@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "HostVO niciraNvpHost = hostDao.findById(niciraNvpDevice.getHostId())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "return true@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return false@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "shutdown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Account owner = context.getAccount()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tiep = BroadcastDomainType.getTypeOf(vtag)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "throw new CloudRuntimeException(\"vlantag for sourceNatIp is not valid: \" + vtag,use)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "network.getGuestType().equals(GuestType.Shared)@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "Network network@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Network network@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "s_logger.debug(\"entering NiciraNvpElement implement function for network \" + network.getDisplayText() + \" (state \" + network.getState() + \")\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "return true@@@54@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "CreateLogicalRouterAnswer answer = (CreateLogicalRouterAnswer)agentMgr.easySend(niciraNvpHost.getId(),cmd)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "PublicIp sourceNatIp = ipAddrMgr.assignSourceNatIpAddressToGuestNetwork(owner,network)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "s_logger.warn(\"No logical router uuid found for network \" + network.getDisplayText())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "NiciraNvpDeviceVO niciraNvpDevice = devices.get(0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "boolean cleanup@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "routermapping == null@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "!canHandle(network,Service.Connectivity)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "DeployDestination dest@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "return false@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "hostDao.loadDetails(niciraNvpHost)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "return sharedNetworkSupport(network,lSwitchUuid,ownerName,niciraNvpHost)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "String internalCidr = network.getGateway() + \"/\" + network.getCidr().split(\"/\")(1(@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "String vtag = sourceNatIp.getVlanTag()@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BroadcastDomainType tiep = null@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "s_logger.error(\"Nic has no broadcast Uri with the LSwitch Uuid\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "return false@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DeployDestination dest@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "answer.getResult() == false@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new CloudRuntimeException(\"only vlans are supported for sourceNatIp, at this moment: \" + vtag)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "String lSwitchUuid = BroadcastDomainType.getValue(network.getBroadcastUri())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "String ownerName = context.getDomain().getName() + \"-\" + context.getAccount().getAccountName()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "DeleteLogicalRouterCommand cmd = new DeleteLogicalRouterCommand(routermapping.getLogicalRouterUuid())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "NetworkOffering offering@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "List<NiciraNvpDeviceVO> devices = niciraNvpDao.listByPhysicalNetwork(network.getPhysicalNetworkId())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "long vlanid = (Vlan.UNTAGGED.equals(vtag))? 0: Long.parseLong(vtag)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "network.getBroadcastUri() == null@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "s_logger.debug(\"Apparently we were providing SourceNat on this network\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "niciraNvpRouterMappingDao.remove(routermapping.getId())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return false@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "NiciraNvpRouterMappingVO routermapping = new NiciraNvpRouterMappingVO(answer.getLogicalRouterUuid(),network.getId())@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "s_logger.error(\"No NiciraNvp Controller on physical network \" + network.getPhysicalNetworkId())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "s_logger.debug(\"Apparently we are supposed to provide SourceNat on this network\")@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "niciraNvpRouterMappingDao.persist(routermapping)@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "answer.getResult() == false@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return false@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "s_logger.error(\"Failed to create Logical Router for network \" + network.getDisplayText())@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "!(tiep == BroadcastDomainType.UnDecided || tiep == BroadcastDomainType.Native)@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "PublicIp sourceNatIp = ipAddrMgr.assignSourceNatIpAddressToGuestNetwork(owner,network)@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "return true@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "DeleteLogicalRouterAnswer answer = (DeleteLogicalRouterAnswer)agentMgr.easySend(niciraNvpHost.getId(),cmd)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "NiciraNvpRouterMappingVO routermapping = niciraNvpRouterMappingDao.findByNetworkId(network.getId())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "s_logger.error(\"Failed to delete LogicalRouter for network \" + network.getDisplayText())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "s_logger.error(\"Failed to create Logical Router for network \" + network.getDisplayText())@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "URISyntaxException use@@@35@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "return false@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "CreateLogicalRouterCommand cmd = new CreateLogicalRouterCommand(niciraNvpHost.getDetail(\"l3gatewayserviceuuid\"),vlanid,BroadcastDomainType.getValue(network.getBroadcastUri()),\"router-\" + network.getDisplayText(),publicCidr,sourceNatIp.getGateway(),internalCidr,context.getDomain().getName() + \"-\" + context.getAccount().getAccountName())@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "network.getGuestType().equals(GuestType.Isolated) && networkModel.isProviderSupportServiceInNetwork(network.getId(),Service.SourceNat,Provider.NiciraNvp)@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "ReservationContext context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "String vtag = sourceNatIp.getVlanTag()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "tiep == BroadcastDomainType.Vlan@@@38@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6->52 [style = solid, label="owner"];
46->11 [style = dotted, label="true"];
66->75 [style = dotted, label="true"];
5->14 [style = bold, label=""];
46->52 [style = dotted, label="true"];
46->18 [style = dotted, label="true"];
41->14 [style = dotted, label="true"];
35->4 [style = bold, label=""];
71->75 [style = bold, label=""];
5->18 [style = dotted, label="true"];
66->71 [style = dotted, label="true"];
39->32 [style = solid, label="vtag"];
2->32 [style = dotted, label="true"];
48->4 [style = bold, label=""];
19->38 [style = bold, label=""];
4->8 [style = bold, label=""];
2->10 [style = bold, label=""];
42->50 [style = solid, label="routermapping"];
12->23 [style = bold, label=""];
42->50 [style = bold, label=""];
11->52 [style = bold, label=""];
19->40 [style = bold, label=""];
34->20 [style = bold, label=""];
48->30 [style = dotted, label="true"];
19->40 [style = dotted, label="true"];
5->13 [style = bold, label=""];
23->7 [style = dotted, label="true"];
57->39 [style = bold, label=""];
66->69 [style = bold, label=""];
51->59 [style = bold, label=""];
1->63 [style = dotted, label="true"];
1->66 [style = dotted, label="true"];
49->10 [style = solid, label="cmd"];
23->21 [style = dotted, label="true"];
1->5 [style = dotted, label="true"];
59->55 [style = solid, label="ownerName"];
44->25 [style = dotted, label="true"];
46->44 [style = dotted, label="true"];
51->55 [style = solid, label="lSwitchUuid"];
6->5 [style = bold, label=""];
63->67 [style = solid, label="cmd"];
24->27 [style = bold, label=""];
20->2 [style = bold, label=""];
3->71 [style = dashed, label="0"];
1->22 [style = bold, label=""];
60->73 [style = bold, label=""];
47->38 [style = dotted, label="true"];
40->25 [style = bold, label=""];
8->33 [style = dotted, label="true"];
35->17 [style = dotted, label="true"];
9->12 [style = bold, label=""];
24->34 [style = solid, label="internalCidr"];
1->5 [style = bold, label=""];
12->7 [style = dotted, label="true"];
38->25 [style = bold, label=""];
26->9 [style = dotted, label="true"];
5->19 [style = dotted, label="true"];
40->25 [style = solid, label="vtag"];
5->10 [style = dotted, label="true"];
5->11 [style = dotted, label="true"];
2->3 [style = dotted, label="true"];
1->67 [style = dotted, label="true"];
8->26 [style = bold, label=""];
39->16 [style = bold, label=""];
20->32 [style = bold, label=""];
25->34 [style = bold, label=""];
27->37 [style = solid, label="vtag"];
13->31 [style = bold, label=""];
11->18 [style = bold, label=""];
25->34 [style = solid, label="vlanid"];
46->49 [style = dotted, label="true"];
46->41 [style = dotted, label="true"];
2->3 [style = bold, label=""];
74->12 [style = bold, label=""];
46->45 [style = bold, label=""];
5->34 [style = dotted, label="true"];
66->71 [style = bold, label=""];
27->25 [style = solid, label="vtag"];
32->10 [style = bold, label=""];
6->31 [style = solid, label="owner"];
47->38 [style = bold, label=""];
2->32 [style = bold, label=""];
46->19 [style = dotted, label="true"];
58->59 [style = dotted, label="true"];
26->12 [style = bold, label=""];
46->42 [style = dotted, label="true"];
77->68 [style = bold, label=""];
1->77 [style = dotted, label="true"];
27->40 [style = solid, label="vtag"];
44->20 [style = dotted, label="false"];
31->15 [style = bold, label=""];
46->32 [style = dotted, label="true"];
21->36 [style = bold, label=""];
1->68 [style = dotted, label="true"];
41->14 [style = bold, label=""];
58->51 [style = dotted, label="true"];
46->16 [style = dotted, label="true"];
28->9 [style = bold, label=""];
60->70 [style = dotted, label="true"];
8->74 [style = bold, label=""];
69->76 [style = bold, label=""];
46->39 [style = dotted, label="true"];
1->55 [style = solid, label="niciraNvpHost"];
46->50 [style = dotted, label="true"];
34->20 [style = solid, label="cmd"];
48->54 [style = dotted, label="true"];
1->69 [style = dotted, label="true"];
52->18 [style = bold, label=""];
5->77 [style = bold, label=""];
22->6 [style = bold, label=""];
63->67 [style = bold, label=""];
16->19 [style = bold, label=""];
38->37 [style = bold, label=""];
19->44 [style = bold, label=""];
5->15 [style = dotted, label="true"];
15->24 [style = bold, label=""];
46->11 [style = bold, label=""];
27->11 [style = bold, label=""];
44->25 [style = bold, label=""];
44->20 [style = bold, label=""];
7->65 [style = bold, label=""];
5->27 [style = dotted, label="true"];
19->38 [style = dotted, label="false"];
48->43 [style = dotted, label="true"];
6->58 [style = bold, label=""];
39->25 [style = solid, label="vtag"];
18->49 [style = solid, label="publicCidr"];
38->44 [style = bold, label=""];
5->24 [style = dotted, label="true"];
56->14 [style = bold, label=""];
68->72 [style = dotted, label="true"];
27->18 [style = solid, label="vtag"];
26->28 [style = bold, label=""];
75->69 [style = bold, label=""];
58->46 [style = dotted, label="false"];
46->57 [style = dotted, label="true"];
15->34 [style = solid, label="publicCidr"];
39->2 [style = solid, label="vtag"];
50->45 [style = bold, label=""];
38->37 [style = dotted, label="true"];
65->36 [style = bold, label=""];
77->68 [style = solid, label="routermapping"];
39->19 [style = solid, label="vtag"];
12->65 [style = bold, label=""];
5->2 [style = dotted, label="true"];
29->31 [style = solid, label="network"];
73->8 [style = dotted, label="true"];
48->53 [style = dotted, label="true"];
60->64 [style = dotted, label="true"];
25->32 [style = solid, label="vtag"];
67->66 [style = bold, label=""];
58->55 [style = dotted, label="true"];
25->32 [style = bold, label=""];
30->52 [style = solid, label="network"];
26->28 [style = dotted, label="true"];
39->16 [style = dotted, label="true"];
73->74 [style = bold, label=""];
68->62 [style = bold, label=""];
14->42 [style = bold, label=""];
35->29 [style = dotted, label="true"];
20->2 [style = dotted, label="true"];
62->72 [style = bold, label=""];
12->23 [style = dotted, label="true"];
60->61 [style = dotted, label="true"];
30->70 [style = dashed, label="0"];
10->41 [style = solid, label="routermapping"];
1->22 [style = solid, label="niciraNvpHost"];
5->31 [style = dotted, label="true"];
68->62 [style = dotted, label="true"];
57->49 [style = solid, label="internalCidr"];
1->76 [style = bold, label=""];
5->13 [style = dotted, label="true"];
13->5 [style = dashed, label="0"];
3->32 [style = bold, label=""];
7->21 [style = bold, label=""];
35->0 [style = dotted, label="true"];
58->46 [style = bold, label=""];
72->63 [style = bold, label=""];
32->49 [style = solid, label="vlanid"];
41->56 [style = bold, label=""];
55->45 [style = bold, label=""];
68->63 [style = bold, label=""];
59->55 [style = bold, label=""];
18->19 [style = solid, label="tiep"];
18->19 [style = bold, label=""];
30->55 [style = solid, label="network"];
32->49 [style = bold, label=""];
23->36 [style = bold, label=""];
41->42 [style = bold, label=""];
33->26 [style = bold, label=""];
36->1 [style = bold, label=""];
58->51 [style = bold, label=""];
23->7 [style = bold, label=""];
49->10 [style = bold, label=""];
19->44 [style = solid, label="tiep"];
18->57 [style = bold, label=""];
35->30 [style = dotted, label="true"];
5->25 [style = dotted, label="true"];
5->41 [style = dotted, label="true"];
8->33 [style = bold, label=""];
37->25 [style = bold, label=""];
10->41 [style = bold, label=""];
5->20 [style = dotted, label="true"];
46->10 [style = dotted, label="true"];
73->8 [style = bold, label=""];
41->56 [style = dotted, label="true"];
}
