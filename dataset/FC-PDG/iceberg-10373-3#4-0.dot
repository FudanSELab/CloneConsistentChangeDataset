digraph {
16 [style = filled, label = "Dataset<Row> firstDf = spark.createDataFrame(firstBatchRecords,)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Dataset<Row> currentSnapshotResult = spark.read().format(\"iceberg\").load(tableLocation)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "long snapshotId = table.currentSnapshot().snapshotId()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Dataset<Row> df = spark.read().format(\"iceberg\").option(\"snapshot-id\",snapshotId).option(\"as-of-timestamp\",timestamp).load(tableLocation)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "HadoopTables tables = new HadoopTables(CONF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "firstDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "long timestamp = System.currentTimeMillis()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "PartitionSpec spec = PartitionSpec.unpartitioned()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long firstSnapshotTimestamp = System.currentTimeMillis()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Expected 2 snapshots\",2,Iterables.size(table.snapshots()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Dataset<Row> previousSnapshotResult = spark.read().format(\"iceberg\").option(\"as-of-timestamp\",firstSnapshotTimestamp).load(tableLocation)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "List<SimpleRecord> firstBatchRecords = Lists.newArrayList(new SimpleRecord(1,\"a\"),new SimpleRecord(2,\"b\"),new SimpleRecord(3,\"c\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSnapshotSelectionByTimestamp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSnapshotSelectionByTimestamp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "String tableLocation = temp.newFolder(\"iceberg-table\").toString()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<SimpleRecord> previousSnapshotRecords = previousSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<SimpleRecord> expectedRecords = Lists.newArrayList()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<SimpleRecord> secondBatchRecords = Lists.newArrayList(new SimpleRecord(4,\"d\"),new SimpleRecord(5,\"e\"),new SimpleRecord(6,\"f\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Dataset<Row> previousSnapshotResult = spark.read().format(\"iceberg\").option(SparkReadOptions.AS_OF_TIMESTAMP,firstSnapshotTimestamp).load(tableLocation)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "secondDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectedRecords.addAll(secondBatchRecords)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<SimpleRecord> currentSnapshotRecords = currentSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedRecords.addAll(firstBatchRecords)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "df.collectAsList()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Previous snapshot rows should match\",firstBatchRecords,previousSnapshotRecords)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Dataset<Row> secondDf = spark.createDataFrame(secondBatchRecords,)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Table table = tables.create(SCHEMA,spec,tableLocation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testSnapshotSelectionBySnapshotIdAndTimestamp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(\"Current snapshot rows should match\",expectedRecords,currentSnapshotRecords)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->11 [style = solid, label="firstBatchRecords"];
0->16 [style = bold, label=""];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
20->13 [style = bold, label=""];
2->23 [style = solid, label="tableLocation"];
22->2 [style = bold, label=""];
15->14 [style = bold, label=""];
2->19 [style = solid, label="tableLocation"];
17->20 [style = solid, label="expectedRecords"];
8->18 [style = bold, label=""];
7->11 [style = solid, label="previousSnapshotRecords"];
12->17 [style = bold, label=""];
4->21 [style = bold, label=""];
3->14 [style = solid, label="secondBatchRecords"];
2->1 [style = solid, label="tableLocation"];
10->3 [style = bold, label=""];
19->10 [style = bold, label=""];
3->6 [style = bold, label=""];
2->9 [style = bold, label=""];
0->16 [style = solid, label="firstBatchRecords"];
16->19 [style = bold, label=""];
9->8 [style = bold, label=""];
26->24 [style = bold, label=""];
2->13 [style = solid, label="tableLocation"];
8->18 [style = solid, label="spec"];
13->23 [style = dashed, label="0"];
10->27 [style = dashed, label="0"];
2->21 [style = solid, label="tableLocation"];
21->12 [style = bold, label=""];
12->20 [style = solid, label="currentSnapshotRecords"];
6->1 [style = bold, label=""];
28->2 [style = bold, label=""];
5->2 [style = bold, label=""];
3->6 [style = solid, label="secondBatchRecords"];
2->26 [style = solid, label="tableLocation"];
20->23 [style = bold, label=""];
13->7 [style = bold, label=""];
6->26 [style = dashed, label="0"];
19->27 [style = bold, label=""];
25->26 [style = bold, label=""];
17->15 [style = bold, label=""];
0->15 [style = solid, label="firstBatchRecords"];
23->7 [style = bold, label=""];
2->18 [style = solid, label="tableLocation"];
27->25 [style = bold, label=""];
18->0 [style = bold, label=""];
14->20 [style = bold, label=""];
}
