digraph {
14 [style = filled, label = "storage.delete(EasyMock.eq(bucket),EasyMock.eq(descriptorPath))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "killWithErrorTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "expectLastCall().andThrow(exception).once().andVoid().once()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "storage.delete(EasyMock.eq(bucket),EasyMock.eq(indexPath))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "storage.delete(EasyMock.eq(BUCKET),EasyMock.eq(INDEX_PATH))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "killRetryWithErrorTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectLastCall().andThrow(exception)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "killer.kill(dataSegment)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectLastCall().andThrow(exception).once().andVoid().once()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verifyAll()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "killWithErrorTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expectLastCall().andThrow(exception)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),500,\"test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "killer.kill(DATA_SEGMENT)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "replayAll()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "replayAll()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
0->16 [style = bold, label=""];
16->13 [style = bold, label=""];
7->11 [style = bold, label=""];
4->17 [style = bold, label=""];
12->15 [style = bold, label=""];
2->9 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
2->8 [style = solid, label="exception"];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
8->1 [style = bold, label=""];
5->1 [style = bold, label=""];
4->9 [style = dashed, label="0"];
11->0 [style = bold, label=""];
5->17 [style = dashed, label="0"];
17->14 [style = bold, label=""];
15->4 [style = bold, label=""];
5->8 [style = dashed, label="0"];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
4->5 [style = bold, label=""];
2->5 [style = solid, label="exception"];
3->11 [style = dashed, label="0"];
}
