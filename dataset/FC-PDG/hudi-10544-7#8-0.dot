digraph {
53 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testTable.addInflightCommit(\"00000000000001\").withBaseFilesInPartition(p0,file1P0C0).withBaseFilesInPartition(p1,file1P1C0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Pair<HoodieRequestedReplaceMetadata,HoodieReplaceCommitMetadata> replaceMetadata = generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(2).build()).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String file4P1C4 = partitionAndFileId005.get(p1)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,String> partitionAndFileId004 = testTable.forReplaceCommit(\"00000000000004\").getFileIdsWithBaseFilesInPartitions(p0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(0,hoodieCleanStatsTwo.size(),\"Must not scan any partitions and clean any files\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "metaClient.getActiveTimeline().saveAsComplete(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMMIT_ACTION,\"00000000000001\"),Option.of(commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "String file1P1C0 = UUID.randomUUID().toString()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Map<String,String> partitionAndFileId002 = testTable.forReplaceCommit(\"00000000000002\").getFileIdsWithBaseFilesInPartitions(p0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "String file3P1C2 = partitionAndFileId003.get(p1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p1,file1P1C0,file3P1C2)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCleanWithReplaceCommits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Map<String,String> partitionAndFileId005 = testTable.forReplaceCommit(\"00000000000005\").getFileIdsWithBaseFilesInPartitions(p1)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testPendingCompactions(config,48,18,false)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String file4P0C3 = partitionAndFileId004.get(p0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFour = runCleaner(config)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<String,String> partitionAndFileId003 = testTable.forReplaceCommit(\"00000000000003\").getFileIdsWithBaseFilesInPartitions(p1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testKeepLatestCommitsWithPendingCompactions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFive = runCleaner(config,2)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String file1P0C0 = UUID.randomUUID().toString()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testCleanWithReplaceCommits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(0,hoodieCleanStatsOne.size(),\"Must not scan any partitions and clean any files\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file3P1C2,file4P1C4)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "HoodieCommitMetadata commitMetadata = generateCommitMetadata(Collections.unmodifiableMap(new HashMap<String,List<String>>(){}))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String file2P0C1 = partitionAndFileId002.get(p0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsOne = runCleaner(config)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file2P0C1,file4P0C3)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String p0 = \"2020/01/01\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String p1 = \"2020/01/02\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22->35 [style = solid, label="file1P1C0"];
34->20 [style = bold, label=""];
43->55 [style = bold, label=""];
24->38 [style = solid, label="file2P0C1"];
56->1 [style = bold, label=""];
21->18 [style = solid, label="p0"];
26->4 [style = solid, label="file1P0C0"];
21->25 [style = solid, label="p0"];
38->51 [style = bold, label=""];
21->3 [style = solid, label="p0"];
27->54 [style = dashed, label="0"];
55->40 [style = bold, label=""];
21->0 [style = solid, label="p0"];
40->15 [style = bold, label=""];
10->17 [style = bold, label=""];
21->30 [style = bold, label=""];
16->5 [style = solid, label="config"];
36->33 [style = bold, label=""];
9->35 [style = solid, label="file3P1C2"];
22->46 [style = solid, label="file1P1C0"];
16->60 [style = bold, label=""];
9->35 [style = bold, label=""];
25->44 [style = bold, label=""];
47->11 [style = bold, label=""];
26->22 [style = bold, label=""];
7->9 [style = bold, label=""];
17->53 [style = bold, label=""];
37->38 [style = bold, label=""];
15->0 [style = bold, label=""];
51->47 [style = bold, label=""];
30->7 [style = solid, label="p1"];
2->36 [style = bold, label=""];
16->60 [style = solid, label="config"];
44->57 [style = dashed, label="0"];
21->4 [style = solid, label="p0"];
33->56 [style = bold, label=""];
21->37 [style = solid, label="p0"];
30->28 [style = solid, label="p1"];
19->3 [style = bold, label=""];
48->24 [style = bold, label=""];
30->29 [style = solid, label="p1"];
30->46 [style = solid, label="p1"];
39->50 [style = bold, label=""];
53->48 [style = bold, label=""];
25->57 [style = bold, label=""];
21->14 [style = solid, label="p0"];
22->46 [style = bold, label=""];
50->19 [style = bold, label=""];
35->54 [style = bold, label=""];
58->16 [style = bold, label=""];
30->36 [style = solid, label="p1"];
26->47 [style = solid, label="file1P0C0"];
16->6 [style = bold, label=""];
30->53 [style = solid, label="p1"];
30->26 [style = bold, label=""];
16->20 [style = solid, label="config"];
24->25 [style = solid, label="file2P0C1"];
41->4 [style = bold, label=""];
27->31 [style = bold, label=""];
21->43 [style = solid, label="p0"];
30->35 [style = solid, label="p1"];
12->1 [style = bold, label=""];
22->28 [style = solid, label="file1P1C0"];
13->16 [style = bold, label=""];
43->45 [style = bold, label=""];
8->37 [style = solid, label="file4P0C3"];
21->17 [style = solid, label="p0"];
57->5 [style = bold, label=""];
8->43 [style = solid, label="file4P0C3"];
22->53 [style = solid, label="file1P1C0"];
16->40 [style = solid, label="config"];
30->51 [style = solid, label="p1"];
22->11 [style = solid, label="file1P1C0"];
9->33 [style = solid, label="file3P1C2"];
21->33 [style = solid, label="p0"];
30->9 [style = solid, label="p1"];
16->1 [style = solid, label="config"];
21->32 [style = solid, label="p0"];
6->21 [style = bold, label=""];
22->19 [style = solid, label="file1P1C0"];
23->32 [style = bold, label=""];
8->15 [style = solid, label="file4P0C3"];
33->12 [style = bold, label=""];
45->55 [style = dashed, label="0"];
36->33 [style = solid, label="file4P1C4"];
16->31 [style = solid, label="config"];
26->14 [style = solid, label="file1P0C0"];
0->41 [style = bold, label=""];
30->11 [style = solid, label="p1"];
21->38 [style = solid, label="p0"];
26->39 [style = solid, label="file1P0C0"];
24->25 [style = bold, label=""];
3->8 [style = bold, label=""];
21->24 [style = solid, label="p0"];
14->29 [style = bold, label=""];
32->39 [style = bold, label=""];
21->48 [style = solid, label="p0"];
24->0 [style = solid, label="file2P0C1"];
44->5 [style = bold, label=""];
22->29 [style = solid, label="file1P1C0"];
45->40 [style = bold, label=""];
1->37 [style = bold, label=""];
30->41 [style = solid, label="p1"];
30->2 [style = solid, label="p1"];
21->15 [style = solid, label="p0"];
42->18 [style = bold, label=""];
35->27 [style = bold, label=""];
21->47 [style = solid, label="p0"];
31->23 [style = bold, label=""];
30->19 [style = solid, label="p1"];
9->51 [style = solid, label="file3P1C2"];
46->49 [style = bold, label=""];
21->39 [style = solid, label="p0"];
24->32 [style = solid, label="file2P0C1"];
21->8 [style = solid, label="p0"];
8->43 [style = bold, label=""];
24->18 [style = solid, label="file2P0C1"];
59->16 [style = bold, label=""];
52->34 [style = bold, label=""];
30->50 [style = solid, label="p1"];
26->25 [style = solid, label="file1P0C0"];
4->28 [style = bold, label=""];
20->10 [style = bold, label=""];
26->17 [style = solid, label="file1P0C0"];
9->41 [style = solid, label="file3P1C2"];
28->2 [style = bold, label=""];
9->50 [style = solid, label="file3P1C2"];
49->52 [style = bold, label=""];
54->31 [style = bold, label=""];
24->43 [style = solid, label="file2P0C1"];
29->7 [style = bold, label=""];
12->56 [style = dashed, label="0"];
5->42 [style = bold, label=""];
18->14 [style = bold, label=""];
}
