digraph {
11 [style = filled, label = "final Map<RexInputRef,Set<RexNode>> mapping = new LinkedHashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexInputRef ref = RexInputRef.of(idx,rel.getRowType().getFieldList())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RexBuilder rexBuilder = rel.getCluster().getRexBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Set<RexNode> originalExprs = mq.getExpressionLineage(input,inputRef)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return createAllPossibleExpressions(rexBuilder,outputExpression,mapping)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RelMetadataQuery mq@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final ImmutableBitSet inputFieldsUsed = extractInputRefs(outputExpression)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RexNode outputExpression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "return null@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RexNode outputExpression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return null@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RexNode outputExpression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "getExpressionLineage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "mapping.put(ref,originalExprs)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final RexInputRef inputRef = RexInputRef.of(rel.getGroupSet().nth(idx),input.getRowType().getFieldList())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "idx >= rel.getGroupCount()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "getExpressionLineage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final RexNode inputExpr = rel.getProjects().get(idx)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Aggregate rel@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final RelMetadataQuery mq@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final Set<RexNode> originalExprs = mq.getExpressionLineage(input,inputExpr)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final RelNode input = rel.getInput()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "originalExprs == null@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "getExpressionLineage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Aggregate rel@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Project rel@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RelMetadataQuery mq@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
17->20 [style = dotted, label="true"];
5->3 [style = bold, label=""];
0->12 [style = dotted, label="true"];
11->14 [style = solid, label="mapping"];
17->5 [style = bold, label=""];
12->20 [style = dashed, label="0"];
26->7 [style = bold, label=""];
5->26 [style = solid, label="input"];
17->18 [style = dotted, label="true"];
9->16 [style = solid, label="originalExprs"];
0->10 [style = dotted, label="true"];
6->9 [style = solid, label="inputRef"];
2->1 [style = bold, label=""];
26->7 [style = solid, label="originalExprs"];
16->6 [style = bold, label=""];
23->26 [style = solid, label="inputExpr"];
11->6 [style = bold, label=""];
23->26 [style = bold, label=""];
9->7 [style = solid, label="originalExprs"];
25->24 [style = dotted, label="true"];
7->4 [style = bold, label=""];
16->23 [style = bold, label=""];
3->14 [style = solid, label="rexBuilder"];
20->13 [style = solid, label="outputExpression"];
9->7 [style = bold, label=""];
13->11 [style = bold, label=""];
7->15 [style = dotted, label="true"];
1->11 [style = bold, label=""];
0->8 [style = dotted, label="true"];
10->14 [style = solid, label="outputExpression"];
20->14 [style = solid, label="outputExpression"];
2->1 [style = dotted, label="true"];
21->13 [style = solid, label="outputExpression"];
12->24 [style = dashed, label="0"];
26->16 [style = solid, label="originalExprs"];
9->26 [style = dashed, label="0"];
10->13 [style = solid, label="outputExpression"];
15->4 [style = bold, label=""];
17->19 [style = dotted, label="true"];
25->22 [style = dotted, label="true"];
3->13 [style = bold, label=""];
7->15 [style = bold, label=""];
16->14 [style = bold, label=""];
25->5 [style = bold, label=""];
1->2 [style = bold, label=""];
21->14 [style = solid, label="outputExpression"];
6->9 [style = bold, label=""];
5->9 [style = solid, label="input"];
11->23 [style = bold, label=""];
4->16 [style = solid, label="ref"];
2->11 [style = bold, label=""];
4->16 [style = bold, label=""];
25->21 [style = dotted, label="true"];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
