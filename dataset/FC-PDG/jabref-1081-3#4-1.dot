digraph {
4 [style = filled, label = "GroupNodeViewModel groupAViewModel = getViewModelForGroup(rootViewModel.addSubgroup(groupA))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "draggedOnBottomOfGroupAddsAfterItWhenSourceGroupWasBefore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "WordKeywordGroup groupA = new WordKeywordGroup(\"A\",GroupHierarchyType.INCLUDING,StandardField.KEYWORDS,\"A\",true,',',true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "GroupNodeViewModel groupCViewModel = getViewModelForGroup(rootViewModel.addSubgroup(groupC))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "groupCViewModel.draggedOn(groupBViewModel,DroppingMouseLocation.TOP)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "GroupNodeViewModel rootViewModel = getViewModelForGroup(new WordKeywordGroup(\"root\",GroupHierarchyType.INCLUDING,\"keywords\",\"A\",true,',',true))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "GroupNodeViewModel groupBViewModel = getViewModelForGroup(rootViewModel.addSubgroup(groupB))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "WordKeywordGroup groupA = new WordKeywordGroup(\"A\",GroupHierarchyType.INCLUDING,\"keywords\",\"A\",true,',',true)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Arrays.asList(groupAViewModel,groupCViewModel,groupBViewModel),rootViewModel.getChildren())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "WordKeywordGroup groupC = new WordKeywordGroup(\"C\",GroupHierarchyType.INCLUDING,StandardField.KEYWORDS,\"A > B > B1\",true,',',true)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "draggedOnTopOfGroupAddsBeforeIt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "WordKeywordGroup groupB = new WordKeywordGroup(\"B\",GroupHierarchyType.INCLUDING,StandardField.KEYWORDS,\"A > B\",true,',',true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "draggedOnTopOfGroupAddsBeforeIt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "WordKeywordGroup groupB = new WordKeywordGroup(\"B\",GroupHierarchyType.INCLUDING,\"keywords\",\"A > B\",true,',',true)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Arrays.asList(groupBViewModel,groupAViewModel,groupCViewModel),rootViewModel.getChildren())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "groupAViewModel.draggedOn(groupBViewModel,DroppingMouseLocation.BOTTOM)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "WordKeywordGroup groupC = new WordKeywordGroup(\"C\",GroupHierarchyType.INCLUDING,\"keywords\",\"A > B > B1\",true,',',true)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "GroupNodeViewModel rootViewModel = getViewModelForGroup(new WordKeywordGroup(\"root\",GroupHierarchyType.INCLUDING,StandardField.KEYWORDS,\"A\",true,',',true))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
10->7 [style = solid, label="groupC"];
9->10 [style = dashed, label="0"];
7->17 [style = solid, label="groupCViewModel"];
9->7 [style = solid, label="groupC"];
9->4 [style = bold, label=""];
11->12 [style = bold, label=""];
8->2 [style = solid, label="groupB"];
2->6 [style = solid, label="groupBViewModel"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
16->17 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
2->16 [style = solid, label="groupBViewModel"];
8->13 [style = dashed, label="0"];
7->6 [style = solid, label="groupCViewModel"];
5->16 [style = dashed, label="0"];
12->13 [style = bold, label=""];
13->2 [style = solid, label="groupB"];
7->5 [style = bold, label=""];
2->17 [style = solid, label="groupBViewModel"];
3->12 [style = dashed, label="0"];
5->6 [style = bold, label=""];
4->6 [style = solid, label="groupAViewModel"];
3->8 [style = bold, label=""];
15->0 [style = bold, label=""];
7->16 [style = bold, label=""];
12->4 [style = solid, label="groupA"];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
3->4 [style = solid, label="groupA"];
4->17 [style = solid, label="groupAViewModel"];
2->7 [style = bold, label=""];
14->11 [style = bold, label=""];
2->5 [style = solid, label="groupBViewModel"];
}
