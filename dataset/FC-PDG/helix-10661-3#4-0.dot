digraph {
2 [style = filled, label = "Map<Partition,Map<String,String>> bestPossibleState@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Map<String,Map<String,String>> bestPossibleStateMap = convertBestPossibleState(bestPossibleState)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "removeEntryWithIgnoredStates(bestPossibleStateMap.entrySet().iterator(),ignoreStaes)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verifyExternalView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "ExternalView externalView@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "verifyExternalView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Set<String> ignoreStaes = new HashSet<String>(Arrays.asList(stateModelDef.getInitialState(),HelixDefinedState.DROPPED.toString()))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "removeEntryWithIgnoredStates(externalViewMap.entrySet().iterator(),ignoreStaes)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ExternalView externalView@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,Map<String,String>> externalViewMap = externalView.getRecord().getMapFields()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PartitionStateMap bestPossibleState@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "StateModelDefinition stateModelDef@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StateModelDefinition stateModelDef@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "IdealState idealState@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "ExternalView externalView@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return externalViewMap.equals(bestPossibleStateMap)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verifyExternalView['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Set<String> ignoreStaes = new HashSet<>(Arrays.asList(stateModelDef.getInitialState(),HelixDefinedState.DROPPED.toString()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "return externalViewMap.equals(bestPossibleStateMap)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<Partition,Map<String,String>> bestPossibleState@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
6->3 [style = bold, label=""];
16->0 [style = bold, label=""];
1->8 [style = bold, label=""];
14->12 [style = dotted, label="true"];
2->0 [style = solid, label="bestPossibleState"];
3->1 [style = bold, label=""];
0->6 [style = bold, label=""];
18->19 [style = dotted, label="true"];
7->0 [style = bold, label=""];
10->9 [style = dotted, label="true"];
10->5 [style = dotted, label="true"];
10->7 [style = bold, label=""];
14->13 [style = dotted, label="true"];
9->19 [style = dashed, label="0"];
0->8 [style = solid, label="bestPossibleStateMap"];
19->16 [style = solid, label="bestPossibleState"];
7->1 [style = solid, label="ignoreStaes"];
10->2 [style = dotted, label="true"];
11->0 [style = solid, label="bestPossibleState"];
15->0 [style = bold, label=""];
9->13 [style = dashed, label="0"];
15->6 [style = solid, label="ignoreStaes"];
7->15 [style = dashed, label="0"];
14->11 [style = dotted, label="true"];
14->15 [style = bold, label=""];
18->17 [style = dotted, label="true"];
10->4 [style = dotted, label="true"];
7->6 [style = solid, label="ignoreStaes"];
16->3 [style = solid, label="bestPossibleStateMap"];
15->1 [style = solid, label="ignoreStaes"];
18->16 [style = bold, label=""];
}
