digraph {
4 [style = filled, label = "selector.start()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.LOST.name(),\"release\")) || next.equals(Arrays.asList(\"release\",ConnectionState.LOST.name())),next.toString())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testErrorPolicies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "server = new TestingServer()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final BlockingQueue<String> changes = Queues.newLinkedBlockingQueue()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "server.stop()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client.start()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ConnectionStateListener stateListener = new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){changes.add(newState.name())}}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "client.close()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "next.add(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "server.close()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "{CloseableUtils.closeQuietly(selector)CloseableUtils.closeQuietly(client)}@@@58@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "selector.close()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "client.start()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionErrorPolicy()).build()@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LeaderSelectorListener listener = new LeaderSelectorListenerAdapter(){@Override public void takeLeadership(CuratorFramework client){changes.add(\"leader\")try {Thread.currentThread().join()}catch (InterruptedException e) }}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.SUSPENDED.name(),\"release\")) || next.equals(Arrays.asList(\"release\",ConnectionState.SUSPENDED.name())),next.toString())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "client.getConnectionStateListenable().addListener(listener)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.start()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LeaderSelector selector = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "next = Lists.newArrayList()@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ConnectionStateListener listener = new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){states.add(newState)}}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "changes.clear()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "next.add(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardConnectionStateErrorPolicy()).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "timing.sleepABit()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "selector.start()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionConnectionStateErrorPolicy()).build()@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@120c6e1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testErrorPolicies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<String> next = Lists.newArrayList()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "next.add(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "states = Queues.newLinkedBlockingQueue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardErrorPolicy()).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "next.add(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
28->29 [style = bold, label=""];
45->41 [style = bold, label=""];
18->3 [style = bold, label=""];
13->8 [style = solid, label="listener"];
13->5 [style = solid, label="listener"];
43->42 [style = solid, label="listener"];
19->12 [style = bold, label=""];
4->6 [style = bold, label=""];
10->39 [style = dashed, label="0"];
32->0 [style = bold, label=""];
25->9 [style = bold, label=""];
16->42 [style = dashed, label="0"];
43->42 [style = bold, label=""];
30->32 [style = bold, label=""];
38->36 [style = bold, label=""];
47->46 [style = bold, label=""];
40->34 [style = bold, label=""];
16->17 [style = bold, label=""];
29->23 [style = bold, label=""];
27->16 [style = bold, label=""];
7->20 [style = bold, label=""];
39->33 [style = solid, label="client"];
2->38 [style = dashed, label="0"];
1->7 [style = bold, label=""];
12->37 [style = bold, label=""];
6->15 [style = bold, label=""];
20->33 [style = bold, label=""];
39->5 [style = solid, label="client"];
24->30 [style = bold, label=""];
39->22 [style = bold, label=""];
26->38 [style = bold, label=""];
26->2 [style = bold, label=""];
37->14 [style = bold, label=""];
11->5 [style = bold, label=""];
21->31 [style = bold, label=""];
36->27 [style = bold, label=""];
3->19 [style = bold, label=""];
34->26 [style = bold, label=""];
15->28 [style = bold, label=""];
31->10 [style = bold, label=""];
5->33 [style = solid, label="selector"];
5->4 [style = bold, label=""];
10->5 [style = solid, label="client"];
2->36 [style = bold, label=""];
23->1 [style = bold, label=""];
0->18 [style = bold, label=""];
27->22 [style = solid, label="stateListener"];
17->13 [style = bold, label=""];
31->39 [style = bold, label=""];
41->47 [style = bold, label=""];
10->33 [style = solid, label="client"];
27->16 [style = solid, label="stateListener"];
13->8 [style = bold, label=""];
35->34 [style = bold, label=""];
44->45 [style = bold, label=""];
8->25 [style = bold, label=""];
9->24 [style = bold, label=""];
14->21 [style = bold, label=""];
22->11 [style = bold, label=""];
2->8 [style = solid, label="client"];
38->8 [style = solid, label="client"];
46->43 [style = bold, label=""];
}
