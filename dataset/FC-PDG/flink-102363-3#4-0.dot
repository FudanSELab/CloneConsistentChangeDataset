digraph {
7 [style = filled, label = "assertEquals(KubernetesUtils.getInternalServiceName(CLUSTER_ID) + \".\" + NAMESPACE,this.flinkConfig.getString(JobManagerOptions.ADDRESS))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<ServicePort> expectedServicePorts = Collections.singletonList(new ServicePortBuilder().withName(\"rest-port\").withPort(REST_PORT).build())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testBuildAccompanyingKubernetesResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Map<String,String> expectedLabels = getCommonLabels()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Constants.API_VERSION,internalService.getApiVersion())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(expectedLabels,restService.getSpec().getSelector())@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(expectedLabels,restService.getMetadata().getLabels())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Service internalService = (Service)resources.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Service restService = (Service)resources.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testBuildAccompanyingKubernetesResources['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<ServicePort> expectedServicePorts = Arrays.asList(new ServicePortBuilder().withName(\"rest-port\").withPort(REST_PORT).build(),new ServicePortBuilder().withName(\"jobmanager-rpc-port\").withPort(RPC_PORT).build(),new ServicePortBuilder().withName(\"blob-server-port\").withPort(BLOB_SERVER_PORT).build())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"ClusterIP\",internalService.getSpec().getType())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"LoadBalancer\",restService.getSpec().getType())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(expectedLabels,internalService.getSpec().getSelector())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<ServicePort> expectedServicePorts = Arrays.asList(new ServicePortBuilder().withName(Constants.REST_PORT_NAME).withPort(REST_PORT).build(),new ServicePortBuilder().withName(Constants.JOB_MANAGER_RPC_PORT_NAME).withPort(RPC_PORT).build(),new ServicePortBuilder().withName(Constants.BLOB_SERVER_PORT_NAME).withPort(BLOB_SERVER_PORT).build())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(Constants.API_VERSION,restService.getApiVersion())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expectedLabels.put(Constants.LABEL_COMPONENT_KEY,Constants.LABEL_COMPONENT_JOB_MANAGER)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final List<HasMetadata> resources = this.internalServiceDecorator.buildAccompanyingKubernetesResources()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(KubernetesUtils.getInternalServiceName(CLUSTER_ID),internalService.getMetadata().getName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(KubernetesUtils.getRestServiceName(CLUSTER_ID),restService.getMetadata().getName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final List<HasMetadata> resources = this.externalServiceDecorator.buildAccompanyingKubernetesResources()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(expectedLabels,internalService.getMetadata().getLabels())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,resources.size())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(expectedServicePorts,restService.getSpec().getPorts())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(expectedServicePorts,internalService.getSpec().getPorts())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testBuildAccompanyingKubernetesResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
3->11 [style = solid, label="expectedServicePorts"];
4->14 [style = bold, label=""];
20->17 [style = bold, label=""];
22->2 [style = bold, label=""];
17->6 [style = bold, label=""];
0->6 [style = bold, label=""];
9->4 [style = bold, label=""];
3->24 [style = dashed, label="0"];
3->11 [style = bold, label=""];
11->23 [style = dashed, label="0"];
16->2 [style = solid, label="expectedLabels"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
16->1 [style = solid, label="expectedLabels"];
0->17 [style = dashed, label="0"];
10->2 [style = dashed, label="0"];
21->18 [style = bold, label=""];
11->2 [style = bold, label=""];
13->1 [style = bold, label=""];
1->9 [style = bold, label=""];
19->24 [style = bold, label=""];
9->1 [style = dashed, label="0"];
12->13 [style = bold, label=""];
23->22 [style = bold, label=""];
1->10 [style = solid, label="expectedLabels"];
14->11 [style = solid, label="expectedServicePorts"];
5->0 [style = bold, label=""];
16->1 [style = bold, label=""];
15->0 [style = bold, label=""];
1->9 [style = solid, label="expectedLabels"];
12->18 [style = dashed, label="0"];
4->19 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
1->19 [style = bold, label=""];
14->11 [style = bold, label=""];
8->12 [style = bold, label=""];
24->23 [style = solid, label="expectedServicePorts"];
25->21 [style = bold, label=""];
6->25 [style = bold, label=""];
24->23 [style = bold, label=""];
18->16 [style = bold, label=""];
}
