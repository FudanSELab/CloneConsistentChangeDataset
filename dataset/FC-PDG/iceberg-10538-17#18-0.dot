digraph {
7 [style = filled, label = "iter = builder.build()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "task.file().format() == FileFormat.ORC@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "nameMapping != null@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "builder.withNameMapping(NameMappingParser.fromJson(nameMapping))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Set<Integer> metadataFieldIds = MetadataColumns.metadataFieldIds()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "builder.withNameMapping(NameMappingParser.fromJson(nameMapping))@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Parquet.ReadBuilder builder = Parquet.read(location).project(expectedSchema).split(task.start(),task.length()).createBatchedReaderFunc(null).recordsPerBatch(batchSize).filter(task.residual()).caseSensitive(caseSensitive).reuseContainers()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "FileScanTask task@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "nameMapping != null@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "ORC.ReadBuilder builder = ORC.read(location).project(schemaWithoutConstantAndMetadataFields).split(task.start(),task.length()).createBatchedReaderFunc(null).recordsPerBatch(batchSize).filter(task.residual()).caseSensitive(caseSensitive)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "Schema readSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Schema schemaWithoutConstantAndMetadataFields = TypeUtil.selectNot(expectedSchema,constantAndMetadataFieldIds)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "nameMapping != null@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "open['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "InputFile location = getInputFile(task)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Schema readSchemaWithoutConstantAndMetadataFields = TypeUtil.selectNot(readSchema,Sets.union(idToConstant.keySet(),MetadataColumns.metadataFieldIds()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<Integer,?> idToConstant = PartitionUtil.constantsMap(task,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "task.file().format() == FileFormat.PARQUET@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "FileScanTask task@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "open['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Set<Integer> constantFieldIds = idToConstant.keySet()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "InputFileBlockHolder.set(file.path().toString(),task.start(),task.length())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return iter.iterator()@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Sets.SetView<Integer> constantAndMetadataFieldIds = Sets.union(constantFieldIds,metadataFieldIds)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Schema schemaWithoutConstants = TypeUtil.selectNot(expectedSchema,idToConstant.keySet())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "newOrcIterable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "DataFile file = task.file()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return iter.iterator()@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "builder.withNameMapping(NameMappingParser.fromJson(nameMapping))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ORC.ReadBuilder builder = ORC.read(location).project(readSchemaWithoutConstantAndMetadataFields).split(task.start(),task.length()).createReaderFunc(null).filter(task.residual()).caseSensitive(caseSensitive)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ORC.ReadBuilder builder = ORC.read(location).project(schemaWithoutConstants).split(task.start(),task.length()).createBatchedReaderFunc(null).recordsPerBatch(batchSize).filter(task.residual()).caseSensitive(caseSensitive)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CloseableIterable<ColumnarBatch> iter@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Map<Integer,?> idToConstant@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "nameMapping != null@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "InputFile location@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "iter = builder.build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "return builder.build()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "builder.withNameMapping(NameMappingParser.fromJson(nameMapping))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Preconditions.checkNotNull(location,\"Could not find InputFile associated with FileScanTask\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "throw new UnsupportedOperationException(\"Format: \" + task.file().format() + \" not supported for batched reads\")@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16->19 [style = dotted, label="true"];
10->18 [style = bold, label=""];
13->17 [style = dotted, label="true"];
13->24 [style = dotted, label="true"];
15->2 [style = bold, label=""];
25->28 [style = bold, label=""];
18->9 [style = solid, label="location"];
1->8 [style = bold, label=""];
13->28 [style = dotted, label="true"];
23->27 [style = bold, label=""];
13->23 [style = dotted, label="false"];
2->29 [style = dotted, label="true"];
11->14 [style = bold, label=""];
13->25 [style = dotted, label="true"];
2->6 [style = bold, label=""];
0->12 [style = bold, label=""];
37->30 [style = solid, label="readSchema"];
22->21 [style = solid, label="constantFieldIds"];
33->34 [style = dotted, label="true"];
12->1 [style = dotted, label="true"];
14->10 [style = bold, label=""];
5->15 [style = bold, label=""];
24->21 [style = solid, label="metadataFieldIds"];
36->32 [style = bold, label=""];
30->36 [style = bold, label=""];
8->6 [style = bold, label=""];
13->5 [style = dotted, label="true"];
26->19 [style = dotted, label="true"];
13->7 [style = dotted, label="true"];
21->25 [style = bold, label=""];
12->1 [style = bold, label=""];
11->36 [style = dashed, label="0"];
5->15 [style = dotted, label="true"];
3->0 [style = bold, label=""];
19->14 [style = solid, label="task"];
13->4 [style = dotted, label="true"];
13->2 [style = dotted, label="true"];
19->18 [style = solid, label="task"];
28->2 [style = bold, label=""];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
13->7 [style = dotted, label="false"];
19->38 [style = dashed, label="0"];
33->35 [style = dotted, label="true"];
13->22 [style = dotted, label="true"];
24->21 [style = bold, label=""];
13->21 [style = dotted, label="true"];
12->8 [style = bold, label=""];
13->7 [style = bold, label=""];
3->12 [style = dotted, label="true"];
8->39 [style = dashed, label="0"];
7->6 [style = bold, label=""];
18->9 [style = bold, label=""];
13->23 [style = bold, label=""];
7->27 [style = bold, label=""];
3->13 [style = bold, label=""];
33->30 [style = bold, label=""];
9->3 [style = bold, label=""];
21->25 [style = solid, label="constantAndMetadataFieldIds"];
29->7 [style = bold, label=""];
3->0 [style = dotted, label="true"];
32->39 [style = bold, label=""];
13->22 [style = bold, label=""];
31->39 [style = bold, label=""];
22->24 [style = bold, label=""];
2->7 [style = bold, label=""];
33->38 [style = dotted, label="true"];
33->37 [style = dotted, label="true"];
2->29 [style = bold, label=""];
16->20 [style = bold, label=""];
8->27 [style = bold, label=""];
3->8 [style = dotted, label="true"];
4->5 [style = bold, label=""];
3->13 [style = dotted, label="false"];
32->31 [style = bold, label=""];
17->4 [style = bold, label=""];
32->31 [style = dotted, label="true"];
26->20 [style = bold, label=""];
20->11 [style = bold, label=""];
17->22 [style = dashed, label="0"];
}
