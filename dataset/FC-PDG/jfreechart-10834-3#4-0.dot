digraph {
5 [style = filled, label = "assertTrue(m2.equals(m1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(m1.equals(m2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(m1.equals(m2))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),0.5f)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertTrue(m1.equals(m2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "MatrixSeries m2 = (MatrixSeries)m1.clone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "m1.update(7,2,22.0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertTrue(m1.equals(m2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertFalse(m1.equals(m2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),0.5f)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(3.3f),1.0f)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(3.3f),1.0f)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertTrue(m1.equals(m2))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),0.5f)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "MatrixSeries m1 = new MatrixSeries(\"Test\",8,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertFalse(m1.equals(m2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(m1.equals(m2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),1.0f)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertFalse(m1.equals(m2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),1.0f)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),1.0f)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertTrue(m1.equals(m2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(3.3f),1.0f)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "m1.update(0,0,11.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CategoryMarker m2 = new CategoryMarker(\"A\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "m1 = new CategoryMarker(\"B\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(m1 != m2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertFalse(m1.equals(m2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),0.5f)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(m1.equals(m2))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(m1.equals(m2))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(3.3f),1.0f)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(2.2f),Color.RED,new BasicStroke(1.0f),1.0f)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertTrue(m1.equals(m2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->14 [style = solid, label="m2"];
7->30 [style = bold, label=""];
32->0 [style = bold, label=""];
0->5 [style = solid, label="m1"];
35->3 [style = solid, label="m2"];
19->3 [style = solid, label="m2"];
12->9 [style = bold, label=""];
25->35 [style = bold, label=""];
3->4 [style = bold, label=""];
15->38 [style = dashed, label="0"];
19->6 [style = solid, label="m2"];
3->36 [style = bold, label=""];
18->22 [style = bold, label=""];
4->36 [style = dashed, label="0"];
30->17 [style = solid, label="m2"];
43->8 [style = bold, label=""];
25->19 [style = bold, label=""];
18->22 [style = solid, label="m2"];
28->30 [style = dashed, label="0"];
15->26 [style = solid, label="m2"];
19->3 [style = bold, label=""];
9->24 [style = bold, label=""];
18->29 [style = dashed, label="0"];
14->37 [style = bold, label=""];
36->6 [style = bold, label=""];
13->34 [style = bold, label=""];
37->26 [style = bold, label=""];
14->10 [style = bold, label=""];
10->26 [style = bold, label=""];
21->25 [style = bold, label=""];
18->25 [style = solid, label="m2"];
35->6 [style = solid, label="m2"];
24->18 [style = bold, label=""];
13->11 [style = bold, label=""];
33->13 [style = bold, label=""];
6->38 [style = bold, label=""];
46->42 [style = solid, label="m1"];
9->31 [style = dashed, label="0"];
41->46 [style = bold, label=""];
33->7 [style = solid, label="m2"];
39->25 [style = bold, label=""];
19->35 [style = dashed, label="0"];
20->33 [style = dashed, label="0"];
12->31 [style = bold, label=""];
26->20 [style = bold, label=""];
40->8 [style = solid, label="m2"];
0->16 [style = bold, label=""];
20->13 [style = bold, label=""];
1->8 [style = bold, label=""];
30->17 [style = bold, label=""];
23->5 [style = bold, label=""];
35->3 [style = bold, label=""];
15->14 [style = bold, label=""];
11->34 [style = dashed, label="0"];
31->24 [style = bold, label=""];
8->12 [style = solid, label="m2"];
16->23 [style = bold, label=""];
45->44 [style = bold, label=""];
6->15 [style = bold, label=""];
21->39 [style = dashed, label="0"];
20->13 [style = solid, label="m2"];
38->14 [style = solid, label="m2"];
2->0 [style = bold, label=""];
7->28 [style = bold, label=""];
28->17 [style = bold, label=""];
22->39 [style = bold, label=""];
28->17 [style = solid, label="m2"];
0->46 [style = dashed, label="0"];
8->12 [style = bold, label=""];
27->1 [style = bold, label=""];
42->43 [style = bold, label=""];
4->6 [style = bold, label=""];
22->21 [style = bold, label=""];
44->40 [style = bold, label=""];
34->7 [style = bold, label=""];
24->29 [style = bold, label=""];
29->25 [style = solid, label="m2"];
40->42 [style = solid, label="m2"];
38->14 [style = bold, label=""];
20->7 [style = solid, label="m2"];
29->22 [style = solid, label="m2"];
38->26 [style = solid, label="m2"];
16->1 [style = solid, label="m2"];
16->23 [style = solid, label="m2"];
10->37 [style = dashed, label="0"];
46->45 [style = bold, label=""];
5->27 [style = bold, label=""];
29->22 [style = bold, label=""];
26->33 [style = bold, label=""];
33->13 [style = solid, label="m2"];
40->42 [style = bold, label=""];
11->7 [style = bold, label=""];
8->24 [style = solid, label="m2"];
}
