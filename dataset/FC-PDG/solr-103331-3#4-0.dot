digraph {
43 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER,true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(0,scratch.length)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertFalse(bits.get(0))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "doc.add(new StoredField(\"bogusbits\",\"bogus\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "dir.close()@@@30@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "doc.add(new StoredField(\"bogusfloats\",\"bogus\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER,true)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "iw.close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "iw.addDocument(doc)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "BytesRef scratch = binaries.get(0)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "doc.add(new StoredField(\"boguslongs\",\"bogus\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertEquals(NO_MORE_DOCS,binaries.nextDoc())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(0,floats.get(0))@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(NO_MORE_DOCS,doubles.nextDoc())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(0,doubles.get(0))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(-1,sorted.getOrd(0))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "ir.close()@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER,true)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "doc.add(new StoredField(\"bogusshorts\",\"bogus\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER,true)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "testNonIndexedFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(0,scratch.length)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "doc.add(new StoredField(\"bogusdoubles\",\"bogus\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RandomIndexWriter iw = new RandomIndexWriter(random(),dir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,ints.get(0))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dir.close()@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final FieldCache cache = FieldCache.DEFAULT@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\",true)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Document doc = new Document()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(NO_MORE_DOCS,sortedSet.nextDoc())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "DirectoryReader ir = iw.getReader()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(NO_MORE_DOCS,floats.nextDoc())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testNonexistantFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testNonexistantFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "doc.add(new StoredField(\"bogusbytes\",\"bogus\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Bits bits = cache.getDocsWithField(ar,\"bogusbits\",null)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertFalse(bits.get(0))@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(0,longs.get(0))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "SortedSetDocValues sortedSet = cache.getDocTermOrds(ar,\"bogusmultivalued\",null)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "LeafReader ar = getOnlyLeafReader(ir)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER,true)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER,true)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(NO_MORE_DOCS,sorted.nextDoc())@@@24@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "ir.close()@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "sortedSet.setDocument(0)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "scratch = sorted.get(0)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER,true)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "cache.purgeAllCaches()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER,true)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "SortedDocValues sorted = cache.getTermsIndex(ar,\"bogustermsindex\")@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "doc.add(new StoredField(\"bogusints\",\"bogus\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(NO_MORE_DOCS,ints.nextDoc())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(NO_MORE_DOCS,longs.nextDoc())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17->25 [style = bold, label=""];
40->49 [style = bold, label=""];
1->55 [style = dashed, label="0"];
14->9 [style = solid, label="ar"];
29->30 [style = bold, label=""];
6->22 [style = bold, label=""];
50->44 [style = bold, label=""];
24->58 [style = bold, label=""];
1->20 [style = bold, label=""];
14->16 [style = solid, label="ar"];
33->0 [style = bold, label=""];
26->12 [style = bold, label=""];
21->36 [style = bold, label=""];
48->43 [style = bold, label=""];
45->38 [style = bold, label=""];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
2->32 [style = bold, label=""];
19->15 [style = bold, label=""];
37->33 [style = bold, label=""];
8->11 [style = bold, label=""];
56->53 [style = bold, label=""];
16->58 [style = dashed, label="0"];
25->62 [style = bold, label=""];
1->43 [style = dashed, label="0"];
54->60 [style = bold, label=""];
22->9 [style = bold, label=""];
14->55 [style = solid, label="ar"];
31->2 [style = bold, label=""];
14->2 [style = solid, label="ar"];
13->62 [style = dashed, label="0"];
57->32 [style = bold, label=""];
7->33 [style = bold, label=""];
16->34 [style = dashed, label="0"];
36->46 [style = bold, label=""];
14->49 [style = solid, label="ar"];
31->57 [style = bold, label=""];
39->35 [style = bold, label=""];
28->19 [style = bold, label=""];
30->10 [style = bold, label=""];
4->5 [style = dashed, label="0"];
14->13 [style = solid, label="ar"];
27->29 [style = bold, label=""];
52->51 [style = bold, label=""];
35->34 [style = bold, label=""];
32->48 [style = dashed, label="0"];
14->21 [style = solid, label="ar"];
14->41 [style = solid, label="ar"];
12->14 [style = solid, label="ir"];
44->42 [style = bold, label=""];
46->9 [style = bold, label=""];
13->24 [style = bold, label=""];
25->39 [style = bold, label=""];
11->21 [style = bold, label=""];
14->43 [style = solid, label="ar"];
18->26 [style = bold, label=""];
42->47 [style = bold, label=""];
14->5 [style = solid, label="ar"];
6->40 [style = dashed, label="0"];
14->57 [style = solid, label="ar"];
38->48 [style = bold, label=""];
9->27 [style = bold, label=""];
13->39 [style = dashed, label="0"];
14->34 [style = solid, label="ar"];
14->23 [style = bold, label=""];
41->40 [style = bold, label=""];
16->31 [style = bold, label=""];
62->24 [style = bold, label=""];
32->1 [style = bold, label=""];
5->4 [style = bold, label=""];
47->5 [style = bold, label=""];
53->26 [style = bold, label=""];
14->58 [style = solid, label="ar"];
0->18 [style = bold, label=""];
14->1 [style = solid, label="ar"];
12->3 [style = bold, label=""];
19->42 [style = dashed, label="0"];
18->26 [style = solid, label="doc"];
14->28 [style = solid, label="ar"];
43->50 [style = bold, label=""];
21->6 [style = bold, label=""];
55->20 [style = bold, label=""];
20->29 [style = bold, label=""];
25->13 [style = bold, label=""];
2->57 [style = dashed, label="0"];
34->45 [style = bold, label=""];
3->14 [style = bold, label=""];
20->28 [style = bold, label=""];
31->45 [style = dashed, label="0"];
59->52 [style = bold, label=""];
51->56 [style = bold, label=""];
58->31 [style = bold, label=""];
14->44 [style = solid, label="ar"];
60->59 [style = bold, label=""];
2->38 [style = dashed, label="0"];
49->21 [style = bold, label=""];
14->39 [style = solid, label="ar"];
15->5 [style = bold, label=""];
20->50 [style = dashed, label="0"];
33->0 [style = solid, label="dir"];
24->16 [style = bold, label=""];
32->55 [style = bold, label=""];
5->41 [style = bold, label=""];
14->38 [style = solid, label="ar"];
14->62 [style = solid, label="ar"];
28->44 [style = dashed, label="0"];
24->35 [style = dashed, label="0"];
14->47 [style = solid, label="ar"];
18->54 [style = bold, label=""];
61->33 [style = bold, label=""];
}
