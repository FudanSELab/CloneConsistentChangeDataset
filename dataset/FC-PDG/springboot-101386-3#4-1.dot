digraph {
11 [style = filled, label = "Bindable<Integer> target = Bindable.of()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "this.sources.add(new MockConfigurationPropertySource(\"foo.bar\",\"a,b,c\",\"line1\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "bindToMapStringArrayShouldTriggerOnSuccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "this.sources.add(new MockConfigurationPropertySource(\"foo\",\"1\",\"line1\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ordered.verify(handler).onSuccess(eq(ConfigurationPropertyName.of(\"foo\")),eq(target),any(),eq(1))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ArgumentCaptor<String((> array = ArgumentCaptor.forClass()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ordered.verify(handler).onSuccess(eq(ConfigurationPropertyName.of(\"foo.bar\")),eq(Bindable.of()),any(),array.capture())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "bindToValueShouldTriggerOnSuccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "InOrder ordered = inOrder(handler)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(array.getValue()).containsExactly(\"a\",\"b\",\"c\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ordered.verify(handler).onSuccess(eq(ConfigurationPropertyName.of(\"foo\")),eq(target),any(),isA())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Bindable<Map<String,String((>> target = STRING_ARRAY_MAP@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BindHandler handler = mock(,withSettings().defaultAnswer(Answers.CALLS_REAL_METHODS))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.binder.bind(\"foo\",target,handler)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "bindToMapStringArrayShouldTriggerOnSuccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
0->9 [style = solid, label="target"];
12->5 [style = bold, label=""];
9->2 [style = bold, label=""];
2->3 [style = bold, label=""];
3->6 [style = bold, label=""];
5->2 [style = solid, label="handler"];
0->4 [style = solid, label="target"];
8->12 [style = dashed, label="0"];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
11->13 [style = solid, label="target"];
2->13 [style = bold, label=""];
11->9 [style = solid, label="target"];
6->1 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
10->8 [style = bold, label=""];
14->12 [style = bold, label=""];
5->9 [style = solid, label="handler"];
5->11 [style = bold, label=""];
}
