digraph {
28 [style = filled, label = "actual instanceof ExistsSubqueryExpression@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final ExpectedCallParameter expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ExpressionAssert.assertLiteralExpression(assertContext,(LiteralExpressionSegment)actual,expected.getLiteralExpression())@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertExistsSubqueryExpression(assertContext,(ExistsSubqueryExpression)actual,expected.getExistsSubquery())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw new UnsupportedOperationException(String.format(\"Unsupported expression : %s.\",actual.getClass().getName()))@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ExpressionSegment actual@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ProjectionAssert.assertProjection(assertContext,(AggregationProjectionSegment)actual,expected.getAggregationProjection())@@@45@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "actual instanceof ColumnSegment@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "actual instanceof ExpressionProjectionSegment@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final ExpressionSegment actual@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "actual instanceof AggregationProjectionSegment@@@44@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "null == expected@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "actual instanceof BetweenExpression@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "actual instanceof BinaryOperationExpression@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "actual instanceof SubqueryExpressionSegment@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "actual instanceof ParameterMarkerExpressionSegment@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ColumnAssert.assertIs(assertContext,(ColumnSegment)actual,expected.getColumn())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ExpressionAssert.assertParameterMarkerExpression(assertContext,(ParameterMarkerExpressionSegment)actual,expected.getParameterMarkerExpression())@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertParameter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "actual instanceof ListExpression@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertBinaryOperationExpression(assertContext,(BinaryOperationExpression)actual,expected.getBinaryOperationExpression())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "actual instanceof ParameterMarkerExpressionSegment@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertNotExpression(assertContext,(NotExpression)actual,expected.getNotExpression())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final ExpectedExpression expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertNull(assertContext.getText(\"Actual expression should not exist.\"),actual)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ExpressionSegment actual@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertListExpression(assertContext,(ListExpression)actual,expected.getListExpression())@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertSubqueryExpression(assertContext,(SubqueryExpressionSegment)actual,expected.getSubquery())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(assertContext.getText(\"Actual expression should exist.\"),actual)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertLiteralExpression(assertContext,(LiteralExpressionSegment)actual,expected.getLiteralExpression())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertCommonExpression(assertContext,(ComplexExpressionSegment)actual,expected.getCommonExpression())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertBetweenExpression(assertContext,(BetweenExpression)actual,expected.getBetweenExpression())@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ProjectionAssert.assertProjection(assertContext,(ExpressionProjectionSegment)actual,expected.getExpressionProjection())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "actual instanceof CommonExpressionSegment@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertParameterMarkerExpression(assertContext,(ParameterMarkerExpressionSegment)actual,expected.getParameterMarkerExpression())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ExpressionAssert.assertCommonExpression(assertContext,(CommonExpressionSegment)actual,expected.getCommonExpression())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "actual instanceof LiteralExpressionSegment@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertInExpression(assertContext,(InExpression)actual,expected.getInExpression())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "actual instanceof InExpression@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "actual instanceof NotExpression@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13->24 [style = solid, label="actual"];
28->3 [style = bold, label=""];
37->22 [style = dotted, label="false"];
33->16 [style = solid, label="assertContext"];
9->19 [style = solid, label="actual"];
18->20 [style = bold, label=""];
9->10 [style = solid, label="actual"];
21->22 [style = bold, label=""];
19->28 [style = bold, label=""];
17->21 [style = bold, label=""];
43->41 [style = dotted, label="false"];
9->28 [style = solid, label="actual"];
33->5 [style = solid, label="assertContext"];
33->1 [style = solid, label="assertContext"];
13->0 [style = solid, label="expected"];
7->4 [style = solid, label="assertContext"];
33->27 [style = solid, label="assertContext"];
44->39 [style = dotted, label="true"];
40->3 [style = solid, label="assertContext"];
10->11 [style = bold, label=""];
0->24 [style = dotted, label="true"];
21->5 [style = dotted, label="true"];
19->32 [style = dotted, label="true"];
23->7 [style = dotted, label="true"];
7->6 [style = solid, label="assertContext"];
33->36 [style = solid, label="assertContext"];
13->37 [style = solid, label="actual"];
30->27 [style = bold, label=""];
43->41 [style = bold, label=""];
35->0 [style = bold, label=""];
13->2 [style = solid, label="actual"];
9->24 [style = solid, label="actual"];
40->30 [style = solid, label="assertContext"];
13->14 [style = solid, label="actual"];
23->13 [style = dotted, label="true"];
33->25 [style = solid, label="assertContext"];
41->30 [style = dotted, label="true"];
41->45 [style = dotted, label="false"];
10->6 [style = dotted, label="true"];
20->17 [style = bold, label=""];
43->38 [style = dotted, label="true"];
14->10 [style = bold, label=""];
9->25 [style = solid, label="actual"];
21->37 [style = bold, label=""];
9->30 [style = solid, label="actual"];
39->3 [style = solid, label="actual"];
21->37 [style = dotted, label="false"];
9->31 [style = solid, label="actual"];
13->36 [style = solid, label="actual"];
3->2 [style = dotted, label="false"];
44->43 [style = bold, label=""];
44->42 [style = dotted, label="true"];
41->45 [style = bold, label=""];
20->16 [style = bold, label=""];
41->30 [style = bold, label=""];
18->20 [style = dotted, label="false"];
9->29 [style = solid, label="actual"];
12->14 [style = bold, label=""];
7->1 [style = solid, label="assertContext"];
9->8 [style = solid, label="actual"];
13->21 [style = solid, label="actual"];
0->12 [style = dotted, label="true"];
19->32 [style = bold, label=""];
20->16 [style = dotted, label="true"];
13->31 [style = solid, label="actual"];
13->28 [style = solid, label="actual"];
44->40 [style = dotted, label="true"];
8->30 [style = dotted, label="false"];
3->31 [style = dotted, label="true"];
30->19 [style = dotted, label="false"];
28->3 [style = dotted, label="false"];
9->27 [style = solid, label="actual"];
9->5 [style = solid, label="actual"];
7->27 [style = solid, label="assertContext"];
35->34 [style = dotted, label="true"];
7->29 [style = solid, label="assertContext"];
9->11 [style = solid, label="actual"];
13->26 [style = solid, label="actual"];
13->42 [style = dashed, label="0"];
8->30 [style = bold, label=""];
0->14 [style = bold, label=""];
7->5 [style = solid, label="assertContext"];
10->11 [style = dotted, label="false"];
37->36 [style = dotted, label="true"];
13->8 [style = solid, label="actual"];
13->1 [style = solid, label="actual"];
9->21 [style = solid, label="actual"];
7->25 [style = solid, label="assertContext"];
9->6 [style = solid, label="actual"];
9->14 [style = solid, label="actual"];
17->26 [style = bold, label=""];
9->2 [style = solid, label="actual"];
0->43 [style = dashed, label="0"];
13->5 [style = solid, label="actual"];
10->6 [style = bold, label=""];
9->20 [style = solid, label="actual"];
3->2 [style = bold, label=""];
17->21 [style = dotted, label="false"];
13->10 [style = solid, label="actual"];
35->13 [style = dotted, label="true"];
45->3 [style = dotted, label="true"];
13->15 [style = solid, label="actual"];
9->26 [style = solid, label="actual"];
9->18 [style = solid, label="actual"];
33->29 [style = solid, label="assertContext"];
11->15 [style = bold, label=""];
23->9 [style = dotted, label="true"];
39->30 [style = solid, label="actual"];
9->1 [style = solid, label="actual"];
23->0 [style = bold, label=""];
0->24 [style = bold, label=""];
28->4 [style = bold, label=""];
9->17 [style = solid, label="actual"];
7->16 [style = solid, label="assertContext"];
3->31 [style = bold, label=""];
9->16 [style = solid, label="actual"];
28->4 [style = dotted, label="true"];
11->8 [style = bold, label=""];
40->38 [style = solid, label="assertContext"];
20->17 [style = dotted, label="false"];
27->30 [style = dashed, label="0"];
9->4 [style = solid, label="actual"];
11->15 [style = dotted, label="true"];
31->3 [style = dashed, label="0"];
24->12 [style = bold, label=""];
18->1 [style = bold, label=""];
33->6 [style = solid, label="assertContext"];
37->22 [style = bold, label=""];
17->26 [style = dotted, label="true"];
8->29 [style = dotted, label="true"];
21->22 [style = dotted, label="false"];
7->31 [style = solid, label="assertContext"];
13->11 [style = solid, label="actual"];
9->3 [style = solid, label="actual"];
13->3 [style = solid, label="actual"];
13->16 [style = solid, label="actual"];
2->18 [style = dotted, label="false"];
7->15 [style = solid, label="assertContext"];
7->32 [style = solid, label="assertContext"];
18->1 [style = dotted, label="true"];
39->38 [style = solid, label="actual"];
13->20 [style = solid, label="actual"];
35->33 [style = dotted, label="true"];
13->32 [style = solid, label="actual"];
30->27 [style = dotted, label="true"];
13->6 [style = solid, label="actual"];
39->45 [style = solid, label="actual"];
13->19 [style = solid, label="actual"];
2->25 [style = dotted, label="true"];
39->41 [style = solid, label="actual"];
19->28 [style = dotted, label="false"];
13->29 [style = solid, label="actual"];
2->25 [style = bold, label=""];
33->15 [style = solid, label="assertContext"];
34->0 [style = solid, label="expected"];
45->3 [style = bold, label=""];
33->26 [style = solid, label="assertContext"];
37->36 [style = bold, label=""];
8->29 [style = bold, label=""];
13->18 [style = solid, label="actual"];
33->31 [style = solid, label="assertContext"];
2->18 [style = bold, label=""];
11->8 [style = dotted, label="false"];
9->32 [style = solid, label="actual"];
13->4 [style = solid, label="actual"];
9->15 [style = solid, label="actual"];
21->5 [style = bold, label=""];
13->17 [style = solid, label="actual"];
39->43 [style = solid, label="actual"];
33->32 [style = solid, label="assertContext"];
13->30 [style = solid, label="actual"];
13->25 [style = solid, label="actual"];
7->26 [style = solid, label="assertContext"];
43->38 [style = bold, label=""];
13->27 [style = solid, label="actual"];
30->19 [style = bold, label=""];
33->4 [style = solid, label="assertContext"];
}
