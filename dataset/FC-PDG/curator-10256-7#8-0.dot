digraph {
21 [style = filled, label = "final CountDownLatch interruptedLatch = new CountDownLatch(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "leaderSelector1.autoRequeue()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testKillSessionThenCloseShouldElectNewLeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "LeaderSelector leaderSelector1 = new LeaderSelector(client,PATH_NAME,listener)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "server.stop()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "leaderSelector2.hasLeadership()@@@50@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(interruptedLatch))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "boolean leaderSelector1Closed = false@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Compatibility.injectSessionExpiration(client.getZookeeperClient().getZooKeeper())@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "!leaderSelector1Closed@@@59@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "boolean leaderSelector2Closed = false@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration()@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "leaderSelector2Closed = true@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "leaderSelector2.start()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "boolean requeued1 = leaderSelector1.requeue()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "leaderSelector1.close()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "fail(\"No leaderselector has leadership!\")@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "{client.close()}@@@66@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "leaderSelector1.hasLeadership()@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "leaderSelector1.hasLeadership()@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testKillSessionThenCloseShouldElectNewLeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(leaderCount.get(),1)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "leaderSelector1.close()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "leaderSelector2.close()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "timing.sleepABit()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LeaderSelector leaderSelector2 = new LeaderSelector(client,PATH_NAME,listener)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(leaderCount.get(),1)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "leaderSelector2Closed = true@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "leaderSelector2.autoRequeue()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "leaderSelector1Closed = true@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "leaderSelector1.start()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(requeued2)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final AtomicInteger leaderCount = new AtomicInteger(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "timing.sleepABit()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!leaderSelector1Closed@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "LeaderSelectorListener listener = new LeaderSelectorListenerAdapter(){@Override public void takeLeadership(CuratorFramework client){leaderCount.incrementAndGet()try {semaphore.release()try {Thread.currentThread().join()}catch (InterruptedException e) }{leaderCount.decrementAndGet()}}}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(interruptedLatch))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "!leaderSelector2Closed@@@62@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "server = new TestingServer(port)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "int port = server.getPort()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "testKillServerThenCloseShouldElectNewLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "leaderSelector2.close()@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "timing.sleepABit()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(leaderCount.get(),1)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->1 [style = solid, label="semaphore"];
0->22 [style = solid, label="semaphore"];
5->11 [style = dotted, label="false"];
11->29 [style = bold, label=""];
38->31 [style = bold, label=""];
9->7 [style = bold, label=""];
21->18 [style = bold, label=""];
47->49 [style = bold, label=""];
5->13 [style = dotted, label="true"];
36->24 [style = bold, label=""];
31->35 [style = bold, label=""];
5->22 [style = dotted, label="true"];
15->0 [style = bold, label=""];
48->44 [style = dotted, label="false"];
29->14 [style = bold, label=""];
20->43 [style = bold, label=""];
25->27 [style = solid, label="listener"];
13->14 [style = bold, label=""];
44->36 [style = dotted, label="false"];
22->13 [style = bold, label=""];
36->6 [style = bold, label=""];
35->27 [style = solid, label="client"];
26->14 [style = bold, label=""];
44->52 [style = dotted, label="true"];
34->31 [style = bold, label=""];
33->41 [style = bold, label=""];
0->21 [style = bold, label=""];
48->44 [style = bold, label=""];
32->26 [style = bold, label=""];
11->26 [style = dotted, label="true"];
35->8 [style = solid, label="client"];
2->39 [style = bold, label=""];
25->27 [style = bold, label=""];
0->24 [style = solid, label="semaphore"];
50->31 [style = bold, label=""];
12->33 [style = bold, label=""];
18->25 [style = bold, label=""];
7->42 [style = bold, label=""];
5->11 [style = bold, label=""];
46->45 [style = solid, label="port"];
5->22 [style = bold, label=""];
27->8 [style = bold, label=""];
4->22 [style = bold, label=""];
44->29 [style = dotted, label="true"];
14->36 [style = bold, label=""];
25->8 [style = solid, label="listener"];
49->45 [style = bold, label=""];
6->24 [style = dotted, label="true"];
24->51 [style = bold, label=""];
9->42 [style = bold, label=""];
3->37 [style = bold, label=""];
45->23 [style = bold, label=""];
35->15 [style = bold, label=""];
51->9 [style = bold, label=""];
17->4 [style = solid, label="requeued1"];
40->19 [style = bold, label=""];
13->48 [style = bold, label=""];
6->24 [style = bold, label=""];
11->32 [style = bold, label=""];
9->20 [style = bold, label=""];
7->20 [style = bold, label=""];
17->23 [style = bold, label=""];
19->16 [style = bold, label=""];
11->29 [style = dotted, label="false"];
10->5 [style = bold, label=""];
30->3 [style = bold, label=""];
41->40 [style = bold, label=""];
48->11 [style = bold, label=""];
48->32 [style = dotted, label="true"];
42->20 [style = dotted, label="true"];
33->19 [style = bold, label=""];
9->7 [style = dotted, label="true"];
0->14 [style = solid, label="semaphore"];
21->23 [style = solid, label="interruptedLatch"];
8->12 [style = bold, label=""];
24->9 [style = bold, label=""];
11->32 [style = dotted, label="true"];
2->46 [style = bold, label=""];
44->36 [style = bold, label=""];
42->43 [style = bold, label=""];
30->39 [style = dashed, label="0"];
37->17 [style = bold, label=""];
42->20 [style = bold, label=""];
23->4 [style = bold, label=""];
39->3 [style = bold, label=""];
28->1 [style = bold, label=""];
16->2 [style = bold, label=""];
23->28 [style = solid, label="requeued2"];
46->47 [style = bold, label=""];
21->3 [style = solid, label="interruptedLatch"];
4->28 [style = bold, label=""];
48->11 [style = dotted, label="true"];
0->2 [style = solid, label="semaphore"];
44->52 [style = bold, label=""];
52->29 [style = bold, label=""];
6->9 [style = bold, label=""];
2->30 [style = bold, label=""];
29->24 [style = bold, label=""];
1->10 [style = bold, label=""];
32->24 [style = bold, label=""];
}
