digraph {
2 [style = filled, label = "assertEquals(\"Start 6 threads, retry 5 then fail on 6\",6,so.efforts.get())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "unsubscribeAfterError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "inOrder.verify(observer,times(1)).onError(any())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "inOrder.verify(observer,never()).onComplete()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SlowObservable so = new SlowObservable(100,0,\"testUnsubscribeAfterError\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "async.await()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Observer<Long> observer = TestHelper.mockObserver()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "inOrder.verify(subscriber,times(1)).onError(any())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Flowable<Long> f = Flowable.unsafeCreate(so).retry(5)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "o.subscribe(async)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "f.subscribe(async)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "inOrder.verify(subscriber,never()).onComplete()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Observable<Long> o = Observable.unsafeCreate(so).retry(5)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "unsubscribeAfterError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "unsubscribeAfterError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "AsyncSubscriber<Long> async = new AsyncSubscriber<>(subscriber)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "AsyncSubscriber<Long> async = new AsyncSubscriber<Long>(subscriber)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "AsyncObserver<Long> async = new AsyncObserver<Long>(observer)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"Only 1 active subscription\",1,so.maxActive.get())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "InOrder inOrder = inOrder(subscriber)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SlowFlowable so = new SlowFlowable(100,0,\"testUnsubscribeAfterError\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Subscriber<Long> subscriber = TestHelper.mockSubscriber()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "InOrder inOrder = inOrder(observer)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
17->18 [style = solid, label="observer"];
7->21 [style = dashed, label="0"];
17->21 [style = solid, label="observer"];
22->2 [style = bold, label=""];
5->0 [style = solid, label="async"];
3->1 [style = bold, label=""];
6->20 [style = dashed, label="0"];
11->16 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
21->15 [style = bold, label=""];
10->7 [style = solid, label="subscriber"];
11->6 [style = bold, label=""];
10->13 [style = solid, label="subscriber"];
18->19 [style = bold, label=""];
4->21 [style = bold, label=""];
14->17 [style = bold, label=""];
18->19 [style = solid, label="async"];
9->10 [style = bold, label=""];
5->18 [style = dashed, label="0"];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
1->22 [style = dashed, label="0"];
15->22 [style = bold, label=""];
20->18 [style = bold, label=""];
6->5 [style = bold, label=""];
12->10 [style = bold, label=""];
10->5 [style = solid, label="subscriber"];
13->0 [style = solid, label="async"];
5->0 [style = bold, label=""];
0->4 [style = bold, label=""];
6->13 [style = bold, label=""];
10->17 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
1->2 [style = bold, label=""];
19->4 [style = bold, label=""];
16->20 [style = bold, label=""];
17->16 [style = bold, label=""];
2->8 [style = bold, label=""];
13->0 [style = bold, label=""];
10->11 [style = bold, label=""];
}
