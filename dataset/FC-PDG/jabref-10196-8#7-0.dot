digraph {
0 [style = filled, label = "assertEquals(expected,getClasses(fullTextFetchers))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expected.remove()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expected.remove()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Set<FulltextFetcher> fullTextFetchers = WebFetchers.getFullTextFetchers(importFormatPreferences)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expected,getClasses(searchBasedFetchers))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6->0 [style = solid, label="expected"];
2->0 [style = solid, label="expected"];
3->2 [style = bold, label=""];
2->7 [style = bold, label=""];
1->9 [style = dashed, label="0"];
10->9 [style = bold, label=""];
12->2 [style = bold, label=""];
5->1 [style = bold, label=""];
6->0 [style = bold, label=""];
2->8 [style = solid, label="expected"];
7->11 [style = bold, label=""];
4->1 [style = bold, label=""];
3->6 [style = bold, label=""];
2->6 [style = dashed, label="0"];
1->3 [style = bold, label=""];
11->8 [style = bold, label=""];
2->0 [style = bold, label=""];
1->0 [style = solid, label="fullTextFetchers"];
3->12 [style = dashed, label="0"];
9->8 [style = solid, label="searchBasedFetchers"];
9->12 [style = bold, label=""];
}
