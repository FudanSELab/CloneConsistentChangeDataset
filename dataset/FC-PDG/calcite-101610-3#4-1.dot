digraph {
9 [style = filled, label = "final String expected = \"\" + \"LogicalProject(EMPNO=($0()\" + \" LogicalSortExchange(distribution=(hash(1((, collation=((0(()\" + \" LogicalProject(EMPNO=($0(, ENAME=($1()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final RelNode root = builder.scan(\"EMP\").project(builder.field(\"EMPNO\"),builder.field(\"ENAME\"),builder.field(\"DEPTNO\")).sortExchange(RelDistributions.hash(Lists.newArrayList(1)),RelCollations.of(0)).project(builder.field(\"EMPNO\")).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String expected = \"\" + \"LogicalSortExchange(distribution=(hash(1((, collation=((0(()\" + \" LogicalProject(EMPNO=($0(, ENAME=($1()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final RelBuilder builder = RelBuilder.create(config().build())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RelNode trimmed = fieldTrimmer.trim(root)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RelFieldTrimmer fieldTrimmer = new RelFieldTrimmer(null,builder)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testSortExchangeFieldTrimmerWhenProjectCannotBeMerged['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testSortExchangeFieldTrimmer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(trimmed,hasTree(expected))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSortExchangeFieldTrimmer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final RelNode root = builder.scan(\"EMP\").project(builder.field(\"EMPNO\"),builder.field(\"ENAME\"),builder.field(\"DEPTNO\")).sortExchange(RelDistributions.hash(Lists.newArrayList(1)),RelCollations.of(0)).project(builder.field(\"EMPNO\"),builder.field(\"ENAME\")).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
5->2 [style = solid, label="trimmed"];
3->8 [style = dashed, label="0"];
6->2 [style = solid, label="expected"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
8->4 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = solid, label="root"];
5->9 [style = bold, label=""];
10->1 [style = bold, label=""];
9->2 [style = solid, label="expected"];
9->2 [style = bold, label=""];
4->5 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
1->4 [style = solid, label="builder"];
3->5 [style = solid, label="root"];
6->9 [style = dashed, label="0"];
6->2 [style = bold, label=""];
}
