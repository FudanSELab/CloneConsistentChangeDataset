digraph {
22 [style = filled, label = "dbResult.next()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "throw new DBCException(\"Can't explain plan: \" + rootNode.getProperty(\"message\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SQLDialect dialect = SQLUtils.getDialectFromObject(dataSource)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "throw new DBCException(\"Only SELECT statements could produce execution plan\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JDBCSession session@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String jsonPlan = dbResult.getString(1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "!\"SELECT\".equalsIgnoreCase(SQLUtils.getFirstKeyword(dialect,plainQuery))@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "nodes.add(rootNode)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "JsonObject queryBlock = planObject.getAsJsonObject(\"query_block\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "nodes.add(node)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "rootNodes = nodes@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MySQLPlanNodeJSON rootNode = new MySQLPlanNodeJSON(null,\"select\",queryBlock)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JsonObject planObject = gson.fromJson(jsonPlan,)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MySQLPlanClassic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "rootNodes = nodes@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!SQLUtils.getFirstKeyword(SQLUtils.getDialectFromObject(dataSource),query).toUpperCase().equals(\"SELECT\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "MySQLPlanJSON['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<MySQLPlanNodeJSON> nodes = new ArrayList<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CommonUtils.isEmpty(rootNode.getNested()) && rootNode.getProperty(\"message\") != null@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String query@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String query@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw new DBCException(\"Only SELECT statements could produce execution plan\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "String query@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "dbResult.next()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String plainQuery = SQLUtils.stripComments(dialect,query).toUpperCase()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MySQLPlanJSON['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "MySQLPlanNodePlain node = new MySQLPlanNodePlain(null,dbResult)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<MySQLPlanNodePlain> nodes = new ArrayList<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "JDBCSession session@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "super((MySQLDataSource)session.getDataSource(),query)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->21 [style = dotted, label="true"];
13->10 [style = bold, label=""];
14->3 [style = bold, label=""];
10->12 [style = dotted, label="true"];
16->13 [style = solid, label="query"];
13->24 [style = bold, label=""];
22->18 [style = dotted, label="true"];
7->23 [style = dashed, label="0"];
4->6 [style = bold, label=""];
19->20 [style = dotted, label="true"];
0->15 [style = solid, label="rootNode"];
0->11 [style = bold, label=""];
5->15 [style = bold, label=""];
8->7 [style = dotted, label="true"];
19->23 [style = dotted, label="true"];
11->5 [style = dotted, label="true"];
1->13 [style = solid, label="query"];
25->29 [style = bold, label=""];
29->26 [style = dotted, label="true"];
23->13 [style = solid, label="query"];
6->22 [style = dashed, label="0"];
3->0 [style = bold, label=""];
11->15 [style = bold, label=""];
4->28 [style = dashed, label="0"];
29->26 [style = bold, label=""];
6->2 [style = bold, label=""];
2->14 [style = solid, label="jsonPlan"];
29->28 [style = bold, label=""];
17->16 [style = dotted, label="true"];
8->1 [style = dotted, label="true"];
11->5 [style = bold, label=""];
22->18 [style = bold, label=""];
3->0 [style = solid, label="queryBlock"];
19->13 [style = bold, label=""];
12->4 [style = bold, label=""];
22->27 [style = bold, label=""];
21->22 [style = bold, label=""];
10->12 [style = bold, label=""];
15->9 [style = bold, label=""];
18->21 [style = solid, label="node"];
24->25 [style = bold, label=""];
2->14 [style = bold, label=""];
2->18 [style = dashed, label="0"];
10->4 [style = bold, label=""];
4->9 [style = solid, label="nodes"];
28->27 [style = solid, label="nodes"];
17->7 [style = dotted, label="true"];
17->13 [style = bold, label=""];
26->28 [style = bold, label=""];
18->21 [style = bold, label=""];
10->24 [style = dashed, label="0"];
28->22 [style = bold, label=""];
8->13 [style = bold, label=""];
13->4 [style = bold, label=""];
}
