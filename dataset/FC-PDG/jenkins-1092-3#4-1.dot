digraph {
7 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "multipleUpstreamDependencies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(upstreamProjects2.contains(upstream))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1,upstreamProjects.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(1,downstreamProjects2.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream2))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,downstreamProjects.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,upstreamProjects2.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(2,downstreamProjects.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(doubleContents,doubleFiles)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "j.assertBuildStatusSuccess(upstream2.scheduleBuild2(0).get())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2,singleFiles2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents,doubleFiles)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "FreeStyleProject upstream2 = createFreeStyleProjectWithFingerprints(singleContents2,singleFiles2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "multipleDownstreamDependencies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "j.jenkins.rebuildDependencyGraph()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "multipleUpstreamDependencies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(2,upstreamProjects.size())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<AbstractProject> downstreamProjects2 = upstream2.getDownstreamProjects()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
16->3 [style = bold, label=""];
8->10 [style = bold, label=""];
18->24 [style = bold, label=""];
3->15 [style = solid, label="upstream"];
0->26 [style = bold, label=""];
26->7 [style = bold, label=""];
12->20 [style = dashed, label="0"];
3->1 [style = bold, label=""];
7->10 [style = bold, label=""];
0->17 [style = bold, label=""];
20->25 [style = solid, label="downstream2"];
9->4 [style = bold, label=""];
3->27 [style = dashed, label="0"];
9->28 [style = dashed, label="0"];
4->15 [style = bold, label=""];
6->0 [style = bold, label=""];
5->18 [style = bold, label=""];
27->5 [style = solid, label="upstream"];
2->9 [style = bold, label=""];
20->6 [style = bold, label=""];
1->21 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
15->5 [style = bold, label=""];
0->7 [style = bold, label=""];
29->28 [style = bold, label=""];
17->7 [style = bold, label=""];
19->5 [style = bold, label=""];
11->0 [style = bold, label=""];
21->20 [style = bold, label=""];
10->29 [style = bold, label=""];
22->27 [style = bold, label=""];
28->23 [style = bold, label=""];
24->25 [style = bold, label=""];
2->29 [style = dashed, label="0"];
5->13 [style = bold, label=""];
6->11 [style = bold, label=""];
23->19 [style = bold, label=""];
1->5 [style = solid, label="upstream2"];
1->12 [style = bold, label=""];
10->2 [style = bold, label=""];
27->18 [style = solid, label="upstream"];
12->13 [style = solid, label="downstream"];
27->21 [style = bold, label=""];
4->23 [style = dashed, label="0"];
21->24 [style = solid, label="downstream"];
}
