digraph {
13 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),new OperatorID(44L,44L),new CounterOperator(),Optional.empty())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AcknowledgeStreamMockEnvironment environment2 = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),new OperatorID(4444L,4444L),new CounterOperator(),Optional.of(stateHandles))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "OperatorID headOperatorID = new OperatorID(42L,42L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TaskStateSnapshot stateHandles = restore.getTaskStateSnapshot()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(2,environment1.getCheckpointStateHandles().getSubtaskStateMappings().size())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testRestoreHeadWithNewId['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "TaskStateSnapshot stateHandles = environment1.getCheckpointStateHandles()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JobManagerTaskRestore restore = createRunAndCheckpointOperatorChain(new OperatorID(42L,42L),new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testRestoreTailWithNewId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(2,stateHandles.getSubtaskStateMappings().size())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Collections.singleton(headOperatorID),RESTORED_OPERATORS)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(new OperatorID(42L,42L),new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Collections.singleton(tailOperatorID),RESTORED_OPERATORS)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testRestoreHeadWithNewId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AcknowledgeStreamMockEnvironment environment2 = createRunAndCheckpointOperatorChain(new OperatorID(4242L,4242L),new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.of(stateHandles))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "OperatorID tailOperatorID = new OperatorID(44L,44L)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createRunAndCheckpointOperatorChain(new OperatorID(4242L,4242L),new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.of(restore))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->14 [style = solid, label="stateHandles"];
0->9 [style = bold, label=""];
0->3 [style = solid, label="tailOperatorID"];
16->15 [style = solid, label="headOperatorID"];
7->11 [style = bold, label=""];
16->13 [style = bold, label=""];
4->14 [style = bold, label=""];
0->2 [style = solid, label="tailOperatorID"];
0->9 [style = solid, label="tailOperatorID"];
0->11 [style = solid, label="tailOperatorID"];
2->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
12->16 [style = bold, label=""];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
10->7 [style = bold, label=""];
0->1 [style = solid, label="tailOperatorID"];
1->13 [style = dashed, label="0"];
8->0 [style = bold, label=""];
6->4 [style = bold, label=""];
4->2 [style = solid, label="stateHandles"];
1->6 [style = bold, label=""];
2->14 [style = dashed, label="0"];
5->0 [style = bold, label=""];
11->3 [style = bold, label=""];
0->1 [style = bold, label=""];
9->11 [style = solid, label="restore"];
16->13 [style = solid, label="headOperatorID"];
3->15 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
14->15 [style = bold, label=""];
13->6 [style = bold, label=""];
16->14 [style = solid, label="headOperatorID"];
}
