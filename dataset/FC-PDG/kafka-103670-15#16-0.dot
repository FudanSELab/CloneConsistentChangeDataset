digraph {
7 [style = filled, label = "client.disconnect(clusterNode.idString())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "sender.runOnce()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "sender.runOnce()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(responseFuture.isDone())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(responseFuture.isDone())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "runUntil(null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(e.getCause() instanceof TimeoutException)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "runUntil(null)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertFalse(transactionManager.isCompleting())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Future<RecordMetadata> responseFuture = appendToAccumulator(tp0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(transactionManager.hasAbortableError())@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "transactionManager.beginTransaction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(transactionManager.isSendToPartitionAllowed(tp0))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Node clusterNode = metadata.fetch().nodes().get(0)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sender.runOnce()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertFalse(transactionManager.transactionContainsPartition(tp0))@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ExecutionException e@@@28@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testDropCommitOnBatchExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(transactionManager.transactionContainsPartition(tp0))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertFalse(transactionManager.hasOngoingTransaction())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(responseFuture.isDone())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"Expected to get a TimeoutException since the queued ProducerBatch should have been expired\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testTransitionToAbortableErrorOnBatchExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "TransactionalRequestResult abortResult = transactionManager.beginAbort()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "responseFuture.get()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(e.getCause() instanceof TimeoutException)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "time.sleep(10000)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "TransactionalRequestResult commitResult = transactionManager.beginCommit()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testTransitionToAbortableErrorOnBatchExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(transactionManager.transactionContainsPartition(tp0))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "fail(\"Expected to get a TimeoutException since the queued ProducerBatch should have been expired\")@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertFalse(transactionManager.transactionContainsPartition(tp0))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(transactionManager.isSendToPartitionAllowed(tp0))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assertFalse(commitResult.isSuccessful())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertTrue(commitResult.isCompleted())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "transactionManager.maybeAddPartitionToTransaction(tp0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final short epoch = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sender.runOnce()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "prepareEndTxnResponse(Errors.NONE,TransactionResult.ABORT,pid,epoch)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,epoch,pid)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(abortResult.isSuccessful())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final long pid = 13131L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "responseFuture.get()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertTrue(abortResult.isCompleted())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFalse(transactionManager.isSendToPartitionAllowed(tp0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(transactionManager.hasOngoingTransaction())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "transactionManager.failIfNotReadyForSend()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "doInitTransactions(pid,epoch)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
12->0 [style = bold, label=""];
14->7 [style = bold, label=""];
35->2 [style = bold, label=""];
36->16 [style = bold, label=""];
13->41 [style = solid, label="epoch"];
7->24 [style = bold, label=""];
11->12 [style = bold, label=""];
13->4 [style = bold, label=""];
1->27 [style = dotted, label="true"];
41->37 [style = bold, label=""];
38->40 [style = bold, label=""];
7->10 [style = bold, label=""];
2->13 [style = bold, label=""];
16->7 [style = solid, label="clusterNode"];
0->29 [style = bold, label=""];
4->5 [style = bold, label=""];
19->8 [style = bold, label=""];
29->28 [style = bold, label=""];
45->20 [style = bold, label=""];
1->27 [style = bold, label=""];
40->33 [style = bold, label=""];
13->4 [style = solid, label="epoch"];
24->10 [style = bold, label=""];
33->41 [style = bold, label=""];
19->8 [style = dotted, label="true"];
10->3 [style = bold, label=""];
25->1 [style = bold, label=""];
43->39 [style = bold, label=""];
39->45 [style = bold, label=""];
6->16 [style = bold, label=""];
27->8 [style = bold, label=""];
44->34 [style = bold, label=""];
18->9 [style = bold, label=""];
26->15 [style = bold, label=""];
2->11 [style = solid, label="pid"];
20->46 [style = bold, label=""];
46->38 [style = bold, label=""];
32->2 [style = bold, label=""];
24->31 [style = bold, label=""];
15->11 [style = bold, label=""];
17->6 [style = bold, label=""];
16->14 [style = bold, label=""];
2->41 [style = solid, label="pid"];
3->25 [style = bold, label=""];
0->21 [style = bold, label=""];
5->18 [style = bold, label=""];
9->26 [style = bold, label=""];
31->30 [style = bold, label=""];
2->4 [style = solid, label="pid"];
37->47 [style = bold, label=""];
13->11 [style = solid, label="epoch"];
30->8 [style = bold, label=""];
1->20 [style = bold, label=""];
8->43 [style = bold, label=""];
21->23 [style = bold, label=""];
23->17 [style = bold, label=""];
6->36 [style = bold, label=""];
1->43 [style = bold, label=""];
42->44 [style = bold, label=""];
8->20 [style = bold, label=""];
14->24 [style = solid, label="clusterNode"];
28->17 [style = bold, label=""];
47->42 [style = bold, label=""];
}
