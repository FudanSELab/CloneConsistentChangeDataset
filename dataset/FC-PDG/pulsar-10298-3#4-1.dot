digraph {
9 [style = filled, label = "verify(functions,times(1)).restartFunction(tenant,namespace,FN_NAME)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "String fnName = TEST_NAME + \"-function\"@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "restartFunctionInstances['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "verify(functions,times(1)).restartFunction(tenant,namespace,fnName)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "RestartFunction restarter = cmd.getRestarter()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String namespace = \"ns1\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cmd.run(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@17a113d)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String tenant = \"sample\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(fnName,stop.getFunctionName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "StopFunction stop = cmd.getStopper()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "restartFunctionInstances['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(FN_NAME,restarter.getFunctionName())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "verify(functions,times(1)).stopFunction(tenant,namespace,fnName)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "stopFunctionInstances['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(fnName,restarter.getFunctionName())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
0->1 [style = solid, label="namespace"];
0->3 [style = solid, label="namespace"];
7->1 [style = bold, label=""];
5->14 [style = solid, label="fnName"];
1->14 [style = dashed, label="0"];
5->3 [style = solid, label="fnName"];
6->3 [style = solid, label="tenant"];
6->9 [style = solid, label="tenant"];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
0->14 [style = solid, label="namespace"];
2->10 [style = bold, label=""];
0->9 [style = solid, label="namespace"];
5->1 [style = solid, label="fnName"];
11->5 [style = bold, label=""];
6->1 [style = solid, label="tenant"];
13->12 [style = bold, label=""];
6->14 [style = solid, label="tenant"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
2->13 [style = dashed, label="0"];
5->7 [style = solid, label="fnName"];
12->14 [style = bold, label=""];
3->13 [style = bold, label=""];
7->12 [style = dashed, label="0"];
7->10 [style = dashed, label="0"];
10->9 [style = bold, label=""];
2->7 [style = bold, label=""];
4->5 [style = bold, label=""];
5->12 [style = solid, label="fnName"];
}
