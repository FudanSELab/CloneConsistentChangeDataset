digraph {
9 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"+------+-------------------+|GOOG |2018-08-31 10:59:00|+------+-------------------+\",2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"|default |stock_ticks_cow |false |\" + \"|default |stock_ticks_derived_mor |false |\" + \"|default |stock_ticks_derived_mor_rt|false |\" + \"|default |stock_ticks_mor |false |\" + \"|default |stock_ticks_mor_rt |false |\" + \"| |stock_ticks_cow_incr |true |\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"|GOOG |2018-08-31 09:59:00|6330 |1230.5 |1230.02 |\",3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"|GOOG |2018-08-31 10:59:00|9021 |1227.1993|1227.215|\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"+------+-------------------+\" + \"|GOOG |2018-08-31 10:29:00|\" + \"+------+-------------------+\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"|GOOG |2018-08-31 10:59:00|9021 |1227.1993|1227.215|\",2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testSparkSQLAfterSecondBatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"+------+-------------------+\" + \"|GOOG |2018-08-31 10:59:00|\" + \"+------+-------------------+\",2)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"+------+-------------------+|GOOG |2018-08-31 10:29:00|+------+-------------------+\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"|GOOG |2018-08-31 10:29:00|3391 |1230.1899|1230.085|\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertStdOutContains(stdOutErrPair,\"|count(1)|\" + \"+--------+\" + \"|99 |\",2)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testIncrementalSparkSQLQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Pair<String,String> stdOutErrPair = executeSparkSQLCommand(SPARKSQL_INCREMENTAL_COMMANDS,true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Pair<String,String> stdOutErrPair = executeSparkSQLCommand(SPARKSQL_BATCH2_COMMANDS,true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSparkSQLAfterSecondBatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
5->12 [style = dashed, label="0"];
5->9 [style = bold, label=""];
1->14 [style = dashed, label="0"];
12->10 [style = solid, label="stdOutErrPair"];
5->2 [style = solid, label="stdOutErrPair"];
3->7 [style = dashed, label="0"];
2->1 [style = bold, label=""];
14->10 [style = bold, label=""];
3->6 [style = bold, label=""];
11->12 [style = bold, label=""];
12->14 [style = solid, label="stdOutErrPair"];
5->9 [style = solid, label="stdOutErrPair"];
5->7 [style = solid, label="stdOutErrPair"];
4->7 [style = bold, label=""];
5->3 [style = solid, label="stdOutErrPair"];
12->13 [style = bold, label=""];
5->1 [style = solid, label="stdOutErrPair"];
12->13 [style = solid, label="stdOutErrPair"];
5->2 [style = bold, label=""];
5->4 [style = solid, label="stdOutErrPair"];
8->5 [style = bold, label=""];
2->9 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
5->6 [style = solid, label="stdOutErrPair"];
7->6 [style = bold, label=""];
9->1 [style = bold, label=""];
4->10 [style = dashed, label="0"];
13->14 [style = bold, label=""];
0->5 [style = bold, label=""];
}
