digraph {
13 [style = filled, label = "_participants(0(.getStateMachineEngine().registerStateModelFactory(\"OnlineOffline\",new TestOnlineOfflineStateModelFactory(customizedPoolSize,2000),\"TestFactory\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < numberOfDbs@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "BestPossibleExternalViewVerifier verifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient).setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME).build()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int customizedPoolSize = 5@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testBatchMessageThreadPoolSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Assert.assertNotNull(executor)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "IdealState idealState = new FullAutoModeISBuilder(dbName).setStateModel(\"OnlineOffline\").setStateModelFactoryName(\"TestFactory\").setNumPartitions(10).setNumReplica(1).build()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "HelixTaskExecutor helixExecutor = svc.getExecutor()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(verifier.verifyByPolling())@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ThreadPoolExecutor executor = (ThreadPoolExecutor)(helixExecutor._batchMessageExecutorService)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "_participants(i(.syncStop()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String dbName = \"TestDBABatch\" + i@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < _participants.length@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 1@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ThreadPoolExecutor executor = (ThreadPoolExecutor)(helixExecutor._batchMessageExecutorService)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "_gSetupTool.rebalanceStorageCluster(CLUSTER_NAME,dbName,1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "verify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "BestPossibleExternalViewVerifier verifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).build()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "int numberOfDbs = 10@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "DefaultMessagingService svc = (DefaultMessagingService)(_participants(0(.getMessagingService())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(executor.getPoolSize() >= numberOfDbs)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "idealState.setBatchMessageMode(true)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testBatchMessageThreadPoolSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "HelixTaskExecutor helixExecutor = svc.getExecutor()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DefaultMessagingService svc = (DefaultMessagingService)(_participants(0(.getMessagingService())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "_gSetupTool.getClusterManagementTool().addResource(CLUSTER_NAME,dbName,idealState)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertNotNull(executor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(executor.getPoolSize() > 0)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9->22 [style = bold, label=""];
22->21 [style = dotted, label="true"];
15->10 [style = bold, label=""];
16->11 [style = bold, label=""];
22->18 [style = dotted, label="true"];
9->22 [style = solid, label="i"];
7->22 [style = solid, label="i"];
0->13 [style = bold, label=""];
4->25 [style = bold, label=""];
11->14 [style = bold, label=""];
6->18 [style = bold, label=""];
22->7 [style = dotted, label="true"];
3->11 [style = bold, label=""];
11->17 [style = dotted, label="true"];
4->30 [style = dashed, label="0"];
27->31 [style = bold, label=""];
5->25 [style = dashed, label="0"];
12->24 [style = bold, label=""];
22->6 [style = dotted, label="true"];
13->16 [style = bold, label=""];
25->2 [style = bold, label=""];
19->0 [style = bold, label=""];
24->20 [style = bold, label=""];
22->8 [style = bold, label=""];
16->3 [style = solid, label="i"];
7->22 [style = bold, label=""];
5->2 [style = bold, label=""];
16->11 [style = solid, label="i"];
8->18 [style = solid, label="dbName"];
1->6 [style = bold, label=""];
23->4 [style = solid, label="numberOfDbs"];
26->0 [style = bold, label=""];
22->8 [style = dotted, label="true"];
22->1 [style = dotted, label="true"];
14->23 [style = bold, label=""];
22->12 [style = bold, label=""];
29->32 [style = bold, label=""];
21->6 [style = solid, label="idealState"];
21->1 [style = bold, label=""];
31->30 [style = bold, label=""];
17->3 [style = bold, label=""];
27->31 [style = solid, label="executor"];
8->21 [style = bold, label=""];
10->4 [style = bold, label=""];
11->17 [style = bold, label=""];
8->6 [style = solid, label="dbName"];
9->8 [style = solid, label="i"];
3->11 [style = solid, label="i"];
9->7 [style = solid, label="i"];
15->10 [style = solid, label="executor"];
28->27 [style = bold, label=""];
0->13 [style = solid, label="customizedPoolSize"];
18->7 [style = bold, label=""];
7->8 [style = solid, label="i"];
23->9 [style = bold, label=""];
20->15 [style = bold, label=""];
23->22 [style = solid, label="numberOfDbs"];
4->5 [style = bold, label=""];
32->28 [style = bold, label=""];
11->3 [style = dotted, label="true"];
}
