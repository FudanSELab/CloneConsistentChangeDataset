digraph {
14 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new StateObjectCollection<>(operatorStateBackend),new StateObjectCollection<>(operatorStateStream),new StateObjectCollection<>(keyedStateFromBackend),new StateObjectCollection<>(keyedStateFromStream))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "NetworkEnvironment networkEnvironment = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "JobManagerTaskRestore taskRestore = new JobManagerTaskRestore(1L,stateSnapshot)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TaskStateSnapshot stateSnapshot = new TaskStateSnapshot()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "keyedStateFromStream = keyedStateHandles@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "stateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),taskStateManager,mock(),mock(),mock(),new TestGlobalAggregateManager(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bea35f,blobService.getPermanentBlobService()),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),mock())@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "StreamStateHandle state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "boolean failOnCheckpointErrors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "cfg.setStateBackend(backend)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),network,new KvStateService(new KvStateRegistry(),null,null),mock(),new TestTaskStateManager(),mock(),mock(),checkpointResponder,new TestGlobalAggregateManager(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bea42a,blobService.getPermanentBlobService()),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),Executors.directExecutor())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "throw new IllegalArgumentException()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KeyGroupRangeOffsets keyGroupRangeOffsets = new KeyGroupRangeOffsets(new KeyGroupRange(0,0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "StateBackend backend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(networkEnvironment.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),taskStateManager,mock(),mock(),mock(),new TestGlobalAggregateManager(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bea1f5,blobService.getPermanentBlobService()),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),mock())@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "StreamConfig streamConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "CheckpointResponder checkpointResponder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "cfg.setOperatorID(new OperatorID())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "OperatorStateHandle.StateMetaInfo metaInfo = new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bea247,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "operatorStateBackend = operatorStateHandles@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "operatorStateMetadata.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME,metaInfo)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "keyedStateFromBackend = keyedStateHandles@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "OperatorID operatorID = OperatorID.fromJobVertexID(jobVertexID)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "executionConfig.setFailTaskOnCheckpointError(failOnCheckpointErrors)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "cfg.setStreamOperator(op)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "JobVertexID jobVertexID = new JobVertexID()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStreamStateHandle(operatorStateMetadata,state))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Configuration taskConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "taskStateManager.setJobManagerTaskStateSnapshotsByCheckpointId(Collections.singletonMap(taskRestore.getRestoreCheckpointId(),taskRestore.getTaskStateSnapshot()))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "StreamOperator<?> op@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"test task name\",1,11,.getName(),taskConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(executionConfig),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "NetworkEnvironment network = mock()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int mode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<KeyedStateHandle> keyedStateHandles = Collections.singletonList(new KeyGroupsStateHandle(keyGroupRangeOffsets,state))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "when(network.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Configuration taskConfig = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "operatorStateStream = operatorStateHandles@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(jobVertexID,\"test task name\",1,1,.getName(),taskConfig)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromBackend = Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Collection<OperatorStateHandle> operatorStateStream = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "StreamConfig cfg = new StreamConfig(taskConfig)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "taskStateManager.setReportedCheckpointId(taskRestore.getRestoreCheckpointId())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Collection<OperatorStateHandle> operatorStateBackend = Collections.emptyList()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromStream = Collections.emptyList()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestTaskStateManager taskStateManager = new TestTaskStateManager()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamStateHandle state@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "mode@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Map<String,OperatorStateHandle.StateMetaInfo> operatorStateMetadata = new HashMap<>(1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "streamConfig.setOperatorID(operatorID)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int mode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
39->19 [style = bold, label=""];
32->14 [style = solid, label="operatorStateStream"];
43->55 [style = bold, label=""];
25->22 [style = bold, label=""];
20->16 [style = solid, label="jobVertexID"];
11->14 [style = bold, label=""];
21->11 [style = dotted, label="true"];
57->52 [style = dotted, label="true"];
1->11 [style = solid, label="operatorStateHandles"];
34->18 [style = bold, label=""];
18->30 [style = bold, label=""];
23->10 [style = solid, label="stateSnapshot"];
30->36 [style = bold, label=""];
15->14 [style = solid, label="keyedStateFromBackend"];
11->14 [style = solid, label="operatorStateBackend"];
1->32 [style = solid, label="operatorStateHandles"];
58->45 [style = solid, label="taskInformation"];
29->34 [style = bold, label=""];
39->42 [style = dotted, label="true"];
34->14 [style = solid, label="operatorStateBackend"];
50->45 [style = solid, label="checkpointResponder"];
17->38 [style = solid, label="blobService"];
21->26 [style = bold, label=""];
1->28 [style = bold, label=""];
28->21 [style = bold, label=""];
10->8 [style = bold, label=""];
21->26 [style = dotted, label="true"];
19->9 [style = bold, label=""];
0->25 [style = bold, label=""];
53->46 [style = solid, label="taskConfig"];
3->14 [style = solid, label="keyedStateFromStream"];
21->37 [style = dotted, label="true"];
27->19 [style = bold, label=""];
19->15 [style = bold, label=""];
46->59 [style = bold, label=""];
14->20 [style = bold, label=""];
21->3 [style = bold, label=""];
0->33 [style = solid, label="taskStateManager"];
36->35 [style = solid, label="metaInfo"];
22->33 [style = bold, label=""];
12->16 [style = solid, label="taskConfig"];
59->60 [style = bold, label=""];
17->33 [style = solid, label="blobService"];
6->13 [style = dotted, label="true"];
26->14 [style = bold, label=""];
21->32 [style = dotted, label="true"];
16->17 [style = bold, label=""];
27->9 [style = solid, label="taskEventDispatcher"];
51->55 [style = solid, label="executionConfig"];
58->56 [style = bold, label=""];
28->26 [style = solid, label="keyedStateHandles"];
41->1 [style = solid, label="state"];
22->38 [style = bold, label=""];
21->37 [style = bold, label=""];
9->48 [style = dashed, label="0"];
57->50 [style = dotted, label="true"];
53->58 [style = solid, label="taskConfig"];
56->48 [style = solid, label="taskEventDispatcher"];
21->11 [style = bold, label=""];
33->38 [style = dashed, label="0"];
29->14 [style = solid, label="keyedStateFromStream"];
19->33 [style = solid, label="networkEnvironment"];
4->28 [style = solid, label="keyGroupRangeOffsets"];
40->16 [style = solid, label="taskConfig"];
18->14 [style = solid, label="operatorStateStream"];
44->45 [style = solid, label="network"];
6->7 [style = dotted, label="true"];
39->40 [style = dotted, label="true"];
57->49 [style = dotted, label="true"];
5->31 [style = solid, label="operatorID"];
6->12 [style = dotted, label="true"];
13->21 [style = solid, label="mode"];
2->1 [style = solid, label="state"];
36->35 [style = bold, label=""];
26->14 [style = solid, label="keyedStateFromBackend"];
57->53 [style = bold, label=""];
15->29 [style = bold, label=""];
2->28 [style = solid, label="state"];
23->31 [style = bold, label=""];
60->54 [style = bold, label=""];
14->31 [style = solid, label="operatorSubtaskState"];
0->38 [style = solid, label="taskStateManager"];
49->43 [style = solid, label="failOnCheckpointErrors"];
32->14 [style = bold, label=""];
28->3 [style = solid, label="keyedStateHandles"];
30->1 [style = solid, label="operatorStateMetadata"];
8->38 [style = solid, label="jobInformation"];
5->24 [style = solid, label="operatorID"];
6->27 [style = bold, label=""];
53->46 [style = bold, label=""];
57->61 [style = dotted, label="true"];
6->2 [style = dotted, label="true"];
17->0 [style = bold, label=""];
31->10 [style = bold, label=""];
5->24 [style = bold, label=""];
8->33 [style = solid, label="jobInformation"];
21->3 [style = dotted, label="true"];
39->13 [style = dotted, label="true"];
51->43 [style = bold, label=""];
4->1 [style = bold, label=""];
47->45 [style = bold, label=""];
0->45 [style = dashed, label="0"];
24->23 [style = bold, label=""];
54->51 [style = bold, label=""];
16->33 [style = solid, label="taskInformation"];
47->45 [style = solid, label="blobService"];
13->61 [style = dashed, label="0"];
3->14 [style = bold, label=""];
16->38 [style = solid, label="taskInformation"];
41->28 [style = solid, label="state"];
61->54 [style = solid, label="backend"];
35->4 [style = bold, label=""];
7->21 [style = solid, label="mode"];
20->5 [style = bold, label=""];
19->44 [style = dashed, label="0"];
37->14 [style = bold, label=""];
19->38 [style = solid, label="networkEnvironment"];
20->5 [style = solid, label="jobVertexID"];
9->15 [style = bold, label=""];
44->48 [style = bold, label=""];
48->47 [style = bold, label=""];
39->41 [style = dotted, label="true"];
21->32 [style = bold, label=""];
52->59 [style = solid, label="op"];
55->45 [style = solid, label="jobInformation"];
56->44 [style = bold, label=""];
55->58 [style = bold, label=""];
}
