digraph {
7 [style = filled, label = "SubscriptionErrorKinesisV2 errorKinesisV2 = FakeKinesisFanOutBehavioursFactory.errorDuringSubscription(error)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RuntimeException error2 = new RuntimeException(\"Error 2!\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "FanOutShardSubscriber subscriber = new FanOutShardSubscriber(\"consumerArn\",\"shardId\",errorKinesisV2,DEFAULT_SUBSCRIBE_TO_SHARD_TIMEOUT)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testMultipleErrorsThrownPassesFirstErrorToConsumer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "thrown.expect()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FanOutShardSubscriber subscriber = new FanOutShardSubscriber(\"consumerArn\",\"shardId\",errorKinesisV2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRetryableErrorThrownToConsumer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FanOutShardSubscriber subscriber = new FanOutShardSubscriber(\"consumerArn\",\"shardId\",errorKinesisV2)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "subscriber.subscribeToShardAndConsumeRecords(startingPosition,null)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testRetryableErrorThrownToConsumer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "thrown.expect()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RuntimeException error1 = new RuntimeException(\"Error 1!\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SubscriptionErrorKinesisV2 errorKinesisV2 = FakeKinesisFanOutBehavioursFactory.errorDuringSubscription(error1,error2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "thrown.expectMessage(\"Error 1!\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "StartingPosition startingPosition = StartingPosition.builder().build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "subscriber.subscribeToShardAndConsumeRecords(startingPosition,null)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RuntimeException error = new RuntimeException(\"Error!\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "thrown.expectMessage(\"Error!\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
15->10 [style = bold, label=""];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
10->17 [style = solid, label="error1"];
0->6 [style = bold, label=""];
7->1 [style = solid, label="errorKinesisV2"];
12->17 [style = bold, label=""];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
7->8 [style = bold, label=""];
17->3 [style = solid, label="errorKinesisV2"];
4->0 [style = bold, label=""];
6->5 [style = bold, label=""];
3->2 [style = bold, label=""];
5->10 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
10->12 [style = bold, label=""];
11->13 [style = bold, label=""];
17->3 [style = bold, label=""];
5->7 [style = bold, label=""];
3->2 [style = solid, label="startingPosition"];
1->8 [style = dashed, label="0"];
11->13 [style = solid, label="startingPosition"];
12->17 [style = solid, label="error2"];
7->8 [style = solid, label="errorKinesisV2"];
3->11 [style = dashed, label="0"];
5->7 [style = solid, label="error"];
}
