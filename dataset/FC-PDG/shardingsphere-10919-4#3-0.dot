digraph {
7 [style = filled, label = "List<Connection> actualConnections = backendConnection.getConnections(\"ds1\",12,ConnectionMode.MEMORY_STRICTLY)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertGetConnectionSizeGreaterThanCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "when(backendDataSource.getConnections(anyString(),anyString(),eq(2),any())).thenReturn(MockConnectionUtil.mockNewConnections(2))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(backendConnection.getConnectionSize(),is(12))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(actualConnections.size(),is(12))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "backendConnection.getStateHandler().setStatus(ConnectionStatus.TRANSACTION)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(backendConnection.getStateHandler().getStatus(),is(ConnectionStatus.TRANSACTION))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<Connection> actualConnections = backendConnection.getConnections(\"ds1\",2,ConnectionMode.MEMORY_STRICTLY)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MockConnectionUtil.setCachedConnections(backendConnection,\"ds1\",10)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(backendConnection.getStateHandler().getStatus(),is(ConnectionStatus.TRANSACTION))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(actualConnections.size(),is(2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(backendDataSource.getConnections(anyString(),eq(2),any(),eq(TransactionType.LOCAL))).thenReturn(MockConnectionUtil.mockNewConnections(2))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertThat(backendConnection.getConnectionSize(),is(10))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertGetConnectionSizeGreaterThanCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertGetConnectionSizeLessThanCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3->11 [style = bold, label=""];
3->9 [style = bold, label=""];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
5->1 [style = bold, label=""];
12->13 [style = bold, label=""];
4->9 [style = dashed, label="0"];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
2->6 [style = bold, label=""];
14->6 [style = bold, label=""];
4->7 [style = bold, label=""];
0->13 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
