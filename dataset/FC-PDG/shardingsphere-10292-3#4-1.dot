digraph {
1 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "throw new InvalidDatabaseDiscoveryTypesException(notExistedDiscoveryTypes)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkToBeAlteredDiscoveryType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "checkToBeCreatedDiscoverTypes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Collection<String> notExistedDiscoveryTypes = getToBeAlteredDiscoveryTypeNames(sqlStatement).stream().filter(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "checkToBeCreatedDiscoverTypes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "!notExistedDiscoveryTypes.isEmpty()@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final AlterDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Collection<String> notExistedDiscoveryTypes = sqlStatement.getRules().stream().map(null).distinct().filter(null).collect(Collectors.toList())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->6 [style = dotted, label="true"];
1->8 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
9->7 [style = bold, label=""];
0->2 [style = solid, label="notExistedDiscoveryTypes"];
4->1 [style = dotted, label="true"];
0->7 [style = dashed, label="0"];
7->2 [style = solid, label="notExistedDiscoveryTypes"];
1->6 [style = dashed, label="0"];
3->2 [style = dotted, label="true"];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
9->8 [style = dotted, label="true"];
}
