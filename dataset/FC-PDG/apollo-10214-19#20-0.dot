digraph {
6 [style = filled, label = "someCluster = \"someCluster\"@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "httpClient = spy(new MockHttpClient())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "someAppId = \"someAppId\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "remoteConfigLongPollService = new RemoteConfigLongPollService()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MockInjector.setInstance(,httpUtil)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ServiceDTO serviceDTO = mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "responseType = (Type)ReflectionTestUtils.getField(remoteConfigLongPollService,\"m_responseType\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "httpUtil = spy(new MockHttpUtil())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "remoteConfigLongPollService = new RemoteConfigLongPollService()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "someCluster = \"someCluster\"@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MockInjector.setInstance(,httpClient)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtil())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "someNamespace = \"someName\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new Properties()}})@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MockInjector.setInstance(,configUtil)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MockInjector.setInstance(,httpUtil)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "someAppId = \"someAppId\"@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "someServerUrl = \"http://someServer\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "configUtil = new MockConfigUtil()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "MockInjector.setInstance(,configServiceLocator)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MockInjector.setInstance(,remoteConfigLongPollService)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->15 [style = bold, label=""];
15->7 [style = bold, label=""];
23->27 [style = bold, label=""];
2->1 [style = bold, label=""];
5->2 [style = solid, label="someServerUrl"];
9->17 [style = bold, label=""];
11->12 [style = bold, label=""];
13->9 [style = dashed, label="0"];
5->14 [style = bold, label=""];
3->16 [style = bold, label=""];
0->20 [style = dashed, label="0"];
12->6 [style = bold, label=""];
22->23 [style = bold, label=""];
17->0 [style = solid, label="httpUtil"];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
26->22 [style = bold, label=""];
22->27 [style = solid, label="someServerUrl"];
20->10 [style = bold, label=""];
18->20 [style = solid, label="httpClient"];
10->13 [style = solid, label="remoteConfigLongPollService"];
1->9 [style = solid, label="remoteConfigLongPollService"];
18->20 [style = bold, label=""];
0->10 [style = bold, label=""];
17->0 [style = bold, label=""];
9->18 [style = bold, label=""];
10->13 [style = bold, label=""];
24->21 [style = bold, label=""];
25->26 [style = bold, label=""];
16->5 [style = bold, label=""];
14->1 [style = solid, label="serviceDTO"];
14->2 [style = bold, label=""];
27->5 [style = bold, label=""];
19->15 [style = bold, label=""];
4->11 [style = bold, label=""];
23->5 [style = solid, label="serviceDTO"];
17->18 [style = dashed, label="0"];
3->16 [style = solid, label="configUtil"];
9->24 [style = bold, label=""];
13->4 [style = bold, label=""];
17->2 [style = dashed, label="0"];
}
