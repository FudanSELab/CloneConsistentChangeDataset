digraph {
5 [style = filled, label = "Exception e@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(55,sum)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sum += l@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "executeAndRunAssertions(env)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "long sum = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testFailedRunThenSuccessfulRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testFailedRunThenSuccessfulRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper2<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "e.printStackTrace()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fail(e.getMessage())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())env.generateSequence(1,10).rebalance().map(new FailingMapper1<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))executeAndRunAssertions(env)long sum = 0for (long l : resultCollection){sum += l}assertEquals(55,sum)}@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())env.generateSequence(1,10).rebalance().map(new FailingMapper1<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))try {JobExecutionResult res = env.execute()String msg = res == null? \"null result\": \"result in \" + res.getNetRuntime() + \" ms\"fail(\"The program should have failed, but returned \" + msg)}catch (JobExecutionException e) }@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Long> resultCollection = new ArrayList<Long>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "env.setParallelism(4)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testRestart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->7 [style = solid, label="env"];
17->1 [style = bold, label=""];
1->9 [style = bold, label=""];
14->3 [style = bold, label=""];
6->4 [style = bold, label=""];
0->7 [style = bold, label=""];
1->12 [style = solid, label="resultCollection"];
9->15 [style = bold, label=""];
5->4 [style = dotted, label="true"];
11->14 [style = bold, label=""];
9->13 [style = solid, label="env"];
12->13 [style = bold, label=""];
1->0 [style = solid, label="resultCollection"];
10->12 [style = bold, label=""];
8->1 [style = bold, label=""];
11->14 [style = solid, label="sum"];
7->3 [style = bold, label=""];
5->6 [style = dotted, label="true"];
13->16 [style = bold, label=""];
2->1 [style = bold, label=""];
1->7 [style = solid, label="resultCollection"];
16->11 [style = bold, label=""];
4->3 [style = bold, label=""];
15->10 [style = bold, label=""];
5->6 [style = bold, label=""];
1->0 [style = bold, label=""];
}
