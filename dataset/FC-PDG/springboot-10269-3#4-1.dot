digraph {
6 [style = filled, label = "given(this.loggingSystem.getLoggerConfiguration(\"com.png\")).willReturn(new LoggerConfiguration(\"com.png\",null,LogLevel.DEBUG))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "given(this.loggingSystem.getLoggerConfiguration(\"ROOT\")).willReturn(new LoggerConfiguration(\"ROOT\",null,LogLevel.DEBUG))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getLoggerShouldReturnLogLevels['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "getLoggerShouldReturnLogLevels['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.get().uri(\"/application/loggers/ROOT\").exchange().expectStatus().isOk().expectBody().jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "client.get().uri(\"/application/loggers/com.png\").exchange().expectStatus().isOk().expectBody().jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\")@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.get().uri(\"/actuator/loggers/ROOT\").exchange().expectStatus().isOk().expectBody().jsonPath(\"$.length()\").isEqualTo(2).jsonPath(\"configuredLevel\").isEqualTo(null).jsonPath(\"effectiveLevel\").isEqualTo(\"DEBUG\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "logLevelForLoggerWithNameThatCouldBeMistakenForAPathExtension['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->2 [style = bold, label=""];
1->3 [style = dashed, label="0"];
5->6 [style = bold, label=""];
6->7 [style = bold, label=""];
1->7 [style = dashed, label="0"];
2->1 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
