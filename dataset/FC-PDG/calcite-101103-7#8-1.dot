digraph {
61 [style = filled, label = "groupSets.clear()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<ImmutableBitSet> groupSets1 = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "groupSets.clear()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "groupSets.clear()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "groupSets.clear()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets0),is(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet0,groupSets),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "groupSets.clear()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final List<ImmutableBitSet> groupSets0 = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "testInduceGroupingType0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4,5))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(1,2,4,5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "groupSets.clear()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(4, 5, 1, 2(\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final Aggregate.Group x = Aggregate.Group.induce(groupSet,groupSets)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "groupSets = new ArrayList<>()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "groupSets.clear()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,5))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(1, 2, 4, 5(\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "groupSets.clear()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IllegalArgumentException ignore@@@71@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "groupSets.clear()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "testInduceGroupingType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "groupSets.clear()@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets),is(true))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(2(\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "fail(\"expected error, got \" + x)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "groupSets.add(ImmutableBitSet.of(2,4,5))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "{}@@@71@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{}@@@71@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "groupSets.add(ImmutableBitSet.of(5))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testInduceGroupingType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@79@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(5, 4, 2, 1(\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet0,groupSets))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets1))@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "groupSets.add(groupSet0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final ImmutableBitSet groupSet0 = ImmutableBitSet.of(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->53 [style = bold, label=""];
9->71 [style = bold, label=""];
45->9 [style = solid, label="groupSet"];
58->42 [style = solid, label="groupSet0"];
6->12 [style = solid, label="groupSets"];
55->40 [style = bold, label=""];
34->13 [style = solid, label="groupSets0"];
45->12 [style = solid, label="groupSet"];
51->1 [style = bold, label=""];
45->20 [style = solid, label="groupSet"];
45->57 [style = solid, label="groupSet"];
22->82 [style = bold, label=""];
36->11 [style = bold, label=""];
23->77 [style = bold, label=""];
81->20 [style = bold, label=""];
44->51 [style = bold, label=""];
45->51 [style = solid, label="groupSet"];
77->27 [style = bold, label=""];
45->6 [style = bold, label=""];
6->4 [style = solid, label="groupSets"];
19->63 [style = bold, label=""];
37->48 [style = bold, label=""];
18->32 [style = bold, label=""];
45->25 [style = solid, label="groupSet"];
27->21 [style = solid, label="groupSets1"];
61->24 [style = bold, label=""];
64->34 [style = bold, label=""];
6->27 [style = solid, label="groupSets"];
53->60 [style = bold, label=""];
8->27 [style = bold, label=""];
4->64 [style = bold, label=""];
67->52 [style = bold, label=""];
46->59 [style = bold, label=""];
11->25 [style = bold, label=""];
6->22 [style = solid, label="groupSets"];
5->29 [style = bold, label=""];
35->31 [style = bold, label=""];
3->46 [style = bold, label=""];
49->12 [style = bold, label=""];
74->10 [style = bold, label=""];
58->4 [style = solid, label="groupSet0"];
6->9 [style = solid, label="groupSets"];
1->41 [style = bold, label=""];
25->55 [style = bold, label=""];
54->17 [style = bold, label=""];
56->62 [style = bold, label=""];
29->73 [style = bold, label=""];
24->38 [style = bold, label=""];
59->68 [style = solid, label="x"];
23->8 [style = bold, label=""];
52->19 [style = bold, label=""];
50->67 [style = bold, label=""];
72->50 [style = bold, label=""];
45->17 [style = solid, label="groupSet"];
6->81 [style = dashed, label="0"];
71->61 [style = bold, label=""];
59->68 [style = bold, label=""];
75->66 [style = bold, label=""];
17->2 [style = bold, label=""];
10->0 [style = bold, label=""];
33->30 [style = bold, label=""];
80->81 [style = bold, label=""];
80->20 [style = solid, label="groupSet"];
22->16 [style = bold, label=""];
45->14 [style = solid, label="groupSet"];
62->75 [style = bold, label=""];
79->80 [style = bold, label=""];
45->13 [style = solid, label="groupSet"];
6->17 [style = solid, label="groupSets"];
73->57 [style = bold, label=""];
45->75 [style = solid, label="groupSet"];
7->54 [style = bold, label=""];
32->33 [style = bold, label=""];
48->69 [style = bold, label=""];
70->42 [style = bold, label=""];
6->20 [style = bold, label=""];
42->4 [style = bold, label=""];
82->78 [style = bold, label=""];
80->22 [style = solid, label="groupSet"];
40->39 [style = bold, label=""];
60->14 [style = bold, label=""];
45->59 [style = solid, label="groupSet"];
76->45 [style = bold, label=""];
43->65 [style = bold, label=""];
65->44 [style = bold, label=""];
6->42 [style = solid, label="groupSets"];
82->78 [style = solid, label="groupSets"];
57->9 [style = bold, label=""];
47->70 [style = bold, label=""];
45->22 [style = solid, label="groupSet"];
21->49 [style = bold, label=""];
68->27 [style = bold, label=""];
6->14 [style = solid, label="groupSets"];
34->28 [style = solid, label="groupSets0"];
27->21 [style = bold, label=""];
63->3 [style = bold, label=""];
16->58 [style = bold, label=""];
38->43 [style = bold, label=""];
6->25 [style = solid, label="groupSets"];
6->50 [style = solid, label="groupSets"];
0->5 [style = bold, label=""];
41->35 [style = bold, label=""];
6->51 [style = solid, label="groupSets"];
30->72 [style = bold, label=""];
6->75 [style = solid, label="groupSets"];
15->7 [style = bold, label=""];
45->80 [style = dashed, label="0"];
45->21 [style = solid, label="groupSet"];
34->13 [style = bold, label=""];
45->28 [style = solid, label="groupSet"];
80->78 [style = solid, label="groupSet"];
16->82 [style = dashed, label="0"];
31->15 [style = bold, label=""];
6->59 [style = solid, label="groupSets"];
58->47 [style = solid, label="groupSet0"];
20->22 [style = bold, label=""];
69->36 [style = bold, label=""];
6->57 [style = solid, label="groupSets"];
45->50 [style = solid, label="groupSet"];
58->47 [style = bold, label=""];
66->18 [style = bold, label=""];
39->56 [style = bold, label=""];
81->22 [style = solid, label="groupSets"];
26->45 [style = bold, label=""];
2->37 [style = bold, label=""];
28->74 [style = bold, label=""];
13->28 [style = bold, label=""];
}
