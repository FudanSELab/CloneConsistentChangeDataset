digraph {
8 [style = filled, label = "hiveCatalog = HiveTestUtils.createHiveCatalog()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "tableEnv.executeSql(String.format(\"create table partition_table_2 (x int, y string, z int) partitioned by (\" + \" pt_year int, pt_mon string, pt_day string)\" + \" tblproperties (\" + \"'%s' = 'true',\" + \" '%s' = 'latest',\" + \" '%s' = '12h',\" + \" '%s' = 'partition-time', \" + \" '%s' = 'default',\" + \" '%s' = '$pt_year-$pt_mon-$pt_day 00:00:00')\",STREAMING_SOURCE_ENABLE.key(),STREAMING_SOURCE_PARTITION_INCLUDE.key(),STREAMING_SOURCE_MONITOR_INTERVAL.key(),STREAMING_SOURCE_PARTITION_ORDER.key(),PARTITION_TIME_EXTRACTOR_KIND.key(),PARTITION_TIME_EXTRACTOR_TIMESTAMP_PATTERN.key()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "tableEnv.executeSql(String.format(\"create table partition_table_3 (x int, y string, z int) partitioned by (\" + \" pt_year int, pt_mon string, pt_day string)\" + \" tblproperties (\" + \" '%s' = 'true',\" + \" '%s' = 'latest',\" + \" '%s' = 'create-time')\",STREAMING_SOURCE_ENABLE.key(),STREAMING_SOURCE_PARTITION_INCLUDE.key(),STREAMING_SOURCE_PARTITION_ORDER.key()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "tableEnv.executeSql(\"create table default_catalog.default_database.probe (x int,y string, p as proctime()) \" + \"with ('connector'='COLLECTION','is-bounded' = 'false')\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tableEnv.executeSql(String.format(\"create table bounded_partition_table (x int, y string, z int) partitioned by (\" + \" pt_year int, pt_mon string, pt_day string)\" + \" tblproperties ('%s'='5min')\",FileSystemOptions.LOOKUP_JOIN_CACHE_TTL.key()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tableEnv = TableEnvironment.create(settings)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tableEnv.getConfig().setSqlDialect(SqlDialect.HIVE)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestCollectionTableFactory.initData(Arrays.asList(Row.of(1,\"a\"),Row.of(1,\"c\"),Row.of(2,\"b\"),Row.of(2,\"c\"),Row.of(3,\"c\"),Row.of(4,\"d\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tableEnv = TableEnvironment.create(EnvironmentSettings.inStreamingMode())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "tableEnv.executeSql(String.format(\"create table bounded_table (x int, y string, z int) tblproperties ('%s'='5min')\",FileSystemOptions.LOOKUP_JOIN_CACHE_TTL.key()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "tableEnv.getConfig().setSqlDialect(SqlDialect.DEFAULT)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tableEnv.useCatalog(hiveCatalog.getName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tableEnv.executeSql(String.format(\"create table partition_table_1 (x int, y string, z int) partitioned by (\" + \" pt_year int, pt_mon string, pt_day string)\" + \" tblproperties ('%s' = 'true', '%s' = 'latest', '%s'='120min')\",FileSystemOptions.STREAMING_SOURCE_ENABLE.key(),FileSystemOptions.STREAMING_SOURCE_PARTITION_INCLUDE.key(),FileSystemOptions.STREAMING_SOURCE_MONITOR_INTERVAL.key()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EnvironmentSettings settings = EnvironmentSettings.newInstance().inStreamingMode().useBlinkPlanner().build()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tableEnv.executeSql(String.format(\"create table partition_table (x int, y string, z int) partitioned by (\" + \" pt_year int, pt_mon string, pt_day string)\" + \" tblproperties ('%s' = 'true', '%s' = 'latest', '%s' = 'partition-name', '%s'='2h')\",STREAMING_SOURCE_ENABLE.key(),STREAMING_SOURCE_PARTITION_INCLUDE.key(),STREAMING_SOURCE_PARTITION_ORDER.key(),STREAMING_SOURCE_MONITOR_INTERVAL.key()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "hiveCatalog = HiveTestUtils.createHiveCatalog()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tableEnv.registerCatalog(hiveCatalog.getName(),hiveCatalog)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
3->1 [style = bold, label=""];
19->12 [style = bold, label=""];
0->6 [style = bold, label=""];
0->19 [style = bold, label=""];
10->17 [style = bold, label=""];
1->2 [style = solid, label="settings"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
15->16 [style = bold, label=""];
11->15 [style = bold, label=""];
5->0 [style = bold, label=""];
18->1 [style = bold, label=""];
17->14 [style = bold, label=""];
8->4 [style = solid, label="hiveCatalog"];
6->13 [style = bold, label=""];
1->2 [style = bold, label=""];
8->4 [style = bold, label=""];
4->5 [style = solid, label="hiveCatalog"];
4->5 [style = bold, label=""];
14->11 [style = bold, label=""];
}
