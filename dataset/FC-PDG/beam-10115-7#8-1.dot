digraph {
13 [style = filled, label = "verify(collector).collect(new RawUnionValue(1,three))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "outputsAreTaggedCorrectly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "function.open(new Configuration())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "StageBundleFactory stageBundleFactory = new StageBundleFactory(){@Override public RemoteBundle getBundle(OutputReceiverFactory receiverFactory,StateRequestHandler stateRequestHandler,BundleProgressHandler progressHandler){return new RemoteBundle(){@Override public String getId(){return \"bundle-id\"}@Override public Map<String,FnDataReceiver<WindowedValue<?>>> getInputReceivers(){return ImmutableMap.of(\"input\",null)}@Override public void close(){if (once) {return}receiverFactory.create(\"one\").accept(three)receiverFactory.create(\"two\").accept(four)receiverFactory.create(\"three\").accept(five)once = true}}}@Override public ProcessBundleDescriptors.ExecutableProcessBundleDescriptor getProcessBundleDescriptor(){return processBundleDescriptor}@Override public void close(){}}@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "WindowedValue<Integer> five = WindowedValue.valueInGlobalWindow(5)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Iterable<RawUnionValue> iterable = null@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "WindowedValue<Integer> three = WindowedValue.valueInGlobalWindow(3)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "isStateful@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(iterable,contains(new RawUnionValue(1,three),new RawUnionValue(2,four),new RawUnionValue(3,five)))@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Iterator<RawUnionValue> iterator = function.call(Collections.emptyIterator())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SparkExecutableStageFunction<Integer,?> function = getFunction(outputTagMap)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "FlinkExecutableStageFunction<Integer> function = getFunction(outputTagMap)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "outputsAreTaggedCorrectly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "verifyNoMoreInteractions(collector)@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(stageContext.getStageBundleFactory(any())).thenReturn(stageBundleFactory)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "function.reduce(Collections.emptyList(),collector)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<String,Integer> outputTagMap = ImmutableMap.of(\"one\",1,\"two\",2,\"three\",3)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "WindowedValue<Integer> four = WindowedValue.valueInGlobalWindow(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(collector).collect(new RawUnionValue(3,five))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "outputsAreTaggedCorrectly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "function.mapPartition(Collections.emptyList(),collector)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(collector).collect(new RawUnionValue(2,four))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
4->9 [style = bold, label=""];
5->10 [style = bold, label=""];
1->10 [style = solid, label="five"];
1->8 [style = bold, label=""];
3->0 [style = solid, label="stageBundleFactory"];
9->3 [style = solid, label="four"];
8->14 [style = solid, label="outputTagMap"];
4->13 [style = solid, label="three"];
7->14 [style = dashed, label="0"];
21->15 [style = bold, label=""];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
9->10 [style = solid, label="four"];
1->15 [style = solid, label="five"];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
1->3 [style = solid, label="five"];
20->18 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
15->17 [style = bold, label=""];
0->14 [style = bold, label=""];
8->7 [style = solid, label="outputTagMap"];
4->3 [style = solid, label="three"];
7->2 [style = bold, label=""];
9->21 [style = solid, label="four"];
20->12 [style = bold, label=""];
5->10 [style = solid, label="iterable"];
18->13 [style = bold, label=""];
20->12 [style = dotted, label="true"];
19->4 [style = bold, label=""];
20->18 [style = dotted, label="false"];
9->1 [style = bold, label=""];
13->21 [style = bold, label=""];
16->20 [style = bold, label=""];
4->10 [style = solid, label="three"];
2->5 [style = bold, label=""];
}
