digraph {
13 [style = filled, label = "final TestBloomFilterBufferColumnSelector mergeDim = new TestBloomFilterBufferColumnSelector(ImmutableList.of(ByteBuffer.wrap(BloomFilterSerializersModule.bloomKFilterToBytes(filter1)),ByteBuffer.wrap(BloomFilterSerializersModule.bloomKFilterToBytes(filter2))))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String serialized = filterToString(merged)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(serializedCombinedFilter,serialized)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testMergeValuesWithBuffersForGroupByV1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final TestBloomFilterColumnSelector mergeDim = new TestBloomFilterColumnSelector(ImmutableList.of(filter1,filter2))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "aggregateColumn(Collections.singletonList(mergeDim),mergeAggregator)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "++i@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BloomFilterMergeAggregator mergeAggregator = new BloomFilterMergeAggregator(mergeDim,maxNumValues,true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testMergeValuesWithBuffersForGroupByV1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BloomFilterMergeAggregator mergeAggregator = new BloomFilterMergeAggregator(mergeDim,new BloomKFilter(maxNumValues))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "BloomKFilter merged = BloomKFilter.deserialize((ByteBuffer)valueAggregatorFactory.getCombiningFactory().finalizeComputation(mergeAggregator.get()))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testMergeValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final TestBloomFilterColumnSelector mergeDim = new TestBloomFilterColumnSelector(ImmutableList.of(ByteBuffer.wrap(BloomFilterSerializersModule.bloomKFilterToBytes(filter1)),ByteBuffer.wrap(BloomFilterSerializersModule.bloomKFilterToBytes(filter2))))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "BloomKFilter merged = (BloomKFilter)valueAggregatorFactory.getCombiningFactory().finalizeComputation(mergeAggregator.get())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
13->10 [style = bold, label=""];
5->8 [style = solid, label="mergeDim"];
15->7 [style = bold, label=""];
11->2 [style = solid, label="merged"];
4->6 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
7->4 [style = bold, label=""];
11->2 [style = bold, label=""];
2->1 [style = solid, label="serialized"];
4->6 [style = solid, label="i"];
8->0 [style = bold, label=""];
9->2 [style = solid, label="merged"];
12->13 [style = bold, label=""];
3->5 [style = bold, label=""];
15->8 [style = solid, label="mergeDim"];
13->8 [style = solid, label="mergeDim"];
5->7 [style = solid, label="mergeDim"];
6->8 [style = dotted, label="true"];
6->11 [style = bold, label=""];
13->10 [style = solid, label="mergeDim"];
6->8 [style = bold, label=""];
10->4 [style = bold, label=""];
9->11 [style = dashed, label="0"];
5->7 [style = bold, label=""];
7->10 [style = dashed, label="0"];
14->15 [style = bold, label=""];
6->0 [style = dotted, label="true"];
6->9 [style = bold, label=""];
15->7 [style = solid, label="mergeDim"];
5->15 [style = dashed, label="0"];
7->8 [style = solid, label="mergeAggregator"];
10->8 [style = solid, label="mergeAggregator"];
}
