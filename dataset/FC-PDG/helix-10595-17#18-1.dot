digraph {
13 [style = filled, label = "participants(i(.syncStop()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers after session expiry.\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers.\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(result)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final int n = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,7 + 2 * n,\"HelixController should have 10 (6+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "final int r = 1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handler, but was \" + particHandlerNb + \", \" + printHandlers(participantManager))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){int controllerHandlerNb = controller.getHandlers().size()int particHandlerNb = participantManager.getHandlers().size()if (controllerHandlerNb == 10 && particHandlerNb == 2) return truereturn false}},1000)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect zk-watchers after session expiry.\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry, but was \" + printHandlers(participantManager))@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final MockParticipantManager participantManagerToExpire = participants(1(@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "i++@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManager.getSessionId())return watchPaths.size() == 1}},2000)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handlers\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "System.out.println(\"Expiring controller session...\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i++@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "String newSessionId = controller.getSessionId()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "controller.syncStop()@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "ZkTestHelper.expireSession(controller.getZkClient())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "System.out.println(\"Expired controller session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "controller.syncStart()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "System.out.println(\"Expried participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "int particHandlerNb = participantManager.getHandlers().size()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "handlerNb = participantManager.getHandlers().size()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "participants(i(.syncStart()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertTrue(verifier.verifyByPolling())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "controller.syncStop()@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},2000)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final int r = 2@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry, but was \" + printHandlers(controller))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher. MESSAGESHelixTaskExecutor\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final MockParticipantManager participantManager = participants(0(@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "String oldSessionId = controller.getSessionId()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (7 + r + (4 + r) * n)}},2000)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ZkHelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (7 + r + (4 + r) * n)}},2000)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@81@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "int i = 0@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "HelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@72@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "TestHelper.dropCluster(clusterName,_gZkClient)@@@80@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())System.err.println(\"controller watch paths after session expiry: \" + watchPaths.size())int expected = (7 + r + (4 + r) * n)return watchPaths.size() == expected}},2000)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher after session expiry.\")@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "i < n@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "participants(i(.syncStop()@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,11,\"HelixController should have 10 (5+2n) callback handlers for 2 (n) participant\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "i < n@@@68@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",r,32,n,2,\"MasterSlave\",true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36->45 [style = solid, label="result"];
63->72 [style = bold, label=""];
0->30 [style = bold, label=""];
75->56 [style = bold, label=""];
22->47 [style = solid, label="n"];
68->69 [style = bold, label=""];
46->13 [style = bold, label=""];
37->51 [style = dashed, label="0"];
75->45 [style = solid, label="i"];
31->26 [style = solid, label="clusterName"];
16->7 [style = bold, label=""];
44->15 [style = bold, label=""];
60->53 [style = bold, label=""];
41->9 [style = bold, label=""];
6->32 [style = dotted, label="true"];
61->54 [style = solid, label="handlerNb"];
22->67 [style = solid, label="n"];
46->48 [style = bold, label=""];
47->3 [style = solid, label="result"];
43->23 [style = bold, label=""];
6->19 [style = dotted, label="true"];
32->6 [style = bold, label=""];
1->46 [style = bold, label=""];
21->46 [style = bold, label=""];
3->36 [style = bold, label=""];
30->28 [style = bold, label=""];
10->39 [style = bold, label=""];
68->54 [style = solid, label="controllerHandlerNb"];
72->73 [style = bold, label=""];
2->14 [style = bold, label=""];
70->68 [style = bold, label=""];
46->13 [style = dotted, label="true"];
21->46 [style = solid, label="i"];
10->39 [style = solid, label="handlerNb"];
46->50 [style = bold, label=""];
62->58 [style = solid, label="participantManager"];
22->14 [style = solid, label="n"];
68->67 [style = solid, label="controllerHandlerNb"];
22->64 [style = bold, label=""];
45->10 [style = bold, label=""];
66->63 [style = bold, label=""];
1->46 [style = solid, label="i"];
11->16 [style = bold, label=""];
49->12 [style = bold, label=""];
31->44 [style = solid, label="clusterName"];
59->60 [style = bold, label=""];
38->11 [style = bold, label=""];
0->30 [style = solid, label="handlerNb"];
19->20 [style = bold, label=""];
22->43 [style = bold, label=""];
35->27 [style = solid, label="result"];
14->55 [style = solid, label="result"];
14->38 [style = bold, label=""];
63->72 [style = solid, label="newSessionId"];
71->75 [style = bold, label=""];
19->20 [style = solid, label="instanceName"];
6->20 [style = dotted, label="true"];
3->55 [style = dashed, label="0"];
53->72 [style = solid, label="oldSessionId"];
56->10 [style = bold, label=""];
27->14 [style = dashed, label="0"];
7->5 [style = bold, label=""];
55->65 [style = bold, label=""];
32->19 [style = solid, label="i"];
29->62 [style = solid, label="participants"];
14->30 [style = solid, label="particHandlerNb"];
54->74 [style = bold, label=""];
57->12 [style = bold, label=""];
75->56 [style = solid, label="i"];
34->62 [style = bold, label=""];
10->45 [style = bold, label=""];
34->52 [style = dashed, label="0"];
45->56 [style = bold, label=""];
22->41 [style = solid, label="n"];
44->54 [style = solid, label="controller"];
46->21 [style = dotted, label="true"];
27->47 [style = bold, label=""];
69->58 [style = solid, label="particHandlerNb"];
45->56 [style = solid, label="i"];
15->29 [style = bold, label=""];
43->41 [style = solid, label="r"];
20->32 [style = solid, label="i"];
41->9 [style = solid, label="result"];
47->3 [style = bold, label=""];
43->64 [style = dashed, label="0"];
11->59 [style = dashed, label="0"];
6->51 [style = bold, label=""];
25->18 [style = bold, label=""];
52->4 [style = bold, label=""];
20->4 [style = solid, label="participants"];
12->24 [style = bold, label=""];
51->52 [style = bold, label=""];
50->48 [style = bold, label=""];
31->50 [style = solid, label="clusterName"];
62->59 [style = solid, label="participantManager"];
22->26 [style = solid, label="n"];
4->41 [style = bold, label=""];
6->37 [style = bold, label=""];
14->11 [style = solid, label="particHandlerNb"];
40->12 [style = bold, label=""];
74->58 [style = solid, label="handlerNb"];
56->10 [style = dotted, label="true"];
2->38 [style = solid, label="controllerHandlerNb"];
8->63 [style = dashed, label="0"];
26->44 [style = bold, label=""];
24->31 [style = bold, label=""];
41->70 [style = dashed, label="0"];
31->48 [style = solid, label="clusterName"];
73->14 [style = bold, label=""];
16->60 [style = dashed, label="0"];
7->53 [style = dashed, label="0"];
1->21 [style = solid, label="i"];
44->67 [style = solid, label="controller"];
29->4 [style = solid, label="participants"];
61->54 [style = bold, label=""];
56->45 [style = dotted, label="true"];
69->59 [style = solid, label="particHandlerNb"];
43->47 [style = solid, label="r"];
4->62 [style = dashed, label="0"];
74->58 [style = bold, label=""];
58->71 [style = bold, label=""];
65->36 [style = solid, label="result"];
62->70 [style = bold, label=""];
5->8 [style = bold, label=""];
22->46 [style = solid, label="n"];
35->27 [style = bold, label=""];
38->67 [style = dashed, label="0"];
20->17 [style = bold, label=""];
33->6 [style = solid, label="i"];
39->54 [style = dashed, label="0"];
31->22 [style = bold, label=""];
69->67 [style = bold, label=""];
8->42 [style = solid, label="newSessionId"];
33->6 [style = bold, label=""];
64->14 [style = solid, label="r"];
31->20 [style = solid, label="clusterName"];
23->26 [style = bold, label=""];
22->6 [style = solid, label="n"];
56->0 [style = bold, label=""];
12->31 [style = solid, label="className"];
28->1 [style = bold, label=""];
6->19 [style = bold, label=""];
17->32 [style = bold, label=""];
18->2 [style = bold, label=""];
14->69 [style = dashed, label="0"];
64->26 [style = solid, label="r"];
6->17 [style = dotted, label="true"];
42->35 [style = bold, label=""];
64->23 [style = bold, label=""];
32->6 [style = solid, label="i"];
65->36 [style = bold, label=""];
20->62 [style = solid, label="participants"];
24->31 [style = solid, label="methodName"];
29->33 [style = bold, label=""];
8->42 [style = bold, label=""];
39->0 [style = bold, label=""];
0->74 [style = dashed, label="0"];
2->39 [style = solid, label="controllerHandlerNb"];
37->34 [style = bold, label=""];
9->25 [style = bold, label=""];
53->66 [style = bold, label=""];
43->26 [style = solid, label="r"];
30->58 [style = dashed, label="0"];
42->72 [style = dashed, label="0"];
34->4 [style = bold, label=""];
5->66 [style = dashed, label="0"];
14->55 [style = bold, label=""];
36->61 [style = bold, label=""];
31->35 [style = solid, label="clusterName"];
33->19 [style = solid, label="i"];
36->45 [style = bold, label=""];
25->18 [style = solid, label="result"];
13->21 [style = bold, label=""];
22->56 [style = solid, label="n"];
7->42 [style = solid, label="oldSessionId"];
31->0 [style = solid, label="clusterName"];
31->23 [style = solid, label="clusterName"];
67->59 [style = bold, label=""];
}
