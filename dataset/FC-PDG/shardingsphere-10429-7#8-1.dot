digraph {
2 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_1\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RouteContext routeContext = shardingTableBroadcastRoutingEngine.route(createShardingRule(false))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Collection<String> tableNames = Collections.singletonList(\"t_order\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_1\")@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(segment.getIdentifier().getValue()).thenReturn(\"t_order\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "SQLStatementContext<DropIndexStatement> sqlStatementContext = mock(,RETURNS_DEEP_STUBS)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertRouteForDropIndexStatement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_0\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(mock(),createSQLStatementContext(tableNames),tableNames)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_0\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(schema,sqlStatementContext,tableNames)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(tableNames)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(((IndexAvailable)sqlStatementContext).getIndexes()).thenReturn(Collections.singletonList(segment))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ShardingSphereSchema schema = mock(,RETURNS_DEEP_STUBS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertRouteForNormalTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(routeContext.getRouteUnits().size(),is(4))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertRouteForNormalTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Collection<String> tableNames = Collections.emptyList()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_1\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_0\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_0\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_1\")@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27->18 [style = bold, label=""];
30->24 [style = bold, label=""];
25->15 [style = solid, label="tableNames"];
15->7 [style = bold, label=""];
25->23 [style = solid, label="tableNames"];
25->23 [style = bold, label=""];
31->32 [style = bold, label=""];
21->15 [style = bold, label=""];
2->3 [style = bold, label=""];
10->12 [style = dashed, label="0"];
10->11 [style = solid, label="routeContext"];
22->28 [style = bold, label=""];
20->31 [style = bold, label=""];
24->29 [style = bold, label=""];
9->10 [style = bold, label=""];
16->19 [style = bold, label=""];
18->21 [style = solid, label="segment"];
28->15 [style = solid, label="sqlStatementContext"];
8->9 [style = solid, label="tableNames"];
12->13 [style = bold, label=""];
29->27 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
18->22 [style = bold, label=""];
23->21 [style = bold, label=""];
0->4 [style = bold, label=""];
19->26 [style = bold, label=""];
6->8 [style = bold, label=""];
7->16 [style = bold, label=""];
8->9 [style = bold, label=""];
7->16 [style = solid, label="routeContext"];
28->25 [style = bold, label=""];
5->7 [style = bold, label=""];
13->0 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
9->12 [style = bold, label=""];
14->8 [style = bold, label=""];
32->17 [style = bold, label=""];
26->20 [style = bold, label=""];
24->15 [style = solid, label="schema"];
10->11 [style = bold, label=""];
}
