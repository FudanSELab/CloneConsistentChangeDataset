digraph {
3 [style = filled, label = "chunks.add(this.freeListManager.allocate(SMALL_SLAB - 8 + 1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "chunks.add(this.freeListManager.allocate(DEFAULT_SLAB_SIZE / 2 - 8))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(this.freeListManager.defragment(DEFAULT_SLAB_SIZE + 1)).isFalse()@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Slab slab = new SlabImpl(DEFAULT_SLAB_SIZE)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "this.freeListManager = createFreeListManager(ma,new Slab((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@114c52)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "chunks.add(this.freeListManager.allocate(SMALL_SLAB - 8 + 1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int SMALL_SLAB = 16@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ArrayList<OffHeapStoredObject> chunks = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "defragmentWithLargeChunkSizeReturnsFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "chunks.add(this.freeListManager.allocate(DEFAULT_SLAB_SIZE / 2 - 8))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "defragmentWithLargeChunkSizeReturnsFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "OffHeapStoredObject.release(c.getAddress(),this.freeListManager)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "this.freeListManager.allocate(DEFAULT_SLAB_SIZE / 2 - 8)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "this.freeListManager.firstDefragmentation = false@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(this.freeListManager.defragment(DEFAULT_SLAB_SIZE / 2)).isTrue()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int MEDIUM_SLAB = 128@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ReferenceCounter.release(c.getAddress(),this.freeListManager)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "defragmentWithLiveChunks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "this.freeListManager.allocate(SMALL_SLAB - 8 + 1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "OffHeapStoredObject.release(c.getAddress(),this.freeListManager)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->14 [style = bold, label=""];
16->18 [style = bold, label=""];
12->5 [style = bold, label=""];
6->7 [style = dashed, label="0"];
3->11 [style = bold, label=""];
5->17 [style = solid, label="SMALL_SLAB"];
1->14 [style = solid, label="freeListManager"];
19->11 [style = bold, label=""];
8->14 [style = dashed, label="0"];
2->1 [style = solid, label="MEDIUM_SLAB"];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
15->5 [style = bold, label=""];
14->7 [style = bold, label=""];
5->3 [style = solid, label="SMALL_SLAB"];
5->2 [style = bold, label=""];
1->8 [style = solid, label="freeListManager"];
2->0 [style = bold, label=""];
5->4 [style = solid, label="SMALL_SLAB"];
3->19 [style = bold, label=""];
1->16 [style = solid, label="freeListManager"];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
10->17 [style = dashed, label="0"];
13->5 [style = bold, label=""];
10->4 [style = bold, label=""];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
11->17 [style = bold, label=""];
18->7 [style = bold, label=""];
0->1 [style = solid, label="slab"];
5->1 [style = solid, label="SMALL_SLAB"];
17->16 [style = bold, label=""];
}
