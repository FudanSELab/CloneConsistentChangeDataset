digraph {
12 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertOrder(tuples,4,3,2,1,0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertOrder(tuples,2,0,1,3,4)@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assert(tuples.size() == 5)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "testMergeStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(5,tuples.size())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "testMergeStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tuples = getTuples(mstream)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(4,tuples.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "List<Tuple> tuples = getTuples(ustream)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tuples = getTuples(mstream)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assert(tuples.size() == 5)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assert(tuples.size() == 5)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SolrParams sParamsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assert(tuples.size() == 5)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "SolrParams sParams = StreamingTest.mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(5,tuples.size())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Tuple> tuples = getTuples(mstream)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testUniqueStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParams)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING)))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tuples = getTuples(mstream)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(5,tuples.size())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(5,tuples.size())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertOrder(tuples,0,1,3,4)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertOrder(tuples,0,2,1,3,4)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertOrder(tuples,0,1,2,3,4)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "UniqueStream ustream = new UniqueStream(stream,new FieldEqualitor(\"a_f\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
17->8 [style = bold, label=""];
16->15 [style = bold, label=""];
39->44 [style = solid, label="ustream"];
44->42 [style = bold, label=""];
4->35 [style = bold, label=""];
42->41 [style = bold, label=""];
7->1 [style = bold, label=""];
12->24 [style = solid, label="sParamsB"];
9->11 [style = bold, label=""];
39->44 [style = bold, label=""];
21->22 [style = solid, label="tuples"];
5->33 [style = solid, label="sParamsA"];
5->33 [style = bold, label=""];
26->10 [style = bold, label=""];
1->9 [style = solid, label="sParamsA"];
29->14 [style = solid, label="mstream"];
8->18 [style = bold, label=""];
4->23 [style = solid, label="tuples"];
44->41 [style = solid, label="tuples"];
43->39 [style = solid, label="stream"];
4->19 [style = bold, label=""];
24->29 [style = solid, label="streamB"];
27->31 [style = bold, label=""];
30->25 [style = bold, label=""];
14->34 [style = bold, label=""];
31->2 [style = bold, label=""];
6->0 [style = bold, label=""];
24->29 [style = bold, label=""];
3->32 [style = solid, label="sParamsB"];
13->21 [style = solid, label="mstream"];
12->24 [style = bold, label=""];
33->12 [style = bold, label=""];
15->18 [style = solid, label="streamA"];
25->6 [style = bold, label=""];
30->36 [style = dashed, label="0"];
34->10 [style = bold, label=""];
28->38 [style = dashed, label="0"];
22->5 [style = bold, label=""];
27->31 [style = solid, label="streamB"];
37->7 [style = bold, label=""];
1->9 [style = bold, label=""];
21->28 [style = bold, label=""];
45->7 [style = bold, label=""];
21->38 [style = bold, label=""];
0->13 [style = solid, label="streamA"];
8->18 [style = solid, label="streamB"];
1->40 [style = dashed, label="0"];
9->43 [style = dashed, label="0"];
14->26 [style = bold, label=""];
2->25 [style = solid, label="tuples"];
35->23 [style = bold, label=""];
15->17 [style = bold, label=""];
9->31 [style = solid, label="streamA"];
36->25 [style = bold, label=""];
11->27 [style = solid, label="sParamsB"];
18->4 [style = bold, label=""];
10->16 [style = bold, label=""];
17->8 [style = solid, label="sParamsB"];
18->4 [style = solid, label="mstream"];
19->23 [style = bold, label=""];
32->13 [style = solid, label="streamB"];
2->36 [style = bold, label=""];
29->14 [style = bold, label=""];
16->15 [style = solid, label="sParamsA"];
31->2 [style = solid, label="mstream"];
33->29 [style = solid, label="streamA"];
14->10 [style = solid, label="tuples"];
40->43 [style = solid, label="sParams"];
40->43 [style = bold, label=""];
6->0 [style = solid, label="sParamsA"];
20->7 [style = bold, label=""];
2->30 [style = bold, label=""];
3->32 [style = bold, label=""];
32->13 [style = bold, label=""];
13->21 [style = bold, label=""];
38->22 [style = bold, label=""];
43->39 [style = bold, label=""];
26->34 [style = dashed, label="0"];
19->35 [style = dashed, label="0"];
7->40 [style = bold, label=""];
28->22 [style = bold, label=""];
11->27 [style = bold, label=""];
}
