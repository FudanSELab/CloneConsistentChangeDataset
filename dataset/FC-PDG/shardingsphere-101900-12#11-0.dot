digraph {
26 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertGetDefaultValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD),is(128))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE),is(\"XA\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(),\"20\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(),\"20\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(),Boolean.TRUE.toString())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE),is(0))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertGetDefaultValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),is(20))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertGetValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD),is(20))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),is(1))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(),Boolean.FALSE.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE),is(Runtime.getRuntime().availableProcessors() * 2))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE),is(20))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE),is(\"LOCAL\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(),\"20\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(),\"XA\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(),Boolean.TRUE.toString())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ConfigurationProperties actual = new ConfigurationProperties(props)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ConfigurationProperties actual = new ConfigurationProperties(new Properties())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(),Boolean.TRUE.toString())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(),Boolean.TRUE.toString())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(),\"20\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Properties props = new Properties()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE),is(20))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
33->35 [style = bold, label=""];
14->25 [style = bold, label=""];
31->23 [style = bold, label=""];
11->20 [style = dashed, label="0"];
35->18 [style = bold, label=""];
5->9 [style = bold, label=""];
9->2 [style = bold, label=""];
0->6 [style = bold, label=""];
18->15 [style = bold, label=""];
24->19 [style = solid, label="props"];
28->13 [style = bold, label=""];
16->32 [style = bold, label=""];
3->22 [style = dashed, label="0"];
32->34 [style = bold, label=""];
13->30 [style = bold, label=""];
1->7 [style = bold, label=""];
17->19 [style = bold, label=""];
5->34 [style = dashed, label="0"];
20->21 [style = bold, label=""];
7->9 [style = bold, label=""];
24->16 [style = bold, label=""];
25->20 [style = bold, label=""];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
12->10 [style = bold, label=""];
21->29 [style = bold, label=""];
23->33 [style = bold, label=""];
9->14 [style = dashed, label="0"];
6->29 [style = dashed, label="0"];
30->31 [style = bold, label=""];
1->16 [style = dashed, label="0"];
19->26 [style = bold, label=""];
3->8 [style = bold, label=""];
0->21 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
22->17 [style = bold, label=""];
7->32 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
27->24 [style = bold, label=""];
34->14 [style = bold, label=""];
26->28 [style = bold, label=""];
29->22 [style = bold, label=""];
10->1 [style = bold, label=""];
10->24 [style = dashed, label="0"];
2->11 [style = bold, label=""];
}
