digraph {
12 [style = filled, label = "transportService.start()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest2.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CapturedRequest(( capturedRequests1a = capturingTransport.getCapturedRequestsAndClear()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest1.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testJoinDeduplication['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TransportService transportService = capturingTransport.createTransportService(Settings.EMPTY,deterministicTaskQueue.getThreadPool(),TransportService.NOOP_TRANSPORT_INTERCEPTOR,null,null,Collections.emptySet())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "joinHelper.sendJoinRequest(node1,randomNonNegativeLong(),optionalJoin1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "transportService.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(capturedRequests2.length,equalTo(0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(node1,capturedRequest1a.node)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "CapturedRequest capturedRequest2a = capturedRequests2a(0(@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "capturingTransport.handleResponse(capturedRequest1.requestId,TransportResponse.Empty.INSTANCE)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JoinHelper joinHelper = new JoinHelper(Settings.EMPTY,null,null,transportService,null,null,null,null,Collections.emptyList(),null,null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(joinHelper.isJoinPending())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "AtomicReference<StatusInfo> nodeHealthServiceStatus = new AtomicReference<>(new StatusInfo(UNHEALTHY,\"unhealthy-info\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DeterministicTaskQueue deterministicTaskQueue = new DeterministicTaskQueue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testJoinFailureOnUnhealthyNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(capturedRequests1a.length,equalTo(1))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(node1,capturedRequest1.node)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Optional<Join> optionalJoin1 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node1,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Optional<Join> optionalJoin2 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Optional<Join> optionalJoin2 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(capturedRequests1.length,equalTo(1))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "CapturedRequest capturedRequest1 = capturedRequests1(0(@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "CapturedRequest(( capturedRequests2 = capturingTransport.getCapturedRequestsAndClear()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(capturedRequests1.length,equalTo(0))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertTrue(joinHelper.isJoinPending())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "CapturingTransport capturingTransport = new CapturingTransport()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "nodeHealthServiceStatus.getAndSet(new StatusInfo(HEALTHY,\"healthy-info\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest1a.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@56@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "CapturedRequest(( capturedRequests2a = capturingTransport.getCapturedRequestsAndClear()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(capturedRequests2.length,equalTo(1))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"node0\",buildNewFakeTransportAddress(),Version.CURRENT)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CapturedRequest(( capturedRequests2 = capturingTransport.getCapturedRequestsAndClear()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CapturedRequest capturedRequest1a = capturedRequests1a(0(@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DiscoveryNode node1 = new DiscoveryNode(\"node1\",buildNewFakeTransportAddress(),Version.CURRENT)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DiscoveryNode node2 = new DiscoveryNode(\"node2\",buildNewFakeTransportAddress(),Version.CURRENT)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "CapturedRequest capturedRequest2 = capturedRequests2(0(@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "randomBoolean()@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "CapturedRequest(( capturedRequests1a = capturingTransport.getCapturedRequestsAndClear()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest2a.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertThat(capturedRequests2a.length,equalTo(1))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "CapturingTransport capturingTransport = new HandshakingCapturingTransport()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(node2,capturedRequest2a.node)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testJoinFailureOnUnhealthyNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(capturingTransport.getCapturedRequestsAndClear().length,equalTo(0))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(node2,capturedRequest2.node)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "joinHelper.sendJoinRequest(node2,0L,optionalJoin2a)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Optional<Join> optionalJoin2a = optionalJoin2.isPresent() && randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "joinHelper.sendJoinRequest(node2,0L,optionalJoin2)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CapturedRequest(( capturedRequests1 = capturingTransport.getCapturedRequestsAndClear()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48->36 [style = bold, label=""];
21->3 [style = bold, label=""];
26->17 [style = bold, label=""];
30->43 [style = bold, label=""];
11->16 [style = bold, label=""];
20->47 [style = solid, label="node1"];
18->21 [style = solid, label="optionalJoin1"];
51->43 [style = bold, label=""];
43->39 [style = bold, label=""];
4->2 [style = bold, label=""];
1->33 [style = bold, label=""];
3->48 [style = solid, label="capturedRequests1"];
13->37 [style = bold, label=""];
11->57 [style = solid, label="node2"];
21->47 [style = dashed, label="0"];
44->41 [style = bold, label=""];
14->8 [style = bold, label=""];
20->14 [style = solid, label="node1"];
18->21 [style = bold, label=""];
47->3 [style = bold, label=""];
11->33 [style = solid, label="node2"];
20->15 [style = solid, label="node1"];
24->29 [style = bold, label=""];
11->49 [style = solid, label="node2"];
9->12 [style = bold, label=""];
18->47 [style = bold, label=""];
56->1 [style = bold, label=""];
18->41 [style = solid, label="optionalJoin1"];
34->42 [style = bold, label=""];
1->10 [style = bold, label=""];
8->5 [style = bold, label=""];
25->1 [style = solid, label="optionalJoin2"];
40->52 [style = bold, label=""];
11->34 [style = solid, label="node2"];
7->9 [style = bold, label=""];
20->21 [style = solid, label="node1"];
49->35 [style = bold, label=""];
8->19 [style = solid, label="capturedRequests1a"];
50->57 [style = bold, label=""];
5->31 [style = bold, label=""];
18->14 [style = solid, label="optionalJoin1"];
31->51 [style = bold, label=""];
57->49 [style = bold, label=""];
17->9 [style = bold, label=""];
12->20 [style = bold, label=""];
39->19 [style = bold, label=""];
25->27 [style = bold, label=""];
35->54 [style = solid, label="capturedRequests2a"];
41->5 [style = bold, label=""];
20->36 [style = solid, label="node1"];
39->15 [style = solid, label="capturedRequests1a"];
20->11 [style = bold, label=""];
5->19 [style = bold, label=""];
20->18 [style = solid, label="node1"];
10->6 [style = bold, label=""];
45->40 [style = bold, label=""];
52->46 [style = bold, label=""];
13->23 [style = bold, label=""];
17->9 [style = solid, label="transportService"];
26->1 [style = solid, label="localNode"];
26->57 [style = solid, label="localNode"];
36->56 [style = bold, label=""];
38->13 [style = bold, label=""];
4->53 [style = dashed, label="0"];
0->24 [style = bold, label=""];
35->55 [style = bold, label=""];
53->48 [style = bold, label=""];
11->1 [style = solid, label="node2"];
33->38 [style = bold, label=""];
23->14 [style = bold, label=""];
31->30 [style = bold, label=""];
17->7 [style = bold, label=""];
3->53 [style = bold, label=""];
3->4 [style = bold, label=""];
11->25 [style = solid, label="node2"];
18->43 [style = solid, label="optionalJoin1"];
42->45 [style = bold, label=""];
15->50 [style = bold, label=""];
20->43 [style = solid, label="node1"];
18->47 [style = solid, label="optionalJoin1"];
20->50 [style = solid, label="node1"];
37->44 [style = bold, label=""];
16->18 [style = bold, label=""];
20->41 [style = solid, label="node1"];
22->29 [style = dashed, label="0"];
19->15 [style = bold, label=""];
6->13 [style = bold, label=""];
6->13 [style = dashed, label="0"];
2->25 [style = bold, label=""];
11->44 [style = solid, label="node2"];
24->22 [style = bold, label=""];
31->30 [style = dotted, label="false"];
28->24 [style = bold, label=""];
38->37 [style = solid, label="capturedRequests2"];
22->26 [style = bold, label=""];
27->1 [style = bold, label=""];
26->18 [style = solid, label="localNode"];
57->49 [style = solid, label="optionalJoin2a"];
1->33 [style = solid, label="optionalJoin2"];
26->25 [style = solid, label="localNode"];
31->51 [style = dotted, label="true"];
55->54 [style = bold, label=""];
32->24 [style = bold, label=""];
29->26 [style = bold, label=""];
54->34 [style = bold, label=""];
}
