digraph {
8 [style = filled, label = "testToQueryFieldsWildcard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testToQueryFieldsWildcard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DisjunctionMaxQuery dQuery = (DisjunctionMaxQuery)query@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Query query = multiMatchQuery(\"test\").field(\"mapped_str*\").tieBreaker(1.0f).toQuery(createShardContext())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertThat(assertDisjunctionSubQuery(query,,1).getTerm(),equalTo(new Term(KEYWORD_FIELD_NAME,\"test\")))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<Query> disjuncts = disMaxQuery.getDisjuncts()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(dQuery.getTieBreakerMultiplier(),equalTo(1.0f))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(dQuery.getDisjuncts().size(),equalTo(2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(((TermQuery)disjuncts.get(1)).getTerm(),equalTo(new Term(KEYWORD_FIELD_NAME,\"test\")))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME).field(KEYWORD_FIELD_NAME).toQuery(createShardContext())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(assertDisjunctionSubQuery(query,,0).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"test\")))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Query query = multiMatchQuery(\"test\").field(\"mapped_str*\").tieBreaker(1.0f).toQuery(createSearchExecutionContext())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery)query@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(((TermQuery)disjuncts.get(0)).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"test\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testToQueryMultipleFieldsDisMaxQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(query,instanceOf())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
3->1 [style = bold, label=""];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
4->7 [style = solid, label="query"];
9->7 [style = bold, label=""];
3->13 [style = dashed, label="0"];
4->7 [style = bold, label=""];
2->10 [style = dashed, label="0"];
11->7 [style = solid, label="query"];
6->12 [style = dashed, label="0"];
9->2 [style = solid, label="query"];
12->13 [style = bold, label=""];
4->9 [style = dashed, label="0"];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
14->12 [style = bold, label=""];
8->9 [style = bold, label=""];
9->7 [style = solid, label="query"];
4->11 [style = dashed, label="0"];
11->10 [style = solid, label="query"];
4->2 [style = solid, label="query"];
11->7 [style = bold, label=""];
2->5 [style = bold, label=""];
}
