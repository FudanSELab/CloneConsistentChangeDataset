digraph {
0 [style = filled, label = "final RelBuilder builder = relBuilder().scan(\"EMP\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "relFn(relFn).ok(expectedSql)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testUnparseInStruct1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final String expectedSql = \"SELECT *\" + \"FROM \"scott\".\"EMP\"\" + \"WHERE ROW(\"DEPTNO\", \"JOB\") IN (ROW(1, 'PRESIDENT'), ROW(2, 'PRESIDENT'))\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final RelNode root = relBuilder().scan(\"EMP\").filter(condition).build()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testUnparseInStruct2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Function<RelBuilder,RelNode> relFn = null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final RexNode condition = builder.call(SqlStdOperatorTable.IN,builder.call(SqlStdOperatorTable.ROW,builder.field(\"DEPTNO\"),builder.field(\"JOB\")),builder.call(SqlStdOperatorTable.ROW,builder.literal(1),builder.literal(\"PRESIDENT\")),builder.call(SqlStdOperatorTable.ROW,builder.literal(2),builder.literal(\"PRESIDENT\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(sql,isLinux(expectedSql))@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexNode condition = builder.call(SqlStdOperatorTable.IN,builder.call(SqlStdOperatorTable.ROW,builder.field(\"DEPTNO\"),builder.field(\"JOB\")),builder.call(SqlStdOperatorTable.ROW,builder.literal(1),builder.literal(\"PRESIDENT\")))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final String expectedSql = \"SELECT *\" + \"FROM \"scott\".\"EMP\"\" + \"WHERE ROW(\"DEPTNO\", \"JOB\") IN (ROW(1, 'PRESIDENT'))\"@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final String sql = toSql(root)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testUnparseInStruct1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String expectedSql = \"SELECT *\" + \"FROM \"scott\".\"EMP\"\" + \"WHERE ROW(\"DEPTNO\", \"JOB\") IN (ROW(1, 'PRESIDENT'))\"@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
13->2 [style = solid, label="expectedSql"];
0->12 [style = bold, label=""];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
1->5 [style = solid, label="root"];
3->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
4->12 [style = dashed, label="0"];
6->2 [style = bold, label=""];
11->0 [style = bold, label=""];
6->2 [style = solid, label="expectedSql"];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
0->4 [style = bold, label=""];
5->13 [style = bold, label=""];
8->9 [style = bold, label=""];
0->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
9->10 [style = solid, label="expectedSql"];
13->2 [style = bold, label=""];
5->2 [style = solid, label="sql"];
}
