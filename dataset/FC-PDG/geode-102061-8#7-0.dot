digraph {
23 [style = filled, label = "assertThat(results.isEmpty()).isTrue()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testRemoteAndLocalQueryReturnsResultsToPartitionedQueryEvaluator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "PartitionedQueryScenario scenario = new PartitionedQueryScenario(localNode,allNodes,noFailingMembers,createFakeBucketMap(),new ProcessDataFaker(){@Override public void processData(PartitionedRegionQueryEvaluator prqe){}@Override public void executeQueryLocally(Collection resultsCollector){resultsCollector.add(resultsForMember1)}})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectedResults.addAll(resultsForMember2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Set allBucketsToQuery = scenario.getAllBucketsToQuery()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<Object> resultsForMember1 = createResultObjects(\"1\",\"2\",\"3\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "List<Object> resultsForMember2 = createResultObjects(\"4\",\"5\",\"6\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testRemoteAndLocalQueryReturnsResultsToPartitionedQueryEvaluator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Queue<PartitionedQueryScenario> scenarios = createScenariosQueue(scenario)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Collection results = prqe.queryBuckets(null).asList()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List resultsForMember2 = createResultObjects(\"4\",\"5\",\"6\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expectedResults.size(),results.size())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "List resultsForMember1 = createResultObjects(\"1\",\"2\",\"3\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PartitionedRegionQueryEvaluator prqe = new ExtendedPartitionedRegionQueryEvaluator(system,pr,query,mock(),null,new LinkedResultSet(),allBucketsToQuery,scenarios)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(results.size()).isEqualTo(expectedResults.size())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "dataStore.setScenarios(scenarios)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedResults.addAll(resultsForMember1)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(results).isNotNull()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "List expectedResults = new LinkedList()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(results)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "results.removeAll(resultsForMember1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<Object> expectedResults = new LinkedList()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Set<Integer> allBucketsToQuery = scenario.getAllBucketsToQuery()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(results.isEmpty())@@@20@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testLocalQueryReturnsResultsToPartitionedQueryEvaluator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(resultsForMember1.size(),results.size())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "results.removeAll(expectedResults)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->9 [style = solid, label="scenario"];
8->10 [style = bold, label=""];
8->19 [style = dashed, label="0"];
5->1 [style = solid, label="resultsForMember2"];
21->19 [style = bold, label=""];
22->16 [style = bold, label=""];
13->7 [style = solid, label="resultsForMember1"];
17->14 [style = solid, label="allBucketsToQuery"];
17->9 [style = bold, label=""];
26->25 [style = bold, label=""];
22->7 [style = solid, label="resultsForMember1"];
4->26 [style = bold, label=""];
19->10 [style = bold, label=""];
11->23 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
9->14 [style = solid, label="scenarios"];
0->10 [style = solid, label="expectedResults"];
15->4 [style = solid, label="results"];
9->12 [style = solid, label="scenarios"];
0->20 [style = dashed, label="0"];
4->21 [style = dashed, label="0"];
2->4 [style = bold, label=""];
5->2 [style = solid, label="resultsForMember2"];
13->1 [style = bold, label=""];
1->17 [style = bold, label=""];
0->7 [style = bold, label=""];
5->16 [style = dashed, label="0"];
20->10 [style = solid, label="expectedResults"];
5->1 [style = bold, label=""];
13->1 [style = solid, label="resultsForMember1"];
1->6 [style = bold, label=""];
18->22 [style = bold, label=""];
13->25 [style = solid, label="resultsForMember1"];
16->1 [style = bold, label=""];
16->1 [style = solid, label="resultsForMember2"];
2->21 [style = bold, label=""];
7->2 [style = bold, label=""];
15->20 [style = bold, label=""];
10->23 [style = bold, label=""];
15->0 [style = bold, label=""];
25->11 [style = bold, label=""];
16->2 [style = solid, label="resultsForMember2"];
12->14 [style = bold, label=""];
15->4 [style = bold, label=""];
13->5 [style = bold, label=""];
3->13 [style = bold, label=""];
4->8 [style = bold, label=""];
14->15 [style = bold, label=""];
9->12 [style = bold, label=""];
6->14 [style = solid, label="allBucketsToQuery"];
6->9 [style = bold, label=""];
20->7 [style = bold, label=""];
8->26 [style = dashed, label="0"];
13->22 [style = dashed, label="0"];
10->25 [style = dashed, label="0"];
22->1 [style = solid, label="resultsForMember1"];
24->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
