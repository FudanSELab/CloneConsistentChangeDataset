digraph {
7 [style = filled, label = "logger.info(\"(Before Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(((List)(sei.getProducer().get().listSpecs().get())).size() == 0,\"SpecProducer should contain 0 \" + \"Spec after addition\")@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "flowSpec = (FlowSpec)spec@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "logger.info(\"(After Delete( Number of specs: \" + specs.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "deleteFlowSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SpecExecutorInstanceProducer sei = specCompiler.getTopologySpecMap().values().iterator().next().getSpecExecutorInstanceProducer()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SpecExecutor sei = specCompiler.getTopologySpecMap().values().iterator().next().getSpecExecutor()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertTrue(specs.size() == 1,\"Spec store should contain 1 Flow that was added in last test\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(specsInSEI == 0,\"SpecExecutorInstanceProducer should not contain \" + \"Spec after deletion\")@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Collection<Spec> specs = flowCatalog.getSpecs()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "specs = flowCatalog.getSpecs()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "specsInSEI = ((List)(sei.listSpecs().get())).size()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "logger.info(\"(Before Delete( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "logger.info(\"(After Delete( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "this.flowCatalog.remove(flowSpec.getUri())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i = 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "createFlowSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Assert.assertTrue(specs.size() == 0,\"Spec store should be empty before addition\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(((List)(sei.listSpecs().get())).size() == 0,\"SpecExecutorInstanceProducer should contain 0 \" + \"Spec after addition\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "int specsInSEI = ((List)(sei.listSpecs().get())).size()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createFlowSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(specsInSEI == 0,\"SpecExecutorInstanceProducer should contain 0 \" + \"Spec after addition because Orchestrator is a no-op listener for any new FlowSpecs\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "logger.info(\"(Before Delete( Number of specs: \" + specs.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "logger.info(\"(Before Create( Number of specs: \" + specs.size())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(specs.size() == 1,\"Spec store should contain 1 Spec after addition\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(specs.size() == 0,\"Spec store should not contain Spec after deletion\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IdentityFlowToJobSpecCompiler specCompiler = (IdentityFlowToJobSpecCompiler)this.orchestrator.getSpecCompiler()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "specs = flowCatalog.getSpecs()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(((List)(sei.getProducer().get().listSpecs().get())).size() == 0,\"SpecProducer should not know about \" + \"any Flow before addition\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "this.flowCatalog.put(flowSpec)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(((List)(sei.listSpecs().get())).size() == 0,\"SpecExecutorInstanceProducer should not know about \" + \"any Flow before addition\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "FlowSpec flowSpec = (FlowSpec)spec@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "flowSpec = (FlowSpec)spec@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->7 [style = solid, label="flowSpec"];
16->7 [style = solid, label="i"];
4->18 [style = dashed, label="0"];
8->5 [style = solid, label="flowSpec"];
10->20 [style = bold, label=""];
31->23 [style = bold, label=""];
13->32 [style = bold, label=""];
9->11 [style = bold, label=""];
16->8 [style = bold, label=""];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
24->0 [style = bold, label=""];
25->30 [style = bold, label=""];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
0->2 [style = bold, label=""];
29->9 [style = bold, label=""];
30->26 [style = bold, label=""];
10->31 [style = dashed, label="0"];
14->20 [style = dashed, label="0"];
27->31 [style = bold, label=""];
28->9 [style = bold, label=""];
29->25 [style = bold, label=""];
4->30 [style = dashed, label="0"];
12->16 [style = bold, label=""];
1->0 [style = bold, label=""];
0->21 [style = bold, label=""];
3->12 [style = bold, label=""];
23->33 [style = solid, label="specsInSEI"];
28->29 [style = solid, label="i"];
7->8 [style = bold, label=""];
30->26 [style = solid, label="specsInSEI"];
17->9 [style = solid, label="i"];
8->27 [style = solid, label="flowSpec"];
11->18 [style = bold, label=""];
8->7 [style = bold, label=""];
19->0 [style = bold, label=""];
20->5 [style = bold, label=""];
13->32 [style = dashed, label="0"];
3->34 [style = bold, label=""];
7->27 [style = dashed, label="0"];
13->17 [style = bold, label=""];
16->27 [style = solid, label="i"];
14->23 [style = dashed, label="0"];
23->33 [style = bold, label=""];
9->29 [style = dashed, label="0"];
5->6 [style = bold, label=""];
2->21 [style = dashed, label="0"];
15->9 [style = bold, label=""];
9->15 [style = bold, label=""];
6->13 [style = bold, label=""];
34->16 [style = bold, label=""];
15->9 [style = solid, label="flowSpec"];
5->33 [style = dashed, label="0"];
17->15 [style = bold, label=""];
11->25 [style = dashed, label="0"];
9->29 [style = solid, label="flowSpec"];
22->13 [style = bold, label=""];
8->27 [style = bold, label=""];
9->29 [style = bold, label=""];
32->28 [style = bold, label=""];
12->34 [style = dashed, label="0"];
27->8 [style = bold, label=""];
33->22 [style = bold, label=""];
21->3 [style = bold, label=""];
14->5 [style = bold, label=""];
}
