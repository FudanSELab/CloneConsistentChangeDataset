digraph {
6 [style = filled, label = "final List<String> values = new ArrayList<>()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "groupByWithNullKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Flowable.just(\"a\",\"b\",\"c\").groupBy(new Function<String,String>(){@Override public String apply(String value){return null}}).subscribe(new Consumer<GroupedFlowable<String,String>>(){@Override public void accept(GroupedFlowable<String,String> groupedFlowable){key(0( = groupedFlowable.getKey()groupedFlowable.subscribe(new Consumer<String>(){@Override public void accept(String s){values.add(s)}})}})@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(key(0()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "groupByWithNullKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Observable.just(\"a\",\"b\",\"c\").groupBy(new Function<String,String>(){@Override public String apply(String value){return null}}).subscribe(new Consumer<GroupedObservable<String,String>>(){@Override public void accept(GroupedObservable<String,String> groupedObservable){key(0( = groupedObservable.getKey()groupedObservable.subscribe(new Consumer<String>(){@Override public void accept(String s){values.add(s)}})}})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "groupByWithNullKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(Arrays.asList(\"a\",\"b\",\"c\"),values)@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String(( key = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@17336f1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final List<String> values = new ArrayList<String>()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
6->1 [style = bold, label=""];
4->8 [style = bold, label=""];
1->8 [style = dashed, label="0"];
6->5 [style = solid, label="values"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
4->1 [style = bold, label=""];
7->0 [style = bold, label=""];
4->5 [style = solid, label="values"];
9->0 [style = bold, label=""];
4->6 [style = dashed, label="0"];
0->4 [style = bold, label=""];
0->6 [style = bold, label=""];
8->3 [style = solid, label="key"];
8->3 [style = bold, label=""];
1->3 [style = solid, label="key"];
}
