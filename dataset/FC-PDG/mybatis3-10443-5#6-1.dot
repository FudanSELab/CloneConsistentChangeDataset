digraph {
22 [style = filled, label = "Assertions.assertEquals(2,person.getItems().size())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "person = persons.get(1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(person.owns(\"phone\"))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGetPerson['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"brother\",person.getName())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "person = persons.get(2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testGetPerson['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Person person = persons.get(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assertions.assertTrue(person.owns(\"book\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assertions.assertTrue(person.owns(\"tv\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertTrue(person.owns(\"tv\"))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assertions.assertEquals(2,person.getItems().size())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "List<Person> persons = mapper.getPersons()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(\"brother\",person.getName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(\"grandma\",person.getName())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assertions.assertEquals(\"brother\",person.getName())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assertions.assertTrue(person.owns(\"shoes\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assertions.assertEquals(1,person.getItems().size())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertTrue(person.owns(\"car\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "person = persons.get(2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(person.owns(\"shoes\"))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testGetPersonOrderedByItem['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertTrue(person.owns(\"car\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Assertions.assertTrue(person.owns(\"car\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertTrue(person.owns(\"book\"))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<Person> persons = mapper.getPersonsWithItemsOrdered()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(2,person.getItems().size())@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assertions.assertEquals(\"grandma\",person.getName())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assertions.assertEquals(\"sister\",person.getName())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(2,person.getItems().size())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(1,person.getItems().size())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(1,person.getItems().size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assertions.assertTrue(person.owns(\"phone\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(\"sister\",person.getName())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
6->3 [style = bold, label=""];
29->8 [style = bold, label=""];
15->10 [style = bold, label=""];
33->16 [style = bold, label=""];
7->21 [style = dashed, label="0"];
0->13 [style = bold, label=""];
30->33 [style = bold, label=""];
3->24 [style = bold, label=""];
16->19 [style = dashed, label="0"];
4->6 [style = bold, label=""];
31->9 [style = bold, label=""];
5->26 [style = dashed, label="0"];
0->23 [style = dashed, label="0"];
17->9 [style = bold, label=""];
15->24 [style = dashed, label="0"];
25->3 [style = bold, label=""];
18->26 [style = bold, label=""];
16->7 [style = bold, label=""];
2->27 [style = dashed, label="0"];
11->32 [style = bold, label=""];
3->15 [style = bold, label=""];
32->34 [style = bold, label=""];
7->4 [style = bold, label=""];
11->19 [style = bold, label=""];
24->18 [style = bold, label=""];
13->11 [style = bold, label=""];
34->30 [style = bold, label=""];
21->28 [style = bold, label=""];
4->28 [style = dashed, label="0"];
20->27 [style = bold, label=""];
1->20 [style = dashed, label="0"];
8->1 [style = bold, label=""];
2->0 [style = bold, label=""];
23->22 [style = bold, label=""];
8->20 [style = bold, label=""];
10->5 [style = bold, label=""];
6->25 [style = dashed, label="0"];
12->8 [style = bold, label=""];
12->29 [style = dashed, label="0"];
28->25 [style = bold, label=""];
14->9 [style = bold, label=""];
27->23 [style = bold, label=""];
1->2 [style = bold, label=""];
9->12 [style = bold, label=""];
9->29 [style = bold, label=""];
13->22 [style = dashed, label="0"];
22->11 [style = bold, label=""];
10->18 [style = dashed, label="0"];
19->21 [style = bold, label=""];
}
