digraph {
15 [style = filled, label = "final Map<TopicPartition,Long> purgableOffsets = new HashMap<>()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(),is(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectRestoreToBeCompleted(consumer,changeLogReader)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "shouldSendPurgeData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "expect(adminClient.deleteRecords(singletonMap(t1p1,RecordsToDelete.beforeOffset(17L)))).andReturn(new DeleteRecordsResult(singletonMap(t1p1,completedFuture())))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "taskManager.handleAssignment(taskId00Assignment,emptyMap())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expect(adminClient.deleteRecords(singletonMap(t1p1,RecordsToDelete.beforeOffset(5L)))).andReturn(new DeleteRecordsResult(singletonMap(t1p1,completedFuture())))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "purgableOffsets.put(t1p1,5L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "resetToStrict(adminClient)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(task00.state(),is(Task.State.RUNNING))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final StateMachineTask task00 = new StateMachineTask(taskId00,taskId00Partitions,true){@Override public boolean process(final long wallClockTime){throw new TaskMigratedException(\"migrated\",new RuntimeException(\"cause\"))}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(taskId00Assignment))).andReturn(singletonList(task00)).anyTimes()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final StateMachineTask task00 = new StateMachineTask(taskId00,taskId00Partitions,true){@Override public Map<TopicPartition,Long> purgeableOffsets(){return purgableOffsets}}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "taskManager.maybePurgeCommittedRecords()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldSendPurgeData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "shouldPropagateTaskMigratedExceptionsInProcessActiveTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "purgableOffsets.put(t1p1,17L)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(adminClient)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(task00.state(),is(Task.State.RUNNING))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "replay(activeTaskCreator,consumer,changeLogReader)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final TopicPartition partition = taskId00Partitions.iterator().next()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(),is(true))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "task00.addRecords(partition,singletonList(new ConsumerRecord<>(partition.topic(),partition.partition(),0L,null,null)))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "replay(adminClient)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "taskManager.maybePurgeCommittedRecords()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThrows(,null)@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->7 [style = bold, label=""];
18->2 [style = bold, label=""];
10->17 [style = bold, label=""];
13->9 [style = dashed, label="0"];
23->24 [style = bold, label=""];
6->15 [style = bold, label=""];
20->22 [style = bold, label=""];
11->6 [style = bold, label=""];
5->10 [style = bold, label=""];
12->9 [style = bold, label=""];
21->25 [style = bold, label=""];
19->21 [style = bold, label=""];
8->2 [style = bold, label=""];
0->12 [style = bold, label=""];
17->13 [style = bold, label=""];
3->0 [style = bold, label=""];
15->3 [style = solid, label="purgableOffsets"];
12->9 [style = solid, label="partition"];
15->3 [style = bold, label=""];
2->16 [style = bold, label=""];
25->0 [style = bold, label=""];
24->19 [style = bold, label=""];
22->23 [style = bold, label=""];
14->4 [style = bold, label=""];
13->14 [style = bold, label=""];
16->11 [style = bold, label=""];
9->1 [style = bold, label=""];
1->5 [style = bold, label=""];
}
