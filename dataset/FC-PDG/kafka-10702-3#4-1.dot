digraph {
1 [style = filled, label = "testResetUsingPlanWhenBetweenBeginningAndEndOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ConsumerRecords<byte((,byte((> records = poll(consumer,500)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "endOffsets.put(topicPartition,3L)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Map<TopicPartition,Long> topicPartitionsAndOffset = new HashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "consumer.updateBeginningOffsets(beginningOffsets)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "beginningOffsets.put(topicPartition,0L)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ConsumerRecords<byte((,byte((> records = consumer.poll(500)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Map<TopicPartition,Long> beginningOffsets = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testResetUsingPlanWhenAfterEndOffset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "topicPartitionsAndOffset.put(topicPartition,5L)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "streamsResetter.resetOffsetsFromResetPlan(consumer,inputTopicPartitions,topicPartitionsAndOffset)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(2,records.count())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Map<TopicPartition,Long> endOffsets = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "topicPartitionsAndOffset.put(topicPartition,3L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testResetUsingPlanWhenBetweenBeginningAndEndOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "consumer.updateEndOffsets(endOffsets)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "endOffsets.put(topicPartition,4L)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
0->9 [style = bold, label=""];
15->2 [style = bold, label=""];
16->8 [style = bold, label=""];
5->2 [style = solid, label="topicPartitionsAndOffset"];
5->15 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
2->13 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
6->8 [style = solid, label="endOffsets"];
10->8 [style = bold, label=""];
13->3 [style = bold, label=""];
11->9 [style = solid, label="beginningOffsets"];
6->16 [style = bold, label=""];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
7->15 [style = dashed, label="0"];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
10->16 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
8->11 [style = bold, label=""];
14->6 [style = bold, label=""];
}
