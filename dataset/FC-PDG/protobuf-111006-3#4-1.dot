digraph {
19 [style = filled, label = "throw e.setUnfinishedMessage(result)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "schema.mergeFrom(result,input,offset,offset + length,new ArrayDecoders.Registers(extensionRegistry))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ExtensionRegistryLite extensionRegistry@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return result@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "T instance@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "return result@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RuntimeException e@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw (InvalidProtocolBufferException)e.getCause()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "byte(( input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CodedInputStream input@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int offset@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "parsePartialFrom['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Schema<T> schema = Protobuf.getInstance().schemaFor(result)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int length@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "T instance@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "@SuppressWarnings(\"unchecked\") T result = (T)instance.dynamicMethod(MethodToInvoke.NEW_MUTABLE_INSTANCE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "e.getCause() instanceof InvalidProtocolBufferException@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "InvalidProtocolBufferException e@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "schema.mergeFrom(result,CodedInputStreamReader.forCodedInput(input),extensionRegistry)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw e@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "e.getThrownFromInputStream()@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "e = new InvalidProtocolBufferException(e)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "e.getCause() instanceof InvalidProtocolBufferException@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "throw new RuntimeException()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ExtensionRegistryLite extensionRegistry@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "IOException e@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw (InvalidProtocolBufferException)e.getCause()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "schema.makeImmutable(result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "CodedInputStream input@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "parsePartialFrom['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(result)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "result.memoizedHashCode != 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "throw InvalidProtocolBufferException.truncatedMessage().setUnfinishedMessage(result)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "throw new InvalidProtocolBufferException(e).setUnfinishedMessage(result)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "ExtensionRegistryLite extensionRegistry@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "parsePartialFrom['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "IndexOutOfBoundsException e@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
11->16 [style = bold, label=""];
26->33 [style = dotted, label="true"];
0->13 [style = bold, label=""];
15->7 [style = bold, label=""];
21->19 [style = bold, label=""];
28->34 [style = bold, label=""];
5->18 [style = dotted, label="true"];
31->35 [style = dotted, label="true"];
14->16 [style = solid, label="extensionRegistry"];
26->25 [style = dotted, label="true"];
20->17 [style = dotted, label="true"];
8->2 [style = dotted, label="true"];
16->27 [style = dashed, label="0"];
16->6 [style = bold, label=""];
9->4 [style = bold, label=""];
5->1 [style = dotted, label="true"];
2->35 [style = dashed, label="0"];
23->21 [style = dotted, label="true"];
20->14 [style = dotted, label="true"];
36->28 [style = bold, label=""];
2->15 [style = dotted, label="true"];
33->27 [style = solid, label="offset"];
8->7 [style = dotted, label="true"];
25->27 [style = solid, label="input"];
1->18 [style = bold, label=""];
1->0 [style = bold, label=""];
5->0 [style = dotted, label="true"];
10->16 [style = solid, label="input"];
4->16 [style = solid, label="result"];
36->28 [style = dotted, label="true"];
14->33 [style = dashed, label="0"];
12->0 [style = bold, label=""];
3->16 [style = solid, label="extensionRegistry"];
6->36 [style = bold, label=""];
27->6 [style = bold, label=""];
32->27 [style = solid, label="extensionRegistry"];
26->4 [style = bold, label=""];
9->14 [style = dotted, label="true"];
20->4 [style = bold, label=""];
29->27 [style = solid, label="length"];
4->11 [style = solid, label="result"];
0->34 [style = bold, label=""];
5->1 [style = bold, label=""];
24->23 [style = dotted, label="true"];
19->13 [style = bold, label=""];
31->35 [style = bold, label=""];
8->2 [style = bold, label=""];
23->21 [style = bold, label=""];
26->30 [style = dotted, label="true"];
26->32 [style = dotted, label="true"];
22->16 [style = solid, label="input"];
6->13 [style = bold, label=""];
23->19 [style = bold, label=""];
1->12 [style = dotted, label="true"];
2->15 [style = bold, label=""];
12->18 [style = bold, label=""];
1->12 [style = bold, label=""];
18->13 [style = bold, label=""];
0->18 [style = dashed, label="0"];
24->19 [style = dotted, label="true"];
26->29 [style = dotted, label="true"];
4->6 [style = solid, label="result"];
20->22 [style = dotted, label="true"];
2->7 [style = bold, label=""];
9->3 [style = dotted, label="true"];
8->31 [style = dashed, label="0"];
4->13 [style = solid, label="result"];
4->11 [style = bold, label=""];
35->34 [style = bold, label=""];
9->10 [style = dotted, label="true"];
4->34 [style = solid, label="result"];
36->34 [style = bold, label=""];
4->27 [style = solid, label="result"];
11->27 [style = bold, label=""];
24->23 [style = bold, label=""];
}
