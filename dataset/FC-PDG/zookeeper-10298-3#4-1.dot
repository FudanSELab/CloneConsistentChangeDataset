digraph {
12 [style = filled, label = "clientConnected = new CountDownLatch(1)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "main.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testMetricsProviderConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "main.start()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "zk.close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testStandalone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "main.shutdown()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(1234,MetricsProviderWithConfiguration.httpPort.get())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "MetricsProviderWithConfiguration.httpPort.set(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ClientBase.setupTestEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "main.join()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "main.deleteDirs()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "zk.create(\"/foo\",\"foobar\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ZooKeeper zk = new ZooKeeper(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT,this)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testStandalone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final int CLIENT_PORT = PortAssignment.unique()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->11 [style = solid, label="CLIENT_PORT"];
24->25 [style = solid, label="configs"];
20->13 [style = bold, label=""];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
15->7 [style = bold, label=""];
7->18 [style = dashed, label="0"];
11->14 [style = bold, label=""];
17->6 [style = bold, label=""];
25->13 [style = bold, label=""];
8->19 [style = bold, label=""];
0->2 [style = bold, label=""];
4->13 [style = bold, label=""];
9->22 [style = solid, label="CLIENT_PORT"];
10->3 [style = bold, label=""];
3->15 [style = bold, label=""];
2->9 [style = bold, label=""];
16->2 [style = bold, label=""];
5->17 [style = bold, label=""];
15->18 [style = bold, label=""];
9->4 [style = solid, label="CLIENT_PORT"];
9->23 [style = bold, label=""];
19->5 [style = bold, label=""];
5->1 [style = bold, label=""];
26->2 [style = bold, label=""];
9->25 [style = solid, label="CLIENT_PORT"];
23->24 [style = bold, label=""];
1->17 [style = dashed, label="0"];
1->6 [style = bold, label=""];
9->5 [style = solid, label="CLIENT_PORT"];
12->19 [style = dashed, label="0"];
22->27 [style = bold, label=""];
9->7 [style = solid, label="CLIENT_PORT"];
21->22 [style = bold, label=""];
4->20 [style = dashed, label="0"];
24->25 [style = bold, label=""];
6->10 [style = bold, label=""];
7->21 [style = bold, label=""];
9->18 [style = solid, label="CLIENT_PORT"];
13->8 [style = bold, label=""];
9->20 [style = solid, label="CLIENT_PORT"];
9->8 [style = solid, label="CLIENT_PORT"];
8->12 [style = bold, label=""];
14->20 [style = bold, label=""];
14->4 [style = bold, label=""];
}
