digraph {
11 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "project.renameTo(newProjectName)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(projectName,project.getDisplayName())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(newProjectName,project.getDisplayName())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(newProjectName,project.getDisplayName())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(projectName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String projectName = \"projectName\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testRenameJobWithNoDisplayName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final String newProjectName = \"newProjectName\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getDisplayName())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testRenameJobWithNoDisplayName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(projectName,project.getDisplayName())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCopyJobWithNoDisplayName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
2->6 [style = solid, label="newProjectName"];
0->6 [style = bold, label=""];
8->3 [style = bold, label=""];
2->12 [style = solid, label="newProjectName"];
3->4 [style = solid, label="projectName"];
3->7 [style = solid, label="projectName"];
1->9 [style = dashed, label="0"];
11->12 [style = bold, label=""];
2->1 [style = solid, label="newProjectName"];
2->4 [style = bold, label=""];
4->10 [style = solid, label="project"];
4->7 [style = bold, label=""];
4->0 [style = bold, label=""];
6->10 [style = dashed, label="0"];
6->1 [style = bold, label=""];
2->11 [style = solid, label="newProjectName"];
0->10 [style = bold, label=""];
2->10 [style = solid, label="newProjectName"];
3->2 [style = bold, label=""];
13->3 [style = bold, label=""];
1->11 [style = dashed, label="0"];
7->6 [style = bold, label=""];
6->9 [style = bold, label=""];
0->7 [style = dashed, label="0"];
2->9 [style = solid, label="newProjectName"];
3->0 [style = solid, label="projectName"];
10->11 [style = bold, label=""];
}
