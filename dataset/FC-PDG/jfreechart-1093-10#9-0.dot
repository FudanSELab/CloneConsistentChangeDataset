digraph {
24 [style = filled, label = "assertTrue(b1.hasListener(l1))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertTrue(b1 != b2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(b1.equals(b2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SimpleHistogramBin b2 = CloneUtils.clone(b1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertFalse(b1.equals(b2))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DialBackground b1 = new DialBackground()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SimpleHistogramBin b2 = (SimpleHistogramBin)b1.clone()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SimpleHistogramBin b1 = new SimpleHistogramBin(1.1,2.2,false,true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "DialBackground b2 = CloneUtils.clone(b1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(b1 != b2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "MyDialLayerChangeListener l1 = new MyDialLayerChangeListener()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "b1 = new DialBackground()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "b1.setItemCount(99)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(b2.hasListener(l1))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "b2.setItemCount(111)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(b1.equals(b2))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "b1.setPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.GREEN))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "b2 = (DialBackground)b1.clone()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "b1.addChangeListener(l1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->20 [style = bold, label=""];
14->24 [style = bold, label=""];
7->1 [style = bold, label=""];
20->13 [style = bold, label=""];
21->19 [style = bold, label=""];
18->14 [style = solid, label="l1"];
21->19 [style = solid, label="b2"];
9->5 [style = solid, label="b2"];
0->3 [style = solid, label="b1"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
24->22 [style = bold, label=""];
17->21 [style = solid, label="b1"];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
7->9 [style = bold, label=""];
18->22 [style = solid, label="l1"];
9->6 [style = solid, label="b2"];
15->17 [style = bold, label=""];
1->6 [style = solid, label="b2"];
17->19 [style = solid, label="b1"];
11->23 [style = solid, label="b2"];
9->3 [style = solid, label="b2"];
1->5 [style = solid, label="b2"];
18->24 [style = solid, label="l1"];
6->16 [style = bold, label=""];
3->8 [style = bold, label=""];
1->3 [style = solid, label="b2"];
10->0 [style = bold, label=""];
13->23 [style = bold, label=""];
9->3 [style = bold, label=""];
0->9 [style = solid, label="b1"];
6->20 [style = solid, label="b1"];
11->20 [style = solid, label="b2"];
21->8 [style = solid, label="b2"];
17->21 [style = bold, label=""];
19->3 [style = bold, label=""];
16->12 [style = bold, label=""];
23->18 [style = bold, label=""];
18->14 [style = bold, label=""];
2->5 [style = bold, label=""];
}
