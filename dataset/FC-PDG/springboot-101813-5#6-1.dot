digraph {
10 [style = filled, label = "MyCustomList<String> converted = (MyCustomList<String>)this.conversionService.convert(\"a*b\",sourceType,targetType)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "convertWhenHasNoElementTypeShouldReturnTrimmedString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Collection<String> converted = (Collection<String>)this.conversionService.convert(\" a | b| c \",sourceType,targetType)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "convertWhenHasNoElementTypeShouldReturnTrimmedString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TypeDescriptor sourceType = TypeDescriptor.valueOf()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "convertWhenHasCollectionObjectTypeShouldUseCollectionObjectType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(converted).containsExactly(\"a\",\"b\",\"c\")@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TypeDescriptor targetType = TypeDescriptor.nested(ReflectionUtils.findField(,\"specificType\"),0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(converted).containsExactly(\"a\",\"b\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ConversionService conversionService@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Collection<String> converted = (Collection<String>)conversionService.convert(\" a | b| c \",sourceType,targetType)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "TypeDescriptor targetType = TypeDescriptor.nested(ReflectionUtils.findField(,\"noElementType\"),0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
0->6 [style = solid, label="targetType"];
1->10 [style = dashed, label="0"];
7->5 [style = dotted, label="true"];
6->4 [style = bold, label=""];
2->1 [style = solid, label="sourceType"];
2->0 [style = bold, label=""];
3->2 [style = bold, label=""];
0->1 [style = solid, label="targetType"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
1->6 [style = dashed, label="0"];
2->10 [style = solid, label="sourceType"];
0->8 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
8->10 [style = solid, label="targetType"];
2->6 [style = solid, label="sourceType"];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
}
