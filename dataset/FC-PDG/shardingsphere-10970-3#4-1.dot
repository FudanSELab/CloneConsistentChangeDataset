digraph {
11 [style = filled, label = "assertExecuteDataSourcesContext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "setGovernanceMetaDataContexts(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertExecuteDataSourcesContext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Optional<TextProtocolBackendHandler> rdlBackendHandler = RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(response,instanceOf())@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertExecuteDropReadwriteSplittingRuleContext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(rdlBackendHandler.isPresent())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(ex.getMessage(),is(\"No Registry center to execute `DropReadwriteSplittingRuleStatement` SQL\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ResponseHeader response = RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection).execute()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "BackendConnection connection = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ResponseHeader response = rdlBackendHandler.get().execute()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Optional<TextProtocolBackendHandler> rdlBackendHandler = RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "when(connection.getSchemaName()).thenReturn(\"schema\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(response,instanceOf())@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(ex.getMessage(),is(\"No Registry center to execute `AddResourceStatement` SQL\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final SQLException ex@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
6->3 [style = bold, label=""];
14->3 [style = bold, label=""];
0->16 [style = bold, label=""];
4->14 [style = bold, label=""];
15->10 [style = bold, label=""];
5->12 [style = dashed, label="0"];
17->1 [style = bold, label=""];
0->6 [style = bold, label=""];
2->3 [style = bold, label=""];
10->5 [style = solid, label="connection"];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
10->17 [style = solid, label="connection"];
4->14 [style = dotted, label="true"];
7->8 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = solid, label="connection"];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
10->16 [style = solid, label="connection"];
6->16 [style = dashed, label="0"];
5->17 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
11->10 [style = bold, label=""];
10->0 [style = bold, label=""];
3->17 [style = bold, label=""];
7->8 [style = solid, label="response"];
12->13 [style = solid, label="response"];
4->2 [style = dotted, label="true"];
}
