digraph {
5 [style = filled, label = "testSimpleDeletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSimpleDeletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "DataTree dataTree = serverFactory.getZooKeeperServer().getZKDatabase().getDataTree()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "zk.create(\"/foo/bar\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ContainerManager containerManager = new ContainerManager(serverFactory.getZooKeeperServer().getZKDatabase(),serverFactory.getZooKeeperServer().firstProcessor,1,100)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testMultiWithContainerSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNull(\"Container should have been deleted\",zk.exists(\"/foo\",false))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Thread.sleep(1000)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertNull(\"Container should have been deleted\",zk.exists(\"/foo\",false))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "ContainerManager containerManager = new ContainerManager(serverFactory.getZooKeeperServer().getZKDatabase(),serverFactory.getZooKeeperServer().firstProcessor,1,100)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(dataTree.getContainers().size(),1)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "zk.create(\"/foo\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.CONTAINER)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "zk.delete(\"/foo/bar\",-1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "containerManager.checkContainers()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "zk.multi(Collections.singletonList(createContainer))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Op createContainer = Op.create(\"/foo\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.CONTAINER)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
0->9 [style = bold, label=""];
11->12 [style = bold, label=""];
14->11 [style = solid, label="createContainer"];
1->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
7->2 [style = bold, label=""];
7->10 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
9->4 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
}
