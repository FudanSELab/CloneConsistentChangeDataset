digraph {
9 [style = filled, label = "ChannelPinger.setUpPingForChannel(mockChannel,ChannelPinger.PING_TIMEOUT_SECONDS_DEFAULT,73,true)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verify(mockChannel).call(eq(new ChannelPinger.SetUpRemotePing(ChannelPinger.PING_TIMEOUT_SECONDS_DEFAULT,73)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "channelPinger.install(mockChannel)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.setProperty(\"hudson.slaves.ChannelPinger.pingIntervalSeconds\",\"73\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ChannelPinger.setUpPingForChannel(mockChannel,ChannelPinger.PING_TIMEOUT_SECONDS_DEFAULT,ChannelPinger.PING_INTERVAL_SECONDS_DEFAULT,true)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testDefaults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ChannelPinger channelPinger = new ChannelPinger()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "System.setProperty(\"hudson.slaves.ChannelPinger.pingInterval\",\"7\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ChannelPinger channelPinger = new ChannelPinger()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDefaults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testNewSystemPropertyTrumpsOld['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verifyStatic()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ChannelPinger.setUpPingForChannel(mockChannel,null,ChannelPinger.PING_TIMEOUT_SECONDS_DEFAULT,ChannelPinger.PING_INTERVAL_SECONDS_DEFAULT,true)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "channelPinger.install(mockChannel)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "channelPinger.install(mockChannel,null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
13->10 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->8 [style = bold, label=""];
6->5 [style = bold, label=""];
12->2 [style = bold, label=""];
14->9 [style = bold, label=""];
2->11 [style = dashed, label="0"];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
3->9 [style = dashed, label="0"];
11->14 [style = bold, label=""];
10->12 [style = bold, label=""];
4->5 [style = bold, label=""];
1->7 [style = bold, label=""];
2->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
1->11 [style = bold, label=""];
0->2 [style = bold, label=""];
}
