digraph {
27 [style = filled, label = "String instanceName = PARTICIPANT_PREFIX + \"_\" + (_startPort + i)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int i = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(result)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(maintenanceSignal.getAutoTriggerReason(),MaintenanceSignal.AutoTriggerReason.MAX_OFFLINE_INSTANCES_EXCEEDED)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(result)@@@77@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(maintenanceSignal.getAutoTriggerReason(),MaintenanceSignal.AutoTriggerReason.MAX_OFFLINE_INSTANCES_EXCEEDED)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(maintenanceSignal.getTriggeringEntity(),MaintenanceSignal.TriggeringEntity.CONTROLLER)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Thread.sleep(500L)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "testMaxPartitionLimit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(maintenanceSignal.getTriggeringEntity(),MaintenanceSignal.TriggeringEntity.CONTROLLER)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final boolean expectFailure@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String instanceName = PARTICIPANT_PREFIX + \"_\" + (_startPort + i)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "TestHelper.verify(null,2000L)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "result = TestHelper.verify(null,TIMEOUT)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "maintenanceSignal = _dataAccessor.getProperty(_keyBuilder.maintenance())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testMaxPartitionLimit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertNotNull(maintenanceSignal)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i < 3@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Thread.sleep(500L)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(maintenanceSignal.getTriggeringEntity(),MaintenanceSignal.TriggeringEntity.CONTROLLER)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "TestHelper.verify(null,2000L)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "_gSetupTool.getClusterManagementTool().manuallyEnableMaintenanceMode(CLUSTER_NAME,false,null,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "_manager.getConfigAccessor().setClusterConfig(CLUSTER_NAME,clusterConfig)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Thread.sleep(500L)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "_participants(i( = new MockParticipantManager(ZK_ADDR,CLUSTER_NAME,instanceName)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "_participants(i(.syncStop()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "_participants(i( = new MockParticipantManager(ZK_ADDR,CLUSTER_NAME,instanceName)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "TestHelper.verify(null,2000L)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "i < 3@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "boolean result = TestHelper.verify(null,TIMEOUT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "checkRebalanceFailureGauge['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertNotNull(maintenanceSignal)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "clusterConfig.setMaxPartitionsPerInstance(1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "boolean result = TestHelper.verify(null,TIMEOUT)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "maintenanceSignal = _dataAccessor.getProperty(_keyBuilder.maintenance())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "_participants(i(.syncStart()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertNotNull(maintenanceSignal)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Thread.sleep(500L)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "i++@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i++@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "TestHelper.verify(null,2000L)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "_participants(i(.syncStart()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNull(maintenanceSignal)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < 3@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MaintenanceSignal maintenanceSignal = _dataAccessor.getProperty(_keyBuilder.maintenance())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ClusterConfig clusterConfig = _manager.getConfigAccessor().getClusterConfig(CLUSTER_NAME)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Thread.sleep(500L)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "result = TestHelper.verify(null,TIMEOUT)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "maintenanceSignal = _dataAccessor.getProperty(_keyBuilder.maintenance())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(maintenanceSignal.getAutoTriggerReason(),MaintenanceSignal.AutoTriggerReason.MAX_PARTITION_PER_INSTANCE_EXCEEDED)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertTrue(result)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "TestHelper.verify(null,2000L)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "i++@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->11 [style = solid, label="maintenanceSignal"];
22->15 [style = bold, label=""];
20->42 [style = solid, label="maintenanceSignal"];
28->20 [style = bold, label=""];
25->45 [style = bold, label=""];
31->19 [style = solid, label="i"];
5->23 [style = dotted, label="true"];
26->7 [style = solid, label="maintenanceSignal"];
18->16 [style = solid, label="result"];
31->0 [style = solid, label="i"];
52->55 [style = bold, label=""];
5->12 [style = dotted, label="true"];
3->4 [style = bold, label=""];
43->3 [style = bold, label=""];
46->21 [style = bold, label=""];
3->4 [style = solid, label="maintenanceSignal"];
0->34 [style = solid, label="instanceName"];
35->27 [style = solid, label="i"];
23->12 [style = bold, label=""];
41->33 [style = dotted, label="true"];
13->14 [style = bold, label=""];
14->37 [style = bold, label=""];
7->29 [style = bold, label=""];
41->32 [style = bold, label=""];
44->21 [style = bold, label=""];
26->7 [style = bold, label=""];
35->5 [style = solid, label="i"];
52->55 [style = solid, label="result"];
40->51 [style = bold, label=""];
53->52 [style = bold, label=""];
41->24 [style = dotted, label="true"];
33->41 [style = bold, label=""];
12->35 [style = bold, label=""];
32->26 [style = bold, label=""];
38->2 [style = bold, label=""];
8->17 [style = bold, label=""];
35->5 [style = bold, label=""];
0->34 [style = bold, label=""];
10->44 [style = bold, label=""];
21->5 [style = solid, label="i"];
19->0 [style = dotted, label="true"];
33->41 [style = solid, label="i"];
39->41 [style = bold, label=""];
29->38 [style = bold, label=""];
49->17 [style = bold, label=""];
2->10 [style = solid, label="clusterConfig"];
39->41 [style = solid, label="i"];
41->50 [style = bold, label=""];
9->22 [style = bold, label=""];
4->9 [style = bold, label=""];
19->34 [style = dotted, label="true"];
36->40 [style = bold, label=""];
47->3 [style = bold, label=""];
2->1 [style = bold, label=""];
6->18 [style = bold, label=""];
39->33 [style = solid, label="i"];
19->30 [style = dotted, label="true"];
28->51 [style = dashed, label="0"];
51->20 [style = bold, label=""];
19->0 [style = bold, label=""];
24->33 [style = bold, label=""];
21->5 [style = bold, label=""];
21->27 [style = solid, label="i"];
5->35 [style = dotted, label="true"];
23->35 [style = solid, label="i"];
30->31 [style = bold, label=""];
32->50 [style = dashed, label="0"];
5->27 [style = dotted, label="true"];
20->42 [style = bold, label=""];
37->19 [style = solid, label="i"];
44->46 [style = dashed, label="0"];
25->45 [style = solid, label="result"];
31->19 [style = bold, label=""];
19->31 [style = dotted, label="true"];
18->16 [style = bold, label=""];
50->26 [style = bold, label=""];
42->13 [style = bold, label=""];
27->23 [style = solid, label="instanceName"];
41->24 [style = bold, label=""];
10->46 [style = bold, label=""];
16->25 [style = bold, label=""];
15->6 [style = bold, label=""];
40->28 [style = bold, label=""];
34->30 [style = bold, label=""];
48->40 [style = bold, label=""];
19->8 [style = bold, label=""];
5->43 [style = bold, label=""];
5->47 [style = bold, label=""];
15->6 [style = solid, label="result"];
43->47 [style = dashed, label="0"];
19->49 [style = bold, label=""];
37->0 [style = solid, label="i"];
11->39 [style = bold, label=""];
27->23 [style = bold, label=""];
37->19 [style = bold, label=""];
5->27 [style = bold, label=""];
53->54 [style = dotted, label="true"];
1->10 [style = bold, label=""];
34->31 [style = solid, label="i"];
8->49 [style = dashed, label="0"];
17->11 [style = bold, label=""];
}
