digraph {
18 [style = filled, label = "FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder().file(CopyableFileUtils.getTestCopyableFile()).inputStream(gpgFileInput).build()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "String gpgFilePath = url.getFile()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "setEncryptedPassphrase(passphrase,workUnitState)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String expectedFileContents = \"123456789\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Iterable<FileAwareInputStream> iterable = converter.convertRecord(\"outputSchema\",fileAwareInputStream,workUnitState)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String passphrase = \"12\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotNull(fileAwareInputStream)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "converter.init(workUnitState)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "FileAwareInputStream decryptedStream = Iterables.getFirst(iterable,null)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(actual,expectedFileContents)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertNotNull(url)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testConvertGpgRecord['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(),testFileInput)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DecryptConverter converter = new DecryptConverter()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "fileAwareInputStream.getFile().setDestination(new Path(\"file:///tmp/decrypt-test.txt.insecure_shift\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(),gpgFileInput)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Assert.assertNotNull(decryptedStream)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testConvertGpgRecord['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(actual,expectedFileContents)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String testFilePath = url.getFile()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Iterable<FileAwareInputStream> iterable = converter.convertRecord(\"outputSchema\",fileAwareInputStream,workUnitState)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String actual = IOUtils.toString(decryptedStream.getInputStream(),Charsets.UTF_8)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.insecure_shift\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "workUnitState.getJobState().setProp(\"converter.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY,\"insecure_shift\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "WorkUnitState workUnitState = new WorkUnitState()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testConvertDifferentEncryption['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String actual = IOUtils.toString(fileAwareInputStream.getInputStream(),Charsets.UTF_8)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "WorkUnitState workUnitState = new WorkUnitState()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(decryptedStream.getFile().getDestination().getName(),\"decrypt-test.txt\")@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final String expectedFileContents = \"2345678\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{deleteMasterPwdFile()converter.close()}@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertNotNull(url)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "URL url = getClass().getClassLoader().getResource(\"decryptConverterTest/decrypt-test.txt.gpg\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
4->18 [style = dashed, label="0"];
23->20 [style = bold, label=""];
25->28 [style = bold, label=""];
30->22 [style = bold, label=""];
26->20 [style = solid, label="workUnitState"];
16->11 [style = bold, label=""];
3->2 [style = dashed, label="0"];
16->32 [style = dashed, label="0"];
16->27 [style = bold, label=""];
14->9 [style = solid, label="workUnitState"];
7->12 [style = bold, label=""];
0->6 [style = bold, label=""];
11->1 [style = bold, label=""];
11->16 [style = dashed, label="0"];
6->18 [style = bold, label=""];
4->9 [style = solid, label="fileAwareInputStream"];
14->2 [style = solid, label="workUnitState"];
1->27 [style = dashed, label="0"];
24->32 [style = bold, label=""];
22->21 [style = bold, label=""];
1->13 [style = solid, label="actual"];
14->17 [style = bold, label=""];
31->2 [style = bold, label=""];
20->31 [style = bold, label=""];
21->24 [style = bold, label=""];
22->24 [style = solid, label="fileAwareInputStream"];
16->11 [style = solid, label="fileAwareInputStream"];
4->22 [style = dashed, label="0"];
32->16 [style = bold, label=""];
1->13 [style = bold, label=""];
9->16 [style = bold, label=""];
19->8 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
7->17 [style = solid, label="passphrase"];
29->26 [style = bold, label=""];
33->29 [style = bold, label=""];
26->24 [style = solid, label="workUnitState"];
32->16 [style = solid, label="decryptedStream"];
6->4 [style = bold, label=""];
2->5 [style = solid, label="url"];
8->13 [style = solid, label="expectedFileContents"];
17->2 [style = bold, label=""];
10->8 [style = bold, label=""];
24->32 [style = solid, label="iterable"];
26->23 [style = bold, label=""];
12->14 [style = bold, label=""];
18->9 [style = bold, label=""];
27->25 [style = solid, label="actual"];
3->0 [style = solid, label="url"];
9->16 [style = solid, label="iterable"];
6->30 [style = dashed, label="0"];
13->15 [style = bold, label=""];
5->30 [style = bold, label=""];
14->17 [style = solid, label="workUnitState"];
18->9 [style = solid, label="fileAwareInputStream"];
27->25 [style = bold, label=""];
8->29 [style = dashed, label="0"];
2->5 [style = bold, label=""];
29->25 [style = solid, label="expectedFileContents"];
}
