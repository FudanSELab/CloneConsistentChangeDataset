digraph {
19 [style = filled, label = "channel.writeInbound(serRequest)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1L,stats.getNumRequests())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "buf.release()@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "buf = (ByteBuf)readInboundBlocking(channel)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(MessageType.REQUEST_FAILURE,MessageSerializer.deserializeHeader(buf))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(requestId,response.getRequestId())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TestRegistryListener registryListener = new TestRegistryListener()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "registry.registerListener(dummyEnv.getJobID(),registryListener)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(),182828L,request)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "buf.skipBytes(4)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(182828L,response.getRequestId())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(MessageType.REQUEST_FAILURE,MessageSerializer.deserializeHeader(buf))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(),requestId,request)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testQueryUnknownKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSerializerMismatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(2L,stats.getNumFailed())@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "KvStateRegistry registry = new KvStateRegistry()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId,serializedKeyAndNamespace)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "ByteBuf buf = (ByteBuf)readInboundBlocking(channel)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "AbstractStateBackend abstractBackend = new MemoryStateBackend()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DummyEnvironment dummyEnv = new DummyEnvironment(\"test\",1,0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "long requestId = Integer.MAX_VALUE + 22982L@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "dummyEnv.setKvStateRegistry(registry)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(response.getCause().getMessage().contains(\"IOException\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>(\"any\",IntSerializer.INSTANCE)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "request = new KvStateInternalRequest(registryListener.kvStateId,wrongNamespace)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int numKeyGroups = 1@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(\"Did not respond with expected failure cause\",response.getCause() instanceof UnknownKeyOrNamespaceException)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "serRequest = MessageSerializer.serializeRequest(channel.alloc(),182829L,request)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int key = 99812822@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "byte(( wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(key,IntSerializer.INSTANCE,\"wrong-namespace-type\",StringSerializer.INSTANCE)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "byte(( serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(1238283,IntSerializer.INSTANCE,VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "buf.skipBytes(4)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "desc.setQueryable(\"vanilla\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId,wrongKeyAndNamespace)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "byte(( wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(\"wrong-key-type\",StringSerializer.INSTANCE,\"wrong-namespace-type\",StringSerializer.INSTANCE)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "response = MessageSerializer.deserializeRequestFailure(buf)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,desc)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(182829L,response.getRequestId())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry,numKeyGroups,abstractBackend,dummyEnv)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testSerializerMismatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "KvStateServerHandler handler = new KvStateServerHandler(testServer,registry,serializer,stats)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ValueState<Integer> state = backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,desc)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MessageSerializer<KvStateInternalRequest,KvStateResponse> serializer = new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(),new KvStateResponse.KvStateResponseDeserializer())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "buf.release()@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "channel.writeInbound(serRequest)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(),handler)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertTrue(registryListener.registrationName.equals(\"vanilla\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "state.update(712828289)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(1L,stats.getNumFailed())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry,numKeyGroups,abstractBackend,dummyEnv)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertTrue(response.getCause().getMessage().contains(\"IOException\"))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "backend.setCurrentKey(key)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(2L,stats.getNumRequests())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->13 [style = solid, label="buf"];
8->14 [style = bold, label=""];
15->1 [style = bold, label=""];
6->30 [style = solid, label="serializer"];
20->6 [style = bold, label=""];
7->12 [style = solid, label="registryListener"];
10->39 [style = bold, label=""];
40->52 [style = dashed, label="0"];
52->45 [style = bold, label=""];
52->45 [style = solid, label="request"];
34->53 [style = solid, label="channel"];
34->31 [style = solid, label="channel"];
37->0 [style = bold, label=""];
43->41 [style = bold, label=""];
36->45 [style = dashed, label="0"];
32->28 [style = bold, label=""];
50->52 [style = solid, label="serializedKeyAndNamespace"];
4->23 [style = bold, label=""];
33->9 [style = bold, label=""];
40->36 [style = solid, label="request"];
36->38 [style = bold, label=""];
21->11 [style = solid, label="numKeyGroups"];
31->18 [style = solid, label="buf"];
31->3 [style = bold, label=""];
28->29 [style = bold, label=""];
14->47 [style = solid, label="registry"];
32->3 [style = dashed, label="0"];
50->54 [style = bold, label=""];
14->11 [style = solid, label="registry"];
18->46 [style = bold, label=""];
34->15 [style = solid, label="channel"];
45->25 [style = solid, label="serRequest"];
9->16 [style = bold, label=""];
47->7 [style = bold, label=""];
5->40 [style = solid, label="wrongKeyAndNamespace"];
13->35 [style = bold, label=""];
10->51 [style = bold, label=""];
18->32 [style = bold, label=""];
51->50 [style = bold, label=""];
26->19 [style = bold, label=""];
14->30 [style = solid, label="registry"];
7->12 [style = bold, label=""];
16->47 [style = bold, label=""];
5->24 [style = bold, label=""];
26->19 [style = solid, label="serRequest"];
38->31 [style = bold, label=""];
49->14 [style = bold, label=""];
24->25 [style = bold, label=""];
55->52 [style = bold, label=""];
48->38 [style = bold, label=""];
9->11 [style = solid, label="dummyEnv"];
22->10 [style = bold, label=""];
34->21 [style = bold, label=""];
4->24 [style = solid, label="key"];
1->13 [style = bold, label=""];
30->34 [style = bold, label=""];
15->35 [style = solid, label="buf"];
14->16 [style = solid, label="registry"];
33->11 [style = solid, label="abstractBackend"];
35->41 [style = bold, label=""];
41->37 [style = bold, label=""];
21->33 [style = bold, label=""];
30->34 [style = solid, label="handler"];
35->43 [style = bold, label=""];
3->27 [style = bold, label=""];
53->38 [style = solid, label="buf"];
11->47 [style = dashed, label="0"];
53->48 [style = bold, label=""];
53->31 [style = solid, label="buf"];
21->47 [style = solid, label="numKeyGroups"];
54->45 [style = solid, label="requestId"];
42->14 [style = bold, label=""];
39->4 [style = bold, label=""];
23->17 [style = bold, label=""];
16->11 [style = bold, label=""];
54->3 [style = solid, label="requestId"];
25->40 [style = bold, label=""];
6->30 [style = bold, label=""];
36->38 [style = solid, label="serRequest"];
28->27 [style = dashed, label="0"];
54->55 [style = bold, label=""];
22->51 [style = solid, label="desc"];
22->39 [style = solid, label="desc"];
40->36 [style = bold, label=""];
19->15 [style = bold, label=""];
44->32 [style = bold, label=""];
25->53 [style = bold, label=""];
12->22 [style = bold, label=""];
11->7 [style = bold, label=""];
33->47 [style = solid, label="abstractBackend"];
31->27 [style = solid, label="buf"];
20->30 [style = solid, label="stats"];
39->51 [style = dashed, label="0"];
29->26 [style = solid, label="request"];
4->23 [style = solid, label="key"];
18->44 [style = bold, label=""];
27->18 [style = bold, label=""];
0->2 [style = bold, label=""];
45->25 [style = bold, label=""];
24->29 [style = solid, label="wrongNamespace"];
17->5 [style = bold, label=""];
14->20 [style = bold, label=""];
9->47 [style = solid, label="dummyEnv"];
29->26 [style = bold, label=""];
}
