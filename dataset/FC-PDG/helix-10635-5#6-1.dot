digraph {
41 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testDisablePartitionCustomIS['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "expectInstanceStateMap.put(\"localhost_12919\",\"OFFLINE\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "idealState.setRebalanceMode(RebalanceMode.CUSTOMIZED)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(result,\"localhost_12919\" + \" should be in OFFLINE for (TestDB0_0, TestDB0_5(\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectStateMap.put(\"TestDB0_0\",expectInstanceStateMap)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Map<String,String> expectInstanceStateMap = new HashMap<String,String>()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final int n = 5@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "participants(i( = new MockParticipant(clusterName,instanceName,ZK_ADDR,null)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@45@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread.sleep(1000)@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "command = \"--zkSvr \" + ZK_ADDR + \" --enablePartition true \" + clusterName + \" localhost_12919 TestDB0 TestDB0_0 TestDB0_5\"@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "accessor.setProperty(keyBuilder.idealStates(\"TestDB0\"),idealState)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ZKHelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,baseAccessor)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "controller.syncStart()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(result,\"localhost_12919\" + \" should NOT be in OFFLINE\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "int i = 0@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testDisablePartitionCustomIS['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ClusterController controller = new ClusterController(clusterName,\"controller_0\",ZK_ADDR)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testDisablePartitionAutoIS['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,Map<String,String>> expectStateMap = new HashMap<String,Map<String,String>>()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "participants(i(.syncStart()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "IdealState idealState = accessor.getProperty(keyBuilder.idealStates(\"TestDB0\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i < 5@@@41@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < n@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MockParticipant(( participants = new MockParticipant((((@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"!=\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "expectStateMap.put(\"TestDB0_5\",expectInstanceStateMap)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String command = \"--zkSvr \" + ZK_ADDR + \" --enablePartition false \" + clusterName + \" localhost_12919 TestDB0 TestDB0_0 TestDB0_5\"@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,8,n,3,\"MasterSlave\",true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(result)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"==\")@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i++@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(result)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "participants(i(.syncStop()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "controller.syncStop()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->15 [style = bold, label=""];
44->8 [style = bold, label=""];
12->37 [style = solid, label="i"];
23->51 [style = bold, label=""];
29->30 [style = bold, label=""];
15->12 [style = solid, label="clusterName"];
35->26 [style = dotted, label="true"];
15->14 [style = solid, label="clusterName"];
9->21 [style = solid, label="result"];
2->13 [style = solid, label="expectInstanceStateMap"];
15->51 [style = solid, label="clusterName"];
4->16 [style = solid, label="result"];
40->13 [style = bold, label=""];
28->0 [style = bold, label=""];
12->10 [style = bold, label=""];
49->10 [style = bold, label=""];
48->43 [style = bold, label=""];
12->49 [style = dashed, label="0"];
26->35 [style = bold, label=""];
9->21 [style = bold, label=""];
13->45 [style = bold, label=""];
35->38 [style = bold, label=""];
4->16 [style = bold, label=""];
21->3 [style = bold, label=""];
35->31 [style = bold, label=""];
19->34 [style = bold, label=""];
15->0 [style = solid, label="clusterName"];
37->36 [style = bold, label=""];
15->24 [style = solid, label="clusterName"];
15->46 [style = solid, label="clusterName"];
50->30 [style = bold, label=""];
47->35 [style = solid, label="i"];
3->11 [style = bold, label=""];
41->4 [style = bold, label=""];
15->4 [style = solid, label="clusterName"];
15->44 [style = solid, label="clusterName"];
15->25 [style = solid, label="clusterName"];
15->43 [style = solid, label="clusterName"];
44->8 [style = solid, label="result"];
23->14 [style = bold, label=""];
5->1 [style = bold, label=""];
36->25 [style = bold, label=""];
21->11 [style = bold, label=""];
34->36 [style = bold, label=""];
7->6 [style = bold, label=""];
0->48 [style = bold, label=""];
22->15 [style = solid, label="methodName"];
42->49 [style = solid, label="instanceName"];
1->32 [style = bold, label=""];
16->39 [style = bold, label=""];
46->20 [style = bold, label=""];
15->7 [style = solid, label="clusterName"];
45->46 [style = bold, label=""];
20->7 [style = bold, label=""];
2->45 [style = solid, label="expectInstanceStateMap"];
36->42 [style = bold, label=""];
18->24 [style = bold, label=""];
27->43 [style = bold, label=""];
25->18 [style = bold, label=""];
34->42 [style = solid, label="i"];
14->19 [style = bold, label=""];
28->43 [style = solid, label="n"];
30->15 [style = solid, label="className"];
6->44 [style = bold, label=""];
39->9 [style = solid, label="expectStateMap"];
17->23 [style = bold, label=""];
32->33 [style = bold, label=""];
36->37 [style = dotted, label="true"];
35->31 [style = dotted, label="true"];
24->41 [style = bold, label=""];
39->46 [style = solid, label="expectStateMap"];
36->49 [style = dotted, label="true"];
31->26 [style = bold, label=""];
15->28 [style = bold, label=""];
43->5 [style = bold, label=""];
43->14 [style = bold, label=""];
39->2 [style = bold, label=""];
26->35 [style = solid, label="i"];
11->47 [style = bold, label=""];
27->48 [style = dashed, label="0"];
47->26 [style = solid, label="i"];
33->17 [style = bold, label=""];
10->37 [style = bold, label=""];
33->23 [style = solid, label="idealState"];
42->12 [style = solid, label="instanceName"];
30->22 [style = bold, label=""];
28->36 [style = solid, label="n"];
0->27 [style = bold, label=""];
34->36 [style = solid, label="i"];
5->1 [style = solid, label="baseAccessor"];
14->51 [style = dashed, label="0"];
2->40 [style = bold, label=""];
42->12 [style = bold, label=""];
36->42 [style = dotted, label="true"];
49->37 [style = solid, label="i"];
47->35 [style = bold, label=""];
15->49 [style = solid, label="clusterName"];
36->12 [style = dotted, label="true"];
46->20 [style = solid, label="result"];
36->10 [style = dotted, label="true"];
37->36 [style = solid, label="i"];
37->42 [style = solid, label="i"];
8->9 [style = bold, label=""];
15->9 [style = solid, label="clusterName"];
42->49 [style = bold, label=""];
15->38 [style = solid, label="clusterName"];
25->18 [style = solid, label="result"];
51->19 [style = bold, label=""];
52->30 [style = bold, label=""];
15->1 [style = solid, label="clusterName"];
}
