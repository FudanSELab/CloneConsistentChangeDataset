digraph {
8 [style = filled, label = "final @Nullable Map<RelTableRef,RelTableRef> tableMapping@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "return visitor.apply(node)@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final RexBuilder rexBuilder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Map<RelTableRef,RelTableRef> tableMapping@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RexNode node@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "swapColumnTableReferences['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final RexBuilder rexBuilder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Map<RelTableRef,RelTableRef> tableMapping@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "swapTableColumnReferences['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final RexBuilder rexBuilder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final RexNode node@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final @Nullable Map<RexTableInputRef,Set<RexTableInputRef>> ec@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final Map<RexTableInputRef,Set<RexTableInputRef>> ec@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "RexShuttle visitor = new RexShuttle(){@Override public RexNode visitTableInputRef(RexTableInputRef inputRef){if (ec != null) {Set<RexTableInputRef> s = ec.get(inputRef)if (s != null) {inputRef = s.iterator().next()}}if (tableMapping != null) {inputRef = RexTableInputRef.of(tableMapping.get(inputRef.getTableRef()),inputRef.getIndex(),inputRef.getType())}return inputRef}}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexNode node@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return visitor.apply(node)@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Map<RexTableInputRef,Set<RexTableInputRef>> ec@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "swapTableColumnReferences['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16->13 [style = dotted, label="true"];
12->8 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
15->0 [style = solid, label="node"];
16->15 [style = dotted, label="true"];
14->2 [style = solid, label="tableMapping"];
6->11 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
1->4 [style = dotted, label="true"];
8->2 [style = solid, label="tableMapping"];
16->2 [style = bold, label=""];
4->0 [style = solid, label="node"];
1->3 [style = dotted, label="true"];
12->11 [style = dotted, label="true"];
12->2 [style = bold, label=""];
2->0 [style = bold, label=""];
13->2 [style = solid, label="ec"];
12->10 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
6->2 [style = solid, label="ec"];
11->2 [style = solid, label="ec"];
1->6 [style = dotted, label="true"];
5->2 [style = solid, label="tableMapping"];
1->2 [style = bold, label=""];
2->7 [style = bold, label=""];
1->5 [style = dotted, label="true"];
9->7 [style = solid, label="node"];
12->9 [style = dotted, label="true"];
}
