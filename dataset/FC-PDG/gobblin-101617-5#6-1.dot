digraph {
28 [style = filled, label = "Assert.assertEquals(decryptedContent,streamString)@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "byte(( encryptedContent = IOUtils.toByteArray(new FileInputStream(writtenFilePath.toString()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "state.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR,new Path(testTempPath,\"output\").toString())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "byte(( streamString = \"testEncryptedContents\".getBytes(\"UTF-8\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "byte(( expectedContents = new byte((((@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf,StreamUtils.convertStream(new ByteArrayInputStream(streamString)))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "FileAwareInputStreamDataWriter dataWriter = new FileAwareInputStreamDataWriter(state,1,0)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testWriteWithEncryption['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "CopyableFile cf = CopyableFileUtils.getTestCopyableFile(ownerAndPermission)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder().file(cf).inputStream(StreamUtils.convertStream(new ByteArrayInputStream(streamString))).build()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY,\"insecure_shift\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_KEYSTORE_PASSWORD_KEY,GPGFileEncryptorTest.PASSPHRASE)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_KEY_NAME,GPGFileEncryptorTest.KEY_ID)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertNotEquals(encryptedContent,streamString)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "dataWriter.write(fileAwareInputStream)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "OwnerAndPermission ownerAndPermission = new OwnerAndPermission(status.getOwner(),status.getGroup(),new FsPermission(FsAction.ALL,FsAction.ALL,FsAction.ALL))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testWriteWithEncryption['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY,publicKeyFile.getAbsolutePath())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testWriteWithGPGAsymmetricEncryption['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "byte(( decryptedContent = new byte((((@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CopySource.serializeCopyEntity(state,cf)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "FileUtils.copyInputStreamToFile(.getResourceAsStream(GPGFileEncryptorTest.PUBLIC_KEY),publicKeyFile)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FileAwareInputStreamDataWriter dataWriter = new FileAwareInputStreamDataWriter(state,1,0)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "state.setProp(ConfigurationKeys.WRITER_FILE_PATH,RandomStringUtils.randomAlphabetic(5))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CopySource.serializeCopyableDataset(state,metadata)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "state.setProp(ConfigurationKeys.WRITER_STAGING_DIR,new Path(testTempPath,\"staging\").toString())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY,\"gpg\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Path writtenFilePath = new Path(new Path(state.getProp(ConfigurationKeys.WRITER_OUTPUT_DIR),cf.getDatasetAndPartition(metadata).identifier()),cf.getDestination())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CopySource.serializeCopyableDataset(state,metadata)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedContents(i( = (byte)((streamString(i( + 1) % 256)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf,StreamUtils.convertStream(new ByteArrayInputStream(streamString)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "dataWriter.commit()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "IOUtils.readFully(GPGFileDecryptor.decryptFile(new FileInputStream(writtenFilePath.toString()),.getResourceAsStream(GPGFileEncryptorTest.PRIVATE_KEY),GPGFileEncryptorTest.PASSPHRASE),decryptedContent)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "WorkUnitState state = TestUtils.createTestWorkUnitState()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "dataWriter.write(fileAwareInputStream)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(writtenFilePath.getName().endsWith(\"gpg\"),\"Expected encryption name to be appended to destination\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "FileStatus status = fs.getFileStatus(testTempPath)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "File publicKeyFile = new File(testTempPath.toString(),\"public.key\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i < streamString.length@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CopySource.serializeCopyEntity(state,cf)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CopyableDatasetMetadata metadata = new CopyableDatasetMetadata(new TestCopyableDataset(new Path(\"/source\")))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->1 [style = solid, label="state"];
14->16 [style = bold, label=""];
0->9 [style = solid, label="i"];
15->23 [style = bold, label=""];
31->37 [style = bold, label=""];
4->14 [style = bold, label=""];
14->3 [style = solid, label="state"];
20->13 [style = bold, label=""];
20->24 [style = solid, label="streamString"];
7->22 [style = solid, label="ownerAndPermission"];
30->1 [style = bold, label=""];
22->24 [style = solid, label="cf"];
14->10 [style = solid, label="state"];
8->24 [style = solid, label="expectedContents"];
21->6 [style = bold, label=""];
35->27 [style = solid, label="encryptedContent"];
0->6 [style = bold, label=""];
14->5 [style = solid, label="state"];
4->2 [style = solid, label="metadata"];
14->2 [style = solid, label="state"];
10->24 [style = bold, label=""];
24->31 [style = solid, label="fileAwareInputStream"];
29->41 [style = bold, label=""];
27->28 [style = bold, label=""];
10->34 [style = dashed, label="0"];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
19->11 [style = bold, label=""];
11->32 [style = bold, label=""];
12->26 [style = bold, label=""];
16->19 [style = bold, label=""];
21->9 [style = solid, label="i"];
14->12 [style = solid, label="state"];
18->32 [style = dashed, label="0"];
11->18 [style = bold, label=""];
2->12 [style = bold, label=""];
36->42 [style = solid, label="decryptedContent"];
22->4 [style = bold, label=""];
15->23 [style = solid, label="fileAwareInputStream"];
32->29 [style = bold, label=""];
8->0 [style = bold, label=""];
21->6 [style = solid, label="i"];
29->41 [style = solid, label="publicKeyFile"];
3->10 [style = bold, label=""];
7->22 [style = bold, label=""];
22->5 [style = solid, label="cf"];
5->2 [style = bold, label=""];
20->8 [style = bold, label=""];
25->20 [style = bold, label=""];
22->15 [style = solid, label="cf"];
33->40 [style = bold, label=""];
36->28 [style = solid, label="decryptedContent"];
24->31 [style = bold, label=""];
6->9 [style = dotted, label="true"];
22->1 [style = solid, label="cf"];
13->7 [style = bold, label=""];
37->38 [style = bold, label=""];
18->5 [style = bold, label=""];
6->13 [style = bold, label=""];
26->23 [style = bold, label=""];
26->23 [style = solid, label="fileAwareInputStream"];
24->35 [style = dashed, label="0"];
20->9 [style = solid, label="streamString"];
9->21 [style = bold, label=""];
38->34 [style = bold, label=""];
20->28 [style = solid, label="streamString"];
23->1 [style = bold, label=""];
15->26 [style = dashed, label="0"];
42->27 [style = bold, label=""];
40->30 [style = bold, label=""];
20->27 [style = solid, label="streamString"];
9->24 [style = solid, label="expectedContents"];
41->33 [style = bold, label=""];
34->35 [style = bold, label=""];
35->36 [style = bold, label=""];
6->9 [style = bold, label=""];
6->21 [style = dotted, label="true"];
39->20 [style = bold, label=""];
9->21 [style = solid, label="i"];
0->6 [style = solid, label="i"];
4->3 [style = solid, label="metadata"];
36->42 [style = bold, label=""];
20->15 [style = solid, label="streamString"];
17->20 [style = bold, label=""];
}
