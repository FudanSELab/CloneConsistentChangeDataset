digraph {
11 [style = filled, label = "results.set(1,newSearchResult(1,new SearchContextId(UUIDs.randomBase64UUID(),2),new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "results.set(0,newSearchResult(0,new ShardSearchContextId(\"\",1),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.contextId().getId() == 1) {QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(),123),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@131e004),2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.contextId().getId() == 2) {throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException())}{fail(\"no such request ID: \" + request.contextId())}}}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "AtomicArray<DfsSearchResult> results = new AtomicArray<>(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1,responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNull(responseRef.get().get(0).fetchResult())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "results.get(0).termsStatistics(new Term((((,new TermStatistics(((()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDfsWith2Shards['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results.asList(),null,searchPhaseController(),null,mockSearchPhaseContext,null)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "results.set(1,newSearchResult(1,new ShardSearchContextId(\"\",2),new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "phase.run()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results,searchPhaseController(),null,mockSearchPhaseContext,null)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "testDfsWith2Shards['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "results.set(0,newSearchResult(0,new SearchContextId(UUIDs.randomBase64UUID(),1),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertNull(responseRef.get().get(1).fetchResult())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNotNull(responseRef.get().get(1))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expectThrows(,null)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNotNull(responseRef.get())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2,mockSearchPhaseContext.numSuccess.get())@@@56@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(responseRef.get().get(0))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "results.get(1).termsStatistics(new Term((((,new TermStatistics(((()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testFailPhaseOnException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(84,responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs(0(.doc)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results,searchPhaseController(),null,mockSearchPhaseContext,null)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(42,responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs(0(.doc)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
15->10 [style = bold, label=""];
14->25 [style = bold, label=""];
7->17 [style = bold, label=""];
23->5 [style = bold, label=""];
20->31 [style = solid, label="searchTransportService"];
25->22 [style = bold, label=""];
27->0 [style = bold, label=""];
20->29 [style = bold, label=""];
0->12 [style = solid, label="results"];
0->19 [style = bold, label=""];
1->26 [style = dashed, label="0"];
20->14 [style = solid, label="searchTransportService"];
12->22 [style = bold, label=""];
32->0 [style = bold, label=""];
29->31 [style = bold, label=""];
21->12 [style = solid, label="mockSearchPhaseContext"];
35->33 [style = bold, label=""];
28->9 [style = bold, label=""];
10->3 [style = bold, label=""];
11->9 [style = bold, label=""];
22->23 [style = bold, label=""];
23->33 [style = dashed, label="0"];
6->15 [style = bold, label=""];
1->11 [style = bold, label=""];
20->21 [style = bold, label=""];
11->28 [style = dashed, label="0"];
19->1 [style = bold, label=""];
12->25 [style = dashed, label="0"];
30->35 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
19->26 [style = bold, label=""];
14->12 [style = bold, label=""];
31->30 [style = bold, label=""];
21->25 [style = solid, label="mockSearchPhaseContext"];
9->13 [style = bold, label=""];
4->8 [style = bold, label=""];
26->28 [style = bold, label=""];
2->24 [style = bold, label=""];
29->30 [style = solid, label="mockSearchPhaseContext"];
24->7 [style = bold, label=""];
33->34 [style = bold, label=""];
18->0 [style = bold, label=""];
17->4 [style = bold, label=""];
0->30 [style = solid, label="results"];
21->14 [style = bold, label=""];
13->20 [style = bold, label=""];
}
