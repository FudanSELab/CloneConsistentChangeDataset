digraph {
18 [style = filled, label = "assertThat(configurations.get(0).getName()).isEqualTo(LoggingSystem.ROOT_LOGGER_NAME)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,LogLevel> loggers = new LinkedHashMap<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertIsPresent(\"org\",loggers,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.loggingSystem.setLogLevel(getClass().getName(),LogLevel.DEBUG)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertIsPresent(\"org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests\",loggers,LogLevel.DEBUG)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "LogManager.getLogger(\"org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests$Nested\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "getLoggingConfigurations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "initialize(this.initializationContext,null,null)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "List<LoggerConfiguration> configurations = this.loggingSystem.getLoggerConfigurations()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertIsPresent(\"org.springframework.boot.logging.log4j2\",loggers,null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "this.loggingSystem.initialize(null,null,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "getLoggingConfigurationsShouldReturnAllLoggers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "getLoggingConfigurations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "configurations.forEach(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertIsPresent(\"org.springframework.boot.logging.log4j2.Log4J2LoggingSystemTests$Nested\",loggers,null)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "this.loggingSystem.setLogLevel(getClass().getName(),LogLevel.DEBUG)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(configurations).isNotEmpty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.loggingSystem.beforeInitialize()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "this.loggingSystem.beforeInitialize()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = solid, label="loggers"];
13->15 [style = bold, label=""];
0->4 [style = bold, label=""];
14->3 [style = bold, label=""];
9->4 [style = bold, label=""];
8->0 [style = bold, label=""];
10->12 [style = solid, label="loggers"];
10->16 [style = solid, label="loggers"];
17->14 [style = bold, label=""];
10->11 [style = bold, label=""];
6->2 [style = bold, label=""];
4->1 [style = bold, label=""];
2->8 [style = bold, label=""];
2->3 [style = bold, label=""];
16->12 [style = bold, label=""];
10->13 [style = solid, label="loggers"];
3->0 [style = bold, label=""];
3->9 [style = bold, label=""];
18->10 [style = bold, label=""];
15->16 [style = bold, label=""];
11->13 [style = bold, label=""];
5->18 [style = bold, label=""];
3->8 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
1->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
