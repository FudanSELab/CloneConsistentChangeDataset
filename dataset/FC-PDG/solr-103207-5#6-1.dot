digraph {
5 [style = filled, label = "i++@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "setupCluster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cluster.getSolrClient().setDefaultCollection(COLLECTION)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "id++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String x = STR_VALS.get(id % STR_VALS.size())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TERM_MODEL(rangeVal(.merge(termVal,1,null)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String val = VALUES.get(id % VALUES.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final String termVal = \"x\" + random().nextInt(maxTermId)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int id = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < NUM_RANGE_VALUES@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CurrencyFieldTypeTest.assumeCurrencySupport(\"USD\",\"EUR\",\"MXN\",\"GBP\",\"JPY\",\"NOK\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final int maxTermId = atLeast(TERM_VALUES_RANDOMIZER)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "setupCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "id < numDocs@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int numDocs = atLeast(1000)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int nodeCount = numShards * numReplicas@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TERM_MODEL(i( = new LinkedHashMap<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,cluster.getSolrClient().commit().getStatus())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "setupCluster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(0,(CollectionAdminRequest.createCollection(COLLECTION,CONF,numShards,numReplicas).setMaxShardsPerNode(maxShardsPerNode).setProperties(Collections.singletonMap(CoreAdminParams.CONFIG,\"solrconfig-minimal.xml\")).process(cluster.getSolrClient())).getStatus())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final SolrInputDocument doc = sdoc(\"id\",\"\" + id,INT_FIELD,\"\" + rangeVal,STR_FIELD,termVal)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(0,(new UpdateRequest().add(doc)).process(cluster.getSolrClient()).getStatus())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,(CollectionAdminRequest.createCollection(COLLECTION,CONF,numShards,numReplicas).setProperties(Collections.singletonMap(CoreAdminParams.CONFIG,\"solrconfig-minimal.xml\")).process(cluster.getSolrClient())).getStatus())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "FIELD = usually()? \"amount_CFT\": \"amount\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "id < NUM_DOCS@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final int numShards = TestUtil.nextInt(random(),1,5)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(0,(new UpdateRequest().add(sdoc(\"id\",\"\" + id,\"x_s\",x,FIELD,val))).process(cluster.getSolrClient()).getStatus())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "RANGE_MODEL(rangeVal(++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int rangeVal = random().nextInt(NUM_RANGE_VALUES)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int numReplicas = 1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Arrays.fill(RANGE_MODEL,0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final int maxShardsPerNode = 1@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,cluster.getSolrClient().commit().getStatus())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "configureCluster(nodeCount).addConfig(CONF,Paths.get(TEST_HOME(),\"collection1\",\"conf\")).configure()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
14->16 [style = bold, label=""];
15->5 [style = dotted, label="true"];
16->15 [style = bold, label=""];
8->33 [style = bold, label=""];
0->23 [style = solid, label="numDocs"];
8->10 [style = solid, label="id"];
13->7 [style = solid, label="numReplicas"];
2->26 [style = bold, label=""];
24->19 [style = bold, label=""];
8->23 [style = bold, label=""];
10->9 [style = solid, label="id"];
23->22 [style = dotted, label="true"];
33->32 [style = dotted, label="true"];
21->17 [style = solid, label="maxTermId"];
17->9 [style = bold, label=""];
33->28 [style = bold, label=""];
4->13 [style = bold, label=""];
20->0 [style = bold, label=""];
1->22 [style = solid, label="rangeVal"];
33->34 [style = dotted, label="true"];
25->4 [style = bold, label=""];
5->15 [style = bold, label=""];
2->18 [style = bold, label=""];
19->10 [style = bold, label=""];
30->32 [style = bold, label=""];
31->29 [style = bold, label=""];
33->10 [style = dotted, label="true"];
0->21 [style = bold, label=""];
16->15 [style = solid, label="i"];
10->30 [style = solid, label="id"];
23->19 [style = dotted, label="true"];
11->5 [style = solid, label="i"];
3->4 [style = bold, label=""];
34->30 [style = bold, label=""];
32->10 [style = bold, label=""];
23->9 [style = dotted, label="true"];
33->30 [style = dotted, label="true"];
23->33 [style = dashed, label="0"];
1->17 [style = bold, label=""];
8->9 [style = solid, label="id"];
8->33 [style = solid, label="id"];
8->30 [style = solid, label="id"];
29->27 [style = bold, label=""];
18->20 [style = bold, label=""];
11->5 [style = bold, label=""];
27->4 [style = bold, label=""];
20->8 [style = bold, label=""];
23->10 [style = dotted, label="true"];
23->1 [style = dotted, label="true"];
15->11 [style = bold, label=""];
10->23 [style = solid, label="id"];
17->9 [style = solid, label="termVal"];
10->23 [style = bold, label=""];
7->2 [style = bold, label=""];
13->7 [style = bold, label=""];
5->15 [style = solid, label="i"];
8->34 [style = solid, label="id"];
10->34 [style = solid, label="id"];
1->9 [style = solid, label="rangeVal"];
15->11 [style = dotted, label="true"];
4->7 [style = solid, label="numShards"];
23->1 [style = bold, label=""];
17->24 [style = solid, label="termVal"];
18->26 [style = dashed, label="0"];
23->12 [style = bold, label=""];
10->33 [style = bold, label=""];
22->24 [style = bold, label=""];
13->6 [style = bold, label=""];
8->23 [style = solid, label="id"];
6->7 [style = bold, label=""];
10->33 [style = solid, label="id"];
23->17 [style = dotted, label="true"];
17->30 [style = dashed, label="0"];
33->34 [style = bold, label=""];
23->24 [style = dotted, label="true"];
15->8 [style = bold, label=""];
26->20 [style = bold, label=""];
21->14 [style = bold, label=""];
}
