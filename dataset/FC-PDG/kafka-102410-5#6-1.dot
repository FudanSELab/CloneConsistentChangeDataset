digraph {
10 [style = filled, label = "testLatencyMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "streamsMetrics.removeSensor(sensor1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final int defaultMetrics = streamsMetrics.metrics().size()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testLatencyMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final String entity = \"entity\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int meterMetricsCount = 2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(defaultMetrics + meterMetricsCount * 2,streamsMetrics.metrics().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testThroughputMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope,entity,operation,Sensor.RecordingLevel.DEBUG)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope,entity,operation,Sensor.RecordingLevel.DEBUG)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String operation = \"put\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(defaultMetrics,streamsMetrics.metrics().size())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount,streamsMetrics.metrics().size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope,entity,operation,RecordingLevel.DEBUG)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final int otherMetricsCount = 4@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String scope = \"scope\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(defaultMetrics,streamsMetrics.metrics().size())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->15 [style = solid, label="operation"];
4->9 [style = bold, label=""];
2->0 [style = solid, label="entity"];
2->12 [style = solid, label="entity"];
3->16 [style = dashed, label="0"];
1->3 [style = bold, label=""];
0->15 [style = dashed, label="0"];
5->15 [style = bold, label=""];
3->6 [style = bold, label=""];
1->16 [style = solid, label="meterMetricsCount"];
0->12 [style = dashed, label="0"];
1->6 [style = solid, label="meterMetricsCount"];
12->1 [style = bold, label=""];
7->12 [style = solid, label="scope"];
8->7 [style = bold, label=""];
7->0 [style = solid, label="scope"];
5->0 [style = solid, label="operation"];
6->4 [style = bold, label=""];
3->6 [style = solid, label="otherMetricsCount"];
8->4 [style = solid, label="defaultMetrics"];
8->9 [style = solid, label="defaultMetrics"];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
5->12 [style = bold, label=""];
1->16 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
15->14 [style = solid, label="sensor1"];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
2->15 [style = solid, label="entity"];
13->8 [style = bold, label=""];
5->12 [style = solid, label="operation"];
0->4 [style = solid, label="sensor1"];
8->16 [style = solid, label="defaultMetrics"];
12->4 [style = solid, label="sensor1"];
7->15 [style = solid, label="scope"];
8->6 [style = solid, label="defaultMetrics"];
2->5 [style = bold, label=""];
14->4 [style = bold, label=""];
15->1 [style = bold, label=""];
}
