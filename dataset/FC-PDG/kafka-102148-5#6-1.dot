digraph {
6 [style = filled, label = "assertEquals(1,decoded.version())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(2,decoded.version())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(processId,decoded.processId())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final SubscriptionInfo info = new SubscriptionInfo(1,LATEST_SUPPORTED_VERSION,processId,IGNORED_USER_ENDPOINT,TASK_OFFSET_SUMS)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "shouldEncodeAndDecodeVersion1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final SubscriptionInfo decoded = SubscriptionInfo.decode(info.encode())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"localhost:80\",decoded.userEndPoint())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldEncodeAndDecodeVersion1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(SubscriptionInfo.UNKNOWN,decoded.latestSupportedVersion())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(UUID_1,decoded.processId())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final SubscriptionInfo info = new SubscriptionInfo(1,LATEST_SUPPORTED_VERSION,UUID_1,IGNORED_USER_ENDPOINT,TASK_OFFSET_SUMS)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "shouldEncodeAndDecodeVersion2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(ACTIVE_TASKS,decoded.prevTasks())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(STANDBY_TASKS,decoded.standbyTasks())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final SubscriptionInfo info = new SubscriptionInfo(2,LATEST_SUPPORTED_VERSION,processId,\"localhost:80\",TASK_OFFSET_SUMS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertNull(decoded.userEndPoint())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
12->15 [style = bold, label=""];
1->0 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
13->1 [style = bold, label=""];
7->14 [style = bold, label=""];
6->1 [style = bold, label=""];
6->13 [style = dashed, label="0"];
8->5 [style = bold, label=""];
5->10 [style = dashed, label="0"];
11->10 [style = bold, label=""];
5->4 [style = bold, label=""];
15->4 [style = bold, label=""];
10->4 [style = bold, label=""];
2->7 [style = bold, label=""];
0->9 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
}
