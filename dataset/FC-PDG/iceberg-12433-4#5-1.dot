digraph {
12 [style = filled, label = "reorderedFields.add(ParquetValueReaders.nulls())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "GroupType struct@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Schema avroSchema = avroSchemas.get(expected)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int fieldD = type.getMaxDefinitionLevel(path(fieldType.getName())) - 1@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "readersById.put(id,option(fieldType,fieldD,fieldReaders.get(i)))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Types.StructType expected@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Type> types = Lists.newArrayListWithExpectedSize(expectedFields.size())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Types.NestedField> expectedFields = expected != null? expected.fields(): ImmutableList.of()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<ParquetValueReader<?>> fieldReaders@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "reader != null@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "reorderedFields.add(reader)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return new InternalRowReader(types,reorderedFields)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ParquetValueReader<?> reader = readersById.get(id)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "struct['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "types.add(null)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "struct['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int id = fieldType.getId().intValue()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<ParquetValueReader<?>> reorderedFields = Lists.newArrayListWithExpectedSize(expectedFields.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int fieldD = type.getMaxDefinitionLevel(path(fieldType.getName())) - 1@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "List<ParquetValueReader<?>> fieldReaders@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "readersById.put(id,ParquetValueReaders.option(fieldType,fieldD,fieldReaders.get(i)))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "GroupType struct@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "types.add(typesById.get(id))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Types.StructType expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "return new RecordReader(types,reorderedFields,avroSchema)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "typesById.put(id,fieldType)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "struct['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Type fieldType = fields.get(i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i += 1@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Types.StructType expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "i < fields.size()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<Integer,Type> typesById = Maps.newHashMap()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Type> fields = struct.getFields()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<Integer,ParquetValueReader<?>> readersById = Maps.newHashMap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int id = field.fieldId()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->2 [style = solid, label="reorderedFields"];
18->8 [style = solid, label="fieldType"];
25->1 [style = bold, label=""];
30->13 [style = bold, label=""];
0->13 [style = bold, label=""];
14->0 [style = dotted, label="true"];
14->26 [style = dotted, label="true"];
18->30 [style = bold, label=""];
0->30 [style = dashed, label="0"];
27->17 [style = bold, label=""];
7->9 [style = solid, label="fields"];
5->25 [style = solid, label="reader"];
14->9 [style = bold, label=""];
16->5 [style = solid, label="id"];
14->18 [style = dotted, label="true"];
18->0 [style = bold, label=""];
11->16 [style = bold, label=""];
30->26 [style = solid, label="fieldD"];
27->22 [style = dotted, label="true"];
14->24 [style = dotted, label="true"];
33->32 [style = dotted, label="true"];
12->11 [style = bold, label=""];
20->14 [style = bold, label=""];
23->14 [style = solid, label="i"];
5->1 [style = solid, label="reader"];
26->24 [style = bold, label=""];
32->35 [style = solid, label="expected"];
5->25 [style = bold, label=""];
23->14 [style = bold, label=""];
10->34 [style = bold, label=""];
3->7 [style = bold, label=""];
27->29 [style = dotted, label="true"];
4->22 [style = dotted, label="true"];
35->17 [style = bold, label=""];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
25->10 [style = dotted, label="true"];
8->24 [style = bold, label=""];
33->31 [style = dotted, label="true"];
13->24 [style = solid, label="id"];
20->8 [style = solid, label="i"];
32->9 [style = solid, label="expected"];
4->17 [style = bold, label=""];
20->14 [style = solid, label="i"];
14->23 [style = dotted, label="true"];
25->12 [style = dotted, label="false"];
7->20 [style = bold, label=""];
15->19 [style = bold, label=""];
35->34 [style = solid, label="avroSchema"];
19->16 [style = bold, label=""];
15->34 [style = solid, label="reorderedFields"];
4->21 [style = dotted, label="true"];
14->30 [style = dotted, label="true"];
20->26 [style = solid, label="i"];
10->16 [style = bold, label=""];
13->26 [style = solid, label="id"];
18->26 [style = solid, label="fieldType"];
13->26 [style = bold, label=""];
25->11 [style = dotted, label="false"];
14->8 [style = dotted, label="true"];
17->3 [style = bold, label=""];
16->5 [style = bold, label=""];
23->26 [style = solid, label="i"];
23->8 [style = solid, label="i"];
25->1 [style = dotted, label="true"];
24->23 [style = bold, label=""];
8->26 [style = dashed, label="0"];
4->6 [style = dotted, label="true"];
33->35 [style = bold, label=""];
23->18 [style = solid, label="i"];
18->24 [style = solid, label="fieldType"];
16->10 [style = solid, label="id"];
19->34 [style = solid, label="types"];
11->2 [style = bold, label=""];
14->13 [style = dotted, label="true"];
21->9 [style = solid, label="expected"];
13->8 [style = solid, label="id"];
19->2 [style = solid, label="types"];
20->18 [style = solid, label="i"];
27->28 [style = dotted, label="true"];
11->34 [style = bold, label=""];
29->9 [style = solid, label="expected"];
25->12 [style = bold, label=""];
9->15 [style = bold, label=""];
2->34 [style = dashed, label="0"];
13->8 [style = bold, label=""];
33->22 [style = dotted, label="true"];
1->10 [style = bold, label=""];
0->8 [style = solid, label="fieldD"];
}
