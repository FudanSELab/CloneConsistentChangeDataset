digraph {
16 [style = filled, label = "assertTrue((labels1.contains(\"doc1\") && labels1.contains(\"doc2\")) || ((labels1.contains(\"doc3\") && labels1.contains(\"doc4\"))))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "List<List<Number>> cluster1 = (List<List<Number>>)tuples.get(0).get(\"g\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(doc1, doc2, doc3, doc4)),\" + \" f=kmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h))\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),1.0,0.0)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(doc1, doc2, doc3, doc4)),\" + \" f=multiKmeans(e, 2, 5),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h))\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),1.0,0.0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.0)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),1.0,0.0)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),0.0,0.0)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testMultiKmeans['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<String> labels1 = (List<String>)tuples.get(0).get(\"j\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),1.0,0.0)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.0)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),1.0,0.0)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(!(labels1.contains(\"doc2\") && labels2.contains(\"doc2\")))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),1.0,0.0)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),1.0,0.0)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(!(labels1.contains(\"doc4\") && labels2.contains(\"doc4\")))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "labels1.contains(\"doc1\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),0.0,0.0)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(cluster2.size(),2)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(cluster1.size(),2)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),0.0,0.0)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "solrStream.setStreamContext(context)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),0.0,0.0)@@@53@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),0.0,0.0)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testKmeans['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),0.0,0.0)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(tuples.size() == 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(\"doc1\", \"doc2\", \"doc3\", \"doc4\")),\" + \" f=kmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h))\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "List<String> labels2 = (List<String>)tuples.get(0).get(\"k\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(!(labels1.contains(\"doc1\") && labels2.contains(\"doc1\")))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),1.0,0.0)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<List<Number>> centroids = (List<List<Number>>)tuples.get(0).get(\"i\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<List<Number>> cluster2 = (List<List<Number>>)tuples.get(0).get(\"h\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),1.0,0.0)@@@39@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(!(labels1.contains(\"doc3\") && labels2.contains(\"doc3\")))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(centroids.size(),2)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),1.0,0.0)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),1.0,0.0)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),0.0,0.0)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testKmeans['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),0.0,0.0)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),0.0,0.0)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),0.0,0.0)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue((labels2.contains(\"doc1\") && labels2.contains(\"doc2\")) || ((labels2.contains(\"doc3\") && labels2.contains(\"doc4\"))))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),0.0,0.0)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->51 [style = dashed, label="0"];
45->15 [style = dotted, label="true"];
5->20 [style = bold, label=""];
15->21 [style = bold, label=""];
45->8 [style = dotted, label="false"];
39->14 [style = bold, label=""];
21->30 [style = bold, label=""];
45->38 [style = dotted, label="true"];
46->48 [style = bold, label=""];
9->16 [style = bold, label=""];
45->22 [style = dotted, label="true"];
4->49 [style = solid, label="cexpr"];
45->32 [style = dotted, label="false"];
29->46 [style = bold, label=""];
43->8 [style = bold, label=""];
51->17 [style = bold, label=""];
18->35 [style = bold, label=""];
45->42 [style = dotted, label="true"];
41->22 [style = bold, label=""];
49->40 [style = bold, label=""];
8->39 [style = bold, label=""];
47->0 [style = bold, label=""];
45->1 [style = dotted, label="false"];
25->28 [style = bold, label=""];
45->23 [style = dotted, label="true"];
53->52 [style = bold, label=""];
33->41 [style = bold, label=""];
51->49 [style = solid, label="cexpr"];
20->3 [style = bold, label=""];
40->34 [style = bold, label=""];
2->4 [style = bold, label=""];
37->18 [style = solid, label="context"];
19->25 [style = bold, label=""];
13->37 [style = bold, label=""];
45->43 [style = dotted, label="false"];
7->6 [style = bold, label=""];
45->39 [style = dotted, label="false"];
4->52 [style = dashed, label="0"];
27->47 [style = bold, label=""];
44->45 [style = bold, label=""];
3->29 [style = bold, label=""];
4->17 [style = bold, label=""];
45->23 [style = bold, label=""];
31->32 [style = bold, label=""];
12->36 [style = bold, label=""];
45->31 [style = dotted, label="false"];
11->24 [style = bold, label=""];
1->7 [style = bold, label=""];
45->41 [style = dotted, label="true"];
23->42 [style = bold, label=""];
45->7 [style = dotted, label="false"];
10->5 [style = bold, label=""];
17->49 [style = bold, label=""];
16->44 [style = bold, label=""];
48->11 [style = bold, label=""];
45->26 [style = dotted, label="true"];
45->6 [style = dotted, label="false"];
24->9 [style = bold, label=""];
34->13 [style = solid, label="url"];
45->25 [style = dotted, label="false"];
45->28 [style = dotted, label="false"];
42->26 [style = bold, label=""];
30->38 [style = bold, label=""];
35->27 [style = bold, label=""];
34->13 [style = bold, label=""];
36->15 [style = bold, label=""];
13->35 [style = solid, label="solrStream"];
28->1 [style = bold, label=""];
32->43 [style = bold, label=""];
45->33 [style = dotted, label="true"];
52->17 [style = bold, label=""];
0->10 [style = bold, label=""];
6->31 [style = bold, label=""];
17->13 [style = solid, label="paramsLoc"];
45->19 [style = bold, label=""];
45->19 [style = dotted, label="false"];
22->12 [style = bold, label=""];
50->51 [style = bold, label=""];
52->49 [style = solid, label="cexpr"];
45->12 [style = dotted, label="true"];
37->18 [style = bold, label=""];
45->36 [style = dotted, label="true"];
45->30 [style = dotted, label="true"];
45->21 [style = dotted, label="true"];
26->33 [style = bold, label=""];
45->14 [style = dotted, label="false"];
}
