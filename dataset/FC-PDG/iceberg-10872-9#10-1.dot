digraph {
3 [style = filled, label = "return new ReaderFactory(readUsingBatch? batchSize: 0)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean allOrcFileScanTasks = tasks().stream().allMatch(null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "createReaderFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "boolean hasNoDeleteFiles = tasks().stream().noneMatch(null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createReaderFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "return readUsingBatch@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "boolean allParquetFileScanTasks = tasks().stream().allMatch(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "enableBatchRead['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "this.readUsingBatch = batchReadsEnabled && hasNoDeleteFiles && (allOrcFileScanTasks || (allParquetFileScanTasks && atLeastOneColumn && onlyPrimitives))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "readUsingBatch == null@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "boolean onlyPrimitives = lazySchema().columns().stream().allMatch(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "boolean hasNoDeleteFiles = tasks().stream().noneMatch(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean atLeastOneColumn = lazySchema().columns().size() > 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "boolean allParquetFileScanTasks = tasks().stream().allMatch(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolean batchReadsEnabled = batchReadsEnabled(allParquetFileScanTasks,allOrcFileScanTasks)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "boolean onlyPrimitives = expectedSchema.columns().stream().allMatch(null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
4->10 [style = bold, label=""];
4->7 [style = solid, label="atLeastOneColumn"];
4->13 [style = solid, label="allOrcFileScanTasks"];
7->13 [style = solid, label="hasNoDeleteFiles"];
14->12 [style = dotted, label="true"];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
12->13 [style = solid, label="onlyPrimitives"];
5->13 [style = solid, label="allParquetFileScanTasks"];
7->3 [style = solid, label="readUsingBatch"];
0->12 [style = dashed, label="0"];
9->7 [style = bold, label=""];
9->7 [style = solid, label="batchReadsEnabled"];
5->9 [style = solid, label="allOrcFileScanTasks"];
12->7 [style = bold, label=""];
7->3 [style = bold, label=""];
14->10 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
4->0 [style = bold, label=""];
2->9 [style = solid, label="allParquetFileScanTasks"];
10->13 [style = solid, label="atLeastOneColumn"];
14->5 [style = dotted, label="true"];
8->2 [style = bold, label=""];
10->12 [style = bold, label=""];
0->7 [style = solid, label="onlyPrimitives"];
5->7 [style = solid, label="allOrcFileScanTasks"];
6->7 [style = solid, label="hasNoDeleteFiles"];
5->4 [style = bold, label=""];
14->7 [style = dotted, label="true"];
7->13 [style = dashed, label="0"];
2->7 [style = solid, label="allParquetFileScanTasks"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
6->9 [style = bold, label=""];
6->7 [style = bold, label=""];
13->15 [style = solid, label="readUsingBatch"];
14->4 [style = dotted, label="true"];
4->10 [style = dashed, label="0"];
2->5 [style = bold, label=""];
14->5 [style = bold, label=""];
}
