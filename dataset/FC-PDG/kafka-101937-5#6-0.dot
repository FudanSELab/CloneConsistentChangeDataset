digraph {
3 [style = filled, label = "assertThat(taskManager.getTaskOffsetSums(),is(expectedOffsetSums))@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectLockObtainedFor(taskId00)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replay(stateDirectory)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "taskManager.handleRebalanceStart(singleton(\"topic\"))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final StateMachineTask runningTask = handleAssignment(taskId00Assignment,emptyMap(),emptyMap()).get(taskId00)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final Map<TopicPartition,Long> changelogOffsets = mkMap(mkEntry(new TopicPartition(\"changelog\",0),5L),mkEntry(new TopicPartition(\"changelog\",1),10L))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectLockObtainedFor(taskId00)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Map<TaskId,Long> expectedOffsetSums = mkMap(mkEntry(taskId00,15L))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Map<TopicPartition,Long> changelogOffsets = mkMap(mkEntry(new TopicPartition(\"changelog\",0),Task.LATEST_OFFSET),mkEntry(new TopicPartition(\"changelog\",1),Task.LATEST_OFFSET))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "shouldReportLatestOffsetAsOffsetSumForRunningTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "shouldComputeOffsetSumForStandbyTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final StateMachineTask restoringTask = handleAssignment(emptyMap(),taskId00Assignment,emptyMap()).get(taskId00)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(taskManager.getTaskOffsetSums(),is(expectedOffsetSums))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "restoringTask.setChangelogOffsets(changelogOffsets)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "makeTaskFolders(taskId00.toString())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldReportLatestOffsetAsOffsetSumForRunningTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Map<TaskId,Long> expectedOffsetSums = mkMap(mkEntry(taskId00,Task.LATEST_OFFSET))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "runningTask.setChangelogOffsets(changelogOffsets)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(taskManager.getTaskOffsetSums(),is(expectedOffsetSums))@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8->9 [style = bold, label=""];
11->12 [style = bold, label=""];
14->16 [style = bold, label=""];
2->17 [style = dashed, label="0"];
9->12 [style = solid, label="changelogOffsets"];
4->5 [style = bold, label=""];
15->4 [style = bold, label=""];
7->6 [style = bold, label=""];
18->13 [style = bold, label=""];
16->15 [style = bold, label=""];
6->3 [style = solid, label="expectedOffsetSums"];
0->11 [style = bold, label=""];
2->17 [style = bold, label=""];
9->6 [style = bold, label=""];
2->3 [style = bold, label=""];
12->10 [style = bold, label=""];
5->0 [style = bold, label=""];
6->10 [style = solid, label="expectedOffsetSums"];
16->18 [style = solid, label="changelogOffsets"];
1->4 [style = bold, label=""];
2->11 [style = dashed, label="0"];
0->2 [style = bold, label=""];
15->13 [style = solid, label="expectedOffsetSums"];
6->1 [style = bold, label=""];
17->18 [style = bold, label=""];
}
