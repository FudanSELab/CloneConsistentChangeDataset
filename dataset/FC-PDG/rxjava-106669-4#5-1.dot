digraph {
11 [style = filled, label = "to.assertNoErrors()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Observable.range(0,100000).onErrorReturn(new Function<Throwable,Integer>(){@Override public Integer apply(Throwable t1){return 1}}).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){@Override public Integer apply(Integer t1){if (c++ <= 1) {try {Thread.sleep(500)}catch (InterruptedException e) }return t1}}).subscribe(to)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ts.assertNoErrors()@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "backpressure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "backpressure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Flowable.range(0,100000).onErrorReturn(new Function<Throwable,Integer>(){@Override public Integer apply(Throwable t1){return 1}}).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){@Override public Integer apply(Integer t1){if (c++ <= 1) {try {Thread.sleep(500)}catch (InterruptedException e) }return t1}}).subscribe(ts)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "to.awaitDone(5,TimeUnit.SECONDS)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "backpressure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7->9 [style = bold, label=""];
2->11 [style = dashed, label="0"];
8->10 [style = bold, label=""];
6->5 [style = bold, label=""];
1->9 [style = dashed, label="0"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
5->4 [style = bold, label=""];
0->4 [style = solid, label="ts"];
9->11 [style = bold, label=""];
0->5 [style = dashed, label="0"];
0->4 [style = bold, label=""];
10->7 [style = solid, label="to"];
10->7 [style = bold, label=""];
4->7 [style = dashed, label="0"];
0->10 [style = dashed, label="0"];
3->0 [style = bold, label=""];
5->4 [style = solid, label="ts"];
}
