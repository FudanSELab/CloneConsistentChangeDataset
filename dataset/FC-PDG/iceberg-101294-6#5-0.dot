digraph {
1 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",5),SPEC,true).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",30),SPEC,true).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",79),SPEC,true).eval(FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",INT_MAX_VALUE - 4),SPEC,true).eval(FILE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",INT_MAX_VALUE - 1),SPEC,true).eval(FILE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testIntegerGt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",INT_MAX_VALUE),SPEC,true).eval(FILE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",75),SPEC,true).eval(FILE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testIntegerGt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",85),SPEC,true).eval(FILE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",31),SPEC,true).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",INT_MAX_VALUE + 6),SPEC,true).eval(FILE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testIntegerLt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",79),SPEC,true).eval(FILE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",78),SPEC,true).eval(FILE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
17->5 [style = bold, label=""];
0->9 [style = bold, label=""];
4->0 [style = solid, label="shouldRead"];
7->11 [style = bold, label=""];
4->16 [style = dashed, label="0"];
8->1 [style = solid, label="shouldRead"];
5->20 [style = bold, label=""];
0->6 [style = bold, label=""];
3->7 [style = solid, label="shouldRead"];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
6->9 [style = dashed, label="0"];
8->20 [style = dashed, label="0"];
18->19 [style = bold, label=""];
17->5 [style = solid, label="shouldRead"];
0->15 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
7->4 [style = bold, label=""];
20->1 [style = bold, label=""];
10->7 [style = bold, label=""];
16->15 [style = solid, label="shouldRead"];
6->5 [style = solid, label="shouldRead"];
10->7 [style = solid, label="shouldRead"];
13->1 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
8->13 [style = dashed, label="0"];
8->1 [style = bold, label=""];
13->1 [style = solid, label="shouldRead"];
6->5 [style = bold, label=""];
15->17 [style = bold, label=""];
11->0 [style = bold, label=""];
12->10 [style = bold, label=""];
11->0 [style = solid, label="shouldRead"];
3->7 [style = bold, label=""];
7->19 [style = dashed, label="0"];
5->13 [style = bold, label=""];
9->5 [style = bold, label=""];
20->1 [style = solid, label="shouldRead"];
9->5 [style = solid, label="shouldRead"];
14->18 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
18->19 [style = solid, label="shouldRead"];
}
