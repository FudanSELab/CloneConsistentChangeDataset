digraph {
16 [style = filled, label = "inputStreamList.size() == 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputDataList.get((int)(counter % inputDataList.size())),extensions)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "counter++@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputStreamList.get((int)(counter % inputStreamList.size())),extensions)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int j = 0@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "i < reps@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "inputDataList.size() == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "deserializeFromByteArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int reps@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "j < inputDataList.size()@@@10@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "int reps@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "counter++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "inputStreamList.get((int)(counter % inputStreamList.size())).reset()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "deserializeFromByteArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "j++@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "deserializeFromMemoryStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputDataList.get(j),extensions)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5->0 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
15->17 [style = solid, label="counter"];
3->15 [style = dotted, label="true"];
4->7 [style = bold, label=""];
11->12 [style = bold, label=""];
9->11 [style = bold, label=""];
9->11 [style = solid, label="j"];
11->12 [style = dotted, label="true"];
8->6 [style = solid, label="counter"];
7->2 [style = solid, label="i"];
13->11 [style = solid, label="j"];
13->9 [style = solid, label="j"];
17->18 [style = bold, label=""];
4->16 [style = dashed, label="0"];
3->8 [style = dotted, label="true"];
3->17 [style = dotted, label="true"];
0->14 [style = dashed, label="0"];
19->14 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
7->3 [style = solid, label="i"];
10->0 [style = dotted, label="true"];
14->3 [style = solid, label="reps"];
4->1 [style = dotted, label="true"];
16->1 [style = dotted, label="true"];
6->8 [style = bold, label=""];
3->13 [style = bold, label=""];
13->12 [style = solid, label="j"];
11->2 [style = bold, label=""];
5->4 [style = bold, label=""];
4->1 [style = bold, label=""];
15->2 [style = bold, label=""];
3->6 [style = bold, label=""];
2->3 [style = bold, label=""];
7->3 [style = bold, label=""];
12->9 [style = bold, label=""];
19->16 [style = bold, label=""];
3->17 [style = bold, label=""];
13->11 [style = bold, label=""];
8->2 [style = bold, label=""];
16->1 [style = bold, label=""];
3->18 [style = dotted, label="true"];
10->4 [style = bold, label=""];
3->2 [style = dotted, label="true"];
18->15 [style = bold, label=""];
3->6 [style = dotted, label="true"];
3->11 [style = dotted, label="true"];
2->3 [style = solid, label="i"];
16->7 [style = bold, label=""];
9->12 [style = solid, label="j"];
1->7 [style = bold, label=""];
3->13 [style = dotted, label="true"];
0->3 [style = solid, label="reps"];
}
