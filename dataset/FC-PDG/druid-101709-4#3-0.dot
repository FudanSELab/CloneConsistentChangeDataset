digraph {
3 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo \" + \"WHERE dim2 = 'a' and (\" + \" (__time >= TIMESTAMP '2000-01-01 00:00:00' AND __time < TIMESTAMP '2001-01-01 00:00:00')\" + \" OR (\" + \" (__time >= TIMESTAMP '2002-01-01 00:00:00' AND __time < TIMESTAMP '2003-05-01 00:00:00')\" + \" and (__time >= TIMESTAMP '2002-05-01 00:00:00' AND __time < TIMESTAMP '2004-01-01 00:00:00')\" + \" and dim1 = 'abc'\" + \" )\" + \")\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Intervals.of(\"2000/2001\"),Intervals.of(\"2002-05-01/2003-05-01\"))).granularity(Granularities.ALL).filters(and(selector(\"dim2\",\"a\",null),or(timeBound(\"2000/2001\"),and(selector(\"dim1\",\"abc\",null),timeBound(\"2002-05-01/2003-05-01\"))))).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a6ca5a))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testRemoveUselessCaseWhen['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testCountStarWithComplexDisjointTimeFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testCountStarWithComplexDisjointTimeFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo\" + \"WHERE\" + \" CASE\" + \" WHEN __time >= TIME_PARSE('2000-01-01 00:00:00', 'yyyy-MM-dd HH:mm:ss') AND __time < TIMESTAMP '2001-01-01 00:00:00'\" + \" THEN true\" + \" ELSE false\" + \" END\" + \"OR\" + \" __time >= TIMESTAMP '2010-01-01 00:00:00' AND __time < TIMESTAMP '2011-01-01 00:00:00'\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(QSS(Intervals.of(\"2000/2001\"),Intervals.of(\"2010/2011\"))).granularity(Granularities.ALL).aggregators(AGGS(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a6ca9b))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo \" + \"WHERE dim2 = 'a' and (\" + \" (__time >= TIMESTAMP '2000-01-01 00:00:00' AND __time < TIMESTAMP '2001-01-01 00:00:00')\" + \" OR (\" + \" (__time >= TIMESTAMP '2002-01-01 00:00:00' AND __time < TIMESTAMP '2003-05-01 00:00:00')\" + \" and (__time >= TIMESTAMP '2002-05-01 00:00:00' AND __time < TIMESTAMP '2004-01-01 00:00:00')\" + \" and dim1 = 'abc'\" + \" )\" + \")\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(QSS(Intervals.of(\"2000/2001\"),Intervals.of(\"2002-05-01/2003-05-01\"))).granularity(Granularities.ALL).filters(AND(SELECTOR(\"dim2\",\"a\",null),OR(TIME_BOUND(\"2000/2001\"),AND(SELECTOR(\"dim1\",\"abc\",null),TIME_BOUND(\"2002-05-01/2003-05-01\"))))).aggregators(AGGS(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a6ca01))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
1->0 [style = bold, label=""];
0->3 [style = dashed, label="0"];
}
