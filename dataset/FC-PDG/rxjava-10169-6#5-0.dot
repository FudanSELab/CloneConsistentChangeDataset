digraph {
4 [style = filled, label = "ts.assertValues(1,3)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "oi.subscribe(ts)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ts.assertValues(1,2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertNotMatchValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTestSubscriberEx['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1,2))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "thrown.expect()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "ts.assertValueCount(2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ts.assertTerminated()@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThrows(,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertNotMatchValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ts.assertTerminated()@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
6->4 [style = bold, label=""];
1->2 [style = bold, label=""];
0->10 [style = bold, label=""];
12->3 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
9->8 [style = bold, label=""];
0->6 [style = bold, label=""];
10->12 [style = bold, label=""];
5->0 [style = solid, label="ts"];
11->2 [style = bold, label=""];
2->5 [style = bold, label=""];
}
