digraph {
15 [style = filled, label = "assertFuncEquals(\"agg_missing(field(foo_i))\",\"agg_missing(field(foo_i))\")@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertFuncEquals(\"agg_uniqueBlock(foo_i)\",\"agg_uniqueBlock(foo_i)\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFuncEquals(\"lt(foo_i,2)\",\"lt(foo_i,2)\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFuncEquals(\"gt(foo_i,2)\",\"gt(foo_i, 2)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertFuncEquals(\"agg_hll(foo_i)\",\"agg_hll(foo_i)\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFuncEquals(\"lte(foo_i,2)\",\"lte(foo_i,2)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertFuncEquals(\"agg(avg(foo_i))\",\"agg(avg(foo_i))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testAggs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertFuncEquals(\"agg_missing(foo_i)\",\"agg_missing(foo_i)\")@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertFuncEquals(\"agg_avg(foo_i)\",\"agg_avg(foo_i)\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFuncEquals(\"agg_max(foo_i)\",\"agg(max(foo_i))\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFuncEquals(\"agg_min(foo_i)\",\"agg(min(foo_i))\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFuncEquals(\"agg(missing(foo_i))\",\"agg(missing(foo_i))\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertFuncEquals(\"agg_count()\",\"agg_count()\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFuncEquals(\"agg_sumsq(foo_i)\",\"agg_sumsq(foo_i)\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFuncEquals(\"agg_stddev(foo_i)\",\"agg_stddev(foo_i)\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expectThrows(,\"expected error, functions are not equal\",null)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertFuncEquals(\"gt(foo_i,2)\",\"gt(foo_i,2)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testCompares['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFuncEquals(\"agg_sum(foo_i)\",\"agg_sum(foo_i)\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFuncEquals(\"agg_percentile(foo_i,50)\",\"agg_percentile(foo_i,50)\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testAggs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFuncEquals(\"agg_variance(foo_i)\",\"agg_variance(foo_i)\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertFuncEquals(\"eq(foo_i,2)\",\"eq(foo_i,2)\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFuncEquals(\"agg(avg(foo_i))\",\"agg_avg(foo_i)\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFuncEquals(\"agg_unique(foo_i)\",\"agg_unique(foo_i)\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFuncEquals(\"gte(foo_i,2)\",\"gte(foo_i,2)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->22 [style = bold, label=""];
13->26 [style = dashed, label="0"];
11->4 [style = bold, label=""];
4->23 [style = dashed, label="0"];
10->2 [style = bold, label=""];
3->22 [style = dashed, label="0"];
7->10 [style = bold, label=""];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
1->12 [style = bold, label=""];
5->1 [style = bold, label=""];
26->20 [style = bold, label=""];
8->25 [style = dashed, label="0"];
0->13 [style = bold, label=""];
16->13 [style = bold, label=""];
11->21 [style = dashed, label="0"];
20->19 [style = bold, label=""];
3->6 [style = bold, label=""];
25->21 [style = bold, label=""];
19->25 [style = bold, label=""];
8->11 [style = bold, label=""];
12->17 [style = bold, label=""];
14->19 [style = dashed, label="0"];
14->8 [style = bold, label=""];
9->20 [style = dashed, label="0"];
9->14 [style = bold, label=""];
13->9 [style = bold, label=""];
6->7 [style = bold, label=""];
21->23 [style = bold, label=""];
24->26 [style = bold, label=""];
4->3 [style = bold, label=""];
18->15 [style = bold, label=""];
}
