digraph {
16 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE v = ?\",set(udt1,udt2)),row(1,set(udt1,udt2)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testIndexOnNonFrozenCollectionOfFrozenUDT['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertInvalidMessage(\"Frozen collections are immutable and must be fully indexed\",\"CREATE INDEX idx ON %s (values(v))\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertInvalidMessage(StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,\"SELECT * FROM %s WHERE v CONTAINS ?\",udt1)@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "execute(\"DELETE FROM %s WHERE k = 2\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE v = ?\",set(udt2)),row(2,set(udt2)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String type = createType(\"CREATE TYPE %s (a int)\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertInvalidMessage(StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,\"SELECT * FROM %s WHERE v CONTAINS ?\",udt1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testIndexOnFrozenCollectionOfUDT['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dropIndex(\"DROP INDEX %s.\" + indexName)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String indexName = createIndex(\"CREATE INDEX ON %s (full(v))\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertInvalidMessage(\"Frozen collections only support full()\",\"CREATE INDEX idx ON %s (values(v))\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertInvalidMessage(\"full() indexes can only be created on frozen collections\",\"CREATE INDEX ON %s (full(v))\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "execute(\"DELETE FROM %s WHERE k = 1\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "execute(\"INSERT INTO %s (k, v) VALUES (?, ?)\",1,set(udt1,udt2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Object udt2 = userType(\"a\",2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE v CONTAINS ?\",udt1),row(1,set(udt1,udt2)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE v CONTAINS ?\",udt2),row(1,set(udt1,udt2)),row(2,set(udt2)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEmpty(execute(\"SELECT * FROM %s WHERE v CONTAINS ?\",udt1))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertInvalidMessage(\"Frozen collections only support full()\",\"CREATE INDEX idx ON %s (keys(v))\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "String indexName = createIndex(\"CREATE INDEX ON %s (values(v))\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String tableName = createTable(\"CREATE TABLE %s (k int PRIMARY KEY, v frozen<set<frozen<\" + type + \">>>)\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertInvalidMessage(\"Frozen collections are immutable and must be fully indexed\",\"CREATE INDEX idx ON %s (keys(v))\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE v CONTAINS ?\",udt2),row(2,set(udt2)))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testIndexOnFrozenCollectionOfUDT['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Object udt1 = userType(\"a\",1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertInvalidMessage(format(\"Index '%s.%s' doesn't exist\",KEYSPACE,indexName),format(\"DROP INDEX %s.%s\",KEYSPACE,indexName))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "execute(\"INSERT INTO %s (k, v) VALUES (?, ?)\",2,set(udt2))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String tableName = createTable(\"CREATE TABLE %s (k int PRIMARY KEY, v set<frozen<\" + type + \">>)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "execute(\"INSERT INTO %s (k, v) VALUES (?, ?)\",1,set(udt1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertInvalidMessage(\"Cannot create index on keys of column v with non-map type\",\"CREATE INDEX ON %s (keys(v))\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEmpty(execute(\"SELECT * FROM %s WHERE v = ?\",set(udt2)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "execute(\"UPDATE %s SET v = v + ? WHERE k = ?\",set(udt2),1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(waitForIndex(keyspace(),tableName,indexName))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->28 [style = bold, label=""];
26->32 [style = bold, label=""];
9->11 [style = bold, label=""];
0->18 [style = solid, label="udt1"];
12->9 [style = solid, label="indexName"];
7->10 [style = bold, label=""];
11->1 [style = bold, label=""];
5->26 [style = dashed, label="0"];
29->9 [style = solid, label="indexName"];
29->11 [style = solid, label="indexName"];
19->20 [style = bold, label=""];
18->27 [style = dashed, label="0"];
0->16 [style = solid, label="udt1"];
8->23 [style = dashed, label="0"];
16->7 [style = bold, label=""];
0->24 [style = solid, label="udt1"];
5->15 [style = bold, label=""];
2->18 [style = bold, label=""];
14->28 [style = solid, label="udt2"];
31->29 [style = bold, label=""];
28->9 [style = bold, label=""];
15->32 [style = dashed, label="0"];
15->19 [style = dashed, label="0"];
0->27 [style = solid, label="udt1"];
17->31 [style = dashed, label="0"];
12->6 [style = bold, label=""];
14->13 [style = solid, label="udt2"];
29->2 [style = solid, label="indexName"];
3->4 [style = bold, label=""];
23->0 [style = bold, label=""];
4->23 [style = solid, label="type"];
22->4 [style = bold, label=""];
6->2 [style = bold, label=""];
12->2 [style = solid, label="indexName"];
8->0 [style = bold, label=""];
5->19 [style = bold, label=""];
14->26 [style = bold, label=""];
25->24 [style = bold, label=""];
29->6 [style = bold, label=""];
15->17 [style = bold, label=""];
0->14 [style = bold, label=""];
17->12 [style = bold, label=""];
13->28 [style = dashed, label="0"];
14->6 [style = solid, label="udt2"];
14->30 [style = solid, label="udt2"];
23->2 [style = solid, label="tableName"];
17->20 [style = dashed, label="0"];
10->13 [style = bold, label=""];
33->25 [style = bold, label=""];
14->7 [style = solid, label="udt2"];
4->8 [style = solid, label="type"];
0->1 [style = solid, label="udt1"];
20->12 [style = bold, label=""];
14->33 [style = solid, label="udt2"];
12->29 [style = dashed, label="0"];
2->27 [style = bold, label=""];
4->8 [style = bold, label=""];
12->11 [style = solid, label="indexName"];
14->16 [style = solid, label="udt2"];
13->9 [style = bold, label=""];
21->4 [style = bold, label=""];
6->30 [style = bold, label=""];
14->27 [style = solid, label="udt2"];
30->2 [style = bold, label=""];
27->33 [style = bold, label=""];
16->33 [style = dashed, label="0"];
0->5 [style = solid, label="udt1"];
14->5 [style = solid, label="udt2"];
0->33 [style = solid, label="udt1"];
8->2 [style = solid, label="tableName"];
32->31 [style = bold, label=""];
10->24 [style = dashed, label="0"];
4->23 [style = bold, label=""];
0->26 [style = solid, label="udt1"];
14->5 [style = bold, label=""];
18->16 [style = bold, label=""];
}
