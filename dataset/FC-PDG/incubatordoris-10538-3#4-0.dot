digraph {
8 [style = filled, label = "queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k2 = t2.k2\"@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k1 and t1.k2 = t2.k2 and t1.k3 = t2.k3\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext,queryStr)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertTrue(explainString.contains(\"colocate: true\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext,queryStr)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "queryStr = \"explain select * from test.dynamic_partition t1, test.dynamic_partition t2 where t1.k1 = t2.k1\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(explainString.contains(\"colocate: false\"))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext,queryStr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(explainString.contains(\"colocate: false\"))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext,queryStr)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String queryStr = \"explain select * from test.jointest t1, test.jointest t2 where t1.k1 = t2.k1\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "queryStr = \"explain select * from test.colocate1 t1 join (shuffle( test.colocate2 t2 on t1.k1 = t2.k1 and t1.k2 = t2.k2\"@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testColocateJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FeConstants.runningUnitTest = true@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSelfColocateJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k2 and t1.k2 = t2.k1 and t1.k3 = t2.k3\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testColocateJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertTrue(explainString.contains(\"colocate: false\"))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8->3 [style = solid, label="queryStr"];
14->7 [style = bold, label=""];
4->7 [style = bold, label=""];
11->12 [style = bold, label=""];
1->10 [style = bold, label=""];
10->9 [style = bold, label=""];
2->5 [style = bold, label=""];
5->1 [style = bold, label=""];
15->7 [style = bold, label=""];
16->10 [style = bold, label=""];
8->3 [style = bold, label=""];
12->13 [style = bold, label=""];
3->6 [style = bold, label=""];
0->2 [style = solid, label="queryStr"];
5->11 [style = bold, label=""];
7->0 [style = bold, label=""];
16->10 [style = solid, label="queryStr"];
0->17 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
13->1 [style = bold, label=""];
7->17 [style = bold, label=""];
11->12 [style = solid, label="queryStr"];
0->2 [style = bold, label=""];
9->8 [style = bold, label=""];
17->2 [style = solid, label="queryStr"];
1->10 [style = solid, label="queryStr"];
5->16 [style = bold, label=""];
17->2 [style = bold, label=""];
}
