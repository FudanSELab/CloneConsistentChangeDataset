digraph {
14 [style = filled, label = "List<Integer> list = ts.values()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "to.assertNoErrors()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "System.out.println(ts.values().size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i % 10 == 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ts.completions() == 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "flatMapRangeMixedAsyncLoop['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1000,list.size())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "to.awaitDone(2500,TimeUnit.MILLISECONDS)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "System.out.println(to.values().size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "to.assertTerminated()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "flatMapRangeMixedAsyncLoop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "ts.assertTerminated()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "to.completions() == 0@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i < 2000@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.out.println(\"flatMapRangeAsyncLoop > \" + i)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ts.awaitDone(2500,TimeUnit.MILLISECONDS)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int j = 0@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!set.contains(j)@@@33@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<Integer> list = to.values()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "list.size() < 1000@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Set<Integer> set = new HashSet<Integer>(list)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "System.out.println(j + \" missing\")@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ts.assertNoErrors()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Observable.range(0,1000).flatMap(new Function<Integer,Observable<Integer>>(){@Override public Observable<Integer> apply(Integer t){Observable<Integer> r = Observable.just(t)if (rnd.nextBoolean()) {r = r.hide()}return r}}).observeOn(Schedulers.computation()).subscribe(to)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "j++@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Set<Integer> set = new HashSet<>(list)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "flatMapRangeMixedAsyncLoop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "j < 1000@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Flowable.range(0,1000).flatMap(new Function<Integer,Flowable<Integer>>(){@Override public Flowable<Integer> apply(Integer t){Flowable<Integer> r = Flowable.just(t)if (rnd.nextBoolean()) {r = r.hide()}return r}}).observeOn(Schedulers.computation()).subscribe(ts)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->27 [style = dashed, label="0"];
10->19 [style = bold, label=""];
1->5 [style = solid, label="i"];
11->12 [style = dotted, label="true"];
2->15 [style = dotted, label="true"];
13->10 [style = dotted, label="true"];
3->4 [style = bold, label=""];
21->30 [style = dashed, label="0"];
4->25 [style = dashed, label="0"];
13->17 [style = bold, label=""];
11->2 [style = dotted, label="true"];
11->31 [style = dotted, label="true"];
20->16 [style = bold, label=""];
0->25 [style = bold, label=""];
11->0 [style = dotted, label="true"];
2->15 [style = bold, label=""];
9->14 [style = bold, label=""];
11->28 [style = dotted, label="true"];
25->32 [style = solid, label="to"];
0->3 [style = dotted, label="true"];
26->28 [style = bold, label=""];
2->24 [style = bold, label=""];
1->3 [style = solid, label="i"];
29->1 [style = bold, label=""];
33->27 [style = dotted, label="true"];
2->8 [style = dotted, label="true"];
4->12 [style = solid, label="ts"];
0->3 [style = bold, label=""];
11->33 [style = dotted, label="true"];
17->5 [style = bold, label=""];
5->3 [style = solid, label="i"];
14->24 [style = solid, label="list"];
2->24 [style = dotted, label="true"];
27->30 [style = bold, label=""];
30->26 [style = bold, label=""];
11->14 [style = dotted, label="true"];
13->19 [style = dotted, label="true"];
6->31 [style = dashed, label="0"];
11->5 [style = dotted, label="true"];
5->11 [style = solid, label="i"];
4->22 [style = dashed, label="0"];
10->7 [style = bold, label=""];
33->27 [style = bold, label=""];
11->26 [style = dotted, label="true"];
1->11 [style = bold, label=""];
21->9 [style = bold, label=""];
19->13 [style = bold, label=""];
18->1 [style = bold, label=""];
22->12 [style = solid, label="ts"];
31->33 [style = bold, label=""];
19->13 [style = solid, label="j"];
33->30 [style = bold, label=""];
5->11 [style = bold, label=""];
20->33 [style = dashed, label="0"];
24->8 [style = bold, label=""];
32->31 [style = bold, label=""];
2->17 [style = bold, label=""];
13->10 [style = bold, label=""];
11->30 [style = dotted, label="true"];
14->28 [style = dashed, label="0"];
12->32 [style = dashed, label="0"];
15->24 [style = dashed, label="0"];
11->17 [style = dotted, label="true"];
28->15 [style = solid, label="list"];
11->9 [style = dotted, label="true"];
11->4 [style = dotted, label="true"];
8->7 [style = solid, label="j"];
6->20 [style = bold, label=""];
11->20 [style = dotted, label="true"];
14->15 [style = solid, label="list"];
11->6 [style = dotted, label="true"];
9->26 [style = dashed, label="0"];
1->11 [style = solid, label="i"];
4->12 [style = bold, label=""];
14->2 [style = bold, label=""];
7->19 [style = bold, label=""];
15->8 [style = bold, label=""];
8->13 [style = bold, label=""];
11->32 [style = dotted, label="true"];
3->25 [style = bold, label=""];
25->32 [style = bold, label=""];
8->19 [style = solid, label="j"];
12->6 [style = bold, label=""];
3->22 [style = bold, label=""];
11->22 [style = dotted, label="true"];
20->21 [style = bold, label=""];
1->0 [style = solid, label="i"];
28->2 [style = bold, label=""];
19->7 [style = solid, label="j"];
11->0 [style = bold, label=""];
8->13 [style = solid, label="j"];
11->25 [style = dotted, label="true"];
0->4 [style = bold, label=""];
16->21 [style = bold, label=""];
22->12 [style = bold, label=""];
0->22 [style = bold, label=""];
5->0 [style = solid, label="i"];
23->1 [style = bold, label=""];
11->21 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
2->13 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
}
