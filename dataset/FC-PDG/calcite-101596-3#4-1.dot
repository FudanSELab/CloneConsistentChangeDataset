digraph {
6 [style = filled, label = "final ColumnLoader.ValueSet valueSet = new ColumnLoader.ValueSet()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,representation.getInt(pair.dataSet,3))@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(-32,representation.getObject(pair.dataSet,3))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1,representation.bitCount)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "valueSet.add(0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(0,representation.getInt(pair.dataSet,0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(4,representation.bitCount)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(6,representation.bitCount)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final ArrayTable.BitSlicedPrimitiveArray representation = (ArrayTable.BitSlicedPrimitiveArray)pair.representation@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(7,representation.bitCount)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "pair = valueSet.freeze(0,null)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,representation.getInt(pair.dataSet,0))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "valueSet.add(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testValueSetInt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "ArrayTable.PrimitiveArray representation2 = (ArrayTable.PrimitiveArray)pair.representation@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(1,representation.getInt(pair.dataSet,1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "representation = (ArrayTable.BitSlicedPrimitiveArray)pair.representation@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final ColumnLoader.ValueSet valueSet = new ColumnLoader.ValueSet()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "ArrayTable.Column pair@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(pair.representation instanceof ArrayTable.BitSlicedPrimitiveArray)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(-32,representation2.getObject(pair.dataSet,3))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(pair.representation instanceof ArrayTable.BitSlicedPrimitiveArray)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "valueSet.add(1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(10,representation.getObject(pair.dataSet,2))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final ArrayTable.Column pair = valueSet.freeze(0,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "testValueSetBoolean['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "valueSet.add(10)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(10,representation.getInt(pair.dataSet,2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "representation = (ArrayTable.BitSlicedPrimitiveArray)pair.representation@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(pair.representation instanceof ArrayTable.PrimitiveArray)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "valueSet.add(-32)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ArrayTable.BitSlicedPrimitiveArray representation@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "valueSet.add(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(representation.signed)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "pair = valueSet.freeze(0,null)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(pair.representation instanceof ArrayTable.BitSlicedPrimitiveArray)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(representation.signed)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(64,representation2.getObject(pair.dataSet,5))@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(-32,representation.getInt(pair.dataSet,3))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "pair = valueSet.freeze(0,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(-32,representation2.getInt(pair.dataSet,3))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(1,representation.getInt(pair.dataSet,2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "pair = valueSet.freeze(0,null)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "valueSet.add(63)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(pair.representation instanceof ArrayTable.BitSlicedPrimitiveArray)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(64,representation2.getInt(pair.dataSet,5))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(10,representation.getObject(pair.dataSet,2))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,representation2.getInt(pair.dataSet,0))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(representation.signed)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "valueSet.add(64)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(10,representation.getInt(pair.dataSet,2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testValueSetInt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
13->25 [style = bold, label=""];
50->29 [style = bold, label=""];
28->6 [style = bold, label=""];
13->23 [style = solid, label="representation"];
20->13 [style = bold, label=""];
37->28 [style = bold, label=""];
4->38 [style = bold, label=""];
42->50 [style = bold, label=""];
35->3 [style = bold, label=""];
17->24 [style = solid, label="representation"];
19->12 [style = bold, label=""];
39->5 [style = bold, label=""];
17->9 [style = bold, label=""];
29->31 [style = bold, label=""];
41->37 [style = bold, label=""];
43->42 [style = bold, label=""];
44->7 [style = bold, label=""];
11->29 [style = dashed, label="0"];
24->34 [style = bold, label=""];
38->23 [style = bold, label=""];
13->38 [style = solid, label="representation"];
11->32 [style = bold, label=""];
3->15 [style = bold, label=""];
18->36 [style = bold, label=""];
25->14 [style = bold, label=""];
34->13 [style = solid, label="representation"];
9->10 [style = bold, label=""];
30->37 [style = bold, label=""];
31->11 [style = bold, label=""];
6->29 [style = bold, label=""];
1->17 [style = bold, label=""];
21->2 [style = bold, label=""];
0->7 [style = bold, label=""];
15->22 [style = bold, label=""];
33->26 [style = bold, label=""];
49->47 [style = bold, label=""];
2->39 [style = bold, label=""];
19->44 [style = dashed, label="0"];
46->51 [style = bold, label=""];
17->51 [style = dashed, label="0"];
12->40 [style = bold, label=""];
23->33 [style = bold, label=""];
36->27 [style = bold, label=""];
22->20 [style = bold, label=""];
32->31 [style = dashed, label="0"];
17->49 [style = bold, label=""];
48->43 [style = bold, label=""];
34->20 [style = solid, label="representation"];
9->17 [style = dashed, label="0"];
32->1 [style = bold, label=""];
10->0 [style = bold, label=""];
51->17 [style = bold, label=""];
47->44 [style = bold, label=""];
37->17 [style = solid, label="representation"];
12->7 [style = dashed, label="0"];
45->46 [style = bold, label=""];
16->4 [style = bold, label=""];
37->1 [style = solid, label="representation"];
7->19 [style = bold, label=""];
31->45 [style = bold, label=""];
5->35 [style = bold, label=""];
17->34 [style = solid, label="representation"];
34->21 [style = bold, label=""];
40->8 [style = bold, label=""];
26->18 [style = bold, label=""];
8->24 [style = bold, label=""];
}
