digraph {
3 [style = filled, label = "env.getConfig().setExecutionRetryDelay(1337)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testFixedRestartingWhenCheckpointingAndExplicitExecutionRetriesNonZero['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "env.setNumberOfExecutionRetries(42)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JobGraph jobGraph = graph.getJobGraph()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(42,((RestartStrategies.FixedDelayRestartStrategyConfiguration)restartStrategy).getRestartAttempts())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RestartStrategies.RestartStrategyConfiguration restartStrategy = jobGraph.getSerializedExecutionConfig().deserializeValue(getClass().getClassLoader()).getRestartStrategy()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertNotNull(restartStrategy)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "env.setNumberOfExecutionRetries(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "env.enableCheckpointing(500)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "env.fromElements(1).print()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testFixedRestartingWhenCheckpointingAndExplicitExecutionRetriesNonZero['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Assert.assertTrue(restartStrategy instanceof RestartStrategies.FixedDelayRestartStrategyConfiguration)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(1337,((RestartStrategies.FixedDelayRestartStrategyConfiguration)restartStrategy).getDelayBetweenAttemptsInterval().toMilliseconds())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testNoRestartingWhenCheckpointingAndExplicitExecutionRetriesZero['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertTrue(restartStrategy instanceof RestartStrategies.NoRestartStrategyConfiguration)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(1337,((RestartStrategies.FixedDelayRestartStrategyConfiguration)restartStrategy).getDelayBetweenAttempts())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "StreamGraph graph = env.getStreamGraph()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->10 [style = dashed, label="0"];
8->10 [style = bold, label=""];
0->10 [style = solid, label="restartStrategy"];
12->5 [style = bold, label=""];
17->1 [style = bold, label=""];
3->1 [style = bold, label=""];
9->2 [style = bold, label=""];
5->15 [style = bold, label=""];
6->0 [style = bold, label=""];
11->9 [style = bold, label=""];
0->8 [style = solid, label="restartStrategy"];
7->3 [style = bold, label=""];
15->17 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
2->14 [style = dashed, label="0"];
0->8 [style = bold, label=""];
9->14 [style = bold, label=""];
7->15 [style = dashed, label="0"];
4->12 [style = bold, label=""];
5->7 [style = bold, label=""];
8->10 [style = solid, label="restartStrategy"];
16->12 [style = bold, label=""];
8->11 [style = solid, label="restartStrategy"];
10->11 [style = bold, label=""];
}
