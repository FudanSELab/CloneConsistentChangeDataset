digraph {
5 [style = filled, label = "return@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "onMatchRight['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "split(topJoin.getCondition(),aBitSet,intersecting,nonIntersecting)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final List<RexNode> intersecting = new ArrayList<>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final RelNode relA = bottomJoin.getLeft()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final List<RexNode> newBottomList = new ArrayList<>()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<RexNode> newTopList = new ArrayList<>()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "nonIntersecting.isEmpty()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final Join topJoin = call.rel(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final RelNode relC = call.rel(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Mappings.TargetMapping topMapping = Mappings.createShiftMapping(aCount + bCount + cCount,cCount + bCount,0,aCount,cCount,aCount,bCount,0,aCount + bCount,cCount)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "return@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final ImmutableBitSet aBitSet = ImmutableBitSet.range(aCount)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final RelOptCluster cluster = topJoin.getCluster()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final List<RexNode> nonIntersecting = new ArrayList<>()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final RelNode relB = bottomJoin.getRight()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "new RexPermuteInputsShuttle(topMapping,newBottomJoin,relA).visitList(bottomIntersecting,newTopList)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "topJoin.getJoinType() != JoinRelType.INNER || bottomJoin.getJoinType() != JoinRelType.INNER@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "RexNode newTopCondition = RexUtil.composeConjunction(rexBuilder,newTopList,false)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "@SuppressWarnings(\"SuspiciousNameCombination\") final Join newTopJoin = topJoin.copy(topJoin.getTraitSet(),newTopCondition,newBottomJoin,relA,topJoin.getJoinType(),topJoin.isSemiJoinDone())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final int aCount = relA.getRowType().getFieldCount()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "new RexPermuteInputsShuttle(topMapping,newBottomJoin,relA).visitList(intersecting,newTopList)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final Mappings.TargetMapping bottomMapping = Mappings.createShiftMapping(aCount + bCount + cCount,cCount,aCount,bCount,0,aCount + bCount,cCount)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Join newBottomJoin = bottomJoin.copy(bottomJoin.getTraitSet(),newBottomCondition,relC,relB,bottomJoin.getJoinType(),bottomJoin.isSemiJoinDone())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "onMatchRight['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final int cCount = relC.getRowType().getFieldCount()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "relBuilder.project(relBuilder.fields(topMapping))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "split(bottomJoin.getCondition(),aBitSet,bottomIntersecting,bottomNonIntersecting)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final int bCount = relB.getRowType().getFieldCount()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RelOptRuleCall call@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final RexBuilder rexBuilder = cluster.getRexBuilder()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "RexNode newBottomCondition = RexUtil.composeConjunction(rexBuilder,newBottomList,false)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "onMatchLeft['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "relBuilder.push(newTopJoin)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "call.transformTo(relBuilder.build())@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final List<RexNode> bottomIntersecting = new ArrayList<>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final Mappings.TargetMapping bottomBottomMapping = Mappings.createShiftMapping(aCount + bCount + cCount,0,aCount + bCount,cCount,cCount,aCount,bCount)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "RelOptRuleCall call@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "new RexPermuteInputsShuttle(bottomBottomMapping,relC,relB).visitList(bottomNonIntersecting,newBottomList)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final Join bottomJoin = call.rel(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "new RexPermuteInputsShuttle(bottomMapping,relC,relB).visitList(nonIntersecting,newBottomList)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final List<RexNode> bottomNonIntersecting = new ArrayList<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final RelBuilder relBuilder = call.builder()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39->35 [style = dotted, label="true"];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
24->12 [style = bold, label=""];
26->42 [style = bold, label=""];
18->11 [style = solid, label="newBottomJoin"];
2->0 [style = dotted, label="true"];
28->40 [style = bold, label=""];
16->26 [style = solid, label="newTopList"];
22->19 [style = bold, label=""];
10->14 [style = bold, label=""];
10->40 [style = solid, label="cCount"];
30->20 [style = bold, label=""];
3->36 [style = solid, label="nonIntersecting"];
42->11 [style = solid, label="newTopCondition"];
16->29 [style = bold, label=""];
11->21 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
20->18 [style = solid, label="newBottomCondition"];
9->40 [style = solid, label="aCount"];
13->22 [style = solid, label="bCount"];
23->19 [style = solid, label="newBottomList"];
25->4 [style = bold, label=""];
27->31 [style = bold, label=""];
4->19 [style = solid, label="bottomNonIntersecting"];
27->41 [style = dotted, label="true"];
16->29 [style = solid, label="newTopList"];
11->24 [style = solid, label="newTopJoin"];
21->24 [style = bold, label=""];
14->7 [style = solid, label="aBitSet"];
6->29 [style = solid, label="intersecting"];
23->36 [style = solid, label="newBottomList"];
37->6 [style = bold, label=""];
15->16 [style = bold, label=""];
13->15 [style = solid, label="bCount"];
37->5 [style = dotted, label="true"];
32->33 [style = bold, label=""];
4->28 [style = bold, label=""];
40->23 [style = bold, label=""];
31->34 [style = bold, label=""];
25->28 [style = solid, label="bottomIntersecting"];
38->32 [style = bold, label=""];
29->26 [style = bold, label=""];
35->25 [style = bold, label=""];
9->15 [style = solid, label="aCount"];
37->5 [style = bold, label=""];
20->18 [style = bold, label=""];
10->15 [style = solid, label="cCount"];
9->22 [style = solid, label="aCount"];
25->26 [style = solid, label="bottomIntersecting"];
23->20 [style = solid, label="newBottomList"];
30->42 [style = solid, label="rexBuilder"];
38->18 [style = solid, label="relC"];
4->28 [style = solid, label="bottomNonIntersecting"];
0->41 [style = dashed, label="0"];
5->6 [style = bold, label=""];
3->7 [style = bold, label=""];
7->39 [style = bold, label=""];
42->11 [style = bold, label=""];
39->35 [style = bold, label=""];
19->30 [style = bold, label=""];
15->12 [style = solid, label="topMapping"];
30->20 [style = solid, label="rexBuilder"];
8->9 [style = bold, label=""];
9->14 [style = solid, label="aCount"];
10->22 [style = solid, label="cCount"];
33->18 [style = solid, label="relB"];
23->36 [style = bold, label=""];
1->0 [style = dotted, label="true"];
39->25 [style = bold, label=""];
34->38 [style = bold, label=""];
13->40 [style = solid, label="bCount"];
16->42 [style = solid, label="newTopList"];
3->7 [style = solid, label="nonIntersecting"];
33->8 [style = bold, label=""];
32->11 [style = solid, label="relA"];
14->28 [style = solid, label="aBitSet"];
6->7 [style = solid, label="intersecting"];
9->13 [style = bold, label=""];
14->37 [style = bold, label=""];
36->22 [style = bold, label=""];
}
