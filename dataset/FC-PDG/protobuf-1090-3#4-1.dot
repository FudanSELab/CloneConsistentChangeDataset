digraph {
2 [style = filled, label = "int from = 100@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "referenceBytes = new byte((((@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "int to = sourceBytes.length - 100@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int to = sourceBytes.length - 5555@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int from = 1130@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "byte(( sourceBytes = ByteStringTest.getTestBytes(22341,22337766L)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "byte(( sourceBytes = ByteStringTest.getTestBytes(2341,11337766L)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expectedHashCode = 727575887@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sourceString = sourceString.concat(iter.next())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "referenceBytes = new byte((((@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "System.arraycopy(sourceBytes,from,referenceBytes,0,to - from)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "classUnderTest = \"RopeByteString\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "stringUnderTest = sourceString.substring(from,to)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ByteString sourceString = iter.next()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expectedHashCode = -1259260680@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "classUnderTest = \"BoundedByteString\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.arraycopy(sourceBytes,from,referenceBytes,0,to - from)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "iter.hasNext()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "stringUnderTest = ByteString.copyFrom(sourceBytes).substring(from,to)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Iterator<ByteString> iter = ByteStringTest.makeConcretePieces(sourceBytes).iterator()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->10 [style = bold, label=""];
1->4 [style = bold, label=""];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
5->0 [style = solid, label="referenceBytes"];
11->21 [style = bold, label=""];
12->15 [style = bold, label=""];
16->22 [style = solid, label="from"];
18->12 [style = bold, label=""];
20->11 [style = solid, label="to"];
14->19 [style = bold, label=""];
19->10 [style = bold, label=""];
10->17 [style = bold, label=""];
7->6 [style = solid, label="to"];
7->0 [style = solid, label="to"];
4->2 [style = bold, label=""];
8->13 [style = dashed, label="0"];
10->17 [style = dotted, label="true"];
1->12 [style = dashed, label="0"];
6->5 [style = bold, label=""];
20->22 [style = solid, label="to"];
10->16 [style = bold, label=""];
5->0 [style = bold, label=""];
2->0 [style = solid, label="from"];
7->19 [style = dashed, label="0"];
21->22 [style = bold, label=""];
21->22 [style = solid, label="referenceBytes"];
2->6 [style = solid, label="from"];
4->15 [style = dashed, label="0"];
15->22 [style = solid, label="sourceBytes"];
7->6 [style = bold, label=""];
0->8 [style = bold, label=""];
16->11 [style = solid, label="from"];
2->7 [style = bold, label=""];
9->1 [style = bold, label=""];
16->20 [style = bold, label=""];
4->0 [style = solid, label="sourceBytes"];
22->13 [style = bold, label=""];
20->11 [style = bold, label=""];
}
