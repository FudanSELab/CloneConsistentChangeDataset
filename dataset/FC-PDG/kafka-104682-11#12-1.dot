digraph {
24 [style = filled, label = "cancelBeforeStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectLastCall()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectLastCall()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.expectLastCall()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "workerTask.execute()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "workerTask.releaseResources()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "workerTask.stop()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expectLastCall()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "statusListener.onStartup(taskId)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expectLastCall()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "replay(workerTask)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){thread.start()return null}})@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator,Time.SYSTEM,statusBackingStore).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "verify(workerTask)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "thread.join()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "workerTask.close()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "workerTask.close()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "standardStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "statusListener.onStartup(taskId)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "standardStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "workerTask.awaitStop(1000L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "stopped.countDown()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "workerTask.run()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final CountDownLatch stopped = new CountDownLatch(1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "verify(workerTask)@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "workerTask.releaseResources()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "workerTask.cancel()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Thread thread = new Thread(){@Override public void run(){try {stopped.await()}catch (Exception e) }}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->8 [style = bold, label=""];
27->18 [style = bold, label=""];
8->28 [style = bold, label=""];
2->18 [style = solid, label="taskId"];
0->9 [style = bold, label=""];
16->18 [style = bold, label=""];
34->25 [style = bold, label=""];
24->2 [style = bold, label=""];
0->25 [style = solid, label="workerTask"];
11->1 [style = bold, label=""];
5->23 [style = dashed, label="0"];
1->15 [style = bold, label=""];
28->31 [style = bold, label=""];
0->28 [style = solid, label="workerTask"];
22->9 [style = bold, label=""];
30->26 [style = bold, label=""];
26->34 [style = bold, label=""];
35->33 [style = bold, label=""];
3->11 [style = bold, label=""];
2->3 [style = solid, label="taskId"];
20->27 [style = dashed, label="0"];
0->29 [style = bold, label=""];
10->17 [style = bold, label=""];
20->3 [style = bold, label=""];
5->14 [style = bold, label=""];
0->19 [style = solid, label="workerTask"];
0->22 [style = dashed, label="0"];
21->2 [style = bold, label=""];
23->14 [style = bold, label=""];
9->23 [style = bold, label=""];
0->12 [style = solid, label="workerTask"];
32->9 [style = bold, label=""];
13->19 [style = bold, label=""];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
22->19 [style = solid, label="workerTask"];
31->35 [style = bold, label=""];
18->6 [style = bold, label=""];
7->2 [style = bold, label=""];
29->32 [style = bold, label=""];
15->4 [style = bold, label=""];
33->30 [style = bold, label=""];
9->5 [style = bold, label=""];
14->27 [style = bold, label=""];
2->22 [style = bold, label=""];
22->12 [style = solid, label="workerTask"];
13->30 [style = dashed, label="0"];
4->16 [style = bold, label=""];
8->13 [style = bold, label=""];
14->20 [style = bold, label=""];
6->12 [style = bold, label=""];
}
