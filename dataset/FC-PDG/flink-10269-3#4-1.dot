digraph {
20 [style = filled, label = "env.enableCheckpointing(500)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "env.setParallelism(parallelism)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final String topic = \"manyToOneTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "FailingIdentityMapper.failedBefore = false@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final int failAfterElements = numElementsPerPartition / 3@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Properties props = new Properties()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final int numElementsPerPartition = 1000@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "props.putAll(secureProps)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "deleteTestTopic(topic)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "env.addSource(kafkaSource).map(new PartitionValidatingMapper(numPartitions,1)).map(new FailingIdentityMapper<Integer>(failAfterElements)).addSink(new ValidatingExactlyOnceSink(totalElements)).setParallelism(1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "FlinkKafkaConsumerBase<Integer> kafkaSource = kafkaServer.getConsumer(topic,schema,props)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int parallelism = 2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "props.putAll(standardProps)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DeserializationSchema<Integer> schema = new TypeInformationSerializationSchema<>(BasicTypeInfo.INT_TYPE_INFO,new ExecutionConfig())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "runOneSourceMultiplePartitionsExactlyOnceTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "getStream(env,topic,schema,props).map(new PartitionValidatingMapper(numPartitions,3)).map(new FailingIdentityMapper<Integer>(failAfterElements)).addSink(new ValidatingExactlyOnceSink(totalElements)).setParallelism(1)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "FailingIdentityMapper.failedBefore = false@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "DataGenerators.generateRandomizedIntegerSequence(StreamExecutionEnvironment.getExecutionEnvironment(),kafkaServer,topic,numPartitions,numElementsPerPartition,true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int totalElements = numPartitions * numElementsPerPartition@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "runMultipleSourcesOnePartitionExactlyOnceTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "tryExecute(env,\"multi-source-one-partitions exactly once test\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "deleteTestTopic(topic)@@@24@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1,0))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "createTestTopic(topic,numPartitions,1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "env.addSource(kafkaSource).map(new PartitionValidatingMapper(numPartitions,3)).map(new FailingIdentityMapper<Integer>(failAfterElements)).addSink(new ValidatingExactlyOnceSink(totalElements)).setParallelism(1)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final String topic = \"oneToManyTopic\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "env.setBufferTimeout(0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final int parallelism = 8@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "runOneSourceMultiplePartitionsExactlyOnceTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final int numPartitions = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->0 [style = solid, label="numElementsPerPartition"];
29->15 [style = bold, label=""];
17->5 [style = bold, label=""];
4->1 [style = solid, label="topic"];
17->26 [style = bold, label=""];
16->18 [style = bold, label=""];
4->6 [style = solid, label="topic"];
1->8 [style = bold, label=""];
19->8 [style = solid, label="numElementsPerPartition"];
29->1 [style = solid, label="topic"];
7->13 [style = solid, label="env"];
18->22 [style = dashed, label="0"];
5->26 [style = dashed, label="0"];
21->28 [style = dashed, label="0"];
0->17 [style = bold, label=""];
26->1 [style = bold, label=""];
28->11 [style = bold, label=""];
4->15 [style = bold, label=""];
5->3 [style = solid, label="parallelism"];
23->4 [style = bold, label=""];
4->8 [style = solid, label="topic"];
19->17 [style = solid, label="numElementsPerPartition"];
20->3 [style = bold, label=""];
12->16 [style = bold, label=""];
7->20 [style = bold, label=""];
29->8 [style = solid, label="topic"];
15->19 [style = bold, label=""];
9->7 [style = bold, label=""];
16->22 [style = bold, label=""];
30->6 [style = bold, label=""];
26->3 [style = solid, label="parallelism"];
25->2 [style = bold, label=""];
18->28 [style = bold, label=""];
9->18 [style = solid, label="schema"];
2->12 [style = bold, label=""];
19->0 [style = bold, label=""];
4->13 [style = solid, label="topic"];
15->1 [style = solid, label="numPartitions"];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
15->8 [style = solid, label="numPartitions"];
4->18 [style = solid, label="topic"];
7->11 [style = solid, label="env"];
21->11 [style = bold, label=""];
10->25 [style = bold, label=""];
24->11 [style = bold, label=""];
11->13 [style = bold, label=""];
8->9 [style = bold, label=""];
15->0 [style = solid, label="numPartitions"];
29->6 [style = solid, label="topic"];
10->2 [style = bold, label=""];
18->21 [style = bold, label=""];
13->6 [style = bold, label=""];
22->24 [style = bold, label=""];
27->29 [style = bold, label=""];
29->18 [style = solid, label="topic"];
7->30 [style = solid, label="env"];
4->29 [style = dashed, label="0"];
13->30 [style = dashed, label="0"];
11->30 [style = bold, label=""];
2->18 [style = solid, label="props"];
14->4 [style = bold, label=""];
}
