digraph {
14 [style = filled, label = "buffer.rewind()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "selector.send(request.toSend(node1,header))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "buffer.clear()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSaslHandshakeRequestWithUnsupportedVersion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1,ChannelState.READY)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node2)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String node2 = \"invalid2\"@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "selector.close()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "buffer.put(new byte(((()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "server = createEchoServer(securityProtocol)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "selector.close()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "configureMechanisms(\"PLAIN\",Arrays.asList(\"PLAIN\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "selector.close()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id,Short.MAX_VALUE,\"someclient\",2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good2\")@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "buffer.rewind()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sendHandshakeRequestReceiveResponse(node1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "selector.send(new NetworkSend(node2,buffer))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testPacketSizeTooBig['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSaslHandshakeRequestWithUnsupportedVersion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String node1 = \"invalid1\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buffer.put(new byte(((()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node2)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "selector.send(new NetworkSend(node1,buffer))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
13->10 [style = bold, label=""];
11->8 [style = solid, label="node1"];
31->22 [style = solid, label="node2"];
23->16 [style = bold, label=""];
18->24 [style = bold, label=""];
9->11 [style = bold, label=""];
11->12 [style = solid, label="node1"];
5->9 [style = bold, label=""];
3->1 [style = bold, label=""];
10->16 [style = solid, label="securityProtocol"];
21->27 [style = bold, label=""];
7->18 [style = dashed, label="0"];
10->9 [style = solid, label="securityProtocol"];
15->25 [style = bold, label=""];
11->0 [style = solid, label="node1"];
31->19 [style = solid, label="node2"];
11->15 [style = solid, label="node1"];
20->28 [style = bold, label=""];
25->32 [style = bold, label=""];
10->32 [style = solid, label="securityProtocol"];
14->17 [style = bold, label=""];
8->6 [style = bold, label=""];
33->10 [style = bold, label=""];
11->17 [style = solid, label="node1"];
31->27 [style = solid, label="node2"];
27->22 [style = bold, label=""];
22->23 [style = bold, label=""];
24->27 [style = solid, label="buffer"];
30->29 [style = bold, label=""];
29->21 [style = bold, label=""];
28->14 [style = bold, label=""];
0->7 [style = bold, label=""];
26->30 [style = bold, label=""];
24->20 [style = bold, label=""];
6->12 [style = dashed, label="0"];
11->0 [style = bold, label=""];
10->5 [style = bold, label=""];
7->2 [style = bold, label=""];
19->26 [style = bold, label=""];
24->17 [style = solid, label="buffer"];
17->15 [style = bold, label=""];
11->18 [style = solid, label="node1"];
0->18 [style = bold, label=""];
11->6 [style = solid, label="node1"];
2->8 [style = solid, label="header"];
12->3 [style = bold, label=""];
32->31 [style = bold, label=""];
8->12 [style = bold, label=""];
31->19 [style = bold, label=""];
10->1 [style = solid, label="securityProtocol"];
2->8 [style = bold, label=""];
}
