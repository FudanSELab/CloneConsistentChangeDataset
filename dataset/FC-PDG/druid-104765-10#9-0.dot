digraph {
8 [style = filled, label = "newTaskSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Map<String,Object> subtaskContext = new HashMap<>(getContext())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "InputSplit split@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return new SinglePhaseSubTaskSpec(getBaseSubtaskSpecName() + \"_\" + getAndIncrementNextSpecId(),getGroupId(),getTaskId(),new ParallelIndexIngestionSpec(ingestionSchema.getDataSchema(),new ParallelIndexIOConfig(firehoseFactory,inputSource,ingestionSchema.getIOConfig().getInputFormat(),ingestionSchema.getIOConfig().isAppendToExisting(),ingestionSchema.getIOConfig().isDropExisting()),ingestionSchema.getTuningConfig()),subtaskContext,split)@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final FirehoseFactory firehoseFactory@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "firehoseFactory = ((FirehoseFactoryToInputSourceAdaptor)baseInputSource).getFirehoseFactory().withSplit(split)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final InputSource inputSource@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "inputSource = baseInputSource.withSplit(split)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "inputSource = null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return new SinglePhaseSubTaskSpec(getTaskId() + \"_\" + getAndIncrementNextSpecId(),getGroupId(),getTaskId(),new ParallelIndexIngestionSpec(ingestionSchema.getDataSchema(),new ParallelIndexIOConfig(firehoseFactory,inputSource,ingestionSchema.getIOConfig().getInputFormat(),ingestionSchema.getIOConfig().isAppendToExisting(),ingestionSchema.getIOConfig().isDropExisting()),ingestionSchema.getTuningConfig()),getContext(),split)@@@13@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ParallelIndexIngestionSpec subTaskIngestionSpec = new ParallelIndexIngestionSpec(ingestionSchema.getDataSchema(),new ParallelIndexIOConfig(firehoseFactory,inputSource,ingestionSchema.getIOConfig().getInputFormat(),ingestionSchema.getIOConfig().isAppendToExisting(),ingestionSchema.getIOConfig().isDropExisting()),ingestionSchema.getTuningConfig())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return createSubTaskSpec(getTaskId() + \"_\" + getAndIncrementNextSpecId(),getGroupId(),getTaskId(),getContext(),split,subTaskIngestionSpec)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "newTaskSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "baseInputSource instanceof FirehoseFactoryToInputSourceAdaptor@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "firehoseFactory = null@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "newTaskSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "InputSplit split@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0->13 [style = solid, label="inputSource"];
9->0 [style = dotted, label="false"];
15->6 [style = solid, label="split"];
5->13 [style = dashed, label="0"];
13->14 [style = solid, label="subTaskIngestionSpec"];
6->13 [style = solid, label="firehoseFactory"];
4->10 [style = solid, label="firehoseFactory"];
9->4 [style = bold, label=""];
2->7 [style = bold, label=""];
9->4 [style = dotted, label="false"];
12->10 [style = solid, label="subtaskContext"];
7->9 [style = bold, label=""];
15->14 [style = solid, label="split"];
3->5 [style = solid, label="inputSource"];
0->13 [style = bold, label=""];
3->13 [style = bold, label=""];
16->15 [style = dotted, label="true"];
1->5 [style = solid, label="split"];
3->5 [style = bold, label=""];
11->2 [style = bold, label=""];
9->6 [style = dotted, label="true"];
9->6 [style = bold, label=""];
16->2 [style = bold, label=""];
1->10 [style = solid, label="split"];
12->10 [style = bold, label=""];
0->5 [style = solid, label="inputSource"];
8->2 [style = bold, label=""];
0->12 [style = bold, label=""];
3->12 [style = bold, label=""];
11->1 [style = dotted, label="true"];
4->13 [style = solid, label="firehoseFactory"];
6->3 [style = bold, label=""];
4->5 [style = solid, label="firehoseFactory"];
1->15 [style = dashed, label="0"];
15->0 [style = solid, label="split"];
6->5 [style = solid, label="firehoseFactory"];
6->10 [style = solid, label="firehoseFactory"];
9->3 [style = dotted, label="true"];
0->10 [style = solid, label="inputSource"];
0->5 [style = bold, label=""];
1->0 [style = solid, label="split"];
13->14 [style = bold, label=""];
8->1 [style = dotted, label="true"];
3->10 [style = solid, label="inputSource"];
4->0 [style = bold, label=""];
3->13 [style = solid, label="inputSource"];
1->6 [style = solid, label="split"];
}
