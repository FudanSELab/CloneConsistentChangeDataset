digraph {
7 [style = filled, label = "testHarness.open()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple3<>(\"key1-22\",10L,10000L),9999L))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testHarness.close()@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),6000))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple3ResultSortComparator())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",2),6500))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testHarness.close()@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",3),2500))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",3),7000))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",10),4500))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),0))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ListStateDescriptor<Tuple2<String,Integer>> stateDesc = new ListStateDescriptor<>(\"window-contents\",inputType.createSerializer(new ExecutionConfig()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "OperatorSnapshotUtil.writeStateHandle(snapshot,\"src/test/resources/win-op-migration-test-session-with-stateful-trigger-flink\" + flinkGenerateSavepointVersion + \"-snapshot\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple3<String,Long,Long>> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(operator,new TupleKeySelector<>(),BasicTypeInfo.STRING_TYPE_INFO)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "OperatorStateHandles snapshot = testHarness.snapshot(0L,0L)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "writeSessionWindowsWithCountTriggerSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "OperatorSubtaskState snapshot = testHarness.snapshot(0L,0L)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Iterable<Tuple2<String,Integer>>,Tuple3<String,Long,Long>,TimeWindow> operator = new WindowOperator<>(EventTimeSessionWindows.withGap(Time.seconds(sessionSize)),new TimeWindow.Serializer(),new TupleKeySelector<String>(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalIterableWindowFunction<>(new SessionWindowFunction()),PurgingTrigger.of(CountTrigger.of(4)),0,null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int sessionSize = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MigrationTestUtil.restoreFromSnapshot(testHarness,OperatorSnapshotUtil.getResourceFilename(\"win-op-migration-test-session-with-stateful-trigger-mint-flink\" + testMigrateVersion + \"-snapshot\"),testMigrateVersion)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",4),3500))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",3),2500))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",2),1000))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",2),1000))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRestoreSessionWindowsWithCountTriggerInMintCondition['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new Tuple3ResultSortComparator())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),10))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness.setup()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple3<>(\"key2-10\",0L,6500L),6499))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "writeSessionWindowsWithCountTriggerSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
6->17 [style = bold, label=""];
3->1 [style = solid, label="sessionSize"];
18->3 [style = bold, label=""];
26->10 [style = bold, label=""];
9->2 [style = bold, label=""];
17->9 [style = bold, label=""];
12->17 [style = dashed, label="0"];
27->31 [style = bold, label=""];
3->15 [style = bold, label=""];
12->9 [style = solid, label="snapshot"];
7->4 [style = bold, label=""];
25->29 [style = bold, label=""];
1->26 [style = bold, label=""];
12->9 [style = bold, label=""];
22->23 [style = bold, label=""];
21->28 [style = bold, label=""];
1->10 [style = solid, label="operator"];
8->1 [style = solid, label="stateDesc"];
26->21 [style = solid, label="expectedOutput"];
8->1 [style = bold, label=""];
23->24 [style = bold, label=""];
30->21 [style = bold, label=""];
12->25 [style = dashed, label="0"];
26->27 [style = solid, label="expectedOutput"];
5->6 [style = bold, label=""];
10->13 [style = bold, label=""];
13->7 [style = bold, label=""];
17->9 [style = solid, label="snapshot"];
31->30 [style = bold, label=""];
10->20 [style = solid, label="testHarness"];
16->14 [style = bold, label=""];
29->22 [style = bold, label=""];
20->7 [style = bold, label=""];
4->11 [style = bold, label=""];
1->10 [style = bold, label=""];
19->3 [style = bold, label=""];
24->27 [style = bold, label=""];
15->8 [style = bold, label=""];
6->25 [style = bold, label=""];
14->5 [style = bold, label=""];
13->20 [style = bold, label=""];
6->12 [style = bold, label=""];
}
