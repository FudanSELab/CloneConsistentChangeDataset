digraph {
4 [style = filled, label = "WebResponse rsp = wc.goTo(\"cli-proxy/\").getWebResponse()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "JenkinsRule.WebClient wc = r.createWebClient().withRedirectEnabled(false).withThrowExceptionOnFailingStatusCode(false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int ret = new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(\"java\",\"-jar\",jar.getAbsolutePath(),\"-s\",url,\"-http\",\"-user\",\"asdf\",\"who-am-i\").stdout(baos).stderr(baos).join()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(rsp.getContentAsString(),HttpURLConnection.HTTP_MOVED_TEMP,rsp.getStatusCode())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "redirectToEndpointShouldBeFollowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(baos.toString(),containsString(\"There's no Jenkins running at\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "reportNotJenkins['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int ret = new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(\"java\",\"-jar\",jar.getAbsolutePath(),\"-s\",url,transport,\"-user\",\"asdf\",\"who-am-i\").stdout(baos).stderr(baos).join()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNotEquals(0,ret)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNull(rsp.getContentAsString(),rsp.getResponseHeaderValue(\"X-Jenkins\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "grabCliJar()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String url = r.getURL().toString() + \"cli-proxy/\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "redirectToEndpointShouldBeFollowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String url = r.getURL().toExternalForm() + \"not-jenkins/\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(0,ret)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(rsp.getContentAsString(),rsp.getResponseHeaderValue(\"X-Jenkins-CLI-Port\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(baos.toString(),containsString(\"Authenticated as: anonymous\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->17 [style = dashed, label="0"];
12->5 [style = bold, label=""];
4->6 [style = bold, label=""];
18->17 [style = bold, label=""];
5->15 [style = bold, label=""];
10->3 [style = bold, label=""];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
5->2 [style = bold, label=""];
14->17 [style = solid, label="ret"];
11->3 [style = solid, label="ret"];
3->7 [style = bold, label=""];
11->10 [style = bold, label=""];
11->14 [style = dashed, label="0"];
13->5 [style = bold, label=""];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
8->11 [style = bold, label=""];
10->18 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
