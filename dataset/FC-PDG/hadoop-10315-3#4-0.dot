digraph {
8 [style = filled, label = "syncBarrier.await()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Dispatcher dispatcher@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "commitHandler.start()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "conf.set(MRJobConfig.MR_AM_STAGING_DIR,stagingDir)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testCheckJobCompleteSuccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_ATTEMPT_COMPLETED))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_ATTEMPT_COMPLETED))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_COMPLETED))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "dispatcher.init(conf)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Configuration conf@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertJobState(job,JobStateInternal.INITED)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "StubbedJob job = createStubbedJob(conf,dispatcher,numSplits,appContext)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "JobImpl job = createRunningStubbedJob(conf,dispatcher,2,null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCheckJobCompleteSuccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_MAP_TASK_RESCHEDULED))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CyclicBarrier syncBarrier = new CyclicBarrier(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "dispatcher.await()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "return job@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "OutputCommitter committer = new TestingOutputCommitter(syncBarrier,true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertJobState(job,JobStateInternal.RUNNING)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_INIT))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "completeJobTasks(job)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dispatcher.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "job.handle(new JobStartEvent(job.getID()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "CommitterEventHandler commitHandler = createCommitterEventHandler(dispatcher,committer)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "commitHandler.stop()@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "createRunningStubbedJob['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "dispatcher.start()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "AppContext appContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_COMPLETED))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AsyncDispatcher dispatcher = new AsyncDispatcher()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Configuration conf = new Configuration()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int numSplits@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "dispatcher.await()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_MAP_TASK_RESCHEDULED))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "commitHandler.init(conf)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DrainDispatcher dispatcher = new DrainDispatcher()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42->39 [style = dotted, label="true"];
21->10 [style = bold, label=""];
18->3 [style = bold, label=""];
2->5 [style = bold, label=""];
20->10 [style = solid, label="job"];
20->26 [style = solid, label="job"];
10->14 [style = bold, label=""];
3->20 [style = solid, label="conf"];
20->16 [style = solid, label="job"];
39->44 [style = solid, label="appContext"];
19->15 [style = solid, label="syncBarrier"];
2->24 [style = solid, label="dispatcher"];
20->33 [style = solid, label="job"];
29->3 [style = bold, label=""];
30->26 [style = bold, label=""];
12->11 [style = bold, label=""];
27->24 [style = solid, label="dispatcher"];
42->36 [style = dotted, label="true"];
12->32 [style = bold, label=""];
44->40 [style = bold, label=""];
2->27 [style = dashed, label="0"];
20->4 [style = solid, label="job"];
16->25 [style = bold, label=""];
20->25 [style = solid, label="job"];
32->30 [style = bold, label=""];
3->9 [style = solid, label="conf"];
44->37 [style = solid, label="job"];
26->11 [style = bold, label=""];
1->23 [style = bold, label=""];
9->6 [style = bold, label=""];
6->20 [style = bold, label=""];
20->13 [style = solid, label="job"];
4->31 [style = bold, label=""];
3->5 [style = solid, label="conf"];
15->24 [style = solid, label="committer"];
27->20 [style = solid, label="dispatcher"];
42->44 [style = bold, label=""];
20->16 [style = bold, label=""];
28->33 [style = bold, label=""];
17->2 [style = bold, label=""];
35->37 [style = bold, label=""];
0->1 [style = bold, label=""];
44->35 [style = solid, label="job"];
15->24 [style = bold, label=""];
44->43 [style = solid, label="job"];
11->22 [style = bold, label=""];
2->20 [style = solid, label="dispatcher"];
42->38 [style = dotted, label="true"];
3->17 [style = bold, label=""];
5->7 [style = bold, label=""];
4->8 [style = bold, label=""];
23->12 [style = bold, label=""];
43->41 [style = bold, label=""];
20->12 [style = solid, label="job"];
31->28 [style = bold, label=""];
27->5 [style = bold, label=""];
17->27 [style = bold, label=""];
19->15 [style = bold, label=""];
40->43 [style = bold, label=""];
36->44 [style = solid, label="numSplits"];
7->19 [style = bold, label=""];
33->8 [style = bold, label=""];
38->44 [style = solid, label="conf"];
25->21 [style = bold, label=""];
34->44 [style = solid, label="dispatcher"];
20->1 [style = solid, label="job"];
24->9 [style = bold, label=""];
8->13 [style = bold, label=""];
42->34 [style = dotted, label="true"];
13->0 [style = bold, label=""];
14->4 [style = bold, label=""];
41->35 [style = bold, label=""];
}
