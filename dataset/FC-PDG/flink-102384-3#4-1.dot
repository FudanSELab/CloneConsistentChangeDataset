digraph {
10 [style = filled, label = "assertEquals(1,this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "this.flinkKubeClient.createTaskManagerPod(kubernetesPod).get()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "this.flinkKubeClient.stopAndCleanupCluster(CLUSTER_ID)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCreateFlinkTaskManagerPod['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "this.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(2,this.kubeClient.services().inNamespace(NAMESPACE).list().getItems().size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Pod resultTaskManagerPod = this.kubeClient.pods().inNamespace(NAMESPACE).withName(TASKMANAGER_POD_NAME).get()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(1,this.kubeClient.pods().inNamespace(NAMESPACE).list().getItems().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testStopAndCleanupCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder().editOrNewMetadata().withName(\"mock-task-manager-pod\").endMetadata().editOrNewSpec().endSpec().build())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testCreateFlinkTaskManagerPod['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().isEmpty())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().get(0).getMetadata().getUid(),resultTaskManagerPod.getMetadata().getOwnerReferences().get(0).getUid())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(1,this.kubeClient.configMaps().inNamespace(NAMESPACE).list().getItems().size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Pod resultTaskManagerPod = this.kubeClient.pods().inNamespace(NAMESPACE).withName(\"mock-task-manager-pod\").get()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "this.flinkKubeClient.createTaskManagerPod(kubernetesPod)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
10->14 [style = bold, label=""];
12->11 [style = bold, label=""];
4->3 [style = solid, label="kubernetesPod"];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
1->0 [style = bold, label=""];
11->9 [style = bold, label=""];
6->2 [style = bold, label=""];
3->10 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
5->6 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
5->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
3->8 [style = dashed, label="0"];
4->8 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
13->0 [style = bold, label=""];
}
