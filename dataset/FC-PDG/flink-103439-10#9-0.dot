digraph {
13 [style = filled, label = "SinkTransformation<InputT,CommT,WriterStateT,GlobalCommT> transformation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "translateForStreaming['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Context context@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "translateForBatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "StreamGraphUtils.validateTransformationUid(context.getStreamGraph(),transformation)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SinkTransformation<InputT,CommT,WriterStateT,GlobalCommT> transformation@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "throw new FlinkRuntimeException(\"Could not add the Committer or GlobalCommitter to the stream graph.\",e)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "IOException e@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return Collections.emptyList()@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "internalTranslate(transformation,parallelism,false,context)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "internalTranslate(transformation,parallelism,PREVIOUS_SINK_STATE_NAME,new BatchCommitterOperatorFactory<>(transformation.getSink()),1,1,new BatchGlobalCommitterOperatorFactory<>(transformation.getSink()),context)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SinkTransformation<InputT,CommT,WriterStateT,GlobalCommT> transformation@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "translateForStreaming['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "internalTranslate(transformation,parallelism,PREVIOUS_SINK_STATE_NAME,new StreamingCommitterOperatorFactory<>(transformation.getSink()),parallelism,transformation.getMaxParallelism(),new StreamingGlobalCommitterOperatorFactory<>(transformation.getSink()),context)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final int parallelism = getParallelism(transformation,context)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->2 [style = solid, label="transformation"];
13->4 [style = solid, label="transformation"];
2->4 [style = bold, label=""];
4->7 [style = bold, label=""];
10->2 [style = bold, label=""];
11->9 [style = solid, label="transformation"];
3->2 [style = bold, label=""];
5->1 [style = bold, label=""];
8->4 [style = solid, label="context"];
12->2 [style = bold, label=""];
7->6 [style = bold, label=""];
13->14 [style = solid, label="transformation"];
3->8 [style = dotted, label="true"];
12->13 [style = dotted, label="true"];
12->15 [style = dotted, label="true"];
4->9 [style = solid, label="parallelism"];
1->6 [style = bold, label=""];
0->4 [style = solid, label="transformation"];
15->4 [style = solid, label="context"];
8->9 [style = solid, label="context"];
9->6 [style = bold, label=""];
3->0 [style = dotted, label="true"];
8->7 [style = solid, label="context"];
11->2 [style = solid, label="transformation"];
10->8 [style = dotted, label="true"];
4->9 [style = bold, label=""];
8->15 [style = dashed, label="0"];
14->6 [style = bold, label=""];
4->14 [style = bold, label=""];
0->7 [style = solid, label="transformation"];
0->2 [style = solid, label="transformation"];
4->7 [style = solid, label="parallelism"];
5->1 [style = dotted, label="true"];
7->14 [style = dashed, label="0"];
15->14 [style = solid, label="context"];
4->14 [style = solid, label="parallelism"];
10->11 [style = dotted, label="true"];
11->4 [style = solid, label="transformation"];
}
