digraph {
43 [style = filled, label = "new FilePath(new File(d,\"original\")).touch(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testIsSymlink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StringBuilder buf = new StringBuilder(768)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Util.createSymlink(d,buf.toString(),\"x\",l)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "File external = File.createTempFile(\"something\",\"\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "Util.createSymlink(d,\"original\",\"link\",l)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "StreamTaskListener l = new StreamTaskListener(baos)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"anotherDir/link\")))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Util.createSymlink(d,external.getAbsolutePath(),\"outside\",l)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(Util.isSymlink(new File(d,\"link\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "File dir = new File(d,\"dir\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "new FilePath(new File(d,\"a\")).touch(0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File d = tmp.getRoot()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testSymlink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testSymlink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{assertTrue(external.delete())}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assume.assumeFalse(Functions.isWindows())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String log = baos.toString()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "{Util.deleteRecursive(d)}@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "i++@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assume.assumeTrue(!Functions.isWindows())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"original\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Util.createSymlink(d,\"a\",\"x\",l)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i < 768@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Util.createSymlink(d,\"a\",\"anotherDir/link\",l)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{Util.deleteRecursive(d)}@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(buf.toString(),Util.resolveSymlink(new File(d,\"x\")))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(\"Couldn't create \" + dir,dir.mkdir())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(external.getAbsolutePath(),Util.resolveSymlink(new File(d,\"outside\")))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "log.length() > 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNull(Util.resolveSymlink(new File(d,\"a\")))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Util.createSymlink(d,\"dir\",\"anotherDir/symlinkDir\",l)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"dir\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"x\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
5->27 [style = solid, label="d"];
4->15 [style = bold, label=""];
5->39 [style = solid, label="d"];
24->11 [style = solid, label="l"];
5->37 [style = solid, label="d"];
26->1 [style = solid, label="i"];
24->17 [style = solid, label="l"];
22->30 [style = bold, label=""];
12->28 [style = solid, label="i"];
6->35 [style = dashed, label="0"];
20->27 [style = bold, label=""];
9->26 [style = bold, label=""];
22->8 [style = bold, label=""];
25->21 [style = solid, label="anotherDir"];
19->18 [style = solid, label="log"];
5->32 [style = solid, label="d"];
43->35 [style = bold, label=""];
35->37 [style = bold, label=""];
6->11 [style = bold, label=""];
0->24 [style = bold, label=""];
24->37 [style = solid, label="l"];
16->14 [style = bold, label=""];
24->39 [style = solid, label="l"];
2->41 [style = dashed, label="0"];
30->8 [style = bold, label=""];
36->34 [style = solid, label="dir"];
25->21 [style = bold, label=""];
5->7 [style = solid, label="d"];
5->35 [style = solid, label="d"];
5->2 [style = solid, label="d"];
34->42 [style = bold, label=""];
2->9 [style = bold, label=""];
12->1 [style = bold, label=""];
5->41 [style = solid, label="d"];
24->5 [style = bold, label=""];
5->11 [style = solid, label="d"];
5->23 [style = solid, label="d"];
26->16 [style = bold, label=""];
22->18 [style = bold, label=""];
5->25 [style = solid, label="d"];
13->31 [style = dashed, label="0"];
16->1 [style = dotted, label="true"];
1->16 [style = bold, label=""];
1->12 [style = solid, label="i"];
5->6 [style = solid, label="d"];
42->32 [style = bold, label=""];
26->16 [style = solid, label="i"];
19->22 [style = bold, label=""];
13->0 [style = bold, label=""];
5->8 [style = solid, label="d"];
17->39 [style = dashed, label="0"];
22->18 [style = dotted, label="true"];
5->14 [style = solid, label="d"];
31->0 [style = bold, label=""];
19->30 [style = solid, label="log"];
37->41 [style = bold, label=""];
5->33 [style = solid, label="d"];
32->40 [style = solid, label="anotherDir"];
5->36 [style = solid, label="d"];
3->6 [style = bold, label=""];
14->19 [style = bold, label=""];
7->20 [style = bold, label=""];
28->12 [style = bold, label=""];
39->33 [style = bold, label=""];
5->15 [style = solid, label="d"];
5->42 [style = solid, label="d"];
41->36 [style = bold, label=""];
40->39 [style = bold, label=""];
10->13 [style = bold, label=""];
32->40 [style = bold, label=""];
26->12 [style = solid, label="i"];
18->8 [style = bold, label=""];
36->34 [style = bold, label=""];
16->12 [style = dotted, label="true"];
12->16 [style = solid, label="i"];
29->31 [style = bold, label=""];
23->4 [style = bold, label=""];
0->24 [style = solid, label="baos"];
24->27 [style = solid, label="l"];
26->28 [style = solid, label="i"];
12->16 [style = bold, label=""];
24->14 [style = solid, label="l"];
11->2 [style = bold, label=""];
5->43 [style = bold, label=""];
17->7 [style = bold, label=""];
5->17 [style = solid, label="d"];
1->16 [style = solid, label="i"];
16->28 [style = bold, label=""];
3->43 [style = dashed, label="0"];
11->37 [style = dashed, label="0"];
27->23 [style = bold, label=""];
16->28 [style = dotted, label="true"];
22->30 [style = dotted, label="true"];
38->13 [style = bold, label=""];
16->12 [style = bold, label=""];
8->25 [style = bold, label=""];
21->17 [style = bold, label=""];
}
