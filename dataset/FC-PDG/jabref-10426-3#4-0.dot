digraph {
4 [style = filled, label = "assertEquals(\"H\",CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"NewtoM\",CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"NewtoMEB\",CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"T\",generateKey(AUTHOR_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2,AUTHORLASTFOREINI))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"I\",CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"Aalst\",CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(\"T\",CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"N\",CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"A\",CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"NewtoMEBU\",CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "lastAuthorForenameInitials['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "lastAuthorForenameInitials['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "oneAuthorPlusIni['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(\"Newto\",CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"A\",generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3,AUTHORLASTFOREINI))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"N\",generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4,AUTHORLASTFOREINI))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(\"AalstL\",CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"H\",generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5,AUTHORLASTFOREINI))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(\"W\",generateKey(AUTHOR_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1,AUTHORLASTFOREINI))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(\"NewtoME\",CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(\"I\",generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1,AUTHORLASTFOREINI))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(\"J\",generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2,AUTHORLASTFOREINI))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(\"W\",CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"J\",CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
4->18 [style = dashed, label="0"];
4->3 [style = bold, label=""];
16->18 [style = bold, label=""];
8->15 [style = bold, label=""];
15->14 [style = bold, label=""];
22->16 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
6->9 [style = dashed, label="0"];
7->8 [style = dashed, label="0"];
3->6 [style = bold, label=""];
1->21 [style = dashed, label="0"];
1->10 [style = dashed, label="0"];
7->4 [style = bold, label=""];
17->19 [style = bold, label=""];
12->13 [style = bold, label=""];
18->20 [style = bold, label=""];
20->23 [style = bold, label=""];
5->0 [style = bold, label=""];
21->22 [style = bold, label=""];
0->1 [style = bold, label=""];
4->15 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
3->20 [style = dashed, label="0"];
11->8 [style = bold, label=""];
2->11 [style = dashed, label="0"];
14->9 [style = bold, label=""];
1->2 [style = bold, label=""];
2->7 [style = bold, label=""];
3->14 [style = dashed, label="0"];
2->22 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
10->11 [style = bold, label=""];
19->21 [style = bold, label=""];
}
