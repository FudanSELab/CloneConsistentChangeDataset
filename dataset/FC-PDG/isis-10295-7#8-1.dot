digraph {
1 [style = filled, label = "val className = holder.getClass().getName()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "messageService.warnUser(\"Unknown class, unable to export\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "act['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "val metamodelDto = metaModelService.exportMetaModel(config)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "val pkg = holder.getClass().getPackage().getName()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "val domainClassDtos = metamodelDto.getDomainClassDto()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "tree.expand(TreePath.of(0))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "val className = holder.getClass().getName()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "domainClassDtos.removeIf(null)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "val xmlString = jaxbService.toXml(metamodelDto)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "val root = MMNodeFactory.type(domainClassDto,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "val metamodelDto = metaModelService.exportMetaModel(config)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "val tree = TreeNode.lazy(root,)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return Clob.of(fileName,CommonMimeType.XML,xmlString)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "return null@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "act['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "tree.streamDepthFirst().map(null).forEach(null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Optional<LogicalType> logicalTypeIfAny = metaModelService.lookupLogicalTypeByClass(holder.getClass())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "@ParameterLayout(named=DtoMixinConstants.FILENAME_PROPERTY_NAME,describedAs=DtoMixinConstants.FILENAME_PROPERTY_DESCRIPTION) final String fileName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "domainClassDtos.removeIf(null)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "act['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final String namespace = logicalTypeIfAny.get().getNamespace()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "val config = new Config().withIgnoreNoop().withIgnoreAbstractClasses().withIgnoreInterfaces().withIgnoreBuiltInValueTypes().withNamespacePrefix(namespace)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "val config = new Config().withIgnoreNoop().withIgnoreAbstractClasses().withIgnoreInterfaces().withIgnoreBuiltInValueTypes().withPackagePrefix(pkg)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "val domainClassDtos = metamodelDto.getDomainClassDto()@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return tree@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "val xmlString = jaxbService.toXml(metamodelDto)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "val domainClassDto = metamodelDto.getDomainClassDto().stream().filter(null).findFirst().orElseThrow(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "!logicalTypeIfAny.isPresent()@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13->15 [style = solid, label="xmlString"];
27->26 [style = solid, label="domainClassDto"];
5->8 [style = bold, label=""];
10->20 [style = bold, label=""];
6->4 [style = solid, label="fileName"];
7->18 [style = dashed, label="0"];
23->22 [style = solid, label="tree"];
6->15 [style = solid, label="fileName"];
25->22 [style = bold, label=""];
4->13 [style = solid, label="metamodelDto"];
26->23 [style = solid, label="root"];
1->27 [style = bold, label=""];
18->19 [style = bold, label=""];
4->21 [style = bold, label=""];
28->7 [style = bold, label=""];
19->12 [style = dotted, label="true"];
2->27 [style = dashed, label="0"];
19->10 [style = bold, label=""];
2->9 [style = bold, label=""];
0->6 [style = dotted, label="true"];
3->4 [style = bold, label=""];
20->4 [style = bold, label=""];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
8->1 [style = bold, label=""];
7->5 [style = bold, label=""];
12->10 [style = bold, label=""];
23->24 [style = bold, label=""];
27->26 [style = bold, label=""];
5->8 [style = solid, label="config"];
24->25 [style = bold, label=""];
10->20 [style = solid, label="namespace"];
11->13 [style = bold, label=""];
26->23 [style = bold, label=""];
19->16 [style = dotted, label="true"];
20->4 [style = solid, label="config"];
9->3 [style = bold, label=""];
8->3 [style = solid, label="metamodelDto"];
14->18 [style = bold, label=""];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
3->4 [style = solid, label="xmlString"];
7->5 [style = solid, label="pkg"];
16->12 [style = bold, label=""];
21->17 [style = bold, label=""];
17->11 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
