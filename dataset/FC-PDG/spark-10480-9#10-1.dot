digraph {
16 [style = filled, label = "double unRegularizedErr = predictionError(validationData,model)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int numFeatures = 20@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<LabeledPoint> data = generateRidgeData(2 * numExamples,numFeatures,10.0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(regularizedErr < unRegularizedErr)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "double regularizedErr = predictionError(validationData,model)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ridgeSGDImpl.optimizer().setStepSize(1.0).setRegParam(0.0).setNumIterations(200)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "model = RidgeRegressionWithSGD.train(testRDD.rdd(),200,1.0,0.1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RidgeRegressionWithSGD ridgeSGDImpl = new RidgeRegressionWithSGD()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<LabeledPoint> validationData = data.subList(numExamples,2 * numExamples)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "model = ridgeSGDImpl.run(testRDD.rdd())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "runRidgeRegressionUsingConstructor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "int numExamples = 50@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RidgeRegressionModel model = ridgeSGDImpl.run(testRDD.rdd())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(regularizedErr < unRegularizedErr)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RidgeRegressionModel model = RidgeRegressionWithSGD.train(testRDD.rdd(),200,1.0,0.0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "runRidgeRegressionUsingStaticMethods['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = jsc.parallelize(new ArrayList<>(data.subList(0,numExamples)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = jsc.parallelize(new ArrayList<LabeledPoint>(data.subList(0,numExamples)))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "runRidgeRegressionUsingConstructor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ridgeSGDImpl.optimizer().setRegParam(0.1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "double regularizedErr = predictionError(validationData,model)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
0->1 [style = solid, label="validationData"];
15->13 [style = bold, label=""];
16->18 [style = bold, label=""];
1->3 [style = solid, label="unRegularizedErr"];
12->20 [style = dashed, label="0"];
10->14 [style = bold, label=""];
0->12 [style = bold, label=""];
0->4 [style = solid, label="validationData"];
6->0 [style = bold, label=""];
13->0 [style = solid, label="numExamples"];
20->16 [style = solid, label="model"];
1->19 [style = solid, label="regularizedErr"];
6->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
8->1 [style = solid, label="model"];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
4->3 [style = solid, label="regularizedErr"];
12->7 [style = bold, label=""];
16->19 [style = solid, label="unRegularizedErr"];
18->1 [style = solid, label="model"];
8->1 [style = bold, label=""];
20->16 [style = bold, label=""];
14->0 [style = bold, label=""];
18->1 [style = bold, label=""];
11->10 [style = bold, label=""];
5->4 [style = bold, label=""];
0->16 [style = solid, label="validationData"];
13->14 [style = solid, label="numExamples"];
5->4 [style = solid, label="model"];
0->20 [style = bold, label=""];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
1->19 [style = bold, label=""];
11->10 [style = solid, label="numFeatures"];
13->6 [style = solid, label="numExamples"];
13->10 [style = solid, label="numExamples"];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
