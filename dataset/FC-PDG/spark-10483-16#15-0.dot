digraph {
10 [style = filled, label = "LinearRegression lr = new LinearRegression().setMaxIter(10).setRegParam(1.0)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "model.transform(dataset,model.threshold().w(0.0),model.probabilityCol().w(\"myProb\")).registerTempTable(\"predNotAllZero\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "LinearRegression parent = (LinearRegression)model.parent()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "LogisticRegression parent2 = (LogisticRegression)model2.parent()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(0.6,parent.getThreshold(),eps)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(0.4,model2.getThreshold(),eps)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(1.0,parent.getRegParam(),eps)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(10,parent.getMaxIter())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "linearRegressionWithSetters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(0.6,model.getThreshold(),eps)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "linearRegressionWithSetters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(0.0,r.getDouble(0),eps)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "r.getDouble(0) != 0.0@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(0.4,parent.getThresholds()(0(,eps)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "LogisticRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.threshold().w(0.4),lr.probabilityCol().w(\"theProb\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(5,parent2.getMaxIter())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "LogisticRegressionModel model = lr.fit(dataset)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "DataFrame predNotAllZero = jsql.sql(\"SELECT prediction, myProb FROM predNotAllZero\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "LinearRegressionModel model = lr.fit(dataset)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1.0,parent.getRegParam(),0.0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"thePred\",model2.getPredictionCol())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LinearRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.predictionCol().w(\"thePred\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(0.4,parent2.getThreshold(),eps)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(\"theProb\",model2.getProbabilityCol())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(0.6,parent.getThresholds()(1(,eps)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "model.setThreshold(1.0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "LogisticRegression lr = new LogisticRegression().setMaxIter(10).setRegParam(1.0).setThreshold(0.6).setProbabilityCol(\"myProbability\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "LinearRegression lr = new LinearRegression().setMaxIter(10).setRegParam(1.0).setSolver(\"l-bfgs\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "LogisticRegression parent = (LogisticRegression)model.parent()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(0.1,parent2.getRegParam(),0.0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "logisticRegressionWithSetters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(0.1,parent2.getRegParam(),eps)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "foundNonZero = true@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "model.transform(dataset).registerTempTable(\"predAllZero\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(5,parent2.getMaxIter())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "boolean foundNonZero = false@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LinearRegression parent2 = (LinearRegression)model2.parent()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertTrue(foundNonZero)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(10,parent.getMaxIter())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DataFrame predAllZero = jsql.sql(\"SELECT prediction, myProbability FROM predAllZero\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
29->31 [style = solid, label="foundNonZero"];
10->15 [style = dashed, label="0"];
1->8 [style = bold, label=""];
30->13 [style = bold, label=""];
14->30 [style = bold, label=""];
21->27 [style = bold, label=""];
20->29 [style = bold, label=""];
0->1 [style = solid, label="parent"];
11->6 [style = bold, label=""];
37->17 [style = bold, label=""];
29->31 [style = bold, label=""];
12->11 [style = bold, label=""];
18->33 [style = bold, label=""];
17->33 [style = solid, label="parent"];
3->16 [style = dashed, label="0"];
8->35 [style = dashed, label="0"];
35->32 [style = bold, label=""];
38->36 [style = bold, label=""];
31->18 [style = bold, label=""];
6->0 [style = bold, label=""];
20->31 [style = bold, label=""];
2->10 [style = bold, label=""];
6->37 [style = dashed, label="0"];
0->17 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
26->39 [style = bold, label=""];
4->21 [style = dashed, label="0"];
28->14 [style = bold, label=""];
33->26 [style = bold, label=""];
10->11 [style = dashed, label="0"];
5->32 [style = dashed, label="0"];
29->20 [style = bold, label=""];
25->20 [style = bold, label=""];
36->25 [style = bold, label=""];
23->22 [style = bold, label=""];
8->5 [style = bold, label=""];
20->29 [style = dotted, label="true"];
16->21 [style = bold, label=""];
19->35 [style = bold, label=""];
39->23 [style = bold, label=""];
22->34 [style = bold, label=""];
5->7 [style = bold, label=""];
13->38 [style = bold, label=""];
27->19 [style = bold, label=""];
9->1 [style = bold, label=""];
15->37 [style = bold, label=""];
32->28 [style = bold, label=""];
17->16 [style = bold, label=""];
24->15 [style = bold, label=""];
25->31 [style = solid, label="foundNonZero"];
}
