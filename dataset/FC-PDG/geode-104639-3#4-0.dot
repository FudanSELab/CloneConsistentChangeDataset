digraph {
9 [style = filled, label = "testMapIndexUsableQueryOnEmptyRegion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testMapIndexUsableQueryOnEmptyRegion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Index i1 = qs.createIndex(\"Index1\",IndexType.FUNCTIONAL,\"objs.maap('key2','key3'(\",\"/testRgn objs\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "SelectResults sr = (SelectResults)q.execute()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(sr.isEmpty())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Query q = CacheUtils.getQueryService().newQuery(\"<trace> SELECT * FROM /testRgn p, p.positions where p.status = 'active' AND p.ID > 0 \")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SelectResults sr = (SelectResults)q.execute()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RangeIndex.setTestHook(hook)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Index i1 = qs.createIndex(\"Index1\",IndexType.FUNCTIONAL,\"p.status\",\"/testRgn p, p.positions\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(\"RangeIndexTestHook was not hooked for spot 2\",((RangeIndexTestHook)hook).isHooked(2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testRgn.put(0,new Portfolio(0))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testRgn.put(1,new Portfolio(1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Index i1 = qs.createIndex(\"Index1\",IndexType.FUNCTIONAL,\"objs.maap('key2','key3'(\",SEPARATOR + \"testRgn objs\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "TestHook hook = new RangeIndexTestHook()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IndexManager.TEST_RANGEINDEX_ONLY = true@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Query q = CacheUtils.getQueryService().newQuery(\"SELECT DISTINCT * FROM /testRgn itr1 WHERE itr1.maap('key2'( >= 3 \")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "LocalRegion testRgn = (LocalRegion)CacheUtils.createRegion(\"testRgn\",null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Index i2 = qs.createIndex(\"Index2\",IndexType.FUNCTIONAL,\"p.ID\",\"/testRgn p, p.positions\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Query q = CacheUtils.getQueryService().newQuery(\"SELECT DISTINCT * FROM \" + SEPARATOR + \"testRgn itr1 WHERE itr1.maap('key2'( >= 3 \")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "QueryService qs = CacheUtils.getQueryService()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "qs = CacheUtils.getQueryService()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RangeIndex.setTestHook(null)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testSizeEstimateLTInRangeIndexForNullMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->10 [style = dashed, label="0"];
0->17 [style = bold, label=""];
14->22 [style = bold, label=""];
4->0 [style = dashed, label="0"];
0->11 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
15->19 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
13->16 [style = bold, label=""];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
21->12 [style = bold, label=""];
5->16 [style = dashed, label="0"];
22->3 [style = bold, label=""];
6->5 [style = bold, label=""];
0->4 [style = bold, label=""];
12->18 [style = bold, label=""];
17->15 [style = bold, label=""];
18->13 [style = bold, label=""];
21->12 [style = solid, label="hook"];
4->11 [style = dashed, label="0"];
16->20 [style = bold, label=""];
2->8 [style = bold, label=""];
19->21 [style = bold, label=""];
}
