digraph {
3 [style = filled, label = "funcWrapper.getCoordinator().handleEventFromOperator(0,nextEvent)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.REQUESTED,instant)@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEmptyDataFiles()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "funcWrapper.invoke(rowData)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "funcWrapper = new StreamWriteFunctionWrapper<>(tempFile.getAbsolutePath(),conf)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "funcWrapper.getCoordinator().handleEventFromOperator(0,nextEvent)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "String instant = funcWrapper.getWriteClient().getLastPendingInstant(getTableType())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "funcWrapper.checkpointFunction(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testUpsertWithDelete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String instant = funcWrapper.getWriteClient().getLastPendingInstant(getTableType())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expected.put(\"par3\",\"(id6,par3,id6,Emma,20,6,par3(\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expected.put(\"par2\",\"(id4,par2,id4,Fabian,31,4,par2(\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "funcWrapper.openFunction()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "checkIndexLoaded(new HoodieKey(\"id1\",\"par1\"),new HoodieKey(\"id2\",\"par1\"),new HoodieKey(\"id3\",\"par2\"),new HoodieKey(\"id4\",\"par2\"),new HoodieKey(\"id5\",\"par3\"),new HoodieKey(\"id6\",\"par3\"),new HoodieKey(\"id7\",\"par4\"),new HoodieKey(\"id8\",\"par4\"))@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "funcWrapper.checkpointFunction(2)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "conf.setBoolean(FlinkOptions.INDEX_BOOTSTRAP_ENABLED,true)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "checkIndexLoaded(new HoodieKey(\"id1\",\"par1\"),new HoodieKey(\"id2\",\"par1\"),new HoodieKey(\"id3\",\"par2\"),new HoodieKey(\"id4\",\"par2\"),new HoodieKey(\"id5\",\"par3\"),new HoodieKey(\"id6\",\"par3\"),new HoodieKey(\"id7\",\"par4\"),new HoodieKey(\"id8\",\"par4\"),new HoodieKey(\"id9\",\"par3\"),new HoodieKey(\"id10\",\"par4\"),new HoodieKey(\"id11\",\"par4\"))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "checkWrittenData(tempFile,expected)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Map<String,String> expected = new HashMap<>()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "funcWrapper.checkpointFunction(1)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertTrue(funcWrapper.isAlreadyBootstrap())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "testIndexStateBootstrap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "funcWrapper.checkpointComplete(1)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "checkWrittenData(tempFile,EXPECTED1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNotNull(funcWrapper.getEventBuffer()(0(,\"The coordinator missed the event\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "funcWrapper.checkpointComplete(1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "conf.setBoolean(FlinkOptions.INDEX_BOOTSTRAP_ENABLED,true)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertNotNull(funcWrapper.getEventBuffer()(0(,\"The coordinator missed the event\")@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "expected.put(\"par4\",\"(id7,par4,id7,Bob,44,7,par4, id8,par4,id8,Han,56,8,par4(\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "funcWrapper.openFunction()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "OperatorEvent nextEvent = funcWrapper.getNextEvent()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.REQUESTED,instant)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkWrittenData(tempFile,EXPECTED1)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.COMPLETED,instant)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testIndexStateBootstrap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "nextEvent = funcWrapper.getNextEvent()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "funcWrapper.clearIndexState()@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "funcWrapper = new StreamWriteFunctionWrapper<>(tempFile.getAbsolutePath(),conf)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "expected.put(\"par1\",\"(id1,par1,id1,Danny,24,1,par1, id2,par1,id2,Stephen,34,2,par1(\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.COMPLETED,instant)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(funcWrapper.getEventBuffer()(0(,\"The coordinator missed the event\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "funcWrapper.invoke(rowData)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "funcWrapper.checkpointComplete(2)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "checkWrittenData(tempFile,EXPECTED2)@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8->16 [style = bold, label=""];
13->34 [style = bold, label=""];
39->2 [style = solid, label="instant"];
2->19 [style = bold, label=""];
44->6 [style = bold, label=""];
7->17 [style = bold, label=""];
30->13 [style = bold, label=""];
9->39 [style = bold, label=""];
38->44 [style = bold, label=""];
3->24 [style = bold, label=""];
29->30 [style = bold, label=""];
21->27 [style = dashed, label="0"];
25->13 [style = bold, label=""];
39->13 [style = bold, label=""];
10->19 [style = bold, label=""];
0->12 [style = bold, label=""];
33->28 [style = bold, label=""];
3->24 [style = solid, label="nextEvent"];
42->9 [style = bold, label=""];
16->7 [style = bold, label=""];
35->33 [style = bold, label=""];
40->0 [style = bold, label=""];
19->7 [style = solid, label="nextEvent"];
31->29 [style = bold, label=""];
1->42 [style = bold, label=""];
10->33 [style = solid, label="instant"];
4->2 [style = bold, label=""];
14->16 [style = solid, label="instant"];
4->19 [style = solid, label="nextEvent"];
37->6 [style = bold, label=""];
11->9 [style = bold, label=""];
2->10 [style = bold, label=""];
0->3 [style = solid, label="nextEvent"];
22->23 [style = bold, label=""];
15->18 [style = bold, label=""];
19->8 [style = bold, label=""];
26->22 [style = bold, label=""];
1->11 [style = bold, label=""];
17->43 [style = bold, label=""];
6->5 [style = bold, label=""];
36->27 [style = bold, label=""];
5->0 [style = bold, label=""];
18->1 [style = bold, label=""];
15->1 [style = bold, label=""];
3->15 [style = solid, label="nextEvent"];
9->25 [style = bold, label=""];
23->6 [style = bold, label=""];
34->36 [style = bold, label=""];
27->10 [style = bold, label=""];
39->8 [style = solid, label="instant"];
16->45 [style = solid, label="expected"];
21->14 [style = bold, label=""];
19->8 [style = solid, label="nextEvent"];
7->35 [style = dashed, label="0"];
1->32 [style = bold, label=""];
0->12 [style = solid, label="nextEvent"];
43->41 [style = bold, label=""];
13->14 [style = solid, label="nextEvent"];
17->20 [style = bold, label=""];
41->45 [style = bold, label=""];
4->2 [style = solid, label="nextEvent"];
12->3 [style = bold, label=""];
20->35 [style = bold, label=""];
5->40 [style = bold, label=""];
13->21 [style = bold, label=""];
13->21 [style = solid, label="nextEvent"];
32->31 [style = bold, label=""];
14->17 [style = solid, label="instant"];
10->20 [style = solid, label="instant"];
14->4 [style = bold, label=""];
24->15 [style = bold, label=""];
}
