digraph {
41 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "addManyFieldsWithManySubAdds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "values.clear()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "values.put(\"a\",10.1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789L,result)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(269.5791D,result)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "values.put(\"c\",3.1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "values.put(\"c\",4.12345678)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "values.put(\"d\",4.12345678)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.clear()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(14L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.put(\"c\",3)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "addManyFieldsWithManySubAdds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Assert.assertEquals(24L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(26.4D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.put(\"b\",2.1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@52@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "values.put(\"a\",4.12345678)@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "values.put(\"b\",4.12345678)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "multManyFieldsWithValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789D,result)@@@42@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(14.623456789123456,result)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "values.clear()@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "values.put(\"a\",1.1)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(14D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.put(\"b\",2.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->0 [style = bold, label=""];
28->6 [style = bold, label=""];
18->39 [style = solid, label="result"];
6->35 [style = bold, label=""];
20->56 [style = dashed, label="0"];
30->20 [style = bold, label=""];
25->30 [style = bold, label=""];
46->2 [style = bold, label=""];
46->61 [style = bold, label=""];
32->30 [style = solid, label="result"];
61->12 [style = bold, label=""];
3->46 [style = solid, label="result"];
45->48 [style = bold, label=""];
47->3 [style = solid, label="result"];
58->9 [style = bold, label=""];
15->17 [style = solid, label="result"];
26->22 [style = bold, label=""];
37->5 [style = bold, label=""];
31->50 [style = bold, label=""];
28->6 [style = solid, label="result"];
20->16 [style = bold, label=""];
19->9 [style = bold, label=""];
21->1 [style = bold, label=""];
53->41 [style = bold, label=""];
32->25 [style = bold, label=""];
8->48 [style = solid, label="result"];
9->21 [style = bold, label=""];
19->58 [style = dashed, label="0"];
15->39 [style = solid, label="result"];
22->7 [style = solid, label="result"];
48->36 [style = solid, label="result"];
18->15 [style = solid, label="result"];
23->57 [style = dashed, label="0"];
3->46 [style = bold, label=""];
8->45 [style = solid, label="result"];
50->18 [style = bold, label=""];
18->15 [style = bold, label=""];
17->42 [style = bold, label=""];
22->7 [style = bold, label=""];
22->51 [style = solid, label="result"];
2->61 [style = dashed, label="0"];
23->37 [style = bold, label=""];
48->34 [style = solid, label="result"];
47->46 [style = solid, label="result"];
29->38 [style = bold, label=""];
7->51 [style = dashed, label="0"];
38->33 [style = bold, label=""];
27->8 [style = bold, label=""];
52->54 [style = bold, label=""];
55->9 [style = bold, label=""];
0->31 [style = bold, label=""];
11->26 [style = bold, label=""];
25->56 [style = solid, label="result"];
22->58 [style = solid, label="result"];
6->35 [style = solid, label="result"];
57->37 [style = bold, label=""];
47->3 [style = bold, label=""];
25->30 [style = solid, label="result"];
22->19 [style = solid, label="result"];
35->24 [style = bold, label=""];
35->6 [style = dashed, label="0"];
3->2 [style = solid, label="result"];
5->32 [style = bold, label=""];
32->25 [style = solid, label="result"];
22->51 [style = bold, label=""];
25->20 [style = solid, label="result"];
39->17 [style = bold, label=""];
40->27 [style = bold, label=""];
8->45 [style = bold, label=""];
14->47 [style = bold, label=""];
43->41 [style = bold, label=""];
33->49 [style = bold, label=""];
49->11 [style = bold, label=""];
7->19 [style = bold, label=""];
36->34 [style = bold, label=""];
4->40 [style = bold, label=""];
42->13 [style = bold, label=""];
6->24 [style = solid, label="result"];
10->28 [style = bold, label=""];
7->58 [style = bold, label=""];
48->36 [style = bold, label=""];
41->29 [style = bold, label=""];
13->44 [style = bold, label=""];
12->57 [style = bold, label=""];
44->10 [style = bold, label=""];
60->59 [style = bold, label=""];
54->4 [style = bold, label=""];
6->52 [style = bold, label=""];
2->12 [style = bold, label=""];
24->4 [style = bold, label=""];
59->29 [style = bold, label=""];
51->55 [style = bold, label=""];
15->39 [style = bold, label=""];
3->61 [style = solid, label="result"];
30->56 [style = bold, label=""];
1->14 [style = bold, label=""];
12->23 [style = bold, label=""];
41->59 [style = dashed, label="0"];
}
