digraph {
2 [style = filled, label = "int i = p1@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "j <= p4@@@14@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ClientState c1 = createClientWithPreviousActiveTasks(p1,1,task01,task02)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldNotHaveSameAssignmentOnAnyTwoHostsWhenThereArePreviousStandbyTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int j = p1@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ClientState c2 = createClientWithPreviousActiveTasks(p2,1,task03,task00)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "shouldNotHaveSameAssignmentOnAnyTwoHosts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "createClient(p3,1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "createClient(p2,1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "createClient(p4,1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(\"clients shouldn't have same task assignment\",clients.get(j).assignedTasks(),not(equalTo(taskIds)))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final Set<TaskId> taskIds = clients.get(uuid).assignedTasks()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "!uuid.equals(otherUUID)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "j != i@@@18@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "taskAssignor.assign()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final StickyTaskAssignor taskAssignor = createTaskAssignor(1,TASK_0_0,TASK_0_2,TASK_0_1,TASK_0_3)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "i <= p4@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "shouldNotHaveSameAssignmentOnAnyTwoHostsWhenThereArePreviousStandbyTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "c1.addPreviousStandbyTasks(Utils.mkSet(TASK_0_3,TASK_0_0))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(\"clients shouldn't have same task assignment\",clients.get(j).assignedTasks(),not(equalTo(taskIds)))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "c2.addPreviousStandbyTasks(Utils.mkSet(task01,task02))@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final StickyTaskAssignor<Integer> taskAssignor = createTaskAssignor(1,task00,task02,task01,task03)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "createClient(p1,1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "c2.addPreviousStandbyTasks(Utils.mkSet(TASK_0_1,TASK_0_2))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "createClient(UUID_4,1)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "j++@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "createClient(UUID_3,1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "c1.addPreviousStandbyTasks(Utils.mkSet(task03,task00))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final List<UUID> allUUIDs = asList(UUID_1,UUID_2,UUID_3,UUID_4)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "j != i@@@16@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Set<TaskId> taskIds = clients.get(i).assignedTasks()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ClientState c1 = createClientWithPreviousActiveTasks(UUID_1,1,TASK_0_1,TASK_0_2)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertThat(\"clients shouldn't have same task assignment\",clients.get(otherUUID).assignedTasks(),not(equalTo(taskIds)))@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "final ClientState c2 = createClientWithPreviousActiveTasks(UUID_2,1,TASK_0_3,TASK_0_0)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12->5 [style = bold, label=""];
28->20 [style = bold, label=""];
5->15 [style = bold, label=""];
15->19 [style = dashed, label="0"];
15->9 [style = dotted, label="true"];
23->28 [style = bold, label=""];
17->15 [style = dotted, label="true"];
25->19 [style = bold, label=""];
16->14 [style = bold, label=""];
27->19 [style = bold, label=""];
0->3 [style = dotted, label="true"];
12->7 [style = solid, label="taskIds"];
27->25 [style = bold, label=""];
5->9 [style = solid, label="i"];
0->3 [style = bold, label=""];
17->5 [style = bold, label=""];
3->7 [style = dotted, label="true"];
7->1 [style = bold, label=""];
27->25 [style = dotted, label="true"];
5->3 [style = solid, label="i"];
34->31 [style = bold, label=""];
30->34 [style = bold, label=""];
1->0 [style = bold, label=""];
5->17 [style = bold, label=""];
20->18 [style = bold, label=""];
25->27 [style = bold, label=""];
15->1 [style = solid, label="taskIds"];
3->7 [style = bold, label=""];
12->6 [style = dotted, label="true"];
15->9 [style = bold, label=""];
9->6 [style = solid, label="j"];
31->33 [style = bold, label=""];
6->0 [style = solid, label="j"];
17->15 [style = bold, label=""];
6->3 [style = solid, label="j"];
15->12 [style = dotted, label="true"];
12->0 [style = dotted, label="true"];
8->18 [style = dashed, label="0"];
9->0 [style = solid, label="j"];
15->12 [style = bold, label=""];
2->17 [style = solid, label="i"];
6->1 [style = solid, label="j"];
2->5 [style = solid, label="i"];
14->4 [style = bold, label=""];
21->23 [style = bold, label=""];
2->17 [style = bold, label=""];
18->24 [style = bold, label=""];
3->1 [style = bold, label=""];
22->29 [style = bold, label=""];
15->0 [style = dotted, label="true"];
29->21 [style = bold, label=""];
9->15 [style = solid, label="i"];
5->17 [style = solid, label="i"];
5->19 [style = bold, label=""];
24->26 [style = bold, label=""];
1->6 [style = bold, label=""];
1->3 [style = solid, label="j"];
6->12 [style = solid, label="j"];
10->13 [style = bold, label=""];
8->2 [style = bold, label=""];
17->12 [style = dotted, label="true"];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
2->0 [style = solid, label="i"];
33->32 [style = bold, label=""];
9->12 [style = bold, label=""];
0->1 [style = dotted, label="true"];
6->12 [style = bold, label=""];
0->9 [style = bold, label=""];
0->6 [style = bold, label=""];
1->0 [style = solid, label="j"];
26->5 [style = bold, label=""];
6->0 [style = bold, label=""];
12->6 [style = bold, label=""];
12->0 [style = bold, label=""];
9->12 [style = solid, label="j"];
9->15 [style = bold, label=""];
5->15 [style = solid, label="i"];
15->6 [style = dotted, label="true"];
19->27 [style = bold, label=""];
17->9 [style = dotted, label="true"];
5->0 [style = solid, label="i"];
13->8 [style = bold, label=""];
32->13 [style = bold, label=""];
4->11 [style = bold, label=""];
19->25 [style = solid, label="taskIds"];
9->3 [style = solid, label="i"];
17->5 [style = dotted, label="true"];
}
