digraph {
11 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AccountVO acct = new AccountVO(200L)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<AffinityGroupProcessor> affinityProcessors = new ArrayList<AffinityGroupProcessor>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AffinityGroupVO group = new AffinityGroupVO(\"group1\",\"mock\",\"mock group\",domainId,200L,ControlledEntity.ACLType.Account)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "when(_acctMgr.finalizeOwner((Account)anyObject(),anyString(),anyLong(),anyLong())).thenReturn(acct)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "_affinityService.setAffinityGroupProcessors(affinityProcessors)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "acct.setAccountName(ACCOUNT_NAME)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "UserVO user = new UserVO(1,\"testuser\",\"password\",\"firstname\",\"lastName\",\"email\",\"timezone\",UUID.randomUUID().toString(),User.Source.UNKNOWN)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Mockito.when(_affinityGroupDao.findById(Matchers.anyLong())).thenReturn(group)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Mockito.when(_affinityGroupDao.persist(Matchers.any())).thenReturn(group)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "acct = new AccountVO(200L)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Mockito.when(_affinityGroupDao.expunge(Matchers.anyLong())).thenReturn(true)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CallContext.register(user,acct)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "acct.setAccountName(\"user\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "acct.setDomainId(domainId)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(_acctMgr.finalizeOwner(any(),anyString(),anyLong(),nullable())).thenReturn(acct)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "ComponentContext.initComponentsLifeCycle()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "acct.setType(Account.ACCOUNT_TYPE_NORMAL)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Mockito.when(_affinityGroupDao.findByAccountAndName(Matchers.anyLong(),Matchers.anyString())).thenReturn(group)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "acct.setDomainId(DOMAIN_ID)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when(_processor.getType()).thenReturn(\"mock\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "AffinityGroupVO group = new AffinityGroupVO(AFFINITY_GROUP_NAME,\"mock\",\"mock group\",DOMAIN_ID,200L,ControlledEntity.ACLType.Account)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Mockito.when(_affinityGroupDao.lockRow(Matchers.anyLong(),anyBoolean())).thenReturn(group)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Mockito.when(_eventDao.persist(Matchers.any())).thenReturn(new EventVO())@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(_accountDao.findByIdIncludingRemoved(0L)).thenReturn(acct)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "affinityProcessors.add(_processor)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
5->3 [style = bold, label=""];
19->0 [style = solid, label="acct"];
19->8 [style = solid, label="acct"];
20->13 [style = bold, label=""];
20->1 [style = solid, label="group"];
26->0 [style = solid, label="acct"];
12->23 [style = dashed, label="0"];
23->27 [style = bold, label=""];
26->10 [style = bold, label=""];
25->13 [style = bold, label=""];
3->25 [style = bold, label=""];
21->15 [style = bold, label=""];
17->9 [style = bold, label=""];
26->9 [style = solid, label="acct"];
25->18 [style = solid, label="group"];
14->17 [style = bold, label=""];
19->10 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
16->2 [style = bold, label=""];
15->19 [style = bold, label=""];
9->8 [style = bold, label=""];
14->27 [style = dashed, label="0"];
1->7 [style = bold, label=""];
13->1 [style = bold, label=""];
11->15 [style = bold, label=""];
25->13 [style = solid, label="group"];
9->6 [style = bold, label=""];
15->26 [style = bold, label=""];
19->9 [style = solid, label="acct"];
20->13 [style = solid, label="group"];
8->22 [style = dashed, label="0"];
3->20 [style = bold, label=""];
17->9 [style = solid, label="user"];
19->26 [style = dashed, label="0"];
20->25 [style = dashed, label="0"];
0->4 [style = bold, label=""];
10->12 [style = bold, label=""];
10->23 [style = bold, label=""];
20->7 [style = solid, label="group"];
12->14 [style = bold, label=""];
27->17 [style = bold, label=""];
7->18 [style = bold, label=""];
25->7 [style = solid, label="group"];
4->3 [style = solid, label="affinityProcessors"];
4->5 [style = bold, label=""];
19->22 [style = solid, label="acct"];
20->18 [style = solid, label="group"];
25->1 [style = solid, label="group"];
22->6 [style = bold, label=""];
24->15 [style = bold, label=""];
18->16 [style = bold, label=""];
}
