digraph {
15 [style = filled, label = "KeyedObject<String> ko2 = CloneUtils.clone(ko1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "ko1.addObject(\"V2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "KeyedObject<String> ko1 = new KeyedObject<>(\"Test\",obj1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "KeyedObject<String> ko2 = (KeyedObject)ko1.clone()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "ko1.addObject(\"V3\",3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(ko1 != ko2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)ko1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(ko2.getObject() != obj1)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ko1.addObject(\"V1\",1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ko1 = new KeyedObject<>(\"Test\",obj1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ko2 = CloneUtils.clone(ko1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Object obj1 = new ArrayList<String>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(ko1 != ko2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
2->9 [style = solid, label="ko1"];
16->13 [style = bold, label=""];
15->8 [style = solid, label="ko2"];
4->16 [style = dashed, label="0"];
16->13 [style = solid, label="ko2"];
17->1 [style = bold, label=""];
11->15 [style = dashed, label="0"];
4->13 [style = bold, label=""];
1->2 [style = solid, label="obj1"];
18->19 [style = bold, label=""];
22->21 [style = bold, label=""];
7->4 [style = bold, label=""];
23->8 [style = bold, label=""];
4->12 [style = solid, label="ko2"];
11->9 [style = bold, label=""];
3->10 [style = solid, label="obj1"];
15->9 [style = solid, label="ko2"];
3->7 [style = solid, label="obj1"];
9->6 [style = bold, label=""];
23->3 [style = solid, label="ko2"];
23->8 [style = solid, label="ko2"];
8->0 [style = bold, label=""];
5->1 [style = bold, label=""];
7->13 [style = solid, label="ko1"];
11->8 [style = solid, label="ko2"];
1->0 [style = solid, label="obj1"];
12->10 [style = bold, label=""];
16->12 [style = solid, label="ko2"];
21->20 [style = bold, label=""];
20->23 [style = bold, label=""];
11->9 [style = solid, label="ko2"];
3->7 [style = bold, label=""];
15->9 [style = bold, label=""];
14->12 [style = bold, label=""];
2->15 [style = solid, label="ko1"];
6->8 [style = bold, label=""];
2->15 [style = bold, label=""];
7->16 [style = bold, label=""];
1->2 [style = bold, label=""];
19->8 [style = solid, label="ko1"];
4->13 [style = solid, label="ko2"];
13->14 [style = bold, label=""];
19->22 [style = bold, label=""];
2->11 [style = bold, label=""];
7->16 [style = solid, label="ko1"];
}
