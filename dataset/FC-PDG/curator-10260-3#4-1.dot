digraph {
14 [style = filled, label = "Assert.assertEquals(latch.getState(),LeaderLatch.State.CLOSED)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "timesSquare.await()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "latch.addListener(new LeaderLatchListener(){@Override public void isLeader(){if (!beenLeader) {masterCounter.incrementAndGet()beenLeader = truetry {latch.reset()}catch (Exception e) }{masterCounter.incrementAndGet()CloseableUtils.closeQuietly(latch)timesSquare.countDown()}}@Override public void notLeader(){dunceCounter.incrementAndGet()}},exec)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final LeaderLatch latch = new LeaderLatch(client,PATH_NAME)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "latch.start()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ExecutorService exec = Executors.newSingleThreadExecutor(new ThreadFactoryBuilder().setDaemon(true).setNameFormat(\"callbackSanity-%s\").build())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{for (LeaderLatch latch : latches){if (latch.getState() != LeaderLatch.State.CLOSED) {CloseableUtils.closeQuietly(latch)}}CloseableUtils.closeQuietly(client)}@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Timing timing = new Timing()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final AtomicLong masterCounter = new AtomicLong(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "timesSquare.await()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i < PARTICIPANT_QTY@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "{for (LeaderLatch latch : latches){if (latch.getState() != LeaderLatch.State.CLOSED) {CloseableUtils.closeQuietly(latch)}}CloseableUtils.closeQuietly(client)}@@@55@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testCallbackNotifyLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final LeaderLatch latch = new LeaderLatch(client,PATH_NAME,\"\",closeMode)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<LeaderLatch> latches = Lists.newArrayList()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "latches.add(latch)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "client.start()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "latch.start()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final CountDownLatch timesSquare = new CountDownLatch(PARTICIPANT_QTY)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testCallbackSanity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "latch.addListener(new LeaderLatchListener(){@Override public void isLeader(){if (!beenLeader) {masterCounter.incrementAndGet()beenLeader = truetry {latch.reset()}catch (Exception e) }{masterCounter.incrementAndGet()CloseableUtils.closeQuietly(latch)timesSquare.countDown()}}@Override public void notLeader(){dunceCounter.incrementAndGet()}},exec)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final AtomicLong dunceCounter = new AtomicLong(0)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "client.start()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "ExecutorService exec = Executors.newSingleThreadExecutor(new ThreadFactoryBuilder().setDaemon(true).setNameFormat(\"callbackNotifyLeader-%s\").build())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final int SILENT_QTY = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCallbackSanity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final AtomicLong notLeaderCounter = new AtomicLong(0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "LeaderLatch.CloseMode closeMode = i < SILENT_QTY? LeaderLatch.CloseMode.SILENT: LeaderLatch.CloseMode.NOTIFY_LEADER@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(masterCounter.get(),PARTICIPANT_QTY * 2)@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final int PARTICIPANT_QTY = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(notLeaderCounter.get(),PARTICIPANT_QTY)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertEquals(dunceCounter.get(),PARTICIPANT_QTY * 2 - SILENT_QTY)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "latches.add(latch)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(latch.getState(),LeaderLatch.State.CLOSED)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "latch.addListener(new LeaderLatchListener(){@Override public void isLeader(){if (!beenLeader) {masterCounter.incrementAndGet()beenLeader = truetry {latch.reset()}catch (Exception e) }{masterCounter.incrementAndGet()CloseableUtils.closeQuietly(latch)timesSquare.countDown()}}@Override public void notLeader(){notLeaderCounter.incrementAndGet()}},exec)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "++i@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
2->1 [style = solid, label="PARTICIPANT_QTY"];
2->26 [style = bold, label=""];
16->34 [style = dotted, label="true"];
2->6 [style = bold, label=""];
21->15 [style = bold, label=""];
10->19 [style = bold, label=""];
16->17 [style = dotted, label="true"];
1->20 [style = bold, label=""];
15->31 [style = solid, label="client"];
1->23 [style = bold, label=""];
8->1 [style = bold, label=""];
2->23 [style = solid, label="PARTICIPANT_QTY"];
18->22 [style = bold, label=""];
19->16 [style = solid, label="i"];
22->0 [style = bold, label=""];
10->27 [style = solid, label="latches"];
20->23 [style = dashed, label="0"];
31->33 [style = solid, label="latch"];
4->16 [style = bold, label=""];
25->21 [style = bold, label=""];
17->22 [style = dashed, label="0"];
19->29 [style = solid, label="i"];
28->36 [style = bold, label=""];
12->21 [style = bold, label=""];
16->29 [style = bold, label=""];
34->33 [style = bold, label=""];
2->28 [style = solid, label="PARTICIPANT_QTY"];
20->14 [style = bold, label=""];
26->6 [style = bold, label=""];
16->4 [style = dotted, label="true"];
16->33 [style = dotted, label="true"];
23->14 [style = bold, label=""];
2->20 [style = solid, label="PARTICIPANT_QTY"];
13->5 [style = bold, label=""];
2->16 [style = solid, label="PARTICIPANT_QTY"];
2->6 [style = solid, label="PARTICIPANT_QTY"];
29->31 [style = solid, label="closeMode"];
16->18 [style = dotted, label="true"];
31->34 [style = solid, label="latch"];
16->13 [style = bold, label=""];
16->18 [style = bold, label=""];
7->22 [style = solid, label="exec"];
26->28 [style = solid, label="SILENT_QTY"];
31->27 [style = solid, label="latch"];
37->10 [style = bold, label=""];
33->4 [style = bold, label=""];
18->22 [style = solid, label="latch"];
35->32 [style = bold, label=""];
7->17 [style = solid, label="exec"];
31->34 [style = bold, label=""];
19->16 [style = bold, label=""];
18->0 [style = solid, label="latch"];
17->0 [style = bold, label=""];
32->1 [style = bold, label=""];
18->3 [style = solid, label="latch"];
9->12 [style = bold, label=""];
18->17 [style = solid, label="latch"];
16->31 [style = dotted, label="true"];
15->37 [style = bold, label=""];
16->29 [style = dotted, label="true"];
5->8 [style = bold, label=""];
15->7 [style = bold, label=""];
24->2 [style = bold, label=""];
7->10 [style = bold, label=""];
29->31 [style = bold, label=""];
20->28 [style = bold, label=""];
20->28 [style = dashed, label="0"];
18->17 [style = bold, label=""];
15->27 [style = solid, label="client"];
16->22 [style = dotted, label="true"];
11->2 [style = bold, label=""];
26->29 [style = solid, label="SILENT_QTY"];
12->25 [style = dashed, label="0"];
15->18 [style = solid, label="client"];
36->27 [style = bold, label=""];
16->0 [style = dotted, label="true"];
0->4 [style = bold, label=""];
15->3 [style = solid, label="client"];
37->34 [style = solid, label="exec"];
9->25 [style = bold, label=""];
7->37 [style = dashed, label="0"];
16->35 [style = bold, label=""];
6->9 [style = bold, label=""];
30->2 [style = bold, label=""];
10->3 [style = solid, label="latches"];
}
