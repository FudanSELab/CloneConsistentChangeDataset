digraph {
20 [style = filled, label = "writer.writeEnvelope(new RecordEnvelope(record))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "writer.getMessageHandler().handleMessage(new FlushControlMessage(new FlushControlMessage.FlushReason(\"flush\")))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCloseAfterFlush['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testWriteAfterFlush['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "byte(( record = new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a03e66@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<DummyWriter> dummyWriters = new ArrayList<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).recordsWritten(),1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).handlerCalled,1)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).closeCount,1)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(dummyWriters.get(1).committed)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).flushCount,1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(dummyWriters.size(),1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(dummyWriters.get(0).committed)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).flushCount,1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "writer.getMessageHandler().handleMessage(new FlushControlMessage(new FlushControlMessage.FlushReason(\"flush\")))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).closeCount,1)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CloseOnFlushWriterWrapper<byte((> writer = getCloseOnFlushWriter(dummyWriters,state)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "state.getJobState().setProp(ConfigurationKeys.WRITER_CLOSE_ON_FLUSH_KEY,\"true\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloseAfterFlush['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).closeCount,1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertFalse(dummyWriters.get(0).handlerCalled)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "writer.writeEnvelope(new RecordEnvelope(record))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "WorkUnitState state = new WorkUnitState()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).recordsWritten(),1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "state.getJobState().setProp(CloseOnFlushWriterWrapper.WRITER_CLOSE_ON_FLUSH_KEY,\"true\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "writer.close()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertFalse(dummyWriters.get(1).handlerCalled)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(dummyWriters.size(),2)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "writer.getMessageHandler().handleMessage(FlushControlMessage.builder().build())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22->11 [style = bold, label=""];
25->23 [style = bold, label=""];
5->14 [style = bold, label=""];
4->6 [style = bold, label=""];
26->21 [style = bold, label=""];
0->4 [style = bold, label=""];
27->25 [style = bold, label=""];
19->5 [style = bold, label=""];
2->7 [style = bold, label=""];
13->0 [style = bold, label=""];
7->9 [style = bold, label=""];
12->2 [style = bold, label=""];
9->3 [style = bold, label=""];
4->6 [style = solid, label="record"];
14->12 [style = bold, label=""];
10->11 [style = bold, label=""];
11->15 [style = bold, label=""];
7->20 [style = bold, label=""];
6->16 [style = bold, label=""];
18->9 [style = bold, label=""];
28->24 [style = bold, label=""];
2->18 [style = bold, label=""];
11->8 [style = bold, label=""];
8->15 [style = dashed, label="0"];
4->20 [style = solid, label="record"];
15->13 [style = bold, label=""];
8->13 [style = bold, label=""];
9->20 [style = dashed, label="0"];
17->11 [style = bold, label=""];
1->19 [style = bold, label=""];
21->27 [style = bold, label=""];
16->5 [style = bold, label=""];
1->16 [style = dashed, label="0"];
23->28 [style = bold, label=""];
11->0 [style = solid, label="state"];
13->0 [style = solid, label="dummyWriters"];
20->26 [style = bold, label=""];
6->1 [style = bold, label=""];
7->18 [style = dashed, label="0"];
1->5 [style = bold, label=""];
}
