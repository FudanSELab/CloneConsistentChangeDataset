digraph {
7 [style = filled, label = "_localctx.exception = re@@@136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "enterRecursionRule(_localctx,60,RULE_primaryExpression,_p)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int _p@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "enterRule(_localctx,76,RULE_functionTemplate)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "_errHandler.reportError(this,re)@@@137@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{setState(590)_errHandler.sync(this)switch (getInterpreter().adaptivePredict(_input,79,_ctx)) {case 1:{_localctx = new CastContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(570)castExpression()}breakcase 2:{_localctx = new ExtractContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(571)extractExpression()}breakcase 3:{_localctx = new CurrentDateTimeFunctionContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(572)builtinDateTimeFunction()}breakcase 4:{_localctx = new ConstantDefaultContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(573)constant()}breakcase 5:{_localctx = new StarContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(577)_la = _input.LA(1)if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DAY) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FIRST) | (1L << FORMAT) | (1L << FULL) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << HOUR) | (1L << INTERVAL) | (1L << LAST) | (1L << LIMIT) | (1L << MAPPED) | (1L << MINUTE) | (1L << MONTH))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (OPTIMIZED - 64)) | (1L << (PARSED - 64)) | (1L << (PHYSICAL - 64)) | (1L << (PLAN - 64)) | (1L << (RLIKE - 64)) | (1L << (QUERY - 64)) | (1L << (SCHEMAS - 64)) | (1L << (SECOND - 64)) | (1L << (SHOW - 64)) | (1L << (SYS - 64)) | (1L << (TABLES - 64)) | (1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (YEAR - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)) {{setState(574)qualifiedName()setState(575)match(DOT)}}setState(579)match(ASTERISK)}breakcase 6:{_localctx = new FunctionContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(580)functionExpression()}breakcase 7:{_localctx = new SubqueryExpressionContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(581)match(T__0)setState(582)query()setState(583)match(T__1)}breakcase 8:{_localctx = new DereferenceContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(585)qualifiedName()}breakcase 9:{_localctx = new ParenthesizedExpressionContext(_localctx)_ctx = _localctx_prevctx = _localctxsetState(586)match(T__0)setState(587)expression()setState(588)match(T__1)}break_ctx.stop = _input.LT(-1)setState(597)_errHandler.sync(this)_alt = getInterpreter().adaptivePredict(_input,80,_ctx)while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER) {if (_alt == 1) {if (_parseListeners != null) triggerExitRuleEvent()_prevctx = _localctx{{_localctx = new CastOperatorExpressionContext(new PrimaryExpressionContext(_parentctx,_parentState))pushNewRecursionContext(_localctx,_startState,RULE_primaryExpression)setState(592)if (!(precpred(_ctx,9))) throw new FailedPredicateException(this,\"precpred(_ctx, 9)\")setState(593)match(CAST_OP)setState(594)dataType()}}}setState(599)_errHandler.sync(this)_alt = getInterpreter().adaptivePredict(_input,80,_ctx)}}@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "primaryExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "enterOuterAlt(_localctx,1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "FunctionTemplateContext _localctx = new FunctionTemplateContext(_ctx,getState())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return _localctx@@@143@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PrimaryExpressionContext _localctx = new PrimaryExpressionContext(_ctx,_parentState)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return _localctx@@@57@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "int _la@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{setState(662)functionName()setState(663)match(T__0)setState(675)_la = _input.LA(1)if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__0) | (1L << ALL) | (1L << ANALYZE) | (1L << ANALYZED) | (1L << CAST) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << CONVERT) | (1L << CURRENT_DATE) | (1L << CURRENT_TIMESTAMP) | (1L << DAY) | (1L << DEBUG) | (1L << DISTINCT) | (1L << EXECUTABLE) | (1L << EXISTS) | (1L << EXPLAIN) | (1L << EXTRACT) | (1L << FALSE) | (1L << FIRST) | (1L << FORMAT) | (1L << FULL) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << HOUR) | (1L << INTERVAL) | (1L << LAST) | (1L << LEFT) | (1L << LIMIT) | (1L << MAPPED) | (1L << MATCH) | (1L << MINUTE) | (1L << MONTH) | (1L << NOT) | (1L << NULL) | (1L << OPTIMIZED))) != 0) || ((((_la - 67)) & ~0x3f) == 0 && ((1L << (_la - 67)) & ((1L << (PARSED - 67)) | (1L << (PHYSICAL - 67)) | (1L << (PLAN - 67)) | (1L << (RIGHT - 67)) | (1L << (RLIKE - 67)) | (1L << (QUERY - 67)) | (1L << (SCHEMAS - 67)) | (1L << (SECOND - 67)) | (1L << (SHOW - 67)) | (1L << (SYS - 67)) | (1L << (TABLES - 67)) | (1L << (TEXT - 67)) | (1L << (TRUE - 67)) | (1L << (TYPE - 67)) | (1L << (TYPES - 67)) | (1L << (VERIFY - 67)) | (1L << (YEAR - 67)) | (1L << (FUNCTION_ESC - 67)) | (1L << (DATE_ESC - 67)) | (1L << (TIME_ESC - 67)) | (1L << (TIMESTAMP_ESC - 67)) | (1L << (GUID_ESC - 67)) | (1L << (PLUS - 67)) | (1L << (MINUS - 67)) | (1L << (ASTERISK - 67)) | (1L << (PARAM - 67)) | (1L << (STRING - 67)) | (1L << (INTEGER_VALUE - 67)) | (1L << (DECIMAL_VALUE - 67)) | (1L << (IDENTIFIER - 67)) | (1L << (DIGIT_IDENTIFIER - 67)) | (1L << (QUOTED_IDENTIFIER - 67)) | (1L << (BACKQUOTED_IDENTIFIER - 67)))) != 0)) {{setState(665)_la = _input.LA(1)if (_la == ALL || _la == DISTINCT) {{setState(664)setQuantifier()}}setState(667)expression()setState(672)_errHandler.sync(this)_la = _input.LA(1)while (_la == T__2) {{{setState(668)match(T__2)setState(669)expression()}}setState(674)_errHandler.sync(this)_la = _input.LA(1)}}}setState(677)match(T__1)}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "functionTemplate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "{unrollRecursionContexts(_parentctx)}@@@140@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "primaryExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "_errHandler.recover(this,re)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ParserRuleContext _parentctx = _ctx@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "PrimaryExpressionContext _prevctx = _localctx@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "_localctx.exception = re@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int _alt@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "{exitRule()}@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "_errHandler.recover(this,re)@@@138@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int _startState = 60@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "_errHandler.reportError(this,re)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int _parentState = getState()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RecognitionException re@@@135@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "enterOuterAlt(_localctx,1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RecognitionException re@@@49@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int _la@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->13 [style = solid, label="_localctx"];
21->26 [style = solid, label="_localctx"];
8->14 [style = bold, label=""];
11->4 [style = bold, label=""];
1->14 [style = solid, label="_parentState"];
29->27 [style = bold, label=""];
5->11 [style = dotted, label="true"];
15->1 [style = bold, label=""];
23->19 [style = bold, label=""];
14->9 [style = solid, label="_localctx"];
16->14 [style = solid, label="_alt"];
24->23 [style = bold, label=""];
17->8 [style = solid, label="_localctx"];
6->11 [style = bold, label=""];
16->8 [style = bold, label=""];
15->14 [style = solid, label="_parentctx"];
21->19 [style = solid, label="_localctx"];
7->6 [style = bold, label=""];
27->23 [style = bold, label=""];
0->10 [style = solid, label="_p"];
5->7 [style = dotted, label="true"];
25->22 [style = dotted, label="true"];
17->14 [style = solid, label="_localctx"];
10->3 [style = bold, label=""];
25->28 [style = dotted, label="true"];
12->14 [style = solid, label="_startState"];
20->21 [style = bold, label=""];
12->10 [style = bold, label=""];
5->6 [style = dotted, label="true"];
13->12 [style = bold, label=""];
30->27 [style = solid, label="_la"];
28->24 [style = bold, label=""];
3->14 [style = solid, label="_la"];
21->26 [style = bold, label=""];
17->13 [style = bold, label=""];
1->17 [style = solid, label="_parentState"];
4->9 [style = bold, label=""];
22->28 [style = bold, label=""];
18->0 [style = dotted, label="true"];
1->17 [style = bold, label=""];
25->24 [style = dotted, label="true"];
17->10 [style = solid, label="_localctx"];
15->21 [style = dashed, label="0"];
3->16 [style = bold, label=""];
2->0 [style = dotted, label="true"];
15->4 [style = solid, label="_parentctx"];
14->4 [style = bold, label=""];
21->29 [style = solid, label="_localctx"];
26->30 [style = bold, label=""];
25->22 [style = bold, label=""];
2->15 [style = bold, label=""];
5->7 [style = bold, label=""];
30->29 [style = bold, label=""];
18->15 [style = bold, label=""];
}
