digraph {
11 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Tuple tuple = tuples.get(0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "Double mini = tuple.getDouble(\"min(a_i)\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Double sumf = tuple.getDouble(\"sum(a_f)\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(3,minf.doubleValue(),0.001)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "testParallelRollupStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Double maxf = tuple.getDouble(\"max(a_f)\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Metric(( metrics = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Double count = tuple.getDouble(\"count(*)\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"hello0\",bucket)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(6.5,avgf.doubleValue(),0.001)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "assertEquals(3,tuples.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "assertTrue(bucket.equals(\"hello0\"))@@@83@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(10,sumf.doubleValue(),0.01)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(14,maxi.doubleValue(),0.001)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "assertEquals(11,sumf.doubleValue(),0.001)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "assertEquals(4,minf.doubleValue(),0.001)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "tuple = tuples.get(1)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(4,minf.doubleValue(),0.01)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "assertEquals(7,maxf.doubleValue(),0.001)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@88@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
83 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "ParallelStream parallelStream = parallelStream(rollupStream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "assertEquals(10,avgf.doubleValue(),0.01)@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertEquals(17,sumi.doubleValue(),0.001)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(4.25,avgi.doubleValue(),0.001)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "assertEquals(11,maxi.doubleValue(),0.001)@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(\"hello3\",bucket)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "List<Tuple> tuples = getTuples(parallelStream)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "Double sumi = tuple.getDouble(\"sum(a_i)\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"NULL\",tuple.getString(\"a_s\"))@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(3,mini.doubleValue(),0.001)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(38,sumi.doubleValue(),0.001)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "tuple = tuples.get(2)@@@87@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
107 [style = filled, label = "tuple = tuples.get(1)@@@84@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
120 [style = filled, label = "attachStreamFactory(parallelStream)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "tuple = tuples.get(2)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tuples = getTuples(rollupStream)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assertEquals(7.5,avgi.doubleValue(),0.001)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assert(tuples.size() == 3)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(10,maxf.doubleValue(),0.01)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "tuples = getTuples(rollupStream)@@@79@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "assertEquals(10,minf.doubleValue(),0.01)@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(14,mini.doubleValue(),0.01)@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertTrue(bucket.equals(\"hello4\"))@@@89@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "assert(tuples.size() == 3)@@@80@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RollupStream rollupStream = new RollupStream(stream,buckets,metrics)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "rollupStream = new RollupStream(stream,buckets,metrics)@@@78@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(\"hello4\",bucket)@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Metric(( metrics1 = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(14,sumi.doubleValue(),0.01)@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(9,maxf.doubleValue(),0.001)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@85@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertEquals(18,sumf.doubleValue(),0.001)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\",\"qt\",\"/export\")@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertEquals(0,mini.doubleValue(),0.001)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "tuple = tuples.get(0)@@@81@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Double maxi = tuple.getDouble(\"max(a_i)\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(9.5,avgi.doubleValue(),0.001)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(1,count.doubleValue(),0.01)@@@121@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(14,avgi.doubleValue(),0.01)@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(11,maxi.doubleValue(),0.01)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(5.5,avgf.doubleValue(),0.01)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "assertEquals(5.5,avgf.doubleValue(),0.001)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "tuple = tuples.get(0)@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Double avgi = tuple.getDouble(\"avg(a_i)\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(15,sumi.longValue())@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assertEquals(4,mini.doubleValue(),0.001)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(2,count.doubleValue(),0.01)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(10,maxf.doubleValue(),0.001)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Double minf = tuple.getDouble(\"min(a_f)\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<Tuple> tuples = getTuples(rollupStream)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\",\"partitionKeys\",\"a_s\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(7.5,avgi.doubleValue(),0.01)@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "assertTrue(bucket.equals(\"hello3\"))@@@86@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Tuple tuple = tuples.get(0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "rollupStream = new RollupStream(stream,buckets1,metrics1)@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(13,maxi.doubleValue(),0.001)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(1,minf.doubleValue(),0.001)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "testRollupStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
87 [style = filled, label = "String bucket = tuple.getString(\"a_s\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(7,maxf.doubleValue(),0.01)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "String bucket = tuple.getString(\"a_s\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@82@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "Bucket(( buckets1 = {new Bucket(\"a_s\")}@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertEquals(14,maxi.doubleValue(),0.01)@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testRollupStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(26,sumf.doubleValue(),0.001)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "assertEquals(2,count.doubleValue(),0.001)@@@79@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "stream = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "new UpdateRequest().add(id,\"12\",\"a_s\",null,\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Bucket(( buckets = {new Bucket(\"a_s\")}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(4,tuples.size())@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(4.5,avgf.doubleValue(),0.001)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Double avgf = tuple.getDouble(\"avg(a_f)\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97->75 [style = solid, label="stream"];
50->0 [style = bold, label=""];
44->108 [style = solid, label="stream"];
8->98 [style = bold, label=""];
83->33 [style = bold, label=""];
116->121 [style = bold, label=""];
93->78 [style = bold, label=""];
17->121 [style = dashed, label="0"];
119->113 [style = bold, label=""];
56->108 [style = solid, label="metrics"];
40->28 [style = bold, label=""];
66->67 [style = bold, label=""];
62->53 [style = bold, label=""];
92->84 [style = bold, label=""];
53->97 [style = solid, label="sParamsA"];
13->34 [style = bold, label=""];
11->79 [style = bold, label=""];
110->62 [style = bold, label=""];
0->115 [style = dashed, label="0"];
0->44 [style = solid, label="sParamsA"];
102->105 [style = bold, label=""];
68->86 [style = bold, label=""];
85->8 [style = bold, label=""];
13->122 [style = solid, label="rollupStream"];
94->77 [style = bold, label=""];
49->1 [style = bold, label=""];
50->115 [style = bold, label=""];
29->12 [style = bold, label=""];
90->94 [style = bold, label=""];
28->11 [style = bold, label=""];
54->70 [style = bold, label=""];
20->54 [style = bold, label=""];
18->75 [style = solid, label="metrics1"];
34->82 [style = bold, label=""];
109->102 [style = bold, label=""];
52->59 [style = bold, label=""];
43->70 [style = solid, label="bucket"];
13->122 [style = bold, label=""];
78->51 [style = bold, label=""];
9->42 [style = bold, label=""];
115->44 [style = bold, label=""];
60->28 [style = solid, label="bucket"];
18->75 [style = bold, label=""];
70->4 [style = bold, label=""];
108->100 [style = bold, label=""];
75->5 [style = bold, label=""];
114->124 [style = bold, label=""];
48->72 [style = bold, label=""];
33->46 [style = bold, label=""];
73->24 [style = bold, label=""];
39->61 [style = bold, label=""];
53->97 [style = bold, label=""];
15->96 [style = bold, label=""];
74->85 [style = bold, label=""];
1->25 [style = bold, label=""];
84->57 [style = bold, label=""];
39->16 [style = solid, label="bucket"];
111->110 [style = bold, label=""];
17->116 [style = bold, label=""];
75->5 [style = solid, label="rollupStream"];
17->74 [style = bold, label=""];
47->56 [style = bold, label=""];
115->44 [style = solid, label="sParamsA"];
60->14 [style = bold, label=""];
71->87 [style = bold, label=""];
118->126 [style = bold, label=""];
104->50 [style = bold, label=""];
81->89 [style = bold, label=""];
82->71 [style = bold, label=""];
27->62 [style = bold, label=""];
117->50 [style = bold, label=""];
122->120 [style = bold, label=""];
101->107 [style = bold, label=""];
120->118 [style = bold, label=""];
42->22 [style = bold, label=""];
63->124 [style = dashed, label="0"];
72->66 [style = bold, label=""];
99->18 [style = bold, label=""];
56->13 [style = solid, label="metrics"];
61->49 [style = bold, label=""];
19->65 [style = bold, label=""];
98->63 [style = bold, label=""];
58->93 [style = bold, label=""];
4->16 [style = bold, label=""];
91->83 [style = bold, label=""];
103->106 [style = bold, label=""];
31->80 [style = bold, label=""];
77->92 [style = bold, label=""];
107->103 [style = bold, label=""];
38->58 [style = bold, label=""];
87->52 [style = bold, label=""];
113->114 [style = bold, label=""];
85->119 [style = dashed, label="0"];
56->13 [style = bold, label=""];
0->44 [style = bold, label=""];
32->26 [style = bold, label=""];
43->35 [style = bold, label=""];
16->116 [style = dashed, label="0"];
47->13 [style = solid, label="buckets"];
6->31 [style = bold, label=""];
44->47 [style = bold, label=""];
46->30 [style = bold, label=""];
44->13 [style = solid, label="stream"];
98->114 [style = dashed, label="0"];
21->60 [style = bold, label=""];
27->123 [style = dashed, label="0"];
67->15 [style = bold, label=""];
97->99 [style = bold, label=""];
121->125 [style = bold, label=""];
87->66 [style = solid, label="bucket"];
89->68 [style = bold, label=""];
16->17 [style = bold, label=""];
125->119 [style = bold, label=""];
30->76 [style = bold, label=""];
74->125 [style = dashed, label="0"];
13->34 [style = solid, label="rollupStream"];
24->64 [style = bold, label=""];
69->9 [style = bold, label=""];
96->81 [style = bold, label=""];
76->90 [style = bold, label=""];
99->75 [style = solid, label="buckets1"];
36->29 [style = bold, label=""];
7->10 [style = bold, label=""];
25->2 [style = bold, label=""];
22->73 [style = bold, label=""];
8->113 [style = dashed, label="0"];
45->21 [style = bold, label=""];
105->101 [style = bold, label=""];
64->40 [style = bold, label=""];
14->69 [style = bold, label=""];
108->100 [style = solid, label="rollupStream"];
51->91 [style = bold, label=""];
41->19 [style = bold, label=""];
35->39 [style = bold, label=""];
12->38 [style = bold, label=""];
100->109 [style = bold, label=""];
65->43 [style = bold, label=""];
112->111 [style = bold, label=""];
55->45 [style = bold, label=""];
37->50 [style = bold, label=""];
79->6 [style = bold, label=""];
59->15 [style = solid, label="bucket"];
122->118 [style = solid, label="parallelStream"];
59->88 [style = bold, label=""];
124->123 [style = bold, label=""];
5->23 [style = bold, label=""];
2->20 [style = bold, label=""];
23->36 [style = bold, label=""];
69->79 [style = solid, label="bucket"];
63->27 [style = bold, label=""];
126->52 [style = bold, label=""];
122->120 [style = solid, label="parallelStream"];
3->95 [style = bold, label=""];
106->112 [style = bold, label=""];
88->3 [style = bold, label=""];
34->122 [style = dashed, label="0"];
27->108 [style = bold, label=""];
26->48 [style = bold, label=""];
86->55 [style = bold, label=""];
80->7 [style = bold, label=""];
10->41 [style = bold, label=""];
47->108 [style = solid, label="buckets"];
95->32 [style = bold, label=""];
}
