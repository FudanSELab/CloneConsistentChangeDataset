digraph {
13 [style = filled, label = "final long sleepTimeInsideMail = 44@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final long sleepTimeOutsideMail = 42@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),is(0L))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RunnableWithException completeFutureTask = null@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int numberOfProcessCalls = 10@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TaskIOMetricGroup ioMetricGroup = task.getEnvironment().getMetricGroup().getIOMetricGroup()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testProcessWithUnAvailableOutput['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "waitingThread = new WaitingThread(executor,completeFutureTask,sleepTimeInsideMail,sleepTimeOutsideMail)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "task.invoke()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testProcessWithAvailableOutput['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.greaterThanOrEqualTo(sleepTimeOutsideMail))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "long totalDuration = System.currentTimeMillis() - startTs@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "long startTs = System.currentTimeMillis()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testProcessWithUnAvailableOutput['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final int numberOfProcessCalls = 10@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final RunnableWithException completeFutureTask = null@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long startTs = System.currentTimeMillis()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "@Nullable WaitingThread waitingThread = null@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final AvailabilityTestInputProcessor inputProcessor = new AvailabilityTestInputProcessor(numberOfProcessCalls)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "task.invoke()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{if (waitingThread != null) {waitingThread.join()}}@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.lessThanOrEqualTo(totalDuration - sleepTimeInsideMail))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
16->15 [style = bold, label=""];
6->9 [style = solid, label="numberOfProcessCalls"];
12->22 [style = solid, label="sleepTimeOutsideMail"];
18->23 [style = bold, label=""];
3->15 [style = solid, label="startTs"];
26->1 [style = solid, label="numberOfProcessCalls"];
22->19 [style = solid, label="waitingThread"];
8->19 [style = bold, label=""];
15->10 [style = solid, label="totalDuration"];
7->22 [style = solid, label="completeFutureTask"];
23->4 [style = bold, label=""];
14->22 [style = dashed, label="0"];
7->0 [style = bold, label=""];
1->22 [style = solid, label="executor"];
20->6 [style = bold, label=""];
26->24 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
6->8 [style = solid, label="numberOfProcessCalls"];
23->15 [style = solid, label="startTs"];
20->6 [style = solid, label="numberOfProcessCalls"];
12->13 [style = bold, label=""];
7->22 [style = bold, label=""];
13->22 [style = solid, label="sleepTimeInsideMail"];
0->14 [style = bold, label=""];
22->18 [style = bold, label=""];
17->12 [style = bold, label=""];
21->20 [style = bold, label=""];
15->11 [style = bold, label=""];
12->11 [style = solid, label="sleepTimeOutsideMail"];
5->12 [style = bold, label=""];
11->10 [style = bold, label=""];
13->10 [style = solid, label="sleepTimeInsideMail"];
20->8 [style = solid, label="numberOfProcessCalls"];
25->26 [style = bold, label=""];
10->2 [style = bold, label=""];
13->6 [style = bold, label=""];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
13->21 [style = bold, label=""];
24->6 [style = bold, label=""];
26->24 [style = solid, label="numberOfProcessCalls"];
4->16 [style = bold, label=""];
2->8 [style = bold, label=""];
}
