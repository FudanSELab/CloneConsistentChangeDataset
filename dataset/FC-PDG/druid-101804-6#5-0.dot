digraph {
0 [style = filled, label = "testQuery(\"SELECT textcat(dim1, CAST(m2 as VARCHAR)) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expression_Virtual_Column(\"v0\",\"concat(\"dim1\",CAST(\"m2\", 'STRING'))\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d5f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d63,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d67,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d6b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d6f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d73))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testTextcat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testConcat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testQuery(\"SELECT CONCAT(dim1, CONCAT(dim2,'x'), m2, 9999, dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expression_Virtual_Column(\"v0\",\"concat(\"dim1\",concat(\"dim2\",'x'),\"m2\",9999,\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e7f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e83,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e8c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e90,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e94,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e98))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testQuery(\"SELECT textcat(dim1, CAST(m2 as VARCHAR)) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expressionVirtualColumn(\"v0\",\"concat(\"dim1\",CAST(\"m2\", 'STRING'))\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1def,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1df3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1df7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1dfb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1dff,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e03))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testQuery(\"SELECT textcat(dim1, dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expression_Virtual_Column(\"v0\",\"concat(\"dim1\",\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d19,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d1d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d21,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d25,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d29,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1d2d))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testQuery(\"SELECT textcat(dim1, dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expressionVirtualColumn(\"v0\",\"concat(\"dim1\",\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1da9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1dad,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1db1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1db5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1db9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1dbd))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testQuery(\"SELECT CONCAT(dim1, '-', dim1, '_', dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expression_Virtual_Column(\"v0\",\"concat(\"dim1\",'-',\"dim1\",'_',\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e39,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e3d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e41,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e45,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e49,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1e4d))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testTextcat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
2->5 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
8->6 [style = bold, label=""];
0->3 [style = dashed, label="0"];
6->7 [style = bold, label=""];
0->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
