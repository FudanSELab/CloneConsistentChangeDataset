digraph {
12 [style = filled, label = "this.node1FlowConfigClient.createFlowConfig(flowConfig1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Thread.sleep(5)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.fail(\"No leader found in service cluster\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "attempt++@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "this.node2FlowConfigClient.createFlowConfig(flowConfig2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "logger.info(\"Total scheduling time in ms: \" + (schedulingEndTime - schedulingStartTime))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(e.getStatus(),HttpStatus.CONFLICT_409)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.fail(\"Get should have gotten a 409 error\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.fail(\"Create Again should pass without complaining that the spec already exists.\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "int masterJobs = master.flowCatalog.getSpecs().size()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "boolean assertSuccess = false@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "master = this.node2GobblinServiceManager@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<String,String> flowProperties = Maps.newHashMap()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertSuccess = true@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "attempt < 800@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "FlowConfig flowConfig2 = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME_2).setFlowName(TEST_FLOW_NAME_2)).setTemplateUris(TEST_TEMPLATE_URI_2).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE_2).setRunImmediately(true)).setProperties(new StringMap(flowProperties))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "long schedulingEndTime = System.currentTimeMillis()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "GobblinServiceManager master@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY,TEST_SOURCE_NAME)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCreate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "flowProperties.put(\"param1\",\"value1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FlowConfig flowConfig1 = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME_1).setFlowName(TEST_FLOW_NAME_1)).setTemplateUris(TEST_TEMPLATE_URI_1).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE_1).setRunImmediately(true)).setProperties(new StringMap(flowProperties))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCreateAgain['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "RestLiResponseException e@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "this.node2GobblinServiceManager.isLeader()@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "master = this.node1GobblinServiceManager@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "long schedulingStartTime = System.currentTimeMillis()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "this.node1GobblinServiceManager.isLeader()@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "masterJobs == 2@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "this.node2FlowConfigClient.createFlowConfig(flowConfig2)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCreateAgain['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int attempt = 0@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_DESTINATION_IDENTIFIER_KEY,TEST_SINK_NAME)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(assertSuccess,\"Flow that was created is not reflecting in FlowCatalog\")@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.fail(\"Get should have gotten a 409 error\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28->33 [style = dotted, label="false"];
31->25 [style = dotted, label="true"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
34->20 [style = solid, label="attempt"];
22->16 [style = bold, label=""];
19->29 [style = bold, label=""];
4->12 [style = solid, label="flowConfig1"];
31->24 [style = bold, label=""];
11->4 [style = bold, label=""];
26->34 [style = bold, label=""];
5->4 [style = solid, label="flowProperties"];
25->32 [style = bold, label=""];
18->12 [style = bold, label=""];
27->17 [style = solid, label="assertSuccess"];
16->34 [style = bold, label=""];
2->18 [style = bold, label=""];
28->26 [style = bold, label=""];
22->28 [style = bold, label=""];
30->34 [style = bold, label=""];
20->31 [style = bold, label=""];
4->2 [style = bold, label=""];
2->8 [style = solid, label="flowConfig2"];
12->0 [style = bold, label=""];
31->20 [style = dotted, label="true"];
21->17 [style = solid, label="assertSuccess"];
27->35 [style = bold, label=""];
2->12 [style = bold, label=""];
15->5 [style = bold, label=""];
31->32 [style = dotted, label="true"];
7->14 [style = bold, label=""];
2->19 [style = solid, label="flowConfig2"];
25->27 [style = bold, label=""];
35->23 [style = bold, label=""];
3->5 [style = bold, label=""];
21->31 [style = bold, label=""];
5->2 [style = solid, label="flowProperties"];
5->6 [style = bold, label=""];
28->33 [style = bold, label=""];
31->35 [style = bold, label=""];
20->31 [style = solid, label="attempt"];
12->8 [style = bold, label=""];
24->25 [style = bold, label=""];
34->31 [style = solid, label="attempt"];
6->10 [style = bold, label=""];
22->16 [style = dotted, label="true"];
28->26 [style = dotted, label="true"];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
35->23 [style = solid, label="schedulingEndTime"];
13->5 [style = bold, label=""];
33->30 [style = bold, label=""];
23->17 [style = bold, label=""];
14->8 [style = bold, label=""];
31->24 [style = dotted, label="true"];
22->28 [style = dotted, label="false"];
29->22 [style = bold, label=""];
24->25 [style = solid, label="masterJobs"];
12->19 [style = bold, label=""];
7->1 [style = dotted, label="true"];
25->27 [style = dotted, label="true"];
18->23 [style = solid, label="schedulingStartTime"];
28->30 [style = dotted, label="false"];
32->20 [style = bold, label=""];
34->21 [style = bold, label=""];
10->11 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
