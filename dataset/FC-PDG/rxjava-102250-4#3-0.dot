digraph {
7 [style = filled, label = "return@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "innerComplete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "decrementAndGet() == 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "maxConcurrency != Integer.MAX_VALUE@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "drain()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkTerminate(d,q)@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "active.decrementAndGet()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "boolean d = active.decrementAndGet() == 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "upstream.request(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "maxConcurrency != Integer.MAX_VALUE@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "errors.tryTerminateConsumer(downstream)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "set.delete(inner)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "upstream.request(1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "innerComplete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "drainLoop()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "innerComplete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "d && (q == null || q.isEmpty())@@@7@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "get() == 0 && compareAndSet(0,1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SpscLinkedArrayQueue<R> q = queue.get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "InnerObserver inner@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
1->5 [style = solid, label="inner"];
20->1 [style = dotted, label="true"];
3->10 [style = bold, label=""];
8->14 [style = bold, label=""];
4->19 [style = solid, label="q"];
0->4 [style = bold, label=""];
13->7 [style = bold, label=""];
19->10 [style = bold, label=""];
19->6 [style = bold, label=""];
18->1 [style = dotted, label="true"];
9->0 [style = dotted, label="true"];
13->17 [style = bold, label=""];
15->1 [style = dotted, label="true"];
12->2 [style = bold, label=""];
6->11 [style = bold, label=""];
20->5 [style = bold, label=""];
9->13 [style = dotted, label="true"];
4->3 [style = solid, label="q"];
18->5 [style = bold, label=""];
6->13 [style = bold, label=""];
19->10 [style = dotted, label="true"];
9->0 [style = bold, label=""];
5->9 [style = bold, label=""];
16->13 [style = bold, label=""];
3->13 [style = bold, label=""];
9->2 [style = dotted, label="false"];
9->17 [style = dotted, label="true"];
9->6 [style = dotted, label="true"];
3->6 [style = bold, label=""];
3->10 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
8->2 [style = bold, label=""];
4->19 [style = bold, label=""];
9->8 [style = dotted, label="false"];
9->4 [style = dotted, label="true"];
16->6 [style = bold, label=""];
11->13 [style = bold, label=""];
15->5 [style = bold, label=""];
7->17 [style = bold, label=""];
14->2 [style = bold, label=""];
8->14 [style = dotted, label="true"];
9->3 [style = dotted, label="true"];
0->19 [style = solid, label="d"];
0->3 [style = solid, label="d"];
9->12 [style = dotted, label="false"];
3->16 [style = dotted, label="true"];
12->8 [style = bold, label=""];
4->3 [style = bold, label=""];
13->7 [style = dotted, label="true"];
9->19 [style = dotted, label="true"];
9->12 [style = bold, label=""];
6->11 [style = dotted, label="true"];
}
