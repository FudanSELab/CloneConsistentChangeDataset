digraph {
6 [style = filled, label = "assertThat(applicationFeatureId.getMemberLogicalName(),is(\"foo\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(applicationFeatureId.getMemberName(),is(\"foo\"))@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "val applicationFeatureId = ApplicationFeatureId.newMember(\"com.mycompany.Bar#foo\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(applicationFeatureId.getMemberName(),is(\"foo\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "val applicationFeatureId = ApplicationFeatureId.newMember(\"com.mycompany.Bar\",\"foo\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "using_fullyQualifiedClassName_and_MemberName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "using_fullyQualifiedClassName_and_MemberName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(applicationFeatureId.getSort(),is(ApplicationFeatureSort.MEMBER))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "givenMember['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(applicationFeatureId.getTypeSimpleName(),is(\"Bar\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(applicationFeatureId.getNamespace(),is(\"com.mycompany\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
3->6 [style = bold, label=""];
4->1 [style = bold, label=""];
3->5 [style = bold, label=""];
10->9 [style = bold, label=""];
7->1 [style = bold, label=""];
1->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
5->6 [style = dashed, label="0"];
9->2 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
}
