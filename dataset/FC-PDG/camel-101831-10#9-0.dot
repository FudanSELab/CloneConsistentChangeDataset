digraph {
2 [style = filled, label = "mockResultCommit.assertIsSatisfied()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(true,gitDir.exists())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Exchange ex2 = mockResultCommit.getExchanges().get(1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getMessage().getBody().getShortMessage())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertNotNull(gcResult)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(commitMessage,ex2.getMessage().getBody().getShortMessage())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "commitConsumerTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getMessage().getBody())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "template.requestBodyAndHeader(\"direct:commit\",\"\",GitConstants.GIT_COMMIT_MESSAGE,commitMessage)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "fileToAdd1.createNewFile()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "status = git.status().call()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "git.close()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "commitConsumerTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Exchange ex1 = mockResultCommit.getExchanges().get(0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Status status = git.status().call()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mockResultCommit.expectedMessageCount(2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "gcTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "git.close()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "validateGitLogs(git,\"Test test Commit\",commitMessage)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "validateGitLogs(git,commitMessage,commitMessage)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(commitMessage,ex2.getMessage().getBody())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "git.commit().setMessage(\"Test test Commit\").call()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Properties gcResult = template.requestBodyAndHeader(\"direct:gc\",\"\",GitConstants.GIT_FILE_NAME,filenameToAdd,)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "MockEndpoint mockResultCommit = getMockEndpoint(\"mock:result-commit\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->29 [style = bold, label=""];
30->33 [style = bold, label=""];
26->17 [style = bold, label=""];
20->34 [style = bold, label=""];
10->19 [style = bold, label=""];
9->27 [style = dashed, label="0"];
34->30 [style = solid, label="gcResult"];
16->23 [style = bold, label=""];
5->14 [style = bold, label=""];
32->19 [style = bold, label=""];
10->13 [style = dashed, label="0"];
28->20 [style = solid, label="git"];
12->6 [style = bold, label=""];
34->30 [style = bold, label=""];
11->18 [style = bold, label=""];
2->12 [style = bold, label=""];
19->5 [style = bold, label=""];
6->27 [style = bold, label=""];
25->24 [style = bold, label=""];
15->17 [style = bold, label=""];
0->10 [style = bold, label=""];
14->4 [style = bold, label=""];
8->20 [style = bold, label=""];
18->1 [style = bold, label=""];
23->21 [style = bold, label=""];
1->16 [style = bold, label=""];
7->2 [style = bold, label=""];
9->15 [style = bold, label=""];
15->26 [style = dashed, label="0"];
3->13 [style = bold, label=""];
21->7 [style = bold, label=""];
4->8 [style = bold, label=""];
31->28 [style = bold, label=""];
22->24 [style = bold, label=""];
0->32 [style = bold, label=""];
6->9 [style = bold, label=""];
13->7 [style = solid, label="git"];
24->3 [style = bold, label=""];
13->0 [style = bold, label=""];
20->11 [style = bold, label=""];
27->26 [style = bold, label=""];
29->13 [style = bold, label=""];
}
