digraph {
29 [style = filled, label = "return MALFORMED@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int byte3 = 0@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return incompleteStateFor(byte1,byte2,byte3)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UNSAFE.getByte(bytes,offset++) > (byte)0xBF@@@48@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "byte(( bytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "byte(( bytes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "offset >= offsetLimit@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "index >= limit@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "long offset = ARRAY_BASE_OFFSET + index@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "byte2 = UNSAFE.getByte(bytes,offset++)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "partialIsValidUtf8['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "byte1 < (byte)0xC2 || bytes(index++( > (byte)0xBF@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "byte3 = (byte)(state >> 16)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "byte2 = bytes(index++(@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "(index | limit | bytes.length - limit) < 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "index >= limit@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "return partialIsValidUtf8(bytes,index,limit)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "state != COMPLETE@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "return state@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final long offsetLimit = ARRAY_BASE_OFFSET + limit@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "int index@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "byte1 < (byte)0xF0@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "offset >= offsetLimit@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int byte1 = (byte)state@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int byte3 = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || bytes(index++( > (byte)0xBF@@@43@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final int index@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "byte3 = bytes(index++(@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "partialIsValidUtf8['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "byte2 == 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "int limit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "partialIsValidUtf8['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || bytes(index++( > (byte)0xBF@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "byte1 < (byte)0xE0@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "index >= limit@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "byte1 < (byte)0xC2 || UNSAFE.getByte(bytes,offset++) > (byte)0xBF@@@14@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "byte3 == 0@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return incompleteStateFor(byte1,byte2,byte3)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "byte2 == 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int state@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final long offsetLimit = getArrayBaseOffset() + limit@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@48@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "index >= limit@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "return MALFORMED@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "byte(( bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return MALFORMED@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw new ArrayIndexOutOfBoundsException(String.format(\"Array length=%d, index=%d, limit=%d\",bytes.length,index,limit))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "byte3 = UNSAFE.getByte(bytes,offset++)@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "return partialIsValidUtf8(bytes,offset,(int)(offsetLimit - offset))@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "int state@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "byte3 == 0@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int state@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "byte2 = bytes(index++(@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "byte2 == 0@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "return MALFORMED@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "int byte1 = (byte)state@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "byte2 = UNSAFE.getByte(bytes,offset++)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UNSAFE.getByte(bytes,offset++) > (byte)0xBF@@@26@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "byte3 = UnsafeUtil.getByte(bytes,offset++)@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "byte1 < (byte)0xC2 || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "final int limit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@26@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "long offset = getArrayBaseOffset() + index@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "byte2 == 0@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "offset >= offsetLimit@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final int index@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "offset >= offsetLimit@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47->44 [style = solid, label="byte2"];
47->9 [style = bold, label=""];
14->19 [style = dotted, label="true"];
4->25 [style = bold, label=""];
64->68 [style = solid, label="index"];
70->65 [style = bold, label=""];
37->25 [style = solid, label="byte2"];
2->31 [style = solid, label="byte1"];
73->64 [style = solid, label="index"];
22->49 [style = solid, label="byte3"];
70->58 [style = dotted, label="false"];
11->26 [style = solid, label="offset"];
25->29 [style = bold, label=""];
25->29 [style = dotted, label="true"];
8->51 [style = bold, label=""];
19->6 [style = solid, label="state"];
72->33 [style = bold, label=""];
3->18 [style = bold, label=""];
21->56 [style = bold, label=""];
21->26 [style = dotted, label="true"];
21->8 [style = dotted, label="false"];
63->61 [style = solid, label="state"];
71->10 [style = solid, label="byte1"];
11->32 [style = solid, label="offset"];
33->50 [style = solid, label="byte3"];
60->64 [style = dotted, label="true"];
8->74 [style = dotted, label="true"];
17->25 [style = solid, label="byte2"];
17->7 [style = solid, label="byte2"];
7->40 [style = dotted, label="true"];
31->36 [style = solid, label="offset"];
7->37 [style = bold, label=""];
8->72 [style = bold, label=""];
58->60 [style = solid, label="byte3"];
62->61 [style = dotted, label="true"];
50->59 [style = dotted, label="true"];
43->40 [style = solid, label="offset"];
38->36 [style = solid, label="offsetLimit"];
7->12 [style = dotted, label="true"];
6->2 [style = bold, label=""];
22->25 [style = solid, label="byte3"];
71->8 [style = solid, label="byte1"];
54->74 [style = bold, label=""];
5->31 [style = solid, label="bytes"];
71->74 [style = solid, label="byte1"];
5->27 [style = solid, label="bytes"];
26->6 [style = dotted, label="true"];
14->34 [style = dotted, label="true"];
35->18 [style = dotted, label="true"];
27->47 [style = dashed, label="0"];
75->55 [style = bold, label=""];
74->75 [style = bold, label=""];
74->75 [style = dotted, label="true"];
49->29 [style = dotted, label="true"];
64->50 [style = solid, label="byte3"];
37->16 [style = solid, label="byte2"];
73->55 [style = solid, label="index"];
8->42 [style = dotted, label="true"];
0->11 [style = bold, label=""];
21->2 [style = dotted, label="true"];
31->42 [style = dashed, label="0"];
43->49 [style = solid, label="offset"];
41->36 [style = solid, label="bytes"];
33->70 [style = bold, label=""];
5->32 [style = solid, label="bytes"];
27->9 [style = solid, label="offset"];
8->60 [style = dotted, label="false"];
2->28 [style = solid, label="byte1"];
0->1 [style = bold, label=""];
67->55 [style = solid, label="limit"];
49->29 [style = bold, label=""];
70->65 [style = dotted, label="true"];
42->13 [style = bold, label=""];
69->65 [style = solid, label="bytes"];
48->16 [style = solid, label="byte3"];
19->21 [style = solid, label="state"];
19->10 [style = solid, label="state"];
51->74 [style = solid, label="byte2"];
43->42 [style = solid, label="offset"];
44->36 [style = solid, label="offset"];
13->57 [style = dotted, label="true"];
8->42 [style = bold, label=""];
73->57 [style = solid, label="index"];
14->0 [style = bold, label=""];
34->6 [style = solid, label="state"];
18->27 [style = bold, label=""];
64->68 [style = bold, label=""];
48->4 [style = solid, label="offset"];
71->17 [style = solid, label="byte1"];
9->54 [style = dashed, label="0"];
2->8 [style = bold, label=""];
13->54 [style = dotted, label="true"];
2->8 [style = solid, label="byte1"];
35->20 [style = dotted, label="true"];
39->43 [style = solid, label="index"];
46->1 [style = solid, label="limit"];
54->35 [style = dotted, label="true"];
43->36 [style = solid, label="offset"];
34->1 [style = solid, label="limit"];
2->16 [style = solid, label="byte1"];
40->16 [style = solid, label="byte2"];
58->60 [style = bold, label=""];
60->50 [style = bold, label=""];
27->57 [style = dashed, label="0"];
69->57 [style = solid, label="bytes"];
20->44 [style = dashed, label="0"];
21->36 [style = bold, label=""];
73->74 [style = solid, label="index"];
50->55 [style = bold, label=""];
13->36 [style = bold, label=""];
46->0 [style = solid, label="limit"];
47->28 [style = solid, label="byte2"];
49->36 [style = bold, label=""];
9->28 [style = dotted, label="true"];
51->13 [style = solid, label="byte2"];
57->74 [style = solid, label="byte2"];
67->68 [style = solid, label="limit"];
47->9 [style = solid, label="offset"];
69->55 [style = solid, label="bytes"];
25->36 [style = bold, label=""];
24->36 [style = solid, label="offsetLimit"];
61->71 [style = bold, label=""];
8->72 [style = dotted, label="false"];
66->69 [style = dotted, label="true"];
26->6 [style = bold, label=""];
39->0 [style = solid, label="index"];
18->20 [style = bold, label=""];
71->21 [style = bold, label=""];
65->52 [style = solid, label="index"];
9->44 [style = bold, label=""];
37->15 [style = solid, label="byte2"];
34->2 [style = solid, label="state"];
59->55 [style = bold, label=""];
72->10 [style = solid, label="byte2"];
73->56 [style = solid, label="index"];
36->55 [style = dashed, label="0"];
18->27 [style = dotted, label="true"];
35->49 [style = dotted, label="false"];
34->10 [style = solid, label="state"];
35->3 [style = bold, label=""];
66->73 [style = dotted, label="true"];
45->46 [style = dotted, label="true"];
35->74 [style = bold, label=""];
17->60 [style = bold, label=""];
44->33 [style = bold, label=""];
45->34 [style = dotted, label="true"];
14->23 [style = dotted, label="true"];
9->20 [style = bold, label=""];
63->58 [style = solid, label="state"];
71->21 [style = solid, label="byte1"];
39->1 [style = solid, label="index"];
2->35 [style = solid, label="byte1"];
25->49 [style = dashed, label="0"];
35->25 [style = dotted, label="false"];
45->41 [style = dotted, label="true"];
8->35 [style = bold, label=""];
38->4 [style = solid, label="offsetLimit"];
9->28 [style = bold, label=""];
6->55 [style = bold, label=""];
46->38 [style = solid, label="limit"];
65->52 [style = bold, label=""];
73->50 [style = solid, label="index"];
40->12 [style = solid, label="offset"];
31->13 [style = dotted, label="true"];
2->44 [style = solid, label="byte1"];
8->13 [style = dotted, label="true"];
27->20 [style = solid, label="byte2"];
10->30 [style = bold, label=""];
32->4 [style = solid, label="offset"];
40->49 [style = solid, label="byte2"];
53->55 [style = bold, label=""];
27->28 [style = solid, label="byte2"];
44->36 [style = bold, label=""];
65->64 [style = solid, label="index"];
71->50 [style = solid, label="byte1"];
57->35 [style = solid, label="byte2"];
32->25 [style = solid, label="byte3"];
12->15 [style = bold, label=""];
53->71 [style = dotted, label="true"];
37->65 [style = dashed, label="0"];
15->30 [style = bold, label=""];
24->9 [style = solid, label="offsetLimit"];
37->32 [style = solid, label="offset"];
7->37 [style = dotted, label="true"];
20->33 [style = bold, label=""];
73->65 [style = solid, label="index"];
19->2 [style = solid, label="state"];
58->50 [style = solid, label="byte3"];
2->25 [style = solid, label="byte1"];
38->21 [style = bold, label=""];
53->21 [style = dotted, label="true"];
11->27 [style = solid, label="offset"];
43->44 [style = solid, label="offset"];
24->38 [style = dashed, label="0"];
50->59 [style = bold, label=""];
34->0 [style = solid, label="limit"];
68->10 [style = bold, label=""];
66->63 [style = dotted, label="true"];
2->15 [style = solid, label="byte1"];
63->71 [style = solid, label="state"];
57->54 [style = solid, label="index"];
21->8 [style = dotted, label="true"];
68->50 [style = bold, label=""];
62->61 [style = bold, label=""];
21->8 [style = bold, label=""];
12->15 [style = dotted, label="true"];
5->25 [style = solid, label="bytes"];
10->30 [style = solid, label="byte3"];
71->35 [style = solid, label="byte1"];
69->56 [style = solid, label="bytes"];
35->7 [style = dotted, label="false"];
31->56 [style = dashed, label="0"];
21->56 [style = dotted, label="true"];
65->50 [style = solid, label="byte2"];
52->60 [style = bold, label=""];
18->44 [style = bold, label=""];
24->21 [style = bold, label=""];
23->1 [style = solid, label="index"];
69->50 [style = solid, label="bytes"];
18->47 [style = dotted, label="true"];
16->49 [style = bold, label=""];
32->16 [style = solid, label="byte3"];
56->6 [style = dotted, label="true"];
45->0 [style = bold, label=""];
24->12 [style = solid, label="offsetLimit"];
11->43 [style = dashed, label="0"];
32->4 [style = bold, label=""];
35->30 [style = dotted, label="false"];
8->33 [style = dotted, label="false"];
8->31 [style = dotted, label="true"];
4->16 [style = bold, label=""];
72->70 [style = solid, label="byte2"];
5->37 [style = solid, label="bytes"];
33->60 [style = solid, label="byte3"];
11->36 [style = solid, label="offset"];
1->11 [style = bold, label=""];
13->57 [style = bold, label=""];
35->44 [style = dotted, label="true"];
38->9 [style = solid, label="offsetLimit"];
34->73 [style = dashed, label="0"];
67->54 [style = solid, label="limit"];
24->26 [style = solid, label="offsetLimit"];
33->36 [style = bold, label=""];
30->32 [style = dotted, label="true"];
23->0 [style = solid, label="index"];
65->17 [style = solid, label="byte2"];
17->49 [style = solid, label="byte2"];
56->6 [style = bold, label=""];
54->35 [style = bold, label=""];
53->62 [style = dotted, label="true"];
18->47 [style = bold, label=""];
70->52 [style = dotted, label="true"];
43->48 [style = solid, label="offset"];
50->55 [style = solid, label="index"];
66->67 [style = dotted, label="true"];
71->56 [style = solid, label="byte1"];
56->55 [style = solid, label="index"];
30->4 [style = dotted, label="true"];
65->10 [style = solid, label="byte2"];
31->36 [style = bold, label=""];
30->32 [style = bold, label=""];
8->51 [style = dotted, label="true"];
67->52 [style = solid, label="limit"];
43->38 [style = bold, label=""];
20->36 [style = solid, label="offset"];
34->24 [style = solid, label="limit"];
74->55 [style = solid, label="index"];
5->36 [style = solid, label="bytes"];
41->48 [style = solid, label="bytes"];
41->47 [style = solid, label="bytes"];
20->36 [style = bold, label=""];
7->40 [style = bold, label=""];
26->62 [style = dashed, label="0"];
12->52 [style = dashed, label="0"];
0->1 [style = dotted, label="true"];
25->50 [style = dashed, label="0"];
2->49 [style = solid, label="byte1"];
66->53 [style = bold, label=""];
7->10 [style = bold, label=""];
3->20 [style = solid, label="byte2"];
1->43 [style = bold, label=""];
35->3 [style = dotted, label="true"];
30->25 [style = bold, label=""];
16->25 [style = bold, label=""];
73->62 [style = solid, label="index"];
42->36 [style = bold, label=""];
52->17 [style = bold, label=""];
20->74 [style = dashed, label="0"];
23->11 [style = solid, label="index"];
26->2 [style = bold, label=""];
24->4 [style = solid, label="offsetLimit"];
28->44 [style = bold, label=""];
64->10 [style = solid, label="byte3"];
56->55 [style = bold, label=""];
69->74 [style = solid, label="bytes"];
10->49 [style = solid, label="byte3"];
8->35 [style = dotted, label="false"];
11->37 [style = solid, label="offset"];
28->20 [style = bold, label=""];
44->33 [style = dotted, label="true"];
49->36 [style = solid, label="offset"];
48->4 [style = bold, label=""];
27->9 [style = bold, label=""];
22->30 [style = solid, label="byte3"];
35->22 [style = dotted, label="false"];
67->62 [style = solid, label="limit"];
30->49 [style = bold, label=""];
52->17 [style = dotted, label="true"];
21->26 [style = bold, label=""];
32->64 [style = dashed, label="0"];
3->44 [style = solid, label="byte2"];
72->50 [style = solid, label="byte2"];
10->50 [style = bold, label=""];
29->36 [style = bold, label=""];
57->54 [style = bold, label=""];
25->36 [style = solid, label="offset"];
60->64 [style = bold, label=""];
22->7 [style = bold, label=""];
41->40 [style = solid, label="bytes"];
63->53 [style = solid, label="state"];
8->50 [style = dotted, label="false"];
35->17 [style = bold, label=""];
7->10 [style = dotted, label="false"];
45->39 [style = dotted, label="true"];
68->10 [style = dotted, label="true"];
37->40 [style = dashed, label="0"];
32->48 [style = dashed, label="0"];
11->31 [style = solid, label="offset"];
37->12 [style = solid, label="offset"];
2->20 [style = solid, label="byte1"];
48->49 [style = solid, label="byte3"];
38->26 [style = solid, label="offsetLimit"];
8->31 [style = bold, label=""];
31->13 [style = bold, label=""];
0->43 [style = bold, label=""];
38->12 [style = solid, label="offsetLimit"];
13->74 [style = bold, label=""];
3->18 [style = solid, label="byte2"];
11->25 [style = solid, label="offset"];
11->24 [style = bold, label=""];
51->13 [style = bold, label=""];
37->12 [style = bold, label=""];
53->62 [style = bold, label=""];
40->12 [style = bold, label=""];
41->44 [style = solid, label="bytes"];
14->5 [style = dotted, label="true"];
20->33 [style = dotted, label="true"];
35->17 [style = dotted, label="false"];
18->9 [style = dotted, label="true"];
10->25 [style = solid, label="byte3"];
34->21 [style = solid, label="state"];
4->68 [style = dashed, label="0"];
41->42 [style = solid, label="bytes"];
69->64 [style = solid, label="bytes"];
74->55 [style = bold, label=""];
30->48 [style = dotted, label="true"];
60->68 [style = dotted, label="true"];
12->30 [style = bold, label=""];
17->22 [style = bold, label=""];
8->70 [style = dotted, label="false"];
5->20 [style = solid, label="bytes"];
62->71 [style = bold, label=""];
43->47 [style = solid, label="offset"];
70->58 [style = bold, label=""];
4->49 [style = bold, label=""];
41->49 [style = solid, label="bytes"];
40->15 [style = solid, label="byte2"];
17->16 [style = solid, label="byte2"];
43->26 [style = solid, label="offset"];
4->16 [style = dotted, label="true"];
11->20 [style = solid, label="offset"];
30->48 [style = bold, label=""];
40->48 [style = solid, label="offset"];
42->36 [style = solid, label="offset"];
2->42 [style = solid, label="byte1"];
42->13 [style = dotted, label="true"];
}
