digraph {
45 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "stringStream(a.path()).forEach(null)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "stringStream(a.path()).forEach(null)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "cpb.prependTo(REST_converters,a.converters())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "b.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "b.setIfNotEmpty(RESTOP_httpMethod,\"delete\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cpb.prependTo(REST_guards,reverse(a.guards()))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "b.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "cpb.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "b.prependTo(REST_guards,reverse(a.guards()))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "cpb.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RestDelete a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "cpb.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "b.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_httpMethod,\"get\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "VarResolverSession vr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "cpb.set(REST_serializers,merge(ConverterUtils.toType(cpb.peek(REST_serializers),),a.serializers()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cpb.prependTo(RESTOP_matchers,a.matchers())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "cpb.set(REST_encoders,merge(ConverterUtils.toType(cpb.peek(REST_encoders),),a.encoders()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "RestGet a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_httpMethod,\"delete\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "b.prependTo(RESTOP_matchers,a.matchers())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "b.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "cpb.set(REST_encoders,merge(ConverterUtils.toType(cpb.peek(REST_encoders),),a.encoders()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cpb.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "ContextPropertiesBuilder b@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "AnnotationInfo<RestGet> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_path,a.value())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cpb.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "b.setIfNotEmpty(RESTOP_path,a.value())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "b.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->51 [style = bold, label=""];
46->42 [style = bold, label=""];
21->10 [style = bold, label=""];
27->32 [style = dotted, label="true"];
34->25 [style = bold, label=""];
42->50 [style = bold, label=""];
13->36 [style = dashed, label="0"];
38->24 [style = bold, label=""];
25->41 [style = bold, label=""];
11->34 [style = dashed, label="0"];
6->42 [style = dashed, label="0"];
8->17 [style = dotted, label="true"];
50->20 [style = bold, label=""];
1->3 [style = bold, label=""];
4->21 [style = bold, label=""];
44->15 [style = bold, label=""];
24->34 [style = bold, label=""];
31->36 [style = bold, label=""];
9->48 [style = bold, label=""];
17->32 [style = dashed, label="0"];
20->14 [style = bold, label=""];
6->31 [style = dashed, label="0"];
3->22 [style = dashed, label="0"];
4->39 [style = dashed, label="0"];
2->9 [style = bold, label=""];
36->26 [style = bold, label=""];
21->38 [style = dashed, label="0"];
11->19 [style = bold, label=""];
1->28 [style = dashed, label="0"];
17->49 [style = dashed, label="0"];
14->44 [style = bold, label=""];
15->18 [style = bold, label=""];
3->4 [style = bold, label=""];
43->46 [style = bold, label=""];
19->16 [style = bold, label=""];
23->35 [style = bold, label=""];
29->28 [style = bold, label=""];
15->35 [style = dashed, label="0"];
27->30 [style = dotted, label="true"];
16->41 [style = dashed, label="0"];
14->23 [style = dashed, label="0"];
33->40 [style = bold, label=""];
8->12 [style = dotted, label="true"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
5->31 [style = bold, label=""];
9->29 [style = dashed, label="0"];
35->37 [style = bold, label=""];
43->45 [style = dotted, label="true"];
5->46 [style = dashed, label="0"];
7->2 [style = bold, label=""];
6->13 [style = bold, label=""];
26->23 [style = bold, label=""];
18->37 [style = dashed, label="0"];
39->38 [style = bold, label=""];
22->39 [style = bold, label=""];
43->49 [style = dotted, label="true"];
14->15 [style = bold, label=""];
13->20 [style = bold, label=""];
8->0 [style = dotted, label="true"];
7->33 [style = dashed, label="0"];
43->47 [style = dotted, label="true"];
27->5 [style = bold, label=""];
2->40 [style = dashed, label="0"];
19->25 [style = dashed, label="0"];
18->7 [style = bold, label=""];
9->1 [style = bold, label=""];
37->33 [style = bold, label=""];
48->1 [style = bold, label=""];
10->24 [style = dashed, label="0"];
28->22 [style = bold, label=""];
40->29 [style = bold, label=""];
20->26 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
