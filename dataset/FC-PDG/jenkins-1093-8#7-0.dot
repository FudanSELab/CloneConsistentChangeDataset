digraph {
21 [style = filled, label = "assertEquals(2,upstreamProjects.size())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "dependencyExclusion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "FreeStyleBuild upstreamBuild = j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dependencyExclusion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "FreeStyleProject upstream2 = createFreeStyleProjectWithFingerprints(singleContents2,singleFiles2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "upstreamBuild.delete()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<AbstractProject> downstreamProjects2 = upstream2.getDownstreamProjects()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(1,downstreamProjects2.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "j.jenkins.rebuildDependencyGraph()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Jenkins.get().rebuildDependencyGraph()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "multipleUpstreamDependencies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "j.assertBuildStatusSuccess(upstream2.scheduleBuild2(0).get())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(1,downstreamProjects.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(0,upstreamProjects.size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(doubleContents,doubleFiles)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->22 [style = bold, label=""];
3->10 [style = bold, label=""];
20->3 [style = bold, label=""];
18->20 [style = bold, label=""];
7->24 [style = dashed, label="0"];
8->0 [style = bold, label=""];
14->21 [style = bold, label=""];
6->26 [style = bold, label=""];
23->15 [style = solid, label="upstream2"];
8->23 [style = bold, label=""];
9->2 [style = bold, label=""];
7->6 [style = bold, label=""];
4->8 [style = bold, label=""];
5->9 [style = bold, label=""];
13->24 [style = bold, label=""];
26->14 [style = bold, label=""];
19->13 [style = bold, label=""];
2->3 [style = bold, label=""];
21->25 [style = bold, label=""];
10->1 [style = bold, label=""];
12->10 [style = bold, label=""];
0->23 [style = dashed, label="0"];
8->25 [style = solid, label="upstream"];
11->8 [style = bold, label=""];
22->16 [style = solid, label="downstream"];
3->19 [style = bold, label=""];
15->16 [style = bold, label=""];
22->18 [style = bold, label=""];
17->8 [style = bold, label=""];
1->7 [style = bold, label=""];
0->5 [style = bold, label=""];
24->6 [style = bold, label=""];
3->12 [style = dashed, label="0"];
25->15 [style = bold, label=""];
2->12 [style = bold, label=""];
}
