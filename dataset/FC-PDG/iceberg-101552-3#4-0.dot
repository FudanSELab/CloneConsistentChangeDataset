digraph {
4 [style = filled, label = "pred.op()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "BoundPredicate<Long> pred@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Transform<Long,T> transform@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary + 1L))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "truncateLong['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Transform<Long,T> transform@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return predicate(Expression.Operation.NOT_EQ,name,transform.apply(boundary))@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "return predicate(pred.op(),name,transform.apply(boundary))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return predicate(Expression.Operation.GT,name,transform.apply(boundary - 1L))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "return predicate(Expression.Operation.LT,name,transform.apply(boundary))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary) - 1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "return null@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BoundPredicate<Long> pred@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "transform.apply(boundary - 1L).equals(transform.apply(boundary))@@@13@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary) + 1)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary - 1L))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "long boundary = pred.literal().value()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Transform<Long,Integer> transform@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "truncateLongStrict['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "transform.apply(boundary + 1L).equals(transform.apply(boundary))@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "String name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return predicate(Expression.Operation.GT,name,transform.apply(boundary))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "BoundPredicate<Long> pred@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return predicate(Expression.Operation.NOT_EQ,name,transform.apply(boundary))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "truncateLongStrict['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "return null@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary) - 1)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "return null@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary) + 1)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "return predicate(Expression.Operation.LT,name,transform.apply(boundary + 1L))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "return null@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return null@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10->0 [style = solid, label="boundary"];
6->16 [style = solid, label="name"];
4->18 [style = dotted, label="true"];
4->25 [style = bold, label=""];
10->21 [style = solid, label="boundary"];
4->15 [style = bold, label=""];
16->7 [style = bold, label=""];
20->25 [style = solid, label="name"];
4->7 [style = dotted, label="true"];
30->36 [style = bold, label=""];
10->28 [style = solid, label="boundary"];
29->30 [style = solid, label="name"];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
36->33 [style = bold, label=""];
4->33 [style = dotted, label="true"];
26->22 [style = bold, label=""];
4->30 [style = dotted, label="true"];
1->13 [style = dotted, label="true"];
13->24 [style = dashed, label="0"];
3->5 [style = bold, label=""];
10->2 [style = solid, label="boundary"];
6->7 [style = solid, label="name"];
0->30 [style = dashed, label="0"];
20->22 [style = solid, label="name"];
6->9 [style = solid, label="name"];
29->28 [style = solid, label="name"];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
1->6 [style = dotted, label="true"];
4->36 [style = bold, label=""];
10->22 [style = solid, label="boundary"];
35->10 [style = bold, label=""];
4->36 [style = dotted, label="true"];
10->30 [style = solid, label="boundary"];
2->16 [style = bold, label=""];
4->3 [style = bold, label=""];
28->37 [style = bold, label=""];
2->0 [style = dotted, label="true"];
15->28 [style = dashed, label="0"];
19->17 [style = dotted, label="true"];
10->12 [style = solid, label="boundary"];
8->14 [style = dotted, label="false"];
4->23 [style = dotted, label="true"];
0->23 [style = dashed, label="0"];
4->21 [style = bold, label=""];
4->18 [style = bold, label=""];
4->2 [style = bold, label=""];
21->25 [style = bold, label=""];
6->14 [style = solid, label="name"];
4->28 [style = dotted, label="true"];
0->7 [style = bold, label=""];
6->12 [style = solid, label="name"];
22->18 [style = bold, label=""];
8->12 [style = dotted, label="true"];
4->22 [style = dotted, label="true"];
29->33 [style = solid, label="name"];
2->37 [style = dashed, label="0"];
10->26 [style = solid, label="boundary"];
4->22 [style = bold, label=""];
20->26 [style = solid, label="name"];
4->2 [style = dotted, label="true"];
4->23 [style = bold, label=""];
10->16 [style = solid, label="boundary"];
4->26 [style = dotted, label="true"];
35->29 [style = dotted, label="true"];
4->9 [style = bold, label=""];
4->5 [style = dotted, label="true"];
10->23 [style = solid, label="boundary"];
37->30 [style = bold, label=""];
20->23 [style = solid, label="name"];
8->14 [style = bold, label=""];
15->21 [style = dashed, label="0"];
19->10 [style = bold, label=""];
4->15 [style = dotted, label="true"];
19->24 [style = dotted, label="true"];
4->33 [style = bold, label=""];
10->25 [style = solid, label="boundary"];
4->7 [style = bold, label=""];
4->21 [style = dotted, label="true"];
4->31 [style = bold, label=""];
4->37 [style = dotted, label="true"];
6->0 [style = solid, label="name"];
2->0 [style = bold, label=""];
4->3 [style = dotted, label="true"];
4->31 [style = dotted, label="true"];
2->25 [style = dashed, label="0"];
9->3 [style = bold, label=""];
29->37 [style = solid, label="name"];
10->36 [style = solid, label="boundary"];
10->14 [style = solid, label="boundary"];
10->15 [style = solid, label="boundary"];
4->5 [style = bold, label=""];
13->34 [style = dashed, label="0"];
8->12 [style = bold, label=""];
10->7 [style = solid, label="boundary"];
15->2 [style = bold, label=""];
25->23 [style = bold, label=""];
19->20 [style = dotted, label="true"];
1->11 [style = dotted, label="true"];
20->21 [style = solid, label="name"];
23->26 [style = bold, label=""];
4->26 [style = bold, label=""];
4->8 [style = dotted, label="true"];
4->25 [style = dotted, label="true"];
10->9 [style = solid, label="boundary"];
4->28 [style = bold, label=""];
2->16 [style = dotted, label="false"];
4->30 [style = bold, label=""];
4->37 [style = bold, label=""];
18->27 [style = bold, label=""];
6->15 [style = solid, label="name"];
10->37 [style = solid, label="boundary"];
4->27 [style = bold, label=""];
4->27 [style = dotted, label="true"];
10->4 [style = bold, label=""];
33->31 [style = bold, label=""];
35->34 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
1->10 [style = bold, label=""];
10->33 [style = solid, label="boundary"];
10->8 [style = solid, label="boundary"];
29->36 [style = solid, label="name"];
35->32 [style = dotted, label="true"];
}
