digraph {
15 [style = filled, label = "expectLastCall().anyTimes()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final OffsetAndMetadata offsetAndMetadata = new OffsetAndMetadata(0L)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "replay(activeTaskCreator,topologyBuilder,consumer,changeLogReader)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(assignment))).andStubReturn(asList(corruptedTask,nonRunningNonCorruptedTask))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "consumer.pause(taskId00Partitions)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "consumer.seek(t1p0,offsetAndMetadata)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "taskManager.setPartitionResetter(null)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final StateMachineTask nonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(nonCorruptedTask.state(),is(Task.State.RUNNING))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(nonRunningNonCorruptedTask.state(),is(Task.State.CREATED))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expect(consumer.assignment()).andReturn(taskId00Partitions)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "taskManager.handleCorruption(singletonMap(taskId00,taskId00Partitions))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "verify(activeTaskCreator)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "nonRunningNonCorruptedTask.setCommitNeeded()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "nonCorruptedTask.setCommitNeeded()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expect(consumer.committed(taskId00Partitions)).andReturn(singletonMap(t1p0,offsetAndMetadata))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "verify(consumer)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "taskManager.handleCorruption(singletonMap(taskId00,taskId00Partitions))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "shouldNotCommitNonRunningNonCorruptedTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "consumer.commitSync(eq(emptyMap()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(nonRunningNonCorruptedTask.commitPrepared)@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectLastCall()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "replay(activeTaskCreator,topologyBuilder,consumer,changeLogReader)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "replay(stateManager)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ProcessorStateManager stateManager = EasyMock.createStrictMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final StateMachineTask corruptedTask = new StateMachineTask(taskId00,taskId00Partitions,true,stateManager)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final StateMachineTask nonRunningNonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assignment.putAll(taskId01Assignment)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "taskManager.handleAssignment(assignment,emptyMap())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stateManager.markChangelogAsCorrupted(taskId00Partitions)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expectLastCall()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->3 [style = bold, label=""];
8->16 [style = bold, label=""];
18->31 [style = bold, label=""];
0->9 [style = bold, label=""];
11->10 [style = solid, label="assignment"];
1->8 [style = bold, label=""];
23->29 [style = solid, label="offsetAndMetadata"];
4->16 [style = solid, label="assignment"];
34->19 [style = bold, label=""];
16->10 [style = bold, label=""];
22->16 [style = bold, label=""];
2->6 [style = bold, label=""];
25->23 [style = bold, label=""];
12->21 [style = bold, label=""];
26->25 [style = bold, label=""];
10->35 [style = bold, label=""];
35->32 [style = bold, label=""];
3->13 [style = solid, label="stateManager"];
28->26 [style = bold, label=""];
10->17 [style = bold, label=""];
20->3 [style = bold, label=""];
36->3 [style = bold, label=""];
33->12 [style = bold, label=""];
18->7 [style = solid, label="corruptedTask"];
15->16 [style = bold, label=""];
3->31 [style = solid, label="stateManager"];
32->33 [style = bold, label=""];
3->0 [style = bold, label=""];
8->22 [style = bold, label=""];
3->18 [style = solid, label="stateManager"];
13->7 [style = solid, label="nonCorruptedTask"];
23->29 [style = bold, label=""];
5->19 [style = bold, label=""];
29->27 [style = bold, label=""];
30->11 [style = bold, label=""];
1->28 [style = bold, label=""];
7->5 [style = bold, label=""];
7->34 [style = bold, label=""];
9->18 [style = bold, label=""];
17->2 [style = bold, label=""];
13->31 [style = dashed, label="0"];
3->9 [style = solid, label="stateManager"];
18->34 [style = solid, label="corruptedTask"];
31->30 [style = bold, label=""];
7->34 [style = dashed, label="0"];
18->13 [style = bold, label=""];
27->24 [style = bold, label=""];
24->8 [style = bold, label=""];
19->15 [style = bold, label=""];
4->11 [style = bold, label=""];
13->4 [style = bold, label=""];
11->7 [style = bold, label=""];
31->34 [style = solid, label="nonRunningNonCorruptedTask"];
23->27 [style = solid, label="offsetAndMetadata"];
15->1 [style = bold, label=""];
6->12 [style = bold, label=""];
}
