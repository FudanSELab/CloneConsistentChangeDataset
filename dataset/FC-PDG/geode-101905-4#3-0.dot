digraph {
0 [style = filled, label = "verify(details,times(1)).incPrimaryTransfers(anyLong())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(stats,times(1)).startPrimaryTransfer(anyInt())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "bucketWrapperShouldRecordPrimaryTransfersPerRegionAfterMovePrimaryIsSuccessful['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "verify(details,times(1)).incPrimaryTransfers(0)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "verify(details,times(1)).incPrimaryTransfers(0)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "verify(details,times(1)).incPrimaryTransfers(anyLong())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "wrapper.moveBucket(sourceMember,targetMember,bucketId,colocatedRegionBytes)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "wrapper.movePrimary(sourceMember,targetMember,bucketId)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME)@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "verify(stats,times(1)).endPrimaryTransfer(anyInt(),anyBoolean(),anyLong())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "doReturn(true).when(delegate).movePrimary(sourceMember,targetMember,bucketId)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(stats,times(1)).endBucketTransfer(anyInt(),anyBoolean(),anyLong(),anyLong())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(delegate,times(1)).moveBucket(sourceMember,targetMember,bucketId,colocatedRegionBytes)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "details.getRegionPath().equals(PR_COLOCATED_REGION_NAME)@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "details.getRegionPath().equals(PR_COLOCATED_REGION_NAME)@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME)@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "bucketWrapperShouldDelegateMoveBucketToEnclosedOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verify(stats,times(1)).startBucketTransfer(anyInt())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "doReturn(true).when(delegate).moveBucket(sourceMember,targetMember,bucketId,colocatedRegionBytes)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
16->18 [style = bold, label=""];
13->12 [style = dotted, label="true"];
1->15 [style = dashed, label="0"];
2->3 [style = bold, label=""];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
14->17 [style = bold, label=""];
8->12 [style = dashed, label="0"];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
15->19 [style = bold, label=""];
10->9 [style = dotted, label="true"];
3->13 [style = dashed, label="0"];
10->7 [style = bold, label=""];
1->13 [style = bold, label=""];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
0->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
13->12 [style = bold, label=""];
19->14 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
10->13 [style = bold, label=""];
3->0 [style = dotted, label="true"];
10->9 [style = bold, label=""];
13->10 [style = dotted, label="false"];
2->7 [style = bold, label=""];
3->2 [style = dotted, label="false"];
2->8 [style = dotted, label="true"];
2->8 [style = bold, label=""];
9->13 [style = bold, label=""];
}
