digraph {
13 [style = filled, label = "assertEquals(0,MonitoringTask.instance.getFailedOperations().size())@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "waitForOperationsToComplete(operation)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test report\",new ConstructionTime(System.currentTimeMillis()),timeout,slowTimeout)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test report\",new ConstructionTime(System.currentTimeMillis()),timeout)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test abort\",new ConstructionTime(System.currentTimeMillis()),timeout)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(0,MonitoringTask.instance.getSlowOperations().size())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(1,MonitoringTask.instance.getFailedOperations().size())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testReport['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(operation.abort())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,MonitoringTask.instance.getFailedOperations().size())@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testReport['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testAbortIdemPotent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(operation.isCompleted())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(MonitoringTask.instance.logFailedOperations(ApproximateTime.currentTimeMillis()))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(operation.isSlow())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "MonitoringTask.instance.logFailedOperations(ApproximateTime.currentTimeMillis())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertFalse(MonitoringTask.instance.logSlowOperations(ApproximateTime.currentTimeMillis()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertTrue(operation.isAborted())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->17 [style = dashed, label="0"];
2->1 [style = bold, label=""];
12->11 [style = bold, label=""];
17->2 [style = solid, label="operation"];
1->3 [style = bold, label=""];
3->15 [style = bold, label=""];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
9->10 [style = bold, label=""];
11->2 [style = bold, label=""];
14->1 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
3->5 [style = bold, label=""];
5->6 [style = bold, label=""];
17->2 [style = bold, label=""];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
2->14 [style = bold, label=""];
4->11 [style = dashed, label="0"];
5->7 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
4->2 [style = solid, label="operation"];
11->2 [style = solid, label="operation"];
2->8 [style = bold, label=""];
}
