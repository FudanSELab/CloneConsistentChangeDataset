digraph {
1 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertSchemaExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertGetAllSchemaNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,ShardingSphereSchema> schemas = createSchemas()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertGetAllSchemaNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(metaDataMap,mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()),is(schemas.keySet()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertTrue(ProxyContext.getInstance().schemaExists(\"schema\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = createMetaDataMap()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertFalse(ProxyContext.getInstance().schemaExists(\"schema_2\"))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Map<String,ShardingSphereSchema> schemas = mockSchemas(Collections.emptyMap())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemas,mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()),is(metaDataMap.keySet()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3->6 [style = dashed, label="0"];
7->6 [style = solid, label="metaDataMap"];
13->3 [style = solid, label="schemas"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
11->12 [style = bold, label=""];
9->7 [style = bold, label=""];
4->0 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
10->13 [style = bold, label=""];
5->11 [style = dashed, label="0"];
7->2 [style = bold, label=""];
0->13 [style = dashed, label="0"];
6->8 [style = bold, label=""];
5->8 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
0->3 [style = solid, label="schemas"];
13->2 [style = bold, label=""];
}
