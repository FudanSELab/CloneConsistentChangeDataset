digraph {
28 [style = filled, label = "joined.process(processor)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cb3c1a@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testOuterJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "shouldRequireCopartitionedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testOuterJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "driver.setUp(builder,stateDir)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "i < 2@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "i++@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(streamTopic,tableTopic)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "i++@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < 2@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41->0 [style = bold, label=""];
31->9 [style = bold, label=""];
15->37 [style = solid, label="expectedKeys"];
44->15 [style = bold, label=""];
49->48 [style = bold, label=""];
12->26 [style = solid, label="i"];
9->37 [style = dotted, label="true"];
29->34 [style = bold, label=""];
25->35 [style = bold, label=""];
9->37 [style = bold, label=""];
7->9 [style = solid, label="i"];
47->49 [style = bold, label=""];
7->9 [style = bold, label=""];
37->31 [style = bold, label=""];
21->1 [style = bold, label=""];
2->15 [style = bold, label=""];
2->49 [style = dashed, label="0"];
1->12 [style = bold, label=""];
23->17 [style = bold, label=""];
8->27 [style = bold, label=""];
31->37 [style = solid, label="i"];
15->38 [style = bold, label=""];
15->13 [style = bold, label=""];
33->3 [style = bold, label=""];
6->26 [style = solid, label="i"];
12->19 [style = solid, label="i"];
9->33 [style = bold, label=""];
25->35 [style = solid, label="i"];
6->19 [style = solid, label="i"];
7->31 [style = solid, label="i"];
9->31 [style = dotted, label="true"];
32->7 [style = bold, label=""];
26->6 [style = bold, label=""];
34->35 [style = solid, label="i"];
4->0 [style = bold, label=""];
3->10 [style = bold, label=""];
15->26 [style = solid, label="expectedKeys"];
0->23 [style = bold, label=""];
5->43 [style = dashed, label="0"];
19->26 [style = bold, label=""];
36->42 [style = solid, label="stream2"];
13->5 [style = bold, label=""];
36->16 [style = bold, label=""];
36->16 [style = solid, label="stream2"];
14->8 [style = bold, label=""];
34->35 [style = bold, label=""];
36->42 [style = bold, label=""];
19->26 [style = dotted, label="true"];
35->25 [style = dotted, label="true"];
4->41 [style = dashed, label="0"];
27->18 [style = bold, label=""];
8->40 [style = dashed, label="0"];
15->24 [style = solid, label="expectedKeys"];
22->2 [style = bold, label=""];
11->21 [style = bold, label=""];
16->42 [style = dashed, label="0"];
14->39 [style = dashed, label="0"];
35->32 [style = bold, label=""];
13->38 [style = dashed, label="0"];
45->44 [style = bold, label=""];
28->41 [style = bold, label=""];
35->24 [style = bold, label=""];
48->46 [style = bold, label=""];
12->6 [style = solid, label="i"];
23->46 [style = dashed, label="0"];
40->27 [style = bold, label=""];
24->25 [style = bold, label=""];
39->40 [style = bold, label=""];
27->28 [style = solid, label="processor"];
2->4 [style = solid, label="builder"];
2->44 [style = dashed, label="0"];
42->28 [style = bold, label=""];
43->39 [style = bold, label=""];
38->43 [style = bold, label=""];
34->25 [style = solid, label="i"];
20->11 [style = bold, label=""];
44->41 [style = solid, label="builder"];
10->20 [style = bold, label=""];
35->24 [style = dotted, label="true"];
18->36 [style = bold, label=""];
6->19 [style = bold, label=""];
5->14 [style = bold, label=""];
31->9 [style = solid, label="i"];
2->17 [style = solid, label="builder"];
16->28 [style = bold, label=""];
25->24 [style = solid, label="i"];
34->24 [style = solid, label="i"];
19->6 [style = dotted, label="true"];
12->19 [style = bold, label=""];
7->37 [style = solid, label="i"];
17->29 [style = bold, label=""];
44->17 [style = solid, label="builder"];
28->4 [style = bold, label=""];
19->30 [style = bold, label=""];
}
