digraph {
11 [style = filled, label = "node.waitForInitialCreate(5,TimeUnit.SECONDS)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(10,TimeUnit.SECONDS))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "killSession(curator)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "i < 5@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "curator.delete().forPath(originalNode)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{node.close()}@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(10,TimeUnit.SECONDS))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "node.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String originalNode = node.getActualPath()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String path = node.getActualPath()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertNodeExists(curator,originalNode)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{node.close()}@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(10,TimeUnit.SECONDS))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
29->24 [style = solid, label="path"];
10->4 [style = solid, label="stat"];
23->16 [style = bold, label=""];
2->15 [style = solid, label="curator"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
9->11 [style = bold, label=""];
10->14 [style = solid, label="stat"];
20->24 [style = dotted, label="true"];
10->14 [style = bold, label=""];
2->6 [style = bold, label=""];
20->17 [style = dotted, label="true"];
20->26 [style = dotted, label="true"];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
14->5 [style = bold, label=""];
11->29 [style = bold, label=""];
21->20 [style = solid, label="i"];
20->27 [style = dotted, label="true"];
7->1 [style = solid, label="originalNode"];
19->2 [style = bold, label=""];
1->28 [style = dashed, label="0"];
25->6 [style = bold, label=""];
24->17 [style = solid, label="stat"];
27->20 [style = solid, label="i"];
25->28 [style = solid, label="observer"];
2->6 [style = solid, label="curator"];
7->10 [style = solid, label="originalNode"];
15->26 [style = bold, label=""];
26->22 [style = bold, label=""];
29->28 [style = bold, label=""];
20->18 [style = bold, label=""];
3->10 [style = bold, label=""];
21->27 [style = solid, label="i"];
12->2 [style = bold, label=""];
11->13 [style = dashed, label="0"];
28->21 [style = bold, label=""];
21->20 [style = bold, label=""];
20->23 [style = bold, label=""];
13->7 [style = bold, label=""];
24->17 [style = bold, label=""];
2->1 [style = solid, label="curator"];
20->23 [style = dotted, label="true"];
10->4 [style = bold, label=""];
4->14 [style = dashed, label="0"];
7->29 [style = dashed, label="0"];
20->22 [style = dotted, label="true"];
29->28 [style = solid, label="path"];
22->24 [style = bold, label=""];
17->27 [style = bold, label=""];
6->9 [style = bold, label=""];
7->8 [style = solid, label="originalNode"];
2->25 [style = bold, label=""];
29->16 [style = solid, label="path"];
4->5 [style = bold, label=""];
27->20 [style = bold, label=""];
11->7 [style = bold, label=""];
20->15 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
9->13 [style = bold, label=""];
}
