digraph {
11 [style = filled, label = "Integer maxBins = 32@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "System.out.println(\"Test Error: \" + testErr)@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "model.save(jsc.sc(),\"target/tmp/myGradientBoostingRegressionModel\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String datapath = \"data/mllib/sample_libsvm_data.txt\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "boostingStrategy.treeStrategy().setCategoricalFeaturesInfo(categoricalFeaturesInfo)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "SparkConf sparkConf = new SparkConf().setAppName(\"JavaGradientBoostedTreesRegressionExample\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "int numClasses = 2@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DecisionTreeModel sameModel = DecisionTreeModel.load(jsc.sc(),\"target/tmp/myDecisionTreeClassificationModel\")@@@33@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "JavaPairRDD<Double,Double> predictionAndLabel = testData.mapToPair(null)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "System.out.println(\"Learned regression GBT model:\" + model.toDebugString())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "jsc.stop()@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "boostingStrategy.setNumIterations(3)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "System.out.println(\"Test Mean Squared Error: \" + testMSE)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "JavaRDD<LabeledPoint> testData = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String impurity = \"gini\"@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.println(\"Learned classification tree model:\" + model.toDebugString())@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final DecisionTreeModel model = DecisionTree.trainClassifier(trainingData,numClasses,categoricalFeaturesInfo,impurity,maxDepth,maxBins)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "System.out.println(\"Test Error: \" + testErr)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "int maxBins = 32@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "final GradientBoostedTreesModel model = GradientBoostedTrees.train(trainingData,boostingStrategy)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "double testErr = predictionAndLabel.filter(null).count() / (double)testData.count()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "BoostingStrategy boostingStrategy = BoostingStrategy.defaultParams(\"Regression\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SparkConf sparkConf = new SparkConf().setAppName(\"JavaDecisionTreeClassificationExample\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "JavaSparkContext jsc = new JavaSparkContext(sparkConf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "model.save(jsc.sc(),\"target/tmp/myDecisionTreeClassificationModel\")@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JavaRDD<LabeledPoint> data = MLUtils.loadLibSVMFile(jsc.sc(),datapath).toJavaRDD()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<Integer,Integer> categoricalFeaturesInfo = new HashMap<>()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "DecisionTreeModel model = DecisionTree.trainClassifier(trainingData,numClasses,categoricalFeaturesInfo,impurity,maxDepth,maxBins)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "model.save(jsc.sc(),\"target/tmp/myDecisionTreeClassificationModel\")@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Integer numClasses = 2@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "JavaPairRDD<Double,Double> predictionAndLabel = testData.mapToPair(new PairFunction<LabeledPoint,Double,Double>(){@Override public Tuple2<Double,Double> call(LabeledPoint p){return new Tuple2<>(model.predict(p.features()),p.label())}})@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Double testMSE = predictionAndLabel.map(new Function<Tuple2<Double,Double>,Double>(){@Override public Double call(Tuple2<Double,Double> pl){Double diff = pl._1() - pl._2()return diff * diff}}).reduce(new Function2<Double,Double,Double>(){@Override public Double call(Double a,Double b){return a + b}}) / data.count()@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "boostingStrategy.getTreeStrategy().setMaxDepth(5)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "DecisionTreeModel sameModel = DecisionTreeModel.load(jsc.sc(),\"target/tmp/myDecisionTreeClassificationModel\")@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "GradientBoostedTreesModel sameModel = GradientBoostedTreesModel.load(jsc.sc(),\"target/tmp/myGradientBoostingRegressionModel\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "JavaRDD<LabeledPoint> trainingData = splits(0(@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int maxDepth = 5@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "JavaPairRDD<Double,Double> predictionAndLabel = testData.mapToPair(new PairFunction<LabeledPoint,Double,Double>(){@Override public Tuple2<Double,Double> call(LabeledPoint p){return new Tuple2<>(model.predict(p.features()),p.label())}})@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<Integer,Integer> categoricalFeaturesInfo = new HashMap<>()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "System.out.println(\"Learned classification tree model:\" + model.toDebugString())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a80094)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->29 [style = dashed, label="0"];
31->24 [style = solid, label="testErr"];
2->35 [style = bold, label=""];
14->32 [style = solid, label="categoricalFeaturesInfo"];
42->34 [style = bold, label=""];
16->13 [style = bold, label=""];
19->2 [style = solid, label="splits"];
19->17 [style = solid, label="splits"];
39->44 [style = bold, label=""];
23->27 [style = bold, label=""];
17->3 [style = solid, label="trainingData"];
25->13 [style = bold, label=""];
10->8 [style = solid, label="testErr"];
26->29 [style = solid, label="maxDepth"];
13->29 [style = solid, label="categoricalFeaturesInfo"];
7->3 [style = solid, label="impurity"];
6->18 [style = bold, label=""];
31->24 [style = bold, label=""];
27->28 [style = bold, label=""];
4->15 [style = bold, label=""];
17->29 [style = solid, label="trainingData"];
16->25 [style = dashed, label="0"];
34->15 [style = bold, label=""];
44->10 [style = bold, label=""];
13->3 [style = solid, label="categoricalFeaturesInfo"];
8->6 [style = bold, label=""];
19->17 [style = bold, label=""];
20->1 [style = bold, label=""];
9->10 [style = bold, label=""];
35->43 [style = bold, label=""];
17->39 [style = solid, label="trainingData"];
5->12 [style = dotted, label="true"];
35->39 [style = solid, label="boostingStrategy"];
30->29 [style = bold, label=""];
29->21 [style = bold, label=""];
14->26 [style = dashed, label="0"];
22->12 [style = dotted, label="true"];
26->30 [style = bold, label=""];
30->29 [style = solid, label="maxBins"];
7->14 [style = bold, label=""];
7->26 [style = bold, label=""];
3->9 [style = bold, label=""];
22->4 [style = bold, label=""];
42->12 [style = dotted, label="true"];
11->3 [style = solid, label="maxBins"];
10->33 [style = solid, label="testMSE"];
21->31 [style = bold, label=""];
17->2 [style = bold, label=""];
10->8 [style = bold, label=""];
11->3 [style = bold, label=""];
40->36 [style = bold, label=""];
9->21 [style = dashed, label="0"];
13->7 [style = bold, label=""];
15->20 [style = bold, label=""];
7->29 [style = solid, label="impurity"];
5->4 [style = bold, label=""];
4->34 [style = dashed, label="0"];
16->3 [style = solid, label="numClasses"];
43->41 [style = bold, label=""];
32->39 [style = bold, label=""];
10->33 [style = bold, label=""];
25->29 [style = solid, label="numClasses"];
36->38 [style = bold, label=""];
14->3 [style = solid, label="maxDepth"];
1->19 [style = bold, label=""];
33->37 [style = bold, label=""];
34->15 [style = solid, label="sparkConf"];
2->25 [style = bold, label=""];
14->32 [style = bold, label=""];
14->11 [style = bold, label=""];
11->30 [style = dashed, label="0"];
18->0 [style = bold, label=""];
37->40 [style = bold, label=""];
41->14 [style = bold, label=""];
4->15 [style = solid, label="sparkConf"];
24->23 [style = bold, label=""];
2->16 [style = bold, label=""];
}
