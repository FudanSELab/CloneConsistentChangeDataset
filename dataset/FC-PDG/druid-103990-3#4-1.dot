digraph {
4 [style = filled, label = "assertEquals(expectedDay2,actual.getRows())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(expectedDay3,actual.getRows())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<Row> expectedDay3 = Collections.singletonList(JAN_3_M_10)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testMissingDaysAtBeginingAndAtTheEnd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(JAN_1,actual.getDateTime())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "actual = iter.next()@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "intervals.add(INTERVAL_JAN_1_5)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<Row> expectedDay1 = Collections.emptyList()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "rows.add(JAN_5_M_10)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(JAN_1,actual.getDateTime())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "intervals = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "rows.add(JAN_4_M_10)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(JAN_4,actual.getDateTime())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(expectedDay4,actual.getRows())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(JAN_3,actual.getDateTime())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "actual = iter.next()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testMissingDaysAtBeginingAndAtTheEnd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Iterator<RowBucket> iter = rbi.iterator()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(JAN_3,actual.getDateTime())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<Row> expectedDay4 = Collections.emptyList()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(JAN_2,actual.getDateTime())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<Row> expectedDay3 = Collections.emptyList()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(JAN_5,actual.getDateTime())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "rows = new ArrayList<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(expectedDay1,actual.getRows())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(JAN_4,actual.getDateTime())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "RowBucket actual = iter.next()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "List<Row> expectedDay4 = Collections.singletonList(JAN_4_M_10)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "actual = iter.next()@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Row> expectedDay2 = Collections.singletonList(JAN_2_M_10)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "intervals = new ArrayList<>()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "rows = new ArrayList<>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "List<Row> expectedDay5 = Collections.singletonList(JAN_5_M_10)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(expectedDay2,actual.getRows())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Assert.assertEquals(JAN_2,actual.getDateTime())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "testMultipleMissingDaysMultipleRowAtTheEnd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(expectedDay3,actual.getRows())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(expectedDay1,actual.getRows())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(expectedDay5,actual.getRows())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "actual = iter.next()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "rows.add(JAN_2_M_10)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->3 [style = solid, label="intervals"];
16->33 [style = dashed, label="0"];
1->4 [style = solid, label="expectedDay2"];
31->25 [style = bold, label=""];
10->15 [style = bold, label=""];
14->30 [style = bold, label=""];
27->14 [style = bold, label=""];
36->34 [style = bold, label=""];
1->40 [style = bold, label=""];
20->40 [style = dashed, label="0"];
33->28 [style = bold, label=""];
9->28 [style = dashed, label="0"];
22->29 [style = dashed, label="0"];
6->13 [style = solid, label="expectedDay1"];
18->12 [style = bold, label=""];
4->31 [style = dashed, label="0"];
1->20 [style = bold, label=""];
20->0 [style = solid, label="expectedDay3"];
30->32 [style = bold, label=""];
6->27 [style = solid, label="expectedDay1"];
43->37 [style = bold, label=""];
1->10 [style = solid, label="expectedDay2"];
26->6 [style = bold, label=""];
8->44 [style = bold, label=""];
3->22 [style = bold, label=""];
25->7 [style = bold, label=""];
21->18 [style = bold, label=""];
4->0 [style = bold, label=""];
23->9 [style = solid, label="expectedDay4"];
0->7 [style = bold, label=""];
19->24 [style = bold, label=""];
9->41 [style = bold, label=""];
23->43 [style = dashed, label="0"];
19->24 [style = solid, label="seq"];
6->1 [style = bold, label=""];
29->27 [style = bold, label=""];
7->33 [style = bold, label=""];
18->17 [style = solid, label="rows"];
23->28 [style = solid, label="expectedDay4"];
6->11 [style = solid, label="expectedDay1"];
20->23 [style = bold, label=""];
5->6 [style = bold, label=""];
42->6 [style = bold, label=""];
13->27 [style = dashed, label="0"];
15->31 [style = bold, label=""];
10->32 [style = dashed, label="0"];
11->10 [style = bold, label=""];
43->45 [style = solid, label="expectedDay4"];
37->34 [style = solid, label="expectedDay5"];
0->25 [style = dashed, label="0"];
7->16 [style = bold, label=""];
24->17 [style = bold, label=""];
15->4 [style = bold, label=""];
32->15 [style = bold, label=""];
1->32 [style = solid, label="expectedDay2"];
17->3 [style = bold, label=""];
39->38 [style = bold, label=""];
8->21 [style = bold, label=""];
20->25 [style = solid, label="expectedDay3"];
12->39 [style = dashed, label="0"];
41->45 [style = bold, label=""];
21->19 [style = solid, label="rows"];
23->2 [style = bold, label=""];
44->18 [style = bold, label=""];
40->43 [style = bold, label=""];
12->39 [style = bold, label=""];
37->8 [style = bold, label=""];
12->19 [style = bold, label=""];
35->36 [style = bold, label=""];
2->24 [style = solid, label="intervals"];
40->16 [style = solid, label="expectedDay3"];
38->17 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
45->35 [style = bold, label=""];
3->29 [style = bold, label=""];
16->9 [style = bold, label=""];
22->13 [style = bold, label=""];
17->3 [style = solid, label="seq"];
11->30 [style = dashed, label="0"];
2->8 [style = bold, label=""];
8->44 [style = dashed, label="0"];
}
