digraph {
7 [style = filled, label = "int bufferSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "@NonNull Publisher<? extends T> source1@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "int bufferSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableSequenceEqualSingle<>(source1,source2,isEqual,bufferSize))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return RxJavaPlugins.onAssembly(new FlowableSequenceEqualSingle<>(source1,source2,isEqual,bufferSize))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ObjectHelper.verifyPositive(bufferSize,\"bufferSize\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int bufferSize@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sequenceEqual['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "sequenceEqual['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "@NonNull ObservableSource<? extends T> source1@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "@NonNull BiPredicate<? super T,? super T> isEqual@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Objects.requireNonNull(source1,\"source1 is null\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "@NonNull Publisher<? extends T> source2@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "@NonNull Publisher<? extends T> source2@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "@NonNull ObservableSource<? extends T> source2@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sequenceEqual['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Objects.requireNonNull(source2,\"source2 is null\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "@NonNull Publisher<? extends T> source1@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Objects.requireNonNull(isEqual,\"isEqual is null\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "@NonNull BiPredicate<? super T,? super T> isEqual@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "@NonNull BiPredicate<? super T,? super T> isEqual@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
14->0 [style = solid, label="bufferSize"];
15->4 [style = solid, label="isEqual"];
3->0 [style = solid, label="isEqual"];
18->19 [style = solid, label="source1"];
7->18 [style = dashed, label="0"];
7->5 [style = solid, label="bufferSize"];
1->0 [style = solid, label="source1"];
20->9 [style = bold, label=""];
11->10 [style = dotted, label="true"];
20->17 [style = dotted, label="true"];
7->14 [style = dashed, label="0"];
17->5 [style = solid, label="bufferSize"];
0->19 [style = dashed, label="0"];
11->12 [style = dotted, label="true"];
11->14 [style = dotted, label="true"];
6->0 [style = solid, label="source2"];
16->8 [style = solid, label="source2"];
13->0 [style = solid, label="source2"];
2->9 [style = bold, label=""];
15->19 [style = solid, label="isEqual"];
11->13 [style = dotted, label="true"];
9->8 [style = bold, label=""];
11->9 [style = bold, label=""];
3->4 [style = solid, label="isEqual"];
10->0 [style = solid, label="isEqual"];
5->19 [style = bold, label=""];
12->9 [style = solid, label="source1"];
17->19 [style = solid, label="bufferSize"];
16->19 [style = solid, label="source2"];
13->8 [style = solid, label="source2"];
5->0 [style = bold, label=""];
2->6 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
2->7 [style = dotted, label="true"];
12->0 [style = solid, label="source1"];
7->0 [style = solid, label="bufferSize"];
20->18 [style = dotted, label="true"];
14->5 [style = solid, label="bufferSize"];
1->9 [style = solid, label="source1"];
6->8 [style = solid, label="source2"];
8->4 [style = bold, label=""];
4->5 [style = bold, label=""];
18->9 [style = solid, label="source1"];
20->15 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
10->4 [style = solid, label="isEqual"];
}
