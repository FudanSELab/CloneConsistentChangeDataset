digraph {
7 [style = filled, label = "final RelJsonWriter writer = new RelJsonWriter()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String expected = \"LogicalSortExchange(distribution=(random(, collation=((0(()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(s,isLinux(expected))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "root.explain(writer)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RelNode root = createSortPlan(RelDistributions.hash(Lists.newArrayList(0)))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String s = deserializeAndDumpToTextFormat(getSchema(root),json)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String expected = \"LogicalSortExchange(distribution=(hash(0((, collation=((0(()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RelNode root = createSortPlan(RelDistributions.RANDOM_DISTRIBUTED)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testWriteSortExchangeWithHashDistribution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testWriteSortExchangeWithHashDistribution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String json = writer.asString()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(json,is(XX3))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testWriteSortExchangeWithRandomDistribution['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->4 [style = bold, label=""];
7->5 [style = solid, label="writer"];
9->4 [style = bold, label=""];
8->3 [style = bold, label=""];
4->8 [style = solid, label="root"];
10->7 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
3->0 [style = solid, label="expected"];
10->8 [style = solid, label="root"];
6->2 [style = bold, label=""];
8->0 [style = solid, label="s"];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
12->10 [style = bold, label=""];
5->6 [style = bold, label=""];
6->8 [style = solid, label="json"];
6->8 [style = bold, label=""];
6->2 [style = solid, label="json"];
4->10 [style = dashed, label="0"];
8->11 [style = bold, label=""];
11->0 [style = solid, label="expected"];
3->11 [style = dashed, label="0"];
2->8 [style = bold, label=""];
}
