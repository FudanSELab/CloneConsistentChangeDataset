digraph {
23 [style = filled, label = "assertNotNull(responseRef.get().get(1))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNotNull(responseRef.get().get(0))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,responseRef.get().get(0).queryResult().topDocs().totalHits)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(mockSearchPhaseContext.failures.get(0).getCause() instanceof MockDirectoryWrapper.FakeIOException)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(42,responseRef.get().get(0).queryResult().topDocs().scoreDocs(0(.doc)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(Settings.builder().put(\"search.remote.connect\",false).build(),null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.id() == 1) {QuerySearchResult queryResult = new QuerySearchResult(123,new SearchShardTarget(\"node1\",new Index(\"test\",\"na\"),0,null))queryResult.topDocs(new TopDocs(1,new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1228d30,2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.id() == 2) {listener.onFailure(new MockDirectoryWrapper.FakeIOException())}{fail(\"no such request ID: \" + request.id())}}}@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(Settings.builder().put(\"cluster.remote.connect\",false).build(),null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.id() == 1) {QuerySearchResult queryResult = new QuerySearchResult(123,new SearchShardTarget(\"node1\",new Index(\"test\",\"na\"),0,null))queryResult.topDocs(new TopDocs(1,new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1228ba1,2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.id() == 2) {QuerySearchResult queryResult = new QuerySearchResult(123,new SearchShardTarget(\"node2\",new Index(\"test\",\"na\"),0,null))queryResult.topDocs(new TopDocs(1,new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1228bd4,2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}{fail(\"no such request ID: \" + request.id())}}}@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results,controller,null,mockSearchPhaseContext)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.numSuccess.get())@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.releasedSearchContexts.size())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "results.set(1,newSearchResult(1,2,new SearchShardTarget(\"node2\",new Index(\"test\",\"na\"),0,null)))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(2L))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testDfsWith2Shards['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNull(responseRef.get().get(0).fetchResult())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.failures.size())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(2,mockSearchPhaseContext.numSuccess.get())@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "AtomicArray<DfsSearchResult> results = new AtomicArray<>(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "phase.run()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertNull(responseRef.get().get(1))@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testDfsWith1ShardFailed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,responseRef.get().get(1).queryResult().topDocs().totalHits)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "results.set(0,newSearchResult(0,1,new SearchShardTarget(\"node1\",new Index(\"test\",\"na\"),0,null)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNull(responseRef.get().get(1))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "results.get(0).termsStatistics(new Term((((,new TermStatistics(((()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results,controller,null,mockSearchPhaseContext)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertNotNull(responseRef.get())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "results.get(1).termsStatistics(new Term((((,new TermStatistics(((()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testDfsWith2Shards['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(84,responseRef.get().get(1).queryResult().topDocs().scoreDocs(0(.doc)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(responseRef.get().get(1).fetchResult())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->32 [style = bold, label=""];
25->6 [style = solid, label="controller"];
25->36 [style = solid, label="controller"];
15->16 [style = solid, label="searchTransportService"];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
28->20 [style = bold, label=""];
3->25 [style = bold, label=""];
23->9 [style = dashed, label="0"];
16->6 [style = bold, label=""];
18->4 [style = dashed, label="0"];
37->29 [style = bold, label=""];
22->36 [style = solid, label="results"];
15->33 [style = solid, label="searchTransportService"];
0->21 [style = bold, label=""];
2->7 [style = dashed, label="0"];
32->30 [style = bold, label=""];
12->0 [style = bold, label=""];
24->18 [style = bold, label=""];
15->5 [style = bold, label=""];
26->22 [style = bold, label=""];
8->22 [style = bold, label=""];
13->32 [style = dashed, label="0"];
5->16 [style = bold, label=""];
6->20 [style = bold, label=""];
25->27 [style = bold, label=""];
34->28 [style = bold, label=""];
17->12 [style = bold, label=""];
15->31 [style = bold, label=""];
31->33 [style = bold, label=""];
33->36 [style = bold, label=""];
18->13 [style = bold, label=""];
10->4 [style = bold, label=""];
25->15 [style = bold, label=""];
22->17 [style = bold, label=""];
9->19 [style = bold, label=""];
23->1 [style = bold, label=""];
14->9 [style = bold, label=""];
1->2 [style = bold, label=""];
15->27 [style = dashed, label="0"];
36->37 [style = bold, label=""];
29->35 [style = bold, label=""];
27->5 [style = bold, label=""];
2->24 [style = bold, label=""];
27->16 [style = solid, label="searchTransportService"];
35->34 [style = bold, label=""];
38->22 [style = bold, label=""];
22->6 [style = solid, label="results"];
31->36 [style = solid, label="mockSearchPhaseContext"];
5->6 [style = solid, label="mockSearchPhaseContext"];
19->7 [style = bold, label=""];
4->23 [style = bold, label=""];
21->3 [style = bold, label=""];
20->11 [style = bold, label=""];
}
