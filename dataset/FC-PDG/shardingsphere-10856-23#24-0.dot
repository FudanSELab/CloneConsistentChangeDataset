digraph {
11 [style = filled, label = "when(engine.getCommandExecuteEngine()).thenReturn(executeEngine)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(backendConnection.closeStatements()).thenReturn(Collections.emptyList())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(backendConnection.closeFederateExecutor()).thenReturn(Collections.emptyList())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(handlerContext).write(databasePacket)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertRunNeedFlushByTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "when(executeEngine.getCommandPacketType(eq(payload))).thenReturn(commandPacketType)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "actual.run()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(backendConnection.getConnectionStatus()).thenReturn(connectionStatus)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(codecEngine.createPacketPayload(eq(message))).thenReturn(payload)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(frontendContext.isFlushForPerCommandPacket()).thenReturn(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "when(commandExecutor.execute()).thenReturn(Collections.singletonList(databasePacket))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "when(engine.getFrontendContext()).thenReturn(frontendContext)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(backendConnection.closeResultSets()).thenReturn(Collections.emptyList())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CommandExecutorTask actual = new CommandExecutorTask(engine,backendConnection,handlerContext,message)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(executeEngine.getCommandPacket(eq(payload),eq(commandPacketType),eq(backendConnection))).thenReturn(commandPacket)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(executeEngine.getCommandExecutor(eq(commandPacketType),eq(commandPacket),eq(backendConnection))).thenReturn(commandExecutor)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(engine.getCodecEngine()).thenReturn(codecEngine)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(queryCommandExecutor.execute()).thenReturn(Collections.singletonList(databasePacket))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "verify(handlerContext).flush()@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertRunByCommandExecutor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(executeEngine.writeQueryData(any(),any(),any(),anyInt())).thenReturn(true)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "when(engine.getCommandExecuteEngine()).thenReturn(executeEngine)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertRunNeedFlushByTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verify(connectionStatus).waitUntilConnectionRelease()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(backendConnection.closeConnections(false)).thenReturn(Collections.emptyList())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(executeEngine.getCommandExecutor(eq(commandPacketType),eq(commandPacket),eq(backendConnection))).thenReturn(queryCommandExecutor)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(connectionStatus).switchToUsing()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(executeEngine.getCommandPacket(eq(payload),eq(commandPacketType),eq(backendConnection))).thenReturn(commandPacket)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->11 [style = bold, label=""];
22->5 [style = bold, label=""];
16->4 [style = bold, label=""];
23->24 [style = bold, label=""];
2->26 [style = dashed, label="0"];
2->5 [style = bold, label=""];
7->18 [style = bold, label=""];
9->3 [style = bold, label=""];
11->1 [style = bold, label=""];
0->13 [style = bold, label=""];
5->26 [style = bold, label=""];
27->22 [style = bold, label=""];
12->16 [style = bold, label=""];
8->2 [style = bold, label=""];
4->19 [style = bold, label=""];
17->6 [style = bold, label=""];
5->11 [style = bold, label=""];
5->21 [style = bold, label=""];
26->1 [style = bold, label=""];
3->25 [style = bold, label=""];
14->8 [style = bold, label=""];
6->12 [style = bold, label=""];
1->15 [style = bold, label=""];
24->27 [style = bold, label=""];
13->9 [style = bold, label=""];
19->7 [style = bold, label=""];
20->14 [style = bold, label=""];
10->14 [style = bold, label=""];
18->0 [style = bold, label=""];
15->17 [style = bold, label=""];
}
