digraph {
17 [style = filled, label = "Assert.assertTrue(explainString.contains(\"colocate: false\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "connectContext.setDatabase(\"default_cluster:test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext,queryStr)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testPreferBroadcastJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String queryStr = \"explain select * from (select k2 from jointest group by k2)t2, jointest t1 where t1.k1 = t2.k2\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "String queryStr = \"explain select * from test.jointest t1, test.jointest t2 where t1.k1 = t2.k1\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext,queryStr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSelfColocateJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(explainString.contains(\"INNER JOIN (BROADCAST)\"))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext,queryStr)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(explainString.contains(\"INNER JOIN (PARTITIONED)\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queryStr = \"explain select * from test.dynamic_partition t1, test.dynamic_partition t2 where t1.k1 = t2.k1\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testPreferBroadcastJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertTrue(explainString.contains(\"INNER JOIN (BROADCAST)\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "connectContext.getSessionVariable().setPreferJoinMethod(\"broadcast\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "connectContext.getSessionVariable().setPreferJoinMethod(\"shuffle\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(explainString.contains(\"colocate: true\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "FeConstants.runningUnitTest = true@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String queryStr = \"explain select * from (select k1 from jointest group by k1)t2, jointest t1 where t1.k1 = t2.k1\"@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
16->0 [style = bold, label=""];
7->10 [style = solid, label="queryStr"];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
7->16 [style = dashed, label="0"];
13->10 [style = solid, label="queryStr"];
2->3 [style = bold, label=""];
16->0 [style = solid, label="queryStr"];
12->10 [style = solid, label="queryStr"];
7->0 [style = bold, label=""];
10->17 [style = bold, label=""];
9->10 [style = bold, label=""];
8->14 [style = dashed, label="0"];
7->4 [style = solid, label="queryStr"];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
2->17 [style = dashed, label="0"];
12->4 [style = solid, label="queryStr"];
5->1 [style = bold, label=""];
0->14 [style = bold, label=""];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
1->12 [style = bold, label=""];
7->12 [style = dashed, label="0"];
10->2 [style = bold, label=""];
14->13 [style = bold, label=""];
12->0 [style = solid, label="queryStr"];
7->0 [style = solid, label="queryStr"];
18->16 [style = bold, label=""];
}
