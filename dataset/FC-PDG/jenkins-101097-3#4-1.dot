digraph {
1 [style = filled, label = "return new Iterable<T>(){public Iterator<T> iterator(){final Iterator<T> itr = base.iterator()return new Iterator<T>(){public boolean hasNext(){return itr.hasNext()}public T next(){return itr.next()}public void remove(){itr.remove()}}}}@@@3@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<T> lst@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final Iterable<T> base@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "wrap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "reverse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "reverse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->4 [style = dashed, label="0"];
5->6 [style = dotted, label="true"];
5->1 [style = bold, label=""];
2->0 [style = dotted, label="true"];
3->4 [style = bold, label=""];
2->1 [style = bold, label=""];
0->6 [style = dashed, label="0"];
3->0 [style = dotted, label="true"];
}
