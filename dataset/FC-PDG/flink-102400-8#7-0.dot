digraph {
9 [style = filled, label = "buildAccompanyingKubernetesResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String serviceName = KubernetesUtils.getInternalServiceName(kubernetesJobManagerParameters.getClusterId())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final Service headlessService = new ServiceBuilder().withApiVersion(Constants.API_VERSION).withNewMetadata().withName(serviceName).withLabels(kubernetesJobManagerParameters.getCommonLabels()).endMetadata().withNewSpec().withClusterIP(Constants.HEADLESS_SERVICE_CLUSTER_IP).withSelector(kubernetesJobManagerParameters.getLabels()).addNewPort().withName(Constants.JOB_MANAGER_RPC_PORT_NAME).withPort(kubernetesJobManagerParameters.getRPCPort()).endPort().addNewPort().withName(Constants.BLOB_SERVER_PORT_NAME).withPort(kubernetesJobManagerParameters.getBlobServerPort()).endPort().endSpec().build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return Collections.singletonList(headlessService)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "kubernetesJobManagerParameters.getFlinkConfiguration().setString(JobManagerOptions.ADDRESS,serviceName + \".\" + namespace)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "buildAccompanyingKubernetesResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String serviceName = getInternalServiceName(kubernetesJobManagerParameters.getClusterId())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "kubernetesJobManagerParameters.getFlinkConfiguration().setString(JobManagerOptions.ADDRESS,getNamespacedInternalServiceName(serviceName,namespace))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final String serviceName = KubernetesUtils.getRestServiceName(kubernetesJobManagerParameters.getClusterId())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Service externalService = new ServiceBuilder().withApiVersion(Constants.API_VERSION).withNewMetadata().withName(serviceName).withLabels(kubernetesJobManagerParameters.getCommonLabels()).withAnnotations(kubernetesJobManagerParameters.getRestServiceAnnotations()).endMetadata().withNewSpec().withType(kubernetesJobManagerParameters.getRestServiceExposedType().name()).withSelector(kubernetesJobManagerParameters.getLabels()).addNewPort().withName(Constants.REST_PORT_NAME).withPort(kubernetesJobManagerParameters.getRestPort()).withNewTargetPort(kubernetesJobManagerParameters.getRestBindPort()).endPort().endSpec().build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return Collections.singletonList(externalService)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "buildAccompanyingKubernetesResources['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "!kubernetesJobManagerParameters.isInternalServiceEnabled()@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String namespace = kubernetesJobManagerParameters.getNamespace()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
0->3 [style = solid, label="namespace"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
8->10 [style = solid, label="serviceName"];
11->12 [style = bold, label=""];
4->3 [style = solid, label="serviceName"];
4->2 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
0->10 [style = bold, label=""];
10->5 [style = bold, label=""];
8->2 [style = bold, label=""];
1->11 [style = dashed, label="0"];
6->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
1->6 [style = dotted, label="true"];
3->10 [style = dashed, label="0"];
9->1 [style = bold, label=""];
0->10 [style = solid, label="namespace"];
14->11 [style = bold, label=""];
12->13 [style = solid, label="externalService"];
2->5 [style = solid, label="headlessService"];
}
