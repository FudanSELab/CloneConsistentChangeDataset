digraph {
10 [style = filled, label = "{node.close()}@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final CountDownLatch dataUpdateLatch = new CountDownLatch(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,initialData)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "server.restart()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Watcher watcher = new Watcher(){@Override public void process(WatchedEvent event){if (event.getType() == EventType.NodeDataChanged) {dataUpdateLatch.countDown()}}}@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSetDataWhenDisconnected['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "byte(( updatedData = \"Updated\".getBytes()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "node.start()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()),updatedData))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "byte(( initialData = \"Hello World\".getBytes()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "node.setData(updatedData)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "byte(( data = \"Hello World\".getBytes()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(timing.awaitLatch(dataUpdateLatch))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(Arrays.equals(curator.getData().forPath(node.getActualPath()),initialData))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "node.start()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,data)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "server.stop()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "curator.getData().usingWatcher(watcher).inBackground().forPath(node.getActualPath())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "node.start()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
1->4 [style = solid, label="curator"];
21->19 [style = bold, label=""];
2->0 [style = solid, label="data"];
12->11 [style = solid, label="updatedData"];
19->20 [style = solid, label="dataUpdateLatch"];
2->4 [style = bold, label=""];
16->23 [style = solid, label="initialData"];
4->7 [style = bold, label=""];
13->1 [style = bold, label=""];
12->24 [style = solid, label="updatedData"];
24->14 [style = bold, label=""];
6->1 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
17->24 [style = bold, label=""];
23->22 [style = bold, label=""];
22->0 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
2->4 [style = solid, label="data"];
16->18 [style = solid, label="initialData"];
1->16 [style = bold, label=""];
11->10 [style = bold, label=""];
2->16 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
4->8 [style = bold, label=""];
0->18 [style = bold, label=""];
1->2 [style = bold, label=""];
12->23 [style = bold, label=""];
18->21 [style = bold, label=""];
19->15 [style = bold, label=""];
9->1 [style = bold, label=""];
4->3 [style = solid, label="node"];
1->23 [style = solid, label="curator"];
16->12 [style = bold, label=""];
14->20 [style = bold, label=""];
20->11 [style = bold, label=""];
}
