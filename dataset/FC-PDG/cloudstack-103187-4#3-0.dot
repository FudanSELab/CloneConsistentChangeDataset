digraph {
25 [style = filled, label = "testCreateCommandNoTemplate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final CreateCommand command = new CreateCommand(diskCharacteristics,pool,executeInSequence)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(libvirtComputingResource,times(1)).getStoragePoolMgr()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(primary.getPhysicalDisk(command.getTemplateUrl())).thenReturn(baseVol)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final CreateCommand command = new CreateCommand(diskCharacteristics,templateUrl,pool,executeInSequence)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final KVMPhysicalDisk vol = Mockito.mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final DiskProfile diskCharacteristics = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final KVMStoragePoolManager poolManager = Mockito.mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(poolManager,times(1)).getStoragePool(pool.getType(),pool.getUuid())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(poolManager.getStoragePool(pool.getType(),pool.getUuid())).thenReturn(primary)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCreateCommandCLVM['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String templateUrl = \"http://template\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(poolManager)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(poolManager.createDiskFromTemplate(baseVol,diskCharacteristics.getPath(),diskCharacteristics.getProvisioningType(),primary,0)).thenReturn(vol)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "when(poolManager.createDiskFromTemplate(baseVol,diskCharacteristics.getPath(),diskCharacteristics.getProvisioningType(),primary,baseVol.getSize(),0)).thenReturn(vol)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "final boolean executeInSequence = false@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final KVMPhysicalDisk baseVol = Mockito.mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(answer.getResult())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(poolManager,times(1)).getStoragePool(pool.getType(),pool.getUuid())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(primary.createPhysicalDisk(diskCharacteristics.getPath(),diskCharacteristics.getProvisioningType(),diskCharacteristics.getSize())).thenReturn(vol)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testCreateCommandCLVM['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(wrapper)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final StorageFilerTO pool = Mockito.mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final KVMStoragePool primary = Mockito.mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
0->3 [style = bold, label=""];
13->18 [style = solid, label="diskCharacteristics"];
14->12 [style = solid, label="primary"];
3->1 [style = solid, label="baseVol"];
0->22 [style = solid, label="vol"];
19->18 [style = bold, label=""];
2->19 [style = bold, label=""];
20->13 [style = bold, label=""];
0->15 [style = solid, label="vol"];
13->23 [style = solid, label="diskCharacteristics"];
8->18 [style = solid, label="pool"];
4->11 [style = solid, label="wrapper"];
25->13 [style = bold, label=""];
8->19 [style = bold, label=""];
1->15 [style = bold, label=""];
11->6 [style = bold, label=""];
19->23 [style = solid, label="executeInSequence"];
15->21 [style = dashed, label="0"];
24->4 [style = solid, label="wrapper"];
18->6 [style = solid, label="command"];
12->1 [style = bold, label=""];
5->17 [style = bold, label=""];
19->18 [style = solid, label="executeInSequence"];
1->22 [style = dashed, label="0"];
3->10 [style = bold, label=""];
0->10 [style = bold, label=""];
24->4 [style = bold, label=""];
9->10 [style = solid, label="poolManager"];
23->11 [style = solid, label="command"];
14->0 [style = bold, label=""];
8->2 [style = bold, label=""];
10->12 [style = bold, label=""];
6->16 [style = bold, label=""];
1->21 [style = bold, label=""];
19->23 [style = bold, label=""];
8->23 [style = solid, label="pool"];
18->23 [style = dashed, label="0"];
15->4 [style = bold, label=""];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
16->5 [style = bold, label=""];
2->18 [style = solid, label="templateUrl"];
0->21 [style = solid, label="vol"];
22->24 [style = bold, label=""];
13->8 [style = bold, label=""];
4->11 [style = bold, label=""];
23->9 [style = bold, label=""];
12->22 [style = bold, label=""];
21->4 [style = bold, label=""];
}
