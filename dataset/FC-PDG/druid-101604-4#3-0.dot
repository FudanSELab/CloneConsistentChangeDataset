digraph {
3 [style = filled, label = "testPrimitiveAnyInSubquery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testQuery(\"SELECT SUM(val1), SUM(val2), SUM(val3) FROM (SELECT dim2, ANY_VALUE(m1) AS val1, ANY_VALUE(cnt) AS val2, ANY_VALUE(m2) AS val3 FROM foo GROUP BY dim2)\",ImmutableList.of(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensions(new DefaultDimensionSpec(\"dim2\",\"d0\"))).setAggregatorSpecs(aggregators(new FloatAnyAggregatorFactory(\"a0:a\",\"m1\"),new LongAnyAggregatorFactory(\"a1:a\",\"cnt\"),new DoubleAnyAggregatorFactory(\"a2:a\",\"m2\"))).setPostAggregatorSpecs(ImmutableList.of(new FinalizingFieldAccessPostAggregator(\"a0\",\"a0:a\"),new FinalizingFieldAccessPostAggregator(\"a1\",\"a1:a\"),new FinalizingFieldAccessPostAggregator(\"a2\",\"a2:a\"))).setContext(QUERY_CONTEXT_DEFAULT).build()).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"_a0\",\"a0\"),new LongSumAggregatorFactory(\"_a1\",\"a1\"),new DoubleSumAggregatorFactory(\"_a2\",\"a2\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@abb463): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@abb46c))@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "skipVectorize()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testQuery(\"SELECT SUM(val1), SUM(val2), SUM(val3) FROM (SELECT dim2, EARLIEST(m1) AS val1, EARLIEST(cnt) AS val2, EARLIEST(m2) AS val3 FROM foo GROUP BY dim2)\",ImmutableList.of(GroupByQuery.builder().setDataSource(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensions(new DefaultDimensionSpec(\"dim2\",\"d0\"))).setAggregatorSpecs(aggregators(new FloatFirstAggregatorFactory(\"a0:a\",\"m1\"),new LongFirstAggregatorFactory(\"a1:a\",\"cnt\"),new DoubleFirstAggregatorFactory(\"a2:a\",\"m2\"))).setPostAggregatorSpecs(ImmutableList.of(new FinalizingFieldAccessPostAggregator(\"a0\",\"a0:a\"),new FinalizingFieldAccessPostAggregator(\"a1\",\"a1:a\"),new FinalizingFieldAccessPostAggregator(\"a2\",\"a2:a\"))).setContext(QUERY_CONTEXT_DEFAULT).build()).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"_a0\",\"a0\"),new LongSumAggregatorFactory(\"_a1\",\"a1\"),new DoubleSumAggregatorFactory(\"_a2\",\"a2\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@abb4ef): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@abb4f8))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testPrimitiveEarliestInSubquery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testPrimitiveAnyInSubquery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = dashed, label="0"];
0->2 [style = bold, label=""];
2->1 [style = bold, label=""];
3->1 [style = bold, label=""];
4->2 [style = bold, label=""];
2->5 [style = bold, label=""];
}
