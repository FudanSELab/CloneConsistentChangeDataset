digraph {
17 [style = filled, label = "login1Commit1Login2Abort2Login3Commit3Logout3['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertSame(tokens(1(,privateCredentials.iterator().next())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "loginModule.login()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "loginModule.logout()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Set<Object> privateCredentials = subject.getPrivateCredentials()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1(,extensions(2()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "loginModule2.abort()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "loginAbortLoginCommitLogout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "loginModule2.login()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Iterator<Object> publicIterator = publicCredentials.iterator()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Set<Object> publicCredentials = subject.getPublicCredentials()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "loginModule1.login()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "loginModule.abort()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "loginModule.login()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(2,publicCredentials.size())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "loginModule.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "loginModule1.commit()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Subject subject = new Subject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "OAuthBearerLoginModule loginModule = new OAuthBearerLoginModule()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "loginModule2.commit()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertSame(extensions(2(,publicCredentials.iterator().next())@@@59@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "loginModule1.logout()@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "loginModule.commit()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Iterator<Object> iterator = privateCredentials.iterator()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SaslExtensions(( extensions = new SaslExtensions((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c621bc@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "TestCallbackHandler testTokenCallbackHandler = new TestCallbackHandler(tokens,extensions)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "OAuthBearerLoginModule loginModule2 = new OAuthBearerLoginModule()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertSame(tokens(2(,privateCredentials.iterator().next())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "loginModule2.login()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "loginModule3.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertSame(extensions(1(,publicCredentials.iterator().next())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "OAuthBearerLoginModule loginModule3 = new OAuthBearerLoginModule()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "OAuthBearerLoginModule loginModule1 = new OAuthBearerLoginModule()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "OAuthBearerToken(( tokens = new OAuthBearerToken((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c621ad@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1(,tokens(2()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "login1Commit1Login2Abort2Login3Commit3Logout3['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "loginModule3.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(2,privateCredentials.size())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74->69 [style = bold, label=""];
51->5 [style = bold, label=""];
28->27 [style = solid, label="subject"];
67->28 [style = bold, label=""];
12->8 [style = dashed, label="0"];
37->11 [style = bold, label=""];
1->6 [style = solid, label="extensions"];
20->9 [style = bold, label=""];
18->55 [style = bold, label=""];
46->73 [style = solid, label="tokens"];
24->57 [style = bold, label=""];
34->55 [style = solid, label="testTokenCallbackHandler"];
25->43 [style = bold, label=""];
5->45 [style = bold, label=""];
32->34 [style = bold, label=""];
3->65 [style = dashed, label="0"];
19->71 [style = bold, label=""];
26->51 [style = bold, label=""];
34->68 [style = bold, label=""];
1->50 [style = solid, label="extensions"];
46->45 [style = solid, label="tokens"];
0->14 [style = bold, label=""];
58->62 [style = bold, label=""];
49->39 [style = bold, label=""];
46->23 [style = solid, label="tokens"];
32->64 [style = dashed, label="0"];
46->2 [style = solid, label="tokens"];
34->27 [style = solid, label="testTokenCallbackHandler"];
28->11 [style = solid, label="subject"];
28->54 [style = solid, label="subject"];
43->0 [style = bold, label=""];
64->34 [style = bold, label=""];
13->22 [style = bold, label=""];
2->32 [style = bold, label=""];
14->16 [style = bold, label=""];
16->40 [style = bold, label=""];
22->46 [style = bold, label=""];
35->44 [style = bold, label=""];
11->54 [style = dashed, label="0"];
62->60 [style = bold, label=""];
10->48 [style = bold, label=""];
46->9 [style = solid, label="tokens"];
34->57 [style = solid, label="testTokenCallbackHandler"];
24->47 [style = bold, label=""];
11->18 [style = bold, label=""];
44->38 [style = bold, label=""];
30->19 [style = bold, label=""];
39->52 [style = bold, label=""];
12->29 [style = bold, label=""];
70->59 [style = bold, label=""];
26->19 [style = dashed, label="0"];
19->41 [style = bold, label=""];
31->33 [style = bold, label=""];
7->23 [style = bold, label=""];
1->34 [style = solid, label="extensions"];
57->30 [style = bold, label=""];
21->7 [style = bold, label=""];
46->14 [style = solid, label="tokens"];
73->64 [style = bold, label=""];
46->20 [style = solid, label="tokens"];
53->10 [style = bold, label=""];
27->55 [style = dashed, label="0"];
65->8 [style = bold, label=""];
38->20 [style = bold, label=""];
71->31 [style = bold, label=""];
40->35 [style = bold, label=""];
46->34 [style = solid, label="tokens"];
47->57 [style = dashed, label="0"];
68->63 [style = bold, label=""];
1->73 [style = bold, label=""];
34->63 [style = solid, label="testTokenCallbackHandler"];
3->12 [style = bold, label=""];
49->61 [style = bold, label=""];
63->74 [style = bold, label=""];
33->26 [style = bold, label=""];
23->42 [style = bold, label=""];
66->58 [style = bold, label=""];
1->3 [style = solid, label="extensions"];
72->65 [style = bold, label=""];
1->36 [style = solid, label="extensions"];
41->70 [style = dashed, label="0"];
46->10 [style = solid, label="tokens"];
75->72 [style = bold, label=""];
27->24 [style = bold, label=""];
1->2 [style = bold, label=""];
41->31 [style = bold, label=""];
1->64 [style = solid, label="extensions"];
46->49 [style = solid, label="tokens"];
28->47 [style = solid, label="subject"];
29->8 [style = bold, label=""];
28->63 [style = solid, label="subject"];
33->66 [style = bold, label=""];
37->68 [style = dashed, label="0"];
52->53 [style = bold, label=""];
45->3 [style = bold, label=""];
4->6 [style = bold, label=""];
55->24 [style = bold, label=""];
28->13 [style = bold, label=""];
34->11 [style = solid, label="testTokenCallbackHandler"];
42->36 [style = bold, label=""];
2->73 [style = dashed, label="0"];
11->63 [style = dashed, label="0"];
28->57 [style = solid, label="subject"];
47->30 [style = bold, label=""];
37->54 [style = bold, label=""];
1->39 [style = solid, label="extensions"];
17->28 [style = bold, label=""];
54->18 [style = bold, label=""];
38->4 [style = solid, label="iterator"];
45->72 [style = dashed, label="0"];
34->37 [style = bold, label=""];
46->1 [style = bold, label=""];
18->27 [style = bold, label=""];
28->55 [style = solid, label="subject"];
9->15 [style = bold, label=""];
56->28 [style = bold, label=""];
6->50 [style = bold, label=""];
1->25 [style = solid, label="extensions"];
15->4 [style = bold, label=""];
48->25 [style = bold, label=""];
59->30 [style = bold, label=""];
8->49 [style = bold, label=""];
29->49 [style = dashed, label="0"];
34->54 [style = solid, label="testTokenCallbackHandler"];
34->47 [style = solid, label="testTokenCallbackHandler"];
69->70 [style = bold, label=""];
60->75 [style = bold, label=""];
50->21 [style = bold, label=""];
8->61 [style = dashed, label="0"];
46->72 [style = solid, label="tokens"];
1->40 [style = solid, label="extensions"];
1->32 [style = solid, label="extensions"];
1->65 [style = solid, label="extensions"];
}
