digraph {
51 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "processor.checkAndClearProcessResult(\"0:null\",\"1:null\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@62@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.flushState()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final int(( expectedKeys@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(streamTopic,tableTopic)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "@SuppressWarnings(\"unchecked\") final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "driver.flushState()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i++@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "doTestJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "i < 2@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "getter.init(driver.context())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"1:XX1+Y1\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "doTestJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+Y0\"),kv(1,\"XX1+Y1\"))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < 2@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "driver.flushState()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "i++@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "shouldRequireCopartitionedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "i < 2@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "driver.flushState()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+YY0\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "driver.flushState()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.flushState()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final StreamsBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.setTime(0L)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "driver.flushState()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->44 [style = solid, label="i"];
13->49 [style = dotted, label="true"];
32->37 [style = bold, label=""];
29->30 [style = bold, label=""];
23->45 [style = bold, label=""];
41->8 [style = bold, label=""];
4->15 [style = bold, label=""];
24->52 [style = solid, label="i"];
36->10 [style = solid, label="getter"];
36->6 [style = solid, label="getter"];
21->2 [style = bold, label=""];
31->50 [style = bold, label=""];
45->43 [style = bold, label=""];
43->35 [style = bold, label=""];
2->14 [style = bold, label=""];
25->19 [style = bold, label=""];
41->46 [style = solid, label="i"];
42->3 [style = bold, label=""];
26->28 [style = bold, label=""];
36->35 [style = solid, label="getter"];
9->38 [style = bold, label=""];
36->19 [style = solid, label="getter"];
21->5 [style = dotted, label="true"];
13->17 [style = dotted, label="true"];
7->22 [style = solid, label="builder"];
28->8 [style = solid, label="i"];
8->46 [style = dotted, label="true"];
50->21 [style = solid, label="i"];
24->44 [style = bold, label=""];
44->52 [style = dotted, label="true"];
13->7 [style = dotted, label="true"];
39->52 [style = solid, label="i"];
36->20 [style = solid, label="getter"];
46->41 [style = bold, label=""];
57->22 [style = solid, label="builder"];
5->21 [style = bold, label=""];
34->36 [style = bold, label=""];
16->54 [style = dashed, label="0"];
1->59 [style = bold, label=""];
41->8 [style = solid, label="i"];
0->20 [style = bold, label=""];
15->12 [style = bold, label=""];
49->46 [style = solid, label="expectedKeys"];
58->55 [style = dotted, label="true"];
22->11 [style = bold, label=""];
35->51 [style = bold, label=""];
24->44 [style = solid, label="i"];
58->56 [style = dotted, label="true"];
51->9 [style = bold, label=""];
44->33 [style = bold, label=""];
28->41 [style = solid, label="i"];
44->39 [style = dotted, label="true"];
6->24 [style = bold, label=""];
8->41 [style = dotted, label="true"];
54->22 [style = bold, label=""];
19->0 [style = bold, label=""];
13->27 [style = bold, label=""];
58->49 [style = dotted, label="true"];
30->31 [style = bold, label=""];
21->53 [style = dotted, label="true"];
28->8 [style = bold, label=""];
28->46 [style = solid, label="i"];
49->53 [style = solid, label="expectedKeys"];
14->32 [style = bold, label=""];
60->27 [style = bold, label=""];
50->5 [style = solid, label="i"];
18->16 [style = bold, label=""];
5->53 [style = solid, label="i"];
27->1 [style = bold, label=""];
52->39 [style = bold, label=""];
58->27 [style = bold, label=""];
39->44 [style = bold, label=""];
40->48 [style = bold, label=""];
38->10 [style = bold, label=""];
53->5 [style = bold, label=""];
3->25 [style = bold, label=""];
58->57 [style = dotted, label="true"];
18->59 [style = dashed, label="0"];
5->21 [style = solid, label="i"];
1->18 [style = bold, label=""];
36->26 [style = bold, label=""];
16->22 [style = bold, label=""];
37->23 [style = bold, label=""];
12->6 [style = bold, label=""];
48->42 [style = bold, label=""];
36->37 [style = solid, label="getter"];
8->46 [style = bold, label=""];
11->34 [style = bold, label=""];
33->40 [style = bold, label=""];
44->52 [style = bold, label=""];
50->53 [style = solid, label="i"];
10->4 [style = bold, label=""];
18->54 [style = bold, label=""];
49->52 [style = solid, label="expectedKeys"];
50->21 [style = bold, label=""];
13->47 [style = dotted, label="true"];
8->29 [style = bold, label=""];
36->48 [style = solid, label="getter"];
24->39 [style = solid, label="i"];
21->53 [style = bold, label=""];
}
