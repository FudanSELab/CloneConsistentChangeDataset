digraph {
5 [style = filled, label = "lines = Long.parseLong(param.getValue())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "params@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "initialize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "LINES_KEY.equals(param.getName())@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "lines = Long.parseLong(param.getValue())@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "params != null@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "skip = Long.parseLong(param.getValue())@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "SKIP_KEY.equals(paramName)@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "initialize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Parameter(( params = getParameters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "params@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String paramName = param.getName()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "SKIP_KEY.equals(param.getName())@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Parameter param@@@5@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "setLines(Long.parseLong(param.getValue()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "params@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "initialize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "LINES_KEY.equals(paramName)@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "skip = Long.parseLong(param.getValue())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
6->3 [style = bold, label=""];
0->5 [style = dotted, label="true"];
15->9 [style = solid, label="paramName"];
0->6 [style = bold, label=""];
4->10 [style = dotted, label="true"];
0->17 [style = bold, label=""];
4->0 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
4->15 [style = bold, label=""];
12->15 [style = bold, label=""];
6->9 [style = dashed, label="0"];
4->8 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
0->15 [style = dashed, label="0"];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
7->4 [style = bold, label=""];
4->15 [style = dotted, label="true"];
11->9 [style = bold, label=""];
1->7 [style = bold, label=""];
3->0 [style = bold, label=""];
4->0 [style = bold, label=""];
14->7 [style = bold, label=""];
17->0 [style = bold, label=""];
7->4 [style = solid, label="params"];
5->17 [style = dashed, label="0"];
15->11 [style = bold, label=""];
5->0 [style = bold, label=""];
9->15 [style = bold, label=""];
11->9 [style = dotted, label="false"];
9->13 [style = dotted, label="true"];
0->17 [style = dotted, label="true"];
4->16 [style = dotted, label="true"];
13->15 [style = bold, label=""];
18->7 [style = bold, label=""];
6->3 [style = dotted, label="true"];
15->11 [style = solid, label="paramName"];
4->2 [style = dotted, label="true"];
0->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
