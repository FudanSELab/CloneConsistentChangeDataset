digraph {
18 [style = filled, label = "c.get().header(lastModified((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "c.get().header(of((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "c.get().header(lastModified(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "c.get().header(new Age(VALUE.toString())).run().assertBody().is(VALUE.toString())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE.toString())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "c.get().header(lastModified(null)).run().assertBody().isEmpty()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "c.get().header(lastModified((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "c.get().header(of(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "c.get().header(new LastModified(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c.get().header(lastModified((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "c.get().header(lastModified(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "c.get().header(of((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "c.get().header(lastModified(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "c.get().header(of(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE.toString())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "c.get().header(lastModified(null)).run().assertBody().is(VALUE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "c.get().header(of((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
2->19 [style = bold, label=""];
19->12 [style = bold, label=""];
1->15 [style = dashed, label="0"];
7->11 [style = dashed, label="0"];
18->17 [style = bold, label=""];
7->20 [style = dashed, label="0"];
7->0 [style = bold, label=""];
16->2 [style = bold, label=""];
22->23 [style = bold, label=""];
0->22 [style = dashed, label="0"];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
20->22 [style = bold, label=""];
21->2 [style = bold, label=""];
6->2 [style = bold, label=""];
3->10 [style = bold, label=""];
23->24 [style = bold, label=""];
8->20 [style = bold, label=""];
3->12 [style = dashed, label="0"];
10->8 [style = bold, label=""];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
1->24 [style = dashed, label="0"];
11->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
12->18 [style = bold, label=""];
8->17 [style = dashed, label="0"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
4->14 [style = dashed, label="0"];
5->19 [style = dashed, label="0"];
4->23 [style = dashed, label="0"];
13->14 [style = bold, label=""];
10->18 [style = dashed, label="0"];
2->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
