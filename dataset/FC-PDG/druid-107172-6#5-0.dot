digraph {
7 [style = filled, label = "writeToSingleFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "META_SERDE_HELPER.writeTo(channel,this)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "WritableByteChannel channel@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "headerOut.writeTo(channel)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SINGLE_FILE_META_SERDE_HELPER.writeTo(channel,this)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "headerOut.writeTo(channel)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final long numBytesWritten = headerOut.size() + valuesOut.size()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "FileSmoosher smoosher@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "writeToSingleFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "valuesOut.writeTo(channel)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "writeTo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Preconditions.checkState(headerOut.size() == (numWritten * 4L),\"numWritten(%s( number of rows should have (%s( bytes written to headerOut, had(%s(\",numWritten,numWritten * 4L,headerOut.size())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Preconditions.checkState(headerOut.size() == (numWritten * 4),\"numWritten(%s( number of rows should have (%s( bytes written to headerOut, had(%s(\",numWritten,numWritten * 4,headerOut.size())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Preconditions.checkState(numBytesWritten < Integer.MAX_VALUE - Integer.BYTES,\"Wrote(%s( bytes, which is too many.\",numBytesWritten)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "WritableByteChannel channel@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final long numBytesWritten = headerOut.size() + valuesOut.size()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "writeNumBytesForMax()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->2 [style = dotted, label="true"];
3->14 [style = bold, label=""];
6->4 [style = bold, label=""];
11->12 [style = dotted, label="true"];
0->3 [style = solid, label="numBytesWritten"];
3->14 [style = dashed, label="0"];
2->4 [style = solid, label="channel"];
0->8 [style = bold, label=""];
9->0 [style = bold, label=""];
11->15 [style = bold, label=""];
12->1 [style = solid, label="channel"];
9->2 [style = dotted, label="true"];
8->3 [style = bold, label=""];
4->1 [style = bold, label=""];
3->6 [style = bold, label=""];
10->1 [style = bold, label=""];
5->8 [style = dashed, label="0"];
7->0 [style = bold, label=""];
5->14 [style = solid, label="numBytesWritten"];
12->16 [style = solid, label="channel"];
15->5 [style = bold, label=""];
5->3 [style = bold, label=""];
0->5 [style = bold, label=""];
12->10 [style = solid, label="channel"];
14->10 [style = bold, label=""];
1->16 [style = bold, label=""];
11->13 [style = dotted, label="true"];
6->10 [style = dashed, label="0"];
2->6 [style = solid, label="channel"];
2->1 [style = solid, label="channel"];
2->13 [style = dashed, label="0"];
}
