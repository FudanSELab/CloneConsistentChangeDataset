digraph {
25 [style = filled, label = "compenProjs.add(qInput0Projs.get(i))@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final List<RexNode> identityProjects = (List<RexNode>)rexBuilder.identityProjects(qInput1.rowType)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "final List<RexNode> qInput1Projs = qInput1Explained.right@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "final RexNode compenCond = RexUtil.composeConjunction(rexBuilder,ImmutableList.of(qInput0Cond,qInput1CondShifted))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final List<RexNode> identityProjects = rexBuilder.identityProjects(qInput1.rowType)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "return null@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final MutableCalc compenCalc = MutableCalc.of(target,compenRexProgram)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "joinRelType == null@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "compenProjs.add(new RexInputRef(newIdx,query.rowType.getFieldList().get(i).getType()))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,qInput1Projs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final RexNode qInput1CondShifted = RexUtil.shift(qInput1Cond,fieldCnt(qInput0.getInput()))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RexNode qInput0Cond = qInput0Explained.left@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int i = 0@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput0Explained = explainCalc(qInput0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final RexNode splitted = splitFilter(call.getSimplify(),newQueryJoinCond,target.condition)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final MutableJoin query = (MutableJoin)call.query@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final MutableCalc compensatingCalc = MutableCalc.of(target,compensatingRexProgram)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final RexNode qInput1Cond = qInput1Explained.left@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "UnifyRuleCall call@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue())@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < fieldCnt(qInput0)@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final List<RexNode> qInput0Projs = qInput0Explained.right@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "i++@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "final MutableCalc qInput1 = (MutableCalc)query.getRight()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final RexProgram compensatingRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "splitted != null && splitted.isAlwaysTrue()@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compenCalc)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compensatingCalc)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final RexBuilder rexBuilder = call.getCluster().getRexBuilder()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,identityProjects)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final MutableCalc qInput0 = (MutableCalc)query.getLeft()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MutableJoin target = (MutableJoin)call.target@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < query.rowType.getFieldCount()@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RexNode shifted = RexUtil.shift(qInput1Projs.get(i - fieldCnt(qInput0)),fieldCnt(qInput0.getInput()))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{int newIdx = idx - fieldCnt(qInput0) + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return null@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput1Explained = explainCalc(qInput1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final RexNode compenCond = qInput0Cond@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "UnifyRuleCall call@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "return null@@@58@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final JoinRelType joinRelType = sameJoinType(query.joinType,target.joinType)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "compenProjs.add(shifted)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue() && qInput1Cond.isAlwaysTrue())@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final MutableRel qInput1 = query.getRight()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->51 [style = bold, label=""];
25->22 [style = bold, label=""];
9->33 [style = solid, label="qInput0Cond"];
51->47 [style = solid, label="qInput1"];
32->0 [style = bold, label=""];
22->25 [style = solid, label="i"];
21->8 [style = bold, label=""];
2->15 [style = dotted, label="true"];
23->3 [style = solid, label="qInput0"];
24->43 [style = dotted, label="true"];
17->45 [style = bold, label=""];
47->37 [style = bold, label=""];
10->15 [style = solid, label="rexBuilder"];
30->6 [style = bold, label=""];
2->18 [style = dotted, label="true"];
3->25 [style = dotted, label="true"];
27->49 [style = bold, label=""];
29->52 [style = dashed, label="0"];
3->27 [style = bold, label=""];
22->8 [style = bold, label=""];
30->28 [style = bold, label=""];
19->9 [style = bold, label=""];
28->46 [style = dashed, label="0"];
17->14 [style = bold, label=""];
9->43 [style = solid, label="qInput0Cond"];
8->22 [style = dotted, label="true"];
22->3 [style = solid, label="i"];
3->49 [style = dotted, label="false"];
36->29 [style = solid, label="call"];
24->8 [style = dotted, label="true"];
49->40 [style = bold, label=""];
24->21 [style = dotted, label="true"];
46->41 [style = solid, label="newQueryJoinCond"];
4->16 [style = bold, label=""];
25->40 [style = bold, label=""];
2->8 [style = dotted, label="true"];
33->7 [style = bold, label=""];
2->20 [style = bold, label=""];
40->27 [style = solid, label="i"];
14->12 [style = dotted, label="true"];
2->29 [style = dotted, label="true"];
5->51 [style = dashed, label="0"];
26->1 [style = bold, label=""];
9->32 [style = bold, label=""];
50->15 [style = solid, label="compenProjs"];
30->6 [style = dotted, label="true"];
27->31 [style = bold, label=""];
8->40 [style = dotted, label="true"];
10->26 [style = bold, label=""];
2->21 [style = dotted, label="true"];
33->2 [style = dashed, label="0"];
11->36 [style = dashed, label="0"];
46->41 [style = bold, label=""];
22->27 [style = solid, label="i"];
1->17 [style = bold, label=""];
24->52 [style = dotted, label="true"];
24->20 [style = bold, label=""];
29->20 [style = bold, label=""];
27->49 [style = solid, label="shifted"];
2->33 [style = bold, label=""];
28->24 [style = bold, label=""];
41->24 [style = solid, label="splitted"];
33->15 [style = solid, label="compenCond"];
23->27 [style = solid, label="qInput0"];
1->45 [style = bold, label=""];
37->2 [style = solid, label="qInput1Cond"];
2->43 [style = bold, label=""];
18->29 [style = solid, label="compenCalc"];
28->24 [style = solid, label="newQueryJoinCond"];
8->15 [style = bold, label=""];
23->5 [style = bold, label=""];
39->46 [style = bold, label=""];
1->17 [style = dotted, label="true"];
26->45 [style = solid, label="joinRelType"];
16->8 [style = solid, label="query"];
8->3 [style = bold, label=""];
38->16 [style = bold, label=""];
3->27 [style = dotted, label="false"];
24->44 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
15->44 [style = bold, label=""];
2->43 [style = solid, label="qInput1CondShifted"];
0->18 [style = solid, label="target"];
16->23 [style = bold, label=""];
8->3 [style = dotted, label="true"];
42->0 [style = bold, label=""];
40->3 [style = solid, label="i"];
21->25 [style = solid, label="i"];
48->46 [style = bold, label=""];
5->19 [style = bold, label=""];
12->13 [style = bold, label=""];
21->27 [style = solid, label="i"];
18->44 [style = dashed, label="0"];
3->31 [style = dotted, label="false"];
39->48 [style = dotted, label="true"];
27->31 [style = solid, label="newIdx"];
14->45 [style = dashed, label="0"];
10->43 [style = solid, label="rexBuilder"];
7->15 [style = solid, label="compenProjs"];
11->52 [style = solid, label="call"];
14->13 [style = bold, label=""];
23->19 [style = solid, label="qInput0"];
12->39 [style = bold, label=""];
21->22 [style = solid, label="i"];
13->34 [style = dashed, label="0"];
37->42 [style = bold, label=""];
40->8 [style = solid, label="i"];
45->39 [style = bold, label=""];
39->48 [style = bold, label=""];
35->16 [style = bold, label=""];
43->50 [style = bold, label=""];
31->22 [style = bold, label=""];
24->2 [style = bold, label=""];
41->24 [style = bold, label=""];
11->29 [style = solid, label="call"];
3->25 [style = bold, label=""];
35->36 [style = dotted, label="true"];
26->14 [style = solid, label="joinRelType"];
14->34 [style = bold, label=""];
12->34 [style = bold, label=""];
13->30 [style = bold, label=""];
0->44 [style = solid, label="target"];
44->52 [style = solid, label="compensatingCalc"];
15->18 [style = bold, label=""];
34->30 [style = bold, label=""];
38->11 [style = dotted, label="true"];
52->20 [style = bold, label=""];
45->12 [style = bold, label=""];
15->18 [style = solid, label="compenRexProgram"];
15->44 [style = solid, label="compensatingRexProgram"];
24->50 [style = dotted, label="true"];
18->29 [style = bold, label=""];
0->10 [style = bold, label=""];
43->15 [style = solid, label="compenCond"];
32->47 [style = bold, label=""];
2->33 [style = dotted, label="true"];
2->7 [style = dotted, label="true"];
14->12 [style = bold, label=""];
24->15 [style = dotted, label="true"];
44->52 [style = bold, label=""];
45->12 [style = dotted, label="true"];
7->21 [style = bold, label=""];
40->25 [style = solid, label="i"];
1->14 [style = bold, label=""];
24->2 [style = dotted, label="true"];
21->8 [style = solid, label="i"];
50->21 [style = bold, label=""];
24->2 [style = solid, label="splitted"];
21->3 [style = solid, label="i"];
26->1 [style = solid, label="joinRelType"];
22->8 [style = solid, label="i"];
51->19 [style = bold, label=""];
21->40 [style = solid, label="i"];
40->8 [style = bold, label=""];
6->28 [style = bold, label=""];
}
