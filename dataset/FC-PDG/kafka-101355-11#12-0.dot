digraph {
83 [style = filled, label = "File baseDir2 = Files.createTempDirectory(\"test\").toFile()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "context.setTime(startTime + incr * 4)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "context.setTime(startTime + incr * 7)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "store.flush()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "store.put(8,\"eight\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "context.setTime(startTime + incr * 6)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "context.setTime(startTime + incr * 6)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "store.put(5,\"five\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "store.put(7,\"seven\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(Utils.mkSet(inner.segmentName(4L),inner.segmentName(5L),inner.segmentName(6L)),segmentDirs(baseDir))@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L,4L),inner.segmentIds())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "context.setTime(startTime + incr * 7)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testRolling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "{Utils.delete(baseDir)}@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "context.setTime(startTime)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "context.setTime(startTime)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "store.flush()@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L,4L),inner.segmentIds())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Utils.mkSet(4L,5L,6L),inner.segmentIds())@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "context.setTime(startTime + incr * 8)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "long incr = segmentSize / 2@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RocksDBWindowStore<Integer,String> inner = (RocksDBWindowStore<Integer,String>)((MeteredWindowStore<Integer,String>)store).inner()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.setTime(startTime + incr * 4)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "long incr = segmentSize / 2@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "context.setTime(startTime + incr * 8)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "context.restore(windowName,changeLog)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L),inner.segmentIds())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Utils.mkSet(2L),inner.segmentIds())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRolling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "store.put(4,\"four\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "{Utils.delete(baseDir)}@@@82@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(Utils.mkSet(3L,4L,5L),inner.segmentIds())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "store.put(6,\"six\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "{store.close()}@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "store.put(2,\"two\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Utils.mkSet(4L,5L,6L),inner.segmentIds())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "store.put(3,\"three\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "store.put(6,\"six\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "store.put(1,\"one\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Utils.mkSet(2L),inner.segmentIds())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "context.setTime(startTime + incr * 2)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "context.setTime(startTime + incr)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "store.put(7,\"seven\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer,\"RocksDBWindowStoreTest-TestRolling\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "store.put(8,\"eight\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "RocksDBWindowStore<Integer,String> inner = (RocksDBWindowStore<Integer,String>)((MeteredWindowStore<Integer,String>)store).inner()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "long startTime = segmentSize * 2@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "{store.close()}@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "{Utils.delete(baseDir2)}@@@76@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "context.setTime(startTime + incr * 3)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "store.put(0,\"zero\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "store.put(0,\"zero\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "context.setTime(startTime + incr * 5)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Utils.mkSet(3L,4L,5L),inner.segmentIds())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93->81 [style = solid, label="producer"];
18->61 [style = solid, label="startTime"];
58->86 [style = solid, label="baseDir"];
5->55 [style = bold, label=""];
29->15 [style = bold, label=""];
9->31 [style = solid, label="incr"];
9->62 [style = solid, label="incr"];
72->32 [style = solid, label="startTime"];
34->46 [style = bold, label=""];
18->62 [style = solid, label="startTime"];
1->55 [style = bold, label=""];
74->82 [style = bold, label=""];
18->68 [style = solid, label="startTime"];
18->26 [style = solid, label="startTime"];
9->36 [style = solid, label="incr"];
58->27 [style = solid, label="producer"];
9->66 [style = solid, label="incr"];
28->50 [style = bold, label=""];
18->34 [style = solid, label="startTime"];
65->62 [style = bold, label=""];
18->8 [style = solid, label="startTime"];
36->28 [style = bold, label=""];
7->67 [style = bold, label=""];
55->51 [style = bold, label=""];
9->57 [style = solid, label="incr"];
80->38 [style = solid, label="incr"];
48->35 [style = bold, label=""];
1->30 [style = bold, label=""];
72->45 [style = solid, label="startTime"];
80->66 [style = solid, label="incr"];
72->44 [style = solid, label="startTime"];
92->87 [style = bold, label=""];
56->47 [style = bold, label=""];
21->38 [style = bold, label=""];
80->68 [style = solid, label="incr"];
80->10 [style = solid, label="incr"];
72->80 [style = bold, label=""];
72->10 [style = solid, label="startTime"];
8->36 [style = bold, label=""];
23->22 [style = bold, label=""];
40->16 [style = bold, label=""];
80->11 [style = solid, label="incr"];
18->36 [style = solid, label="startTime"];
9->42 [style = solid, label="incr"];
84->92 [style = solid, label="recordCollector"];
33->42 [style = bold, label=""];
51->39 [style = bold, label=""];
9->25 [style = solid, label="incr"];
58->75 [style = solid, label="baseDir"];
72->55 [style = solid, label="startTime"];
30->8 [style = bold, label=""];
31->20 [style = bold, label=""];
69->5 [style = bold, label=""];
84->92 [style = bold, label=""];
51->11 [style = bold, label=""];
71->29 [style = bold, label=""];
66->33 [style = bold, label=""];
83->73 [style = bold, label=""];
2->66 [style = bold, label=""];
25->40 [style = bold, label=""];
80->58 [style = bold, label=""];
60->23 [style = bold, label=""];
80->42 [style = solid, label="incr"];
52->85 [style = bold, label=""];
9->39 [style = solid, label="incr"];
9->14 [style = solid, label="incr"];
80->55 [style = solid, label="incr"];
79->89 [style = solid, label="changeLog"];
80->4 [style = solid, label="incr"];
50->69 [style = bold, label=""];
48->74 [style = bold, label=""];
18->30 [style = solid, label="startTime"];
75->18 [style = bold, label=""];
80->77 [style = solid, label="incr"];
46->6 [style = bold, label=""];
18->3 [style = solid, label="startTime"];
18->4 [style = solid, label="startTime"];
52->65 [style = bold, label=""];
26->14 [style = bold, label=""];
77->48 [style = bold, label=""];
18->45 [style = solid, label="startTime"];
72->42 [style = solid, label="startTime"];
9->26 [style = solid, label="incr"];
18->66 [style = solid, label="startTime"];
10->21 [style = bold, label=""];
4->2 [style = bold, label=""];
58->70 [style = bold, label=""];
73->84 [style = bold, label=""];
29->44 [style = solid, label="baseDir"];
24->18 [style = bold, label=""];
80->67 [style = solid, label="incr"];
18->65 [style = solid, label="startTime"];
27->56 [style = bold, label=""];
44->77 [style = bold, label=""];
9->34 [style = solid, label="incr"];
45->1 [style = bold, label=""];
87->91 [style = bold, label=""];
18->43 [style = solid, label="startTime"];
18->64 [style = solid, label="startTime"];
18->52 [style = solid, label="startTime"];
54->25 [style = bold, label=""];
59->11 [style = bold, label=""];
80->33 [style = solid, label="incr"];
18->2 [style = solid, label="startTime"];
76->86 [style = bold, label=""];
80->3 [style = solid, label="incr"];
9->46 [style = solid, label="incr"];
58->93 [style = bold, label=""];
81->75 [style = solid, label="recordCollector"];
92->87 [style = solid, label="context"];
18->9 [style = bold, label=""];
18->25 [style = bold, label=""];
18->57 [style = solid, label="startTime"];
42->32 [style = bold, label=""];
68->7 [style = bold, label=""];
18->67 [style = solid, label="startTime"];
18->31 [style = solid, label="startTime"];
72->67 [style = solid, label="startTime"];
18->0 [style = solid, label="startTime"];
27->56 [style = solid, label="recordCollector"];
9->65 [style = solid, label="incr"];
70->56 [style = solid, label="recordCollector"];
63->53 [style = bold, label=""];
9->52 [style = solid, label="incr"];
9->1 [style = solid, label="incr"];
72->33 [style = solid, label="startTime"];
83->78 [style = solid, label="baseDir2"];
18->46 [style = solid, label="startTime"];
58->70 [style = solid, label="producer"];
63->45 [style = bold, label=""];
13->0 [style = bold, label=""];
6->17 [style = bold, label=""];
22->26 [style = bold, label=""];
13->10 [style = bold, label=""];
9->4 [style = solid, label="incr"];
18->49 [style = solid, label="startTime"];
49->37 [style = bold, label=""];
18->1 [style = solid, label="startTime"];
88->79 [style = bold, label=""];
79->72 [style = bold, label=""];
91->89 [style = bold, label=""];
72->4 [style = solid, label="startTime"];
80->44 [style = solid, label="incr"];
15->58 [style = bold, label=""];
9->33 [style = solid, label="incr"];
9->28 [style = solid, label="incr"];
19->29 [style = bold, label=""];
9->41 [style = solid, label="incr"];
72->11 [style = solid, label="startTime"];
18->41 [style = solid, label="startTime"];
18->55 [style = solid, label="startTime"];
9->51 [style = solid, label="incr"];
72->38 [style = solid, label="startTime"];
9->43 [style = solid, label="incr"];
72->68 [style = solid, label="startTime"];
9->30 [style = solid, label="incr"];
86->83 [style = bold, label=""];
58->92 [style = solid, label="baseDir"];
16->68 [style = bold, label=""];
27->70 [style = dashed, label="0"];
72->25 [style = solid, label="startTime"];
11->41 [style = bold, label=""];
18->25 [style = solid, label="startTime"];
80->45 [style = solid, label="incr"];
82->78 [style = bold, label=""];
18->50 [style = solid, label="startTime"];
72->77 [style = solid, label="startTime"];
72->2 [style = solid, label="startTime"];
9->0 [style = solid, label="incr"];
47->24 [style = bold, label=""];
18->11 [style = solid, label="startTime"];
81->75 [style = bold, label=""];
75->18 [style = solid, label="context"];
40->68 [style = bold, label=""];
17->3 [style = bold, label=""];
32->44 [style = bold, label=""];
18->38 [style = solid, label="startTime"];
18->22 [style = solid, label="startTime"];
18->42 [style = solid, label="startTime"];
80->32 [style = solid, label="incr"];
64->61 [style = bold, label=""];
70->56 [style = bold, label=""];
90->38 [style = bold, label=""];
9->68 [style = solid, label="incr"];
9->49 [style = bold, label=""];
9->64 [style = solid, label="incr"];
29->35 [style = solid, label="baseDir"];
9->61 [style = solid, label="incr"];
58->27 [style = bold, label=""];
67->13 [style = bold, label=""];
43->57 [style = bold, label=""];
57->64 [style = bold, label=""];
3->52 [style = bold, label=""];
18->28 [style = solid, label="startTime"];
18->33 [style = solid, label="startTime"];
56->47 [style = solid, label="context"];
80->2 [style = solid, label="incr"];
7->12 [style = bold, label=""];
9->67 [style = solid, label="incr"];
62->4 [style = bold, label=""];
61->31 [style = bold, label=""];
41->3 [style = bold, label=""];
39->43 [style = bold, label=""];
72->66 [style = solid, label="startTime"];
41->60 [style = bold, label=""];
14->34 [style = bold, label=""];
9->2 [style = solid, label="incr"];
93->81 [style = bold, label=""];
29->56 [style = solid, label="baseDir"];
58->74 [style = solid, label="baseDir"];
37->54 [style = bold, label=""];
10->90 [style = bold, label=""];
0->10 [style = bold, label=""];
18->51 [style = solid, label="startTime"];
44->48 [style = bold, label=""];
18->14 [style = solid, label="startTime"];
38->63 [style = bold, label=""];
72->3 [style = solid, label="startTime"];
20->59 [style = bold, label=""];
73->84 [style = solid, label="producer"];
89->65 [style = bold, label=""];
9->8 [style = solid, label="incr"];
85->76 [style = bold, label=""];
18->23 [style = solid, label="startTime"];
18->39 [style = solid, label="startTime"];
9->23 [style = solid, label="incr"];
9->38 [style = solid, label="incr"];
72->62 [style = solid, label="startTime"];
9->60 [style = solid, label="incr"];
53->45 [style = bold, label=""];
18->60 [style = solid, label="startTime"];
12->67 [style = bold, label=""];
9->50 [style = solid, label="incr"];
9->22 [style = solid, label="incr"];
}
