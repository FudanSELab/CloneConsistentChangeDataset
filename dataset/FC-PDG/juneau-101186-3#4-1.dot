digraph {
6 [style = filled, label = "r = new StringReader(\"(foo=bar,baz=quz)\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "m.put(\"X\",r)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"X='foo=bar%26baz=quz'\",s.serialize(m))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Reader r@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testUon['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testUrlEncoding['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "r = new StringReader(\"foo=bar&baz=quz\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "UrlEncodingSerializer s = UrlEncodingSerializer.create().swaps().build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "UonSerializer s = UonSerializer.create().swaps().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Object> m@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"(X=(foo=bar,baz=quz))\",s.serialize(m))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testUon['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "r = reader(\"(foo=bar,baz=quz)\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "m = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->7 [style = solid, label="r"];
6->8 [style = dashed, label="0"];
7->11 [style = bold, label=""];
1->8 [style = bold, label=""];
9->0 [style = bold, label=""];
4->5 [style = solid, label="m"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
4->11 [style = solid, label="m"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
6->10 [style = dashed, label="0"];
6->7 [style = solid, label="r"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
10->4 [style = bold, label=""];
8->7 [style = solid, label="r"];
8->4 [style = bold, label=""];
1->10 [style = bold, label=""];
13->2 [style = bold, label=""];
}
