digraph {
1 [style = filled, label = "builder.set(\"_no_nans\",3D)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "InputFile inFile = Files.localInput(parquetFile)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "OutputFile outFile = Files.localOutput(PARQUET_FILE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertTrue(parquetFile.delete())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "copy < 20@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Record structNotNull = new Record(structSchema)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "InputFile inFile = Files.localInput(PARQUET_FILE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "appender.add(builder.build())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "builder.set(\"_struct_not_null\",structNotNull)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "structNotNull.put(\"_int_field\",INT_MIN_VALUE + i)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i += 1@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.set(\"_required\",\"req\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.set(\"_all_nulls\",null)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "File parquetFile = temp.newFile()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "builder.set(\"_some_nulls\",(i % 10 == 0)? null: \"some\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "dictionaryStore = reader.getNextDictionaryReader()@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "copy += 1@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "builder.set(\"_decimal_fixed\",DECIMAL_MIN_VALUE.add(DECIMAL_STEP.multiply(new BigDecimal(i))))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "builder.set(\"_no_stats\",TOO_LONG_FOR_STATS)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "GenericRecordBuilder builder = new GenericRecordBuilder(convert(FILE_SCHEMA,\"table\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.set(\"_no_nulls\",\"\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "List<Record> records@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "appender.addAll(records)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ParquetFileReader reader = ParquetFileReader.open(ParquetIO.file(inFile))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "createParquetInputFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i < INT_MAX_VALUE - INT_MIN_VALUE + 1@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "builder.set(\"_all_nans\",Double.NaN)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "createInputFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "PARQUET_FILE.deleteOnExit()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "builder.set(\"_id\",INT_MIN_VALUE + i)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "createInputFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int copy = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.set(\"_some_nans\",(i % 10 == 0)? Float.NaN: 2F)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(PARQUET_FILE.delete())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "PARQUET_FILE.exists()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "OutputFile outFile = Files.localOutput(parquetFile)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "org.apache.avro.Schema structSchema = AvroSchemaUtil.convert(_structFieldType)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.set(\"_non_dict\",UUID.randomUUID().toString())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->16 [style = bold, label=""];
0->4 [style = bold, label=""];
19->29 [style = solid, label="structNotNull"];
14->3 [style = bold, label=""];
38->41 [style = bold, label=""];
1->33 [style = bold, label=""];
34->38 [style = bold, label=""];
15->4 [style = solid, label="i"];
5->18 [style = bold, label=""];
2->29 [style = dotted, label="true"];
40->39 [style = bold, label=""];
35->34 [style = bold, label=""];
44->37 [style = dotted, label="true"];
2->19 [style = dotted, label="true"];
36->35 [style = bold, label=""];
2->26 [style = bold, label=""];
28->26 [style = dotted, label="true"];
31->22 [style = bold, label=""];
16->33 [style = solid, label="i"];
15->2 [style = bold, label=""];
4->1 [style = bold, label=""];
2->21 [style = dotted, label="true"];
16->2 [style = bold, label=""];
12->9 [style = bold, label=""];
2->1 [style = dotted, label="true"];
2->12 [style = dotted, label="true"];
20->29 [style = bold, label=""];
15->20 [style = solid, label="i"];
16->20 [style = solid, label="i"];
16->2 [style = solid, label="i"];
13->5 [style = bold, label=""];
2->21 [style = bold, label=""];
15->2 [style = solid, label="i"];
37->38 [style = solid, label="records"];
36->35 [style = dotted, label="true"];
15->33 [style = solid, label="i"];
7->8 [style = bold, label=""];
23->35 [style = dashed, label="0"];
22->3 [style = solid, label="parquetFile"];
21->30 [style = bold, label=""];
2->30 [style = dotted, label="true"];
22->7 [style = solid, label="parquetFile"];
11->15 [style = bold, label=""];
3->27 [style = bold, label=""];
9->6 [style = bold, label=""];
28->2 [style = dotted, label="true"];
2->15 [style = dotted, label="true"];
16->4 [style = solid, label="i"];
30->12 [style = bold, label=""];
43->40 [style = bold, label=""];
8->13 [style = bold, label=""];
26->28 [style = bold, label=""];
23->14 [style = bold, label=""];
32->22 [style = bold, label=""];
25->0 [style = bold, label=""];
15->21 [style = solid, label="i"];
16->21 [style = solid, label="i"];
28->7 [style = bold, label=""];
2->17 [style = dotted, label="true"];
2->11 [style = dotted, label="true"];
2->4 [style = dotted, label="true"];
2->33 [style = dotted, label="true"];
19->20 [style = bold, label=""];
2->9 [style = dotted, label="true"];
2->20 [style = dotted, label="true"];
42->43 [style = bold, label=""];
15->6 [style = solid, label="i"];
2->25 [style = dotted, label="true"];
2->6 [style = dotted, label="true"];
6->17 [style = bold, label=""];
24->28 [style = solid, label="copy"];
27->24 [style = bold, label=""];
28->16 [style = dotted, label="true"];
36->34 [style = bold, label=""];
14->19 [style = solid, label="structSchema"];
18->10 [style = bold, label=""];
41->42 [style = bold, label=""];
1->19 [style = bold, label=""];
26->28 [style = solid, label="copy"];
33->19 [style = bold, label=""];
22->23 [style = bold, label=""];
2->0 [style = dotted, label="true"];
44->36 [style = bold, label=""];
24->28 [style = bold, label=""];
16->6 [style = solid, label="i"];
7->8 [style = solid, label="inFile"];
17->25 [style = bold, label=""];
29->11 [style = bold, label=""];
}
