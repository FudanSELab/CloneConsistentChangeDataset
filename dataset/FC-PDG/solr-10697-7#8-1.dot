digraph {
62 [style = filled, label = "solrStream.close()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection1\").process(cluster.getSolrClient())solrClientCache.close()}@@@136@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "TupleStream stream@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "Exception e@@@87@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "workersComplete = 0@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "{}@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
157 [style = filled, label = "tuple = tuples.get(2)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "{}@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "testParallelDaemonUpdateStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "stopTime > 0@@@80@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "tuple = tuples.get(2)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "tuple = tuples.get(1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "solrStream.close()@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "++workersComplete@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "solrStream.close()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
147 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sParams = new ModifiableSolrParams()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "t = tuples.get(0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "sParams.set(\"action\",\"list\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "StreamExpression expression@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "testParallelDaemonUpdateStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "parallelUpdateStream.setStreamContext(streamContext)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "testCommitStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Exception e@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "stream.setStreamContext(streamContext)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(5,tuples.size())@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "solrStream.open()@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Tuple t@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "cluster.waitForActiveCollection(\"parallelDestinationCollection1\",2,2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "tuple = tuples.get(1)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Tuple tuple = tuples.get(0)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "Thread.sleep(1000)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\",sParams)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TupleStream parallelUpdateStream = factory.constructStream(\"parallel(collection1, \" + updateExpression + \", workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"batchNumber asc\")\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "int workersComplete = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "l > 0@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection1\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"parallel\",).withFunctionName(\"daemon\",)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "stream = factory.constructStream(expression)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "tuples = getTuples(stream)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
159 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "int iterations = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "stopTime = tupleResponse.getLong(\"stopTime\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "tupleResponse.EOF@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
161 [style = filled, label = "tuple = tuples.get(4)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
163 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"destinationCollection\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"commit\",)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT,\"/stream\",\"action\",\"list\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection1\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(destinationCollection, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "iterations == 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "solrStream.open()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "long l = tupleResponse.getLong(\"iterations\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection1\",\"conf\",2,1).setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE).process(cluster.getSolrClient())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "solrStream.close()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128 [style = filled, label = "CollectionAdminRequest.createCollection(\"destinationCollection\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
152 [style = filled, label = "assertEquals(5,tuples.size())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "sParams = new ModifiableSolrParams()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "String updateExpression = \"daemon(update(parallelDestinationCollection1, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\")), runInterval=\"1000\", id=\"test\")\"@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "tuple = tuples.get(4)@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "assert(tuples.size() == 1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "sParams.set(\"action\",\"stop\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "tuples = getTuples(stream)@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "Tuple tuple = tuples.get(0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assert(tuples.size() == 2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tupleResponse.EOF@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "iterations = (int)l@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "Thread.sleep(1000)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "{}@@@87@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "{}@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "solrStream.close()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "++workersComplete@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "tuple = tuples.get(3)@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cluster.getSolrClient().commit(\"parallelDestinationCollection1\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "expression = StreamExpressionParser.parse(\"commit(destinationCollection, batchSize=2, update(destinationCollection, batchSize=5, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\")))\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
154 [style = filled, label = "tuple = tuples.get(3)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "List<Tuple> tuples = getTuples(parallelUpdateStream)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "long stopTime = 0@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"destinationCollection\").process(cluster.getSolrClient())solrClientCache.close()}@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\",\"s_multi\",\"aaaa\",\"s_multi\",\"bbbb\",\"i_multi\",\"4\",\"i_multi\",\"7\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\",\"s_multi\",\"aaaa1\",\"s_multi\",\"bbbb1\",\"i_multi\",\"44\",\"i_multi\",\"77\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\",\"s_multi\",\"aaaa2\",\"s_multi\",\"bbbb2\",\"i_multi\",\"444\",\"i_multi\",\"777\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\",\"s_multi\",\"aaaa3\",\"s_multi\",\"bbbb3\",\"i_multi\",\"4444\",\"i_multi\",\"7777\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\",\"s_multi\",\"aaaa4\",\"s_multi\",\"bbbb4\",\"i_multi\",\"44444\",\"i_multi\",\"77777\").commit(cluster.getSolrClient(),\"collection1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "cluster.waitForActiveCollection(\"destinationCollection\",2,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "solrStream.open()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "stream.setStreamContext(streamContext)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "assert(t.EOF == false)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "stopTime == 0@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "sParams.set(\"id\",\"test\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "assertEquals(5,t.get(\"batchIndexed\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
153 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
162 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "stream.setStreamContext(streamContext)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->97 [style = bold, label=""];
32->55 [style = solid, label="parallelUpdateStream"];
72->86 [style = bold, label=""];
100->25 [style = dotted, label="true"];
54->63 [style = bold, label=""];
156->160 [style = bold, label=""];
100->45 [style = dotted, label="true"];
20->70 [style = bold, label=""];
124->135 [style = bold, label=""];
105->81 [style = bold, label=""];
141->130 [style = bold, label=""];
120->114 [style = bold, label=""];
55->156 [style = dashed, label="0"];
69->96 [style = bold, label=""];
136->151 [style = bold, label=""];
37->82 [style = bold, label=""];
133->121 [style = bold, label=""];
121->123 [style = bold, label=""];
126->139 [style = bold, label=""];
77->92 [style = bold, label=""];
60->13 [style = solid, label="stopTime"];
13->17 [style = bold, label=""];
133->123 [style = solid, label="stream"];
51->50 [style = bold, label=""];
1->101 [style = bold, label=""];
10->8 [style = bold, label=""];
0->60 [style = dotted, label="false"];
106->100 [style = solid, label="iterations"];
19->104 [style = solid, label="sParams"];
73->39 [style = bold, label=""];
34->17 [style = bold, label=""];
0->34 [style = dotted, label="true"];
128->155 [style = bold, label=""];
29->14 [style = bold, label=""];
152->116 [style = bold, label=""];
71->24 [style = bold, label=""];
88->106 [style = bold, label=""];
104->64 [style = bold, label=""];
27->51 [style = bold, label=""];
2->52 [style = bold, label=""];
138->149 [style = bold, label=""];
70->7 [style = solid, label="sParams"];
100->89 [style = bold, label=""];
106->56 [style = bold, label=""];
41->109 [style = bold, label=""];
13->104 [style = bold, label=""];
59->84 [style = dotted, label="true"];
59->84 [style = bold, label=""];
13->4 [style = dotted, label="true"];
48->86 [style = bold, label=""];
96->23 [style = bold, label=""];
92->42 [style = solid, label="streamContext"];
153->161 [style = bold, label=""];
116->134 [style = bold, label=""];
1->110 [style = dashed, label="0"];
16->3 [style = bold, label=""];
61->89 [style = bold, label=""];
53->136 [style = dashed, label="0"];
0->59 [style = dotted, label="false"];
81->37 [style = bold, label=""];
46->38 [style = bold, label=""];
98->35 [style = bold, label=""];
127->113 [style = bold, label=""];
111->112 [style = bold, label=""];
80->12 [style = bold, label=""];
87->46 [style = bold, label=""];
108->110 [style = bold, label=""];
67->32 [style = solid, label="updateExpression"];
47->28 [style = bold, label=""];
100->7 [style = dotted, label="true"];
56->100 [style = bold, label=""];
97->102 [style = bold, label=""];
92->85 [style = solid, label="streamContext"];
65->76 [style = bold, label=""];
89->100 [style = solid, label="iterations"];
107->48 [style = bold, label=""];
98->106 [style = solid, label="l"];
68->83 [style = bold, label=""];
62->103 [style = bold, label=""];
102->49 [style = bold, label=""];
129->120 [style = bold, label=""];
14->43 [style = bold, label=""];
5->25 [style = bold, label=""];
20->160 [style = dashed, label="0"];
101->57 [style = bold, label=""];
92->75 [style = bold, label=""];
0->34 [style = bold, label=""];
136->133 [style = solid, label="factory"];
101->155 [style = dashed, label="0"];
79->26 [style = bold, label=""];
53->94 [style = bold, label=""];
21->11 [style = bold, label=""];
13->0 [style = dotted, label="true"];
31->53 [style = bold, label=""];
44->68 [style = bold, label=""];
143->115 [style = bold, label=""];
35->88 [style = dotted, label="true"];
48->33 [style = bold, label=""];
151->150 [style = bold, label=""];
6->80 [style = bold, label=""];
57->65 [style = bold, label=""];
25->78 [style = bold, label=""];
32->42 [style = bold, label=""];
10->8 [style = solid, label="expression"];
159->125 [style = bold, label=""];
154->145 [style = bold, label=""];
144->111 [style = bold, label=""];
145->124 [style = bold, label=""];
70->61 [style = bold, label=""];
36->43 [style = bold, label=""];
17->10 [style = bold, label=""];
78->106 [style = dotted, label="false"];
131->138 [style = bold, label=""];
91->47 [style = bold, label=""];
130->142 [style = bold, label=""];
137->158 [style = bold, label=""];
78->98 [style = dotted, label="false"];
51->17 [style = solid, label="workersComplete"];
139->117 [style = bold, label=""];
35->9 [style = bold, label=""];
38->54 [style = bold, label=""];
114->154 [style = bold, label=""];
94->67 [style = bold, label=""];
132->126 [style = bold, label=""];
95->71 [style = bold, label=""];
35->88 [style = bold, label=""];
11->43 [style = solid, label="sParams"];
92->121 [style = solid, label="streamContext"];
59->72 [style = bold, label=""];
149->122 [style = bold, label=""];
14->19 [style = bold, label=""];
100->103 [style = bold, label=""];
50->13 [style = bold, label=""];
33->86 [style = bold, label=""];
75->31 [style = solid, label="solrClientCache"];
50->13 [style = solid, label="stopTime"];
157->137 [style = bold, label=""];
42->55 [style = bold, label=""];
100->7 [style = bold, label=""];
112->148 [style = bold, label=""];
100->5 [style = dotted, label="true"];
13->50 [style = bold, label=""];
60->59 [style = solid, label="stopTime"];
160->141 [style = bold, label=""];
92->64 [style = solid, label="streamContext"];
142->118 [style = bold, label=""];
82->2 [style = bold, label=""];
134->131 [style = bold, label=""];
115->132 [style = bold, label=""];
3->44 [style = bold, label=""];
61->103 [style = solid, label="workersComplete"];
150->156 [style = solid, label="stream"];
118->133 [style = solid, label="expression"];
13->30 [style = dotted, label="true"];
148->159 [style = bold, label=""];
41->40 [style = bold, label=""];
92->119 [style = solid, label="streamContext"];
9->106 [style = bold, label=""];
161->146 [style = bold, label=""];
92->45 [style = solid, label="streamContext"];
147->157 [style = bold, label=""];
52->6 [style = bold, label=""];
11->22 [style = bold, label=""];
122->162 [style = bold, label=""];
92->97 [style = solid, label="streamContext"];
67->32 [style = bold, label=""];
28->79 [style = bold, label=""];
30->0 [style = bold, label=""];
85->18 [style = bold, label=""];
59->72 [style = dotted, label="true"];
99->90 [style = bold, label=""];
78->62 [style = bold, label=""];
64->4 [style = bold, label=""];
42->119 [style = dashed, label="0"];
12->87 [style = bold, label=""];
89->118 [style = dashed, label="0"];
150->119 [style = bold, label=""];
162->144 [style = bold, label=""];
90->69 [style = bold, label=""];
140->128 [style = bold, label=""];
24->15 [style = bold, label=""];
53->32 [style = solid, label="zkHost"];
100->78 [style = dotted, label="true"];
163->129 [style = bold, label=""];
23->16 [style = bold, label=""];
15->105 [style = bold, label=""];
109->106 [style = bold, label=""];
58->27 [style = bold, label=""];
158->163 [style = bold, label=""];
135->127 [style = bold, label=""];
26->73 [style = bold, label=""];
113->153 [style = bold, label=""];
8->102 [style = solid, label="stream"];
13->64 [style = dotted, label="true"];
55->20 [style = bold, label=""];
78->98 [style = bold, label=""];
22->74 [style = bold, label=""];
93->1 [style = bold, label=""];
78->56 [style = dotted, label="false"];
1->128 [style = dashed, label="0"];
103->21 [style = bold, label=""];
76->77 [style = bold, label=""];
63->91 [style = bold, label=""];
119->156 [style = bold, label=""];
35->9 [style = dotted, label="true"];
39->99 [style = bold, label=""];
74->36 [style = bold, label=""];
110->101 [style = bold, label=""];
151->150 [style = solid, label="expression"];
60->59 [style = bold, label=""];
84->86 [style = bold, label=""];
43->85 [style = bold, label=""];
66->95 [style = bold, label=""];
7->45 [style = bold, label=""];
19->58 [style = bold, label=""];
49->66 [style = bold, label=""];
89->100 [style = bold, label=""];
18->29 [style = bold, label=""];
123->152 [style = bold, label=""];
78->35 [style = dotted, label="false"];
0->60 [style = bold, label=""];
4->30 [style = bold, label=""];
40->106 [style = bold, label=""];
98->35 [style = solid, label="l"];
78->62 [style = dotted, label="true"];
0->86 [style = dotted, label="false"];
67->151 [style = dashed, label="0"];
125->147 [style = bold, label=""];
31->136 [style = bold, label=""];
13->104 [style = dotted, label="true"];
118->133 [style = bold, label=""];
75->31 [style = bold, label=""];
86->13 [style = bold, label=""];
94->8 [style = solid, label="factory"];
146->143 [style = bold, label=""];
155->57 [style = bold, label=""];
45->5 [style = bold, label=""];
}
