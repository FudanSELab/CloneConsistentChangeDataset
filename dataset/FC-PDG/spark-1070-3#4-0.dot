digraph {
2 [style = filled, label = "client.sendRpc(ByteBuffer.allocate(0),callback0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "callback0@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "clientFactory = context.createClientFactory()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "callback1.wait(FOREVER)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotNull(callback1.failure)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "semaphore.release()@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "timeoutInactiveRequests['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "server = context.createServer()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client0.sendRpc(ByteBuffer.allocate(0),callback0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TransportClient client = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNull(callback1.failure)@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RpcHandler handler = new RpcHandler(){@Override public void receive(TransportClient client,ByteBuffer message,RpcResponseCallback callback){try {semaphore.tryAcquire(FOREVER,TimeUnit.MILLISECONDS)callback.onSuccess(ByteBuffer.allocate(responseSize))}catch (InterruptedException e) }@Override public StreamManager getStreamManager(){return defaultManager}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "callback1.wait(4 * 1000)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TransportClient client0 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(callback1.failure instanceof IOException)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assert(callback1.failure != null)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "TestCallback callback1 = new TestCallback()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client1.sendRpc(ByteBuffer.allocate(0),callback1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "semaphore.release(2)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "TransportContext context = new TransportContext(conf,handler)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestCallback callback1 = new TestCallback()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "timeoutCleanlyClosesClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assert(callback0.failure instanceof IOException)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(responseSize,callback1.successLength)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestCallback callback0 = new TestCallback()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "timeoutInactiveRequests['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(responseSize,callback0.successLength)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "callback1@@@33@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int responseSize = 16@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TransportClient client1 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Semaphore semaphore = new Semaphore(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "callback0.wait(FOREVER)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assert(!client0.isActive())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assert(callback1.failure instanceof IOException)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->30 [style = dotted, label="true"];
29->15 [style = bold, label=""];
27->1 [style = bold, label=""];
12->20 [style = dashed, label="0"];
9->0 [style = bold, label=""];
10->28 [style = dotted, label="true"];
8->31 [style = bold, label=""];
28->34 [style = bold, label=""];
7->12 [style = bold, label=""];
10->24 [style = bold, label=""];
31->0 [style = bold, label=""];
25->30 [style = bold, label=""];
33->28 [style = bold, label=""];
12->32 [style = dashed, label="0"];
1->22 [style = dotted, label="true"];
18->19 [style = bold, label=""];
0->24 [style = solid, label="callback0"];
1->6 [style = solid, label="callback1"];
30->32 [style = bold, label=""];
6->32 [style = dotted, label="true"];
7->20 [style = bold, label=""];
10->33 [style = dotted, label="true"];
4->33 [style = bold, label=""];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
32->26 [style = bold, label=""];
13->26 [style = dashed, label="0"];
20->22 [style = bold, label=""];
15->18 [style = solid, label="responseSize"];
0->10 [style = solid, label="callback0"];
1->7 [style = dotted, label="true"];
23->29 [style = bold, label=""];
1->13 [style = dotted, label="true"];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
13->17 [style = bold, label=""];
0->10 [style = bold, label=""];
24->4 [style = bold, label=""];
1->6 [style = bold, label=""];
5->1 [style = solid, label="callback1"];
6->26 [style = dotted, label="true"];
9->31 [style = dashed, label="0"];
6->25 [style = dashed, label="0"];
18->19 [style = solid, label="handler"];
15->32 [style = solid, label="responseSize"];
10->2 [style = dotted, label="true"];
10->11 [style = dotted, label="true"];
0->2 [style = solid, label="callback0"];
10->24 [style = dotted, label="true"];
3->8 [style = bold, label=""];
7->30 [style = dashed, label="0"];
1->12 [style = dotted, label="true"];
6->25 [style = dotted, label="true"];
8->9 [style = bold, label=""];
22->17 [style = bold, label=""];
16->14 [style = bold, label=""];
1->6 [style = dotted, label="true"];
14->15 [style = bold, label=""];
10->2 [style = bold, label=""];
10->4 [style = dotted, label="true"];
2->24 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
5->6 [style = solid, label="callback1"];
34->27 [style = bold, label=""];
14->29 [style = dashed, label="0"];
13->22 [style = dashed, label="0"];
19->3 [style = bold, label=""];
1->25 [style = solid, label="callback1"];
1->20 [style = dotted, label="true"];
6->25 [style = bold, label=""];
21->14 [style = bold, label=""];
15->11 [style = solid, label="responseSize"];
}
