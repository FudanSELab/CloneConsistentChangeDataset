digraph {
33 [style = filled, label = "testCursorClosedOnSessionClose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "shouldGetAllUser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "user = iterator.next()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assertions.assertEquals(1,user.getGroups().size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assertions.assertTrue(usersCursor.isConsumed())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assertions.assertEquals(1,user.getRoles().size())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assertions.assertEquals(3,user.getGroups().size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assertions.assertEquals(\"User1\",user.getName())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "User user = iterator.next()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "user = iterator.next()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "user = iterator.next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "shouldGetAllUser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertEquals(2,user.getRoles().size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->17 [style = bold, label=""];
21->10 [style = bold, label=""];
9->0 [style = bold, label=""];
16->31 [style = dashed, label="0"];
11->14 [style = bold, label=""];
10->19 [style = bold, label=""];
12->20 [style = bold, label=""];
5->15 [style = bold, label=""];
4->18 [style = bold, label=""];
7->31 [style = bold, label=""];
33->5 [style = bold, label=""];
1->26 [style = bold, label=""];
34->30 [style = bold, label=""];
30->29 [style = bold, label=""];
14->1 [style = bold, label=""];
24->5 [style = bold, label=""];
31->34 [style = bold, label=""];
22->3 [style = bold, label=""];
26->12 [style = bold, label=""];
15->11 [style = bold, label=""];
19->13 [style = bold, label=""];
17->2 [style = bold, label=""];
3->8 [style = bold, label=""];
0->22 [style = bold, label=""];
23->6 [style = bold, label=""];
29->32 [style = bold, label=""];
7->16 [style = bold, label=""];
4->34 [style = dashed, label="0"];
18->9 [style = bold, label=""];
13->23 [style = bold, label=""];
27->5 [style = bold, label=""];
20->7 [style = bold, label=""];
16->4 [style = bold, label=""];
32->28 [style = bold, label=""];
8->25 [style = bold, label=""];
25->21 [style = bold, label=""];
}
