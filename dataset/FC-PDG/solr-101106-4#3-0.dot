digraph {
36 [style = filled, label = "assertTrue(newFieldTypeRepresentation.getFields().contains(fieldName))@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertValidSchemaResponse(addFieldResponse)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "charFilterAttributes.put(\"pattern\",\"((a-zA-Z()\\1+\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testAddFieldTypeAccuracy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String dynamicFieldName = \"*_accuracy\"@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "fieldTypeDefinition.setAttributes(fieldTypeAttributes)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "charFilterAttributes.put(\"class\",\"solr.PatternReplaceCharFilterFactory\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "List<FieldTypeRepresentation> currentFieldTypes = currentFieldTypesResponse.getFieldTypes()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertValidSchemaResponse(addFieldTypeResponse)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(analyzerDefinition.getTokenizer().get(\"class\"),is(equalTo(newFieldTypeRepresentation.getAnalyzer().getTokenizer().get(\"class\"))))@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SchemaResponse.FieldTypesResponse initialFieldTypesResponse = fieldTypesRequest.process(getSolrClient())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "fieldTypeAttributes.put(\"class\",\"solr.TextField\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "return new SchemaRequest.AddFieldType(fieldTypeDefinition)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "SchemaRequest.AddDynamicField addDynamicFieldRequest = new SchemaRequest.AddDynamicField(dynamicFieldAttributes)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "queryAnalyzerDefinition.setTokenizer(qTokenizerAttributes)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "SchemaResponse.FieldTypesResponse currentFieldTypesResponse = fieldTypesRequest.process(getSolrClient())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "String fieldTypeName = \"accuracyTextField\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "fieldTypeAttributes.put(\"name\",fieldTypeName)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "analyzerDefinition.setFilters(Collections.singletonList(filterAttributes))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "filterAttributes.put(\"preserveOriginal\",\"0\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "analyzerDefinition.setTokenizer(tokenizerAttributes)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "iTokenizerAttributes.put(\"class\",\"solr.PathHierarchyTokenizerFactory\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "iTokenizerAttributes.put(\"delimiter\",\"/\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testAddFieldTypeAccuracy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "SchemaResponse.UpdateResponse addFieldResponse = addFieldRequest.process(getSolrClient())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "fieldAttributes.put(\"type\",fieldTypeName)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "Map<String,Object> fieldTypeAttributes = new LinkedHashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "String fieldTypeName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertValidSchemaResponse(addDynamicFieldResponse)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "fieldTypeAttributes.put(\"positionIncrementGap\",\"100\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "createFieldTypeRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "SchemaRequest.AddField addFieldRequest = new SchemaRequest.AddField(fieldAttributes)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Map<String,Object> dynamicFieldAttributes = new LinkedHashMap<>()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(newFieldTypeRepresentation.getFields().size() == 1)@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "AnalyzerDefinition analyzerDefinition = new AnalyzerDefinition()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "analyzerDefinition.setCharFilters(Collections.singletonList(charFilterAttributes))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertValidSchemaResponse(newFieldTypeResponse)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String fieldName = \"accuracyField\"@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SchemaResponse.UpdateResponse addFieldTypeResponse = addFieldTypeRequest.process(getSolrClient())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<String,Object> fieldAttributes = new LinkedHashMap<>()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Map<String,Object> tokenizerAttributes = new LinkedHashMap<>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fieldAttributes.put(\"name\",fieldName)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertValidSchemaResponse(initialFieldTypesResponse)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(newFieldTypeRepresentation.getDynamicFields().contains(dynamicFieldName))@@@59@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "SchemaRequest.FieldTypes fieldTypesRequest = new SchemaRequest.FieldTypes()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SchemaResponse.FieldTypeResponse newFieldTypeResponse = fieldTypeRequest.process(getSolrClient())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<String,Object> iTokenizerAttributes = new LinkedHashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(newFieldTypeRepresentation.getDynamicFields().size() == 1)@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "Map<String,Object> qTokenizerAttributes = new LinkedHashMap<>()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "fieldTypeDefinition.setAnalyzer(analyzerDefinition)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Map<String,Object> filterAttributes = new LinkedHashMap<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "SchemaRequest.FieldType fieldTypeRequest = new SchemaRequest.FieldType(fieldTypeName)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "FieldTypeDefinition fieldTypeDefinition = new FieldTypeDefinition()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "AnalyzerDefinition queryAnalyzerDefinition = new AnalyzerDefinition()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "fieldTypeDefinition.setQueryAnalyzer(queryAnalyzerDefinition)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "charFilterAttributes.put(\"replacement\",\"$1$1\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "FieldTypeRepresentation newFieldTypeRepresentation = newFieldTypeResponse.getFieldType()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "SchemaResponse.UpdateResponse addDynamicFieldResponse = addDynamicFieldRequest.process(getSolrClient())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(initialFieldTypes.size() + 1,currentFieldTypes.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<FieldTypeRepresentation> initialFieldTypes = initialFieldTypesResponse.getFieldTypes()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "filterAttributes.put(\"class\",\"solr.WordDelimiterFilterFactory\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "indexAnalyzerDefinition.setTokenizer(iTokenizerAttributes)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "dynamicFieldAttributes.put(\"name\",dynamicFieldName)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(\"solr.TextField\",is(equalTo(newFieldTypeRepresentation.getAttributes().get(\"class\"))))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "qTokenizerAttributes.put(\"class\",\"solr.KeywordTokenizerFactory\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Map<String,Object> charFilterAttributes = new LinkedHashMap<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SchemaRequest.AddFieldType addFieldTypeRequest = new SchemaRequest.AddFieldType(fieldTypeDefinition)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tokenizerAttributes.put(\"class\",\"solr.WhitespaceTokenizerFactory\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "AnalyzerDefinition indexAnalyzerDefinition = new AnalyzerDefinition()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "fieldTypeDefinition.setIndexAnalyzer(indexAnalyzerDefinition)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(fieldTypeName,is(equalTo(newFieldTypeRepresentation.getAttributes().get(\"name\"))))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "dynamicFieldAttributes.put(\"type\",fieldTypeName)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(0,currentFieldTypesResponse.getStatus())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55->17 [style = bold, label=""];
62->14 [style = bold, label=""];
14->9 [style = solid, label="fieldTypeDefinition"];
27->38 [style = bold, label=""];
29->18 [style = solid, label="filterAttributes"];
17->59 [style = dashed, label="0"];
69->60 [style = bold, label=""];
8->37 [style = solid, label="dynamicFieldName"];
43->60 [style = dashed, label="0"];
22->0 [style = dashed, label="0"];
28->9 [style = bold, label=""];
52->55 [style = bold, label=""];
30->49 [style = bold, label=""];
24->43 [style = bold, label=""];
4->36 [style = solid, label="fieldName"];
11->36 [style = bold, label=""];
50->6 [style = solid, label="addDynamicFieldResponse"];
59->66 [style = bold, label=""];
61->64 [style = bold, label=""];
21->2 [style = bold, label=""];
3->35 [style = bold, label=""];
34->24 [style = bold, label=""];
70->71 [style = bold, label=""];
46->32 [style = solid, label="fieldTypeName"];
8->15 [style = solid, label="dynamicFieldName"];
51->7 [style = bold, label=""];
60->63 [style = bold, label=""];
9->5 [style = bold, label=""];
52->47 [style = dashed, label="0"];
49->56 [style = bold, label=""];
43->29 [style = bold, label=""];
31->46 [style = bold, label=""];
29->1 [style = bold, label=""];
19->65 [style = solid, label="iTokenizerAttributes"];
16->45 [style = bold, label=""];
64->14 [style = solid, label="fieldTypeAttributes"];
58->35 [style = bold, label=""];
1->42 [style = bold, label=""];
18->28 [style = bold, label=""];
66->69 [style = bold, label=""];
23->14 [style = bold, label=""];
41->53 [style = bold, label=""];
7->33 [style = bold, label=""];
17->34 [style = bold, label=""];
55->65 [style = dashed, label="0"];
7->33 [style = solid, label="newFieldTypeResponse"];
68->67 [style = dotted, label="true"];
56->13 [style = bold, label=""];
25->26 [style = bold, label=""];
46->2 [style = solid, label="fieldTypeName"];
47->41 [style = bold, label=""];
46->19 [style = bold, label=""];
34->43 [style = solid, label="tokenizerAttributes"];
41->31 [style = dashed, label="0"];
27->38 [style = solid, label="addFieldResponse"];
41->28 [style = solid, label="analyzerDefinition"];
69->63 [style = solid, label="qTokenizerAttributes"];
39->37 [style = bold, label=""];
13->10 [style = bold, label=""];
0->57 [style = bold, label=""];
64->72 [style = bold, label=""];
8->15 [style = bold, label=""];
31->59 [style = solid, label="indexAnalyzerDefinition"];
53->17 [style = solid, label="charFilterAttributes"];
4->20 [style = solid, label="fieldName"];
6->51 [style = bold, label=""];
63->70 [style = bold, label=""];
61->71 [style = solid, label="fieldTypeDefinition"];
36->39 [style = bold, label=""];
19->0 [style = bold, label=""];
35->25 [style = bold, label=""];
31->47 [style = solid, label="fieldTypeAttributes"];
67->72 [style = solid, label="fieldTypeName"];
48->11 [style = bold, label=""];
14->31 [style = bold, label=""];
4->20 [style = bold, label=""];
32->44 [style = bold, label=""];
46->51 [style = solid, label="fieldTypeName"];
2->54 [style = bold, label=""];
57->47 [style = bold, label=""];
38->40 [style = bold, label=""];
31->19 [style = bold, label=""];
10->44 [style = solid, label="fieldAttributes"];
46->16 [style = solid, label="fieldTypeName"];
72->62 [style = bold, label=""];
42->18 [style = bold, label=""];
50->6 [style = bold, label=""];
66->70 [style = solid, label="queryAnalyzerDefinition"];
24->69 [style = dashed, label="0"];
46->19 [style = solid, label="fieldTypeName"];
22->52 [style = bold, label=""];
20->32 [style = bold, label=""];
54->48 [style = bold, label=""];
12->30 [style = bold, label=""];
53->19 [style = dashed, label="0"];
53->22 [style = bold, label=""];
15->16 [style = bold, label=""];
0->47 [style = bold, label=""];
5->12 [style = bold, label=""];
5->12 [style = solid, label="addFieldTypeResponse"];
45->50 [style = bold, label=""];
26->23 [style = bold, label=""];
65->59 [style = bold, label=""];
10->4 [style = bold, label=""];
47->65 [style = bold, label=""];
68->61 [style = bold, label=""];
44->27 [style = bold, label=""];
33->21 [style = bold, label=""];
25->26 [style = solid, label="initialFieldTypesResponse"];
40->8 [style = bold, label=""];
40->45 [style = solid, label="dynamicFieldAttributes"];
}
