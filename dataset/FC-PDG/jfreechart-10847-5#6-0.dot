digraph {
6 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "m1.update(7,2,22.0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(m1,m2)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MatrixSeries m2 = (MatrixSeries)TestUtils.serialised(m1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ValueMarker m1 = new ValueMarker(25.0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "m1.update(0,0,11.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(m1.equals(m2))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ValueMarker m2 = CloneUtils.clone(m1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "MatrixSeries m1 = new MatrixSeries(\"Test\",8,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(m1 != m2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ValueMarker m2 = (ValueMarker)m1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
12->11 [style = solid, label="m1"];
3->1 [style = bold, label=""];
7->1 [style = solid, label="m2"];
0->7 [style = solid, label="m1"];
0->2 [style = bold, label=""];
6->0 [style = bold, label=""];
7->4 [style = bold, label=""];
0->12 [style = dashed, label="0"];
2->7 [style = dashed, label="0"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
2->4 [style = solid, label="m2"];
0->7 [style = bold, label=""];
0->4 [style = solid, label="m1"];
12->13 [style = solid, label="m1"];
5->0 [style = bold, label=""];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
7->4 [style = solid, label="m2"];
1->11 [style = dashed, label="0"];
8->9 [style = bold, label=""];
2->1 [style = solid, label="m2"];
13->11 [style = solid, label="m2"];
9->13 [style = bold, label=""];
}
