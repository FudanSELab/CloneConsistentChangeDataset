digraph {
14 [style = filled, label = "assertCommonParts(failure,analysis)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "analysisWithKnownPropertyAndOtherCandidates['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "InvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\"test.property\",\"invalid\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MapPropertySource source = new MapPropertySource(\"test\",Collections.singletonMap(\"test.property\",\"invalid\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(analysis.getAction()).contains(\"Review the value of the property with the provided reason.\")@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "InvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\"test.property\",\"invalid\",\"This is not valid.\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertCommonParts(failure,analysis)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "analysisWithKnownPropertyAndNoReason['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "MapPropertySource additional = new MapPropertySource(\"additional\",Collections.singletonMap(\"test.property\",\"valid\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "FailureAnalysis analysis = performAnalysis(failure)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MapPropertySource another = new MapPropertySource(\"another\",Collections.singletonMap(\"test.property\",\"test\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.environment.getPropertySources().addLast(OriginCapablePropertySource.get(another))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.environment.getPropertySources().addLast(additional)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "analysisWithKnownPropertyAndOtherCandidates['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.environment.getPropertySources().addFirst(OriginCapablePropertySource.get(source))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(analysis.getDescription()).contains(\"Additionally, this property is also set in the following \" + \"property sources:\").contains(\"In 'additional' with the value 'valid'\").contains(\"In 'another' with the value 'test' (originating from 'TestOrigin test.property')\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(analysis.getDescription()).contains(\"No reason was provided.\").doesNotContain(\"Additionally, this property is also set\")@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = bold, label=""];
0->4 [style = solid, label="another"];
7->8 [style = bold, label=""];
9->5 [style = solid, label="failure"];
8->4 [style = bold, label=""];
6->8 [style = solid, label="additional"];
0->7 [style = bold, label=""];
6->0 [style = bold, label=""];
5->10 [style = solid, label="analysis"];
11->1 [style = bold, label=""];
10->11 [style = bold, label=""];
15->13 [style = solid, label="failure"];
5->10 [style = bold, label=""];
3->7 [style = bold, label=""];
2->3 [style = bold, label=""];
3->6 [style = bold, label=""];
13->14 [style = solid, label="analysis"];
10->1 [style = bold, label=""];
3->7 [style = solid, label="source"];
9->10 [style = solid, label="failure"];
12->3 [style = bold, label=""];
16->3 [style = bold, label=""];
4->9 [style = bold, label=""];
15->14 [style = solid, label="failure"];
15->13 [style = bold, label=""];
7->15 [style = bold, label=""];
13->14 [style = bold, label=""];
9->5 [style = bold, label=""];
}
