digraph {
35 [style = filled, label = "int expectCreateNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testLocalTriggeredCallback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "testZkTriggeredCallback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Thread.sleep(1000)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "listener.reset()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "store.remove(\"/\",0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "listener._deleteKeys.size() == expectDeleteNodes@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "System.out.println(\"END testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "setNodes(_gZkClient,subRoot,'a',true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Thread.sleep(500)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "store.stop()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "listener.reset()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int i = 0@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testLocalTriggeredCallback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "listener.reset()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "store.subscribe(\"/\",listener)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(listener._deleteKeys.size() == expectDeleteNodes,\"Should receive \" + expectDeleteNodes + \" delete callbacks\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i++@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "System.out.println(\"END testZkTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "_gZkClient.deleteRecursive(subRoot)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int expectDeleteNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "subscribedPaths.add(subRoot)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Thread.sleep(500)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<String> subscribedPaths = new ArrayList<String>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "store.stop()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Thread.sleep(500)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ZkHelixPropertyStore<ZNRecord> store = new ZkHelixPropertyStore<ZNRecord>(new ZkBaseDataAccessor<ZNRecord>(_gZkClient),subRoot,subscribedPaths)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "System.out.println(\"START testZkTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int expectChangeNodes = firstLevelNr * secondLevelNr@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setNodes(store,'b',true)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < 10@@@26@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "String subRoot = _root + \"/\" + \"localCallback\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertTrue(listener._createKeys.size() == expectCreateNodes,\"Should receive \" + expectCreateNodes + \" create callbacks\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Thread.sleep(500)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(listener._deleteKeys.size() == expectDeleteNodes,\"Should receive \" + expectDeleteNodes + \" delete callbacks\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setNodes(store,'a',true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String subRoot = _root + \"/\" + \"zkCallback\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "TestListener listener = new TestListener()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Thread.sleep(500)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertTrue(listener._changeKeys.size() >= expectChangeNodes,\"Should receive at least \" + expectChangeNodes + \" change callbacks\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "List<String> subscribedPaths = Arrays.asList(subRoot)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "System.out.println(\"START testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "setNodes(_gZkClient,subRoot,'b',true)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->28 [style = dotted, label="true"];
0->13 [style = bold, label=""];
35->41 [style = bold, label=""];
33->27 [style = solid, label="subRoot"];
12->42 [style = bold, label=""];
41->20 [style = bold, label=""];
22->12 [style = solid, label="expectChangeNodes"];
9->16 [style = bold, label=""];
19->44 [style = bold, label=""];
7->9 [style = bold, label=""];
10->1 [style = dashed, label="0"];
21->31 [style = bold, label=""];
20->27 [style = solid, label="expectCreateNodes"];
23->3 [style = solid, label="listener"];
4->8 [style = bold, label=""];
32->17 [style = dotted, label="true"];
26->5 [style = solid, label="store"];
33->37 [style = solid, label="subRoot"];
31->32 [style = solid, label="i"];
37->26 [style = bold, label=""];
16->6 [style = bold, label=""];
1->35 [style = bold, label=""];
23->3 [style = bold, label=""];
32->7 [style = bold, label=""];
39->45 [style = bold, label=""];
20->38 [style = bold, label=""];
11->36 [style = dashed, label="0"];
27->22 [style = bold, label=""];
13->11 [style = bold, label=""];
22->5 [style = bold, label=""];
33->36 [style = solid, label="subRoot"];
38->2 [style = bold, label=""];
11->26 [style = solid, label="subscribedPaths"];
18->20 [style = bold, label=""];
19->9 [style = solid, label="expectDeleteNodes"];
5->27 [style = dashed, label="0"];
35->38 [style = solid, label="expectCreateNodes"];
26->23 [style = solid, label="listener"];
29->32 [style = bold, label=""];
33->36 [style = bold, label=""];
26->10 [style = solid, label="store"];
2->27 [style = bold, label=""];
43->33 [style = bold, label=""];
13->33 [style = dashed, label="0"];
36->37 [style = bold, label=""];
19->28 [style = solid, label="expectDeleteNodes"];
25->0 [style = bold, label=""];
10->18 [style = bold, label=""];
24->12 [style = bold, label=""];
3->1 [style = bold, label=""];
6->7 [style = dashed, label="0"];
31->32 [style = bold, label=""];
8->14 [style = bold, label=""];
14->19 [style = bold, label=""];
0->43 [style = dashed, label="0"];
42->4 [style = bold, label=""];
5->24 [style = bold, label=""];
28->17 [style = bold, label=""];
22->39 [style = bold, label=""];
30->0 [style = bold, label=""];
13->15 [style = solid, label="subRoot"];
32->29 [style = dotted, label="true"];
33->8 [style = solid, label="subRoot"];
34->43 [style = bold, label=""];
19->21 [style = bold, label=""];
29->32 [style = solid, label="i"];
28->7 [style = bold, label=""];
44->40 [style = bold, label=""];
36->37 [style = solid, label="subscribedPaths"];
17->14 [style = dashed, label="0"];
31->29 [style = solid, label="i"];
11->15 [style = bold, label=""];
15->26 [style = bold, label=""];
45->12 [style = bold, label=""];
20->2 [style = bold, label=""];
17->7 [style = bold, label=""];
13->26 [style = solid, label="subRoot"];
12->8 [style = solid, label="expectChangeNodes"];
40->7 [style = bold, label=""];
12->4 [style = bold, label=""];
26->23 [style = bold, label=""];
4->44 [style = solid, label="expectDeleteNodes"];
17->29 [style = bold, label=""];
1->10 [style = bold, label=""];
32->28 [style = bold, label=""];
21->17 [style = bold, label=""];
33->1 [style = solid, label="subRoot"];
}
