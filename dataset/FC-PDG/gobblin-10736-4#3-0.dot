digraph {
20 [style = filled, label = "this.flowCatalog.addListener(mockListener)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "this.mockListener = mock()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "this.orchestrator = new Orchestrator(ConfigUtils.propertiesToConfig(orchestratorProperties),Optional.of(this.topologyCatalog),Optional.absent(),Optional.of(logger))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.serviceLauncher.addService(flowCatalog)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.flowCatalog = new FlowCatalog(ConfigUtils.propertiesToConfig(flowProperties),Optional.of(logger))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "this.topologyCatalog.addListener(orchestrator)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "flowProperties.put(\"specStore.fs.dir\",FLOW_SPEC_STORE_DIR)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.topologySpec = initTopologySpec()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this.serviceLauncher.start()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "File specStoreDir = new File(SPEC_STORE_DIR)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.serviceLauncher = new ServiceBasedAppLauncher(orchestratorProperties,\"OrchestratorCatalogTest\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(topologyProperties),Optional.of(logger))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "properties.put(\"specStore.fs.dir\",SPEC_STORE_DIR)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "this.flowCatalog.addListener(orchestrator)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Properties topologyProperties = new Properties()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "this.topologyCatalog = new TopologyCatalog(ConfigUtils.propertiesToConfig(properties),Optional.of(logger))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "FileUtils.deleteDirectory(specStoreDir)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Properties flowProperties = new Properties()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "specStoreDir.exists()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "this.flowSpec = initFlowSpec()@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Properties properties = new Properties()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "this.serviceLauncher.addService(topologyCatalog)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "when(mockListener.getName()).thenReturn(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_SCHEDULER_LISTENER_CLASS)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "this.serviceLauncher = new ServiceBasedAppLauncher(properties,\"TopologyCatalogTest\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Properties orchestratorProperties = new Properties()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cleanUpDir(TOPOLOGY_SPEC_STORE_DIR)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "topologyProperties.put(\"specStore.fs.dir\",TOPOLOGY_SPEC_STORE_DIR)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cleanUpDir(FLOW_SPEC_STORE_DIR)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(mockListener.onAddSpec(any())).thenReturn(new AddSpecResponse(\"\"))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "this.topologySpec = initTopologySpec()@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
29->30 [style = bold, label=""];
31->25 [style = dotted, label="true"];
26->27 [style = solid, label="properties"];
22->19 [style = bold, label=""];
11->4 [style = bold, label=""];
7->11 [style = solid, label="topologyCatalog"];
26->30 [style = solid, label="properties"];
1->9 [style = bold, label=""];
14->3 [style = bold, label=""];
8->5 [style = bold, label=""];
10->6 [style = bold, label=""];
12->4 [style = solid, label="flowProperties"];
6->15 [style = bold, label=""];
12->14 [style = bold, label=""];
2->13 [style = bold, label=""];
5->17 [style = solid, label="orchestrator"];
25->26 [style = bold, label=""];
28->32 [style = bold, label=""];
27->24 [style = solid, label="topologyCatalog"];
6->32 [style = dashed, label="0"];
24->11 [style = bold, label=""];
20->8 [style = bold, label=""];
4->8 [style = solid, label="flowCatalog"];
11->1 [style = bold, label=""];
4->8 [style = bold, label=""];
4->22 [style = bold, label=""];
19->23 [style = bold, label=""];
7->11 [style = bold, label=""];
31->26 [style = bold, label=""];
3->7 [style = bold, label=""];
7->5 [style = solid, label="topologyCatalog"];
5->17 [style = bold, label=""];
30->27 [style = bold, label=""];
27->24 [style = bold, label=""];
13->12 [style = bold, label=""];
15->0 [style = bold, label=""];
16->1 [style = bold, label=""];
32->31 [style = bold, label=""];
23->20 [style = bold, label=""];
22->20 [style = solid, label="mockListener"];
0->3 [style = solid, label="orchestratorProperties"];
0->5 [style = solid, label="orchestratorProperties"];
0->2 [style = bold, label=""];
32->25 [style = solid, label="specStoreDir"];
17->16 [style = bold, label=""];
21->6 [style = bold, label=""];
26->29 [style = bold, label=""];
2->7 [style = solid, label="topologyProperties"];
31->25 [style = bold, label=""];
5->16 [style = solid, label="orchestrator"];
}
