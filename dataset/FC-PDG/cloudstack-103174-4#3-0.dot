digraph {
51 [style = filled, label = "fail(e.getMessage())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "verify(vm,times(1)).getDisks()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "verify(vm,times(1)).getNics()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "BDDMockito.given(libvirtComputingResource.getVifDriver(nicTO.getType(),nicTO.getName())).willAnswer(null)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "when(libvirtComputingResource.getVifDriver(nicTO.getType(),nicTO.getName())).thenReturn(vifDriver)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertNotNull(wrapper)@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final URISyntaxException e@@@34@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(storagePoolManager)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "testPrepareForMigrationCommandInternalErrorException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(vm.getName())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(vm.getNics()).thenReturn(new NicTO((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@74c8e5)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(libvirtComputingResource,times(1)).getStoragePoolMgr()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(libvirtComputingResource.getVifDriver(nicTO.getType(),nicTO.getName())).thenThrow()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertFalse(answer.getResult())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(storagePoolManager)@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(libvirtComputingResource,times(1)).getStoragePoolMgr()@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(vm.getName())).thenReturn(conn)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "verify(volume,times(1)).getType()@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Connect conn = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final LibvirtException e@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "when(libvirtComputingResource.getVolumePath(conn,volume)).thenThrow()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(answer.getResult())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(libvirtComputingResource.getVolumePath(conn,volume)).thenReturn(\"/path\")@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(nicTO.getType()).thenReturn(TrafficType.Guest)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final LibvirtException e@@@26@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final KVMStoragePoolManager storagePoolManager = Mockito.mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fail(e.getMessage())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final LibvirtException e@@@45@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "verify(vm,times(1)).getNics()@@@47@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "fail(e.getMessage())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testPrepareForMigrationCommandInternalErrorException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testPrepareForMigrationCommandURISyntaxException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "when(vm.getDisks()).thenReturn(new DiskTO((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@74c8f1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(storagePoolManager)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final NicTO nicTO = Mockito.mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "fail(e.getMessage())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final LibvirtException e@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final VirtualMachineTO vm = Mockito.mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final LibvirtException e@@@40@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final LibvirtException e@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final DiskTO volume = Mockito.mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final URISyntaxException e@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "when(volume.getType()).thenReturn(Volume.Type.ISO)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final PrepareForMigrationCommand command = new PrepareForMigrationCommand(vm)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final LibvirtException e@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final VifDriver vifDriver = Mockito.mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->0 [style = bold, label=""];
25->22 [style = bold, label=""];
28->20 [style = bold, label=""];
20->40 [style = dashed, label="0"];
30->52 [style = bold, label=""];
10->17 [style = bold, label=""];
21->30 [style = bold, label=""];
25->48 [style = bold, label=""];
30->6 [style = bold, label=""];
25->35 [style = bold, label=""];
30->18 [style = bold, label=""];
9->35 [style = bold, label=""];
29->18 [style = bold, label=""];
7->26 [style = bold, label=""];
29->6 [style = bold, label=""];
40->11 [style = bold, label=""];
8->32 [style = solid, label="command"];
26->44 [style = solid, label="volume"];
39->49 [style = bold, label=""];
51->11 [style = bold, label=""];
29->51 [style = bold, label=""];
9->39 [style = bold, label=""];
12->28 [style = bold, label=""];
12->37 [style = dashed, label="0"];
3->29 [style = dotted, label="true"];
6->15 [style = solid, label="wrapper"];
18->11 [style = bold, label=""];
22->9 [style = bold, label=""];
14->10 [style = bold, label=""];
25->48 [style = dotted, label="true"];
45->38 [style = solid, label="vifDriver"];
27->16 [style = bold, label=""];
36->14 [style = bold, label=""];
10->13 [style = solid, label="libvirtUtilitiesHelper"];
20->18 [style = bold, label=""];
18->11 [style = dotted, label="true"];
17->2 [style = bold, label=""];
21->30 [style = dotted, label="true"];
18->11 [style = solid, label="wrapper"];
38->46 [style = bold, label=""];
46->40 [style = bold, label=""];
22->9 [style = dotted, label="true"];
19->22 [style = bold, label=""];
3->29 [style = bold, label=""];
2->28 [style = solid, label="storagePoolManager"];
4->14 [style = bold, label=""];
31->25 [style = bold, label=""];
2->46 [style = solid, label="storagePoolManager"];
0->12 [style = bold, label=""];
26->8 [style = bold, label=""];
32->19 [style = bold, label=""];
15->19 [style = bold, label=""];
11->24 [style = bold, label=""];
43->9 [style = bold, label=""];
6->15 [style = bold, label=""];
17->8 [style = solid, label="vm"];
16->44 [style = bold, label=""];
14->23 [style = solid, label="conn"];
45->8 [style = bold, label=""];
5->27 [style = dotted, label="true"];
8->6 [style = solid, label="command"];
2->34 [style = solid, label="storagePoolManager"];
29->51 [style = dotted, label="true"];
1->25 [style = bold, label=""];
41->14 [style = bold, label=""];
8->13 [style = bold, label=""];
30->52 [style = dotted, label="true"];
52->11 [style = bold, label=""];
23->16 [style = bold, label=""];
1->25 [style = dotted, label="true"];
42->43 [style = bold, label=""];
7->16 [style = solid, label="nicTO"];
0->37 [style = bold, label=""];
8->24 [style = solid, label="command"];
19->31 [style = bold, label=""];
11->6 [style = bold, label=""];
35->33 [style = bold, label=""];
48->9 [style = bold, label=""];
34->30 [style = bold, label=""];
0->50 [style = bold, label=""];
49->47 [style = bold, label=""];
50->38 [style = bold, label=""];
15->42 [style = bold, label=""];
37->34 [style = bold, label=""];
13->23 [style = bold, label=""];
26->45 [style = bold, label=""];
5->27 [style = bold, label=""];
2->7 [style = bold, label=""];
24->6 [style = bold, label=""];
15->32 [style = bold, label=""];
11->24 [style = solid, label="wrapper"];
44->0 [style = bold, label=""];
}
