digraph {
20 [style = filled, label = "instanceParam.perNodeScanRanges.put(nodeScanRange.getKey(),Lists.newArrayList())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "filteredNodeScanRanges.put(scanNodeId,nodeScanRanges.get(scanNodeId))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expectedInstanceNum = Math.min(scanRange.size(),parallelExecInstanceNum)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@44@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "computeColocateJoinInstanceParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FragmentScanRangeAssignment assignment = params.scanRangeAssignment@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>> scanRange = addressScanRange.getValue()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "addressToScanRanges.put(address,Lists.newArrayList())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int expectedInstanceNum = 1@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "range.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "addressToScanRanges.get(address).add(filteredScanRanges)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "computeInstanceParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "range.put(nodeScanRange.getKey(),Lists.newArrayList())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "BucketSeqToScanRange bucketSeqToScanRange = fragmentIdBucketSeqToScanRangeMap.get(fragmentId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "scanNodeIds.contains(scanNodeId)@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "computeColocateJoinInstanceParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "Map<Integer,List<TScanRangeParams>> filteredNodeScanRanges = Maps.newHashMap()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Pair<Integer,Map<Integer,List<TScanRangeParams>>> filteredScanRanges = Pair.create(scanRanges.getKey(),filteredNodeScanRanges)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "FragmentExecParams params@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Map<Integer,List<TScanRangeParams>> nodeScanRanges = scanRanges.getValue()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FragmentExecParams params@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "instanceParam.bucketSeqSet.add(nodeScanRangeMap.first)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<Integer,List<TScanRangeParams>> range = findOrInsert(assignment,addressScanRange.getKey(),new HashMap<Integer,List<TScanRangeParams>>())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "FragmentExecParams params@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<TNetworkAddress,List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> addressToScanRanges = Maps.newHashMap()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Map<Integer,TNetworkAddress> bucketSeqToAddress = fragmentIdToSeqToAddressMap.get(fragmentId)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "instanceParam.addBucketSeq(nodeScanRangeMap.first)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TNetworkAddress address = bucketSeqToAddress.get(scanRanges.getKey())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "!addressToScanRanges.containsKey(address)@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Set<Integer> scanNodeIds = fragmentIdToScanNodeIds.get(fragmentId)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "BucketSeqToScanRange bucketSeqToScanRange = fragmentIdTobucketSeqToScanRangeMap.get(fragmentId)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "FInstanceExecParam instanceParam = new FInstanceExecParam(null,addressScanRange.getKey(),0,params)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "parallelExecInstanceNum > 1@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35->38 [style = dotted, label="true"];
5->14 [style = bold, label=""];
25->16 [style = solid, label="params"];
27->7 [style = bold, label=""];
10->23 [style = bold, label=""];
35->36 [style = dotted, label="true"];
29->17 [style = solid, label="filteredNodeScanRanges"];
23->10 [style = bold, label=""];
24->22 [style = solid, label="fragmentId"];
18->26 [style = solid, label="scanRange"];
28->22 [style = bold, label=""];
22->40 [style = bold, label=""];
33->9 [style = solid, label="parallelExecInstanceNum"];
12->26 [style = solid, label="expectedInstanceNum"];
9->26 [style = bold, label=""];
37->9 [style = solid, label="parallelExecInstanceNum"];
35->22 [style = bold, label=""];
28->24 [style = dotted, label="true"];
4->16 [style = solid, label="params"];
16->39 [style = bold, label=""];
24->5 [style = solid, label="fragmentId"];
31->5 [style = solid, label="fragmentId"];
10->17 [style = bold, label=""];
26->16 [style = bold, label=""];
38->5 [style = solid, label="fragmentId"];
39->13 [style = bold, label=""];
36->16 [style = solid, label="params"];
6->11 [style = bold, label=""];
1->0 [style = solid, label="address"];
7->16 [style = bold, label=""];
32->31 [style = dotted, label="true"];
16->8 [style = bold, label=""];
11->18 [style = bold, label=""];
25->9 [style = solid, label="parallelExecInstanceNum"];
38->22 [style = solid, label="fragmentId"];
12->9 [style = bold, label=""];
27->8 [style = bold, label=""];
28->25 [style = dotted, label="true"];
30->6 [style = bold, label=""];
1->15 [style = bold, label=""];
29->10 [style = bold, label=""];
10->23 [style = dotted, label="true"];
0->6 [style = bold, label=""];
11->19 [style = solid, label="assignment"];
15->29 [style = bold, label=""];
40->5 [style = bold, label=""];
35->37 [style = dotted, label="true"];
7->18 [style = bold, label=""];
32->25 [style = dotted, label="true"];
16->7 [style = solid, label="instanceParam"];
3->26 [style = solid, label="expectedInstanceNum"];
32->33 [style = dotted, label="true"];
28->4 [style = dotted, label="true"];
30->0 [style = bold, label=""];
8->13 [style = bold, label=""];
32->22 [style = bold, label=""];
30->0 [style = dotted, label="true"];
8->39 [style = dashed, label="0"];
23->17 [style = bold, label=""];
17->30 [style = bold, label=""];
6->1 [style = bold, label=""];
17->6 [style = solid, label="filteredScanRanges"];
25->38 [style = dashed, label="0"];
22->5 [style = bold, label=""];
27->39 [style = bold, label=""];
3->26 [style = bold, label=""];
27->13 [style = bold, label=""];
34->5 [style = bold, label=""];
9->3 [style = bold, label=""];
33->3 [style = solid, label="parallelExecInstanceNum"];
25->3 [style = solid, label="parallelExecInstanceNum"];
31->22 [style = solid, label="fragmentId"];
14->1 [style = bold, label=""];
20->21 [style = bold, label=""];
13->2 [style = dotted, label="true"];
22->34 [style = bold, label=""];
18->19 [style = bold, label=""];
31->34 [style = solid, label="fragmentId"];
2->20 [style = bold, label=""];
13->20 [style = dotted, label="true"];
21->27 [style = bold, label=""];
9->3 [style = dotted, label="true"];
13->2 [style = bold, label=""];
37->3 [style = solid, label="parallelExecInstanceNum"];
38->40 [style = solid, label="fragmentId"];
19->12 [style = bold, label=""];
13->21 [style = bold, label=""];
}
