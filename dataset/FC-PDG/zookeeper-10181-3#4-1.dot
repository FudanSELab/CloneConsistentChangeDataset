digraph {
3 [style = filled, label = "testTxnTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testNormalRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testLeaderConversation(new LeaderConversation(){public void converseWithLeader(InputArchive ia,OutputArchive oa,Leader l){Assert.assertEquals(0,l.self.getAcceptedEpoch())Assert.assertEquals(0,l.self.getCurrentEpoch())LearnerInfo li = new LearnerInfo(1,0x10000,0)byte liBytes = new byte((((ByteBufferOutputStream.record2ByteBuffer(li,ByteBuffer.wrap(liBytes))QuorumPacket qp = new QuorumPacket(Leader.FOLLOWERINFO,0,liBytes,null)oa.writeRecord(qp,null)readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.LEADERINFO,qp.getType())Assert.assertEquals(ZxidUtils.makeZxid(1,0),qp.getZxid())Assert.assertEquals(ByteBuffer.wrap(qp.getData()).getInt(),0x10000)Assert.assertEquals(1,l.self.getAcceptedEpoch())Assert.assertEquals(0,l.self.getCurrentEpoch())qp = new QuorumPacket(Leader.ACKEPOCH,0,new byte((((,null)oa.writeRecord(qp,null)readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.DIFF,qp.getType())readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.NEWLEADER,qp.getType())Assert.assertEquals(ZxidUtils.makeZxid(1,0),qp.getZxid())Assert.assertEquals(1,l.self.getAcceptedEpoch())Assert.assertEquals(1,l.self.getCurrentEpoch())qp = new QuorumPacket(Leader.ACK,qp.getZxid(),null,null)oa.writeRecord(qp,null)readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.UPTODATE,qp.getType())long zxid = l.zk.getZxid()l.propose(new Request(1,1,ZooDefs.OpCode.create,new TxnHeader(1,1,zxid,1,ZooDefs.OpCode.create),new CreateTxn(\"/test\",\"hola\".getBytes(),null,true,0),zxid))readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.PROPOSAL,qp.getType())LOG.info(\"Proposal sent.\")for (int i = 0 i < (2 * ZabUtils.SYNC_LIMIT) + 2 i++){try {ia.readRecord(qp,null)LOG.info(\"Ping received: \" + i)qp = new QuorumPacket(Leader.PING,qp.getZxid(),\"\".getBytes(),null)oa.writeRecord(qp,null)}catch (EOFException e) }Assert.fail(\"Connection hasn't been closed by leader after transaction times out.\")}})@@@3@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testNormalRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->1 [style = bold, label=""];
2->1 [style = bold, label=""];
3->1 [style = bold, label=""];
}
