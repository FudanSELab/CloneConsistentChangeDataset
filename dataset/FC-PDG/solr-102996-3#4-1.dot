digraph {
0 [style = filled, label = "updateProcessorToTest.processAdd(update)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "prepareTrainedIndexMultiClass()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ClassificationUpdateProcessorParams params = initParams(ClassificationUpdateProcessorFactory.Algorithm.KNN)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "update.solrDoc = unseenDocument1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "knnMultiClass_maxOutputClasses2_shouldAssignMax2Classes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(assignedClasses.size(),is(2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ArrayList<Object> assignedClasses = (ArrayList)unseenDocument1.getFieldValues(TRAINING_CLASS)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(assignedClasses.get(0),is(\"class2\"))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(assignedClasses.get(1),is(\"class1\"))@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "params.setMaxPredictedClasses(2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(assignedClasses.get(1),is(\"class1\"))@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(assignedClasses.get(0),is(\"class2\"))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "UpdateRequestProcessor mockProcessor = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SolrInputDocument unseenDocument1 = sdoc(ID,\"10\",TITLE,\"word1 word1 word1\",CONTENT,\"word2 word2 \",AUTHOR,\"unseenAuthor\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "updateProcessorToTest = new ClassificationUpdateProcessor(params,mockProcessor,reader,req().getSchema())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "AddUpdateCommand update = new AddUpdateCommand(req())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "params.setMaxPredictedClasses(100)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "knnClassification_maxOutputClassesGreaterThanAvailable_shouldAssignCorrectClass['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18->3 [style = bold, label=""];
15->13 [style = bold, label=""];
9->0 [style = solid, label="update"];
1->5 [style = solid, label="params"];
16->11 [style = bold, label=""];
12->5 [style = bold, label=""];
4->6 [style = bold, label=""];
9->4 [style = bold, label=""];
4->6 [style = solid, label="unseenDocument1"];
2->9 [style = bold, label=""];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
0->7 [style = bold, label=""];
19->5 [style = bold, label=""];
6->1 [style = bold, label=""];
3->10 [style = bold, label=""];
0->14 [style = bold, label=""];
12->19 [style = dashed, label="0"];
5->0 [style = bold, label=""];
11->5 [style = solid, label="mockProcessor"];
1->12 [style = bold, label=""];
7->18 [style = bold, label=""];
14->15 [style = bold, label=""];
1->19 [style = bold, label=""];
8->11 [style = bold, label=""];
17->11 [style = bold, label=""];
}
