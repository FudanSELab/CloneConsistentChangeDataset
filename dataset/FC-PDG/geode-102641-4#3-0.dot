digraph {
11 [style = filled, label = "Short value2 = (Short)DataSerializer.readObject(in)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Long value = new Long(getRandom().nextLong())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "DataSerializer.writeObject(value,out)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testShortObject['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DataInput in = getDataInput()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Long value = getRandom().nextLong()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Long value2 = (Long)DataSerializer.readObject(in)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "out.flush()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Short value = new Short((short)getRandom().nextInt())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testLongObject['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testLongObject['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Long value2 = DataSerializer.readObject(in)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(value,value2)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DataOutputStream out = getDataOutput()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
8->10 [style = bold, label=""];
7->11 [style = bold, label=""];
13->2 [style = solid, label="value"];
9->2 [style = bold, label=""];
9->2 [style = solid, label="value2"];
11->2 [style = solid, label="value2"];
13->1 [style = solid, label="value"];
7->9 [style = solid, label="in"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
4->2 [style = solid, label="value2"];
11->2 [style = bold, label=""];
5->1 [style = solid, label="value"];
10->1 [style = solid, label="value"];
7->11 [style = solid, label="in"];
7->9 [style = bold, label=""];
12->13 [style = bold, label=""];
4->9 [style = dashed, label="0"];
3->5 [style = bold, label=""];
5->2 [style = solid, label="value"];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
5->10 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
0->1 [style = solid, label="out"];
7->4 [style = solid, label="in"];
4->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
10->2 [style = solid, label="value"];
13->0 [style = bold, label=""];
}
