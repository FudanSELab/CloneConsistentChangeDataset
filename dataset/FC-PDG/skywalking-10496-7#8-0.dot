digraph {
22 [style = filled, label = "String serviceInventoryName = \"service-inventory-name\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EndpointTraffic endpointTraffic = mock()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final String endpointId = IDManager.EndpointID.buildId(serviceId,endpointInventoryName)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT_CATALOG_NAME,metaInAlarm.getScope())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "when(metadata.getMetricsName()).thenReturn(metricsName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(metricsName,metaInAlarm.getMetricsName())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String endpointInventoryName = \"endpoint-inventory-name\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "verify(rule).in(metaCaptor.capture(),any())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ServiceInventory serviceInventory = mock()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"1_ZW5kcG9pbnQtaW52ZW50b3J5LW5hbWU=_0\",metaInAlarm.getId0())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT,metaInAlarm.getScopeId())@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(DefaultScopeDefine.inEndpointCatalog(0)).thenReturn(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(serviceInventoryCache.get(anyInt())).thenReturn(serviceInventory)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(DefaultScopeDefine.SERVICE_INSTANCE_CATALOG_NAME,metaInAlarm.getScope())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String instanceInventoryName = \"instance-inventory-name\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(DefaultScopeDefine.SERVICE_INSTANCE,metaInAlarm.getScopeId())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"c2VydmljZS1pbnZlbnRvcnktbmFtZQ==.1_ZW5kcG9pbnQtaW52ZW50b3J5LW5hbWU=\",metaInAlarm.getId0())@@@19@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "ArgumentCaptor<MetaInAlarm> metaCaptor = ArgumentCaptor.forClass()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "ServiceInstanceInventory instanceInventory = mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(serviceInventory.getName()).thenReturn(serviceInventoryName)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "prepareNotify()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(endpointTraffic.getName()).thenReturn(endpointInventoryName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "notifyHandler.notify(metrics)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "when(instanceInventory.getName()).thenReturn(instanceInventoryName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(metaInAlarm instanceof ServiceInstanceMetaInAlarm)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testNotifyWithEndpointCatalog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertEquals(instanceInventoryName,metaInAlarm.getName())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when(metadata.getId()).thenReturn(EndpointTraffic.buildId(1,endpointInventoryName,DetectPoint.SERVER))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(metricsName,metaInAlarm.getMetricsName())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(metadata.getId()).thenReturn(endpointId)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "String metricsName = \"service-instance-metrics\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testNotifyWithEndpointCatalog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "when(serviceInstanceInventoryCache.get(anyInt())).thenReturn(instanceInventory)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "when(DefaultScopeDefine.inServiceInstanceCatalog(0)).thenReturn(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT,metaInAlarm.getScopeId())@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MetaInAlarm metaInAlarm = metaCaptor.getValue()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(mockId + \"\",metaInAlarm.getId0())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(endpointInventoryName + \" in \" + serviceInventoryName,metaInAlarm.getName())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String metricsName = \"endpoint-metrics\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ArgumentCaptor<MetaInAlarm> metaCaptor = ArgumentCaptor.forClass()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "testNotifyWithServiceInstanceCatalog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final String serviceId = IDManager.ServiceID.buildId(serviceInventoryName,NodeType.Normal)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17->8 [style = bold, label=""];
16->15 [style = bold, label=""];
33->14 [style = bold, label=""];
16->37 [style = bold, label=""];
35->16 [style = bold, label=""];
22->2 [style = bold, label=""];
0->13 [style = bold, label=""];
35->16 [style = solid, label="metricsName"];
31->40 [style = solid, label="instanceInventoryName"];
12->35 [style = dashed, label="0"];
7->10 [style = bold, label=""];
25->13 [style = bold, label=""];
8->18 [style = bold, label=""];
36->29 [style = bold, label=""];
34->1 [style = bold, label=""];
17->18 [style = solid, label="endpointInventoryName"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
20->0 [style = bold, label=""];
37->41 [style = bold, label=""];
22->10 [style = solid, label="serviceInventoryName"];
17->7 [style = solid, label="endpointInventoryName"];
3->27 [style = dashed, label="0"];
4->21 [style = bold, label=""];
31->36 [style = bold, label=""];
1->35 [style = bold, label=""];
22->3 [style = solid, label="serviceInventoryName"];
31->36 [style = solid, label="instanceInventoryName"];
12->16 [style = bold, label=""];
28->1 [style = bold, label=""];
21->20 [style = solid, label="metaInAlarm"];
17->10 [style = solid, label="endpointInventoryName"];
12->13 [style = solid, label="metricsName"];
33->14 [style = solid, label="metaInAlarm"];
19->6 [style = bold, label=""];
0->20 [style = dashed, label="0"];
20->25 [style = bold, label=""];
35->9 [style = solid, label="metricsName"];
23->14 [style = bold, label=""];
6->14 [style = bold, label=""];
17->27 [style = solid, label="endpointInventoryName"];
22->24 [style = solid, label="serviceInventoryName"];
15->37 [style = dashed, label="0"];
5->1 [style = bold, label=""];
12->7 [style = solid, label="metricsName"];
15->17 [style = bold, label=""];
17->6 [style = solid, label="endpointInventoryName"];
2->19 [style = solid, label="serviceInventory"];
18->22 [style = bold, label=""];
22->7 [style = solid, label="serviceInventoryName"];
21->20 [style = bold, label=""];
27->26 [style = bold, label=""];
12->16 [style = solid, label="metricsName"];
3->19 [style = bold, label=""];
13->7 [style = bold, label=""];
41->29 [style = solid, label="instanceInventory"];
29->32 [style = bold, label=""];
18->36 [style = dashed, label="0"];
26->23 [style = bold, label=""];
1->12 [style = bold, label=""];
39->38 [style = bold, label=""];
21->40 [style = bold, label=""];
14->9 [style = bold, label=""];
41->31 [style = bold, label=""];
32->39 [style = bold, label=""];
40->30 [style = bold, label=""];
4->21 [style = solid, label="metaInAlarm"];
22->24 [style = bold, label=""];
2->24 [style = dashed, label="0"];
38->33 [style = bold, label=""];
20->14 [style = dashed, label="0"];
11->21 [style = dashed, label="0"];
24->27 [style = bold, label=""];
27->26 [style = solid, label="endpointId"];
10->11 [style = bold, label=""];
24->27 [style = solid, label="serviceId"];
}
