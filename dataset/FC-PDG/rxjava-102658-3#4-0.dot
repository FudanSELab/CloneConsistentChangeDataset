digraph {
0 [style = filled, label = "nonNotificationInstanceAfterDispose['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "nonNotificationInstanceAfterDispose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "new Flowable<Notification<Object>>(){@Override protected void subscribeActual(Subscriber<? super Notification<Object>> subscriber){subscriber.onSubscribe(new BooleanSubscription())subscriber.onNext(Notification.createOnComplete())subscriber.onNext(Notification.createOnNext(1))}}.dematerialize(Functions.identity()).test().assertResult()@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "nonNotificationInstanceAfterDispose['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "new Observable<Notification<Object>>(){@Override protected void subscribeActual(Observer<? super Notification<Object>> observer){observer.onSubscribe(Disposable.empty())observer.onNext(Notification.createOnComplete())observer.onNext(Notification.createOnNext(1))}}.dematerialize(Functions.identity()).test().assertResult()@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = dashed, label="0"];
2->1 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
}
