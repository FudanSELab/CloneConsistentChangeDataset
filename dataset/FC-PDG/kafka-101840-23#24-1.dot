digraph {
20 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).after(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "time += 1L@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "time += 1L@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",1001),new KeyValueTimestamp<>(1,\"A1+c1\",1001))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+f0\",1000),new KeyValueTimestamp<>(1,\"A1+f1\",1001),new KeyValueTimestamp<>(2,\"A2+f2\",1002),new KeyValueTimestamp<>(3,\"A3+f3\",1003))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "time += 1L@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(1,\"A1+g1\",1001),new KeyValueTimestamp<>(2,\"A2+g2\",1002),new KeyValueTimestamp<>(3,\"A3+g3\",1003))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "time = 1000L@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(1,\"A1+g1\",1101),new KeyValueTimestamp<>(2,\"A2+g2\",1101),new KeyValueTimestamp<>(3,\"A3+g3\",1101))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "i < expectedKeys.length@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).after(ofMillis(100)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).before(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "time += 1L@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",1000),new KeyValueTimestamp<>(1,\"A1+c1\",1001))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "time = 1000 + 100L@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+d0\",1002),new KeyValueTimestamp<>(1,\"A1+d1\",1002),new KeyValueTimestamp<>(2,\"A2+d2\",1002))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testAsymmetricWindowingAfter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"f\" + expectedKey,time))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "long time = 1000L@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(2,\"A2+h2\",1102),new KeyValueTimestamp<>(3,\"A3+h3\",1102))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"e\" + expectedKey,time))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"a\" + expectedKey,time))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(2,\"A2+h2\",1002),new KeyValueTimestamp<>(3,\"A3+h3\",1003))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(3,\"A3+i3\",1103))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "time += 1L@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testAsymmetricWindowingAfter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "time += 1L@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"g\" + expectedKey,time))@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(3,\"A3+i3\",1003))@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+f0\",1100),new KeyValueTimestamp<>(1,\"A1+f1\",1100),new KeyValueTimestamp<>(2,\"A2+f2\",1100),new KeyValueTimestamp<>(3,\"A3+f3\",1100))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "time += 1L@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"c\" + expectedKey,time))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"i\" + expectedKey,time))@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey,time))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+d0\",1000),new KeyValueTimestamp<>(1,\"A1+d1\",1001),new KeyValueTimestamp<>(2,\"A2+d2\",1002))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "testAsymmetricWindowingBefore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b9fed3@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+e0\",1003),new KeyValueTimestamp<>(1,\"A1+e1\",1003),new KeyValueTimestamp<>(2,\"A2+e2\",1003),new KeyValueTimestamp<>(3,\"A3+e3\",1003))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"h\" + expectedKey,time))@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"d\" + expectedKey,time))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "time = 1000L - 1L@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "time = 1000L - 100L - 1L@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i(,time + i))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "time += 1L@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"j\" + expectedKey,time))@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+b0\",1000))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+e0\",1000),new KeyValueTimestamp<>(1,\"A1+e1\",1001),new KeyValueTimestamp<>(2,\"A2+e2\",1002),new KeyValueTimestamp<>(3,\"A3+e3\",1003))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@76@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39->7 [style = solid, label="i"];
1->4 [style = solid, label="time"];
20->52 [style = dashed, label="0"];
11->16 [style = solid, label="time"];
3->24 [style = bold, label=""];
13->55 [style = bold, label=""];
24->35 [style = solid, label="supplier"];
56->23 [style = solid, label="time"];
28->38 [style = bold, label=""];
18->30 [style = bold, label=""];
48->39 [style = bold, label=""];
45->7 [style = bold, label=""];
25->31 [style = bold, label=""];
32->59 [style = dashed, label="0"];
15->17 [style = bold, label=""];
14->13 [style = solid, label="time"];
46->43 [style = solid, label="time"];
37->48 [style = bold, label=""];
17->20 [style = solid, label="stream2"];
47->8 [style = solid, label="time"];
41->22 [style = bold, label=""];
25->55 [style = dashed, label="0"];
55->31 [style = bold, label=""];
48->45 [style = solid, label="time"];
52->35 [style = bold, label=""];
17->20 [style = bold, label=""];
11->16 [style = bold, label=""];
13->25 [style = bold, label=""];
33->26 [style = solid, label="time"];
1->4 [style = bold, label=""];
44->21 [style = bold, label=""];
22->23 [style = solid, label="time"];
29->58 [style = dashed, label="0"];
6->60 [style = dashed, label="0"];
7->45 [style = solid, label="i"];
43->32 [style = bold, label=""];
27->53 [style = dashed, label="0"];
22->23 [style = bold, label=""];
38->6 [style = bold, label=""];
8->62 [style = bold, label=""];
27->46 [style = bold, label=""];
10->45 [style = solid, label="expectedKeys"];
20->57 [style = dashed, label="0"];
56->23 [style = bold, label=""];
62->28 [style = bold, label=""];
34->14 [style = bold, label=""];
17->57 [style = solid, label="stream2"];
59->44 [style = bold, label=""];
9->1 [style = bold, label=""];
57->35 [style = bold, label=""];
29->11 [style = bold, label=""];
63->14 [style = bold, label=""];
46->43 [style = bold, label=""];
42->62 [style = dashed, label="0"];
10->18 [style = bold, label=""];
17->52 [style = bold, label=""];
58->61 [style = bold, label=""];
43->59 [style = bold, label=""];
49->37 [style = bold, label=""];
16->27 [style = bold, label=""];
44->21 [style = solid, label="time"];
31->0 [style = bold, label=""];
28->38 [style = solid, label="time"];
0->12 [style = bold, label=""];
17->52 [style = solid, label="stream2"];
21->34 [style = bold, label=""];
35->2 [style = bold, label=""];
33->26 [style = bold, label=""];
53->46 [style = bold, label=""];
54->36 [style = bold, label=""];
51->36 [style = bold, label=""];
30->3 [style = bold, label=""];
22->56 [style = dashed, label="0"];
39->40 [style = bold, label=""];
6->33 [style = bold, label=""];
32->44 [style = bold, label=""];
61->16 [style = solid, label="time"];
14->13 [style = bold, label=""];
42->28 [style = bold, label=""];
4->5 [style = bold, label=""];
39->40 [style = solid, label="i"];
7->40 [style = bold, label=""];
36->10 [style = bold, label=""];
24->15 [style = bold, label=""];
39->45 [style = solid, label="i"];
26->58 [style = bold, label=""];
2->19 [style = bold, label=""];
61->16 [style = bold, label=""];
47->8 [style = bold, label=""];
26->29 [style = bold, label=""];
41->56 [style = bold, label=""];
38->60 [style = bold, label=""];
16->53 [style = bold, label=""];
7->40 [style = solid, label="i"];
17->57 [style = bold, label=""];
5->47 [style = bold, label=""];
60->33 [style = bold, label=""];
8->42 [style = bold, label=""];
21->63 [style = bold, label=""];
19->49 [style = bold, label=""];
50->36 [style = bold, label=""];
31->0 [style = solid, label="time"];
40->41 [style = bold, label=""];
11->61 [style = dashed, label="0"];
40->7 [style = dotted, label="true"];
40->45 [style = bold, label=""];
20->35 [style = bold, label=""];
40->45 [style = dotted, label="true"];
23->9 [style = bold, label=""];
34->63 [style = dashed, label="0"];
}
