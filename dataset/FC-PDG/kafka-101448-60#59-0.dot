digraph {
18 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bde2aa@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "joined.toStream().to(output)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "i++@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+null\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertNull(driver.readOutput(output))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i < 2@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+null\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "int i = 0@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,null))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,null,\"AnotherVal\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < 2@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"a\" + expectedKeys(i())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+null\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertNull(driver.readOutput(output))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "final KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "processor.checkAndClearProcessResult()@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertNull(driver.readOutput(output))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(\"0:B0+a0 (ts: 0)\",\"1:B1+a1 (ts: 0)\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"C\" + expectedKey))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "i++@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+null\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+null\")@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+null\")@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertNull(driver.readOutput(output))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\"))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "int i = 0@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "i < 2@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "i < 2@@@58@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"c\" + expectedKeys(i())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+b0 (ts: 0)\",\"0:B0+b0 (ts: 0)\",\"1:A1+b1 (ts: 0)\",\"1:B1+b1 (ts: 0)\",\"2:B2+b2 (ts: 0)\",\"3:B3+b3 (ts: 0)\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertNull(driver.readOutput(output))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "processor.checkAndClearProcessResult(\"0:C0+a0 (ts: 0)\",\"0:C0+b0 (ts: 0)\",\"1:C1+a1 (ts: 0)\",\"1:C1+b1 (ts: 0)\",\"2:C2+b2 (ts: 0)\",\"3:C3+b3 (ts: 0)\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < 2@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertNull(driver.readOutput(output))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertNull(driver.readOutput(output))@@@72@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 0)\",\"0:B0+c0 (ts: 0)\",\"0:C0+c0 (ts: 0)\",\"1:A1+c1 (ts: 0)\",\"1:B1+c1 (ts: 0)\",\"1:C1+c1 (ts: 0)\")@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->32 [style = bold, label=""];
49->59 [style = bold, label=""];
39->69 [style = bold, label=""];
3->22 [style = solid, label="i"];
25->34 [style = bold, label=""];
43->55 [style = bold, label=""];
75->70 [style = solid, label="i"];
32->12 [style = bold, label=""];
4->14 [style = solid, label="i"];
8->20 [style = solid, label="stream2"];
21->15 [style = bold, label=""];
18->27 [style = solid, label="supplier"];
32->13 [style = solid, label="i"];
56->65 [style = dotted, label="true"];
72->29 [style = bold, label=""];
7->35 [style = bold, label=""];
33->79 [style = dashed, label="0"];
26->9 [style = bold, label=""];
14->22 [style = dotted, label="true"];
65->56 [style = bold, label=""];
29->7 [style = solid, label="i"];
30->6 [style = bold, label=""];
9->64 [style = dashed, label="0"];
68->73 [style = bold, label=""];
37->3 [style = bold, label=""];
3->4 [style = solid, label="i"];
20->27 [style = bold, label=""];
22->4 [style = bold, label=""];
22->70 [style = dashed, label="0"];
58->70 [style = solid, label="i"];
33->11 [style = bold, label=""];
80->57 [style = solid, label="table2"];
8->20 [style = bold, label=""];
56->83 [style = bold, label=""];
24->21 [style = bold, label=""];
71->56 [style = solid, label="i"];
34->17 [style = bold, label=""];
80->57 [style = bold, label=""];
6->10 [style = solid, label="i"];
29->44 [style = bold, label=""];
3->14 [style = solid, label="i"];
46->50 [style = bold, label=""];
23->57 [style = dashed, label="0"];
29->10 [style = solid, label="i"];
32->12 [style = solid, label="i"];
54->52 [style = bold, label=""];
18->31 [style = bold, label=""];
42->76 [style = bold, label=""];
66->13 [style = bold, label=""];
7->10 [style = dotted, label="true"];
25->1 [style = solid, label="i"];
63->78 [style = bold, label=""];
2->34 [style = bold, label=""];
14->22 [style = bold, label=""];
60->62 [style = bold, label=""];
2->34 [style = solid, label="i"];
13->66 [style = solid, label="i"];
75->58 [style = solid, label="i"];
55->38 [style = bold, label=""];
19->80 [style = dashed, label="0"];
6->7 [style = solid, label="i"];
13->16 [style = bold, label=""];
13->12 [style = solid, label="i"];
38->32 [style = bold, label=""];
7->29 [style = dotted, label="true"];
58->63 [style = bold, label=""];
63->70 [style = dotted, label="true"];
13->12 [style = bold, label=""];
48->80 [style = bold, label=""];
5->45 [style = dashed, label="0"];
44->68 [style = bold, label=""];
2->1 [style = solid, label="i"];
15->66 [style = solid, label="expectedKeys"];
28->19 [style = bold, label=""];
12->66 [style = dotted, label="true"];
41->46 [style = bold, label=""];
73->64 [style = bold, label=""];
83->67 [style = bold, label=""];
6->7 [style = bold, label=""];
14->4 [style = dotted, label="true"];
77->65 [style = bold, label=""];
71->56 [style = bold, label=""];
4->14 [style = bold, label=""];
1->66 [style = dashed, label="0"];
25->39 [style = bold, label=""];
47->61 [style = bold, label=""];
5->26 [style = bold, label=""];
63->70 [style = bold, label=""];
69->75 [style = bold, label=""];
15->22 [style = solid, label="expectedKeys"];
34->1 [style = dotted, label="true"];
56->77 [style = bold, label=""];
56->77 [style = dotted, label="true"];
71->77 [style = solid, label="i"];
12->13 [style = bold, label=""];
12->66 [style = bold, label=""];
11->5 [style = bold, label=""];
33->79 [style = bold, label=""];
10->77 [style = dashed, label="0"];
12->13 [style = dotted, label="true"];
65->56 [style = solid, label="i"];
50->42 [style = bold, label=""];
15->28 [style = bold, label=""];
52->40 [style = bold, label=""];
53->74 [style = bold, label=""];
32->66 [style = solid, label="i"];
17->3 [style = bold, label=""];
15->48 [style = bold, label=""];
75->63 [style = solid, label="i"];
45->72 [style = bold, label=""];
57->82 [style = bold, label=""];
62->81 [style = bold, label=""];
2->25 [style = solid, label="i"];
31->8 [style = bold, label=""];
1->25 [style = bold, label=""];
23->18 [style = bold, label=""];
79->53 [style = bold, label=""];
34->25 [style = dotted, label="true"];
15->70 [style = solid, label="expectedKeys"];
71->65 [style = solid, label="i"];
4->22 [style = solid, label="i"];
15->77 [style = solid, label="expectedKeys"];
34->25 [style = bold, label=""];
61->60 [style = bold, label=""];
15->10 [style = solid, label="expectedKeys"];
63->58 [style = dotted, label="true"];
7->10 [style = bold, label=""];
34->1 [style = bold, label=""];
6->29 [style = solid, label="i"];
3->14 [style = bold, label=""];
15->1 [style = solid, label="expectedKeys"];
12->34 [style = bold, label=""];
9->30 [style = bold, label=""];
82->43 [style = bold, label=""];
16->2 [style = bold, label=""];
78->0 [style = bold, label=""];
75->63 [style = bold, label=""];
36->21 [style = bold, label=""];
67->49 [style = bold, label=""];
65->77 [style = solid, label="i"];
70->58 [style = bold, label=""];
28->48 [style = dashed, label="0"];
14->0 [style = bold, label=""];
0->33 [style = bold, label=""];
64->47 [style = bold, label=""];
10->29 [style = bold, label=""];
34->37 [style = bold, label=""];
19->23 [style = bold, label=""];
0->51 [style = bold, label=""];
58->63 [style = solid, label="i"];
29->7 [style = bold, label=""];
25->34 [style = solid, label="i"];
40->45 [style = bold, label=""];
17->37 [style = dashed, label="0"];
81->71 [style = bold, label=""];
74->54 [style = bold, label=""];
84->21 [style = bold, label=""];
59->41 [style = bold, label=""];
51->33 [style = bold, label=""];
}
