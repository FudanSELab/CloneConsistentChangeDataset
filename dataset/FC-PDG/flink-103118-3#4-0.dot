digraph {
9 [style = filled, label = "assertEquals(preferredResource2,env.getStreamGraph().getStreamNode(map1.getId()).getPreferredResources())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DataStream<Long> source2 = env.generateSequence(0,0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "DataStream<Long> map2 = source2.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataStream<Long> windowed = connected.windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(10))).fold(0L,new FoldFunction<Long,Long>(){@Override public Long fold(Long accumulator,Long value){return null}})@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "opMethod.invoke(operator,minResources,preferredResources)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DataStreamSink<Long> sink = windowed.print()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataStream<Long> source1 = env.generateSequence(0,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(minResource2,env.getStreamGraph().getStreamNode(map1.getId()).getMinResources())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "opMethod.invoke(connected,minResource5,preferredResource5)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(300).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(200).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(minResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getMinResources())@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ResourceSpec minResource4 = new ResourceSpec(1.0,400)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(minResource5,env.getStreamGraph().getStreamNode(connected.getId()).getMinResources())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ResourceSpec preferredResource4 = new ResourceSpec(2.0,500)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(preferredResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getPreferredResources())@@@71@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ResourceSpec preferredResource2 = new ResourceSpec(2.0,300)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "opMethod.invoke(map2,minResource4,preferredResource4)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(minResource1,env.getStreamGraph().getStreamNode(source1.getId()).getMinResources())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(100).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "DataStream<Long> connected = map1.connect(map2).flatMap(new CoFlatMapFunction<Long,Long,Long>(){@Override public void flatMap1(Long value,Collector<Long> out){}@Override public void flatMap2(Long value,Collector<Long> out){}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(preferredResource5,env.getStreamGraph().getStreamNode(connected.getId()).getPreferredResources())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(300).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "opMethod.setAccessible(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ResourceSpec minResource5 = new ResourceSpec(1.0,500)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(preferredResource4,env.getStreamGraph().getStreamNode(map2.getId()).getPreferredResources())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Operator operator = new MockOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ResourceSpec minResource3 = new ResourceSpec(1.0,300)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "opMethod.invoke(source1,minResource1,preferredResource1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(400).build()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(600).build()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "DataStream<Long> map1 = source1.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ResourceSpec minResource6 = new ResourceSpec(1.0,600)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ResourceSpec preferredResource3 = new ResourceSpec(2.0,400)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "opMethod.invoke(map1,minResource2,preferredResource2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ResourceSpec preferredResource7 = new ResourceSpec(2.0,800)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(minResource3,env.getStreamGraph().getStreamNode(source2.getId()).getMinResources())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(minResources,operator.getMinResources())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ResourceSpec minResource2 = new ResourceSpec(1.0,200)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(minResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getMinResources())@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(400).build()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(800).build()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(preferredResource3,env.getStreamGraph().getStreamNode(source2.getId()).getPreferredResources())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ResourceSpec minResource1 = new ResourceSpec(1.0,100)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(700).build()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(700).build()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Method sinkMethod = .getDeclaredMethod(\"setResources\",,)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ResourceSpec preferredResource5 = new ResourceSpec(2.0,600)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "sinkMethod.setAccessible(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(200).build()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(500).build()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(600).build()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(preferredResource1,env.getStreamGraph().getStreamNode(source1.getId()).getPreferredResources())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "sinkMethod.invoke(sink,minResource7,preferredResource7)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "opMethod.invoke(source2,minResource3,preferredResource3)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "ResourceSpec minResources = new ResourceSpec(1.0,100)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ResourceSpec minResource7 = new ResourceSpec(1.0,700)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ResourceSpec preferredResource6 = new ResourceSpec(2.0,700)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "opMethod.setAccessible(true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testConfigurationOfResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "opMethod.invoke(windowed,minResource6,preferredResource6)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(500).build()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(minResource4,env.getStreamGraph().getStreamNode(map2.getId()).getMinResources())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(preferredResources,operator.getPreferredResources())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(preferredResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getPreferredResources())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ResourceSpec preferredResource1 = new ResourceSpec(2.0,200)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "ResourceSpec preferredResources = new ResourceSpec(2.0,200)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51->28 [style = solid, label="minResource3"];
14->3 [style = bold, label=""];
29->15 [style = bold, label=""];
32->37 [style = bold, label=""];
70->69 [style = bold, label=""];
5->20 [style = bold, label=""];
10->50 [style = dashed, label="0"];
57->62 [style = bold, label=""];
50->34 [style = solid, label="minResource1"];
39->14 [style = bold, label=""];
51->53 [style = bold, label=""];
18->49 [style = dashed, label="0"];
45->30 [style = bold, label=""];
6->21 [style = solid, label="source2"];
7->56 [style = dashed, label="0"];
24->35 [style = solid, label="preferredResource3"];
3->27 [style = bold, label=""];
19->24 [style = bold, label=""];
21->38 [style = bold, label=""];
37->9 [style = bold, label=""];
23->29 [style = bold, label=""];
17->36 [style = bold, label=""];
49->55 [style = bold, label=""];
48->52 [style = bold, label=""];
53->21 [style = solid, label="preferredResource3"];
41->62 [style = dashed, label="0"];
63->66 [style = bold, label=""];
38->47 [style = solid, label="map2"];
66->64 [style = bold, label=""];
55->47 [style = solid, label="preferredResource4"];
49->40 [style = solid, label="minResource4"];
11->33 [style = bold, label=""];
42->1 [style = bold, label=""];
34->32 [style = bold, label=""];
56->29 [style = solid, label="minResource5"];
24->21 [style = solid, label="preferredResource3"];
31->46 [style = bold, label=""];
25->55 [style = dashed, label="0"];
65->70 [style = solid, label="operator"];
61->27 [style = solid, label="preferredResource1"];
71->65 [style = bold, label=""];
18->40 [style = solid, label="minResource4"];
56->17 [style = solid, label="minResource5"];
41->8 [style = solid, label="minResource6"];
4->16 [style = bold, label=""];
42->8 [style = solid, label="preferredResource6"];
62->8 [style = solid, label="minResource6"];
10->11 [style = bold, label=""];
0->36 [style = solid, label="preferredResource5"];
33->46 [style = solid, label="minResource2"];
54->60 [style = bold, label=""];
52->9 [style = solid, label="preferredResource2"];
42->4 [style = solid, label="preferredResource6"];
62->26 [style = solid, label="minResource6"];
46->6 [style = bold, label=""];
55->44 [style = solid, label="preferredResource4"];
68->70 [style = bold, label=""];
2->46 [style = solid, label="preferredResource2"];
68->70 [style = solid, label="preferredResources"];
27->31 [style = bold, label=""];
0->57 [style = dashed, label="0"];
7->0 [style = bold, label=""];
45->60 [style = dashed, label="0"];
64->69 [style = solid, label="minResources"];
56->57 [style = bold, label=""];
54->16 [style = solid, label="minResource7"];
25->7 [style = bold, label=""];
24->18 [style = bold, label=""];
44->17 [style = bold, label=""];
26->4 [style = bold, label=""];
58->54 [style = bold, label=""];
7->17 [style = solid, label="minResource5"];
23->29 [style = solid, label="connected"];
61->48 [style = bold, label=""];
35->40 [style = bold, label=""];
28->35 [style = bold, label=""];
19->51 [style = dashed, label="0"];
50->27 [style = solid, label="minResource1"];
15->8 [style = solid, label="windowed"];
58->4 [style = solid, label="preferredResource6"];
18->25 [style = bold, label=""];
38->47 [style = bold, label=""];
12->43 [style = solid, label="sink"];
7->29 [style = solid, label="minResource5"];
52->51 [style = bold, label=""];
1->45 [style = bold, label=""];
43->34 [style = bold, label=""];
10->27 [style = solid, label="minResource1"];
52->46 [style = solid, label="preferredResource2"];
59->20 [style = bold, label=""];
48->46 [style = solid, label="minResource2"];
16->13 [style = bold, label=""];
33->48 [style = dashed, label="0"];
19->28 [style = solid, label="minResource3"];
3->27 [style = solid, label="source1"];
57->29 [style = solid, label="preferredResource5"];
68->67 [style = solid, label="preferredResources"];
1->54 [style = dashed, label="0"];
18->47 [style = solid, label="minResource4"];
6->21 [style = bold, label=""];
45->43 [style = solid, label="preferredResource7"];
57->36 [style = solid, label="preferredResource5"];
11->27 [style = solid, label="preferredResource1"];
9->28 [style = bold, label=""];
0->41 [style = bold, label=""];
11->32 [style = solid, label="preferredResource1"];
42->58 [style = dashed, label="0"];
60->43 [style = solid, label="preferredResource7"];
22->39 [style = bold, label=""];
53->35 [style = solid, label="preferredResource3"];
60->13 [style = solid, label="preferredResource7"];
64->70 [style = solid, label="minResources"];
12->43 [style = bold, label=""];
49->47 [style = solid, label="minResource4"];
50->61 [style = bold, label=""];
47->23 [style = bold, label=""];
41->26 [style = solid, label="minResource6"];
65->63 [style = bold, label=""];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
33->2 [style = bold, label=""];
40->44 [style = bold, label=""];
33->37 [style = solid, label="minResource2"];
20->50 [style = bold, label=""];
45->13 [style = solid, label="preferredResource7"];
2->19 [style = bold, label=""];
30->22 [style = bold, label=""];
69->67 [style = bold, label=""];
10->34 [style = solid, label="minResource1"];
1->16 [style = solid, label="minResource7"];
2->9 [style = solid, label="preferredResource2"];
62->58 [style = bold, label=""];
51->21 [style = solid, label="minResource3"];
1->43 [style = solid, label="minResource7"];
36->26 [style = bold, label=""];
2->52 [style = dashed, label="0"];
55->56 [style = bold, label=""];
20->10 [style = bold, label=""];
53->49 [style = bold, label=""];
24->53 [style = dashed, label="0"];
58->8 [style = solid, label="preferredResource6"];
48->37 [style = solid, label="minResource2"];
64->68 [style = bold, label=""];
11->61 [style = dashed, label="0"];
54->43 [style = solid, label="minResource7"];
60->30 [style = bold, label=""];
25->47 [style = solid, label="preferredResource4"];
25->44 [style = solid, label="preferredResource4"];
61->32 [style = solid, label="preferredResource1"];
31->46 [style = solid, label="map1"];
10->63 [style = dashed, label="0"];
0->29 [style = solid, label="preferredResource5"];
19->21 [style = solid, label="minResource3"];
41->42 [style = bold, label=""];
}
