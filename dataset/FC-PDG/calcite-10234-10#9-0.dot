digraph {
27 [style = filled, label = "testCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(r.getInt(1),is(4))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "b = s.execute(\"drop type mytype1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(b,is(false))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "x = s.executeUpdate(\"insert into w values (1, NULL)\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(r.next(),is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(x,is(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(r.next(),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(b,is(false))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b = s.execute(\"create schema a.b\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(x,is(1))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(b,is(false))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(b,is(false))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "b = s.execute(\"create table w (i int not null, j mytype)\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testDropType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "b = s.execute(\"create type mytype as (i int)\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertDoesNotThrow(null,\"REPLACE must recreate the table, leaving only one column\")@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(x,is(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "b = s.execute(\"create type a.b.mytype as (i varchar(5))\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "boolean b = s.execute(\"create type mytype1 as BIGINT\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(b,is(false))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(b,is(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(x,is(1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "b = s.execute(\"create schema a\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(b,is(false))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "x = s.executeUpdate(\"insert into t2 values (1, NULL)\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "boolean b = s.execute(\"create table t (i int not null)\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(b,is(false))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->4 [style = solid, label="b"];
8->13 [style = solid, label="b"];
7->15 [style = solid, label="x"];
21->3 [style = bold, label=""];
29->10 [style = solid, label="b"];
13->5 [style = bold, label=""];
18->20 [style = bold, label=""];
19->16 [style = solid, label="b"];
9->14 [style = solid, label="x"];
22->6 [style = bold, label=""];
2->7 [style = bold, label=""];
4->11 [style = bold, label=""];
6->0 [style = bold, label=""];
12->21 [style = bold, label=""];
10->31 [style = bold, label=""];
18->20 [style = solid, label="b"];
1->24 [style = bold, label=""];
17->10 [style = solid, label="b"];
11->2 [style = bold, label=""];
5->4 [style = bold, label=""];
20->19 [style = bold, label=""];
19->16 [style = bold, label=""];
16->12 [style = bold, label=""];
10->1 [style = bold, label=""];
3->25 [style = solid, label="b"];
11->2 [style = solid, label="b"];
27->17 [style = bold, label=""];
31->30 [style = solid, label="b"];
15->26 [style = bold, label=""];
1->31 [style = dashed, label="0"];
12->21 [style = solid, label="x"];
3->25 [style = bold, label=""];
8->13 [style = bold, label=""];
9->14 [style = bold, label=""];
29->10 [style = bold, label=""];
24->9 [style = bold, label=""];
25->8 [style = bold, label=""];
7->15 [style = bold, label=""];
31->30 [style = bold, label=""];
23->17 [style = bold, label=""];
1->24 [style = solid, label="x"];
0->18 [style = bold, label=""];
17->10 [style = bold, label=""];
17->29 [style = dashed, label="0"];
28->29 [style = bold, label=""];
14->22 [style = bold, label=""];
}
