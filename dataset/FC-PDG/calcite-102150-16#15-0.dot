digraph {
29 [style = filled, label = "generateComparator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "collations.size() == 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final int index = collation.getFieldIndex()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "generateCollationKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "arg1 = EnumUtils.convert(arg1,)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "generateComparator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final Method method = (fieldNullable(index)? (nullsFirst ^ descending? BuiltInMethod.COMPARE_NULLS_FIRST: BuiltInMethod.COMPARE_NULLS_LAST): BuiltInMethod.COMPARE).method@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final RelDataType fieldType = rowType.getFieldList().get(index).getType()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "RelCollation collation@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "return Pair.of(selector,Expressions.new_(,ImmutableList.of(),memberDeclarations))@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(method.getDeclaringClass(),method.getName(),arg0,arg1))))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",Expressions.list(arg0,arg1).appendIfNotNull(fieldComparator)))))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "arg0 = EnumUtils.convert(arg0,)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Expression selector@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "arg1 = EnumUtils.convert(arg1,)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Expression fieldComparator = generateCollatorExpression(fieldType.getCollation())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->24 [style = bold, label=""];
1->56 [style = dashed, label="0"];
38->47 [style = bold, label=""];
0->7 [style = solid, label="parameterV0"];
43->41 [style = solid, label="parameter"];
23->38 [style = solid, label="parameterC"];
37->35 [style = bold, label=""];
25->26 [style = bold, label=""];
18->39 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
2->11 [style = solid, label="parameterV0"];
51->43 [style = bold, label=""];
12->30 [style = bold, label=""];
35->32 [style = bold, label=""];
23->11 [style = solid, label="arg0"];
16->18 [style = solid, label="memberDeclarations"];
37->4 [style = solid, label="descending"];
5->17 [style = bold, label=""];
44->37 [style = bold, label=""];
17->26 [style = solid, label="javaRowClass"];
22->16 [style = solid, label="parameterV1"];
6->4 [style = dotted, label="true"];
6->10 [style = dotted, label="true"];
14->4 [style = solid, label="parameterO1"];
6->25 [style = dotted, label="true"];
37->35 [style = solid, label="descending"];
27->9 [style = solid, label="parameterC"];
16->6 [style = bold, label=""];
19->32 [style = solid, label="arg0"];
56->38 [style = bold, label=""];
43->2 [style = solid, label="parameter"];
34->54 [style = dotted, label="true"];
23->56 [style = bold, label=""];
22->2 [style = solid, label="parameterV1"];
54->46 [style = bold, label=""];
12->11 [style = solid, label="descending"];
35->45 [style = solid, label="method"];
12->37 [style = dashed, label="0"];
41->45 [style = bold, label=""];
27->21 [style = solid, label="parameterC"];
0->22 [style = bold, label=""];
43->8 [style = solid, label="parameter"];
8->23 [style = bold, label=""];
42->45 [style = solid, label="parameterO1"];
29->5 [style = bold, label=""];
34->51 [style = bold, label=""];
26->4 [style = bold, label=""];
15->7 [style = bold, label=""];
48->40 [style = bold, label=""];
15->2 [style = bold, label=""];
17->22 [style = solid, label="javaRowClass"];
8->55 [style = solid, label="parameterV1"];
43->53 [style = bold, label=""];
0->16 [style = solid, label="parameterV0"];
7->23 [style = solid, label="arg0"];
49->16 [style = dotted, label="true"];
40->41 [style = solid, label="parameterO0"];
47->49 [style = solid, label="index"];
3->11 [style = solid, label="arg1"];
15->7 [style = solid, label="index"];
48->33 [style = dotted, label="true"];
1->21 [style = solid, label="mod"];
34->43 [style = dotted, label="true"];
14->26 [style = solid, label="parameterO1"];
32->4 [style = bold, label=""];
42->41 [style = solid, label="parameterO1"];
10->14 [style = bold, label=""];
13->5 [style = bold, label=""];
23->4 [style = solid, label="parameterC"];
29->20 [style = dotted, label="true"];
42->33 [style = bold, label=""];
7->2 [style = bold, label=""];
43->42 [style = solid, label="parameter"];
50->52 [style = dotted, label="true"];
50->36 [style = bold, label=""];
9->19 [style = bold, label=""];
53->54 [style = bold, label=""];
6->18 [style = bold, label=""];
40->42 [style = bold, label=""];
21->15 [style = bold, label=""];
15->30 [style = solid, label="index"];
4->47 [style = bold, label=""];
47->11 [style = solid, label="index"];
8->9 [style = solid, label="parameterV1"];
12->30 [style = solid, label="descending"];
16->55 [style = dashed, label="0"];
9->15 [style = bold, label=""];
6->26 [style = dotted, label="true"];
6->14 [style = dotted, label="true"];
56->38 [style = solid, label="mod"];
48->41 [style = dotted, label="true"];
17->0 [style = solid, label="javaRowClass"];
33->41 [style = bold, label=""];
15->2 [style = solid, label="index"];
2->8 [style = bold, label=""];
55->48 [style = bold, label=""];
19->16 [style = bold, label=""];
2->55 [style = solid, label="parameterV0"];
49->19 [style = bold, label=""];
2->3 [style = solid, label="arg1"];
43->53 [style = solid, label="parameter"];
12->9 [style = solid, label="descending"];
43->23 [style = solid, label="parameter"];
43->40 [style = solid, label="parameter"];
10->26 [style = solid, label="parameterO0"];
14->25 [style = bold, label=""];
16->32 [style = solid, label="arg1"];
24->12 [style = bold, label=""];
8->3 [style = dotted, label="true"];
11->19 [style = solid, label="arg0"];
18->55 [style = bold, label=""];
47->11 [style = bold, label=""];
17->0 [style = bold, label=""];
15->11 [style = solid, label="index"];
4->18 [style = bold, label=""];
27->30 [style = solid, label="parameterC"];
31->30 [style = solid, label="fieldComparator"];
24->44 [style = dashed, label="0"];
28->31 [style = bold, label=""];
23->3 [style = bold, label=""];
8->23 [style = dotted, label="true"];
47->35 [style = solid, label="index"];
1->21 [style = bold, label=""];
48->42 [style = dotted, label="true"];
30->9 [style = bold, label=""];
22->27 [style = bold, label=""];
11->9 [style = bold, label=""];
35->41 [style = solid, label="method"];
10->4 [style = solid, label="parameterO0"];
48->39 [style = bold, label=""];
55->39 [style = solid, label="memberDeclarations"];
27->11 [style = solid, label="parameterC"];
46->39 [style = solid, label="selector"];
15->8 [style = solid, label="index"];
6->10 [style = bold, label=""];
9->16 [style = solid, label="arg1"];
15->28 [style = bold, label=""];
16->44 [style = bold, label=""];
49->19 [style = dotted, label="true"];
27->1 [style = bold, label=""];
53->54 [style = solid, label="selector"];
46->15 [style = bold, label=""];
36->34 [style = bold, label=""];
34->46 [style = bold, label=""];
9->49 [style = bold, label=""];
13->20 [style = dotted, label="true"];
23->32 [style = solid, label="parameterC"];
47->9 [style = solid, label="index"];
48->40 [style = dotted, label="true"];
48->45 [style = dotted, label="true"];
12->11 [style = bold, label=""];
40->45 [style = solid, label="parameterO0"];
45->39 [style = bold, label=""];
15->47 [style = dashed, label="0"];
34->53 [style = dotted, label="true"];
34->51 [style = dotted, label="true"];
31->7 [style = bold, label=""];
}
