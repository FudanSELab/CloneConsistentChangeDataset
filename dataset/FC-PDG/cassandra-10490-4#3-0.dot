digraph {
1 [style = filled, label = "Assert.assertEquals(Transactional.AbstractTransactional.State.ABORTED,result.txn.state())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "callbackSuccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(cb.submittedCompactions.isEmpty())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(cb.submittedCompactions.isEmpty())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotNull(result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(cb.submittedCompactions.contains(cfm.id))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(Transactional.AbstractTransactional.State.IN_PROGRESS,result.txn.state())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "callbackNullResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "makeSSTables(2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PendingAntiCompaction.AcquisitionCallable acquisitionCallable = new PendingAntiCompaction.AcquisitionCallable(cfs,FULL_RANGE,UUIDGen.getTimeUUID())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "InstrumentedAcquisitionCallback cb = new InstrumentedAcquisitionCallback(UUIDGen.getTimeUUID(),atEndpoint(FULL_RANGE,Collections.emptyList()))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(1,cb.submittedCompactions.size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cb.apply(Lists.newArrayList(result,null))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cb.apply(Lists.newArrayList(result))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "PendingAntiCompaction.AcquireResult result = acquisitionCallable.call()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "callbackNullResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cfs.disableAutoCompaction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "InstrumentedAcquisitionCallback cb = new InstrumentedAcquisitionCallback(UUIDGen.getTimeUUID(),FULL_RANGE)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = bold, label=""];
3->17 [style = dashed, label="0"];
13->4 [style = bold, label=""];
2->17 [style = solid, label="result"];
14->16 [style = bold, label=""];
8->4 [style = bold, label=""];
10->17 [style = bold, label=""];
15->4 [style = bold, label=""];
9->2 [style = bold, label=""];
11->12 [style = dashed, label="0"];
17->14 [style = bold, label=""];
3->7 [style = bold, label=""];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
6->9 [style = bold, label=""];
12->10 [style = bold, label=""];
11->10 [style = bold, label=""];
5->11 [style = bold, label=""];
2->3 [style = solid, label="result"];
5->12 [style = bold, label=""];
2->0 [style = bold, label=""];
7->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
0->5 [style = bold, label=""];
2->0 [style = solid, label="result"];
}
