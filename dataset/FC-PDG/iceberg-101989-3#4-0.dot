digraph {
0 [style = filled, label = "long baseId = base.currentSnapshot().snapshotId()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "table.updateProperties().set(TableProperties.MANIFEST_MIN_MERGE_COUNT,\"1\").commit()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TableMetadata base = TestTables.readMetadata(TABLE_NAME)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TableMetadata base = TestTables.readMetadata(TABLE_NAME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "validateManifestEntries(table.currentSnapshot().allManifests().get(1),ids(overwriteId,baseId),files(FILE_0_TO_4,FILE_5_TO_9),statuses(Status.DELETED,Status.EXISTING))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "long overwriteId = table.currentSnapshot().snapshotId()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "table.newOverwrite().overwriteByRowFilter(equal(\"date\",\"2018-06-08\")).addFile(FILE_10_TO_14).commit()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "validateManifestEntries(table.currentSnapshot().manifests().get(0),ids(overwriteId),files(FILE_10_TO_14),statuses(Status.ADDED))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Table should have 2 manifests\",2,table.currentSnapshot().allManifests().size())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testOverwriteWithAppendOutsideOfDelete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "validateManifestEntries(table.currentSnapshot().allManifests().get(0),ids(overwriteId),files(FILE_10_TO_14),statuses(Status.ADDED))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testOverwriteWithAppendOutsideOfDelete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Table should have one merged manifest\",1,table.currentSnapshot().manifests().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "validateManifestEntries(table.currentSnapshot().manifests().get(0),ids(overwriteId,overwriteId,baseId),files(FILE_10_TO_14,FILE_0_TO_4,FILE_5_TO_9),statuses(Status.ADDED,Status.DELETED,Status.EXISTING))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertNotEquals(\"Should create a new snapshot\",baseId,overwriteId)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testOverwriteWithMergedAppendOutsideOfDelete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "validateManifestEntries(table.currentSnapshot().manifests().get(1),ids(overwriteId,baseId),files(FILE_0_TO_4,FILE_5_TO_9),statuses(Status.DELETED,Status.EXISTING))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->2 [style = solid, label="baseId"];
6->3 [style = bold, label=""];
1->4 [style = bold, label=""];
0->16 [style = solid, label="baseId"];
7->1 [style = bold, label=""];
8->10 [style = dashed, label="0"];
8->15 [style = bold, label=""];
9->11 [style = bold, label=""];
5->6 [style = solid, label="overwriteId"];
4->3 [style = solid, label="baseId"];
8->15 [style = dashed, label="0"];
6->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
15->16 [style = bold, label=""];
5->11 [style = solid, label="overwriteId"];
4->11 [style = solid, label="baseId"];
4->0 [style = bold, label=""];
0->8 [style = solid, label="baseId"];
5->2 [style = bold, label=""];
6->16 [style = dashed, label="0"];
5->3 [style = solid, label="overwriteId"];
10->9 [style = bold, label=""];
14->13 [style = bold, label=""];
2->16 [style = solid, label="overwriteId"];
5->2 [style = solid, label="overwriteId"];
5->9 [style = solid, label="overwriteId"];
2->8 [style = solid, label="overwriteId"];
3->11 [style = dashed, label="0"];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
13->4 [style = bold, label=""];
}
