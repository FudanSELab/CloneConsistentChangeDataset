digraph {
1 [style = filled, label = "assertThat(actual.iterator().next(),is(instanceOf()))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertExecuteClosePortal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(actual.size(),is(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PREPARED_STATEMENT)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertExecuteClosePreparedStatement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "when(packet.getName()).thenReturn(\"S_1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(connectionContext,packet,backendConnection)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertExecuteClosePreparedStatement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collection<DatabasePacket<?>> actual = closeExecutor.execute()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet,backendConnection)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(actual.iterator().next(),is(instanceOf()))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6->0 [style = bold, label=""];
4->10 [style = dashed, label="0"];
1->3 [style = dashed, label="0"];
11->0 [style = bold, label=""];
4->6 [style = bold, label=""];
0->7 [style = dashed, label="0"];
0->2 [style = bold, label=""];
6->7 [style = bold, label=""];
10->11 [style = bold, label=""];
8->4 [style = bold, label=""];
5->4 [style = bold, label=""];
3->1 [style = bold, label=""];
9->10 [style = bold, label=""];
2->3 [style = bold, label=""];
7->2 [style = bold, label=""];
}
