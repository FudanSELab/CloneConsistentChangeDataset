digraph {
0 [style = filled, label = "ingestionSpecs.sort(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,Collections.singletonList(COMPACTION_INTERVAL),tuningConfig)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(5,500000,1000000L,null,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(null,500000,1000000L,5L,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,SEGMENT_INTERVALS,tuningConfig)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCreateIngestionSchemaWithMaxTotalRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "keepSegmentGranularity@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(1,ingestionSpecs.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(5,500000,1000000L,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,COMPACTION_INTERVAL),new PartitionConfigurationManager(null,tuningConfig),null,keepSegmentGranularity,objectMapper)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final List<DimensionsSpec> expectedDimensionsSpec = getExpectedDimensionsSpecForAutoGeneration(keepSegmentGranularity)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(5,ingestionSpecs.size())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->3 [style = solid, label="expectedDimensionsSpec"];
2->3 [style = dotted, label="true"];
2->0 [style = dotted, label="true"];
2->1 [style = dotted, label="false"];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
11->6 [style = bold, label=""];
8->9 [style = solid, label="expectedDimensionsSpec"];
4->9 [style = solid, label="tuningConfig"];
4->6 [style = solid, label="tuningConfig"];
12->9 [style = solid, label="tuningConfig"];
12->6 [style = bold, label=""];
11->3 [style = solid, label="tuningConfig"];
7->3 [style = bold, label=""];
12->3 [style = solid, label="tuningConfig"];
1->9 [style = bold, label=""];
11->9 [style = solid, label="tuningConfig"];
12->6 [style = solid, label="tuningConfig"];
0->7 [style = bold, label=""];
2->9 [style = dotted, label="false"];
6->3 [style = solid, label="ingestionSpecs"];
4->12 [style = dashed, label="0"];
4->3 [style = solid, label="tuningConfig"];
2->0 [style = bold, label=""];
13->12 [style = bold, label=""];
8->2 [style = bold, label=""];
2->7 [style = dotted, label="true"];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
6->9 [style = solid, label="ingestionSpecs"];
4->11 [style = dashed, label="0"];
11->6 [style = solid, label="tuningConfig"];
10->11 [style = bold, label=""];
}
