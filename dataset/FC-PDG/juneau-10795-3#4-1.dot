digraph {
2 [style = filled, label = "t.minimum(123)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "HeaderInfo t = new HeaderInfo()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertObject(t.minimum()).isType().is(123)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertOptional(t.minimum()).isType().is(123)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertOptional(t.minimum()).isType().is(123)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "t.maximum((String)null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertObject(t.minimum()).isType().is(123f)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "t.maximum(123)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "a08_minimum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Items t = new Items()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertObject(t.maximum()).isType().is(123)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "t.minimum(\"123\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertObject(t.maximum()).isNull()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "t.maximum(\"123\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertObject(t.minimum()).isType().is(123)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "t.minimum((String)null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertOptional(t.minimum()).isType().is(123f)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "t.maximum(123f)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertObject(t.maximum()).isType().is(123f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertObject(t.maximum()).isType().is(123)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "t.minimum(123f)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "a08_minimum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertObject(t.minimum()).isNull()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "a07_maximum['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertOptional(t.minimum()).isNull()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->3 [style = bold, label=""];
5->8 [style = bold, label=""];
4->3 [style = bold, label=""];
19->18 [style = bold, label=""];
9->16 [style = dashed, label="0"];
24->19 [style = bold, label=""];
7->10 [style = bold, label=""];
5->23 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
21->15 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
8->21 [style = dashed, label="0"];
0->20 [style = dashed, label="0"];
12->6 [style = bold, label=""];
22->23 [style = bold, label=""];
20->22 [style = bold, label=""];
0->7 [style = bold, label=""];
3->19 [style = dashed, label="0"];
8->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
18->20 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
23->21 [style = bold, label=""];
5->10 [style = dashed, label="0"];
6->13 [style = bold, label=""];
9->13 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
6->9 [style = bold, label=""];
7->22 [style = dashed, label="0"];
2->11 [style = bold, label=""];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
17->16 [style = bold, label=""];
}
