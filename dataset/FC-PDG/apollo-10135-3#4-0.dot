digraph {
5 [style = filled, label = "Set<String> targetIds = Sets.newHashSet()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Set<Long> permissionIds = FluentIterable.from(created).transform(null).toSet()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Iterable<Permission> permissionsFromDB = permissionRepository.findAllById(permissionIds)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertTrue(targetIds.containsAll(Sets.newHashSet(someTargetId,anotherTargetId)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "targetIds.add(permission.getTargetId())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String someTargetId = \"someTargetId\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(2,permissionTypes.size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCreatePermissionsWithPermissionsExisted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "rolePermissionService.createPermissions(Sets.newHashSet(somePermission,anotherPermission))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCreatePermissions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Set<Permission> created = rolePermissionService.createPermissions(Sets.newHashSet(somePermission,anotherPermission))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String anotherTargetId = \"anotherTargetId\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(permissionTypes.containsAll(Sets.newHashSet(somePermissionType,anotherPermissionType)))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String somePermissionType = \"somePermissionType\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "permissionTypes.add(permission.getPermissionType())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String anotherPermissionType = \"anotherPermissionType\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Set<String> permissionTypes = Sets.newHashSet()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(2,targetIds.size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCreatePermissions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Permission anotherPermission = assemblePermission(anotherPermissionType,anotherTargetId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Iterable<Permission> permissionsFromDB = permissionRepository.findAll(permissionIds)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Permission somePermission = assemblePermission(somePermissionType,someTargetId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
9->20 [style = dashed, label="0"];
8->16 [style = bold, label=""];
11->20 [style = solid, label="somePermission"];
7->18 [style = dashed, label="0"];
0->13 [style = bold, label=""];
15->16 [style = solid, label="someTargetId"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
21->15 [style = bold, label=""];
12->20 [style = bold, label=""];
2->18 [style = bold, label=""];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
4->16 [style = solid, label="anotherTargetId"];
12->9 [style = bold, label=""];
4->12 [style = solid, label="anotherTargetId"];
6->11 [style = solid, label="somePermissionType"];
11->9 [style = solid, label="somePermission"];
5->1 [style = bold, label=""];
7->5 [style = bold, label=""];
0->10 [style = bold, label=""];
2->7 [style = solid, label="permissionIds"];
17->14 [style = solid, label="anotherPermissionType"];
18->5 [style = bold, label=""];
15->11 [style = solid, label="someTargetId"];
10->0 [style = bold, label=""];
12->9 [style = solid, label="anotherPermission"];
15->4 [style = bold, label=""];
2->18 [style = solid, label="permissionIds"];
16->14 [style = bold, label=""];
17->12 [style = solid, label="anotherPermissionType"];
2->7 [style = bold, label=""];
13->8 [style = bold, label=""];
19->15 [style = bold, label=""];
12->20 [style = solid, label="anotherPermission"];
1->10 [style = bold, label=""];
17->11 [style = bold, label=""];
6->14 [style = solid, label="somePermissionType"];
}
