digraph {
74 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "assertEquals(Collections.singletonList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Collections.singletonList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
104 [style = filled, label = "windowStore = createWindowStore(context,false)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "windowStore.put(7,\"seven\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "windowStore.flush()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(Collections.singletonList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
105 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "windowStore.close()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertEquals(asList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(Collections.singletonList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
113 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setCurrentTime(startTime + increment)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testRolling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "windowStore.put(3,\"three\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "assertEquals(Collections.singletonList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "windowStore = createWindowStore(context,false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "assertEquals(Collections.singletonList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(Collections.singletonList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
109 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(Collections.singletonList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "windowStore.put(1,\"one\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "final long increment = segmentInterval / 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "windowStore.put(2,\"two\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
88 [style = filled, label = "assertEquals(Collections.singletonList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "windowStore.put(6,\"six\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "windowStore = createWindowStore(context,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "windowStore.flush()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(asList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
96 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "windowStore.put(8,\"eight\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "testRolling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(asList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "assertEquals(Collections.singletonList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
94 [style = filled, label = "final long startTime = segmentInterval * 2@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Collections.singletonList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
97 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "assertEquals(asList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "windowStore.put(5,\"five\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->77 [style = solid, label="increment"];
25->32 [style = solid, label="increment"];
25->64 [style = solid, label="startTime"];
25->26 [style = solid, label="startTime"];
65->80 [style = bold, label=""];
25->55 [style = solid, label="startTime"];
42->109 [style = dashed, label="0"];
12->84 [style = dashed, label="0"];
25->76 [style = solid, label="startTime"];
94->106 [style = solid, label="startTime"];
94->3 [style = solid, label="startTime"];
25->0 [style = solid, label="increment"];
94->103 [style = solid, label="startTime"];
53->36 [style = bold, label=""];
102->103 [style = bold, label=""];
25->32 [style = solid, label="startTime"];
18->22 [style = bold, label=""];
7->61 [style = solid, label="increment"];
1->21 [style = bold, label=""];
12->18 [style = bold, label=""];
25->66 [style = solid, label="startTime"];
25->23 [style = solid, label="increment"];
35->80 [style = dashed, label="0"];
71->65 [style = bold, label=""];
89->72 [style = bold, label=""];
42->68 [style = dashed, label="0"];
4->65 [style = dashed, label="0"];
25->87 [style = solid, label="startTime"];
25->9 [style = solid, label="startTime"];
73->84 [style = bold, label=""];
25->61 [style = solid, label="startTime"];
25->16 [style = solid, label="increment"];
94->23 [style = solid, label="startTime"];
7->39 [style = solid, label="increment"];
82->62 [style = bold, label=""];
49->46 [style = bold, label=""];
7->80 [style = solid, label="increment"];
7->62 [style = solid, label="increment"];
62->68 [style = bold, label=""];
14->8 [style = bold, label=""];
94->56 [style = solid, label="startTime"];
19->33 [style = bold, label=""];
25->98 [style = solid, label="increment"];
25->89 [style = solid, label="startTime"];
3->37 [style = bold, label=""];
7->66 [style = solid, label="increment"];
56->5 [style = bold, label=""];
20->1 [style = bold, label=""];
61->36 [style = bold, label=""];
25->8 [style = solid, label="startTime"];
26->44 [style = bold, label=""];
27->97 [style = dashed, label="0"];
7->74 [style = solid, label="increment"];
2->108 [style = dashed, label="0"];
25->51 [style = solid, label="startTime"];
7->58 [style = solid, label="increment"];
7->81 [style = solid, label="increment"];
7->22 [style = solid, label="increment"];
15->78 [style = dashed, label="0"];
32->89 [style = dashed, label="0"];
7->37 [style = solid, label="increment"];
31->54 [style = bold, label=""];
5->85 [style = dashed, label="0"];
83->71 [style = bold, label=""];
25->85 [style = solid, label="startTime"];
33->82 [style = dashed, label="0"];
45->74 [style = dashed, label="0"];
80->61 [style = bold, label=""];
7->69 [style = solid, label="increment"];
25->39 [style = solid, label="startTime"];
25->22 [style = solid, label="startTime"];
25->10 [style = solid, label="startTime"];
87->75 [style = bold, label=""];
27->102 [style = bold, label=""];
72->76 [style = bold, label=""];
52->20 [style = bold, label=""];
7->85 [style = solid, label="increment"];
25->56 [style = solid, label="increment"];
29->12 [style = bold, label=""];
25->74 [style = solid, label="startTime"];
54->32 [style = bold, label=""];
103->110 [style = bold, label=""];
23->51 [style = bold, label=""];
40->15 [style = bold, label=""];
94->40 [style = solid, label="startTime"];
55->13 [style = bold, label=""];
0->107 [style = bold, label=""];
25->24 [style = solid, label="increment"];
7->60 [style = solid, label="increment"];
25->100 [style = solid, label="increment"];
96->2 [style = bold, label=""];
51->76 [style = dashed, label="0"];
0->14 [style = bold, label=""];
2->49 [style = bold, label=""];
76->41 [style = bold, label=""];
104->105 [style = bold, label=""];
52->86 [style = bold, label=""];
7->76 [style = solid, label="increment"];
25->43 [style = solid, label="startTime"];
49->67 [style = bold, label=""];
7->56 [style = solid, label="increment"];
1->83 [style = dashed, label="0"];
7->63 [style = solid, label="increment"];
7->5 [style = solid, label="increment"];
7->12 [style = solid, label="increment"];
7->71 [style = solid, label="increment"];
24->44 [style = bold, label=""];
94->98 [style = solid, label="startTime"];
25->37 [style = solid, label="startTime"];
25->69 [style = solid, label="startTime"];
25->36 [style = solid, label="startTime"];
21->71 [style = dashed, label="0"];
25->67 [style = solid, label="startTime"];
25->90 [style = solid, label="startTime"];
25->41 [style = solid, label="increment"];
25->45 [style = solid, label="startTime"];
81->82 [style = bold, label=""];
94->25 [style = bold, label=""];
19->5 [style = dashed, label="0"];
38->25 [style = bold, label=""];
20->86 [style = dashed, label="0"];
25->68 [style = solid, label="startTime"];
25->27 [style = solid, label="increment"];
33->58 [style = bold, label=""];
7->35 [style = solid, label="increment"];
6->34 [style = bold, label=""];
29->73 [style = dashed, label="0"];
25->62 [style = solid, label="startTime"];
94->27 [style = solid, label="startTime"];
94->105 [style = solid, label="startTime"];
105->56 [style = bold, label=""];
25->20 [style = solid, label="startTime"];
25->15 [style = solid, label="startTime"];
25->109 [style = solid, label="increment"];
25->13 [style = solid, label="startTime"];
86->83 [style = bold, label=""];
7->36 [style = solid, label="increment"];
94->109 [style = solid, label="startTime"];
94->93 [style = solid, label="startTime"];
77->66 [style = bold, label=""];
7->53 [style = solid, label="increment"];
94->2 [style = solid, label="startTime"];
79->38 [style = bold, label=""];
7->90 [style = solid, label="increment"];
3->17 [style = bold, label=""];
94->24 [style = solid, label="startTime"];
46->67 [style = dashed, label="0"];
7->65 [style = solid, label="increment"];
7->28 [style = solid, label="increment"];
4->35 [style = bold, label=""];
15->45 [style = bold, label=""];
9->0 [style = bold, label=""];
60->26 [style = bold, label=""];
94->32 [style = solid, label="startTime"];
59->38 [style = bold, label=""];
25->106 [style = solid, label="increment"];
107->98 [style = bold, label=""];
25->35 [style = solid, label="startTime"];
25->2 [style = solid, label="increment"];
58->62 [style = dashed, label="0"];
7->23 [style = solid, label="increment"];
25->4 [style = solid, label="startTime"];
25->102 [style = solid, label="increment"];
45->19 [style = bold, label=""];
94->5 [style = solid, label="startTime"];
25->52 [style = solid, label="increment"];
23->72 [style = dashed, label="0"];
88->85 [style = bold, label=""];
25->81 [style = solid, label="startTime"];
7->75 [style = solid, label="increment"];
25->103 [style = solid, label="increment"];
32->23 [style = bold, label=""];
94->92 [style = solid, label="startTime"];
25->42 [style = solid, label="startTime"];
7->87 [style = solid, label="increment"];
25->86 [style = solid, label="startTime"];
25->5 [style = solid, label="increment"];
94->91 [style = solid, label="startTime"];
25->6 [style = solid, label="increment"];
34->50 [style = bold, label=""];
25->84 [style = solid, label="startTime"];
67->69 [style = bold, label=""];
7->32 [style = solid, label="increment"];
43->106 [style = dashed, label="0"];
25->71 [style = solid, label="startTime"];
55->70 [style = dashed, label="0"];
7->29 [style = solid, label="increment"];
25->77 [style = solid, label="startTime"];
25->93 [style = solid, label="increment"];
25->82 [style = solid, label="startTime"];
25->18 [style = solid, label="startTime"];
66->60 [style = bold, label=""];
25->80 [style = solid, label="startTime"];
8->11 [style = bold, label=""];
48->24 [style = bold, label=""];
30->69 [style = dashed, label="0"];
7->26 [style = solid, label="increment"];
90->64 [style = bold, label=""];
91->32 [style = bold, label=""];
7->43 [style = solid, label="increment"];
94->16 [style = solid, label="startTime"];
24->55 [style = bold, label=""];
7->4 [style = solid, label="increment"];
7->89 [style = solid, label="increment"];
112->10 [style = bold, label=""];
7->73 [style = solid, label="increment"];
68->88 [style = bold, label=""];
25->7 [style = bold, label=""];
99->95 [style = bold, label=""];
85->43 [style = bold, label=""];
7->30 [style = solid, label="increment"];
25->3 [style = solid, label="increment"];
25->34 [style = solid, label="startTime"];
25->60 [style = solid, label="startTime"];
25->54 [style = solid, label="startTime"];
42->56 [style = bold, label=""];
52->48 [style = bold, label=""];
25->58 [style = solid, label="startTime"];
25->96 [style = solid, label="increment"];
37->16 [style = bold, label=""];
25->63 [style = solid, label="startTime"];
78->74 [style = bold, label=""];
58->2 [style = dashed, label="0"];
56->88 [style = dashed, label="0"];
47->75 [style = dashed, label="0"];
43->2 [style = bold, label=""];
94->41 [style = solid, label="startTime"];
28->87 [style = dashed, label="0"];
40->111 [style = bold, label=""];
93->106 [style = bold, label=""];
46->30 [style = bold, label=""];
110->97 [style = bold, label=""];
25->56 [style = solid, label="startTime"];
25->75 [style = solid, label="startTime"];
94->6 [style = solid, label="startTime"];
57->9 [style = bold, label=""];
64->89 [style = bold, label=""];
94->96 [style = solid, label="startTime"];
54->64 [style = dashed, label="0"];
98->11 [style = bold, label=""];
94->52 [style = solid, label="startTime"];
25->91 [style = solid, label="increment"];
7->10 [style = bold, label=""];
25->88 [style = solid, label="startTime"];
7->33 [style = solid, label="increment"];
44->40 [style = bold, label=""];
7->68 [style = solid, label="increment"];
10->3 [style = bold, label=""];
101->99 [style = bold, label=""];
50->52 [style = bold, label=""];
5->43 [style = bold, label=""];
22->66 [style = dashed, label="0"];
25->40 [style = solid, label="increment"];
16->57 [style = bold, label=""];
109->100 [style = bold, label=""];
25->29 [style = solid, label="startTime"];
51->41 [style = bold, label=""];
7->82 [style = solid, label="increment"];
25->70 [style = solid, label="startTime"];
25->31 [style = solid, label="startTime"];
25->47 [style = solid, label="startTime"];
84->77 [style = bold, label=""];
5->96 [style = bold, label=""];
7->42 [style = solid, label="increment"];
106->108 [style = bold, label=""];
7->54 [style = solid, label="increment"];
7->8 [style = solid, label="increment"];
7->19 [style = solid, label="increment"];
63->73 [style = bold, label=""];
30->28 [style = bold, label=""];
25->72 [style = solid, label="startTime"];
7->83 [style = solid, label="increment"];
7->72 [style = solid, label="increment"];
16->9 [style = bold, label=""];
25->78 [style = solid, label="startTime"];
69->87 [style = bold, label=""];
100->93 [style = bold, label=""];
7->1 [style = solid, label="increment"];
25->51 [style = solid, label="increment"];
94->51 [style = solid, label="startTime"];
5->93 [style = dashed, label="0"];
25->53 [style = solid, label="startTime"];
25->21 [style = solid, label="startTime"];
17->37 [style = bold, label=""];
94->100 [style = solid, label="startTime"];
25->1 [style = solid, label="startTime"];
39->26 [style = bold, label=""];
25->28 [style = solid, label="startTime"];
18->77 [style = dashed, label="0"];
25->33 [style = solid, label="startTime"];
108->92 [style = bold, label=""];
58->42 [style = bold, label=""];
7->34 [style = solid, label="increment"];
7->31 [style = solid, label="increment"];
39->60 [style = dashed, label="0"];
7->47 [style = solid, label="increment"];
7->112 [style = bold, label=""];
94->0 [style = solid, label="startTime"];
111->101 [style = bold, label=""];
95->104 [style = bold, label=""];
75->90 [style = bold, label=""];
21->4 [style = bold, label=""];
41->27 [style = bold, label=""];
25->19 [style = solid, label="startTime"];
47->31 [style = bold, label=""];
28->47 [style = bold, label=""];
25->23 [style = solid, label="startTime"];
24->70 [style = bold, label=""];
7->51 [style = solid, label="increment"];
113->94 [style = bold, label=""];
25->73 [style = solid, label="startTime"];
92->91 [style = bold, label=""];
25->12 [style = solid, label="startTime"];
40->78 [style = bold, label=""];
25->5 [style = solid, label="startTime"];
22->39 [style = bold, label=""];
13->63 [style = dashed, label="0"];
94->102 [style = solid, label="startTime"];
35->53 [style = bold, label=""];
25->30 [style = solid, label="startTime"];
7->64 [style = solid, label="increment"];
7->45 [style = solid, label="increment"];
19->81 [style = dashed, label="0"];
7->9 [style = solid, label="increment"];
31->90 [style = dashed, label="0"];
11->6 [style = bold, label=""];
56->100 [style = dashed, label="0"];
25->46 [style = solid, label="startTime"];
7->21 [style = solid, label="increment"];
70->63 [style = bold, label=""];
25->65 [style = solid, label="startTime"];
53->61 [style = dashed, label="0"];
7->88 [style = solid, label="increment"];
7->18 [style = solid, label="increment"];
74->81 [style = bold, label=""];
13->29 [style = bold, label=""];
7->13 [style = solid, label="increment"];
6->50 [style = bold, label=""];
36->48 [style = bold, label=""];
94->112 [style = solid, label="startTime"];
25->83 [style = solid, label="startTime"];
2->109 [style = bold, label=""];
7->84 [style = solid, label="increment"];
}
