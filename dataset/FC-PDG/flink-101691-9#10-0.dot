digraph {
12 [style = filled, label = "MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "{JobID jid = new JobID()String(( parameters = {\"-s\",\"targetDirectory\",jid.toString()}final ClusterClient<String> clusterClient = createClusterClient()MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)testFrontend.cancel(parameters)Mockito.verify(clusterClient,times(1)).cancelWithSavepoint(any(),notNull())}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Mockito.verify(clusterClient,times(1)).cancel(any())@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ClusterClient<String> clusterClient = createClusterClient()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testCancel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String(( parameters = {jid.toString()}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cancelLatch.await()@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testCancel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "clusterClient.setCancelFunction(null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "OneShotLatch cancelLatch = new OneShotLatch()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TestingClusterClient<String> clusterClient = new TestingClusterClient<>()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testFrontend.cancel(parameters)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "{JobID jid = new JobID()String(( parameters = {\"-s\",jid.toString()}final ClusterClient<String> clusterClient = createClusterClient()MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)testFrontend.cancel(parameters)Mockito.verify(clusterClient,times(1)).cancelWithSavepoint(any(),isNull())}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testCancelWithSavepoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testFrontend.cancel(parameters)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "JobID jid = new JobID()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
16->15 [style = bold, label=""];
15->14 [style = solid, label="clusterClient"];
0->13 [style = bold, label=""];
15->14 [style = bold, label=""];
0->6 [style = bold, label=""];
11->12 [style = bold, label=""];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
3->4 [style = bold, label=""];
8->12 [style = solid, label="clusterClient"];
5->0 [style = bold, label=""];
6->9 [style = solid, label="parameters"];
10->0 [style = bold, label=""];
6->8 [style = bold, label=""];
3->4 [style = solid, label="clusterClient"];
3->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
13->6 [style = bold, label=""];
6->1 [style = solid, label="parameters"];
8->11 [style = bold, label=""];
}
