digraph {
14 [style = filled, label = "doPost['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SpanProcessor processor = new SpanProcessor(sourceReceiver)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "response.setContentType(\"application/json\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "doPost['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "HttpServletResponse response@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "response.setCharacterEncoding(\"utf-8\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HttpServletRequest request@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SpanProcessor processor = new SpanProcessor(sourceReceiver,serviceInventoryCache,encode)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int encode = type != null && type.contains(\"/x-protobuf\")? SpanEncode.PROTO3: SpanEncode.JSON_V2@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "processor.convert(config,decoder,request)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HttpServletResponse response@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "SpanBytesDecoder decoder = SpanEncode.isThrift(encode)? SpanBytesDecoder.THRIFT: SpanBytesDecoder.JSON_V1@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int encode = type != null && type.contains(\"/x-thrift\")? SpanEncode.THRIFT: SpanEncode.JSON_V1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SpanBytesDecoder decoder = SpanEncode.isProto3(encode)? SpanBytesDecoder.PROTO3: SpanBytesDecoder.JSON_V2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "response.setStatus(202)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String type = request.getHeader(\"Content-Type\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "HttpServletResponse response@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "doPost['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13->6 [style = dotted, label="true"];
7->17 [style = solid, label="type"];
17->8 [style = solid, label="encode"];
1->8 [style = bold, label=""];
7->17 [style = bold, label=""];
16->8 [style = bold, label=""];
13->12 [style = dotted, label="true"];
7->10 [style = bold, label=""];
10->8 [style = solid, label="encode"];
8->3 [style = bold, label=""];
6->3 [style = solid, label="request"];
17->16 [style = solid, label="encode"];
2->9 [style = bold, label=""];
7->10 [style = solid, label="type"];
3->0 [style = bold, label=""];
1->11 [style = bold, label=""];
10->1 [style = solid, label="encode"];
14->15 [style = dotted, label="true"];
11->3 [style = bold, label=""];
2->6 [style = dotted, label="true"];
16->3 [style = solid, label="decoder"];
1->16 [style = dashed, label="0"];
2->4 [style = dotted, label="true"];
10->17 [style = dashed, label="0"];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
14->9 [style = bold, label=""];
1->3 [style = solid, label="decoder"];
13->9 [style = bold, label=""];
8->11 [style = dashed, label="0"];
10->1 [style = bold, label=""];
17->16 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
