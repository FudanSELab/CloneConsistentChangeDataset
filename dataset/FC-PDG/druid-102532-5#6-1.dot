digraph {
1 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,2L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,5L)),kafkaServer.consumerProperties(),true,null,null,false))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndNextOffsetGreaterThanLeastAvailable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "runTask(task)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndPause['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(task.getRunner().getStatus(),Status.READING)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "!task.getRunner().getStatus().equals(Status.PAUSED)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndPause['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertTrue(task.getRunner().getCurrentOffsets().get(0) == 200L)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,200L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,500L)),kafkaServer.consumerProperties(),true,null,null,false))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "kafkaProducer.send(record).get()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int i = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Thread.sleep(20)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "resetOffsetAutomatically = true@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Thread.sleep(2000)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i++@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i < 5@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "task.getRunner().pause()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,2L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,5L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null,false))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "runTask(task)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
10->18 [style = bold, label=""];
11->20 [style = bold, label=""];
20->17 [style = bold, label=""];
0->5 [style = dotted, label="true"];
1->2 [style = solid, label="task"];
20->11 [style = dotted, label="true"];
5->20 [style = bold, label=""];
2->6 [style = bold, label=""];
7->11 [style = dashed, label="0"];
15->14 [style = dotted, label="true"];
15->19 [style = bold, label=""];
9->8 [style = bold, label=""];
3->0 [style = bold, label=""];
15->13 [style = dotted, label="true"];
12->10 [style = bold, label=""];
17->15 [style = solid, label="i"];
19->14 [style = bold, label=""];
5->0 [style = bold, label=""];
17->13 [style = solid, label="i"];
8->2 [style = bold, label=""];
15->19 [style = dotted, label="true"];
16->5 [style = solid, label="task"];
13->15 [style = solid, label="i"];
7->6 [style = bold, label=""];
17->15 [style = bold, label=""];
6->7 [style = dotted, label="true"];
16->5 [style = bold, label=""];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
14->13 [style = bold, label=""];
6->7 [style = bold, label=""];
8->2 [style = solid, label="task"];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
