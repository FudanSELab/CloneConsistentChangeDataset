digraph {
0 [style = filled, label = "testTimestampExtractorWithCustomWatermarkEmit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testTimestampExtractorWithCustomWatermarkEmit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.fail(\"Wrong watermark.\")@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "env.getConfig().setAutoWatermarkInterval(10)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "env.getConfig().setAutoWatermarkInterval(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "!CustomOperator.finalWatermarks(0(.get(j).equals(new Watermark(j))@@@37@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int j = 0@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final int numElements = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env.setParallelism(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testTimestampExtractorWithDecreasingCustomWatermarkEmit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Watermark.MAX_WATERMARK,CustomOperator.finalWatermarks(0(.get(CustomOperator.finalWatermarks(0(.size() - 1))@@@41@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "j++@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "source1.assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Integer>(){@Override public long extractTimestamp(Integer element,long previousTimestamp){return element}@Override public Watermark checkAndGetNextWatermark(Integer element,long extractedTimestamp){return new Watermark(extractedTimestamp - 1)}}).transform(\"Watermark Check\",BasicTypeInfo.INT_TYPE_INFO,new CustomOperator(true)).transform(\"Timestamp Check\",BasicTypeInfo.INT_TYPE_INFO,new TimestampCheckingOperator())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DataStream<Integer> source1 = env.addSource(new SourceFunction<Integer>(){@Override public void run(SourceContext<Integer> ctx){int index = 1while (index <= numElements) {ctx.collect(index)Thread.sleep(100)ctx.collect(index - 1)latch.await()index++}}@Override public void cancel(){}})@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "env.execute()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "j < numElements@@@35@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17->10 [style = bold, label=""];
6->3 [style = bold, label=""];
8->14 [style = solid, label="j"];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
14->2 [style = solid, label="j"];
16->6 [style = bold, label=""];
5->15 [style = bold, label=""];
9->10 [style = bold, label=""];
1->7 [style = bold, label=""];
6->5 [style = solid, label="numElements"];
2->12 [style = bold, label=""];
7->14 [style = bold, label=""];
1->7 [style = dotted, label="true"];
13->17 [style = bold, label=""];
8->2 [style = solid, label="j"];
10->5 [style = bold, label=""];
15->11 [style = bold, label=""];
6->2 [style = solid, label="numElements"];
8->2 [style = bold, label=""];
18->6 [style = bold, label=""];
2->1 [style = dotted, label="true"];
9->17 [style = dashed, label="0"];
10->4 [style = bold, label=""];
3->13 [style = bold, label=""];
11->8 [style = bold, label=""];
2->14 [style = dotted, label="true"];
1->14 [style = bold, label=""];
14->2 [style = bold, label=""];
13->9 [style = bold, label=""];
4->5 [style = bold, label=""];
}
