digraph {
31 [style = filled, label = "assertTrue(rf.wantsField(\"id\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(rf.wantsField(\"newId\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testAliases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(rf.wantsField(\"test\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(rf.wantsField(\"subject\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(rf.wantsField(\"newId\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "rf = new ReturnFields(req(\"fl\",\"newId:id newName:name newTest:test newSubject:subject score\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(rf.wantsField(\"newSubject\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(rf.wantsField(\"name\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(rf.wantsField(\"id$test\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testTrailingDollarInFieldName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ReturnFields rf = new ReturnFields(req(\"fl\",\"id$test\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertTrue(rf.wantsField(\"newTest\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(rf.getTransformer() instanceof DocTransformers)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(rf.wantsScore())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(rf.wantsField(\"newTest\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testTrailingDollarInFieldName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ReturnFields rf = new SolrReturnFields(req(\"fl\",\"id$test\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "ReturnFields rf = new ReturnFields(req(\"fl\",\"newId:id newName:name newTest:test newSubject:subject\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(rf.wantsField(\"newName\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(rf.wantsField(\"newName\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(rf.wantsField(\"newSubject\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(rf.wantsField(\"subject\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(rf.wantsField(\"id\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(rf.wantsField(\"test\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(5,((DocTransformers)rf.getTransformer()).size())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(rf.wantsField(\"name\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31->14 [style = bold, label=""];
5->13 [style = dashed, label="0"];
22->26 [style = bold, label=""];
17->25 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
10->20 [style = bold, label=""];
20->13 [style = bold, label=""];
32->23 [style = bold, label=""];
8->31 [style = bold, label=""];
11->21 [style = bold, label=""];
12->30 [style = bold, label=""];
21->24 [style = bold, label=""];
19->17 [style = bold, label=""];
28->12 [style = bold, label=""];
26->19 [style = bold, label=""];
15->16 [style = bold, label=""];
0->20 [style = dashed, label="0"];
24->18 [style = bold, label=""];
13->11 [style = bold, label=""];
30->29 [style = bold, label=""];
27->15 [style = bold, label=""];
9->28 [style = bold, label=""];
5->1 [style = bold, label=""];
29->27 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
18->22 [style = bold, label=""];
1->11 [style = dashed, label="0"];
25->8 [style = bold, label=""];
6->7 [style = bold, label=""];
14->32 [style = bold, label=""];
0->7 [style = dashed, label="0"];
23->9 [style = bold, label=""];
0->5 [style = bold, label=""];
}
