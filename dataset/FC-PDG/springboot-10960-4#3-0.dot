digraph {
21 [style = filled, label = "assertThat(properties.getNumThreads()).isEqualTo(config.numThreads())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(properties.isEnabled()).isEqualTo(config.enabled())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(properties.isEnabled()).isEqualTo(config.enabled())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertStepRegistryDefaultValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(properties.getConnectTimeout()).isEqualTo(config.connectTimeout())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertStepRegistryDefaultValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(properties.getStep()).isEqualTo(config.step())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AtlasProperties properties = new AtlasProperties()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "AtlasConfig config = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(properties.getReadTimeout()).isEqualTo(config.readTimeout())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(properties.getUri()).isEqualTo(config.uri())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PushRegistryConfig config@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "defaultValuesAreConsistent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PushRegistryProperties properties@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(properties.getConfigTimeToLive()).isEqualTo(config.configTTL())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "PushRegistryProperties properties@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(properties.getConfigRefreshFrequency()).isEqualTo(config.configRefreshFrequency())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(properties.getBatchSize()).isEqualTo(config.batchSize())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(properties.getStep()).isEqualTo(config.step())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(properties.getEvalUri()).isEqualTo(config.evalUri())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(properties.getConfigUri()).isEqualTo(config.configUri())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(properties.isLwcEnabled()).isEqualTo(config.lwcEnabled())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(properties.getMeterTimeToLive()).isEqualTo(config.meterTTL())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
22->8 [style = bold, label=""];
21->15 [style = bold, label=""];
15->18 [style = bold, label=""];
2->5 [style = bold, label=""];
9->2 [style = bold, label=""];
9->1 [style = dotted, label="true"];
8->6 [style = bold, label=""];
4->1 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
3->7 [style = bold, label=""];
7->21 [style = bold, label=""];
9->10 [style = dotted, label="true"];
4->2 [style = bold, label=""];
13->11 [style = bold, label=""];
20->13 [style = bold, label=""];
11->19 [style = bold, label=""];
6->3 [style = bold, label=""];
12->20 [style = bold, label=""];
17->22 [style = bold, label=""];
19->14 [style = bold, label=""];
16->17 [style = bold, label=""];
18->12 [style = bold, label=""];
6->7 [style = bold, label=""];
}
