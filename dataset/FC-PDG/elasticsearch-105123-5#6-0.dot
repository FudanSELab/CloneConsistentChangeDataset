digraph {
24 [style = filled, label = "assertEquals(-Math.PI,histogram.getBuckets().get(3).getKey())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testIrrationalInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(4,histogram.getBuckets().size())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(0,histogram.getBuckets().get(2).getDocCount())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testOffset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,longField(\"field\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,doubleField(\"field\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(2).getDocCount())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(5 + Math.PI,histogram.getBuckets().get(2).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(4).getKey())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"field\",NumericUtils.doubleToSortableLong(value)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(6,histogram.getBuckets().size())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(2).getKey())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(-10 + Math.PI,histogram.getBuckets().get(0).getKey())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(-2 * Math.PI,histogram.getBuckets().get(2).getKey())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@25@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"field\",value))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testIrrationalInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(-4 * Math.PI,histogram.getBuckets().get(0).getKey())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(1).getDocCount())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(4).getDocCount())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(Math.PI)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(3,histogram.getBuckets().size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Document doc = new Document()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,histogram.getBuckets().get(3).getDocCount())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,longField(\"field\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(Math.PI,histogram.getBuckets().get(5).getKey())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5).offset(Math.PI)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(2).getDocCount())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Math.PI,histogram.getBuckets().get(3).getKey())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(0).getDocCount())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "w.addDocument(doc)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Math.PI,histogram.getBuckets().get(1).getKey())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(-3 * Math.PI,histogram.getBuckets().get(1).getKey())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17->25 [style = bold, label=""];
28->18 [style = bold, label=""];
12->3 [style = solid, label="histogram"];
34->40 [style = bold, label=""];
10->39 [style = dashed, label="0"];
16->24 [style = dashed, label="0"];
5->23 [style = dashed, label="0"];
39->34 [style = bold, label=""];
2->3 [style = bold, label=""];
6->32 [style = dashed, label="0"];
13->17 [style = solid, label="aggBuilder"];
14->10 [style = bold, label=""];
12->17 [style = dashed, label="0"];
11->12 [style = bold, label=""];
22->28 [style = bold, label=""];
11->12 [style = solid, label="searcher"];
1->0 [style = bold, label=""];
11->30 [style = solid, label="searcher"];
12->30 [style = dashed, label="0"];
16->2 [style = bold, label=""];
10->27 [style = dashed, label="0"];
14->36 [style = dashed, label="0"];
25->7 [style = bold, label=""];
24->22 [style = bold, label=""];
13->11 [style = bold, label=""];
1->13 [style = bold, label=""];
30->29 [style = bold, label=""];
0->15 [style = bold, label=""];
4->7 [style = bold, label=""];
31->11 [style = bold, label=""];
0->38 [style = bold, label=""];
9->6 [style = bold, label=""];
38->1 [style = bold, label=""];
36->39 [style = bold, label=""];
9->37 [style = dashed, label="0"];
5->34 [style = dashed, label="0"];
6->14 [style = bold, label=""];
7->9 [style = bold, label=""];
5->16 [style = bold, label=""];
8->0 [style = bold, label=""];
17->19 [style = solid, label="histogram"];
4->25 [style = dashed, label="0"];
26->0 [style = bold, label=""];
23->24 [style = bold, label=""];
29->33 [style = bold, label=""];
35->0 [style = bold, label=""];
0->1 [style = solid, label="doc"];
21->20 [style = bold, label=""];
10->5 [style = bold, label=""];
13->31 [style = dashed, label="0"];
12->4 [style = bold, label=""];
31->30 [style = solid, label="aggBuilder"];
37->32 [style = bold, label=""];
13->12 [style = solid, label="aggBuilder"];
32->36 [style = bold, label=""];
11->17 [style = bold, label=""];
15->38 [style = dashed, label="0"];
27->23 [style = bold, label=""];
14->27 [style = bold, label=""];
11->17 [style = solid, label="searcher"];
18->21 [style = bold, label=""];
4->29 [style = dashed, label="0"];
7->33 [style = dashed, label="0"];
1->31 [style = bold, label=""];
20->19 [style = bold, label=""];
33->37 [style = bold, label=""];
2->22 [style = dashed, label="0"];
11->30 [style = bold, label=""];
30->40 [style = solid, label="histogram"];
15->1 [style = bold, label=""];
}
