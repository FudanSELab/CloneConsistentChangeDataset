digraph {
18 [style = filled, label = "assertTrue(\"Didn't find the expected node\",ranTestCase.get())@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(ranTestCase.get(),\"Didn't find the expected node\")@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "DataInputStream in = new DataInputStream(new ByteArrayInputStream(baos.toByteArray()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testDeserializeDoesntLockACLCacheWhileReading['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "tree2.deserialize(ia,\"test\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BinaryOutputArchive oa = new BinaryOutputArchive(out)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final DataNode markerNode = tree.getNode(\"/marker\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testDeserializeDoesntLockACLCacheWhileReading['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BinaryOutputArchive oa = new BinaryOutputArchive(out){@Override public void writeRecord(Record r,String tag){if (r instanceof DataNode) {DataNode node = (DataNode)rif (node.data.length == 1 && node.data(0( == 42) {final Semaphore semaphore = new Semaphore(0)new Thread(new Runnable(){@Override public void run(){synchronized (markerNode) {semaphore.release()}}}).start()try {boolean acquired = semaphore.tryAcquire(30,TimeUnit.SECONDS)assertTrue(\"Couldn't acquire a lock on the DataNode while we were calling tree.serialize\",acquired)}catch (InterruptedException e1) ranTestCase.set(true)}}super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@39fc02rtag}}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "BinaryInputArchive ia = new BinaryInputArchive(in){@Override public long readLong(String tag){final Semaphore semaphore = new Semaphore(0)new Thread(new Runnable(){@Override public void run(){synchronized (tree2.getReferenceCountedAclCache()) {semaphore.release()}}}).start()try {boolean acquired = semaphore.tryAcquire(30,TimeUnit.SECONDS)assertTrue(acquired,\"Couldn't acquire a lock on the ACLCache while we were calling tree.deserialize\")}catch (InterruptedException e1) ranTestCase.set(true)return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@39fb5ctag}}@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(\"Didn't find the expected node\",ranTestCase.get())@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tree.createNode(\"/marker\",new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@39fb7a,null,-1,1,1,1)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DataTree tree = new DataTree()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tree.createNode(\"/marker\",new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@39fad9,null,-1,1,1,1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "DataTree tree2 = new DataTree()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DataOutputStream out = new DataOutputStream(baos)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final AtomicBoolean ranTestCase = new AtomicBoolean()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tree.serialize(oa,\"test\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tree.serialize(oa,\"test\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "DataOutputStream out = new DataOutputStream(new ByteArrayOutputStream())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testSerializeDoesntLockDataNodeWhileWriting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->9 [style = bold, label=""];
7->11 [style = bold, label=""];
2->19 [style = bold, label=""];
5->0 [style = solid, label="out"];
11->21 [style = bold, label=""];
8->15 [style = dashed, label="0"];
10->3 [style = solid, label="ia"];
10->3 [style = bold, label=""];
0->9 [style = solid, label="oa"];
3->15 [style = bold, label=""];
19->16 [style = solid, label="out"];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
11->2 [style = bold, label=""];
19->16 [style = bold, label=""];
21->2 [style = bold, label=""];
7->14 [style = bold, label=""];
17->7 [style = bold, label=""];
20->18 [style = bold, label=""];
5->0 [style = bold, label=""];
13->7 [style = bold, label=""];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
4->5 [style = solid, label="baos"];
6->10 [style = solid, label="in"];
11->14 [style = dashed, label="0"];
3->20 [style = dashed, label="0"];
4->19 [style = dashed, label="0"];
14->2 [style = bold, label=""];
9->12 [style = bold, label=""];
16->20 [style = solid, label="oa"];
16->20 [style = bold, label=""];
4->5 [style = bold, label=""];
}
