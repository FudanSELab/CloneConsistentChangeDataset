digraph {
3 [style = filled, label = "checkSimplify(eq(literal(1),literal(1)),\"true\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "checkSimplify(ne(hRef,hRef),\"false\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RelDataType booleanType = typeFactory.createSqlType(SqlTypeName.BOOLEAN)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vInt(1))),\"IS NULL(?0.int1)\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final RexNode cRef = rexBuilder.makeFieldAccess(range,2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "checkSimplify2(and(lt(hRef,literal(1)),eq(hRef,literal(1)),ge(hRef,literal(1))),\"AND(<(?0.h, 1), =(?0.h, 1), >=(?0.h, 1))\",\"false\")@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(not(cRef),dRef,not(eRef)))),\"AND(?0.a, ?0.b, ?0.c, ?0.e, NOT(?0.d))\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vIntNotNull(1))),\"IS NULL(?0.int0)\")@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RelDataType intType = typeFactory.createSqlType(SqlTypeName.INTEGER)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "checkSimplify3(eq(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "checkSimplifyUnchanged(gt(iRef,hRef))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final RexNode hRef = rexBuilder.makeFieldAccess(range,7)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,and(trueLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "checkSimplify2(and(le(hRef,literal(1)),gt(hRef,literal(1))),\"AND(<=(?0.h, 1), >(?0.h, 1))\",\"false\")@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "final RexNode dRef = rexBuilder.makeFieldAccess(range,3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "testSimplify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "checkSimplify(isNotNull(not(vBool())),\"IS NOT NULL(?0.bool0)\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSimplify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkSimplify(and(aRef,bRef,trueLiteral),\"AND(?0.a, ?0.b)\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkSimplify(isNull(not(vBool())),\"IS NULL(?0.bool0)\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vIntNotNull(1))),\"IS NOT NULL(?0.int0)\")@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "checkSimplify(isNull(not(vBoolNotNull())),\"false\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "checkSimplify(gt(hRef,hRef),\"false\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final RexNode kRef = rexBuilder.makeFieldAccess(range,10)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "checkSimplify3(lt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "checkSimplify(case_(eq(falseLiteral,falseLiteral),falseLiteral,eq(falseLiteral,falseLiteral),trueLiteral,trueLiteral),\"false\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "checkSimplify(isNotNull(not(vBoolNotNull())),\"true\")@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "checkSimplify(or(aRef,bRef,falseLiteral),\"OR(?0.a, ?0.b)\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "checkSimplify3(and(le(hRef,literal(1)),gt(hRef,literal(1))),\"<>(?0.h, ?0.h)\",\"false\",\"false\")@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,eRef,falseLiteral,trueLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)), AND(NOT(?0.b), NOT(?0.c), NOT(?0.e)))\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(cRef),not(aRef)),\"AND(?0.b, NOT(?0.a), NOT(?0.c))\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(cRef,or(dRef,eRef)))),\"AND(?0.a, ?0.b, NOT(?0.c), NOT(?0.d), NOT(?0.e))\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkSimplify(and(lt(hRef,literal(1)),or(falseLiteral,gt(jRef,kRef))),\"AND(<(?0.h, 1), >(?0.j, ?0.k))\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "checkSimplify3(gt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.a, <>(?0.b, ?0.c)))\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_NULL,aRef),\"true\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NULL,aRef),\"false\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkSimplify(le(hRef,hRef),\"true\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "checkSimplifyUnchanged(ge(iRef,hRef))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "checkSimplify3(case_(aRef,trueLiteral,bRef,trueLiteral,cRef,falseLiteral,nullBool),\"OR(?0.a, ?0.b, AND(null, NOT(?0.a), NOT(?0.b), NOT(?0.c)))\",\"OR(?0.a, ?0.b)\",\"OR(?0.a, ?0.b, NOT(?0.c))\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,or(falseLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "checkSimplify(isNull(nullBool),\"true\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final RexNode eRef = rexBuilder.makeFieldAccess(range,4)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkSimplify(gt(literal(1),literal(1)),\"false\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final RexNode jRef = rexBuilder.makeFieldAccess(range,9)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "checkSimplify(ge(literal(1),literal(1)),\"true\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "checkSimplify(ne(literal(1),literal(1)),\"false\")@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,trueLiteral)),\"true\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkSimplify(case_(aRef,literal(1),bRef,literal(1),cRef,literal(1),dRef,literal(1),literal(1)),\"1\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "final RexDynamicParam range = rexBuilder.makeDynamicParam(rowType,0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vIntNotNull(1))),\"false\")@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "checkSimplify(and(le(hRef,literal(1)),ge(hRef,literal(1))),\"=(?0.h, 1)\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "checkSimplify(or(aRef,bRef,aRef),\"OR(?0.a, ?0.b)\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vInt(1))),\"IS NOT NULL(?0.int1)\")@@@83@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "checkSimplify3(and(lt(hRef,literal(1)),eq(hRef,literal(1)),ge(hRef,literal(1))),\"<>(?0.h, ?0.h)\",\"false\",\"false\")@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vIntNotNull(2))),\"IS NOT NULL(?0.int0)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "checkSimplify(le(literal(1),literal(1)),\"true\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,falseLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)))\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vIntNotNull(1))),\"true\")@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexNode aRef = rexBuilder.makeFieldAccess(range,0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkSimplify(case_(trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"?0.a\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final RexNode bRef = rexBuilder.makeFieldAccess(range,1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "checkSimplify3(ge(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(trueLiteral)),\"false\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),literal(BigDecimal.ONE))),\"IS NOT NULL(?0.int0)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vInt(1))),\"OR(IS NULL(?0.int0), IS NULL(?0.int1))\")@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "checkSimplify(and(aRef,bRef,aRef),\"AND(?0.a, ?0.b)\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,or(trueLiteral,falseLiteral))),\"true\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final RelDataType intNullableType = typeFactory.createTypeWithNullability(intType,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "checkSimplify(and(lt(hRef,literal(1)),or(falseLiteral,falseLiteral)),\"false\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "checkSimplify(lt(hRef,hRef),\"false\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkSimplify(or(aRef,bRef,trueLiteral),\"true\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "checkSimplifyUnchanged(eq(iRef,hRef))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkSimplify(eq(hRef,hRef),\"true\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),null_(tInt()))),\"false\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "checkSimplify(isNotNull(lt(vIntNotNull(2),vIntNotNull(3))),\"true\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "checkSimplify(ge(hRef,hRef),\"true\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "checkSimplify(and(aRef,bRef,falseLiteral),\"false\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "checkSimplify3(le(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkSimplify(and(aRef,and(and(bRef,not(cRef),dRef,not(eRef)),not(eRef))),\"AND(?0.a, ?0.b, ?0.d, NOT(?0.c), NOT(?0.e))\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexNode iRef = rexBuilder.makeFieldAccess(range,8)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "checkSimplifyDynamicParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "checkSimplifyUnchanged(lt(iRef,hRef))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "checkSimplifyUnchanged(le(iRef,hRef))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "checkSimplify3(ne(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkSimplifyUnchanged(ne(iRef,hRef))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final RelDataType rowType = typeFactory.builder().add(\"a\",booleanType).add(\"b\",booleanType).add(\"c\",booleanType).add(\"d\",booleanType).add(\"e\",booleanType).add(\"f\",booleanType).add(\"g\",booleanType).add(\"h\",intType).add(\"i\",intNullableType).add(\"j\",intType).add(\"k\",intType).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,falseLiteral,aRef,eRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.e, <>(?0.b, ?0.c)))\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "checkSimplify(lt(literal(1),literal(1)),\"false\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->29 [style = solid, label="iRef"];
78->27 [style = bold, label=""];
4->41 [style = solid, label="aRef"];
4->71 [style = solid, label="aRef"];
26->66 [style = solid, label="dRef"];
61->37 [style = bold, label=""];
90->88 [style = bold, label=""];
45->65 [style = bold, label=""];
24->79 [style = bold, label=""];
38->44 [style = bold, label=""];
48->17 [style = solid, label="hRef"];
75->23 [style = solid, label="range"];
39->59 [style = bold, label=""];
38->20 [style = solid, label="bRef"];
26->20 [style = solid, label="dRef"];
8->78 [style = solid, label="iRef"];
4->24 [style = solid, label="aRef"];
55->62 [style = bold, label=""];
38->63 [style = solid, label="bRef"];
38->0 [style = solid, label="bRef"];
80->34 [style = solid, label="eRef"];
48->10 [style = solid, label="hRef"];
27->58 [style = bold, label=""];
45->83 [style = bold, label=""];
44->72 [style = solid, label="cRef"];
13->1 [style = bold, label=""];
48->47 [style = solid, label="hRef"];
80->66 [style = solid, label="eRef"];
4->11 [style = solid, label="aRef"];
4->34 [style = solid, label="aRef"];
63->73 [style = bold, label=""];
48->53 [style = solid, label="hRef"];
38->73 [style = solid, label="bRef"];
48->81 [style = solid, label="hRef"];
0->25 [style = bold, label=""];
71->64 [style = bold, label=""];
44->63 [style = solid, label="cRef"];
44->66 [style = solid, label="cRef"];
26->11 [style = solid, label="dRef"];
8->2 [style = solid, label="iRef"];
8->59 [style = solid, label="iRef"];
48->83 [style = solid, label="hRef"];
4->73 [style = solid, label="aRef"];
15->71 [style = bold, label=""];
26->21 [style = solid, label="dRef"];
49->67 [style = bold, label=""];
80->15 [style = solid, label="eRef"];
70->57 [style = bold, label=""];
74->9 [style = bold, label=""];
75->38 [style = solid, label="range"];
4->20 [style = solid, label="aRef"];
59->6 [style = bold, label=""];
20->15 [style = bold, label=""];
26->34 [style = solid, label="dRef"];
25->21 [style = bold, label=""];
83->13 [style = bold, label=""];
48->35 [style = solid, label="hRef"];
19->14 [style = solid, label="intType"];
52->23 [style = bold, label=""];
4->38 [style = bold, label=""];
22->46 [style = bold, label=""];
28->18 [style = bold, label=""];
50->69 [style = bold, label=""];
4->25 [style = solid, label="aRef"];
82->12 [style = bold, label=""];
77->40 [style = bold, label=""];
79->63 [style = bold, label=""];
44->11 [style = solid, label="cRef"];
89->85 [style = bold, label=""];
64->74 [style = bold, label=""];
44->34 [style = solid, label="cRef"];
80->11 [style = solid, label="eRef"];
80->71 [style = solid, label="eRef"];
48->45 [style = solid, label="hRef"];
31->68 [style = bold, label=""];
51->75 [style = bold, label=""];
38->64 [style = solid, label="bRef"];
48->49 [style = solid, label="hRef"];
48->68 [style = solid, label="hRef"];
57->32 [style = bold, label=""];
75->4 [style = bold, label=""];
38->15 [style = solid, label="bRef"];
8->49 [style = solid, label="iRef"];
80->48 [style = bold, label=""];
17->2 [style = bold, label=""];
8->56 [style = solid, label="iRef"];
38->79 [style = solid, label="bRef"];
9->72 [style = bold, label=""];
26->15 [style = solid, label="dRef"];
75->44 [style = solid, label="range"];
53->33 [style = bold, label=""];
30->47 [style = bold, label=""];
4->79 [style = solid, label="aRef"];
4->0 [style = solid, label="aRef"];
40->84 [style = dashed, label="0"];
44->15 [style = solid, label="cRef"];
38->25 [style = solid, label="bRef"];
48->84 [style = solid, label="hRef"];
48->46 [style = solid, label="hRef"];
62->36 [style = bold, label=""];
67->35 [style = bold, label=""];
66->11 [style = bold, label=""];
8->27 [style = solid, label="iRef"];
80->72 [style = solid, label="eRef"];
48->65 [style = solid, label="hRef"];
48->27 [style = solid, label="hRef"];
81->39 [style = bold, label=""];
48->33 [style = solid, label="hRef"];
47->56 [style = bold, label=""];
68->3 [style = bold, label=""];
21->34 [style = bold, label=""];
75->26 [style = solid, label="range"];
26->0 [style = solid, label="dRef"];
38->41 [style = solid, label="bRef"];
44->71 [style = solid, label="cRef"];
43->76 [style = bold, label=""];
23->41 [style = bold, label=""];
38->34 [style = solid, label="bRef"];
42->55 [style = bold, label=""];
4->9 [style = solid, label="aRef"];
8->52 [style = bold, label=""];
29->54 [style = bold, label=""];
4->76 [style = solid, label="aRef"];
48->1 [style = solid, label="hRef"];
69->28 [style = bold, label=""];
8->70 [style = solid, label="iRef"];
32->60 [style = bold, label=""];
46->30 [style = bold, label=""];
84->45 [style = bold, label=""];
19->14 [style = bold, label=""];
75->4 [style = solid, label="range"];
75->80 [style = solid, label="range"];
44->20 [style = solid, label="cRef"];
75->8 [style = solid, label="range"];
4->74 [style = solid, label="aRef"];
38->9 [style = solid, label="bRef"];
80->20 [style = solid, label="eRef"];
48->31 [style = solid, label="hRef"];
8->22 [style = solid, label="iRef"];
8->57 [style = solid, label="iRef"];
3->17 [style = bold, label=""];
54->10 [style = bold, label=""];
23->1 [style = solid, label="kRef"];
4->15 [style = solid, label="aRef"];
65->83 [style = dashed, label="0"];
51->75 [style = solid, label="rowType"];
87->86 [style = bold, label=""];
34->43 [style = bold, label=""];
4->72 [style = solid, label="aRef"];
48->16 [style = solid, label="hRef"];
48->29 [style = solid, label="hRef"];
10->22 [style = bold, label=""];
38->21 [style = solid, label="bRef"];
56->49 [style = bold, label=""];
38->72 [style = solid, label="bRef"];
41->24 [style = bold, label=""];
75->52 [style = solid, label="range"];
38->24 [style = solid, label="bRef"];
8->39 [style = solid, label="iRef"];
75->48 [style = solid, label="range"];
38->74 [style = solid, label="bRef"];
26->71 [style = solid, label="dRef"];
48->40 [style = solid, label="hRef"];
26->80 [style = bold, label=""];
76->77 [style = bold, label=""];
88->89 [style = bold, label=""];
14->51 [style = bold, label=""];
38->71 [style = solid, label="bRef"];
44->21 [style = solid, label="cRef"];
35->78 [style = bold, label=""];
8->46 [style = solid, label="iRef"];
48->8 [style = bold, label=""];
73->20 [style = bold, label=""];
58->81 [style = bold, label=""];
4->77 [style = solid, label="aRef"];
44->0 [style = solid, label="cRef"];
16->70 [style = bold, label=""];
85->87 [style = bold, label=""];
52->1 [style = solid, label="jRef"];
48->59 [style = solid, label="hRef"];
4->66 [style = solid, label="aRef"];
11->0 [style = bold, label=""];
26->72 [style = solid, label="dRef"];
38->66 [style = solid, label="bRef"];
44->26 [style = bold, label=""];
5->12 [style = bold, label=""];
60->7 [style = bold, label=""];
6->16 [style = bold, label=""];
4->63 [style = solid, label="aRef"];
44->25 [style = solid, label="cRef"];
48->13 [style = solid, label="hRef"];
33->31 [style = bold, label=""];
4->21 [style = solid, label="aRef"];
72->66 [style = bold, label=""];
40->45 [style = bold, label=""];
7->61 [style = bold, label=""];
4->64 [style = solid, label="aRef"];
65->13 [style = bold, label=""];
12->19 [style = bold, label=""];
77->84 [style = bold, label=""];
2->29 [style = bold, label=""];
48->57 [style = solid, label="hRef"];
1->53 [style = bold, label=""];
37->50 [style = bold, label=""];
18->42 [style = bold, label=""];
}
