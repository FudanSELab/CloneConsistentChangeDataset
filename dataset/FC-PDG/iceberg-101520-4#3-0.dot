digraph {
24 [style = filled, label = "cmp >= 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cmp > 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cmp < 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return ROWS_CANNOT_MATCH@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "T lower = Conversions.fromByteBuffer(field.type(),lowerBounds.get(id))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Literal<T> lit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return ROWS_MIGHT_MATCH@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "lt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "T lower = Conversions.fromByteBuffer(ref.type(),lowerBounds.get(id))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "return ROWS_CANNOT_MATCH@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "eq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "eq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
15->5 [style = dotted, label="true"];
14->2 [style = dotted, label="true"];
15->23 [style = bold, label=""];
1->8 [style = bold, label=""];
12->23 [style = dashed, label="0"];
3->5 [style = solid, label="cmp"];
12->3 [style = solid, label="lower"];
3->24 [style = bold, label=""];
16->8 [style = bold, label=""];
17->18 [style = dotted, label="true"];
15->24 [style = dotted, label="true"];
13->20 [style = dashed, label="0"];
11->19 [style = solid, label="id"];
5->24 [style = dashed, label="0"];
11->1 [style = solid, label="id"];
13->7 [style = solid, label="upper"];
11->20 [style = solid, label="id"];
20->7 [style = solid, label="upper"];
11->13 [style = solid, label="id"];
1->20 [style = bold, label=""];
21->22 [style = dotted, label="true"];
23->3 [style = bold, label=""];
1->14 [style = dotted, label="true"];
15->19 [style = bold, label=""];
11->12 [style = solid, label="id"];
1->13 [style = bold, label=""];
17->11 [style = bold, label=""];
0->15 [style = bold, label=""];
24->16 [style = dotted, label="true"];
11->15 [style = bold, label=""];
7->14 [style = bold, label=""];
1->7 [style = dotted, label="true"];
5->16 [style = bold, label=""];
15->3 [style = dotted, label="true"];
1->13 [style = dotted, label="true"];
24->16 [style = bold, label=""];
5->1 [style = bold, label=""];
3->24 [style = solid, label="cmp"];
11->0 [style = solid, label="id"];
3->5 [style = bold, label=""];
21->25 [style = dotted, label="true"];
11->15 [style = solid, label="id"];
12->19 [style = dashed, label="0"];
23->3 [style = solid, label="lower"];
16->1 [style = bold, label=""];
21->11 [style = bold, label=""];
11->10 [style = bold, label=""];
13->7 [style = bold, label=""];
15->19 [style = dotted, label="true"];
17->9 [style = dotted, label="true"];
10->0 [style = bold, label=""];
9->25 [style = dashed, label="0"];
5->16 [style = dotted, label="true"];
15->12 [style = dotted, label="true"];
19->3 [style = solid, label="lower"];
7->14 [style = solid, label="cmp"];
15->12 [style = bold, label=""];
12->3 [style = bold, label=""];
14->2 [style = bold, label=""];
14->8 [style = bold, label=""];
24->8 [style = bold, label=""];
20->7 [style = bold, label=""];
4->9 [style = dotted, label="true"];
4->11 [style = bold, label=""];
15->23 [style = dotted, label="true"];
19->3 [style = bold, label=""];
1->20 [style = dotted, label="true"];
11->10 [style = solid, label="id"];
10->0 [style = solid, label="field"];
15->8 [style = bold, label=""];
11->23 [style = solid, label="id"];
2->8 [style = bold, label=""];
15->1 [style = bold, label=""];
}
