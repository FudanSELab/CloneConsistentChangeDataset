digraph {
5 [style = filled, label = "!.isAssignableFrom(parameterType)@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Method method@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "registerNodeTypeMethod['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!method.getName().startsWith(\"convert\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "parameterTypes.length != 3@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "parameterTypes.length != 2@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!Modifier.isPublic(method.getModifiers())@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Method method@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "!.isAssignableFrom(parameterType)@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "!.isAssignableFrom(method.getReturnType())@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Class parameterType = parameterTypes(1(@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Class parameterType = parameterTypes(2(@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "!.isAssignableFrom(opClass)@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "map.put(opClass,new SqlRexConvertlet(){public RexNode convertCall(SqlRexContext cx,SqlCall call){try {return (RexNode)method.invoke(this,cx,call.getOperator(),call)}catch (IllegalAccessException|InvocationTargetException e) }})@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "parameterTypes(0( != @@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "registerNodeTypeMethod['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "registerOpTypeMethod['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "map.put(parameterType,new SqlRexConvertlet(){public RexNode convertCall(SqlRexContext cx,SqlCall call){try {return (RexNode)method.invoke(this,cx,call)}catch (IllegalAccessException|InvocationTargetException e) }})@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "map.put(parameterType,(SqlRexConvertlet)null)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final Class(( parameterTypes = method.getParameterTypes()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Class opClass = parameterTypes(1(@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
4->10 [style = bold, label=""];
17->10 [style = bold, label=""];
27->1 [style = dotted, label="true"];
27->1 [style = bold, label=""];
7->21 [style = dashed, label="0"];
23->20 [style = solid, label="opClass"];
16->25 [style = solid, label="parameterTypes"];
23->27 [style = bold, label=""];
10->14 [style = bold, label=""];
16->6 [style = bold, label=""];
0->23 [style = dashed, label="0"];
5->1 [style = dotted, label="true"];
16->13 [style = solid, label="parameterTypes"];
4->7 [style = dotted, label="true"];
19->10 [style = bold, label=""];
1->18 [style = bold, label=""];
16->0 [style = solid, label="parameterTypes"];
3->15 [style = bold, label=""];
19->21 [style = dotted, label="true"];
12->16 [style = bold, label=""];
5->18 [style = bold, label=""];
16->22 [style = bold, label=""];
10->9 [style = dotted, label="true"];
15->16 [style = bold, label=""];
26->24 [style = bold, label=""];
6->22 [style = dashed, label="0"];
1->11 [style = bold, label=""];
24->20 [style = bold, label=""];
22->8 [style = bold, label=""];
13->2 [style = dotted, label="true"];
2->23 [style = bold, label=""];
5->1 [style = bold, label=""];
5->27 [style = dashed, label="0"];
22->8 [style = dotted, label="true"];
2->0 [style = bold, label=""];
0->18 [style = solid, label="parameterType"];
6->8 [style = dotted, label="true"];
16->23 [style = solid, label="parameterTypes"];
11->18 [style = dashed, label="0"];
6->13 [style = bold, label=""];
26->24 [style = dotted, label="true"];
6->8 [style = bold, label=""];
25->26 [style = bold, label=""];
11->25 [style = dashed, label="0"];
9->14 [style = bold, label=""];
14->3 [style = dotted, label="true"];
13->23 [style = bold, label=""];
15->12 [style = dotted, label="true"];
17->7 [style = dotted, label="true"];
10->9 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
5->11 [style = bold, label=""];
22->13 [style = bold, label=""];
1->25 [style = bold, label=""];
27->25 [style = bold, label=""];
0->11 [style = solid, label="parameterType"];
0->5 [style = bold, label=""];
26->20 [style = bold, label=""];
8->13 [style = bold, label=""];
13->0 [style = bold, label=""];
13->2 [style = bold, label=""];
}
