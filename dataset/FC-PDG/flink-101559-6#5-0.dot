digraph {
17 [style = filled, label = "input.addSink(new DiscardingSink<>())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "FailOnParallelExecutionSource.waitForScaleUpToParallelism(1)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testScaleDownOnTaskManagerLoss['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ParallelismTrackingSource.resetParallelismTracker()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testScaleDownOnTaskManagerLoss['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "waitUntilParallelismForVertexReached(miniClusterResource.getRestClusterClient(),jobClient.getJobID(),NUMBER_SLOTS_PER_TASK_MANAGER * NUMBER_SLOTS_PER_TASK_MANAGER)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final DataStream<String> input = env.addSource(new FailOnParallelExecutionSource()).setMaxParallelism(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "waitUntilParallelismForVertexReached(miniClusterResource.getRestClusterClient(),jobClient.getJobID(),NUMBER_SLOTS_PER_TASK_MANAGER * (INITIAL_NUMBER_TASK_MANAGERS + 1))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final DataStream<String> input = env.addSource(new DummySource())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testScaleLimitByMaxParallelism['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER * 2)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final DataStream<String> input = env.addSource(new ParallelismTrackingSource())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "miniClusterResource.getMiniCluster().terminateTaskManager(0).get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "env.executeAsync()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1,0L))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final JobClient jobClient = env.executeAsync()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "env.executeAsync()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "startAdditionalTaskManager()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->14 [style = dashed, label="0"];
0->13 [style = bold, label=""];
15->7 [style = bold, label=""];
0->6 [style = bold, label=""];
16->7 [style = bold, label=""];
4->0 [style = dashed, label="0"];
10->3 [style = bold, label=""];
9->17 [style = bold, label=""];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
9->8 [style = bold, label=""];
4->12 [style = dashed, label="0"];
19->16 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
12->2 [style = bold, label=""];
11->0 [style = bold, label=""];
13->12 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->7 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->14 [style = bold, label=""];
8->11 [style = bold, label=""];
18->0 [style = bold, label=""];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
}
