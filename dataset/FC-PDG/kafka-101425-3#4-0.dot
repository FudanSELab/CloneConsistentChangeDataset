digraph {
51 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "table1 = builder.table(topic1,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "table2 = builder.table(topic2,consumed)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i++@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i++@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 1@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "joined.toStream().process(processor)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "i < 3@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i++@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "final KTable<Integer,String> table1@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "driver.flushState()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int i = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "driver.flushState()@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "getter.init(driver.context())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.flushState()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "driver.process(topic1,expectedKeys(i(,null)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < 2@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@caedc0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "KTable<Integer,String> table2@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "i < 2@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(streamTopic,tableTopic)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "shouldRequireCopartitionedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "final KTable<Integer,String> joined@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "KTable<Integer,String> table1@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "driver.flushState()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "final KTable<Integer,String> table2@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "driver.setUp(builder,stateDir)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "joined = table1.outerJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.flushState()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "processor.checkAndClearProcessResult(\"1:null\",\"2:null+YY2\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.flushState()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "i < 2@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.flushState()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,null),kv(2,\"null+YY2\"),kv(3,\"XX3+YY3\"))@@@80@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.flushState()@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "KTable<Integer,String> joined@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->30 [style = solid, label="i"];
43->60 [style = bold, label=""];
45->65 [style = bold, label=""];
65->57 [style = solid, label="getter"];
41->58 [style = solid, label="i"];
62->54 [style = bold, label=""];
18->55 [style = solid, label="getter"];
27->37 [style = solid, label="i"];
64->53 [style = bold, label=""];
17->6 [style = solid, label="expectedKeys"];
67->71 [style = bold, label=""];
40->38 [style = bold, label=""];
61->10 [style = bold, label=""];
13->1 [style = bold, label=""];
23->29 [style = bold, label=""];
40->38 [style = solid, label="table2"];
20->52 [style = solid, label="builder"];
65->32 [style = solid, label="getter"];
65->34 [style = solid, label="getter"];
71->66 [style = solid, label="builder"];
20->71 [style = dashed, label="0"];
56->6 [style = dotted, label="true"];
18->35 [style = bold, label=""];
48->72 [style = dashed, label="0"];
32->4 [style = bold, label=""];
31->20 [style = bold, label=""];
41->58 [style = bold, label=""];
58->22 [style = bold, label=""];
58->22 [style = dotted, label="true"];
25->57 [style = bold, label=""];
19->42 [style = bold, label=""];
21->68 [style = dashed, label="0"];
41->22 [style = solid, label="i"];
19->12 [style = bold, label=""];
24->55 [style = bold, label=""];
59->32 [style = bold, label=""];
46->24 [style = bold, label=""];
51->21 [style = bold, label=""];
22->41 [style = bold, label=""];
60->62 [style = bold, label=""];
57->0 [style = bold, label=""];
73->69 [style = bold, label=""];
3->61 [style = bold, label=""];
27->56 [style = bold, label=""];
21->45 [style = bold, label=""];
30->19 [style = bold, label=""];
52->5 [style = bold, label=""];
18->65 [style = dashed, label="0"];
20->45 [style = solid, label="builder"];
51->77 [style = dashed, label="0"];
2->14 [style = solid, label="i"];
2->1 [style = solid, label="i"];
65->15 [style = solid, label="getter"];
68->45 [style = bold, label=""];
49->3 [style = bold, label=""];
29->40 [style = bold, label=""];
13->14 [style = solid, label="i"];
0->44 [style = bold, label=""];
17->73 [style = bold, label=""];
63->16 [style = bold, label=""];
36->66 [style = bold, label=""];
33->8 [style = bold, label=""];
55->9 [style = bold, label=""];
72->23 [style = bold, label=""];
74->75 [style = bold, label=""];
56->6 [style = bold, label=""];
18->32 [style = solid, label="getter"];
13->1 [style = solid, label="i"];
17->22 [style = solid, label="expectedKeys"];
36->52 [style = bold, label=""];
42->25 [style = bold, label=""];
2->1 [style = bold, label=""];
7->64 [style = bold, label=""];
17->12 [style = solid, label="expectedKeys"];
65->55 [style = solid, label="getter"];
65->35 [style = bold, label=""];
19->12 [style = dotted, label="true"];
28->26 [style = bold, label=""];
4->41 [style = solid, label="i"];
65->54 [style = solid, label="getter"];
18->54 [style = solid, label="getter"];
19->30 [style = dotted, label="true"];
58->49 [style = bold, label=""];
1->7 [style = bold, label=""];
6->37 [style = bold, label=""];
48->23 [style = bold, label=""];
4->58 [style = bold, label=""];
23->36 [style = solid, label="processor"];
13->2 [style = solid, label="i"];
9->19 [style = solid, label="i"];
16->59 [style = bold, label=""];
18->53 [style = solid, label="getter"];
15->43 [style = bold, label=""];
66->5 [style = bold, label=""];
9->19 [style = bold, label=""];
8->50 [style = bold, label=""];
10->33 [style = bold, label=""];
14->2 [style = bold, label=""];
70->72 [style = bold, label=""];
50->15 [style = bold, label=""];
56->63 [style = bold, label=""];
75->76 [style = bold, label=""];
27->56 [style = solid, label="i"];
30->19 [style = solid, label="i"];
18->34 [style = solid, label="getter"];
45->18 [style = bold, label=""];
58->41 [style = dotted, label="true"];
4->22 [style = solid, label="i"];
71->45 [style = solid, label="builder"];
28->73 [style = dashed, label="0"];
35->27 [style = bold, label=""];
39->48 [style = bold, label=""];
20->17 [style = bold, label=""];
39->70 [style = dashed, label="0"];
5->51 [style = bold, label=""];
71->17 [style = bold, label=""];
27->6 [style = solid, label="i"];
18->10 [style = solid, label="getter"];
34->13 [style = bold, label=""];
76->77 [style = bold, label=""];
26->69 [style = dashed, label="0"];
51->68 [style = bold, label=""];
52->66 [style = dashed, label="0"];
37->56 [style = solid, label="i"];
4->58 [style = solid, label="i"];
38->36 [style = bold, label=""];
47->46 [style = bold, label=""];
12->30 [style = bold, label=""];
20->75 [style = dashed, label="0"];
1->14 [style = dotted, label="true"];
17->14 [style = solid, label="expectedKeys"];
56->37 [style = dotted, label="true"];
26->39 [style = bold, label=""];
18->57 [style = solid, label="getter"];
17->28 [style = bold, label=""];
54->47 [style = bold, label=""];
30->12 [style = solid, label="i"];
11->34 [style = bold, label=""];
65->53 [style = solid, label="getter"];
18->15 [style = solid, label="getter"];
44->11 [style = bold, label=""];
1->14 [style = bold, label=""];
69->70 [style = bold, label=""];
37->6 [style = solid, label="i"];
1->2 [style = dotted, label="true"];
9->12 [style = solid, label="i"];
65->10 [style = solid, label="getter"];
37->56 [style = bold, label=""];
}
