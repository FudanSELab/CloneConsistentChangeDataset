digraph {
8 [style = filled, label = "HostVO destHost = new HostVO(\"guid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mockito.doReturn(storagePoolTypes(i().when(sourceStoragePool).getPoolType()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StoragePoolVO destStoragePool = new StoragePoolVO()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "StoragePoolType(( storagePoolTypes = StoragePoolType.values()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Mockito.lenient().doReturn(storagePoolTypes(i().when(sourceStoragePool).getPoolType()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < storagePoolTypes.length@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(result)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldMigrateVolumeTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "StoragePoolVO sourceStoragePool = Mockito.spy(new StoragePoolVO())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "boolean result = strategy.shouldMigrateVolume(sourceStoragePool,destHost,destStoragePool)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "storagePoolTypes(i( == StoragePoolType.Filesystem || storagePoolTypes(i( == StoragePoolType.NetworkFilesystem@@@12@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "supportStoragePoolType(storagePoolTypes(i()@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "shouldMigrateVolumeTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean result = kvmNonManagedStorageDataMotionStrategy.shouldMigrateVolume(sourceStoragePool,destHost,destStoragePool)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldMigrateVolumeTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertFalse(result)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
14->5 [style = bold, label=""];
8->4 [style = solid, label="destHost"];
12->16 [style = dashed, label="0"];
11->3 [style = dotted, label="true"];
10->15 [style = solid, label="destStoragePool"];
11->2 [style = dotted, label="true"];
11->12 [style = bold, label=""];
4->5 [style = solid, label="result"];
14->5 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
6->2 [style = solid, label="i"];
2->11 [style = bold, label=""];
7->9 [style = bold, label=""];
3->0 [style = dotted, label="false"];
2->11 [style = solid, label="i"];
6->11 [style = bold, label=""];
12->4 [style = bold, label=""];
8->15 [style = solid, label="destHost"];
16->15 [style = bold, label=""];
4->15 [style = dashed, label="0"];
14->0 [style = bold, label=""];
11->16 [style = bold, label=""];
2->14 [style = solid, label="i"];
9->4 [style = solid, label="sourceStoragePool"];
1->6 [style = bold, label=""];
11->17 [style = dotted, label="true"];
3->5 [style = bold, label=""];
11->16 [style = dotted, label="true"];
6->3 [style = solid, label="i"];
1->14 [style = solid, label="storagePoolTypes"];
10->1 [style = bold, label=""];
18->9 [style = bold, label=""];
14->0 [style = dotted, label="false"];
11->14 [style = dotted, label="true"];
6->14 [style = solid, label="i"];
3->0 [style = bold, label=""];
2->3 [style = solid, label="i"];
15->17 [style = solid, label="result"];
11->15 [style = dotted, label="true"];
4->14 [style = bold, label=""];
1->3 [style = solid, label="storagePoolTypes"];
11->4 [style = dotted, label="true"];
13->9 [style = bold, label=""];
9->8 [style = bold, label=""];
0->2 [style = bold, label=""];
9->15 [style = solid, label="sourceStoragePool"];
3->5 [style = dotted, label="true"];
4->3 [style = bold, label=""];
4->0 [style = solid, label="result"];
8->10 [style = bold, label=""];
10->4 [style = solid, label="destStoragePool"];
6->11 [style = solid, label="i"];
17->2 [style = bold, label=""];
15->17 [style = bold, label=""];
}
