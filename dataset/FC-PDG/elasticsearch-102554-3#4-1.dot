digraph {
40 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rangeQuery = mapperService.fullName(\"nested3.foo2\").rangeQuery(2,5,true,true,null,null,null,null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "rangeQuery = mapperService.fullName(\"nested1.foo2\").rangeQuery(2,5,true,true,null,null,null,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Query rangeQuery = mapperService.fullName(\"foo2\").rangeQuery(2,5,true,true,null,null,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Query termQuery = mapperService.fullName(\"foo\").termQuery(\"bar\",null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "termQuery = mapperService.fieldType(\"nested1.foo\").termQuery(\"bar\",null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "testRangeQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "termQuery = mapperService.fieldType(\"nested3.foo\").termQuery(\"bar\",null)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "termQuery = mapperService.fullName(\"nested3.foo\").termQuery(\"bar\",null)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Query termQuery = mapperService.fieldType(\"foo\").termQuery(\"bar\",null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "termQuery = mapperService.fieldType(\"nested2.foo\").termQuery(\"bar\",null)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testTermQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testTermQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "termQuery = mapperService.fullName(\"nested2.foo\").termQuery(\"bar\",null)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "rangeQuery = mapperService.fullName(\"nested2.foo2\").rangeQuery(2,5,true,true,null,null,null,null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "termQuery = mapperService.fullName(\"nested1.foo\").termQuery(\"bar\",null)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21->10 [style = bold, label=""];
37->49 [style = bold, label=""];
33->37 [style = solid, label="rangeQuery"];
54->53 [style = solid, label="rangeQuery"];
27->9 [style = bold, label=""];
43->42 [style = bold, label=""];
18->16 [style = solid, label="termQuery"];
33->35 [style = solid, label="rangeQuery"];
28->19 [style = solid, label="termQuery"];
53->41 [style = solid, label="rangeQuery"];
22->17 [style = solid, label="termQuery"];
43->31 [style = solid, label="rangeQuery"];
22->4 [style = solid, label="termQuery"];
22->20 [style = solid, label="termQuery"];
53->39 [style = bold, label=""];
25->2 [style = solid, label="termQuery"];
44->46 [style = bold, label=""];
43->36 [style = solid, label="rangeQuery"];
22->9 [style = solid, label="termQuery"];
35->37 [style = bold, label=""];
6->36 [style = dashed, label="0"];
23->39 [style = dashed, label="0"];
28->0 [style = solid, label="termQuery"];
2->14 [style = bold, label=""];
26->8 [style = solid, label="termQuery"];
24->52 [style = dashed, label="0"];
12->18 [style = bold, label=""];
27->20 [style = solid, label="termQuery"];
2->49 [style = dashed, label="0"];
18->14 [style = solid, label="termQuery"];
13->22 [style = bold, label=""];
43->42 [style = solid, label="rangeQuery"];
15->53 [style = dashed, label="0"];
26->24 [style = solid, label="termQuery"];
2->28 [style = bold, label=""];
18->25 [style = dashed, label="0"];
25->11 [style = solid, label="termQuery"];
18->33 [style = dashed, label="0"];
45->41 [style = bold, label=""];
11->16 [style = bold, label=""];
26->25 [style = solid, label="termQuery"];
4->3 [style = bold, label=""];
33->49 [style = solid, label="rangeQuery"];
28->5 [style = bold, label=""];
36->44 [style = bold, label=""];
14->0 [style = solid, label="termQuery"];
22->9 [style = bold, label=""];
27->26 [style = solid, label="termQuery"];
18->11 [style = bold, label=""];
48->50 [style = bold, label=""];
27->9 [style = solid, label="termQuery"];
42->31 [style = bold, label=""];
25->28 [style = solid, label="termQuery"];
22->15 [style = solid, label="termQuery"];
54->48 [style = solid, label="rangeQuery"];
54->40 [style = solid, label="rangeQuery"];
28->7 [style = solid, label="termQuery"];
29->27 [style = bold, label=""];
15->1 [style = solid, label="termQuery"];
39->52 [style = bold, label=""];
14->19 [style = solid, label="termQuery"];
47->54 [style = bold, label=""];
25->10 [style = solid, label="termQuery"];
7->6 [style = bold, label=""];
15->26 [style = dashed, label="0"];
18->2 [style = solid, label="termQuery"];
5->7 [style = bold, label=""];
32->48 [style = bold, label=""];
10->2 [style = bold, label=""];
34->38 [style = bold, label=""];
15->18 [style = solid, label="termQuery"];
52->51 [style = bold, label=""];
38->35 [style = bold, label=""];
22->54 [style = dashed, label="0"];
53->39 [style = solid, label="rangeQuery"];
33->34 [style = solid, label="rangeQuery"];
54->40 [style = bold, label=""];
1->8 [style = bold, label=""];
7->31 [style = dashed, label="0"];
27->3 [style = solid, label="termQuery"];
43->46 [style = solid, label="rangeQuery"];
14->28 [style = dashed, label="0"];
18->21 [style = solid, label="termQuery"];
11->34 [style = dashed, label="0"];
18->11 [style = solid, label="termQuery"];
5->42 [style = dashed, label="0"];
3->26 [style = bold, label=""];
31->36 [style = bold, label=""];
30->32 [style = bold, label=""];
9->20 [style = bold, label=""];
1->51 [style = dashed, label="0"];
22->27 [style = dashed, label="0"];
19->0 [style = bold, label=""];
12->41 [style = dashed, label="0"];
14->6 [style = solid, label="termQuery"];
15->24 [style = solid, label="termQuery"];
53->51 [style = solid, label="rangeQuery"];
26->1 [style = solid, label="termQuery"];
25->16 [style = solid, label="termQuery"];
53->45 [style = solid, label="rangeQuery"];
33->43 [style = solid, label="rangeQuery"];
51->45 [style = bold, label=""];
15->8 [style = solid, label="termQuery"];
20->30 [style = dashed, label="0"];
53->52 [style = solid, label="rangeQuery"];
54->50 [style = solid, label="rangeQuery"];
40->30 [style = bold, label=""];
33->38 [style = solid, label="rangeQuery"];
41->33 [style = bold, label=""];
24->1 [style = bold, label=""];
21->35 [style = dashed, label="0"];
0->46 [style = dashed, label="0"];
14->7 [style = solid, label="termQuery"];
4->48 [style = dashed, label="0"];
43->44 [style = solid, label="rangeQuery"];
27->4 [style = solid, label="termQuery"];
17->4 [style = bold, label=""];
8->12 [style = bold, label=""];
15->23 [style = solid, label="termQuery"];
14->5 [style = bold, label=""];
26->23 [style = solid, label="termQuery"];
15->23 [style = bold, label=""];
28->5 [style = solid, label="termQuery"];
53->33 [style = solid, label="rangeQuery"];
16->38 [style = dashed, label="0"];
20->17 [style = bold, label=""];
18->10 [style = solid, label="termQuery"];
27->17 [style = solid, label="termQuery"];
26->12 [style = solid, label="termQuery"];
17->32 [style = dashed, label="0"];
28->6 [style = solid, label="termQuery"];
3->15 [style = bold, label=""];
6->19 [style = bold, label=""];
15->12 [style = solid, label="termQuery"];
49->43 [style = bold, label=""];
54->30 [style = solid, label="rangeQuery"];
19->44 [style = dashed, label="0"];
14->43 [style = dashed, label="0"];
23->24 [style = bold, label=""];
14->5 [style = solid, label="termQuery"];
9->40 [style = dashed, label="0"];
3->50 [style = dashed, label="0"];
25->21 [style = solid, label="termQuery"];
25->11 [style = bold, label=""];
16->21 [style = bold, label=""];
12->25 [style = bold, label=""];
26->23 [style = bold, label=""];
8->45 [style = dashed, label="0"];
10->37 [style = dashed, label="0"];
33->34 [style = bold, label=""];
50->53 [style = bold, label=""];
22->3 [style = solid, label="termQuery"];
54->32 [style = solid, label="rangeQuery"];
}
