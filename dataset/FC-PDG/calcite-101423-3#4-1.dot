digraph {
7 [style = filled, label = "t.addQuery(q0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String q0 = \"select\" + \" \"num_children_at_home\" + 12 as \"n12\",\" + \" sum(\"num_children_at_home\" + 10) as \"n10\",\" + \" sum(\"num_children_at_home\" + 11) as \"n11\",\" + \" count(*) as c\" + \"from \"customer\"\" + \"group by \"num_children_at_home\" + 12\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String q0 = \"select\" + \" \"fname\" || ' ' || \"lname\" as \"full_name\",\" + \" count(*) as c,\" + \" avg(\"total_children\" - \"num_children_at_home\")\" + \"from \"customer\" join \"sales_fact_1997\" using (\"customer_id\")\" + \"group by \"fname\", \"lname\"\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testExpressionEvolution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<String> tables = ImmutableList.of(\"customer\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Lattice lattice = Iterables.getOnlyElement(t.s.latticeMap.values())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(derivedColumns.get(1).tables,is(tables))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final String l0 = \"sales_fact_1997 (customer:customer_id)\" + \":(COUNT(), AVG($f2)(\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final List<Lattice.DerivedColumn> derivedColumns = lattice.columns.stream().filter(null).map(null).collect(Collectors.toList())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(derivedColumns.get(0).tables,is(tables))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testExpressionInJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "checkDerivedColumn(lattice,tables,derivedColumns,1,\"n11\",true)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testExpressionEvolution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "t.addQuery(q1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(derivedColumns.size(),is(5))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(Iterables.getOnlyElement(t.s.latticeMap.keySet()),is(l0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(derivedColumns.size(),is(2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "checkDerivedColumn(lattice,tables,derivedColumns,4,\"n14\",false)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(t.s.latticeMap.size(),is(1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkDerivedColumn(lattice,tables,derivedColumns,2,\"n12\",false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String l0 = \"customer:(COUNT(), SUM(n10), SUM(n11), SUM(n12), SUM(n13)(\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "checkDerivedColumn(lattice,tables,derivedColumns,0,\"n10\",false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Tester t = new Tester().foodmart().withEvolve(true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String q1 = \"select\" + \" \"num_children_at_home\" + 10 as \"n10\",\" + \" \"num_children_at_home\" + 14 as \"n14\",\" + \" sum(\"num_children_at_home\" + 12) as \"n12\",\" + \" sum(\"num_children_at_home\" + 13) as \"n13\"\" + \"from \"customer\"\" + \"group by \"num_children_at_home\" + 10,\" + \" \"num_children_at_home\" + 14\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkDerivedColumn(lattice,tables,derivedColumns,3,\"n13\",true)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->10 [style = solid, label="derivedColumns"];
5->10 [style = bold, label=""];
16->0 [style = bold, label=""];
15->4 [style = solid, label="l0"];
12->5 [style = bold, label=""];
11->14 [style = bold, label=""];
0->12 [style = bold, label=""];
0->12 [style = solid, label="tables"];
2->12 [style = solid, label="lattice"];
8->3 [style = bold, label=""];
0->22 [style = solid, label="tables"];
2->5 [style = solid, label="lattice"];
9->12 [style = solid, label="derivedColumns"];
5->24 [style = dashed, label="0"];
0->5 [style = solid, label="tables"];
16->23 [style = dashed, label="0"];
3->15 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
9->13 [style = solid, label="derivedColumns"];
2->6 [style = solid, label="lattice"];
7->8 [style = bold, label=""];
23->0 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
2->13 [style = solid, label="lattice"];
9->16 [style = bold, label=""];
7->3 [style = bold, label=""];
14->1 [style = bold, label=""];
1->7 [style = solid, label="q0"];
1->17 [style = bold, label=""];
17->8 [style = solid, label="q1"];
9->6 [style = solid, label="derivedColumns"];
0->24 [style = solid, label="tables"];
20->21 [style = bold, label=""];
17->7 [style = bold, label=""];
9->23 [style = bold, label=""];
2->10 [style = solid, label="lattice"];
0->13 [style = solid, label="tables"];
20->7 [style = solid, label="q0"];
19->14 [style = bold, label=""];
0->10 [style = solid, label="tables"];
6->13 [style = bold, label=""];
0->22 [style = bold, label=""];
12->22 [style = dashed, label="0"];
15->4 [style = bold, label=""];
21->7 [style = bold, label=""];
0->6 [style = solid, label="tables"];
22->24 [style = bold, label=""];
9->5 [style = solid, label="derivedColumns"];
18->14 [style = bold, label=""];
14->20 [style = bold, label=""];
21->4 [style = solid, label="l0"];
}
