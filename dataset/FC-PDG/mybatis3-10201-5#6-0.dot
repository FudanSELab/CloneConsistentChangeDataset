digraph {
9 [style = filled, label = "testOgnlStaticMethodCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Integer.valueOf(4),answer.get(0).get(\"ID\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(new Integer(6),answer.get(1).get(\"ID\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testSelectLike['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(Integer.valueOf(6),answer.get(1).get(\"ID\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(new Integer(7),answer.get(0).get(\"ID\"))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<Map<String,Object>> answer = sqlSession.selectList(\"org.apache.ibatis.submitted.dynsql.selectLike\",\"Ba\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(answer.size() == 1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<Map<String,Object>> answer = sqlSession.selectList(\"org.apache.ibatis.submitted.dynsql.ognlStaticMethodCall\",\"Rock 'n Roll\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(answer.size() == 2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new Integer(4),answer.get(0).get(\"ID\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testSelectLike['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
5->2 [style = bold, label=""];
1->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
7->6 [style = bold, label=""];
0->11 [style = dashed, label="0"];
3->7 [style = bold, label=""];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
0->7 [style = dashed, label="0"];
4->6 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
10->11 [style = bold, label=""];
}
