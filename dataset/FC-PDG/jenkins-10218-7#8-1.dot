digraph {
16 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(PROJECT_NAME,\"1,-2,3\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertThat(result,failedWith(3))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(result,failedWith(2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(PROJECT_NAME,\"1,2,-3\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-1,2,3\" is not a valid option\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(PROJECT_NAME,\"-1,2,3\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"---\" is not a valid option\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "dummyRangeRangeSingleShouldFailIfBuildRangeContainsHyphen['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(result,failedWith(3))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsNegative['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"--1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,-2,3', expected string with a range M-N\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2,-3\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,-2,3\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1--\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-1,2,3\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"--1\" is not a valid option\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(result,failedWith(2))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsNegative['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,2,-3', expected string with a range M-N\"))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"---\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1--', expected correct notation M,N or M-N\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
10->22 [style = bold, label=""];
9->20 [style = dashed, label="0"];
8->16 [style = dashed, label="0"];
24->19 [style = bold, label=""];
3->11 [style = solid, label="result"];
7->18 [style = dashed, label="0"];
20->10 [style = solid, label="result"];
5->9 [style = bold, label=""];
7->10 [style = bold, label=""];
6->23 [style = bold, label=""];
20->18 [style = solid, label="result"];
11->6 [style = bold, label=""];
19->6 [style = solid, label="result"];
3->11 [style = bold, label=""];
19->11 [style = bold, label=""];
15->11 [style = solid, label="result"];
9->7 [style = bold, label=""];
12->1 [style = bold, label=""];
19->11 [style = solid, label="result"];
17->12 [style = solid, label="result"];
13->10 [style = solid, label="result"];
3->19 [style = dashed, label="0"];
20->18 [style = bold, label=""];
6->4 [style = bold, label=""];
17->12 [style = bold, label=""];
21->20 [style = bold, label=""];
16->12 [style = solid, label="result"];
15->6 [style = solid, label="result"];
8->1 [style = solid, label="result"];
15->11 [style = bold, label=""];
3->6 [style = solid, label="result"];
18->10 [style = bold, label=""];
13->7 [style = bold, label=""];
8->12 [style = solid, label="result"];
1->21 [style = bold, label=""];
5->13 [style = bold, label=""];
9->13 [style = dashed, label="0"];
16->1 [style = solid, label="result"];
5->21 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
9->10 [style = solid, label="result"];
4->23 [style = dashed, label="0"];
2->22 [style = dashed, label="0"];
16->12 [style = bold, label=""];
9->7 [style = solid, label="result"];
8->12 [style = bold, label=""];
4->16 [style = bold, label=""];
13->7 [style = solid, label="result"];
17->1 [style = solid, label="result"];
}
