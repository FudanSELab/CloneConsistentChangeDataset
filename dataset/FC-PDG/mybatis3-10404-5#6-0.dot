digraph {
2 [style = filled, label = "Assert.assertEquals(2,pm.findAll().size())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "PersonMapper pm = sqlSession1.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PersonMapper pm = sqlSession2.getMapper()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "pm.createWithOptions(p)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(3,pm.findAll().size())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "PersonMapper pm = sqlSession3.getMapper()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "pm.createWithoutFlushCache(p)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "PersonMapper pm = sqlSession4.getMapper()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(2,pm.findAll().size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(3,pm.findWithFlushCache().size())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "shouldInsertWithOptionsFlushesCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldInsertWithOptionsFlushesCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "shouldApplyFlushCacheOptions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Person p = new Person(3,\"hello\",\"world\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertEquals(2,pm.findAll().size())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assertions.assertEquals(3,pm.findAll().size())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
7->1 [style = bold, label=""];
15->7 [style = bold, label=""];
7->12 [style = bold, label=""];
3->6 [style = bold, label=""];
1->9 [style = dashed, label="0"];
3->15 [style = bold, label=""];
3->15 [style = solid, label="p"];
13->11 [style = bold, label=""];
2->10 [style = dashed, label="0"];
7->9 [style = bold, label=""];
12->13 [style = bold, label=""];
1->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
8->5 [style = bold, label=""];
6->15 [style = dashed, label="0"];
3->6 [style = solid, label="p"];
10->0 [style = bold, label=""];
6->7 [style = bold, label=""];
4->5 [style = bold, label=""];
14->5 [style = bold, label=""];
}
