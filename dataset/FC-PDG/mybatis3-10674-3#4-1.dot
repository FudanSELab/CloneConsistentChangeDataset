digraph {
1 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(i,cache.getObject(i))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldDemonstrateCopiesAreEqual['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "cache = new SerializedCache(cache)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldFlushAllItemsOnDemand['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < 1000@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Cache cache = new PerpetualCache(\"default\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(cache.getObject(0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNull(cache.getObject(0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNotNull(cache.getObject(4))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "cache.clear()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i++@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i < 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cache.putObject(i,i)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNull(cache.getObject(4))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "shouldDemonstrateCopiesAreEqual['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Cache cache = new SoftCache(new PerpetualCache(\"default\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->5 [style = dotted, label="true"];
4->3 [style = bold, label=""];
10->12 [style = solid, label="i"];
15->10 [style = bold, label=""];
10->5 [style = solid, label="i"];
3->1 [style = bold, label=""];
5->3 [style = solid, label="i"];
11->14 [style = bold, label=""];
4->1 [style = solid, label="i"];
4->3 [style = solid, label="i"];
10->4 [style = solid, label="i"];
7->4 [style = bold, label=""];
1->0 [style = bold, label=""];
4->5 [style = solid, label="i"];
5->1 [style = solid, label="i"];
16->17 [style = bold, label=""];
3->4 [style = dashed, label="0"];
13->11 [style = bold, label=""];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->5 [style = dotted, label="true"];
12->5 [style = solid, label="i"];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
5->12 [style = bold, label=""];
9->15 [style = bold, label=""];
12->4 [style = solid, label="i"];
3->0 [style = dotted, label="true"];
5->0 [style = solid, label="i"];
10->4 [style = bold, label=""];
4->0 [style = solid, label="i"];
17->13 [style = bold, label=""];
2->7 [style = bold, label=""];
4->12 [style = dotted, label="true"];
4->5 [style = bold, label=""];
3->1 [style = dotted, label="true"];
2->7 [style = solid, label="cache"];
4->16 [style = bold, label=""];
0->5 [style = bold, label=""];
}
