digraph {
21 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof TumblingEventTimeWindows)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DataStream<String> window = source.keyBy(new Tuple3KeySelector()).window(TumblingProcessingTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).aggregate(new DummyAggregationFunction(),new TestWindowFunction())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(operator instanceof WindowOperator)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DataStream<Tuple3<String,String,Integer>> source = env.fromElements(Tuple3.of(\"hello\",\"hallo\",1),Tuple3.of(\"hello\",\"hallo\",2))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "processElementAndEnsureOutput(operator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple3<>(\"hello\",\"hallo\",1))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testAggregateWithWindowFunctionProcessingTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DataStream<Tuple3<String,String,Integer>> window = source.keyBy(new TupleKeySelector()).window(TumblingProcessingTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).aggregate(new DummyAggregationFunction(),new TestWindowFunction())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof TumblingProcessingTimeWindows)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(winOperator.getStateDescriptor() instanceof AggregatingStateDescriptor)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DummyReducer reducer = new DummyReducer()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "WindowOperator<String,Tuple3<String,String,Integer>,?,?,?> winOperator = (WindowOperator<String,Tuple3<String,String,Integer>,?,?,?>)operator@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testAggregateWithWindowFunctionProcessingTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "OneInputTransformation<Tuple2<String,Integer>,Tuple3<String,String,Integer>> transform = (OneInputTransformation<Tuple2<String,Integer>,Tuple3<String,String,Integer>>)window.getTransformation()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(winOperator.getStateDescriptor() instanceof AggregatingStateDescriptor)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DataStream<Tuple3<String,String,Integer>> window = source.keyBy(new TupleKeySelector()).window(TumblingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).aggregate(new DummyAggregationFunction(),new TestProcessWindowFunction())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final OneInputStreamOperator<Tuple3<String,String,Integer>,String> operator = transform.getOperator()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testAggregateWithProcessWindowFunctionEventTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DataStream<Tuple2<String,Integer>> source = env.fromElements(Tuple2.of(\"hello\",1),Tuple2.of(\"hello\",2))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "OneInputStreamOperator<Tuple2<String,Integer>,Tuple3<String,String,Integer>> operator = transform.getOperator()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final OneInputTransformation<Tuple3<String,String,Integer>,String> transform = (OneInputTransformation<Tuple3<String,String,Integer>,String>)window.getTransformation()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "processElementAndEnsureOutput(operator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple2<>(\"hello\",1))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "OneInputTransformation<Tuple2<String,Integer>,Tuple3<String,String,Integer>> transform = (OneInputTransformation<Tuple2<String,Integer>,Tuple3<String,String,Integer>>)window.getTransformation()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof EventTimeTrigger)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,?,?,?> winOperator = (WindowOperator<String,Tuple2<String,Integer>,?,?,?>)operator@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->18 [style = dashed, label="0"];
15->17 [style = solid, label="operator"];
17->5 [style = bold, label=""];
7->11 [style = bold, label=""];
1->8 [style = bold, label=""];
7->17 [style = bold, label=""];
15->7 [style = bold, label=""];
16->8 [style = bold, label=""];
5->20 [style = bold, label=""];
21->6 [style = bold, label=""];
3->21 [style = dashed, label="0"];
10->19 [style = bold, label=""];
9->4 [style = bold, label=""];
18->15 [style = bold, label=""];
0->11 [style = solid, label="operator"];
0->15 [style = dashed, label="0"];
6->24 [style = bold, label=""];
12->26 [style = bold, label=""];
11->17 [style = dashed, label="0"];
23->8 [style = bold, label=""];
7->11 [style = solid, label="operator"];
12->9 [style = bold, label=""];
10->6 [style = bold, label=""];
2->12 [style = bold, label=""];
26->22 [style = bold, label=""];
4->0 [style = bold, label=""];
5->20 [style = dashed, label="0"];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
20->21 [style = bold, label=""];
0->6 [style = solid, label="operator"];
3->10 [style = bold, label=""];
11->5 [style = bold, label=""];
9->14 [style = dashed, label="0"];
22->0 [style = bold, label=""];
8->2 [style = bold, label=""];
25->12 [style = bold, label=""];
7->24 [style = solid, label="operator"];
15->19 [style = solid, label="operator"];
6->19 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
0->7 [style = solid, label="operator"];
14->18 [style = bold, label=""];
12->13 [style = dashed, label="0"];
13->14 [style = bold, label=""];
8->25 [style = bold, label=""];
15->7 [style = solid, label="operator"];
7->5 [style = solid, label="operator"];
}
