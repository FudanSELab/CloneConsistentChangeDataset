digraph {
8 [style = filled, label = "final String totalDescription = \"The total number of skipped records\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(sensor.orElse(null),is(expectedSensor))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "verify()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final String operation = \"task-closed\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "builtInMetricsVersion == Version.FROM_100_TO_24@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "final Sensor sensor = ThreadMetrics.closeTaskSensor(THREAD_ID,streamsMetrics)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertFalse(sensor.isPresent())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final Sensor sensor = ThreadMetrics.skipRecordSensor(THREAD_ID,streamsMetrics)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(dummySensor)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "replay(,streamsMetrics)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "verify(,streamsMetrics)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final String rateDescription = \"The average per-second number of closed tasks\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operation,totalDescription,rateDescription)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldGetSkipRecordSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "replayAll()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final String totalDescription = \"The total number of closed tasks\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String operation = \"skipped-records\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "builtInMetricsVersion == Version.FROM_100_TO_24@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "shouldGetCloseTaskSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "mockStatic()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(sensor,is(dummySensor))@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Optional<Sensor> sensor = ThreadMetrics.skipRecordSensor(THREAD_ID,streamsMetrics)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final String rateDescription = \"The average per-second number of skipped records\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(dummyTagMap)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "shouldGetSkipRecordSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "replay()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verifyAll()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19->18 [style = bold, label=""];
3->28 [style = dashed, label="0"];
2->14 [style = solid, label="operation"];
27->0 [style = bold, label=""];
7->12 [style = bold, label=""];
7->17 [style = dashed, label="0"];
20->17 [style = dotted, label="true"];
20->8 [style = dotted, label="true"];
3->14 [style = solid, label="rateDescription"];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
20->14 [style = dotted, label="true"];
0->11 [style = bold, label=""];
29->25 [style = bold, label=""];
14->19 [style = bold, label=""];
28->1 [style = solid, label="rateDescription"];
6->0 [style = bold, label=""];
2->1 [style = solid, label="operation"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
24->16 [style = dotted, label="true"];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
3->1 [style = solid, label="rateDescription"];
20->2 [style = bold, label=""];
24->16 [style = bold, label=""];
3->23 [style = bold, label=""];
28->4 [style = bold, label=""];
5->6 [style = bold, label=""];
22->20 [style = bold, label=""];
24->21 [style = bold, label=""];
17->14 [style = bold, label=""];
11->10 [style = bold, label=""];
25->1 [style = solid, label="operation"];
6->27 [style = dashed, label="0"];
15->24 [style = bold, label=""];
25->26 [style = bold, label=""];
20->23 [style = dotted, label="true"];
27->10 [style = solid, label="sensor"];
2->25 [style = dashed, label="0"];
6->10 [style = solid, label="sensor"];
9->5 [style = bold, label=""];
20->3 [style = dotted, label="true"];
20->2 [style = dotted, label="true"];
23->17 [style = bold, label=""];
26->28 [style = bold, label=""];
5->27 [style = bold, label=""];
26->1 [style = solid, label="totalDescription"];
20->19 [style = bold, label=""];
8->14 [style = solid, label="totalDescription"];
8->1 [style = solid, label="totalDescription"];
4->23 [style = dashed, label="0"];
24->21 [style = dotted, label="false"];
2->8 [style = bold, label=""];
13->2 [style = bold, label=""];
8->26 [style = dashed, label="0"];
}
