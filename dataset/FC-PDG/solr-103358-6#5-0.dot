digraph {
13 [style = filled, label = "assertQ(\"lazy handler includes highlighting\",req(\"q\",\"name:Zapp OR title:General\",\"qt\",\"lazy\"),\"//lst(@name='highlighting'(\")@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertU(adoc(\"id\",\"44\",\"name\",\"The Zapper\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SolrCore core = h.getCore()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertQ(\"lazy handler returns fewer matches\",req(\"q\",\"id:(42 TO 47(\",\"qt\",\"lazy\"),\"*(count(//doc)=4(\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testLazyLoading['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertU(adoc(\"id\",\"46\",\"subject\",\"Defeated the pacifists of the Gandhi nebula\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertU(adoc(\"id\",\"42\",\"name\",\"Zapp Brannigan\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertU(adoc(\"id\",\"47\",\"text\",\"line up and fly directly at the enemy death cannons, clogging them with wreckage!\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(handler.isLoaded())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PluginRegistry.PluginHolder<SolrRequestHandler> handler = core.getRequestHandlers().getRegistry().get(\"lazy\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertU(commit())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertQ(\"lazy request handler returns all matches\",req(\"q\",\"id:(42 TO 47(\"),\"*(count(//doc)=6(\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertQ(\"standard request handler returns all matches\",req(\"id:(42 TO 47(\"),\"*(count(//doc)=6(\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testLazyLoading['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "PluginBag.PluginHolder<SolrRequestHandler> handler = core.getRequestHandlers().getRegistry().get(\"lazy\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testConfigDefaults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertQ(\"defaults handler returns fewer matches\",req(\"q\",\"id:(42 TO 47(\",\"qt\",\"defaults\"),\"*(count(//doc)=4(\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertU(adoc(\"id\",\"43\",\"title\",\"Democratic Order of Planets\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertQ(\"defaults handler includes highlighting\",req(\"q\",\"name:Zapp OR title:General\",\"qt\",\"defaults\"),\"//lst(@name='highlighting'(\")@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertU(adoc(\"id\",\"45\",\"title\",\"25 star General\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
15->2 [style = bold, label=""];
16->18 [style = bold, label=""];
10->8 [style = dashed, label="0"];
18->19 [style = bold, label=""];
19->17 [style = bold, label=""];
3->12 [style = bold, label=""];
9->7 [style = bold, label=""];
2->4 [style = bold, label=""];
13->0 [style = dashed, label="0"];
8->0 [style = bold, label=""];
1->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
10->13 [style = bold, label=""];
7->2 [style = bold, label=""];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
9->15 [style = bold, label=""];
7->15 [style = dashed, label="0"];
14->9 [style = bold, label=""];
6->9 [style = bold, label=""];
4->11 [style = bold, label=""];
1->10 [style = bold, label=""];
17->4 [style = bold, label=""];
}
