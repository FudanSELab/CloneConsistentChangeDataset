digraph {
12 [style = filled, label = "metrics = CacheService.instance.keyCache.getMetrics()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Schema.instance.updateVersion()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0,CacheService.instance.keyCache.size())@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(200,hits)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CacheMetrics metrics = CacheService.instance.keyCache.getMetrics()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i < 10@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertFalse(key.ksAndCFName.right.startsWith(table))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(210,requests)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(beforeSize,CacheService.instance.keyCache.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(500,result.size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "insertData(table,\"some_index\",true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "test2iKeyCachePathsSaveKeysForDroppedTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "long requests = metrics.requests.getCount()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(420,requests)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNull(Schema.instance.getColumnFamilyStoreIncludingIndexes(Pair.create(KEYSPACE_PER_TEST,\"bar\")))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,hits)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CacheService.instance.keyCache.clear()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "CacheService.instance.keyCache.clear()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "requests = metrics.requests.getCount()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "CacheService.instance.keyCache.submitWrite(Integer.MAX_VALUE).get()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "iter.hasNext()@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < 10@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "long hits = metrics.hits.getCount()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < 10@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertFalse(key.ksAndCFName.left.equals(\"KEYSPACE_PER_TEST\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "hits = metrics.hits.getCount()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String table = createTable(\"CREATE TABLE %s (\" + commonColumnsDef + \"PRIMARY KEY ((part_key_a, part_key_b),clust_key_a,clust_key_b,clust_key_c))\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(500,result.size())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(0,CacheService.instance.keyCache.size())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "createIndex(\"CREATE INDEX some_index ON %s (col_int)\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNull(Schema.instance.getColumnFamilyStoreIncludingIndexes(Pair.create(\"foo\",\"bar\")))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "clearCache()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(500,result.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int beforeSize = CacheService.instance.keyCache.size()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "test2iKeyCachePaths['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int i = 0@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "test2iKeyCachePaths['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "KeyCacheKey key = iter.next()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->30 [style = bold, label=""];
31->37 [style = bold, label=""];
37->46 [style = dashed, label="0"];
43->26 [style = bold, label=""];
36->12 [style = bold, label=""];
11->36 [style = bold, label=""];
30->29 [style = bold, label=""];
19->24 [style = solid, label="requests"];
9->26 [style = bold, label=""];
36->39 [style = dotted, label="true"];
24->11 [style = bold, label=""];
2->14 [style = bold, label=""];
1->6 [style = solid, label="hits"];
21->16 [style = bold, label=""];
31->46 [style = bold, label=""];
34->17 [style = solid, label="i"];
7->37 [style = solid, label="beforeSize"];
33->7 [style = bold, label=""];
27->36 [style = solid, label="i"];
11->32 [style = solid, label="i"];
23->25 [style = bold, label=""];
17->5 [style = bold, label=""];
47->48 [style = bold, label=""];
15->10 [style = dotted, label="true"];
30->13 [style = solid, label="requests"];
19->6 [style = bold, label=""];
4->0 [style = bold, label=""];
17->5 [style = solid, label="i"];
15->3 [style = dotted, label="true"];
45->49 [style = dotted, label="true"];
45->48 [style = dotted, label="true"];
22->20 [style = bold, label=""];
35->17 [style = bold, label=""];
34->40 [style = solid, label="i"];
26->16 [style = solid, label="table"];
14->15 [style = bold, label=""];
1->19 [style = bold, label=""];
5->22 [style = bold, label=""];
42->38 [style = bold, label=""];
0->31 [style = bold, label=""];
17->40 [style = solid, label="i"];
16->18 [style = bold, label=""];
40->35 [style = bold, label=""];
25->41 [style = bold, label=""];
33->4 [style = bold, label=""];
44->33 [style = bold, label=""];
14->10 [style = solid, label="i"];
6->24 [style = bold, label=""];
36->32 [style = dotted, label="true"];
7->4 [style = bold, label=""];
15->3 [style = bold, label=""];
14->3 [style = solid, label="i"];
26->21 [style = bold, label=""];
15->28 [style = dotted, label="true"];
3->28 [style = bold, label=""];
5->35 [style = dotted, label="true"];
10->15 [style = solid, label="i"];
12->8 [style = bold, label=""];
20->42 [style = bold, label=""];
32->39 [style = bold, label=""];
11->27 [style = solid, label="i"];
5->40 [style = bold, label=""];
8->29 [style = solid, label="hits"];
26->48 [style = solid, label="table"];
45->47 [style = dotted, label="true"];
15->1 [style = bold, label=""];
50->26 [style = bold, label=""];
5->17 [style = dotted, label="true"];
27->36 [style = bold, label=""];
36->27 [style = dotted, label="true"];
10->15 [style = bold, label=""];
28->10 [style = bold, label=""];
5->40 [style = dotted, label="true"];
34->5 [style = bold, label=""];
45->49 [style = bold, label=""];
13->44 [style = bold, label=""];
36->32 [style = bold, label=""];
38->23 [style = bold, label=""];
18->2 [style = bold, label=""];
39->27 [style = bold, label=""];
49->47 [style = bold, label=""];
11->36 [style = solid, label="i"];
48->45 [style = bold, label=""];
27->32 [style = solid, label="i"];
37->34 [style = bold, label=""];
46->45 [style = bold, label=""];
14->15 [style = solid, label="i"];
5->42 [style = bold, label=""];
34->5 [style = solid, label="i"];
13->33 [style = bold, label=""];
10->3 [style = solid, label="i"];
29->13 [style = bold, label=""];
}
