digraph {
3 [style = filled, label = "String property = context.getEnvironment().getProperty(\"the.property\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(context.getEnvironment()).has(matchingPropertySource(\"class path resource \" + \"(specificlocation.properties(\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "context.close()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(context.getEnvironment()).has(matchingPropertySource(\"class path resource \" + \"(specificlocation.properties(\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "SpringApplication application = new SpringApplication()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "propertySourceAnnotationMultipleLocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(property).isEqualTo(\"frommorepropertiesfile\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(property).isEqualTo(\"fromapplicationproperties\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.close()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(context.getEnvironment()).has(matchingPropertySource(\"class path resource (specificlocation.properties(\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "SpringApplication application = new SpringApplication()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "propertySourceAnnotation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "application.setWebApplicationType(WebApplicationType.NONE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(property).isEqualTo(\"fromspecificlocation\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "propertySourceAnnotation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "property = context.getEnvironment().getProperty(\"my.property\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ConfigurableApplicationContext context = application.run()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
8->1 [style = bold, label=""];
4->8 [style = bold, label=""];
6->5 [style = bold, label=""];
11->5 [style = bold, label=""];
15->2 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
12->16 [style = bold, label=""];
13->15 [style = bold, label=""];
4->14 [style = dashed, label="0"];
9->7 [style = bold, label=""];
7->2 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
14->12 [style = bold, label=""];
1->11 [style = bold, label=""];
3->14 [style = bold, label=""];
6->11 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
}
