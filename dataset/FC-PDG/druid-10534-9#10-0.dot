digraph {
9 [style = filled, label = "compactSegments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String version = \"newVersion_\" + compactVersionSuffix++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "compactionPartitionsSpec = new DynamicPartitionsSpec(tuningConfig.getPartitionsSpec().getMaxRowsPerSegment(),((DynamicPartitionsSpec)tuningConfig.getPartitionsSpec()).getMaxTotalRowsOr(Long.MAX_VALUE))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Interval compactInterval = new Interval(minStart,maxEnd)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tuningConfig.getPartitionsSpec() instanceof DynamicPartitionsSpec@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DataSegment compactSegment = new DataSegment(segments.get(0).getDataSource(),compactInterval,version,null,segments.get(0).getDimensions(),segments.get(0).getMetrics(),shardSpecFactory.apply(i,2),new CompactionState(compactionPartitionsSpec,ImmutableMap.of(\"bitmap\",ImmutableMap.of(\"type\",\"roaring\",\"compressRunOnSerialization\",true),\"dimensionCompression\",\"lz4\",\"metricCompression\",\"lz4\",\"longEncoding\",\"longs\")),1,segmentSize)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "i < 2@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "compactSegments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Preconditions.checkArgument(segments != null && !segments.isEmpty())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "timeline.add(compactInterval,compactSegment.getVersion(),compactSegment.getShardSpec().createChunk(compactSegment))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<DataSegment> segments@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Preconditions.checkArgument(segments.size() > 1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "this.segments = segments@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<DataSegment> segments@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<DataSegment> segments@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "DateTime minStart = DateTimes.MAX,maxEnd = DateTimes.MIN@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "maxEnd = segment.getInterval().getEnd()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "compactionPartitionsSpec = tuningConfig.getPartitionsSpec()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DataSegment compactSegment = new DataSegment(segments.get(0).getDataSource(),compactInterval,version,null,segments.get(0).getDimensions(),segments.get(0).getMetrics(),shardSpecFactory.apply(i,2),new CompactionState(compactionPartitionsSpec,ImmutableMap.of(\"bitmap\",ImmutableMap.of(\"type\",\"roaring\",\"compressRunOnSerialization\",true),\"dimensionCompression\",\"lz4\",\"metricCompression\",\"lz4\",\"longEncoding\",\"longs\"),ImmutableMap.of()),1,segmentSize)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "ClientCompactionTaskQueryTuningConfig tuningConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ClientCompactionTaskQueryTuningConfig tuningConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "segment.getInterval().getStart().compareTo(minStart) < 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final long segmentSize = segments.stream().mapToLong(null).sum() / 2@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "this.interval = new Interval(minStart,maxEnd)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final PartitionsSpec compactionPartitionsSpec@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "segments.forEach(null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "segment.getInterval().getEnd().compareTo(maxEnd) > 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "VersionedIntervalTimeline<String,DataSegment> timeline@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "QueueEntry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "minStart = segment.getInterval().getStart()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->29 [style = dashed, label="0"];
10->8 [style = dotted, label="true"];
31->27 [style = solid, label="segments"];
28->31 [style = dotted, label="true"];
9->0 [style = dotted, label="true"];
20->13 [style = bold, label=""];
22->25 [style = dashed, label="0"];
9->7 [style = dotted, label="true"];
28->30 [style = bold, label=""];
21->6 [style = bold, label=""];
16->10 [style = bold, label=""];
11->1 [style = bold, label=""];
15->25 [style = bold, label=""];
1->22 [style = solid, label="i"];
3->25 [style = solid, label="compactInterval"];
18->30 [style = dashed, label="0"];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
11->22 [style = solid, label="compactionPartitionsSpec"];
8->10 [style = solid, label="minStart"];
25->17 [style = solid, label="compactSegment"];
12->3 [style = solid, label="maxEnd"];
15->22 [style = dotted, label="true"];
1->19 [style = solid, label="i"];
5->14 [style = bold, label=""];
2->10 [style = bold, label=""];
31->30 [style = solid, label="segments"];
24->18 [style = bold, label=""];
25->17 [style = bold, label=""];
20->22 [style = solid, label="segmentSize"];
17->19 [style = bold, label=""];
6->22 [style = solid, label="version"];
1->15 [style = solid, label="i"];
2->12 [style = bold, label=""];
14->1 [style = bold, label=""];
15->22 [style = bold, label=""];
5->14 [style = dotted, label="false"];
3->22 [style = solid, label="compactInterval"];
15->17 [style = dotted, label="true"];
6->20 [style = bold, label=""];
29->27 [style = bold, label=""];
19->25 [style = solid, label="i"];
6->25 [style = solid, label="version"];
12->10 [style = bold, label=""];
5->11 [style = dotted, label="true"];
12->29 [style = bold, label=""];
9->18 [style = bold, label=""];
24->23 [style = dotted, label="true"];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
14->22 [style = solid, label="compactionPartitionsSpec"];
24->26 [style = dotted, label="true"];
15->19 [style = dotted, label="true"];
22->17 [style = solid, label="compactSegment"];
20->25 [style = solid, label="segmentSize"];
13->5 [style = bold, label=""];
2->12 [style = dotted, label="true"];
22->17 [style = bold, label=""];
9->4 [style = dotted, label="true"];
3->21 [style = bold, label=""];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
16->10 [style = solid, label="minStart"];
12->2 [style = solid, label="maxEnd"];
3->17 [style = solid, label="compactInterval"];
1->25 [style = solid, label="i"];
19->15 [style = bold, label=""];
8->3 [style = solid, label="minStart"];
19->15 [style = solid, label="i"];
30->16 [style = bold, label=""];
2->29 [style = bold, label=""];
16->3 [style = solid, label="maxEnd"];
11->25 [style = solid, label="compactionPartitionsSpec"];
16->29 [style = solid, label="maxEnd"];
12->29 [style = solid, label="maxEnd"];
19->22 [style = solid, label="i"];
8->29 [style = solid, label="minStart"];
15->25 [style = dotted, label="true"];
24->7 [style = dotted, label="true"];
14->25 [style = solid, label="compactionPartitionsSpec"];
16->2 [style = solid, label="maxEnd"];
18->16 [style = bold, label=""];
}
