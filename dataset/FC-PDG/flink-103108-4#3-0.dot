digraph {
13 [style = filled, label = "BoundedOutOfOrdernessTimestampExtractor<Long> extractor@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Long.MAX_VALUE - 1,extractor.extractTimestamp(Long.MAX_VALUE - 1,0L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "runValidTests['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new Watermark(Long.MIN_VALUE),extractor.getCurrentWatermark())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(500L,extractor.extractTimestamp(500L,0L))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(13L,extractor.extractTimestamp(13L,0L))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(14L,extractor.extractTimestamp(14L,0L))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(13L,extractor.extractTimestamp(13L,-1L))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(20L,extractor.extractTimestamp(20L,0L))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Long.MAX_VALUE - 1,extractor.extractTimestamp(Long.MAX_VALUE - 1,99999L))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(new Watermark(Long.MAX_VALUE - 11),extractor.getCurrentWatermark())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "runValidTests['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(13L,extractor.extractTimestamp(13L,0L))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(20L,extractor.extractTimestamp(20L,0L))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(20L,extractor.extractTimestamp(20L,0L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(new Watermark(490L),extractor.getCurrentWatermark())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "runValidTests['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Watermark.UNINITIALIZED,extractor.getCurrentWatermark())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "AscendingTimestampExtractor<Long> extractor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(new Watermark(10L),extractor.getCurrentWatermark())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
2->6 [style = bold, label=""];
18->19 [style = dotted, label="true"];
0->15 [style = dashed, label="0"];
10->3 [style = bold, label=""];
11->17 [style = dashed, label="0"];
13->19 [style = dashed, label="0"];
14->13 [style = dotted, label="true"];
4->0 [style = bold, label=""];
4->13 [style = dotted, label="true"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
12->10 [style = bold, label=""];
3->5 [style = bold, label=""];
3->7 [style = bold, label=""];
16->1 [style = bold, label=""];
0->1 [style = bold, label=""];
6->11 [style = bold, label=""];
8->9 [style = bold, label=""];
1->12 [style = bold, label=""];
11->8 [style = bold, label=""];
14->15 [style = bold, label=""];
1->10 [style = bold, label=""];
15->1 [style = bold, label=""];
18->16 [style = bold, label=""];
}
