digraph {
11 [style = filled, label = "final Set<MySQLTableBase> checkedObjects = this.checkedObjects.get(curCatalog)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "loadTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "loadTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "new AbstractJob(\"Load '\" + curSchema.getName() + \"' tables\"){@Override protected IStatus run(DBRProgressMonitor monitor){monitor.beginTask(\"Collect tables\",1)try {monitor.subTask(\"Collect tables to dump\")final List<PostgreTableBase> objects = new ArrayList<>()for (JDBCTable table : curSchema.getTables(monitor)){if (table instanceof PostgreTableBase) {objects.add((PostgreTableBase)table)}}if (wizard.getSettings().isShowViews()) {objects.addAll(curSchema.getViews(monitor))}objects.sort(DBUtils.nameComparator())UIUtils.syncExec(null)}catch (DBException e) {monitor.done()}return Status.OK_STATUS}}.schedule()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final PostgreSchema catalog@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "catalog != null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final boolean isCatalogChecked = isChecked(curCatalog)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "loadTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "curSchema == null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "curCatalog = catalog@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final MySQLCatalog catalog@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Set<PostgreTableBase> checkedObjects = this.checkedObjects.get(curSchema)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final boolean isCatalogChecked = isChecked(curSchema)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "curSchema = catalog@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "curCatalog == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "new AbstractJob(\"Load '\" + curCatalog.getName() + \"' tables\"){@Override protected IStatus run(DBRProgressMonitor monitor){try {final List<MySQLTableBase> objects = new ArrayList<>()objects.addAll(curCatalog.getTables(monitor))if (wizard.getSettings().isShowViews()) {objects.addAll(curCatalog.getViews(monitor))}objects.sort(DBUtils.nameComparator())UIUtils.syncExec(null)}catch (DBException e) return Status.OK_STATUS}}.schedule()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = bold, label=""];
0->6 [style = dotted, label="true"];
4->7 [style = bold, label=""];
5->14 [style = dashed, label="0"];
16->4 [style = bold, label=""];
9->4 [style = bold, label=""];
10->12 [style = solid, label="curCatalog"];
7->1 [style = solid, label="curSchema"];
9->5 [style = dotted, label="true"];
6->15 [style = bold, label=""];
4->7 [style = dotted, label="true"];
12->15 [style = bold, label=""];
4->10 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
5->7 [style = solid, label="catalog"];
8->13 [style = dashed, label="0"];
7->0 [style = solid, label="curSchema"];
0->1 [style = bold, label=""];
2->8 [style = bold, label=""];
14->4 [style = solid, label="catalog"];
10->12 [style = bold, label=""];
5->4 [style = solid, label="catalog"];
15->11 [style = bold, label=""];
14->10 [style = solid, label="catalog"];
10->15 [style = solid, label="curCatalog"];
7->0 [style = bold, label=""];
11->13 [style = bold, label=""];
4->12 [style = bold, label=""];
1->15 [style = dashed, label="0"];
4->10 [style = bold, label=""];
7->2 [style = solid, label="curSchema"];
2->11 [style = dashed, label="0"];
12->6 [style = dotted, label="true"];
10->11 [style = solid, label="curCatalog"];
3->5 [style = dotted, label="true"];
6->1 [style = bold, label=""];
1->2 [style = bold, label=""];
3->4 [style = bold, label=""];
7->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
12->6 [style = bold, label=""];
0->12 [style = dashed, label="0"];
}
