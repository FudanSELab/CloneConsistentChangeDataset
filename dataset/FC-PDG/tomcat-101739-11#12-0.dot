digraph {
17 [style = filled, label = "testBug55438NonBlockingReadWriteEmptyRead['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int rc = postUrl(false,new BytesStreamer(){@Override public byte(( next(){return new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@5221fc}@Override public int getLength(){return 0}@Override public int available(){return 0}},\"http://localhost:\" + getPort() + \"/\",new ByteChunk(),resHeaders,null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tomcat.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean async@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "boolean ignoreIsReady@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(HttpServletResponse.SC_OK,rc)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Context ctx = tomcat.addContext(\"\",null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "NBReadServlet servlet = new NBReadServlet(ignoreIsReady,async)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int rc = postUrl(true,new DataWriter(async? 0: 500,async? 2000000: 5),\"http://localhost:\" + getPort() + \"/\",new ByteChunk(),resHeaders,null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "doTestNonBlockingRead['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Tomcat.addServlet(ctx,servletName,servlet)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Map<String,List<String>> resHeaders = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "NBReadWriteServlet servlet = new NBReadWriteServlet()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int rc = postUrl(true,new DataWriter(async? 0: 500,async? 1000000: 5),\"http://localhost:\" + getPort() + \"/\",new ByteChunk(),resHeaders,null)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "boolean async@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "doTestNonBlockingRead['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "String servletName = .getName()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Tomcat tomcat = getTomcatInstance()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String servletName = .getName()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ctx.addServletMappingDecoded(\"/\",servletName)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(HttpServletResponse.SC_OK,rc)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16->18 [style = bold, label=""];
0->12 [style = solid, label="servletName"];
2->19 [style = bold, label=""];
10->15 [style = solid, label="async"];
5->9 [style = bold, label=""];
11->16 [style = dashed, label="0"];
2->6 [style = bold, label=""];
5->10 [style = dotted, label="true"];
19->20 [style = bold, label=""];
9->4 [style = bold, label=""];
0->12 [style = bold, label=""];
17->9 [style = bold, label=""];
16->12 [style = solid, label="servlet"];
18->12 [style = bold, label=""];
2->19 [style = solid, label="resHeaders"];
4->12 [style = solid, label="ctx"];
6->1 [style = solid, label="rc"];
18->12 [style = solid, label="servletName"];
14->10 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
10->11 [style = solid, label="ignoreIsReady"];
0->3 [style = solid, label="servletName"];
15->1 [style = solid, label="rc"];
6->1 [style = bold, label=""];
7->11 [style = solid, label="async"];
11->0 [style = bold, label=""];
8->2 [style = bold, label=""];
6->15 [style = dashed, label="0"];
5->7 [style = dotted, label="true"];
13->11 [style = solid, label="ignoreIsReady"];
2->15 [style = solid, label="resHeaders"];
3->8 [style = bold, label=""];
2->15 [style = bold, label=""];
0->18 [style = dashed, label="0"];
7->6 [style = solid, label="async"];
19->20 [style = solid, label="rc"];
14->9 [style = bold, label=""];
12->3 [style = bold, label=""];
18->3 [style = solid, label="servletName"];
10->11 [style = solid, label="async"];
4->11 [style = bold, label=""];
2->6 [style = solid, label="resHeaders"];
4->16 [style = bold, label=""];
11->12 [style = solid, label="servlet"];
15->1 [style = bold, label=""];
}
