digraph {
14 [style = filled, label = "this.sources.add(source)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(bean.getIntValue()).isEqualTo(12)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "bindToClassWhenHasNoPrefixShouldCreateBoundBean['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "source.put(\"int-value\",\"12\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.sources.add(source)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(bean.getLongValue()).isEqualTo(34)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ExampleMismatchBean bean = this.binder.bind(\"foo\",Bindable.of()).get()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "source.put(\"string-value\",\"foo\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "source.put(\"long-value\",\"34\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ExampleValueBean bean = this.binder.bind(ConfigurationPropertyName.of(\"\"),Bindable.of()).get()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MockConfigurationPropertySource source = new MockConfigurationPropertySource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(bean.getEnumValue()).isEqualTo(ExampleEnum.FOO_BAR)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "bindToClassWhenMismatchedGetSetShouldBind['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "source.put(\"enum-value\",\"foo-bar\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "source.put(\"foo.value\",\"123\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(bean.getValue()).isEqualTo(\"123\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "bindToClassWhenHasNoPrefixShouldCreateBoundBean['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(bean.getStringValue()).isEqualTo(\"foo\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
8->16 [style = dashed, label="0"];
7->1 [style = bold, label=""];
10->14 [style = solid, label="source"];
1->0 [style = bold, label=""];
9->7 [style = bold, label=""];
2->17 [style = dashed, label="0"];
15->17 [style = bold, label=""];
12->10 [style = bold, label=""];
10->8 [style = bold, label=""];
3->2 [style = bold, label=""];
10->16 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
8->9 [style = bold, label=""];
16->14 [style = bold, label=""];
10->0 [style = solid, label="source"];
14->15 [style = bold, label=""];
4->11 [style = bold, label=""];
2->5 [style = bold, label=""];
}
