digraph {
31 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "int i = 0@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "KTable<Integer,String> table1 = builder.table(intSerde,stringSerde,topic1,storeName1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "i < 2@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "driver.flushState()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "int i = 0@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "i < 2@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "joined.process(processor)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "i < 2@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "driver.flushState()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "i++@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "i++@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "processor.checkAndClearProcessResult()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "driver.setUp(builder,stateDir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "i < 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "KTable<Integer,String> table2 = builder.table(intSerde,stringSerde,topic2,storeName2)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "driver.flushState()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < 2@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bdb436@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->4 [style = bold, label=""];
16->37 [style = bold, label=""];
27->38 [style = bold, label=""];
17->66 [style = solid, label="processor"];
59->76 [style = solid, label="stream2"];
12->44 [style = bold, label=""];
68->31 [style = bold, label=""];
62->7 [style = solid, label="i"];
36->29 [style = bold, label=""];
61->67 [style = solid, label="i"];
67->48 [style = bold, label=""];
21->43 [style = bold, label=""];
18->37 [style = solid, label="i"];
38->11 [style = solid, label="getter"];
16->32 [style = solid, label="i"];
10->35 [style = bold, label=""];
36->12 [style = bold, label=""];
1->7 [style = solid, label="i"];
34->54 [style = dashed, label="0"];
40->13 [style = bold, label=""];
35->31 [style = solid, label="expectedKeys"];
68->31 [style = dotted, label="true"];
46->73 [style = dashed, label="0"];
14->7 [style = bold, label=""];
7->60 [style = bold, label=""];
38->12 [style = solid, label="getter"];
67->72 [style = dotted, label="true"];
3->19 [style = bold, label=""];
39->31 [style = bold, label=""];
0->25 [style = bold, label=""];
62->60 [style = solid, label="i"];
61->72 [style = solid, label="i"];
14->7 [style = dotted, label="true"];
60->63 [style = bold, label=""];
37->32 [style = bold, label=""];
32->39 [style = solid, label="i"];
47->46 [style = solid, label="table2"];
5->30 [style = bold, label=""];
32->18 [style = bold, label=""];
28->42 [style = bold, label=""];
70->74 [style = bold, label=""];
8->27 [style = bold, label=""];
20->15 [style = bold, label=""];
39->31 [style = solid, label="i"];
21->50 [style = bold, label=""];
62->63 [style = solid, label="i"];
26->57 [style = dashed, label="0"];
42->1 [style = solid, label="i"];
34->53 [style = bold, label=""];
24->28 [style = bold, label=""];
47->56 [style = dashed, label="0"];
7->1 [style = bold, label=""];
50->43 [style = bold, label=""];
75->59 [style = bold, label=""];
9->2 [style = bold, label=""];
32->68 [style = bold, label=""];
71->6 [style = solid, label="builder"];
26->47 [style = bold, label=""];
1->14 [style = solid, label="i"];
10->51 [style = solid, label="builder"];
56->46 [style = bold, label=""];
53->30 [style = bold, label=""];
32->68 [style = solid, label="i"];
16->32 [style = bold, label=""];
30->34 [style = bold, label=""];
42->7 [style = solid, label="i"];
71->35 [style = bold, label=""];
37->18 [style = dotted, label="true"];
23->8 [style = bold, label=""];
16->37 [style = solid, label="i"];
72->67 [style = solid, label="i"];
38->6 [style = bold, label=""];
30->53 [style = dotted, label="true"];
43->11 [style = bold, label=""];
35->57 [style = bold, label=""];
42->14 [style = solid, label="i"];
4->45 [style = bold, label=""];
26->70 [style = dashed, label="0"];
63->7 [style = dotted, label="true"];
12->65 [style = bold, label=""];
10->71 [style = dashed, label="0"];
63->7 [style = bold, label=""];
35->34 [style = solid, label="expectedKeys"];
49->17 [style = bold, label=""];
48->5 [style = bold, label=""];
14->1 [style = dotted, label="true"];
38->4 [style = solid, label="getter"];
14->21 [style = bold, label=""];
2->55 [style = bold, label=""];
45->40 [style = dashed, label="0"];
18->37 [style = bold, label=""];
65->40 [style = bold, label=""];
67->54 [style = bold, label=""];
18->32 [style = solid, label="i"];
22->48 [style = bold, label=""];
61->54 [style = solid, label="i"];
73->49 [style = bold, label=""];
72->54 [style = solid, label="i"];
31->24 [style = bold, label=""];
25->9 [style = bold, label=""];
43->36 [style = bold, label=""];
5->30 [style = solid, label="i"];
54->22 [style = bold, label=""];
30->34 [style = dotted, label="true"];
51->20 [style = bold, label=""];
76->66 [style = bold, label=""];
42->14 [style = bold, label=""];
63->60 [style = dotted, label="true"];
11->41 [style = bold, label=""];
71->23 [style = solid, label="builder"];
41->36 [style = bold, label=""];
64->62 [style = bold, label=""];
32->31 [style = solid, label="i"];
37->32 [style = dotted, label="true"];
58->10 [style = bold, label=""];
35->54 [style = solid, label="expectedKeys"];
53->30 [style = solid, label="i"];
38->28 [style = solid, label="getter"];
47->74 [style = dashed, label="0"];
35->7 [style = solid, label="expectedKeys"];
30->0 [style = bold, label=""];
31->39 [style = bold, label=""];
59->76 [style = bold, label=""];
39->68 [style = bold, label=""];
63->21 [style = bold, label=""];
53->34 [style = solid, label="i"];
35->26 [style = bold, label=""];
37->39 [style = bold, label=""];
17->33 [style = solid, label="processor"];
61->67 [style = bold, label=""];
68->64 [style = bold, label=""];
35->70 [style = bold, label=""];
5->53 [style = solid, label="i"];
15->23 [style = bold, label=""];
66->23 [style = bold, label=""];
56->46 [style = solid, label="table2"];
68->39 [style = dotted, label="true"];
60->7 [style = solid, label="i"];
39->68 [style = solid, label="i"];
46->49 [style = bold, label=""];
74->73 [style = bold, label=""];
44->40 [style = bold, label=""];
62->63 [style = bold, label=""];
47->46 [style = bold, label=""];
17->75 [style = bold, label=""];
17->33 [style = bold, label=""];
52->10 [style = bold, label=""];
16->18 [style = solid, label="i"];
55->3 [style = bold, label=""];
35->32 [style = solid, label="expectedKeys"];
5->34 [style = solid, label="i"];
27->6 [style = bold, label=""];
4->61 [style = bold, label=""];
38->9 [style = solid, label="getter"];
45->54 [style = bold, label=""];
57->56 [style = bold, label=""];
10->8 [style = solid, label="builder"];
29->12 [style = bold, label=""];
33->51 [style = bold, label=""];
69->71 [style = bold, label=""];
6->16 [style = bold, label=""];
60->63 [style = solid, label="i"];
72->67 [style = bold, label=""];
54->72 [style = bold, label=""];
38->48 [style = solid, label="getter"];
1->14 [style = bold, label=""];
67->54 [style = dotted, label="true"];
38->19 [style = solid, label="getter"];
13->4 [style = bold, label=""];
}
