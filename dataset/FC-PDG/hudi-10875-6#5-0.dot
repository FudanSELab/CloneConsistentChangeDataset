digraph {
26 [style = filled, label = "@TempDir java.nio.file.Path tempDir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Schema schema = HoodieAvroUtils.getRecordKeySchema()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "writeParquetFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "BloomFilter filter = BloomFilterFactory.createBloomFilter(1000,0.0001,10000,bloomFilterTypeToTest)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "GenericRecord rec = new GenericData.Record(schema)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Schema schema = HoodieAvroUtils.getRecordKeySchema()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<String> rowKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "writeSupport.add(rowKey)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String filePath@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "rec.put(HoodieRecord.RECORD_KEY_METADATA_FIELD,rowKey)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "writeSupport.add(rowKey)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "writer.write(rec)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<String> rowKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ParquetWriter writer = new ParquetWriter(new Path(filePath),writeSupport,CompressionCodecName.GZIP,120 * 1024 * 1024,ParquetWriter.DEFAULT_PAGE_SIZE)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "HoodieAvroWriteSupport writeSupport = new HoodieAvroWriteSupport(new AvroSchemaConverter().convert(schema),schema,filter)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String typeCode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "rec.put(HoodieRecord.RECORD_KEY_METADATA_FIELD,rowKey)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i < 1000@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "BloomFilter filter = BloomFilterFactory.createBloomFilter(1000,0.0001,10000,typeCode)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "List<String> rowKeys = new ArrayList<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String filePath = tempDir.resolve(\"test.parquet\").toAbsolutePath().toString()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "GenericRecord rec = new GenericData.Record(schema)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ParquetWriter writer = new ParquetWriter(new Path(filePath),writeSupport,CompressionCodecName.GZIP,120 * 1024 * 1024,ParquetWriter.DEFAULT_PAGE_SIZE)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testAddKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "rowKeys.add(UUID.randomUUID().toString())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "writer.close()@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "BloomFilter filter = BloomFilterFactory.createBloomFilter(1000,0.0001,10000,BloomFilterTypeCode.SIMPLE.name())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "writeParquetFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String filePath@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HoodieAvroWriteSupport writeSupport = new HoodieAvroWriteSupport(new AvroSchemaConverter().convert(schema),schema,filter)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->16 [style = dotted, label="true"];
6->7 [style = solid, label="writeSupport"];
27->9 [style = solid, label="writeSupport"];
19->18 [style = bold, label=""];
23->25 [style = solid, label="rec"];
28->18 [style = bold, label=""];
23->30 [style = bold, label=""];
21->19 [style = bold, label=""];
2->6 [style = solid, label="filter"];
12->15 [style = solid, label="typeCode"];
13->12 [style = dotted, label="true"];
2->6 [style = bold, label=""];
0->2 [style = bold, label=""];
27->9 [style = bold, label=""];
18->17 [style = bold, label=""];
22->9 [style = solid, label="filePath"];
10->3 [style = bold, label=""];
10->23 [style = solid, label="schema"];
15->6 [style = bold, label=""];
30->25 [style = bold, label=""];
31->21 [style = bold, label=""];
1->0 [style = bold, label=""];
1->4 [style = dotted, label="true"];
15->6 [style = solid, label="filter"];
7->8 [style = bold, label=""];
0->8 [style = solid, label="schema"];
29->27 [style = solid, label="filter"];
10->27 [style = solid, label="schema"];
0->15 [style = bold, label=""];
2->15 [style = dashed, label="0"];
24->20 [style = bold, label=""];
5->16 [style = dashed, label="0"];
28->18 [style = solid, label="i"];
3->9 [style = bold, label=""];
9->23 [style = bold, label=""];
29->27 [style = bold, label=""];
25->24 [style = bold, label=""];
17->28 [style = bold, label=""];
18->22 [style = bold, label=""];
10->29 [style = bold, label=""];
31->26 [style = dotted, label="true"];
19->18 [style = solid, label="i"];
8->10 [style = solid, label="rec"];
11->10 [style = bold, label=""];
18->28 [style = dotted, label="true"];
19->28 [style = solid, label="i"];
16->7 [style = solid, label="filePath"];
3->8 [style = bold, label=""];
2->29 [style = dashed, label="0"];
4->7 [style = solid, label="filePath"];
6->27 [style = dashed, label="0"];
22->10 [style = bold, label=""];
18->17 [style = dotted, label="true"];
6->7 [style = bold, label=""];
13->14 [style = dotted, label="true"];
8->11 [style = bold, label=""];
0->6 [style = solid, label="schema"];
1->5 [style = dotted, label="true"];
13->0 [style = bold, label=""];
24->23 [style = bold, label=""];
}
