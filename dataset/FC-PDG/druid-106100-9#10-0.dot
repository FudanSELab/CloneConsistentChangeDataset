digraph {
7 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(filter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8a8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8b0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8b8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8c0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8c8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8d0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8d8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8e0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8e8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8f0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb8f8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb900): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb90b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb913,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb91b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb923,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb92b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb933,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb93b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb943,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb94b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb953,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb95b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb963,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb96b))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClauses),VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnIsoCode(JoinType.LEFT))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "test_makeCursors_factToCountryLeft_filterExcludesAllLeftRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb9cd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb9d5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb9dd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb9e5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb9ed,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb9f5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eb9fd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba05,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba0d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba15,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba1d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba25): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba30,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba38,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba40,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba48,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba50,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba58,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba60,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba68,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba70,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba78,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba80,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba88,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9eba90))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"page\",\"this matches nothing\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnNumber(JoinType.INNER))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClauses),VirtualColumns.EMPTY,originalFilter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->2 [style = solid, label="joinableClauses"];
1->7 [style = solid, label="filter"];
10->12 [style = solid, label="originalFilter"];
12->11 [style = bold, label=""];
1->2 [style = solid, label="filter"];
1->4 [style = solid, label="filter"];
9->10 [style = bold, label=""];
4->6 [style = dashed, label="0"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
3->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
0->7 [style = solid, label="joinableClauses"];
1->6 [style = solid, label="filter"];
0->1 [style = bold, label=""];
10->11 [style = solid, label="originalFilter"];
7->6 [style = bold, label=""];
1->2 [style = bold, label=""];
4->11 [style = dashed, label="0"];
8->12 [style = bold, label=""];
8->12 [style = solid, label="joinableClauses"];
}
