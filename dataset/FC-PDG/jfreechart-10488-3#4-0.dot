digraph {
14 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.RED)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.blue)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.red)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(b1,b2)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(b1.equals(b2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.BLUE)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertFalse(b1.equals(b2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.red)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertFalse(b1.equals(b2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.RED)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.RED)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(b1.equals(b2))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.red)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.red)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(b1.equals(b2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.blue)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "LineBorder b1 = new LineBorder(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(1.0f),new RectangleInsets(1.0,1.0,1.0,1.0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.BLUE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "LineBorder b2 = (LineBorder)TestUtilities.serialised(b1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(b2.equals(b2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.RED)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20->22 [style = solid, label="b2"];
10->11 [style = solid, label="b2"];
3->12 [style = solid, label="b2"];
19->12 [style = bold, label=""];
13->12 [style = solid, label="b2"];
21->22 [style = solid, label="b1"];
7->17 [style = dashed, label="0"];
18->11 [style = bold, label=""];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
17->8 [style = solid, label="b2"];
17->2 [style = solid, label="b2"];
13->9 [style = solid, label="b2"];
16->17 [style = bold, label=""];
5->14 [style = bold, label=""];
6->14 [style = dashed, label="0"];
15->16 [style = bold, label=""];
3->13 [style = dashed, label="0"];
7->8 [style = solid, label="b2"];
4->0 [style = bold, label=""];
20->22 [style = bold, label=""];
0->7 [style = bold, label=""];
3->9 [style = bold, label=""];
3->9 [style = solid, label="b2"];
7->5 [style = solid, label="b2"];
12->10 [style = bold, label=""];
21->20 [style = bold, label=""];
5->6 [style = bold, label=""];
17->2 [style = bold, label=""];
23->21 [style = bold, label=""];
18->11 [style = solid, label="b2"];
0->21 [style = dashed, label="0"];
7->2 [style = bold, label=""];
7->2 [style = solid, label="b2"];
6->8 [style = bold, label=""];
12->18 [style = bold, label=""];
1->12 [style = bold, label=""];
9->19 [style = bold, label=""];
14->8 [style = bold, label=""];
13->9 [style = bold, label=""];
9->1 [style = bold, label=""];
17->5 [style = solid, label="b2"];
2->22 [style = dashed, label="0"];
10->18 [style = dashed, label="0"];
21->20 [style = solid, label="b1"];
8->13 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
