digraph {
8 [style = filled, label = "assertEquals(out.size(),6)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(out.get(3).intValue(),1)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testOnes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "solrStream.setStreamContext(context)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(out.size(),6)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String cexpr = \"ones(6)\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(out.get(2).intValue(),1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(out.get(2).intValue(),3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(out.get(5).intValue(),1)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(out.get(1).intValue(),1)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(out.size(),4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(out.get(0).intValue(),1)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(tuples.size() == 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(out.get(3).intValue(),4)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(out.get(4).intValue(),1)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testOnes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertEquals(out.get(1).intValue(),2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String cexpr = \"rtrim(array(1,2,3,4,5,6), 2)\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testRtrim['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(out.get(0).intValue(),1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
7->13 [style = bold, label=""];
11->16 [style = bold, label=""];
4->3 [style = bold, label=""];
11->1 [style = solid, label="paramsLoc"];
2->26 [style = bold, label=""];
3->1 [style = solid, label="url"];
3->1 [style = bold, label=""];
19->12 [style = bold, label=""];
17->6 [style = bold, label=""];
25->23 [style = bold, label=""];
27->28 [style = bold, label=""];
28->11 [style = bold, label=""];
0->2 [style = bold, label=""];
18->15 [style = solid, label="context"];
18->15 [style = bold, label=""];
12->11 [style = bold, label=""];
28->16 [style = solid, label="cexpr"];
1->5 [style = solid, label="solrStream"];
8->14 [style = bold, label=""];
1->18 [style = bold, label=""];
26->6 [style = bold, label=""];
15->5 [style = bold, label=""];
14->7 [style = bold, label=""];
22->8 [style = bold, label=""];
12->16 [style = solid, label="cexpr"];
23->24 [style = bold, label=""];
14->23 [style = dashed, label="0"];
21->20 [style = bold, label=""];
5->0 [style = bold, label=""];
7->24 [style = dashed, label="0"];
10->12 [style = bold, label=""];
12->28 [style = dashed, label="0"];
0->22 [style = bold, label=""];
6->8 [style = bold, label=""];
9->21 [style = bold, label=""];
8->25 [style = dashed, label="0"];
17->26 [style = dashed, label="0"];
13->9 [style = bold, label=""];
16->4 [style = bold, label=""];
6->25 [style = bold, label=""];
}
