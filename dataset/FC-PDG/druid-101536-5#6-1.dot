digraph {
6 [style = filled, label = "Meta.Frame frame = statement.execute(Collections.emptyList()).nextFrame(DruidStatement.START_OFFSET,6)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testSelectAllInFirstFrame['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final String sql = \"SELECT __time, cnt, dim1, dim2, m1 FROM druid.foo\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final DruidStatement statement = new DruidStatement(\"\",0,null,sqlLifecycleFactory.factorize(),null).prepare(sql,-1,AllowAllAuthenticator.ALLOW_ALL_RESULT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertFalse(statement.isDone())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(statement.isDone())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Meta.Frame frame = statement.execute().nextFrame(DruidStatement.START_OFFSET,2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "frame = statement.nextFrame(2,10)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(Meta.Frame.create(0,true,Lists.newArrayList(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@920019,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@920026,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@920035,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@920042,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92004f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92005c)),frame)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testSelectAllInFirstFrame['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(Meta.Frame.create(0,false,Lists.newArrayList(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9200ad,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9200ba)),frame)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Meta.Frame frame = statement.execute().nextFrame(DruidStatement.START_OFFSET,6)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(Meta.Frame.create(2,true,Lists.newArrayList(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9200e8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9200f5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@920102,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92010f)),frame)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testSelectSplitOverTwoFrames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(statement.isDone())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->9 [style = bold, label=""];
1->9 [style = dashed, label="0"];
11->12 [style = bold, label=""];
7->4 [style = bold, label=""];
11->12 [style = solid, label="frame"];
3->4 [style = bold, label=""];
6->2 [style = solid, label="frame"];
6->2 [style = bold, label=""];
5->1 [style = bold, label=""];
2->0 [style = bold, label=""];
9->13 [style = solid, label="frame"];
5->6 [style = bold, label=""];
1->6 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
12->14 [style = bold, label=""];
10->4 [style = bold, label=""];
4->5 [style = solid, label="sql"];
1->2 [style = bold, label=""];
13->8 [style = bold, label=""];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
1->2 [style = solid, label="frame"];
9->13 [style = bold, label=""];
}
