digraph {
7 [style = filled, label = "Assert.assertEquals(\"testDistPath\",wrapper.getConfiguration().getDistributionPath())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getDistributionBase())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"testDistBase\",wrapper.getConfiguration().getDistributionBase())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(\"testZipPath\",wrapper.getConfiguration().getZipPath())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "properties.put(\"distributionUrl\",\"http://server/test/maven.zip\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getZipPath())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "propertiesFileOnlyContainsDistURL['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getZipBase())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getDistribution())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(\"testZipBase\",wrapper.getConfiguration().getZipBase())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "loadWrapperMetadataFromDirectory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forWrapperPropertiesFile(propertiesFile)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forProjectDirectory(testDir,System.out)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forWrapperPropertiesFile(propertiesFile,System.out)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getConfiguration().getDistribution())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "writePropertiesFile(properties,propertiesFile,\"header\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getDistributionPath())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "properties = new Properties()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "propertiesFileOnlyContainsDistURL['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14->16 [style = bold, label=""];
5->10 [style = bold, label=""];
16->18 [style = bold, label=""];
10->8 [style = dashed, label="0"];
8->15 [style = bold, label=""];
8->6 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
1->11 [style = bold, label=""];
4->0 [style = bold, label=""];
6->5 [style = bold, label=""];
6->13 [style = dashed, label="0"];
12->4 [style = bold, label=""];
17->14 [style = bold, label=""];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
4->1 [style = solid, label="properties"];
18->13 [style = bold, label=""];
2->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
2->7 [style = bold, label=""];
5->7 [style = dashed, label="0"];
11->7 [style = bold, label=""];
9->15 [style = dashed, label="0"];
}
