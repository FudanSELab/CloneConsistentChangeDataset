digraph {
11 [style = filled, label = "testHopTableFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\").fails(\"Cannot apply 'HOP' to arguments of type 'HOP\(<RECORDTYPE\(TIMESTAMP\(0\) \" + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \" + \"<CHAR\(4\)>\)'. Supported form\(s\): HOP\(TABLE table_name, DESCRIPTOR\(\" + \"col\), datetime interval, datetime interval\)\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\").fails(\"Cannot apply 'HOP' to arguments of type 'HOP\(<RECORDTYPE\(TIMESTAMP\(0\) \" + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <CHAR\(4\)>, <INTERVAL HOUR>, \" + \"<INTERVAL HOUR>\)'. Supported form\(s\): HOP\(TABLE table_name, DESCRIPTOR\(\" + \"col\), datetime interval, datetime interval\(, datetime interval\(\)\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\" + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\").fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sql(\"select * from table(\" + \"^tumble(table orders, descriptor(rowtime), 'test')^)\").fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\(<RECORDTYPE\\\" + \"(TIMESTAMP\(0\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <COLUMN_LIST>,\" + \" <CHAR\(4\)>\)'\. Supported form\(s\): TUMBLE\(TABLE \" + \"table_name, DESCRIPTOR\(col1, col2 \.\.\.\), datetime interval\)\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "sql(\"select * from table(\" + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \" + \"interval '20' minute))\").ok()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\").fails(\"Cannot apply 'HOP' to arguments of type 'HOP\(<RECORDTYPE\(TIMESTAMP\(0\) \" + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \" + \"<INTERVAL HOUR>, <CHAR\(4\)>\)'. Supported form\(s\): HOP\(TABLE table_name, \" + \"DESCRIPTOR\(col\), datetime interval, datetime interval\(, datetime interval\(\)\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\").fails(\"Cannot apply 'HOP' to arguments of type 'HOP\(<RECORDTYPE\(TIMESTAMP\(0\) \" + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <CHAR\(4\)>, <INTERVAL HOUR>, \" + \"<INTERVAL HOUR>\)'. Supported form\(s\): HOP\(TABLE table_name, DESCRIPTOR\(\" + \"col\), datetime interval, datetime interval\)\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testHopTableFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sql(\"select * from table(\" + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\").fails(\"Object 'TABLER_NOT_EXIST' not found\")@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sql(\"select * from table(\" + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\").fails(\"Cannot apply 'HOP' to arguments of type 'HOP\(<RECORDTYPE\(TIMESTAMP\(0\) \" + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <COLUMN_LIST>, <CHAR\(4\)>, \" + \"<INTERVAL HOUR>\)'. Supported form\(s\): HOP\(TABLE table_name, DESCRIPTOR\(\" + \"col\), datetime interval, datetime interval\(, datetime interval\(\)\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\").fails(\"Cannot apply 'HOP' to arguments of type 'HOP\(<RECORDTYPE\(TIMESTAMP\(0\) \" + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <COLUMN_LIST>, <CHAR\(4\)>, \" + \"<INTERVAL HOUR>\)'. Supported form\(s\): HOP\(TABLE table_name, DESCRIPTOR\(\" + \"col\), datetime interval, datetime interval\)\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "sql(\"select * from table(\" + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\").fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "sql(\"select * from table(\" + \"^tumble(table orders, 'test', interval '2' hour)^)\").fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\(<RECORDTYPE\\\" + \"(TIMESTAMP\(0\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <CHAR\\\" + \"(4\)>, <INTERVAL HOUR>\)'\. Supported form\(s\): TUMBLE\(TABLE \" + \"table_name, DESCRIPTOR\(col1, col2 \.\.\.\), datetime interval\)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sql(\"select * from table(\" + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\").fails(\"Cannot apply 'HOP' to arguments of type 'HOP\(<RECORDTYPE\(TIMESTAMP\(0\) \" + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \" + \"<CHAR\(4\)>\)'. Supported form\(s\): HOP\(TABLE table_name, DESCRIPTOR\(\" + \"col\), datetime interval, datetime interval\(, datetime interval\(\)\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testTumbleTableFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sql(\"select * from table(\" + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\").fails(\"Object 'TABLER_NOT_EXIST' not found\")@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "sql(\"select * from table(\" + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\").fails(\"Object 'TABLER_NOT_EXIST' not found\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
8->10 [style = bold, label=""];
5->9 [style = bold, label=""];
2->6 [style = bold, label=""];
18->17 [style = bold, label=""];
6->0 [style = bold, label=""];
5->18 [style = dashed, label="0"];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
12->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
19->14 [style = bold, label=""];
11->3 [style = bold, label=""];
2->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
17->15 [style = bold, label=""];
13->5 [style = bold, label=""];
3->13 [style = bold, label=""];
14->18 [style = bold, label=""];
9->12 [style = bold, label=""];
3->14 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
}
