digraph {
23 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.clear()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(10.4D,result)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "subManyFieldsWithSubsubs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "values.put(\"d\",4)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(0L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(10.1D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,c,d)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(0L,result)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "values.put(\"c\",3)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(0D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "values.put(\"b\",2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "addManyFieldsWithValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "subManyFieldsWithSubsubs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
34->29 [style = bold, label=""];
15->2 [style = bold, label=""];
10->15 [style = bold, label=""];
26->32 [style = bold, label=""];
18->9 [style = solid, label="result"];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
18->13 [style = solid, label="result"];
13->20 [style = dashed, label="0"];
9->4 [style = bold, label=""];
33->28 [style = bold, label=""];
2->29 [style = solid, label="result"];
25->3 [style = bold, label=""];
2->34 [style = bold, label=""];
8->14 [style = bold, label=""];
6->31 [style = dashed, label="0"];
31->38 [style = bold, label=""];
5->25 [style = dashed, label="0"];
16->17 [style = bold, label=""];
30->37 [style = bold, label=""];
10->22 [style = dashed, label="0"];
2->17 [style = solid, label="result"];
32->30 [style = bold, label=""];
37->23 [style = bold, label=""];
15->36 [style = dashed, label="0"];
18->20 [style = solid, label="result"];
17->29 [style = dashed, label="0"];
35->4 [style = bold, label=""];
3->0 [style = bold, label=""];
2->16 [style = solid, label="result"];
15->2 [style = solid, label="result"];
29->26 [style = bold, label=""];
9->35 [style = dashed, label="0"];
24->33 [style = bold, label=""];
21->5 [style = bold, label=""];
4->31 [style = bold, label=""];
11->5 [style = bold, label=""];
18->20 [style = bold, label=""];
23->24 [style = bold, label=""];
16->34 [style = dashed, label="0"];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
36->2 [style = bold, label=""];
22->36 [style = bold, label=""];
24->33 [style = solid, label="result"];
7->38 [style = dashed, label="0"];
24->28 [style = solid, label="result"];
18->13 [style = bold, label=""];
1->12 [style = bold, label=""];
18->35 [style = solid, label="result"];
14->18 [style = bold, label=""];
16->2 [style = dashed, label="0"];
13->9 [style = bold, label=""];
19->4 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
38->22 [style = bold, label=""];
13->35 [style = bold, label=""];
27->25 [style = bold, label=""];
2->34 [style = solid, label="result"];
2->16 [style = bold, label=""];
}
