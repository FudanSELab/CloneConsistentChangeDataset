digraph {
1 [style = filled, label = "context.assertSentFetchPartitionResponse(Errors.NONE,epoch,OptionalInt.of(localId))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "context.client.register(secondListener)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "context.becomeLeader()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "context.deliverRequest(context.voteRequest(epoch + 1,otherNodeId,epoch,9L))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int candidateEpoch = epoch + 2@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,9L,epoch,500))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "context.assertSentFetchPartitionResponse(Errors.NONE,epoch,OptionalInt.of(localId))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int candidateEpoch = epoch + 2@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(10L,context.log.endOffset().offset)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,10L,epoch,500))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "context.pollUntilResponse()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testHandleCommitCallbackFiresInVotedState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "context.deliverRequest(context.voteRequest(candidateEpoch,otherNodeId,epoch,10L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.assertUnknownLeader(epoch + 1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "context.pollUntilResponse()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int candidateEpoch = epoch + 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "context.client.poll()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "context.client.poll()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "context.pollUntilResponse()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "context.client.poll()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int epoch = 7@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "context.client.poll()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,10L,epoch,0))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).appendToLog(2,Arrays.asList(\"a\",\"b\",\"c\")).appendToLog(4,Arrays.asList(\"d\",\"e\",\"f\")).appendToLog(4,Arrays.asList(\"g\",\"h\",\"i\")).withUnknownLeader(epoch - 1).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.client.register(secondListener)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "context.pollUntilResponse()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29->15 [style = bold, label=""];
16->35 [style = solid, label="otherNodeId"];
3->12 [style = solid, label="secondListener"];
9->3 [style = solid, label="localId"];
21->22 [style = solid, label="epoch"];
17->9 [style = bold, label=""];
26->9 [style = bold, label=""];
14->28 [style = bold, label=""];
21->0 [style = solid, label="epoch"];
21->2 [style = solid, label="epoch"];
8->44 [style = bold, label=""];
9->16 [style = bold, label=""];
19->1 [style = bold, label=""];
15->11 [style = bold, label=""];
31->35 [style = bold, label=""];
0->25 [style = dashed, label="0"];
0->25 [style = bold, label=""];
39->31 [style = bold, label=""];
33->42 [style = bold, label=""];
12->4 [style = solid, label="secondListener"];
34->32 [style = bold, label=""];
7->34 [style = dashed, label="0"];
36->9 [style = bold, label=""];
27->30 [style = bold, label=""];
9->20 [style = solid, label="localId"];
9->24 [style = solid, label="localId"];
41->44 [style = solid, label="candidateEpoch"];
25->2 [style = bold, label=""];
13->44 [style = dashed, label="0"];
16->7 [style = solid, label="otherNodeId"];
30->19 [style = bold, label=""];
41->35 [style = solid, label="candidateEpoch"];
7->5 [style = bold, label=""];
10->0 [style = bold, label=""];
9->15 [style = solid, label="localId"];
23->7 [style = bold, label=""];
44->37 [style = bold, label=""];
2->18 [style = solid, label="candidateEpoch"];
24->3 [style = bold, label=""];
42->38 [style = bold, label=""];
13->18 [style = bold, label=""];
8->24 [style = bold, label=""];
9->13 [style = solid, label="localId"];
21->7 [style = solid, label="epoch"];
22->2 [style = bold, label=""];
6->23 [style = bold, label=""];
19->29 [style = bold, label=""];
4->13 [style = bold, label=""];
21->10 [style = solid, label="epoch"];
3->12 [style = bold, label=""];
21->11 [style = solid, label="epoch"];
5->19 [style = bold, label=""];
16->11 [style = solid, label="otherNodeId"];
21->39 [style = solid, label="epoch"];
22->24 [style = solid, label="candidateEpoch"];
16->20 [style = solid, label="otherNodeId"];
11->10 [style = bold, label=""];
16->39 [style = solid, label="otherNodeId"];
41->39 [style = solid, label="candidateEpoch"];
43->41 [style = bold, label=""];
9->1 [style = solid, label="localId"];
38->8 [style = bold, label=""];
16->44 [style = solid, label="otherNodeId"];
16->30 [style = solid, label="otherNodeId"];
21->15 [style = solid, label="epoch"];
23->27 [style = bold, label=""];
22->13 [style = solid, label="candidateEpoch"];
1->15 [style = bold, label=""];
21->30 [style = solid, label="epoch"];
35->33 [style = bold, label=""];
19->29 [style = dashed, label="0"];
9->18 [style = solid, label="localId"];
16->34 [style = solid, label="otherNodeId"];
21->34 [style = solid, label="epoch"];
20->6 [style = bold, label=""];
32->43 [style = bold, label=""];
21->20 [style = bold, label=""];
12->4 [style = bold, label=""];
16->21 [style = bold, label=""];
0->22 [style = bold, label=""];
42->38 [style = solid, label="secondListener"];
2->3 [style = solid, label="candidateEpoch"];
23->34 [style = bold, label=""];
16->15 [style = solid, label="otherNodeId"];
41->39 [style = bold, label=""];
21->1 [style = solid, label="epoch"];
21->41 [style = solid, label="epoch"];
18->14 [style = bold, label=""];
37->40 [style = bold, label=""];
2->8 [style = bold, label=""];
}
