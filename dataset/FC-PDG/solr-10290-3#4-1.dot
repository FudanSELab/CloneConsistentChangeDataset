digraph {
16 [style = filled, label = "fieldMappings.entrySet()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "return expression@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sb.length() > 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "null != fieldMappings && 0 != fieldMappings.size()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val.replace(\"\"\",\"\\\"\")))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"aliases\",sb.toString()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "sb.append(\",\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Entry<String,String> mapping@@@13@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StreamExpression expression = new StreamExpression(\"search\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sb.append(mapping.getKey())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expression.addParameter(\"\"\" + collection + \"\"\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "sb.append(mapping.getValue())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "sb.append(\"=\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "collection.indexOf(',') > -1@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5->13 [style = dashed, label="0"];
11->20 [style = bold, label=""];
21->10 [style = bold, label=""];
18->3 [style = bold, label=""];
21->12 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
9->0 [style = bold, label=""];
21->11 [style = dotted, label="true"];
21->18 [style = dotted, label="true"];
2->1 [style = bold, label=""];
0->3 [style = solid, label="expression"];
12->11 [style = bold, label=""];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
12->15 [style = dotted, label="true"];
20->14 [style = bold, label=""];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
21->10 [style = dotted, label="true"];
7->8 [style = bold, label=""];
0->7 [style = bold, label=""];
17->0 [style = bold, label=""];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
10->12 [style = bold, label=""];
1->21 [style = bold, label=""];
7->4 [style = dotted, label="false"];
14->12 [style = bold, label=""];
21->19 [style = dotted, label="true"];
21->14 [style = dotted, label="true"];
14->18 [style = bold, label=""];
21->16 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
17->13 [style = dotted, label="true"];
6->5 [style = dotted, label="true"];
21->3 [style = bold, label=""];
9->5 [style = dotted, label="true"];
}
