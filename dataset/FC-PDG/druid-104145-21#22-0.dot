digraph {
6 [style = filled, label = "Assert.assertEquals(\"statusCode\",TaskState.FAILED,status.getStatusCode())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"num segments nuked\",0,mdc.getNuked().size())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"num segments published\",0,mdc.getPublished().size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testIndexTaskFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(\"statusCode\",TaskState.SUCCESS,status.getStatusCode())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(\"num segments published\",2,mdc.getPublished().size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testRealtimeishTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Task indexTask = new IndexTask(null,null,new IndexIngestionSpec(new DataSchema(\"foo\",null,new AggregatorFactory((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@973cb3,new UniformGranularitySpec(Granularities.DAY,null,ImmutableList.of(Intervals.of(\"2010-01-01/P1D\"))),null,mapper),new IndexIOConfig(null,new MockExceptionInputSource(),new NoopInputFormat(),false),new IndexTuningConfig(null,10000,null,10,null,null,null,null,null,null,indexSpec,null,3,false,null,null,null,null,null,null,null)),null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final TaskStatus status = runTask(indexTask)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final TaskStatus status = runTask(rtishTask)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Task rtishTask = new RealtimeishTask()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(taskLocation,status.getLocation())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testIndexTaskFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"num segments nuked\",0,mdc.getNuked().size())@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12->10 [style = bold, label=""];
9->13 [style = bold, label=""];
10->8 [style = bold, label=""];
1->3 [style = bold, label=""];
13->11 [style = bold, label=""];
2->5 [style = solid, label="indexTask"];
10->8 [style = solid, label="rtishTask"];
11->1 [style = bold, label=""];
8->9 [style = bold, label=""];
3->11 [style = dashed, label="0"];
3->0 [style = bold, label=""];
6->1 [style = bold, label=""];
5->6 [style = bold, label=""];
4->2 [style = bold, label=""];
2->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
