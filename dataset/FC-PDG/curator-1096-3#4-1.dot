digraph {
16 [style = filled, label = "len++@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertTrue(Arrays.equals(decompressedData,data))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "GzipCompressionProvider provider = new GzipCompressionProvider()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSimple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertTrue(Arrays.equals(compressedData,jdkCompressedData))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "byte(( jdkCompressedData = jdkCompress(data)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(Arrays.equals(compressedData,jdkCompressedData))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "random.nextBytes(data)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "byte(( decompressedData = provider.decompress(null,compressedData)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "byte(( compressedData = provider.compress(null,data)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < 100@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "byte(( jdkCompressedData = jdkCompress(data)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "smokeTestRandomDataWithJdk['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(Arrays.equals(compressedData,jdkCompressedData))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "byte(( compressedData = provider.compress(null,data)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int i = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSimple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ThreadLocalRandom random = ThreadLocalRandom.current()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "byte(( decompressedData = provider.decompress(null,compressedData)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(Arrays.equals(decompressedData,data))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "byte(( data = \"Hello, world!\".getBytes()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "len < 100@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "byte(( data = new byte((((@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(Arrays.equals(decompressedData,data))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "int len = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->24 [style = solid, label="decompressedData"];
5->10 [style = bold, label=""];
13->16 [style = dotted, label="true"];
13->17 [style = dotted, label="true"];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
20->17 [style = bold, label=""];
19->23 [style = solid, label="data"];
19->11 [style = solid, label="data"];
21->17 [style = solid, label="i"];
17->18 [style = dotted, label="true"];
3->10 [style = solid, label="data"];
20->21 [style = solid, label="i"];
19->20 [style = bold, label=""];
2->3 [style = bold, label=""];
13->20 [style = dotted, label="true"];
17->24 [style = dotted, label="true"];
14->13 [style = solid, label="len"];
12->11 [style = bold, label=""];
18->15 [style = bold, label=""];
12->18 [style = solid, label="compressedData"];
13->19 [style = dotted, label="true"];
17->11 [style = dotted, label="true"];
16->13 [style = solid, label="len"];
3->4 [style = solid, label="data"];
12->15 [style = solid, label="compressedData"];
3->4 [style = bold, label=""];
25->2 [style = bold, label=""];
11->18 [style = bold, label=""];
17->23 [style = dotted, label="true"];
4->0 [style = bold, label=""];
20->17 [style = solid, label="i"];
0->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
11->18 [style = solid, label="jdkCompressedData"];
7->5 [style = bold, label=""];
17->12 [style = bold, label=""];
13->19 [style = bold, label=""];
4->9 [style = solid, label="compressedData"];
17->15 [style = dotted, label="true"];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
23->21 [style = bold, label=""];
17->12 [style = dotted, label="true"];
3->6 [style = solid, label="data"];
7->9 [style = dashed, label="0"];
5->6 [style = solid, label="decompressedData"];
5->10 [style = solid, label="decompressedData"];
15->24 [style = bold, label=""];
4->7 [style = solid, label="compressedData"];
9->5 [style = bold, label=""];
19->24 [style = solid, label="data"];
1->2 [style = bold, label=""];
3->0 [style = solid, label="data"];
0->7 [style = solid, label="jdkCompressedData"];
19->12 [style = solid, label="data"];
14->13 [style = bold, label=""];
2->22 [style = bold, label=""];
22->14 [style = bold, label=""];
17->21 [style = dotted, label="true"];
4->5 [style = solid, label="compressedData"];
0->9 [style = solid, label="jdkCompressedData"];
21->17 [style = bold, label=""];
14->16 [style = solid, label="len"];
17->16 [style = bold, label=""];
24->23 [style = bold, label=""];
}
