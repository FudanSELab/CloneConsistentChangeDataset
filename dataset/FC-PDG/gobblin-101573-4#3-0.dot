digraph {
7 [style = filled, label = "configureSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "configureSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Schema newestSchema = getNewestSchemaFromSource(job,this.fs)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Job job@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AvroJob.setInputKeySchema(job,newestSchema)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AvroJob.setOutputKeySchema(job,newestSchema)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Schema newestSchema = MRCompactorAvroKeyDedupJobRunner.getNewestSchemaFromSource(job,this.fs)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "configureSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "AvroJob.setMapOutputValueSchema(job,newestSchema)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.state.getPropAsBoolean(MRCompactorAvroKeyDedupJobRunner.COMPACTION_JOB_AVRO_SINGLE_INPUT_SCHEMA,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "newestSchema != null@@@4@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "AvroJob.setMapOutputKeySchema(job,this.shouldDeduplicate? getKeySchema(job,newestSchema): newestSchema)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.useSingleInputSchema@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12->0 [style = bold, label=""];
6->2 [style = solid, label="newestSchema"];
1->2 [style = solid, label="job"];
0->4 [style = bold, label=""];
6->4 [style = solid, label="newestSchema"];
9->5 [style = dotted, label="true"];
10->4 [style = solid, label="newestSchema"];
3->2 [style = bold, label=""];
9->0 [style = dotted, label="true"];
12->2 [style = bold, label=""];
4->5 [style = bold, label=""];
9->3 [style = bold, label=""];
7->6 [style = bold, label=""];
7->1 [style = dotted, label="true"];
8->6 [style = bold, label=""];
12->2 [style = dotted, label="true"];
6->9 [style = bold, label=""];
10->12 [style = bold, label=""];
6->0 [style = solid, label="newestSchema"];
1->10 [style = solid, label="job"];
11->10 [style = bold, label=""];
6->9 [style = solid, label="newestSchema"];
11->1 [style = dotted, label="true"];
3->0 [style = bold, label=""];
3->2 [style = dotted, label="true"];
9->4 [style = dotted, label="true"];
6->3 [style = bold, label=""];
6->5 [style = solid, label="newestSchema"];
9->3 [style = dotted, label="true"];
2->0 [style = bold, label=""];
1->4 [style = solid, label="job"];
1->0 [style = solid, label="job"];
10->5 [style = solid, label="newestSchema"];
1->6 [style = solid, label="job"];
1->5 [style = solid, label="job"];
6->10 [style = dashed, label="0"];
8->1 [style = dotted, label="true"];
10->2 [style = solid, label="newestSchema"];
10->0 [style = solid, label="newestSchema"];
}
