digraph {
21 [style = filled, label = "String dateString = \"8/9/2010\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SolrInputDocument d = processAdd(\"US-Pacific-parse-date-no-run-processor\",doc(f(\"id\",\"288\"),f(\"not_in_schema\",dateString)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Instant.parse(dateString),((Date)d.getFieldValue(\"not_in_schema\")).toInstant())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testParseDateFieldNotInSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "IndexSchema schema = h.getCore().getLatestSchema()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertNotNull(d)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNotNull(d)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNotNull(d)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",doc(f(\"id\",\"18\"),f(\"not_in_schema\",dateString)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d = processAdd(\"parse-date-no-run-processor\",doc(f(\"id\",\"36\"),f(\"not_in_schema\",\"not a date\",dateString)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testParseDateFieldNotInSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "String dateStringUTC = \"2010-08-09T07:00:00.000Z\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "DateTime dateTime = dateTimeFormatter.parseDateTime(dateString)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(dateStringUTC,(new DateTime(((Date)d.getFieldValue(\"not_in_schema\")).getTime(),DateTimeZone.UTC)).toString())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(schema.getFieldOrNull(\"not_in_schema\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(val instanceof String)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(dateTime.getMillis(),((Date)d.getFieldValue(\"not_in_schema\")).getTime())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "String dateString = \"2010-11-12T13:14:15.168Z\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(val instanceof String)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testParseUSPacificDate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "d = processAdd(\"parse-date-no-run-processor\",doc(f(\"id\",\"72\"),f(\"not_in_schema\",dateString,\"not a date\")))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
15->2 [style = bold, label=""];
19->18 [style = bold, label=""];
7->21 [style = dashed, label="0"];
7->0 [style = solid, label="dateString"];
22->2 [style = bold, label=""];
21->19 [style = bold, label=""];
8->11 [style = solid, label="d"];
0->6 [style = bold, label=""];
15->2 [style = solid, label="d"];
14->10 [style = bold, label=""];
14->17 [style = bold, label=""];
11->12 [style = bold, label=""];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
7->13 [style = solid, label="dateString"];
20->4 [style = bold, label=""];
19->14 [style = solid, label="dateStringUTC"];
21->18 [style = solid, label="dateString"];
7->5 [style = bold, label=""];
18->22 [style = bold, label=""];
7->15 [style = solid, label="dateString"];
18->22 [style = solid, label="d"];
10->8 [style = bold, label=""];
1->21 [style = bold, label=""];
0->6 [style = solid, label="d"];
5->13 [style = bold, label=""];
2->14 [style = bold, label=""];
10->17 [style = dashed, label="0"];
7->15 [style = bold, label=""];
7->8 [style = solid, label="dateString"];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
6->9 [style = bold, label=""];
16->4 [style = bold, label=""];
8->11 [style = bold, label=""];
7->17 [style = solid, label="dateString"];
10->14 [style = dashed, label="0"];
}
