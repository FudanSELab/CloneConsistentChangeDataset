digraph {
16 [style = filled, label = "{ExecutorUtil.shutdownAndAwaitTermination(executor)initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\")}@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage + \"' but message is '\" + wrappedException.getMessage() + \"'\",wrappedException.getMessage().contains(expectedMessage))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) Future job = executor.submit(null)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testReloadDuringBuild['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "h.reload()@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "wrappedException instanceof IllegalStateException && !(wrappedException instanceof SolrCoreState.CoreIsClosedException)@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Thread.sleep(100)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "job.get()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testShutdownDuringBuild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "job.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary.getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "h.close()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "{ExecutorUtil.shutdownAndAwaitTermination(executor)}@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage + \"' but message is '\" + wrappedException.getMessage() + \"'\",wrappedException.getMessage().contains(expectedMessage))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expected.put(,Arrays.asList(,,,))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "h.reload()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "wrappedException instanceof SolrException@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Throwable(( outerException = new Throwable((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Future job = executor.submit(null)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "LinkedHashMap<Class<? extends Throwable>,List<Class<? extends Throwable>>> expected = new LinkedHashMap<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testReloadDuringBuild['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String expectedMessage = \"Cannot commit on an closed writer. Add documents first\"@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary.getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String expectedMessage = \"SolrCoreState already closed.\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Future job = executor.submit(null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary.getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Throwable wrappedException = outerException(0(.getCause()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
27->13 [style = bold, label=""];
4->10 [style = bold, label=""];
13->25 [style = bold, label=""];
11->16 [style = bold, label=""];
27->13 [style = solid, label="wrappedException"];
13->25 [style = dotted, label="true"];
26->5 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
12->15 [style = bold, label=""];
12->15 [style = dotted, label="true"];
20->14 [style = bold, label=""];
6->0 [style = bold, label=""];
5->18 [style = bold, label=""];
12->16 [style = bold, label=""];
5->16 [style = solid, label="executor"];
3->4 [style = bold, label=""];
15->24 [style = solid, label="expectedMessage"];
5->4 [style = solid, label="executor"];
27->12 [style = solid, label="wrappedException"];
7->3 [style = bold, label=""];
3->9 [style = bold, label=""];
24->16 [style = bold, label=""];
18->20 [style = bold, label=""];
5->10 [style = solid, label="executor"];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
14->23 [style = bold, label=""];
21->22 [style = bold, label=""];
25->11 [style = bold, label=""];
25->11 [style = solid, label="expectedMessage"];
13->12 [style = dotted, label="false"];
23->19 [style = bold, label=""];
15->24 [style = bold, label=""];
12->24 [style = dotted, label="true"];
22->17 [style = bold, label=""];
5->7 [style = bold, label=""];
13->11 [style = dotted, label="true"];
17->27 [style = bold, label=""];
19->21 [style = bold, label=""];
}
