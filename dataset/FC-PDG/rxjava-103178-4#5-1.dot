digraph {
1 [style = filled, label = "bufferSkipIntoCustomCollection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "bufferSkipIntoCustomCollection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Observable.just(1,1,2,2,3,3,4,4).buffer(3,3,new Supplier<Collection<Integer>>(){@Override public Collection<Integer> get(){return new HashSet<Integer>()}}).test().assertResult(set(1,2),set(2,3),set(4))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "bufferSkipIntoCustomCollection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Flowable.just(1,1,2,2,3,3,4,4).buffer(3,3,new Supplier<Collection<Integer>>(){@Override public Collection<Integer> get(){return new HashSet<>()}}).test().assertResult(set(1,2),set(2,3),set(4))@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->0 [style = bold, label=""];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
4->3 [style = bold, label=""];
}
