digraph {
5 [style = filled, label = "assertThat(result.size(),equalTo(1))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> result = TransportGetAliasesAction.postProcess(request,concreteIndices,aliases,state,SystemIndexAccessLevel.ALL,\"\",EmptySystemIndices.INSTANCE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testDeprecationWarningNotEmittedWhenSystemAccessAllowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertWarnings(\"this request accesses system indices: (.b(, but in a future major version, direct access to system \" + \"indices will be prevented by default\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> result = TransportGetAliasesAction.postProcess(request,concreteIndices,aliases,state,SystemIndexAccessLevel.NONE,null,EmptySystemIndices.INSTANCE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testDeprecationWarningNotEmittedWhenSystemAccessAllowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "GetAliasesRequest request = new GetAliasesRequest(\".y\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String(( concreteIndices = {\"a\",\".b\",\"c\"}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(result.get(\".b\").size(),equalTo(1))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(state.metadata().findAliases(request,concreteIndices),aliases)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> aliases = ImmutableOpenMap.builder().fPut(\".b\",Collections.singletonList(new AliasMetadata.Builder(\".y\").build())).build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testDeprecationWarningEmittedWhenSystemIndexIsRequestedByAlias['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ClusterState state = systemIndexTestClusterState()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> result = TransportGetAliasesAction.postProcess(request,concreteIndices,aliases,state,SystemIndexAccessLevel.ALL,new ThreadContext(Settings.EMPTY),EmptySystemIndices.INSTANCE)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->2 [style = solid, label="request"];
5->8 [style = bold, label=""];
0->6 [style = bold, label=""];
0->9 [style = solid, label="state"];
2->3 [style = bold, label=""];
6->3 [style = solid, label="request"];
2->9 [style = bold, label=""];
7->3 [style = solid, label="concreteIndices"];
3->13 [style = dashed, label="0"];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
4->0 [style = bold, label=""];
2->13 [style = bold, label=""];
1->9 [style = solid, label="aliases"];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
0->13 [style = solid, label="state"];
0->3 [style = solid, label="state"];
3->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
6->13 [style = solid, label="request"];
1->13 [style = solid, label="aliases"];
10->0 [style = bold, label=""];
13->5 [style = bold, label=""];
9->5 [style = bold, label=""];
7->2 [style = solid, label="concreteIndices"];
6->9 [style = solid, label="request"];
8->11 [style = bold, label=""];
1->3 [style = solid, label="aliases"];
7->9 [style = solid, label="concreteIndices"];
7->13 [style = solid, label="concreteIndices"];
1->2 [style = solid, label="aliases"];
}
