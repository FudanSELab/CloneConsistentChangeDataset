digraph {
21 [style = filled, label = "Assert.assertTrue(\"Should read: at least one null value in all null column\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "boolean shouldRead = shouldRead(isNull(\"all_nulls\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldRead = shouldRead(notNull(\"struct_not_null\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(\"Should read: non-null column contains a non-null value\",shouldRead)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testNoNulls['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "shouldRead = shouldRead(notNull(\"all_nulls\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(\"Should read: map type is not skipped\",shouldRead)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(\"Should read: struct type is not skipped\",shouldRead)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(\"Should read: map type is not skipped\",shouldRead)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "format != FileFormat.ORC@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(\"Should skip: no non-null value in all null column\",shouldRead)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertFalse(\"Should skip: non-null column contains no null values\",shouldRead)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldRead = shouldRead(notNull(\"no_nulls\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldRead = shouldRead(isNull(\"some_nulls\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testAllNulls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldRead = shouldRead(notNull(\"map_not_null\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "shouldRead = shouldRead(isNull(\"no_nulls\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(\"Should read: struct type is not skipped\",shouldRead)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAllNulls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertTrue(\"Should read: column with some nulls contains a non-null value\",shouldRead)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean shouldRead@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(\"Should read: column with some nulls contains a null value\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldRead = shouldRead(isNull(\"map_not_null\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldRead = shouldRead(notNull(\"some_nulls\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "shouldRead = shouldRead(isNull(\"struct_not_null\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->5 [style = solid, label="shouldRead"];
18->23 [style = solid, label="shouldRead"];
7->11 [style = bold, label=""];
11->1 [style = bold, label=""];
8->9 [style = solid, label="shouldRead"];
23->24 [style = solid, label="shouldRead"];
12->11 [style = bold, label=""];
11->1 [style = solid, label="shouldRead"];
8->20 [style = dashed, label="0"];
3->6 [style = bold, label=""];
20->14 [style = bold, label=""];
16->17 [style = bold, label=""];
6->11 [style = solid, label="shouldRead"];
16->20 [style = solid, label="shouldRead"];
15->19 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
22->23 [style = bold, label=""];
5->0 [style = solid, label="shouldRead"];
21->18 [style = bold, label=""];
10->7 [style = solid, label="shouldRead"];
11->2 [style = solid, label="shouldRead"];
24->16 [style = bold, label=""];
19->21 [style = solid, label="shouldRead"];
23->24 [style = bold, label=""];
12->10 [style = bold, label=""];
18->22 [style = bold, label=""];
5->8 [style = solid, label="shouldRead"];
20->14 [style = solid, label="shouldRead"];
12->10 [style = dotted, label="true"];
5->0 [style = bold, label=""];
6->10 [style = solid, label="shouldRead"];
6->10 [style = bold, label=""];
6->19 [style = dashed, label="0"];
11->24 [style = dashed, label="0"];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
16->17 [style = solid, label="shouldRead"];
10->11 [style = solid, label="shouldRead"];
19->18 [style = solid, label="shouldRead"];
23->16 [style = solid, label="shouldRead"];
1->2 [style = bold, label=""];
13->6 [style = bold, label=""];
12->7 [style = dotted, label="true"];
4->5 [style = bold, label=""];
6->12 [style = bold, label=""];
10->18 [style = dashed, label="0"];
2->4 [style = solid, label="shouldRead"];
18->22 [style = solid, label="shouldRead"];
17->20 [style = bold, label=""];
19->21 [style = bold, label=""];
}
