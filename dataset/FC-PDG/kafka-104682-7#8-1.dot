digraph {
29 [style = filled, label = "thread.join()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final CountDownLatch stopped = new CountDownLatch(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectLastCall()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expectLastCall()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TaskStatus.Listener statusListener = EasyMock.createMock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(workerTask)@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "EasyMock.expectLastCall()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(workerTask)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "statusListener.onStartup(taskId)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "workerTask.releaseResources()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){thread.start()return null}})@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "replay(workerTask)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "stopped.countDown()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "workerTask.stop()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ClassLoader loader = EasyMock.createMock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectLastCall()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "workerTask.awaitStop(1000L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "workerTask.run()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "standardStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerTask.close()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "workerTask.cancel()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "cancelBeforeStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expectLastCall()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "workerTask.execute()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Thread thread = new Thread(){@Override public void run(){try {stopped.await()}catch (Exception e) }}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "workerTask.close()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "workerTask.releaseResources()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "standardStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "EasyMock.expectLastCall()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "statusListener.onStartup(taskId)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
8->16 [style = bold, label=""];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
15->10 [style = bold, label=""];
33->14 [style = bold, label=""];
28->36 [style = bold, label=""];
14->30 [style = bold, label=""];
25->33 [style = bold, label=""];
22->19 [style = bold, label=""];
17->6 [style = bold, label=""];
8->20 [style = solid, label="taskId"];
12->17 [style = bold, label=""];
24->32 [style = bold, label=""];
14->22 [style = bold, label=""];
9->27 [style = dashed, label="0"];
16->31 [style = solid, label="workerTask"];
16->25 [style = bold, label=""];
7->0 [style = bold, label=""];
16->35 [style = solid, label="workerTask"];
36->26 [style = bold, label=""];
34->8 [style = bold, label=""];
23->8 [style = bold, label=""];
16->2 [style = solid, label="workerTask"];
26->24 [style = bold, label=""];
13->11 [style = bold, label=""];
21->2 [style = bold, label=""];
16->3 [style = solid, label="workerTask"];
20->21 [style = bold, label=""];
32->29 [style = bold, label=""];
30->19 [style = bold, label=""];
18->20 [style = bold, label=""];
19->9 [style = bold, label=""];
8->12 [style = solid, label="taskId"];
22->30 [style = dashed, label="0"];
19->27 [style = bold, label=""];
2->15 [style = bold, label=""];
16->14 [style = bold, label=""];
0->18 [style = bold, label=""];
9->12 [style = bold, label=""];
31->28 [style = bold, label=""];
29->35 [style = bold, label=""];
4->24 [style = dashed, label="0"];
6->7 [style = bold, label=""];
1->31 [style = bold, label=""];
10->1 [style = bold, label=""];
27->20 [style = bold, label=""];
8->13 [style = bold, label=""];
}
