digraph {
2 [style = filled, label = "this.loggingSystem.beforeInitialize()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testNonDefaultConfigLocation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(new File(tmpDir() + \"/spring.log\").exists()).isTrue()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CapturedOutput output@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(new File(tmpDir() + \"/tmp.log\").exists()).isFalse()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "this.loggingSystem.initialize(null,getRelativeClasspathLocation(\"log4j2-file.xml\"),getLogFile(null,tmpDir()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Configuration configuration = this.loggingSystem.getConfiguration()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(output).contains(\"Hello world\").contains(tmpDir() + \"/tmp.log\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(output).contains(\"Hello world\").doesNotContain(\"Hidden\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(configuration.getWatchManager().getIntervalSeconds()).isEqualTo(30)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "withFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(configuration.getConfigurationSource().getFile()).isNotNull()@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CapturedOutput output@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.logger.info(\"Hidden\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "this.loggingSystem.initialize(null,\"classpath:log4j2-nondefault.xml\",getLogFile(tmpDir() + \"/tmp.log\",null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "this.loggingSystem.initialize(null,null,getLogFile(null,tmpDir()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(configuration.getConfigurationSource().getFile().getAbsolutePath()).contains(\"log4j2-nondefault.xml\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "withFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "this.logger.info(\"Hello world\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
16->12 [style = dotted, label="true"];
8->10 [style = dashed, label="0"];
15->14 [style = bold, label=""];
17->6 [style = bold, label=""];
11->1 [style = dotted, label="true"];
9->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
18->15 [style = bold, label=""];
8->6 [style = bold, label=""];
5->18 [style = bold, label=""];
16->2 [style = bold, label=""];
9->7 [style = bold, label=""];
3->13 [style = dashed, label="0"];
10->6 [style = bold, label=""];
11->2 [style = bold, label=""];
2->13 [style = bold, label=""];
3->10 [style = bold, label=""];
1->12 [style = dashed, label="0"];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
7->15 [style = dashed, label="0"];
4->5 [style = dashed, label="0"];
0->1 [style = dotted, label="true"];
}
