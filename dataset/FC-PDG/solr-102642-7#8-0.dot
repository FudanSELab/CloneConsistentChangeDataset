digraph {
21 [style = filled, label = "!azOptional.isPresent()@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "nodeBuilder.setFreeDiskGB(1.0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "PlacementContext placementContext = clusterBuilder.buildPlacementContext()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az2\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testFreeDiskConstraints['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "fail(\"missing AZ sysprop for node \" + rp.getNode())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int NUM_NODES = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "i == 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Optional<String> azOptional = attributeValues.getSystemProperty(rp.getNode(),AffinityPlacementConfig.AVAILABILITY_ZONE_SYSPROP)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Cluster cluster = placementContext.getCluster()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementConfig.AVAILABILITY_ZONE_SYSPROP,\"az1\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String az = azOptional.get()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementConfig.AVAILABILITY_ZONE_SYSPROP,\"az2\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "AttributeValues attributeValues = placementContext.getAttributeFetcher().fetchAttributes()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < NUM_NODES / 2@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(placementRequest,placementContext)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int NUM_NODES = 6@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(az,null).incrementAndGet()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Node smallNode = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "replicas.forEach(null)@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testAvailabilityZones['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az1\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Optional<String> azOptional = attributeValues.getSystemProperty(rp.getNode(),AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),1,0,1)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String collectionName = \"azCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testAvailabilityZones['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < NUM_NODES@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->24 [style = dotted, label="true"];
25->22 [style = bold, label=""];
21->15 [style = dotted, label="true"];
18->30 [style = dashed, label="0"];
15->25 [style = bold, label=""];
38->41 [style = dotted, label="true"];
21->15 [style = bold, label=""];
17->9 [style = bold, label=""];
1->27 [style = bold, label=""];
0->36 [style = solid, label="solrCollection"];
31->21 [style = bold, label=""];
38->41 [style = bold, label=""];
26->1 [style = solid, label="i"];
34->0 [style = solid, label="collectionName"];
5->17 [style = solid, label="collectionName"];
35->43 [style = bold, label=""];
1->30 [style = bold, label=""];
12->7 [style = bold, label=""];
13->17 [style = bold, label=""];
0->14 [style = bold, label=""];
37->13 [style = solid, label="NUM_NODES"];
37->20 [style = solid, label="NUM_NODES"];
40->26 [style = bold, label=""];
6->13 [style = solid, label="NUM_NODES"];
26->38 [style = solid, label="i"];
6->1 [style = solid, label="NUM_NODES"];
34->17 [style = solid, label="collectionName"];
4->3 [style = bold, label=""];
26->24 [style = solid, label="i"];
1->27 [style = dotted, label="false"];
30->26 [style = bold, label=""];
36->4 [style = bold, label=""];
39->43 [style = solid, label="smallNode"];
14->4 [style = solid, label="placementRequest"];
21->25 [style = bold, label=""];
6->37 [style = dashed, label="0"];
22->23 [style = bold, label=""];
32->26 [style = bold, label=""];
22->7 [style = bold, label=""];
5->34 [style = dashed, label="0"];
26->13 [style = bold, label=""];
1->30 [style = dotted, label="true"];
0->36 [style = bold, label=""];
1->18 [style = dotted, label="true"];
38->40 [style = dotted, label="false"];
5->6 [style = bold, label=""];
16->4 [style = solid, label="placementContext"];
10->0 [style = bold, label=""];
44->34 [style = bold, label=""];
20->39 [style = bold, label=""];
1->32 [style = bold, label=""];
28->1 [style = solid, label="i"];
0->14 [style = solid, label="solrCollection"];
36->4 [style = solid, label="placementRequest"];
3->29 [style = bold, label=""];
12->31 [style = bold, label=""];
38->42 [style = dotted, label="true"];
14->4 [style = bold, label=""];
27->26 [style = bold, label=""];
28->38 [style = solid, label="i"];
3->35 [style = dashed, label="0"];
13->24 [style = bold, label=""];
7->31 [style = dashed, label="0"];
13->26 [style = dotted, label="true"];
18->26 [style = bold, label=""];
28->24 [style = solid, label="i"];
13->38 [style = dotted, label="true"];
33->5 [style = bold, label=""];
26->13 [style = solid, label="i"];
19->16 [style = bold, label=""];
6->20 [style = bold, label=""];
13->2 [style = dotted, label="true"];
5->0 [style = solid, label="collectionName"];
28->13 [style = solid, label="i"];
27->32 [style = dashed, label="0"];
9->19 [style = bold, label=""];
13->11 [style = dotted, label="true"];
17->19 [style = solid, label="collectionBuilder"];
38->40 [style = bold, label=""];
2->11 [style = bold, label=""];
42->26 [style = bold, label=""];
4->35 [style = bold, label=""];
28->26 [style = solid, label="i"];
1->32 [style = dotted, label="false"];
24->2 [style = bold, label=""];
11->1 [style = bold, label=""];
16->10 [style = bold, label=""];
20->28 [style = bold, label=""];
37->20 [style = bold, label=""];
22->31 [style = bold, label=""];
28->13 [style = bold, label=""];
1->18 [style = bold, label=""];
14->36 [style = dashed, label="0"];
39->28 [style = bold, label=""];
42->43 [style = solid, label="smallNode"];
2->38 [style = bold, label=""];
13->1 [style = dotted, label="true"];
29->12 [style = bold, label=""];
8->5 [style = bold, label=""];
34->37 [style = bold, label=""];
6->20 [style = solid, label="NUM_NODES"];
7->21 [style = bold, label=""];
41->42 [style = bold, label=""];
}
