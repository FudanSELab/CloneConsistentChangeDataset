digraph {
15 [style = filled, label = "return cost@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "cost = cost.multiplyBy(10)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "return planner.getCostFactory().makeCost(rowCount,0,0)@@@30@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final double leftRowCount = left.estimateRowCount(mq)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RelOptCost cost = planner.getCostFactory().makeCost(rowCount,0,0)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "double rowCount = mq.getRowCount(this)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "rowCount = RelMdUtil.addEpsilon(rowCount)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "computeSelfCost['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final double rightRowCount = right.estimateRowCount(mq)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RelNodes.COMPARATOR.compare(left,right) > 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "computeSelfCost['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "joinType@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RelMetadataQuery mq@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "isSemiJoin()@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return planner.getCostFactory().makeCost(rowCount,0,0).multiplyBy(.01d)@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "computeSelfCost['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Double.isInfinite(leftRowCount)@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "rowCount += Util.nLogN(leftRowCount)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RelOptPlanner planner@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RelOptPlanner planner@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rowCount = rightRowCount@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RelMetadataQuery mq@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "rowCount = RelMdUtil.addEpsilon(rowCount)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rowCount += rightRowCount@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "rowCount = leftRowCount@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Double.isInfinite(rightRowCount)@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0->18 [style = solid, label="rowCount"];
11->3 [style = bold, label=""];
3->10 [style = bold, label=""];
11->3 [style = dotted, label="true"];
0->3 [style = solid, label="rowCount"];
3->18 [style = solid, label="rowCount"];
17->14 [style = dotted, label="true"];
22->8 [style = bold, label=""];
5->18 [style = solid, label="rowCount"];
8->5 [style = bold, label=""];
17->16 [style = dotted, label="true"];
8->4 [style = bold, label=""];
12->22 [style = dotted, label="false"];
19->15 [style = solid, label="cost"];
8->25 [style = dotted, label="false"];
23->20 [style = dotted, label="true"];
13->18 [style = solid, label="rowCount"];
9->4 [style = solid, label="rowCount"];
21->24 [style = dotted, label="true"];
12->13 [style = dotted, label="true"];
19->15 [style = bold, label=""];
23->14 [style = dotted, label="true"];
21->24 [style = bold, label=""];
10->25 [style = solid, label="rightRowCount"];
11->6 [style = bold, label=""];
25->4 [style = solid, label="rowCount"];
2->14 [style = dotted, label="true"];
0->11 [style = bold, label=""];
23->0 [style = bold, label=""];
5->4 [style = bold, label=""];
12->13 [style = bold, label=""];
16->7 [style = solid, label="mq"];
6->9 [style = bold, label=""];
6->10 [style = bold, label=""];
8->18 [style = bold, label=""];
12->22 [style = bold, label=""];
25->21 [style = bold, label=""];
2->1 [style = dotted, label="true"];
14->10 [style = solid, label="mq"];
10->7 [style = bold, label=""];
7->13 [style = solid, label="leftRowCount"];
7->12 [style = solid, label="leftRowCount"];
10->8 [style = solid, label="rightRowCount"];
11->10 [style = bold, label=""];
7->12 [style = bold, label=""];
5->21 [style = bold, label=""];
18->19 [style = bold, label=""];
5->4 [style = solid, label="rowCount"];
20->10 [style = solid, label="mq"];
14->7 [style = solid, label="mq"];
8->25 [style = bold, label=""];
11->6 [style = dotted, label="true"];
21->4 [style = dotted, label="false"];
13->4 [style = solid, label="rowCount"];
16->10 [style = solid, label="mq"];
5->18 [style = bold, label=""];
0->9 [style = solid, label="rowCount"];
8->5 [style = dotted, label="true"];
6->9 [style = dotted, label="true"];
4->18 [style = dashed, label="0"];
2->0 [style = bold, label=""];
0->4 [style = solid, label="rowCount"];
13->8 [style = bold, label=""];
3->4 [style = solid, label="rowCount"];
7->22 [style = solid, label="leftRowCount"];
21->4 [style = bold, label=""];
10->5 [style = solid, label="rightRowCount"];
12->8 [style = bold, label=""];
17->0 [style = bold, label=""];
9->18 [style = solid, label="rowCount"];
9->10 [style = bold, label=""];
20->7 [style = solid, label="mq"];
}
