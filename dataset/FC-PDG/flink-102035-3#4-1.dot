digraph {
17 [style = filled, label = "testReadFileWithPartitionValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertFalse(row.isNullAt(2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "FileInputSplit(( splits = createSplits(testFileFlat,4)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(1844737280400L,totalF0)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertNotNull(row.getString(1).toString())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BaseRow row = reader.nextRecord(null)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(row.isNullAt(0))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RowData row = reader.nextRecord(null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertFalse(row.isNullAt(1))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long cnt = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "totalF0 += row.getInt(0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testReadFileInSplits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "totalF0 += row.getInt(1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testReadFileInSplits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(1920800,cnt)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertNotNull(row.getString(2).toString())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(1920800,cnt)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "cnt++@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertNotNull(row.getString(0).toString())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "!reader.reachedEnd()@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cnt++@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "long totalF0 = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1844737280400L,totalF0)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
7->10 [style = dotted, label="true"];
21->19 [style = bold, label=""];
17->6 [style = bold, label=""];
7->10 [style = bold, label=""];
3->2 [style = solid, label="cnt"];
0->9 [style = solid, label="totalF0"];
7->19 [style = dotted, label="true"];
11->6 [style = bold, label=""];
2->9 [style = bold, label=""];
15->16 [style = bold, label=""];
8->2 [style = solid, label="cnt"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
7->12 [style = dotted, label="true"];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
20->21 [style = bold, label=""];
7->5 [style = dotted, label="true"];
7->20 [style = dotted, label="true"];
5->1 [style = bold, label=""];
18->20 [style = bold, label=""];
22->18 [style = bold, label=""];
7->2 [style = bold, label=""];
12->8 [style = bold, label=""];
7->4 [style = dotted, label="true"];
0->16 [style = solid, label="totalF0"];
1->12 [style = bold, label=""];
10->4 [style = bold, label=""];
19->15 [style = solid, label="cnt"];
7->18 [style = dotted, label="true"];
7->15 [style = bold, label=""];
1->9 [style = solid, label="totalF0"];
12->18 [style = dashed, label="0"];
3->8 [style = solid, label="cnt"];
13->6 [style = bold, label=""];
7->22 [style = dotted, label="true"];
7->1 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
7->21 [style = dotted, label="true"];
5->22 [style = bold, label=""];
4->5 [style = bold, label=""];
19->7 [style = bold, label=""];
10->14 [style = dashed, label="0"];
3->15 [style = solid, label="cnt"];
20->16 [style = solid, label="totalF0"];
3->19 [style = solid, label="cnt"];
14->4 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
