digraph {
9 [style = filled, label = "assertThat(matcher.isMatch(INPUT2,1,0,2)).isEqualTo(0)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(2,matcher.size())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(matcher.isMatch(BUFFER2,1,0,2)).isEqualTo(0)@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(matcher.isMatch(BUFFER2,1,0,3)).isEqualTo(2)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(matcher.isMatch(BUFFER2,1,1,BUFFER2_LENGTH)).isEqualTo(2)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testMatcherIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testMatcherIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(matcher.isMatch(INPUT2,1,0,3)).isEqualTo(2)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testMatcherIndices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final StringMatcher matcher = StringMatcherFactory.INSTANCE.stringMatcher(\"bc\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(matcher.isMatch(INPUT2,1,1,INPUT2_LENGTH)).isEqualTo(2)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
10->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
6->9 [style = bold, label=""];
1->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
7->6 [style = bold, label=""];
2->5 [style = bold, label=""];
8->3 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
