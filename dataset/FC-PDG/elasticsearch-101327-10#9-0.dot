digraph {
44 [style = filled, label = "_errHandler.recover(this,re)@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "enterOuterAlt(_localctx,1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "getInterpreter().adaptivePredict(_input,91,_ctx)@@@30@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "{setState(580)identifier()}@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "enterOuterAlt(_localctx,7)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "_localctx = new StarContext(_localctx)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "{setState(572)_la = _input.LA(1)if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)) {{setState(569)qualifiedName()setState(570)match(DOT)}}setState(574)match(ASTERISK)}@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "_errHandler.sync(this)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "setState(586)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TableIdentifierContext _localctx = new TableIdentifierContext(_ctx,getState())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RecognitionException re@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "enterOuterAlt(_localctx,4)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{exitRule()}@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "enterOuterAlt(_localctx,9)@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "_localctx = new DereferenceContext(_localctx)@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "_localctx.exception = re@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "_localctx.exception = re@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "enterOuterAlt(_localctx,10)@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "tableIdentifier['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "return _localctx@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{setState(581)qualifiedName()}@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "enterRule(_localctx,58,RULE_primaryExpression)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "enterOuterAlt(_localctx,2)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "{setState(567)constant()}@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "primaryExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return _localctx@@@108@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "{setState(565)castExpression()}@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "_localctx = new ConstantDefaultContext(_localctx)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "_localctx = new ExtractContext(_localctx)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "_localctx = new FunctionContext(_localctx)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "{exitRule()}@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "_localctx = new SubqueryExpressionContext(_localctx)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "getInterpreter().adaptivePredict(_input,90,_ctx)@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "RecognitionException re@@@100@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "{setState(568)match(ASTERISK)}@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "enterOuterAlt(_localctx,5)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "enterOuterAlt(_localctx,3)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "{setState(582)match(T__0)setState(583)expression()setState(584)match(T__1)}@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "enterOuterAlt(_localctx,1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "enterOuterAlt(_localctx,8)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "enterOuterAlt(_localctx,6)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "PrimaryExpressionContext _localctx = new PrimaryExpressionContext(_ctx,getState())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "_localctx = new CastContext(_localctx)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "setState(695)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "setState(704)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "int _la@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "{setState(576)match(T__0)setState(577)query()setState(578)match(T__1)}@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "{setState(686)_la = _input.LA(1)if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)) {{setState(683)((TableIdentifierContext)_localctx).catalog = identifier()setState(684)match(T__3)}}setState(688)match(TABLE_IDENTIFIER)}@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "_localctx = new StarContext(_localctx)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "_errHandler.reportError(this,re)@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "getInterpreter().adaptivePredict(_input,78,_ctx)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "enterRule(_localctx,88,RULE_tableIdentifier)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "getInterpreter().adaptivePredict(_input,92,_ctx)@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "enterOuterAlt(_localctx,2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "_localctx = new ColumnReferenceContext(_localctx)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tableIdentifier['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "_localctx = new ParenthesizedExpressionContext(_localctx)@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "enterRule(_localctx,86,RULE_tableIdentifier)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "(((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "{setState(566)extractExpression()}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "_errHandler.recover(this,re)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "(((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)@@@43@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "{setState(575)functionExpression()}@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "getInterpreter().adaptivePredict(_input,89,_ctx)@@@30@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "{setState(692)_errHandler.sync(this)switch (getInterpreter().adaptivePredict(_input,89,_ctx)) {case 1:{setState(689)((TableIdentifierContext)_localctx).catalog = identifier()setState(690)match(T__3)}breaksetState(694)((TableIdentifierContext)_localctx).name = identifier()}@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "_errHandler.reportError(this,re)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->46 [style = solid, label="_localctx"];
40->50 [style = dotted, label="true"];
32->35 [style = bold, label=""];
21->12 [style = dotted, label="true"];
17->5 [style = solid, label="_localctx"];
60->29 [style = solid, label="_localctx"];
40->39 [style = dotted, label="true"];
40->49 [style = bold, label=""];
3->20 [style = solid, label="_localctx"];
21->11 [style = dotted, label="true"];
63->48 [style = bold, label=""];
55->29 [style = solid, label="_localctx"];
44->35 [style = bold, label=""];
40->55 [style = bold, label=""];
4->15 [style = bold, label=""];
40->28 [style = dotted, label="true"];
53->44 [style = bold, label=""];
40->31 [style = dotted, label="true"];
46->31 [style = bold, label=""];
51->53 [style = bold, label=""];
48->61 [style = bold, label=""];
37->60 [style = solid, label="_localctx"];
25->35 [style = bold, label=""];
38->15 [style = bold, label=""];
3->4 [style = bold, label=""];
15->17 [style = solid, label="_la"];
40->46 [style = dotted, label="true"];
46->29 [style = solid, label="_localctx"];
59->24 [style = solid, label="_localctx"];
30->65 [style = bold, label=""];
63->48 [style = solid, label="_localctx"];
6->18 [style = dotted, label="true"];
13->21 [style = dashed, label="0"];
43->35 [style = bold, label=""];
37->28 [style = solid, label="_localctx"];
37->38 [style = bold, label=""];
40->47 [style = bold, label=""];
37->59 [style = solid, label="_localctx"];
37->27 [style = solid, label="_localctx"];
40->63 [style = bold, label=""];
26->35 [style = bold, label=""];
40->55 [style = dotted, label="true"];
37->55 [style = solid, label="_localctx"];
20->15 [style = bold, label=""];
19->3 [style = bold, label=""];
52->35 [style = bold, label=""];
40->49 [style = dotted, label="true"];
13->9 [style = dotted, label="true"];
63->29 [style = solid, label="_localctx"];
28->34 [style = solid, label="_localctx"];
33->44 [style = dotted, label="true"];
34->54 [style = bold, label=""];
40->30 [style = dotted, label="true"];
46->31 [style = solid, label="_localctx"];
37->38 [style = solid, label="_localctx"];
21->22 [style = dotted, label="true"];
40->48 [style = dotted, label="true"];
13->40 [style = dashed, label="0"];
36->14 [style = bold, label=""];
13->11 [style = bold, label=""];
58->56 [style = bold, label=""];
40->62 [style = dotted, label="true"];
47->29 [style = solid, label="_localctx"];
37->63 [style = solid, label="_localctx"];
55->50 [style = solid, label="_localctx"];
23->14 [style = bold, label=""];
21->9 [style = bold, label=""];
21->9 [style = dotted, label="true"];
17->2 [style = bold, label=""];
40->47 [style = dotted, label="true"];
21->11 [style = bold, label=""];
31->41 [style = bold, label=""];
60->58 [style = solid, label="_localctx"];
11->17 [style = bold, label=""];
59->29 [style = solid, label="_localctx"];
45->52 [style = bold, label=""];
14->21 [style = bold, label=""];
15->36 [style = bold, label=""];
40->42 [style = dotted, label="true"];
49->29 [style = solid, label="_localctx"];
49->45 [style = bold, label=""];
40->34 [style = dotted, label="true"];
54->35 [style = bold, label=""];
57->37 [style = bold, label=""];
35->29 [style = bold, label=""];
4->38 [style = dashed, label="0"];
3->9 [style = solid, label="_localctx"];
6->18 [style = bold, label=""];
3->37 [style = dashed, label="0"];
37->47 [style = solid, label="_localctx"];
0->5 [style = solid, label="_localctx"];
65->35 [style = bold, label=""];
28->29 [style = solid, label="_localctx"];
40->59 [style = bold, label=""];
56->35 [style = bold, label=""];
37->49 [style = solid, label="_localctx"];
6->10 [style = dotted, label="true"];
60->58 [style = bold, label=""];
33->53 [style = dotted, label="true"];
8->22 [style = dashed, label="0"];
11->47 [style = dashed, label="0"];
18->10 [style = bold, label=""];
10->16 [style = bold, label=""];
13->8 [style = dotted, label="true"];
4->20 [style = dashed, label="0"];
40->27 [style = bold, label=""];
3->11 [style = solid, label="_localctx"];
24->25 [style = bold, label=""];
39->32 [style = bold, label=""];
13->11 [style = dotted, label="true"];
33->51 [style = dotted, label="true"];
55->50 [style = bold, label=""];
13->9 [style = bold, label=""];
14->13 [style = bold, label=""];
40->27 [style = dotted, label="true"];
40->58 [style = dotted, label="true"];
1->23 [style = dashed, label="0"];
27->29 [style = solid, label="_localctx"];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
41->35 [style = bold, label=""];
50->26 [style = bold, label=""];
61->35 [style = bold, label=""];
15->23 [style = bold, label=""];
42->43 [style = bold, label=""];
9->0 [style = bold, label=""];
28->34 [style = bold, label=""];
13->12 [style = dotted, label="true"];
64->39 [style = solid, label="_localctx"];
0->2 [style = bold, label=""];
40->24 [style = dotted, label="true"];
64->29 [style = solid, label="_localctx"];
40->64 [style = bold, label=""];
40->60 [style = dotted, label="true"];
40->63 [style = dotted, label="true"];
40->28 [style = bold, label=""];
9->49 [style = dashed, label="0"];
16->2 [style = bold, label=""];
64->39 [style = bold, label=""];
27->42 [style = solid, label="_localctx"];
7->3 [style = bold, label=""];
15->56 [style = solid, label="_la"];
47->30 [style = bold, label=""];
40->46 [style = bold, label=""];
27->42 [style = bold, label=""];
3->4 [style = solid, label="_localctx"];
3->20 [style = bold, label=""];
1->36 [style = dashed, label="0"];
47->30 [style = solid, label="_localctx"];
33->51 [style = bold, label=""];
40->59 [style = dotted, label="true"];
40->64 [style = dotted, label="true"];
59->24 [style = bold, label=""];
1->14 [style = bold, label=""];
49->45 [style = solid, label="_localctx"];
40->45 [style = dotted, label="true"];
40->60 [style = bold, label=""];
37->64 [style = solid, label="_localctx"];
14->40 [style = bold, label=""];
6->16 [style = dotted, label="true"];
}
