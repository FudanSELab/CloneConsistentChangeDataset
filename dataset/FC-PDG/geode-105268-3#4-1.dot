digraph {
1 [style = filled, label = "testExternalizable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "MyExternalizable o = new MyExternalizable(79)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DataSerializer.writeObject(o,out)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(o,dObj)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setupSerializer(\"org.apache.geode.pdx.AutoSerializableJUnitTest.MyComparator\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testComparator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Object dObj = DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "setupSerializer(\"org.apache.geode.pdx.AutoSerializableJUnitTest.MyExternalizable\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testExternalizable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "TreeSet o = new TreeSet(new MyComparator())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->6 [style = solid, label="o"];
4->6 [style = solid, label="dObj"];
5->0 [style = solid, label="out"];
4->6 [style = bold, label=""];
3->0 [style = solid, label="o"];
2->3 [style = bold, label=""];
7->0 [style = bold, label=""];
9->10 [style = bold, label=""];
3->6 [style = solid, label="o"];
7->0 [style = solid, label="out"];
11->0 [style = solid, label="o"];
2->10 [style = dashed, label="0"];
11->5 [style = bold, label=""];
3->5 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
1->2 [style = bold, label=""];
5->7 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
