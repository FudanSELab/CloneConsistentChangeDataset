digraph {
2 [style = filled, label = "range.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Map<Integer,List<TScanRangeParams>> nodeScanRanges = scanRanges.getValue()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<List<Map<Integer,List<TScanRangeParams>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Map<Integer,List<TScanRangeParams>> range = findOrInsert(assignment,addressScanRange.getKey(),new HashMap<Integer,List<TScanRangeParams>>())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "range.put(nodeScanRange.getKey(),Lists.newArrayList())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Pair<Integer,Map<Integer,List<TScanRangeParams>>> filteredScanRanges = Pair.create(scanRanges.getKey(),filteredNodeScanRanges)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "scanNodeIds.contains(scanNodeId)@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Map<TNetworkAddress,List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> addressToScanRanges = Maps.newHashMap()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Map<TNetworkAddress,List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> addressToScanRanges = Maps.newHashMap()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@43@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "FragmentExecParams params@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Map<Integer,TNetworkAddress> bucketSeqToAddress = fragmentIdToSeqToAddressMap.get(fragmentId)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Pair<Integer,Map<Integer,List<TScanRangeParams>>> filteredScanRanges = Pair.create(scanRanges.getKey(),filteredNodeScanRanges)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "int expectedInstanceNum = 1@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "instanceParam.bucketSeqSet.add(nodeScanRangeMap.first)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FInstanceExecParam instanceParam = new FInstanceExecParam(null,addressScanRange.getKey(),0,params)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<Map<Integer,List<TScanRangeParams>>> scanRange = addressScanRange.getValue()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>> scanRange = addressScanRange.getValue()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "range.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<TNetworkAddress,List<Map<Integer,List<TScanRangeParams>>>> addressToScanRanges = Maps.newHashMap()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "addressToScanRanges.get(address).add(filteredScanRanges)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "FragmentExecParams params@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "addressToScanRanges.get(address).add(filteredScanRanges)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "filteredNodeScanRanges.put(scanNodeId,nodeScanRanges.get(scanNodeId))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "addressToScanRanges.get(address).add(filteredNodeScanRanges)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "!addressToScanRanges.containsKey(address)@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>> scanRange = addressScanRange.getValue()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "computeColocateJoinInstanceParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "FragmentExecParams params@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TNetworkAddress address = bucketSeqToAddress.get(scanRanges.getKey())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "instanceParam.addBucketSeq(nodeScanRangeMap.first)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "instanceParam.perNodeScanRanges.put(nodeScanRange.getKey(),Lists.newArrayList())@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "expectedInstanceNum = Math.min(scanRange.size(),parallelExecInstanceNum)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<Integer,List<TScanRangeParams>> filteredNodeScanRanges = Maps.newHashMap()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "instanceParam.perNodeScanRanges.put(nodeScanRange.getKey(),Lists.newArrayList())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "BucketSeqToScanRange bucketSeqToScanRange = fragmentIdBucketSeqToScanRangeMap.get(fragmentId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "addressToScanRanges.put(address,Lists.newArrayList())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "parallelExecInstanceNum > 1@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "computeInstanceParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "computeColocateJoinInstanceParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "FragmentScanRangeAssignment assignment = params.scanRangeAssignment@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@41@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@33@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Set<Integer> scanNodeIds = fragmentIdToScanNodeIds.get(fragmentId)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->35 [style = bold, label=""];
54->49 [style = dotted, label="true"];
40->39 [style = dotted, label="true"];
27->32 [style = dotted, label="true"];
28->6 [style = bold, label=""];
2->26 [style = bold, label=""];
31->9 [style = bold, label=""];
21->52 [style = dashed, label="0"];
11->33 [style = dashed, label="0"];
21->15 [style = bold, label=""];
42->9 [style = bold, label=""];
21->11 [style = solid, label="scanRange"];
29->13 [style = solid, label="fragmentId"];
1->20 [style = bold, label=""];
53->44 [style = bold, label=""];
10->17 [style = bold, label=""];
23->49 [style = dashed, label="0"];
40->23 [style = dotted, label="true"];
9->43 [style = bold, label=""];
46->13 [style = solid, label="fragmentId"];
11->9 [style = bold, label=""];
54->19 [style = bold, label=""];
26->22 [style = bold, label=""];
9->26 [style = bold, label=""];
49->17 [style = solid, label="parallelExecInstanceNum"];
8->1 [style = bold, label=""];
28->0 [style = bold, label=""];
0->52 [style = bold, label=""];
2->53 [style = bold, label=""];
53->27 [style = bold, label=""];
36->33 [style = solid, label="scanRange"];
20->16 [style = bold, label=""];
45->6 [style = bold, label=""];
49->10 [style = solid, label="parallelExecInstanceNum"];
9->44 [style = solid, label="instanceParam"];
25->19 [style = bold, label=""];
13->45 [style = bold, label=""];
6->24 [style = solid, label="address"];
27->5 [style = bold, label=""];
13->14 [style = bold, label=""];
27->2 [style = bold, label=""];
4->16 [style = bold, label=""];
10->11 [style = bold, label=""];
24->28 [style = bold, label=""];
35->31 [style = bold, label=""];
9->3 [style = solid, label="instanceParam"];
12->19 [style = solid, label="fragmentId"];
25->12 [style = dotted, label="true"];
24->38 [style = bold, label=""];
0->21 [style = bold, label=""];
12->13 [style = solid, label="fragmentId"];
18->42 [style = solid, label="expectedInstanceNum"];
17->42 [style = bold, label=""];
21->36 [style = dashed, label="0"];
0->36 [style = bold, label=""];
40->29 [style = dotted, label="true"];
38->6 [style = bold, label=""];
23->17 [style = solid, label="parallelExecInstanceNum"];
13->37 [style = bold, label=""];
26->27 [style = bold, label=""];
20->41 [style = bold, label=""];
19->13 [style = bold, label=""];
52->42 [style = solid, label="scanRange"];
30->38 [style = solid, label="filteredScanRanges"];
43->27 [style = bold, label=""];
38->0 [style = bold, label=""];
29->19 [style = solid, label="fragmentId"];
11->42 [style = dashed, label="0"];
48->13 [style = bold, label=""];
25->23 [style = dotted, label="true"];
35->34 [style = bold, label=""];
53->43 [style = bold, label=""];
5->22 [style = bold, label=""];
14->6 [style = bold, label=""];
47->9 [style = solid, label="params"];
16->24 [style = dotted, label="true"];
46->48 [style = solid, label="fragmentId"];
1->30 [style = solid, label="filteredNodeScanRanges"];
52->15 [style = bold, label=""];
14->37 [style = dashed, label="0"];
22->2 [style = bold, label=""];
7->9 [style = solid, label="params"];
1->41 [style = solid, label="filteredNodeScanRanges"];
16->24 [style = bold, label=""];
2->3 [style = bold, label=""];
17->11 [style = solid, label="expectedInstanceNum"];
26->27 [style = dotted, label="true"];
40->19 [style = bold, label=""];
17->42 [style = solid, label="expectedInstanceNum"];
31->36 [style = bold, label=""];
0->15 [style = solid, label="assignment"];
4->41 [style = bold, label=""];
25->7 [style = dotted, label="true"];
16->50 [style = bold, label=""];
10->17 [style = dotted, label="true"];
3->9 [style = bold, label=""];
5->32 [style = bold, label=""];
9->31 [style = solid, label="instanceParam"];
18->10 [style = bold, label=""];
51->2 [style = bold, label=""];
20->4 [style = dotted, label="true"];
50->0 [style = bold, label=""];
14->45 [style = dashed, label="0"];
4->20 [style = bold, label=""];
3->21 [style = bold, label=""];
41->16 [style = bold, label=""];
10->33 [style = bold, label=""];
27->51 [style = dotted, label="true"];
44->9 [style = bold, label=""];
23->10 [style = solid, label="parallelExecInstanceNum"];
28->38 [style = dashed, label="0"];
24->50 [style = bold, label=""];
1->28 [style = solid, label="filteredNodeScanRanges"];
18->11 [style = solid, label="expectedInstanceNum"];
35->27 [style = bold, label=""];
27->5 [style = dotted, label="true"];
50->6 [style = bold, label=""];
19->48 [style = bold, label=""];
5->51 [style = bold, label=""];
39->9 [style = solid, label="params"];
54->46 [style = dotted, label="true"];
17->33 [style = solid, label="expectedInstanceNum"];
36->15 [style = bold, label=""];
17->33 [style = bold, label=""];
46->19 [style = solid, label="fragmentId"];
37->6 [style = bold, label=""];
33->9 [style = bold, label=""];
15->18 [style = bold, label=""];
32->2 [style = bold, label=""];
20->4 [style = bold, label=""];
54->47 [style = dotted, label="true"];
16->28 [style = bold, label=""];
4->30 [style = bold, label=""];
10->42 [style = bold, label=""];
6->8 [style = bold, label=""];
44->52 [style = bold, label=""];
41->50 [style = solid, label="filteredScanRanges"];
20->30 [style = bold, label=""];
30->16 [style = bold, label=""];
18->33 [style = solid, label="expectedInstanceNum"];
26->5 [style = dotted, label="true"];
28->50 [style = dashed, label="0"];
16->38 [style = bold, label=""];
34->27 [style = bold, label=""];
17->11 [style = bold, label=""];
9->34 [style = bold, label=""];
}
