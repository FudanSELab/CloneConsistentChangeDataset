digraph {
10 [style = filled, label = "mixinMemberNamedFacet_whenSharingSameAbstractMixin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "val objectSpec = specificationLoader.specForType().get()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "mixinMemberNamedFacet_whenSharingSameAbstractMixin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"Succeeded\",objectSpec1.getSingularName())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertTrue(objectSpec1.isMixin())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "val objectSpec1 = specificationLoader.specForType().get()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(2L,objectSpec.streamRuntimeActions(MixedIn.INCLUDED).filter(null).peek(null).count())@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"Failed\",objectSpec2.getSingularName())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertTrue(objectSpec2.isMixin())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "mixinMemberNamedFacet_whenSharingSameAbstractMixin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "val objectSpec2 = specificationLoader.specForType().get()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->2 [style = bold, label=""];
7->5 [style = bold, label=""];
0->2 [style = bold, label=""];
6->7 [style = bold, label=""];
5->0 [style = bold, label=""];
3->2 [style = bold, label=""];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
9->6 [style = bold, label=""];
0->8 [style = bold, label=""];
8->3 [style = bold, label=""];
}
