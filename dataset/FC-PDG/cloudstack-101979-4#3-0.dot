digraph {
10 [style = filled, label = "getDefaultNetworkForBasicZone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "throw new CloudRuntimeException(\"Zone \" + dc + \"is not basic.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "defaultNetworks.size() != 1@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Guest@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return defaultNetworks.get(0)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "throw new CloudRuntimeException(\"Can not found security enabled network in SG Zone \" + dc)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<NetworkVO> defaultNetworks = networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "getDefaultNetworkForAdvancedZone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DataCenter dc@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "throw new CloudRuntimeException(\"Zone \" + dc + \" is not advanced.\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "dc.getNetworkType() != NetworkType.Basic@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "defaultNetworks.size() != 1@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return defaultNetworks.get(0)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return networks.get(0)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw new CloudRuntimeException(\"Found \" + defaultNetworks.size() + \" networks of type \" + defaultTrafficType + \" when expect to find 1\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "dc.isSecurityGroupEnabled()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "CollectionUtils.isEmpty(networks)@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "DataCenter dc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<NetworkVO> networks = _networkDao.listByZoneSecurityGroup(dc.getId())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Public@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getDefaultNetworkForBasicZone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "throw new CloudRuntimeException(\"Found \" + defaultNetworks.size() + \" networks of type \" + defaultTrafficType + \" when expect to find 1\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "dc.getNetworkType() != NetworkType.Advanced@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
1->5 [style = bold, label=""];
14->16 [style = bold, label=""];
6->4 [style = solid, label="defaultTrafficType"];
1->4 [style = bold, label=""];
24->12 [style = bold, label=""];
7->1 [style = bold, label=""];
21->19 [style = bold, label=""];
0->3 [style = solid, label="dc"];
11->12 [style = dotted, label="false"];
2->6 [style = bold, label=""];
2->3 [style = bold, label=""];
6->9 [style = solid, label="defaultTrafficType"];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
19->11 [style = bold, label=""];
1->4 [style = dotted, label="true"];
16->17 [style = bold, label=""];
11->14 [style = dotted, label="false"];
11->18 [style = dotted, label="true"];
11->24 [style = bold, label=""];
0->20 [style = dashed, label="0"];
11->24 [style = dotted, label="false"];
15->18 [style = solid, label="networks"];
11->22 [style = dotted, label="true"];
15->18 [style = bold, label=""];
24->12 [style = solid, label="defaultTrafficType"];
11->15 [style = bold, label=""];
3->19 [style = dashed, label="0"];
14->16 [style = dotted, label="true"];
23->20 [style = dotted, label="true"];
18->22 [style = bold, label=""];
8->2 [style = bold, label=""];
21->11 [style = bold, label=""];
23->21 [style = bold, label=""];
2->21 [style = dashed, label="0"];
7->9 [style = dashed, label="0"];
21->19 [style = dotted, label="true"];
20->19 [style = solid, label="dc"];
20->13 [style = solid, label="dc"];
12->14 [style = bold, label=""];
18->13 [style = bold, label=""];
11->17 [style = dotted, label="false"];
10->0 [style = dotted, label="true"];
8->0 [style = dotted, label="true"];
10->2 [style = bold, label=""];
13->22 [style = bold, label=""];
24->16 [style = solid, label="defaultTrafficType"];
6->7 [style = bold, label=""];
11->15 [style = dotted, label="true"];
6->9 [style = bold, label=""];
6->7 [style = solid, label="defaultTrafficType"];
9->1 [style = bold, label=""];
4->5 [style = bold, label=""];
18->13 [style = dotted, label="true"];
}
