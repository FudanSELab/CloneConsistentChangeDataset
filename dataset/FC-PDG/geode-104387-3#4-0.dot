digraph {
471 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1041@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
421 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@596@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
225 [style = filled, label = "this.txMgr.begin()@@@666@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
608 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1348@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
176 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@586@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
769 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@349@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
347 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1475@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
395 [style = filled, label = "EntryNotFoundException ok@@@385@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
456 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@707@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
738 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1197@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
772 [style = filled, label = "this.txMgr.commit()@@@306@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
357 [style = filled, label = "reg1.localDestroy(\"key1\")@@@417@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@397@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
770 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@305@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
267 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1338@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
685 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@703@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
219 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@710@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
511 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1163@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
552 [style = filled, label = "callbackVal.reAssert()@@@589@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
502 [style = filled, label = "callbackVal.reset()@@@352@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "callbackVal.reset()@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
185 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1358@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
441 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1092@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
885 [style = filled, label = "{}@@@895@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
540 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@1014@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
595 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1508@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
751 [style = filled, label = "{}@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
400 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@942@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "callbackVal.reAssert()@@@679@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
897 [style = filled, label = "{}@@@371@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
91 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@482@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
876 [style = filled, label = "reg1.localDestroy(\"key1\")@@@927@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
283 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1319@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "callbackVal.reAssert()@@@821@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
587 [style = filled, label = "this.txMgr.begin()@@@336@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@1350@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
249 [style = filled, label = "callbackVal.reset()@@@212@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
390 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1207@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
391 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@854@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
354 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1469@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
460 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1195@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
819 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1155@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
835 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@1345@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "EntryNotFoundException ok@@@1261@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
817 [style = filled, label = "{}@@@628@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
186 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1154@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
464 [style = filled, label = "callbackVal.reAssert()@@@717@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
775 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@551@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "callbackVal.reAssert()@@@223@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
337 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@577@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
934 [style = filled, label = "assertEquals(myTxId,this.te.getTransactionId())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@169@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
909 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
614 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1270@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
882 [style = filled, label = "{}@@@466@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
170 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1263@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
216 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1383@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
698 [style = filled, label = "this.txMgr.commit()@@@675@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
484 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@664@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
753 [style = filled, label = "callbackVal.reset()@@@1156@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
521 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@545@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
638 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1079@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
682 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@722@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@323@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
385 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@721@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
358 [style = filled, label = "this.txMgr.commit()@@@166@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
925 [style = filled, label = "assertTrue(oldListener == null)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
331 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@823@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
651 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1440@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
674 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@715@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
840 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1465@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
883 [style = filled, label = "EntryNotFoundException ok@@@1247@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
575 [style = filled, label = "this.txMgr.begin()@@@618@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
730 [style = filled, label = "callbackVal.reAssert()@@@345@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
693 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1201@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
666 [style = filled, label = "fail(\"expected EntryExistsException\")@@@464@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
694 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@785@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
353 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@815@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
585 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1199@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
848 [style = filled, label = "EntryNotFoundException ok@@@371@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
884 [style = filled, label = "EntryNotFoundException ok@@@1026@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
851 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@1123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@668@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "reg1.destroy(\"key1\")@@@934@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
728 [style = filled, label = "this.txMgr.commit()@@@511@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
487 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@348@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
933 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
632 [style = filled, label = "reg1.invalidate(\"key1\")@@@932@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
171 [style = filled, label = "this.txMgr.commit()@@@391@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
871 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1017@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
485 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@619@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
932 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "fail(\"expected EntryExistsException\")@@@626@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@196@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1231@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
472 [style = filled, label = "callbackVal.reAssert()@@@205@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
646 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1466@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
860 [style = filled, label = "callbackVal.reset()@@@457@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
453 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@756@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@900@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@555@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
384 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@935@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
635 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@973@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
800 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1547@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
174 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@1126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@219@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
574 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1084@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
804 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@1124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
544 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1297@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
382 [style = filled, label = "EntryNotFoundException ok@@@798@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
167 [style = filled, label = "this.txMgr.begin()@@@705@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
834 [style = filled, label = "this.txMgr.begin()@@@1112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "callbackVal.reAssert()@@@754@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
433 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@469@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
466 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1550@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
500 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@557@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
470 [style = filled, label = "callbackVal.reAssert()@@@328@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
454 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@885@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
246 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@351@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
301 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1023@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
640 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@515@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "callbackVal.reset()@@@886@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
743 [style = filled, label = "reg1.create(\"key1\",\"ex\")@@@625@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
807 [style = filled, label = "{}@@@1247@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
527 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@631@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
435 [style = filled, label = "reg1.destroy(\"key1\")@@@1463@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
222 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@264@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
577 [style = filled, label = "this.txMgr.commit()@@@818@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
218 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1272@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@643@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
702 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@215@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
697 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1038@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
838 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1400@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
873 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@437@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
929 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
426 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1432@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
562 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@748@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
677 [style = filled, label = "reg1.invalidate(\"key1\")@@@161@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
731 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@222@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
356 [style = filled, label = "this.txMgr.commit()@@@202@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
342 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@331@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
935 [style = filled, label = "assertEquals(0,this.listenerClose)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
718 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@167@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
497 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@850@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
642 [style = filled, label = "callbackVal.reAssert()@@@168@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@208@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
294 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@861@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
643 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@266@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
532 [style = filled, label = "this.txMgr.commit()@@@342@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
332 [style = filled, label = "this.txMgr.begin()@@@887@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@338@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1006@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
766 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@373@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
224 [style = filled, label = "callbackVal.reAssert()@@@553@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
163 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1501@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1307@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
311 [style = filled, label = "{}@@@791@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
499 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@430@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
201 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1424@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
618 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
520 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@752@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
579 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@460@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
321 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@597@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
318 [style = filled, label = "reg1.destroy(\"key1\")@@@1161@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
393 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@359@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "callbackVal.reset()@@@1071@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
570 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@800@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
701 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1496@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
653 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@329@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
901 [style = filled, label = "assertEquals(1,this.listenerClose)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
938 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
226 [style = filled, label = "this.txMgr.begin()@@@965@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
688 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@1131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
507 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@745@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
879 [style = filled, label = "testTxAlgebra['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
689 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@977@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
778 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@810@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
508 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1028@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
363 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1083@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
295 [style = filled, label = "this.txMgr.commit()@@@972@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
388 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
645 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@1464@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
892 [style = filled, label = "{}@@@1254@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
941 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1552@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
858 [style = filled, label = "{}@@@378@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
913 [style = filled, label = "assertEquals(1,this.listenerClose)@@@79@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@518@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@301@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
322 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@366@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
341 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@940@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
477 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@676@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
734 [style = filled, label = "callbackVal.reAssert()@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
686 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@708@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
836 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@1036@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
461 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@270@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
448 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@814@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
590 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@807@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
637 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@943@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
721 [style = filled, label = "reg1.invalidate(\"key1\")@@@382@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
650 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1042@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
184 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@595@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
408 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1500@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
427 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@480@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
880 [style = filled, label = "{}@@@805@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
894 [style = filled, label = "{}@@@385@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1435@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "fail(\"expected EntryExistsException\")@@@1119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "this.txMgr.commit()@@@937@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
457 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@999@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
636 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1196@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
809 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@888@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
350 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1312@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
496 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@159@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
758 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@859@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
333 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@200@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@327@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
286 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@461@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
829 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1044@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
324 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1421@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
359 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@162@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
780 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@718@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
569 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@332@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
310 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1080@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
276 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@396@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
450 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@504@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
213 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@1384@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
517 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@158@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1235@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
597 [style = filled, label = "callbackVal.reset()@@@156@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@544@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
761 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@253@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
271 [style = filled, label = "callbackVal.reAssert()@@@1273@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
420 [style = filled, label = "reg1.create(\"key1\",\"ex\")@@@257@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
365 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1513@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
338 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@425@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
430 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@137@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
756 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@782@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
841 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "callbackVal.reAssert()@@@1434@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1085@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
243 [style = filled, label = "reg1.invalidate(\"key1\")@@@889@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
245 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@824@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
684 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@713@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
159 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1467@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
394 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1168@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
584 [style = filled, label = "callbackVal.assertInvalidateCnt(1)@@@1351@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
679 [style = filled, label = "callbackVal.reset()@@@929@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
737 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1346@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
229 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@172@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
217 [style = filled, label = "callbackVal.reset()@@@316@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
230 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@554@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
919 [style = filled, label = "testListener['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
181 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
214 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1462@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
373 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@320@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "callbackVal.reAssert()@@@431@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
221 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@981@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
327 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1458@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
376 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1543@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
529 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@513@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
300 [style = filled, label = "this.txMgr.commit()@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
844 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@746@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
600 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@347@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
172 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1073@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
264 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@846@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
863 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@720@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
768 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1478@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
816 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@318@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "callbackVal.reAssert()@@@638@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
939 [style = filled, label = "this.txMgr.rollback()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
481 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@684@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
560 [style = filled, label = "callbackVal.assertInvalidateCnt(1)@@@512@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
757 [style = filled, label = "this.txMgr.commit()@@@1468@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
915 [style = filled, label = "this.txMgr.begin()@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "reg1.localInvalidate(\"key1\",\"value1\")@@@1302@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
273 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@968@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
606 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@214@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
242 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1391@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
764 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@864@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
479 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@669@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
695 [style = filled, label = "callbackVal.reset()@@@297@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
808 [style = filled, label = "this.txMgr.begin()@@@1001@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
854 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@228@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
465 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@1249@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
810 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1070@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
862 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@343@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
802 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1048@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1233@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
220 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@275@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
233 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@671@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
277 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@160@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
926 [style = filled, label = "assertEquals(1,this.listenerAfterRollback)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EntryExistsException ok@@@466@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
644 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@642@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
209 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1256@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
304 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1279@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
455 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@978@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1470@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1082@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
247 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@897@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
927 [style = filled, label = "this.txMgr.rollback()@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1502@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "this.txMgr.begin()@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
547 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1237@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
713 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@1162@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
612 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@640@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
535 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1165@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
512 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@163@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
868 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@641@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
383 [style = filled, label = "this.txMgr.commit()@@@221@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
726 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1540@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
528 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@330@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
510 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@723@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1401@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
826 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1317@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
298 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@822@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
401 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@1426@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "reg1.destroy(\"key1\")@@@322@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1360@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
417 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@170@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
537 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@398@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
671 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1438@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@468@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@783@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
657 [style = filled, label = "{LocalRegion.NonTXEntry nonTXe = (LocalRegion.NonTXEntry)reg1.getEntry(\"key1\")assertTrue(nonTXe.getRegionEntry().isInvalid())}@@@1394@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
468 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@789@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
389 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1399@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
419 [style = filled, label = "{}@@@1033@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
492 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@227@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1439@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
473 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@594@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
583 [style = filled, label = "callbackVal.reAssert()@@@1086@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
610 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@976@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
707 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@358@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
438 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@550@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
340 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1343@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
307 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@304@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
282 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1275@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
814 [style = filled, label = "this.txMgr.begin()@@@1461@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
815 [style = filled, label = "callbackVal.assertUpdateWriterCnt(2)@@@471@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
416 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@753@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
811 [style = filled, label = "{}@@@1026@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@817@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
489 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@933@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
366 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@909@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "callbackVal.reset()@@@249@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
720 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@974@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
274 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@263@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
541 [style = filled, label = "reg1.localDestroy(\"key1\")@@@539@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
539 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@226@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
630 [style = filled, label = "this.txMgr.begin()@@@298@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
265 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@616@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
179 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@635@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
609 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1238@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
312 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@456@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
755 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1546@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
870 [style = filled, label = "reg1.localDestroy(\"key1\")@@@969@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
742 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1310@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@218@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@709@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
269 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1303@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
423 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1431@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
712 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@255@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
589 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@820@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
787 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@644@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@175@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
717 [style = filled, label = "this.txMgr.commit()@@@857@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@273@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
549 [style = filled, label = "reg1.invalidate(\"key1\")@@@1003@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
616 [style = filled, label = "{}@@@1033@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
907 [style = filled, label = "this.txMgr.rollback()@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@311@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
259 [style = filled, label = "{}@@@378@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
452 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1206@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
207 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@581@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "reg1.localDestroy(\"key1\")@@@500@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
910 [style = filled, label = "oldListener = this.txMgr.setListener(new TransactionListener(){@Override public void afterCommit(TransactionEvent event){listenerAfterCommit = 2te = event}@Override public void afterFailedCommit(TransactionEvent event){listenerAfterFailedCommit = 2}@Override public void afterRollback(TransactionEvent event){listenerAfterRollback = 2te = event}@Override public void close(){listenerClose = 2}})@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
594 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1318@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
478 [style = filled, label = "callbackVal.assertCreateWriterCnt(2)@@@389@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
710 [style = filled, label = "this.txMgr.begin()@@@195@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
715 [style = filled, label = "callbackVal.reset()@@@1228@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
905 [style = filled, label = "CommitConflictException unexpected@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
180 [style = filled, label = "callbackVal.reset()@@@1498@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "callbackVal.reset()@@@541@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
261 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1276@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
299 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1194@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
754 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@475@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
238 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@552@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
444 [style = filled, label = "reg1.invalidate(\"key1\")@@@1030@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
805 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@1078@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "this.txMgr.begin()@@@1229@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1198@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
212 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1077@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
681 [style = filled, label = "callbackVal.assertCreateListenerCnt(0,false)@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
906 [style = filled, label = "fail(\"did not expect \" + unexpected)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
251 [style = filled, label = "reg1.destroy(\"key1\")@@@198@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
565 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1473@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
790 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@580@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
192 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@908@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
364 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@1242@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
346 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@637@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
626 [style = filled, label = "{}@@@260@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
165 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@435@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
889 [style = filled, label = "EntryExistsException ok@@@121@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@334@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
250 [style = filled, label = "reg1.destroy(\"key1\")@@@795@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
279 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1542@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
443 [style = filled, label = "fail(\"expected EntryExistsException\")@@@893@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
378 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
843 [style = filled, label = "assertEquals(null,reg1.getEntry(\"key1\").getValue())@@@591@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
525 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@171@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
596 [style = filled, label = "AttributesMutator<String,String> mutator = this.region.getAttributesMutator()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
257 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1344@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
289 [style = filled, label = "this.txMgr.begin()@@@213@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
303 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@216@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
315 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@796@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
665 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@164@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
831 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@905@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
605 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@203@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
518 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@849@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
557 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@340@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "callbackVal.reAssert()@@@476@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
732 [style = filled, label = "callbackVal.reAssert()@@@1045@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
869 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@509@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
850 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@760@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "{}@@@1121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
752 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1024@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
432 [style = filled, label = "this.txMgr.begin()@@@157@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
297 [style = filled, label = "this.txMgr.begin()@@@1342@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
550 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@632@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@274@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
615 [style = filled, label = "callbackVal.reset()@@@779@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "reg1.create(\"key1\",\"value2\")@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "this.txMgr.commit()@@@636@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
386 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@424@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
476 [style = filled, label = "reg1.localDestroy(\"key1\")@@@303@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1340@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
362 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1002@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
903 [style = filled, label = "assertEquals(1,this.listenerAfterCommit)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
898 [style = filled, label = "EntryExistsException ok@@@1121@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
660 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@1166@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
198 [style = filled, label = "EntryNotFoundException ok@@@385@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
253 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@592@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
922 [style = filled, label = "assertEquals(0,this.listenerAfterRollback)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
566 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1049@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
256 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@966@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
369 [style = filled, label = "reg1.localDestroy(\"key1\")@@@852@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
429 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
846 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@851@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
260 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@634@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "this.txMgr.begin()@@@458@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
182 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1298@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
856 [style = filled, label = "CountingCacheWriter cntWriter = new CountingCacheWriter(){@Override public void close(){}@Override public void reset(){this.bCreateCalls = this.bUpdateCalls = this.bDestroyCalls = this.bLocalDestroyCalls = 0}@Override public void beforeCreate(EntryEvent e){++this.bCreateCalls}@Override public void beforeUpdate(EntryEvent e){++this.bUpdateCalls}@Override public void beforeDestroy(EntryEvent e){++this.bDestroyCalls}@Override public void beforeRegionDestroy(RegionEvent e){fail(\"Unexpected beforeRegionDestroy in testTxAlgebra\")}@Override public void beforeRegionClear(RegionEvent e){fail(\"Unexpected beforeRegionClear in testTxAlgebra\")}@Override public int getBeforeCreateCalls(){return this.bCreateCalls}@Override public int getBeforeUpdateCalls(){return this.bUpdateCalls}@Override public int getBeforeDestroyCalls(boolean fetchLocal){return fetchLocal? this.bLocalDestroyCalls: this.bDestroyCalls}}@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
223 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1090@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
200 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@620@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
418 [style = filled, label = "assertNull(reg1.getEntry(\"key1\").getValue())@@@1353@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1389@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
849 [style = filled, label = "callbackVal.reAssert()@@@975@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fail(\"expected EntryExistsException\")@@@258@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
670 [style = filled, label = "callbackVal.reAssert()@@@1314@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
586 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
553 [style = filled, label = "reg1.localDestroy(\"key1\")@@@672@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
818 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@858@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
262 [style = filled, label = "this.txMgr.commit()@@@1506@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
662 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@938@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
735 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@519@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
789 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@262@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@856@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
501 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@369@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
302 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1339@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
703 [style = filled, label = "EntryNotFoundException ok@@@805@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
767 [style = filled, label = "callbackVal.assertCreateWriterCnt(2)@@@426@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "EntryNotFoundException ok@@@1254@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@677@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
306 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1089@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
413 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@759@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
602 [style = filled, label = "this.txMgr.begin()@@@1381@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
292 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1572@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
545 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1160@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
493 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1471@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@674@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
268 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
436 [style = filled, label = "callbackVal.reset()@@@578@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
446 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
601 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@313@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
763 [style = filled, label = "callbackVal.reAssert()@@@1548@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
564 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1390@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "this.txMgr.begin()@@@743@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
687 [style = filled, label = "this.txMgr.commit()@@@325@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@906@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@963@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
252 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1551@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
711 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@220@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
801 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
652 [style = filled, label = "callbackVal.reset()@@@194@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1227@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
680 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1087@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
581 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@630@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
825 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@392@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@590@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
348 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1245@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "reg1.invalidate(\"key1\")@@@1347@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
706 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@744@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
760 [style = filled, label = "callbackVal.reset()@@@617@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@621@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1010@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
178 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1158@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
739 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@582@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
442 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1534@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@1264@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
727 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@350@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
852 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@278@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
918 [style = filled, label = "assertEquals(2,this.listenerClose)@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
278 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@585@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
921 [style = filled, label = "TransactionId myTxId = this.txMgr.getTransactionId()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
328 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1313@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
381 [style = filled, label = "this.txMgr.begin()@@@780@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
406 [style = filled, label = "EntryNotFoundException ok@@@805@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
281 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@712@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
495 [style = filled, label = "reg1.destroy(\"key1\")@@@546@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
543 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@508@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
911 [style = filled, label = "this.txMgr.begin()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
285 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@558@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@307@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
202 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@354@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
236 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1169@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
700 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@1306@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
526 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@521@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
747 [style = filled, label = "assertNull(reg1.getEntry(\"key1\").getValue())@@@1393@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
821 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1516@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
514 [style = filled, label = "this.txMgr.commit()@@@549@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
762 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1301@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
599 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1173@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
622 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1509@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
673 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@757@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
723 [style = filled, label = "reg1.create(\"key1\",\"value2\")@@@463@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
431 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@1021@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
555 [style = filled, label = "this.txMgr.begin()@@@1499@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
368 [style = filled, label = "callbackVal.reAssert()@@@393@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
617 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@681@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
832 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@593@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
716 [style = filled, label = "callbackVal.reset()@@@1380@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1266@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
591 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@685@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1172@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
793 [style = filled, label = "reg1.localDestroy(\"key1\")@@@845@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
839 [style = filled, label = "callbackVal.reset()@@@1460@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
891 [style = filled, label = "{}@@@798@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
314 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
355 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@432@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
361 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@470@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@472@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
445 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1515@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "callbackVal.reset()@@@847@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
231 [style = filled, label = "this.txMgr.begin()@@@1157@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
827 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1476@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@802@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
568 [style = filled, label = "{}@@@1019@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
709 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@135@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
859 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1050@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
291 [style = filled, label = "callbackVal.reAssert()@@@1167@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
774 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1232@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
872 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@315@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
724 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1135@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
458 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1035@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "reg1.localDestroy(\"key1\")@@@455@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@429@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
177 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1428@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
631 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@174@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
162 [style = filled, label = "reg1.invalidate(\"key1\")@@@507@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
806 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1436@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
538 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@474@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
551 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@272@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
613 [style = filled, label = "testTxAlgebra['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
837 [style = filled, label = "reg1.invalidate(\"key1\")@@@967@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
486 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1252@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
749 [style = filled, label = "this.txMgr.commit()@@@1039@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EntryNotFoundException ok@@@1254@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
914 [style = filled, label = "TransactionListener oldListener = this.txMgr.setListener(new TransactionListener(){@Override public void afterCommit(TransactionEvent event){listenerAfterCommit = 1te = event}@Override public void afterFailedCommit(TransactionEvent event){listenerAfterFailedCommit = 1te = event}@Override public void afterRollback(TransactionEvent event){listenerAfterRollback = 1te = event}@Override public void close(){listenerClose = 1}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
352 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1191@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
195 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@980@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
588 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@622@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
258 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1387@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
483 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1265@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
741 [style = filled, label = "mutator.addCacheListener(cntListener)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
191 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@706@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EntryNotFoundException ok@@@1261@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
736 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@862@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
920 [style = filled, label = "this.txMgr.begin()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
556 [style = filled, label = "this.txMgr.commit()@@@428@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
234 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@680@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
248 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1420@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
462 [style = filled, label = "reg1.localDestroy(\"key1\")@@@296@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "reg1.localDestroy(\"key1\")@@@339@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
623 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@314@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
830 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1553@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
746 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@588@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
620 [style = filled, label = "EntryNotFoundException ok@@@1240@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
890 [style = filled, label = "{}@@@1261@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
542 [style = filled, label = "this.txMgr.begin()@@@353@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
865 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@355@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
877 [style = filled, label = "EntryExistsException ok@@@628@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
141 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1361@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1433@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
343 [style = filled, label = "callbackVal.reset()@@@502@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
491 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@302@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
494 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "callbackVal.reAssert()@@@939@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
428 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1234@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
396 [style = filled, label = "callbackVal.reAssert()@@@1130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1230@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
621 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1385@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
719 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1040@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
745 [style = filled, label = "Region<String,String> reg1 = this.region@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
795 [style = filled, label = "EntryNotFoundException ok@@@371@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
748 [style = filled, label = "reg1.destroy(\"key1\")@@@368@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
573 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@324@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
515 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@778@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
796 [style = filled, label = "{}@@@364@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
875 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@673@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
899 [style = filled, label = "{}@@@1019@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
422 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@683@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
619 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@548@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
773 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@941@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
305 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@899@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
387 [style = filled, label = "reg1.localDestroy(\"key1\")@@@663@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
193 [style = filled, label = "EntryExistsException ok@@@121@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
940 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
208 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@204@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@559@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
917 [style = filled, label = "assertTrue(this.txMgr.getListener() == null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
788 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1554@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
624 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1539@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
855 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@321@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "callbackVal.reset()@@@742@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
578 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1009@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
402 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1541@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
237 [style = filled, label = "callbackVal.reset()@@@418@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
861 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@907@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
822 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@825@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
308 [style = filled, label = "callbackVal.reset()@@@1113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
664 [style = filled, label = "callbackVal.reset()@@@1422@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
316 [style = filled, label = "callbackVal.reAssert()@@@309@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
351 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1037@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
447 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@520@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
270 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@931@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
505 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1535@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
205 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@383@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
344 [style = filled, label = "{}@@@1247@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
655 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
204 [style = filled, label = "reg1.localDestroy(\"key1\")@@@155@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
867 [style = filled, label = "this.txMgr.begin()@@@1423@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
309 [style = filled, label = "reg1.localDestroy(\"key1\")@@@193@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
725 [style = filled, label = "callbackVal.reAssert()@@@1392@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
424 [style = filled, label = "this.txMgr.commit()@@@1267@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
392 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@206@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
592 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1069@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "EntryExistsException ok@@@260@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
275 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@225@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
878 [style = filled, label = "EntryNotFoundException ok@@@812@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
227 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@265@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
669 [style = filled, label = "{}@@@1012@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
334 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@229@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
325 [style = filled, label = "this.txMgr.commit()@@@269@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
916 [style = filled, label = "closeCache()@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
330 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@866@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
874 [style = filled, label = "fail(\"expected EntryExistsException\")@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
886 [style = filled, label = "EntryNotFoundException ok@@@1033@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
705 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1268@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
548 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@816@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
397 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@310@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
326 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1386@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@344@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
239 [style = filled, label = "this.txMgr.commit()@@@1200@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
280 [style = filled, label = "this.txMgr.commit()@@@1349@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
377 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1497@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
654 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1304@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
784 [style = filled, label = "{}@@@1240@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
411 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@819@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1088@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
648 [style = filled, label = "this.txMgr.begin()@@@1537@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "this.txMgr.begin()@@@419@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
611 [style = filled, label = "callbackVal.reset()@@@335@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
799 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@380@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
930 [style = filled, label = "assertEquals(2,this.listenerAfterRollback)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
625 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@479@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
576 [style = filled, label = "reg1.localDestroy(\"key1\")@@@747@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
820 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@682@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@863@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1046@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
235 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@803@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "EntryNotFoundException ok@@@812@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
765 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertNull(ev.getNewValue())assertNull(ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@1402@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
169 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@645@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
571 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@1125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
345 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@945@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@224@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
603 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@356@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@399@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@201@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1271@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
319 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1005@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "reg1.localDestroy(\"key1\")@@@361@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "reg1.localDestroy(\"key1\")@@@788@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
714 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@277@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
516 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1007@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
287 [style = filled, label = "this.txMgr.commit()@@@587@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
407 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@230@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
866 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@254@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1091@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
288 [style = filled, label = "reg1.destroy(\"key1\")@@@1244@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
928 [style = filled, label = "assertEquals(0,this.listenerAfterCommit)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
157 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@251@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
847 [style = filled, label = "CountingCallBackValidator callbackVal = new CountingCallBackValidator(cntListener,cntWriter)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
323 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@781@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
360 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@719@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
559 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@390@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
785 [style = filled, label = "this.txMgr.commit()@@@750@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
561 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
786 [style = filled, label = "{}@@@791@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
647 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@481@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
263 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@375@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
404 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
459 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@678@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
290 [style = filled, label = "this.txMgr.commit()@@@1081@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
255 [style = filled, label = "callbackVal.reAssert()@@@1510@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
266 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@928@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
533 [style = filled, label = "reg1.localDestroy(\"key1\")@@@615@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
845 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertNull(ev.getNewValue())assertNull(ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1362@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
166 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@749@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
228 [style = filled, label = "callbackVal.assertCreateListenerCnt(0,false)@@@268@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
349 [style = filled, label = "{}@@@895@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
554 [style = filled, label = "reg1.destroy(\"key1\")@@@711@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
440 [style = filled, label = "this.txMgr.commit()@@@1164@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
463 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1437@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
722 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1308@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@793@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
678 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@210@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@422@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
451 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1538@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
469 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@395@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
379 [style = filled, label = "this.txMgr.begin()@@@930@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
628 [style = filled, label = "{}@@@364@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@276@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
425 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1170@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
672 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
676 [style = filled, label = "{LocalRegion.NonTXEntry nonTXe = (LocalRegion.NonTXEntry)reg1.getEntry(\"key1\")assertTrue(nonTXe.getRegionEntry().isInvalid())}@@@1354@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "this.txMgr.commit()@@@1430@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
937 [style = filled, label = "assertEquals(1,this.listenerAfterRollback)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
798 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@341@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
374 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@890@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
504 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1429@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
531 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1208@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
580 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1051@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "callbackVal.reAssert()@@@860@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
519 [style = filled, label = "reg1.destroy(\"key1\")@@@1016@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
604 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@741@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@865@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
895 [style = filled, label = "EntryNotFoundException ok@@@791@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
824 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@312@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
803 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@547@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "{}@@@1121@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
206 [style = filled, label = "callbackVal.reset()@@@964@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1278@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "this.txMgr.commit()@@@1309@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
367 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@540@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
633 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@1503@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
881 [style = filled, label = "EntryNotFoundException ok@@@1012@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
896 [style = filled, label = "EntryNotFoundException ok@@@378@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@944@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@199@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
370 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@173@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
699 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@517@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
704 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1047@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
482 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
794 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1205@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "callbackVal.reAssert()@@@1203@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
467 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1316@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "this.txMgr.begin()@@@317@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
403 [style = filled, label = "{}@@@812@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
522 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1504@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
183 [style = filled, label = "callbackVal.reset()@@@665@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
779 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@211@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
641 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1259@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
558 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1159@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
936 [style = filled, label = "this.txMgr.begin()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
750 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@1118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "reg1.invalidate(\"key1\")@@@1258@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
410 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@1209@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
893 [style = filled, label = "EntryExistsException ok@@@260@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
842 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@1202@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1382@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
777 [style = filled, label = "this.txMgr.begin()@@@250@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
194 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@333@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
241 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1076@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
196 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@970@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
320 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@506@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
744 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@898@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
782 [style = filled, label = "this.txMgr.commit()@@@473@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
888 [style = filled, label = "EntryNotFoundException ok@@@1240@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
593 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1004@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
740 [style = filled, label = "this.txMgr.begin()@@@848@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
210 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@362@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
164 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@434@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
498 [style = filled, label = "this.txMgr.begin()@@@1072@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
733 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@209@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "reg1.destroy(\"key1\")@@@1425@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
488 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@855@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
329 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@299@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
503 [style = filled, label = "this.txMgr.commit()@@@1127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
313 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@979@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
667 [style = filled, label = "this.txMgr.setListener(new TransactionListener(){@Override public void afterCommit(TransactionEvent event){listenerAfterCommit = 1te = event}@Override public void afterFailedCommit(TransactionEvent event){listenerAfterFailedCommit = 1te = event}@Override public void afterRollback(TransactionEvent event){listenerAfterRollback = 1te = event}@Override public void close(){listenerClose = 1}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
691 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@433@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@459@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@556@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
372 [style = filled, label = "callbackVal.assertUpdateWriterCnt(2)@@@633@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
833 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1514@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
582 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@427@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
823 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@826@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
240 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1315@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
812 [style = filled, label = "reg1.localDestroy(\"key1\")@@@884@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
475 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1305@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
232 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@670@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@501@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "callbackVal.assertCreateListenerCnt(0,false)@@@165@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
439 [style = filled, label = "this.txMgr.begin()@@@1193@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
175 [style = filled, label = "{}@@@1012@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
776 [style = filled, label = "reg1.localDestroy(\"key1\")@@@784@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
904 [style = filled, label = "assertEquals(myTxId,this.te.getTransactionId())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
449 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@853@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
729 [style = filled, label = "mutator.setCacheWriter(cntWriter)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
506 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@639@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
598 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@477@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@394@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@346@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
908 [style = filled, label = "this.txMgr.setListener(oldListener)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "callbackVal.reset()@@@1341@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
924 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
254 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1043@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
398 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
339 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@505@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
534 [style = filled, label = "callbackVal.reset()@@@1299@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
434 [style = filled, label = "EntryExistsException ok@@@628@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
572 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@755@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
414 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1075@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
490 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@478@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "TransactionId myTxId@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
189 [style = filled, label = "this.txMgr.begin()@@@579@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
828 [style = filled, label = "this.txMgr.begin()@@@503@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
781 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@388@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@971@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
783 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1269@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
639 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
887 [style = filled, label = "EntryNotFoundException ok@@@364@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
658 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1320@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
668 [style = filled, label = "{}@@@1026@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@623@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
296 [style = filled, label = "callbackVal.reset()@@@1192@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
771 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1031@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
659 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@1427@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
563 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@786@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1251@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@267@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
317 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
480 [style = filled, label = "this.txMgr.begin()@@@1300@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "CountingCacheListener cntListener = new CountingCacheListener(){@Override public void close(){}@Override public void reset(){this.aCreateCalls = this.aUpdateCalls = this.aInvalidateCalls = this.aDestroyCalls = this.aLocalDestroyCalls = 0}@Override public void afterCreate(EntryEvent e){++this.aCreateCalls}@Override public void afterUpdate(EntryEvent e){++this.aUpdateCalls}@Override public void afterInvalidate(EntryEvent e){++this.aInvalidateCalls}@Override public void afterDestroy(EntryEvent e){if (e.getOperation().isDistributed()) {++this.aDestroyCalls}{++this.aLocalDestroyCalls}}@Override public void afterRegionInvalidate(RegionEvent e){fail(\"Unexpected afterRegionInvalidate in testTxAlgebra\")}@Override public void afterRegionDestroy(RegionEvent e){if (!e.getOperation().isClose()) {fail(\"Unexpected afterRegionDestroy in testTxAlgebra\")}}@Override public void afterRegionClear(RegionEvent event){}@Override public void afterRegionCreate(RegionEvent event){}@Override public void afterRegionLive(RegionEvent event){}@Override public int getAfterCreateCalls(){return this.aCreateCalls}@Override public int getAfterUpdateCalls(){return this.aUpdateCalls}@Override public int getAfterInvalidateCalls(){return this.aInvalidateCalls}@Override public int getAfterDestroyCalls(boolean fetchLocal){return fetchLocal? this.aLocalDestroyCalls: this.aDestroyCalls}}@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
853 [style = filled, label = "this.txMgr.commit()@@@1544@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
524 [style = filled, label = "EntryExistsException ok@@@466@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
523 [style = filled, label = "reg1.invalidate(\"key1\",\"value1\")@@@1074@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
649 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1274@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
627 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@326@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
813 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1474@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@904@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
509 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1511@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
284 [style = filled, label = "this.txMgr.commit()@@@1388@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
380 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@197@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
759 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
474 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@716@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
513 [style = filled, label = "this.txMgr.begin()@@@542@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
792 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@667@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
215 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@300@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@510@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
546 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1171@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
244 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@207@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
567 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@252@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
405 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1505@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
864 [style = filled, label = "reg1.invalidate(\"key1\")@@@809@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
335 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@387@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
900 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "callbackVal.reset()@@@704@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
409 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@308@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
683 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@902@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
690 [style = filled, label = "callbackVal.reset()@@@1000@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
661 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1507@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
190 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1549@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@436@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
412 [style = filled, label = "{List<EntryEvent<String,String>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@827@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
663 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1459@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1545@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
692 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1359@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "reg1.localDestroy(\"key1\")@@@423@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
912 [style = filled, label = "assertEquals(1,this.listenerAfterRollback)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
415 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@421@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
437 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1311@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
336 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@516@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
375 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@319@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
675 [style = filled, label = "EntryNotFoundException ok@@@1019@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
536 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@936@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "callbackVal.reset()@@@1536@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
187 [style = filled, label = "callbackVal.reAssert()@@@903@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
931 [style = filled, label = "this.txMgr.commit()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
139 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1477@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
272 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@376@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
211 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@758@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
188 [style = filled, label = "this.txMgr.commit()@@@901@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
371 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1277@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
656 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@543@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
168 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@337@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
696 [style = filled, label = "reg1.localDestroy(\"key1\")@@@248@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
797 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1398@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
791 [style = filled, label = "callbackVal.reAssert()@@@1472@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
530 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@584@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
902 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
293 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@583@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
399 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@892@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
923 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
173 [style = filled, label = "{}@@@798@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
607 [style = filled, label = "callbackVal.reAssert()@@@271@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1512@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
634 [style = filled, label = "reg1.localDestroy(\"key1\")@@@357@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
203 [style = filled, label = "callbackVal.reAssert()@@@1352@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
199 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@420@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
857 [style = filled, label = "EntryExistsException ok@@@895@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@217@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
708 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@751@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
629 [style = filled, label = "callbackVal.reAssert()@@@514@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
197 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1204@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "this.txMgr.commit()@@@714@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
192->366 [style = bold, label=""];
818->758 [style = bold, label=""];
88->516 [style = bold, label=""];
800->763 [style = bold, label=""];
745->221 [style = solid, label="reg1"];
798->532 [style = bold, label=""];
670->240 [style = bold, label=""];
377->180 [style = bold, label=""];
517->496 [style = bold, label=""];
795->848 [style = bold, label=""];
18->491 [style = bold, label=""];
381->323 [style = bold, label=""];
128->486 [style = bold, label=""];
395->335 [style = bold, label=""];
290->121 [style = bold, label=""];
83->188 [style = bold, label=""];
354->47 [style = bold, label=""];
214->435 [style = bold, label=""];
554->281 [style = bold, label=""];
161->599 [style = bold, label=""];
634->707 [style = bold, label=""];
916->913 [style = bold, label=""];
441->801 [style = solid, label="events"];
474->464 [style = bold, label=""];
123->228 [style = bold, label=""];
491->476 [style = bold, label=""];
308->81 [style = bold, label=""];
631->125 [style = bold, label=""];
256->837 [style = bold, label=""];
737->113 [style = bold, label=""];
427->647 [style = bold, label=""];
640->336 [style = bold, label=""];
669->540 [style = bold, label=""];
222->227 [style = bold, label=""];
127->651 [style = bold, label=""];
511->440 [style = bold, label=""];
745->873 [style = solid, label="reg1"];
860->108 [style = bold, label=""];
753->231 [style = bold, label=""];
927->912 [style = bold, label=""];
778->448 [style = bold, label=""];
312->860 [style = bold, label=""];
313->195 [style = bold, label=""];
761->866 [style = bold, label=""];
198->395 [style = bold, label=""];
654->475 [style = bold, label=""];
30->209 [style = bold, label=""];
490->625 [style = bold, label=""];
790->321 [style = solid, label="myTxId"];
167->191 [style = bold, label=""];
208->472 [style = bold, label=""];
215->18 [style = bold, label=""];
246->502 [style = bold, label=""];
735->447 [style = bold, label=""];
609->364 [style = bold, label=""];
271->649 [style = bold, label=""];
520->416 [style = bold, label=""];
282->261 [style = bold, label=""];
762->134 [style = bold, label=""];
383->731 [style = bold, label=""];
693->842 [style = bold, label=""];
869->42 [style = bold, label=""];
205->335 [style = bold, label=""];
372->260 [style = bold, label=""];
95->742 [style = bold, label=""];
170->25 [style = bold, label=""];
494->388 [style = bold, label=""];
341->773 [style = bold, label=""];
745->330 [style = solid, label="reg1"];
227->643 [style = bold, label=""];
844->576 [style = bold, label=""];
691->164 [style = bold, label=""];
17->99 [style = bold, label=""];
801->599 [style = solid, label="events"];
467->826 [style = bold, label=""];
921->904 [style = solid, label="myTxId"];
593->319 [style = bold, label=""];
815->8 [style = bold, label=""];
330->812 [style = bold, label=""];
245->822 [style = bold, label=""];
22->30 [style = bold, label=""];
755->800 [style = bold, label=""];
112->87 [style = bold, label=""];
536->160 [style = bold, label=""];
826->594 [style = bold, label=""];
629->640 [style = bold, label=""];
255->509 [style = bold, label=""];
230->145 [style = bold, label=""];
744->305 [style = bold, label=""];
904->920 [style = bold, label=""];
745->526 [style = solid, label="reg1"];
326->258 [style = bold, label=""];
921->922 [style = bold, label=""];
588->14 [style = bold, label=""];
115->304 [style = bold, label=""];
687->627 [style = bold, label=""];
770->772 [style = bold, label=""];
75->298 [style = bold, label=""];
413->850 [style = bold, label=""];
599->352 [style = bold, label=""];
866->712 [style = bold, label=""];
164->165 [style = bold, label=""];
610->689 [style = bold, label=""];
621->326 [style = bold, label=""];
896->858 [style = bold, label=""];
343->828 [style = bold, label=""];
172->523 [style = bold, label=""];
190->466 [style = bold, label=""];
352->296 [style = bold, label=""];
938->928 [style = bold, label=""];
265->760 [style = bold, label=""];
738->117 [style = bold, label=""];
455->313 [style = bold, label=""];
322->748 [style = bold, label=""];
569->194 [style = bold, label=""];
689->455 [style = bold, label=""];
703->880 [style = bold, label=""];
172->441 [style = solid, label="myTxId"];
919->917 [style = bold, label=""];
323->412 [style = solid, label="myTxId"];
111->294 [style = bold, label=""];
301->752 [style = bold, label=""];
590->864 [style = bold, label=""];
216->213 [style = bold, label=""];
456->686 [style = bold, label=""];
751->317 [style = bold, label=""];
479->232 [style = bold, label=""];
457->690 [style = bold, label=""];
203->418 [style = bold, label=""];
279->376 [style = bold, label=""];
398->921 [style = dashed, label="0"];
405->262 [style = bold, label=""];
868->644 [style = bold, label=""];
298->331 [style = bold, label=""];
174->503 [style = bold, label=""];
103->499 [style = bold, label=""];
278->176 [style = bold, label=""];
817->581 [style = bold, label=""];
166->785 [style = bold, label=""];
721->205 [style = bold, label=""];
857->349 [style = bold, label=""];
389->838 [style = bold, label=""];
281->684 [style = bold, label=""];
566->859 [style = bold, label=""];
586->378 [style = bold, label=""];
880->590 [style = bold, label=""];
579->286 [style = bold, label=""];
875->148 [style = bold, label=""];
136->577 [style = bold, label=""];
345->72 [style = bold, label=""];
131->401 [style = bold, label=""];
359->512 [style = bold, label=""];
165->11 [style = bold, label=""];
912->916 [style = bold, label=""];
291->394 [style = bold, label=""];
382->891 [style = bold, label=""];
63->210 [style = bold, label=""];
570->37 [style = bold, label=""];
398->314 [style = bold, label=""];
344->465 [style = bold, label=""];
333->69 [style = bold, label=""];
421->321 [style = bold, label=""];
193->751 [style = bold, label=""];
581->527 [style = bold, label=""];
852->462 [style = bold, label=""];
275->539 [style = bold, label=""];
297->340 [style = bold, label=""];
608->280 [style = bold, label=""];
201->131 [style = bold, label=""];
349->247 [style = bold, label=""];
50->755 [style = bold, label=""];
715->153 [style = bold, label=""];
35->55 [style = bold, label=""];
709->841 [style = bold, label=""];
632->489 [style = bold, label=""];
516->578 [style = bold, label=""];
928->931 [style = bold, label=""];
539->492 [style = bold, label=""];
727->246 [style = bold, label=""];
635->720 [style = bold, label=""];
745->510 [style = solid, label="reg1"];
356->605 [style = bold, label=""];
310->290 [style = bold, label=""];
783->614 [style = bold, label=""];
746->552 [style = bold, label=""];
891->570 [style = bold, label=""];
745->321 [style = solid, label="reg1"];
449->391 [style = bold, label=""];
768->821 [style = solid, label="events"];
34->851 [style = bold, label=""];
745->768 [style = solid, label="reg1"];
508->444 [style = bold, label=""];
782->538 [style = bold, label=""];
835->737 [style = bold, label=""];
910->918 [style = solid, label="listenerClose"];
565->813 [style = bold, label=""];
856->729 [style = bold, label=""];
786->78 [style = bold, label=""];
934->935 [style = bold, label=""];
622->255 [style = bold, label=""];
350->328 [style = bold, label=""];
509->33 [style = bold, label=""];
338->767 [style = bold, label=""];
460->636 [style = bold, label=""];
846->369 [style = bold, label=""];
639->709 [style = bold, label=""];
397->110 [style = bold, label=""];
272->799 [style = bold, label=""];
77->764 [style = bold, label=""];
119->297 [style = bold, label=""];
750->34 [style = bold, label=""];
745->91 [style = solid, label="reg1"];
71->384 [style = bold, label=""];
887->796 [style = bold, label=""];
549->593 [style = bold, label=""];
858->799 [style = bold, label=""];
910->912 [style = solid, label="listenerAfterRollback"];
138->330 [style = bold, label=""];
656->147 [style = bold, label=""];
873->20 [style = bold, label=""];
841->430 [style = bold, label=""];
696->149 [style = bold, label=""];
361->815 [style = bold, label=""];
82->468 [style = bold, label=""];
141->845 [style = bold, label=""];
596->46 [style = bold, label=""];
745->158 [style = solid, label="reg1"];
236->425 [style = bold, label=""];
838->56 [style = bold, label=""];
784->364 [style = bold, label=""];
910->926 [style = solid, label="listenerAfterRollback"];
662->97 [style = bold, label=""];
251->0 [style = bold, label=""];
446->639 [style = bold, label=""];
307->770 [style = bold, label=""];
739->293 [style = bold, label=""];
90->776 [style = bold, label=""];
932->900 [style = bold, label=""];
11->873 [style = bold, label=""];
41->417 [style = bold, label=""];
311->78 [style = bold, label=""];
811->668 [style = bold, label=""];
811->508 [style = bold, label=""];
373->855 [style = bold, label=""];
430->204 [style = bold, label=""];
576->562 [style = bold, label=""];
806->463 [style = bold, label=""];
876->266 [style = bold, label=""];
431->301 [style = bold, label=""];
659->177 [style = bold, label=""];
38->92 [style = bold, label=""];
70->156 [style = bold, label=""];
935->910 [style = bold, label=""];
299->410 [style = solid, label="myTxId"];
558->29 [style = bold, label=""];
714->852 [style = bold, label=""];
681->655 [style = bold, label=""];
59->581 [style = bold, label=""];
774->5 [style = bold, label=""];
657->797 [style = bold, label=""];
58->357 [style = bold, label=""];
741->856 [style = bold, label=""];
673->211 [style = bold, label=""];
762->658 [style = solid, label="myTxId"];
391->488 [style = bold, label=""];
412->330 [style = solid, label="events"];
6->789 [style = bold, label=""];
392->244 [style = bold, label=""];
7->470 [style = bold, label=""];
535->660 [style = bold, label=""];
388->834 [style = bold, label=""];
185->692 [style = bold, label=""];
401->659 [style = bold, label=""];
498->172 [style = bold, label=""];
585->239 [style = bold, label=""];
555->408 [style = bold, label=""];
365->833 [style = bold, label=""];
147->521 [style = bold, label=""];
765->248 [style = bold, label=""];
553->875 [style = bold, label=""];
414->241 [style = bold, label=""];
847->73 [style = bold, label=""];
204->597 [style = bold, label=""];
263->272 [style = bold, label=""];
877->817 [style = bold, label=""];
874->317 [style = bold, label=""];
76->598 [style = bold, label=""];
256->221 [style = solid, label="myTxId"];
91->526 [style = solid, label="events"];
823->412 [style = bold, label=""];
362->580 [style = solid, label="myTxId"];
506->612 [style = bold, label=""];
440->535 [style = bold, label=""];
730->114 [style = bold, label=""];
231->178 [style = bold, label=""];
451->624 [style = bold, label=""];
827->139 [style = bold, label=""];
296->439 [style = bold, label=""];
813->347 [style = bold, label=""];
910->908 [style = solid, label="oldListener"];
459->105 [style = bold, label=""];
789->274 [style = bold, label=""];
749->719 [style = bold, label=""];
669->175 [style = bold, label=""];
394->236 [style = bold, label=""];
889->751 [style = bold, label=""];
922->939 [style = bold, label=""];
571->174 [style = bold, label=""];
717->818 [style = bold, label=""];
85->633 [style = bold, label=""];
745->850 [style = solid, label="reg1"];
905->906 [style = dotted, label="true"];
745->410 [style = solid, label="reg1"];
225->112 [style = bold, label=""];
36->513 [style = bold, label=""];
143->674 [style = bold, label=""];
678->779 [style = bold, label=""];
853->50 [style = bold, label=""];
64->745 [style = bold, label=""];
140->572 [style = bold, label=""];
436->189 [style = bold, label=""];
342->569 [style = bold, label=""];
861->192 [style = bold, label=""];
541->367 [style = bold, label=""];
729->847 [style = bold, label=""];
69->356 [style = bold, label=""];
108->57 [style = bold, label=""];
406->703 [style = bold, label=""];
243->374 [style = bold, label=""];
133->774 [style = bold, label=""];
563->82 [style = bold, label=""];
158->321 [style = solid, label="events"];
478->559 [style = bold, label=""];
241->212 [style = bold, label=""];
232->233 [style = bold, label=""];
699->27 [style = bold, label=""];
163->85 [style = bold, label=""];
651->768 [style = solid, label="events"];
280->45 [style = bold, label=""];
89->648 [style = bold, label=""];
12->343 [style = bold, label=""];
706->850 [style = solid, label="myTxId"];
466->252 [style = bold, label=""];
831->40 [style = bold, label=""];
110->824 [style = bold, label=""];
805->638 [style = bold, label=""];
760->575 [style = bold, label=""];
863->385 [style = bold, label=""];
578->51 [style = bold, label=""];
613->64 [style = bold, label=""];
473->184 [style = bold, label=""];
900->933 [style = bold, label=""];
260->179 [style = bold, label=""];
416->140 [style = bold, label=""];
797->389 [style = bold, label=""];
57->91 [style = solid, label="myTxId"];
433->361 [style = bold, label=""];
323->756 [style = bold, label=""];
525->229 [style = bold, label=""];
340->257 [style = bold, label=""];
81->618 [style = bold, label=""];
226->256 [style = bold, label=""];
898->154 [style = bold, label=""];
266->679 [style = bold, label=""];
675->568 [style = bold, label=""];
99->890 [style = bold, label=""];
690->808 [style = bold, label=""];
248->324 [style = bold, label=""];
199->873 [style = solid, label="myTxId"];
658->267 [style = bold, label=""];
4->409 [style = bold, label=""];
299->460 [style = bold, label=""];
304->544 [style = bold, label=""];
48->24 [style = bold, label=""];
102->216 [style = bold, label=""];
666->15 [style = bold, label=""];
152->626 [style = bold, label=""];
375->373 [style = bold, label=""];
261->371 [style = bold, label=""];
398->430 [style = solid, label="myTxId"];
591->510 [style = solid, label="events"];
470->653 [style = bold, label=""];
113->608 [style = bold, label=""];
378->681 [style = bold, label=""];
28->441 [style = bold, label=""];
510->850 [style = solid, label="events"];
135->733 [style = bold, label=""];
289->606 [style = bold, label=""];
200->109 [style = bold, label=""];
745->430 [style = solid, label="reg1"];
745->599 [style = solid, label="reg1"];
496->277 [style = bold, label=""];
822->823 [style = bold, label=""];
603->634 [style = bold, label=""];
501->766 [style = bold, label=""];
726->402 [style = bold, label=""];
507->844 [style = bold, label=""];
178->558 [style = bold, label=""];
606->702 [style = bold, label=""];
917->914 [style = bold, label=""];
396->688 [style = bold, label=""];
288->348 [style = bold, label=""];
523->414 [style = bold, label=""];
380->251 [style = bold, label=""];
60->459 [style = bold, label=""];
740->518 [style = bold, label=""];
269->654 [style = bold, label=""];
745->591 [style = solid, label="reg1"];
320->162 [style = bold, label=""];
648->451 [style = bold, label=""];
196->66 [style = bold, label=""];
366->345 [style = solid, label="events"];
37->235 [style = bold, label=""];
302->1 [style = bold, label=""];
855->35 [style = bold, label=""];
51->540 [style = bold, label=""];
745->667 [style = bold, label=""];
672->724 [style = bold, label=""];
540->519 [style = bold, label=""];
68->715 [style = bold, label=""];
458->836 [style = bold, label=""];
228->325 [style = bold, label=""];
656->158 [style = solid, label="myTxId"];
584->203 [style = bold, label=""];
98->54 [style = bold, label=""];
642->41 [style = bold, label=""];
264->106 [style = bold, label=""];
253->832 [style = bold, label=""];
221->580 [style = solid, label="events"];
808->362 [style = bold, label=""];
463->671 [style = bold, label=""];
368->104 [style = bold, label=""];
892->209 [style = bold, label=""];
430->125 [style = solid, label="events"];
386->338 [style = bold, label=""];
649->282 [style = bold, label=""];
79->714 [style = bold, label=""];
382->173 [style = bold, label=""];
754->76 [style = bold, label=""];
763->190 [style = bold, label=""];
114->600 [style = bold, label=""];
764->138 [style = bold, label=""];
32->564 [style = bold, label=""];
21->524 [style = bold, label=""];
304->658 [style = solid, label="events"];
188->683 [style = bold, label=""];
175->540 [style = bold, label=""];
121->363 [style = bold, label=""];
112->591 [style = solid, label="myTxId"];
428->150 [style = bold, label=""];
940->923 [style = bold, label=""];
650->254 [style = bold, label=""];
393->63 [style = bold, label=""];
780->360 [style = bold, label=""];
355->691 [style = bold, label=""];
684->143 [style = bold, label=""];
718->642 [style = bold, label=""];
268->750 [style = bold, label=""];
106->740 [style = bold, label=""];
379->270 [style = bold, label=""];
402->279 [style = bold, label=""];
796->322 [style = bold, label=""];
713->511 [style = bold, label=""];
725->747 [style = bold, label=""];
587->168 [style = bold, label=""];
181->734 [style = bold, label=""];
773->400 [style = bold, label=""];
671->127 [style = bold, label=""];
148->698 [style = bold, label=""];
924->941 [style = bold, label=""];
395->894 [style = bold, label=""];
52->730 [style = bold, label=""];
772->4 [style = bold, label=""];
883->807 [style = bold, label=""];
347->827 [style = bold, label=""];
512->665 [style = bold, label=""];
30->892 [style = bold, label=""];
873->91 [style = solid, label="events"];
277->677 [style = bold, label=""];
191->456 [style = bold, label=""];
454->107 [style = bold, label=""];
5->428 [style = bold, label=""];
724->801 [style = bold, label=""];
39->355 [style = bold, label=""];
886->616 [style = bold, label=""];
745->845 [style = solid, label="reg1"];
524->15 [style = bold, label=""];
743->59 [style = bold, label=""];
667->596 [style = bold, label=""];
521->495 [style = bold, label=""];
477->60 [style = bold, label=""];
930->915 [style = bold, label=""];
235->590 [style = bold, label=""];
42->728 [style = bold, label=""];
250->315 [style = bold, label=""];
486->209 [style = bold, label=""];
485->169 [style = solid, label="myTxId"];
448->353 [style = bold, label=""];
758->111 [style = bold, label=""];
468->78 [style = bold, label=""];
655->300 [style = bold, label=""];
390->531 [style = bold, label=""];
897->766 [style = bold, label=""];
400->637 [style = bold, label=""];
580->592 [style = bold, label=""];
834->308 [style = bold, label=""];
882->15 [style = bold, label=""];
574->96 [style = bold, label=""];
306->223 [style = bold, label=""];
645->840 [style = bold, label=""];
617->820 [style = bold, label=""];
492->854 [style = bold, label=""];
482->404 [style = bold, label=""];
270->632 [style = bold, label=""];
214->768 [style = solid, label="myTxId"];
267->302 [style = bold, label=""];
745->58 [style = solid, label="reg1"];
40->861 [style = bold, label=""];
840->646 [style = bold, label=""];
679->379 [style = bold, label=""];
157->852 [style = solid, label="myTxId"];
45->584 [style = bold, label=""];
287->746 [style = bold, label=""];
238->224 [style = bold, label=""];
736->77 [style = bold, label=""];
731->70 [style = bold, label=""];
19->787 [style = bold, label=""];
24->386 [style = bold, label=""];
497->846 [style = bold, label=""];
728->560 [style = bold, label=""];
748->501 [style = bold, label=""];
611->587 [style = bold, label=""];
850->412 [style = solid, label="events"];
848->766 [style = bold, label=""];
527->550 [style = bold, label=""];
418->676 [style = bold, label=""];
423->426 [style = bold, label=""];
843->253 [style = bold, label=""];
485->200 [style = bold, label=""];
176->287 [style = bold, label=""];
931->903 [style = bold, label=""];
920->938 [style = bold, label=""];
562->166 [style = bold, label=""];
242->725 [style = bold, label=""];
594->283 [style = bold, label=""];
213->621 [style = bold, label=""];
25->483 [style = bold, label=""];
601->623 [style = bold, label=""];
701->377 [style = bold, label=""];
856->729 [style = solid, label="cntWriter"];
779->249 [style = bold, label=""];
315->570 [style = bold, label=""];
712->420 [style = bold, label=""];
567->761 [style = bold, label=""];
57->579 [style = bold, label=""];
517->125 [style = solid, label="myTxId"];
616->458 [style = bold, label=""];
29->318 [style = bold, label=""];
155->424 [style = bold, label=""];
796->628 [style = bold, label=""];
851->804 [style = bold, label=""];
129->557 [style = bold, label=""];
495->803 [style = bold, label=""];
612->868 [style = bold, label=""];
425->546 [style = bold, label=""];
910->913 [style = solid, label="listenerClose"];
370->631 [style = bold, label=""];
53->717 [style = bold, label=""];
360->863 [style = bold, label=""];
825->368 [style = bold, label=""];
286->723 [style = bold, label=""];
910->901 [style = solid, label="listenerClose"];
829->732 [style = bold, label=""];
434->817 [style = bold, label=""];
518->497 [style = bold, label=""];
239->693 [style = bold, label=""];
154->851 [style = bold, label=""];
330->366 [style = solid, label="events"];
254->829 [style = bold, label=""];
118->141 [style = bold, label=""];
441->494 [style = bold, label=""];
700->124 [style = bold, label=""];
625->427 [style = bold, label=""];
704->802 [style = bold, label=""];
345->221 [style = solid, label="events"];
183->225 [style = bold, label=""];
46->847 [style = solid, label="cntListener"];
107->332 [style = bold, label=""];
144->537 [style = bold, label=""];
100->197 [style = bold, label=""];
615->381 [style = bold, label=""];
134->269 [style = bold, label=""];
408->163 [style = bold, label=""];
857->885 [style = bold, label=""];
745->441 [style = solid, label="reg1"];
720->849 [style = bold, label=""];
577->411 [style = bold, label=""];
438->775 [style = bold, label=""];
926->907 [style = bold, label=""];
493->791 [style = bold, label=""];
618->268 [style = bold, label=""];
505->89 [style = bold, label=""];
321->169 [style = solid, label="events"];
432->517 [style = bold, label=""];
677->359 [style = bold, label=""];
358->718 [style = bold, label=""];
109->588 [style = bold, label=""];
14->743 [style = bold, label=""];
745->821 [style = solid, label="reg1"];
500->285 [style = bold, label=""];
337->436 [style = bold, label=""];
528->342 [style = bold, label=""];
331->245 [style = bold, label=""];
546->161 [style = bold, label=""];
547->609 [style = bold, label=""];
116->98 [style = bold, label=""];
692->118 [style = bold, label=""];
180->555 [style = bold, label=""];
595->622 [style = bold, label=""];
872->217 [style = bold, label=""];
745->304 [style = solid, label="reg1"];
339->320 [style = bold, label=""];
599->410 [style = solid, label="events"];
16->641 [style = bold, label=""];
722->95 [style = bold, label=""];
664->867 [style = bold, label=""];
178->599 [style = solid, label="myTxId"];
444->771 [style = bold, label=""];
150->547 [style = bold, label=""];
451->788 [style = solid, label="myTxId"];
923->902 [style = bold, label=""];
240->467 [style = bold, label=""];
821->788 [style = solid, label="events"];
542->202 [style = bold, label=""];
867->201 [style = bold, label=""];
219->554 [style = bold, label=""];
534->480 [style = bold, label=""];
870->196 [style = bold, label=""];
719->471 [style = bold, label=""];
850->515 [style = bold, label=""];
293->530 [style = bold, label=""];
745->366 [style = solid, label="reg1"];
489->71 [style = bold, label=""];
447->526 [style = bold, label=""];
410->68 [style = bold, label=""];
807->465 [style = bold, label=""];
675->899 [style = bold, label=""];
656->908 [style = dashed, label="0"];
801->186 [style = bold, label=""];
745->658 [style = solid, label="reg1"];
695->630 [style = bold, label=""];
674->474 [style = bold, label=""];
353->548 [style = bold, label=""];
899->431 [style = bold, label=""];
909->929 [style = bold, label=""];
31->398 [style = bold, label=""];
756->90 [style = bold, label=""];
124->722 [style = bold, label=""];
317->561 [style = bold, label=""];
745->852 [style = solid, label="reg1"];
915->908 [style = bold, label=""];
518->330 [style = solid, label="myTxId"];
363->574 [style = bold, label=""];
259->799 [style = bold, label=""];
688->482 [style = bold, label=""];
658->845 [style = solid, label="events"];
910->930 [style = solid, label="listenerAfterRollback"];
168->2 [style = bold, label=""];
710->142 [style = bold, label=""];
905->906 [style = bold, label=""];
788->292 [style = bold, label=""];
545->446 [style = bold, label=""];
44->130 [style = bold, label=""];
775->238 [style = bold, label=""];
830->788 [style = bold, label=""];
790->207 [style = bold, label=""];
660->291 [style = bold, label=""];
13->831 [style = bold, label=""];
557->798 [style = bold, label=""];
828->450 [style = bold, label=""];
96->583 [style = bold, label=""];
852->58 [style = solid, label="events"];
151->843 [style = bold, label=""];
638->310 [style = bold, label=""];
453->673 [style = bold, label=""];
197->794 [style = bold, label=""];
488->53 [style = bold, label=""];
2->129 [style = bold, label=""];
244->135 [style = bold, label=""];
537->58 [style = bold, label=""];
450->339 [style = bold, label=""];
327->663 [style = bold, label=""];
346->120 [style = bold, label=""];
651->327 [style = bold, label=""];
619->514 [style = bold, label=""];
685->9 [style = bold, label=""];
894->335 [style = bold, label=""];
881->669 [style = bold, label=""];
212->805 [style = bold, label=""];
43->403 [style = bold, label=""];
483->155 [style = bold, label=""];
716->602 [style = bold, label=""];
791->565 [style = bold, label=""];
597->432 [style = bold, label=""];
23->44 [style = bold, label=""];
424->705 [style = bold, label=""];
443->247 [style = bold, label=""];
184->421 [style = bold, label=""];
643->123 [style = bold, label=""];
153->84 [style = bold, label=""];
559->171 [style = bold, label=""];
543->869 [style = bold, label=""];
452->390 [style = bold, label=""];
832->473 [style = bold, label=""];
941->934 [style = bold, label=""];
407->696 [style = bold, label=""];
600->487 [style = bold, label=""];
582->556 [style = bold, label=""];
367->36 [style = bold, label=""];
627->7 [style = bold, label=""];
217->126 [style = bold, label=""];
665->3 [style = bold, label=""];
104->469 [style = bold, label=""];
820->422 [style = bold, label=""];
411->589 [style = bold, label=""];
257->835 [style = bold, label=""];
207->739 [style = bold, label=""];
814->214 [style = bold, label=""];
703->590 [style = bold, label=""];
8->782 [style = bold, label=""];
802->566 [style = bold, label=""];
723->666 [style = bold, label=""];
668->508 [style = bold, label=""];
848->897 [style = bold, label=""];
636->738 [style = bold, label=""];
856->847 [style = solid, label="cntWriter"];
369->449 [style = bold, label=""];
475->700 [style = bold, label=""];
732->122 [style = bold, label=""];
132->500 [style = bold, label=""];
415->48 [style = bold, label=""];
680->80 [style = bold, label=""];
334->407 [style = bold, label=""];
575->485 [style = bold, label=""];
767->582 [style = bold, label=""];
336->699 [style = bold, label=""];
61->219 [style = bold, label=""];
364->288 [style = bold, label=""];
384->536 [style = bold, label=""];
854->334 [style = bold, label=""];
504->49 [style = bold, label=""];
803->619 [style = bold, label=""];
514->438 [style = bold, label=""];
499->39 [style = bold, label=""];
156->275 [style = bold, label=""];
821->442 [style = bold, label=""];
568->431 [style = bold, label=""];
530->278 [style = bold, label=""];
283->658 [style = bold, label=""];
745->788 [style = solid, label="reg1"];
461->607 [style = bold, label=""];
274->222 [style = bold, label=""];
646->159 [style = bold, label=""];
769->727 [style = bold, label=""];
837->273 [style = bold, label=""];
937->940 [style = bold, label=""];
179->62 [style = bold, label=""];
130->711 [style = bold, label=""];
819->753 [style = bold, label=""];
122->704 [style = bold, label=""];
676->185 [style = bold, label=""];
839->814 [style = bold, label=""];
305->83 [style = bold, label=""];
1->119 [style = bold, label=""];
524->882 [style = bold, label=""];
895->786 [style = bold, label=""];
348->465 [style = bold, label=""];
191->510 [style = solid, label="myTxId"];
845->765 [style = solid, label="events"];
605->208 [style = bold, label=""];
120->506 [style = bold, label=""];
481->591 [style = bold, label=""];
637->65 [style = bold, label=""];
437->350 [style = bold, label=""];
776->694 [style = bold, label=""];
532->862 [style = bold, label=""];
91->93 [style = bold, label=""];
707->393 [style = bold, label=""];
781->478 [style = bold, label=""];
234->617 [style = bold, label=""];
173->570 [style = bold, label=""];
859->580 [style = bold, label=""];
807->344 [style = bold, label=""];
624->726 [style = bold, label=""];
376->853 [style = bold, label=""];
918->927 [style = bold, label=""];
572->453 [style = bold, label=""];
270->345 [style = solid, label="myTxId"];
408->821 [style = solid, label="myTxId"];
697->749 [style = bold, label=""];
97->341 [style = bold, label=""];
419->458 [style = bold, label=""];
938->934 [style = solid, label="myTxId"];
602->102 [style = bold, label=""];
220->79 [style = bold, label=""];
407->852 [style = solid, label="events"];
661->595 [style = bold, label=""];
157->567 [style = bold, label=""];
733->678 [style = bold, label=""];
747->657 [style = bold, label=""];
833->445 [style = bold, label=""];
158->337 [style = bold, label=""];
218->271 [style = bold, label=""];
56->765 [style = bold, label=""];
149->777 [style = bold, label=""];
519->871 [style = bold, label=""];
936->921 [style = bold, label=""];
641->170 [style = bold, label=""];
929->904 [style = bold, label=""];
125->407 [style = solid, label="events"];
162->543 [style = bold, label=""];
816->375 [style = bold, label=""];
137->218 [style = bold, label=""];
252->26 [style = bold, label=""];
652->710 [style = bold, label=""];
169->387 [style = bold, label=""];
682->510 [style = bold, label=""];
201->651 [style = solid, label="myTxId"];
849->610 [style = bold, label=""];
209->16 [style = bold, label=""];
285->158 [style = bold, label=""];
544->182 [style = bold, label=""];
620->784 [style = bold, label=""];
409->316 [style = bold, label=""];
745->765 [style = solid, label="reg1"];
58->873 [style = solid, label="events"];
442->505 [style = bold, label=""];
450->526 [style = solid, label="myTxId"];
809->366 [style = solid, label="myTxId"];
871->431 [style = bold, label=""];
759->74 [style = bold, label=""];
399->443 [style = bold, label=""];
233->553 [style = bold, label=""];
403->448 [style = bold, label=""];
589->75 [style = bold, label=""];
630->329 [style = bold, label=""];
810->101 [style = bold, label=""];
484->183 [style = bold, label=""];
480->762 [style = bold, label=""];
878->403 [style = bold, label=""];
745->412 [style = solid, label="reg1"];
606->407 [style = solid, label="myTxId"];
653->528 [style = bold, label=""];
907->930 [style = bold, label=""];
249->289 [style = bold, label=""];
159->757 [style = bold, label=""];
303->23 [style = bold, label=""];
78->250 [style = bold, label=""];
87->479 [style = bold, label=""];
186->819 [style = bold, label=""];
202->865 [style = bold, label=""];
908->918 [style = bold, label=""];
80->306 [style = bold, label=""];
276->144 [style = bold, label=""];
683->187 [style = bold, label=""];
804->571 [style = bold, label=""];
785->708 [style = bold, label=""];
809->243 [style = bold, label=""];
787->169 [style = bold, label=""];
794->452 [style = bold, label=""];
62->346 [style = bold, label=""];
145->132 [style = bold, label=""];
65->345 [style = bold, label=""];
745->801 [style = solid, label="reg1"];
884->811 [style = bold, label=""];
46->741 [style = solid, label="cntListener"];
247->744 [style = bold, label=""];
614->137 [style = bold, label=""];
33->365 [style = bold, label=""];
573->687 [style = bold, label=""];
9->167 [style = bold, label=""];
177->504 [style = bold, label=""];
81->801 [style = solid, label="myTxId"];
362->549 [style = bold, label=""];
125->309 [style = bold, label=""];
471->650 [style = bold, label=""];
340->845 [style = solid, label="myTxId"];
865->603 [style = bold, label=""];
550->372 [style = bold, label=""];
879->64 [style = bold, label=""];
925->936 [style = bold, label=""];
526->541 [style = bold, label=""];
745->407 [style = solid, label="reg1"];
694->563 [style = bold, label=""];
229->370 [style = bold, label=""];
329->215 [style = bold, label=""];
708->520 [style = bold, label=""];
702->303 [style = bold, label=""];
199->415 [style = bold, label=""];
910->901 [style = bold, label=""];
422->481 [style = bold, label=""];
314->759 [style = bold, label=""];
752->508 [style = bold, label=""];
262->661 [style = bold, label=""];
3->358 [style = bold, label=""];
86->199 [style = bold, label=""];
351->697 [style = bold, label=""];
592->810 [style = bold, label=""];
206->226 [style = bold, label=""];
142->380 [style = bold, label=""];
604->94 [style = bold, label=""];
902->909 [style = bold, label=""];
939->937 [style = bold, label=""];
487->769 [style = bold, label=""];
745->345 [style = solid, label="reg1"];
845->716 [style = bold, label=""];
768->701 [style = bold, label=""];
195->221 [style = bold, label=""];
465->128 [style = bold, label=""];
766->263 [style = bold, label=""];
560->529 [style = bold, label=""];
49->423 [style = bold, label=""];
101->498 [style = bold, label=""];
591->685 [style = bold, label=""];
74->874 [style = bold, label=""];
294->736 [style = bold, label=""];
903->932 [style = bold, label=""];
237->86 [style = bold, label=""];
66->295 [style = bold, label=""];
742->437 [style = bold, label=""];
47->493 [style = bold, label=""];
901->911 [style = bold, label=""];
598->490 [style = bold, label=""];
318->713 [style = bold, label=""];
771->458 [style = bold, label=""];
410->304 [style = solid, label="events"];
300->181 [style = bold, label=""];
273->870 [style = bold, label=""];
221->457 [style = bold, label=""];
117->585 [style = bold, label=""];
551->38 [style = bold, label=""];
888->784 [style = bold, label=""];
99->170 [style = bold, label=""];
374->399 [style = bold, label=""];
698->477 [style = bold, label=""];
404->672 [style = bold, label=""];
786->311 [style = bold, label=""];
26->830 [style = bold, label=""];
502->542 [style = bold, label=""];
914->925 [style = solid, label="oldListener"];
412->793 [style = bold, label=""];
734->545 [style = bold, label=""];
387->484 [style = bold, label=""];
435->645 [style = bold, label=""];
73->31 [style = bold, label=""];
187->13 [style = bold, label=""];
67->851 [style = bold, label=""];
911->926 [style = bold, label=""];
84->304 [style = solid, label="myTxId"];
510->604 [style = bold, label=""];
469->276 [style = bold, label=""];
893->626 [style = bold, label=""];
793->264 [style = bold, label=""];
812->454 [style = bold, label=""];
858->259 [style = bold, label=""];
154->67 [style = bold, label=""];
10->611 [style = bold, label=""];
366->876 [style = bold, label=""];
628->322 [style = bold, label=""];
842->100 [style = bold, label=""];
745->651 [style = solid, label="reg1"];
54->806 [style = bold, label=""];
321->533 [style = bold, label=""];
258->284 [style = bold, label=""];
20->312 [style = bold, label=""];
55->573 [style = bold, label=""];
515->615 [style = bold, label=""];
139->768 [style = bold, label=""];
332->809 [style = bold, label=""];
556->103 [style = bold, label=""];
472->392 [style = bold, label=""];
328->670 [style = bold, label=""];
885->247 [style = bold, label=""];
529->629 [style = bold, label=""];
295->635 [style = bold, label=""];
623->872 [style = bold, label=""];
647->91 [style = bold, label=""];
189->790 [style = bold, label=""];
864->778 [style = bold, label=""];
429->396 [style = bold, label=""];
686->61 [style = bold, label=""];
526->158 [style = solid, label="events"];
319->88 [style = bold, label=""];
202->58 [style = solid, label="myTxId"];
607->551 [style = bold, label=""];
160->662 [style = bold, label=""];
371->115 [style = bold, label=""];
538->754 [style = bold, label=""];
27->735 [style = bold, label=""];
0->333 [style = bold, label=""];
836->351 [style = bold, label=""];
745->580 [style = solid, label="reg1"];
426->116 [style = bold, label=""];
15->433 [style = bold, label=""];
92->220 [style = bold, label=""];
357->237 [style = bold, label=""];
906->903 [style = bold, label=""];
663->839 [style = bold, label=""];
171->825 [style = bold, label=""];
284->32 [style = bold, label=""];
862->52 [style = bold, label=""];
462->695 [style = bold, label=""];
420->6 [style = bold, label=""];
476->307 [style = bold, label=""];
799->721 [style = bold, label=""];
706->507 [style = bold, label=""];
890->170 [style = bold, label=""];
146->706 [style = bold, label=""];
533->265 [style = bold, label=""];
933->924 [style = bold, label=""];
564->242 [style = bold, label=""];
210->322 [style = bold, label=""];
644->19 [style = bold, label=""];
824->601 [style = bold, label=""];
105->234 [style = bold, label=""];
914->925 [style = bold, label=""];
316->397 [style = bold, label=""];
169->591 [style = solid, label="events"];
616->419 [style = bold, label=""];
182->534 [style = bold, label=""];
325->461 [style = bold, label=""];
583->680 [style = bold, label=""];
552->151 [style = bold, label=""];
46->741 [style = bold, label=""];
777->157 [style = bold, label=""];
72->206 [style = bold, label=""];
745->169 [style = solid, label="reg1"];
309->652 [style = bold, label=""];
93->12 [style = bold, label=""];
211->413 [style = bold, label=""];
548->136 [style = bold, label=""];
445->821 [style = bold, label=""];
224->230 [style = bold, label=""];
765->651 [style = solid, label="events"];
94->146 [style = bold, label=""];
464->780 [style = bold, label=""];
561->586 [style = bold, label=""];
223->28 [style = bold, label=""];
633->522 [style = bold, label=""];
745->125 [style = solid, label="reg1"];
513->656 [style = bold, label=""];
503->792 [style = bold, label=""];
792->429 [style = bold, label=""];
580->441 [style = solid, label="events"];
194->10 [style = bold, label=""];
335->781 [style = bold, label=""];
417->525 [style = bold, label=""];
385->682 [style = bold, label=""];
711->383 [style = bold, label=""];
531->410 [style = bold, label=""];
126->816 [style = bold, label=""];
522->405 [style = bold, label=""];
439->299 [style = bold, label=""];
102->765 [style = solid, label="myTxId"];
626->789 [style = bold, label=""];
757->354 [style = bold, label=""];
705->783 [style = bold, label=""];
84->133 [style = bold, label=""];
324->664 [style = bold, label=""];
}
