digraph {
3 [style = filled, label = "Assume.assumeTrue(\"No regexp matcher is present\",RegexpMatcherFactory.regexpMatcherPresent(buildRule.getProject()))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(buildRule.getProject().getProperty(\"jar.classpath\"),\"classes/dsp-core/ \" + \"classes/dsp-pres/ \" + \"classes/dsp-void/ \" + \"generated/dsp-core/ \" + \"resources/dsp-core/ \" + \"resources/dsp-pres/\")@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testPseudoTahoeRefid['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "buildRule.executeTarget(\"test-pseudo-tahoe-refid\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testPseudoTahoeRefid['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assumeTrue(\"No regexp matcher is present\",RegexpMatcherFactory.regexpMatcherPresent(buildRule.getProject()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "buildRule.executeTarget(\"test-pseudo-tahoe-nested\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testPseudoTahoeNested['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
6->3 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
1->7 [style = dashed, label="0"];
3->1 [style = bold, label=""];
3->7 [style = bold, label=""];
3->4 [style = dashed, label="0"];
7->2 [style = bold, label=""];
5->4 [style = bold, label=""];
}
