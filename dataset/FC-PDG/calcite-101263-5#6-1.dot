digraph {
3 [style = filled, label = "assertThat(str(root),is(\"LogicalIntersect(all=(false()\" + \" LogicalProject(DEPTNO=($0()\" + \" LogicalTableScan(table=((scott, DEPT(()\" + \" LogicalProject(EMPNO=($0()\" + \" LogicalFilter(condition=(=($7, 20)()\" + \" LogicalTableScan(table=((scott, EMP(()\"))@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RelNode root = builder.scan(\"DEPT\").project(builder.field(\"DEPTNO\")).scan(\"EMP\").filter(builder.call(SqlStdOperatorTable.EQUALS,builder.field(\"DEPTNO\"),builder.literal(20))).project(builder.field(\"EMPNO\")).intersect(false).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(str(root),is(\"LogicalMinus(all=(false()\" + \" LogicalProject(DEPTNO=($0()\" + \" LogicalTableScan(table=((scott, DEPT(()\" + \" LogicalProject(EMPNO=($0()\" + \" LogicalFilter(condition=(=($7, 20)()\" + \" LogicalTableScan(table=((scott, EMP(()\"))@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RelNode root = builder.scan(\"EMP\").filter(builder.call(SqlStdOperatorTable.EQUALS,builder.field(\"DEPTNO\"),builder.literal(20))).project(builder.field(\"EMPNO\")).scan(\"DEPT\").project(builder.field(\"DEPTNO\")).intersect(false).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testExcept['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RelNode root = builder.scan(\"EMP\").filter(builder.call(SqlStdOperatorTable.EQUALS,builder.field(\"DEPTNO\"),builder.literal(20))).project(builder.field(\"EMPNO\")).scan(\"DEPT\").project(builder.field(\"DEPTNO\")).minus(false).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final RelBuilder builder = RelBuilder.create(config().build())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testIntersect['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testIntersect['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
2->3 [style = solid, label="root"];
4->3 [style = solid, label="root"];
2->4 [style = dashed, label="0"];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
3->6 [style = dashed, label="0"];
1->0 [style = bold, label=""];
5->0 [style = bold, label=""];
8->6 [style = solid, label="root"];
0->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
0->8 [style = bold, label=""];
}
