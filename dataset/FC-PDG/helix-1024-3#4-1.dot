digraph {
12 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertNotNull(record)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String path = String.format(\"/%d\",0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<ZNRecord>(baseAccessor,root,fallbackRoot)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(record.getId(),\"new0\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<>(baseAccessor,root,fallbackRoot)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertNotNull(record.getSimpleField(\"key\"))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertNull(record.getSimpleField(\"key\"))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "baseAccessor.create(path,new ZNRecord(Integer.toString(i)),AccessOption.PERSISTENT)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "deleteCluster(clusterName)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String root = String.format(\"/%s/%s\",clusterName,PropertyType.PROPERTYSTORE.name())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "baseAccessor.create(path,new ZNRecord(Integer.toString(i)),AccessOption.PERSISTENT)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertNotNull(record)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String path = String.format(\"%s/%d\",root,i)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testSingleUpdateUsingFallbackPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should exist under fallback location\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean succeed = store.update(path,new MyDataUpdater(\"new0\"),AccessOption.PERSISTENT)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(succeed)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "record = baseAccessor.get(String.format(\"%s%s\",root,path),null,0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<>(_gZkClient)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ZNRecord record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testSingleUpdateUsingFallbackPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "ZNRecord record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "path = String.format(\"%s/%d\",fallbackRoot,i)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should exist under new location\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "baseAccessor.create(path,new ZNRecord(\"new\" + i),AccessOption.PERSISTENT)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(record.getSimpleField(\"key\"),\"value\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testSingleUpdateUsingNewPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertEquals(record.getSimpleField(\"key\"),\"value\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String path = String.format(\"%s/%d\",fallbackRoot,i)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String fallbackRoot = String.format(\"/%s/%s\",clusterName,\"HELIX_PROPERTYSTORE\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "boolean succeed = store.update(path,new MyDataUpdater(\"0\"),AccessOption.PERSISTENT)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i < 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String path = String.format(\"/%d\",0)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->22 [style = solid, label="path"];
12->37 [style = solid, label="i"];
18->39 [style = solid, label="path"];
16->31 [style = solid, label="fallbackRoot"];
14->26 [style = solid, label="root"];
12->8 [style = solid, label="i"];
25->4 [style = solid, label="path"];
4->39 [style = dashed, label="0"];
27->6 [style = solid, label="className"];
7->8 [style = bold, label=""];
8->37 [style = dotted, label="true"];
7->13 [style = solid, label="i"];
23->28 [style = bold, label=""];
28->21 [style = bold, label=""];
19->38 [style = dashed, label="0"];
35->37 [style = bold, label=""];
15->0 [style = bold, label=""];
18->9 [style = solid, label="path"];
8->22 [style = dotted, label="true"];
16->15 [style = solid, label="fallbackRoot"];
0->1 [style = solid, label="record"];
18->26 [style = solid, label="path"];
8->4 [style = bold, label=""];
25->0 [style = solid, label="path"];
19->15 [style = bold, label=""];
37->33 [style = bold, label=""];
16->13 [style = solid, label="fallbackRoot"];
8->11 [style = bold, label=""];
11->35 [style = dashed, label="0"];
12->35 [style = solid, label="i"];
14->16 [style = bold, label=""];
13->25 [style = bold, label=""];
6->14 [style = solid, label="clusterName"];
15->38 [style = bold, label=""];
19->15 [style = solid, label="succeed"];
16->0 [style = solid, label="fallbackRoot"];
16->4 [style = solid, label="fallbackRoot"];
10->14 [style = bold, label=""];
6->16 [style = solid, label="clusterName"];
30->27 [style = bold, label=""];
7->33 [style = solid, label="i"];
18->19 [style = bold, label=""];
4->18 [style = bold, label=""];
16->32 [style = bold, label=""];
32->7 [style = bold, label=""];
16->33 [style = solid, label="fallbackRoot"];
14->4 [style = solid, label="root"];
14->31 [style = solid, label="root"];
33->13 [style = bold, label=""];
6->10 [style = solid, label="clusterName"];
24->13 [style = solid, label="baseAccessor"];
24->32 [style = dashed, label="0"];
7->12 [style = solid, label="i"];
18->15 [style = solid, label="path"];
13->12 [style = bold, label=""];
8->12 [style = dotted, label="true"];
13->31 [style = dashed, label="0"];
8->33 [style = dotted, label="true"];
38->1 [style = solid, label="succeed"];
2->17 [style = solid, label="record"];
12->11 [style = solid, label="i"];
3->6 [style = solid, label="methodName"];
24->7 [style = bold, label=""];
18->38 [style = solid, label="path"];
14->13 [style = solid, label="root"];
12->33 [style = solid, label="i"];
2->17 [style = bold, label=""];
28->29 [style = bold, label=""];
31->25 [style = bold, label=""];
41->27 [style = bold, label=""];
8->31 [style = bold, label=""];
8->35 [style = dotted, label="true"];
25->19 [style = solid, label="path"];
14->2 [style = solid, label="root"];
14->39 [style = solid, label="root"];
16->24 [style = bold, label=""];
25->18 [style = solid, label="path"];
3->6 [style = bold, label=""];
9->20 [style = bold, label=""];
35->37 [style = solid, label="path"];
32->31 [style = solid, label="baseAccessor"];
8->35 [style = bold, label=""];
29->21 [style = bold, label=""];
1->9 [style = bold, label=""];
38->1 [style = bold, label=""];
14->35 [style = solid, label="root"];
16->9 [style = solid, label="fallbackRoot"];
18->39 [style = bold, label=""];
40->36 [style = bold, label=""];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
11->22 [style = bold, label=""];
8->11 [style = dotted, label="true"];
8->13 [style = dotted, label="true"];
7->8 [style = solid, label="i"];
26->34 [style = dashed, label="0"];
16->11 [style = solid, label="fallbackRoot"];
34->21 [style = bold, label=""];
8->13 [style = bold, label=""];
9->20 [style = solid, label="record"];
6->29 [style = solid, label="clusterName"];
39->15 [style = bold, label=""];
17->26 [style = bold, label=""];
7->22 [style = solid, label="i"];
12->22 [style = solid, label="i"];
27->3 [style = bold, label=""];
25->4 [style = bold, label=""];
25->2 [style = solid, label="path"];
16->18 [style = solid, label="fallbackRoot"];
6->36 [style = solid, label="clusterName"];
26->23 [style = solid, label="record"];
20->2 [style = bold, label=""];
7->35 [style = solid, label="i"];
22->12 [style = bold, label=""];
26->23 [style = bold, label=""];
12->13 [style = solid, label="i"];
24->4 [style = solid, label="baseAccessor"];
23->34 [style = bold, label=""];
21->40 [style = bold, label=""];
33->13 [style = solid, label="path"];
5->27 [style = bold, label=""];
7->37 [style = solid, label="i"];
7->11 [style = solid, label="i"];
6->21 [style = solid, label="clusterName"];
}
