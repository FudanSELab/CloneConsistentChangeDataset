digraph {
25 [style = filled, label = "expectLastCall()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final StateMachineTask task00 = new StateMachineTask(taskId00,taskId00Partitions,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(task01.commitPrepared,is(true))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(task10.state(),is(Task.State.RUNNING))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(task10.commitPrepared,is(false))@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final StateMachineTask task02 = new StateMachineTask(taskId02,taskId02Partitions,true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignmentActive = singletonMap(taskId00,taskId00Partitions)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(task01.state(),is(Task.State.RUNNING))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "task00.setCommittableOffsetsAndMetadata(offsets00)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(task00.commitNeeded,is(false))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "consumer.commitSync(expectedCommittedOffsets)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignmentStandby = singletonMap(taskId10,taskId10Partitions)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "taskManager.handleAssignment(assignmentActive,assignmentStandby)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "task01.setCommittableOffsetsAndMetadata(offsets01)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(task10.commitPrepared,is(false))@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "task01.setCommitNeeded()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "task02.setCommittableOffsetsAndMetadata(offsets02)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(task02.commitPrepared,is(false))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final StateMachineTask task10 = new StateMachineTask(taskId10,taskId10Partitions,false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "shouldNotCommitOnHandleAssignmentIfNoTaskClosed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> offsets00 = singletonMap(t1p0,new OffsetAndMetadata(0L,null))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(task00.state(),is(Task.State.RUNNING))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final StateMachineTask task01 = new StateMachineTask(taskId01,taskId01Partitions,true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(assignmentActive))).andReturn(singleton(task00))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "task00.setCommitNeeded()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(task10.state(),is(Task.State.RUNNING))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(time.milliseconds()),is(true))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "taskManager.handleAssignment(assignmentActive,assignmentStandby)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "expectRestoreToBeCompleted(consumer,changeLogReader)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(time.milliseconds(),null),is(true))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(time.milliseconds()),is(true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(assignmentActive))).andReturn(asList(task00,task01,task02))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> expectedCommittedOffsets = new HashMap<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(task00.commitNeeded,is(false))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "expect(standbyTaskCreator.createTasks(eq(assignmentStandby))).andReturn(singletonList(task10))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignmentStandby = mkMap(mkEntry(taskId10,taskId10Partitions))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectLastCall()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "taskManager.handleRevocation(taskId00Partitions)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "shouldCommitAllNeededTasksOnHandleRevocation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> offsets02 = singletonMap(t1p2,new OffsetAndMetadata(2L,null))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expectedCommittedOffsets.putAll(offsets00)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "shouldCommitAllNeededTasksOnHandleRevocation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(task02.state(),is(Task.State.RUNNING))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(task00.commitNeeded,is(true))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(task00.state(),is(Task.State.RUNNING))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "taskManager.handleAssignment(assignmentActive,assignmentStandby)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(taskId00)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> offsets01 = singletonMap(t1p1,new OffsetAndMetadata(1L,null))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "replay(activeTaskCreator,standbyTaskCreator,consumer,changeLogReader)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expect(standbyTaskCreator.createTasks(eq(assignmentStandby))).andReturn(singletonList(task10))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignmentActive = mkMap(mkEntry(taskId00,taskId00Partitions),mkEntry(taskId01,taskId01Partitions),mkEntry(taskId02,taskId02Partitions))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(task00.commitPrepared,is(true))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectedCommittedOffsets.putAll(offsets01)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
1->4 [style = bold, label=""];
39->19 [style = bold, label=""];
28->9 [style = solid, label="task10"];
28->52 [style = solid, label="task10"];
31->22 [style = bold, label=""];
17->1 [style = bold, label=""];
9->33 [style = bold, label=""];
1->40 [style = bold, label=""];
38->28 [style = bold, label=""];
0->17 [style = bold, label=""];
18->34 [style = bold, label=""];
26->3 [style = bold, label=""];
28->47 [style = bold, label=""];
42->17 [style = bold, label=""];
25->9 [style = bold, label=""];
4->15 [style = bold, label=""];
12->11 [style = bold, label=""];
43->51 [style = bold, label=""];
21->8 [style = bold, label=""];
32->14 [style = solid, label="offsets01"];
40->15 [style = bold, label=""];
32->14 [style = bold, label=""];
34->31 [style = bold, label=""];
6->10 [style = solid, label="offsets00"];
24->29 [style = bold, label=""];
15->30 [style = bold, label=""];
36->26 [style = bold, label=""];
30->37 [style = bold, label=""];
51->52 [style = bold, label=""];
50->48 [style = bold, label=""];
36->1 [style = solid, label="assignmentStandby"];
19->6 [style = bold, label=""];
37->23 [style = bold, label=""];
29->42 [style = dashed, label="0"];
47->45 [style = solid, label="assignmentActive"];
22->5 [style = bold, label=""];
19->51 [style = solid, label="task00"];
46->41 [style = bold, label=""];
44->43 [style = bold, label=""];
38->2 [style = bold, label=""];
3->27 [style = bold, label=""];
29->18 [style = bold, label=""];
48->46 [style = bold, label=""];
3->51 [style = dashed, label="0"];
33->0 [style = bold, label=""];
23->24 [style = bold, label=""];
28->21 [style = bold, label=""];
12->3 [style = solid, label="task02"];
2->3 [style = solid, label="task01"];
35->1 [style = solid, label="assignmentActive"];
24->45 [style = dashed, label="0"];
7->28 [style = bold, label=""];
10->38 [style = bold, label=""];
26->50 [style = bold, label=""];
32->13 [style = solid, label="offsets01"];
44->50 [style = solid, label="assignmentStandby"];
6->10 [style = bold, label=""];
47->50 [style = solid, label="assignmentActive"];
49->19 [style = bold, label=""];
45->42 [style = bold, label=""];
47->44 [style = bold, label=""];
11->7 [style = solid, label="offsets02"];
41->45 [style = bold, label=""];
27->52 [style = dashed, label="0"];
21->33 [style = solid, label="expectedCommittedOffsets"];
2->32 [style = bold, label=""];
35->36 [style = bold, label=""];
20->19 [style = bold, label=""];
19->3 [style = solid, label="task00"];
4->40 [style = dashed, label="0"];
13->35 [style = bold, label=""];
16->12 [style = bold, label=""];
27->25 [style = bold, label=""];
44->45 [style = solid, label="assignmentStandby"];
6->8 [style = solid, label="offsets00"];
11->7 [style = bold, label=""];
8->13 [style = bold, label=""];
52->26 [style = bold, label=""];
}
