digraph {
19 [style = filled, label = "Exception e = assertThrows(,null)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "File d1 = new File(dir,\"d1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expectedException.expectMessage(allOf(containsString(dir.getPath()),containsString(\"Tried 1 time.\")))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testForceRemoveDirectoryContents_LockedFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "File d2f2 = new File(d2,\"d1f2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testForceRemoveRecursive_DeletesAsMuchAsPossibleWithLockedFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(e.getMessage(),allOf(containsString(dir.getPath()),containsString(\"Tried 1 time.\")))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertFalse(f1.exists())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(d2f2.exists())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(dir.exists())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "remover.forceRemoveRecursive(dir.toPath())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "mkdirs(d1,d2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectedException.expectMessage(containsString(dir.getPath()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertFalse(f1.exists())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PathRemover remover = PathRemover.newRemoverWithStrategy(null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertFalse(d2.exists())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "File f1 = new File(dir,\"f1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(d1f1.exists())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testForceRemoveDirectoryContents_LockedFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(d2.exists())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "remover.forceRemoveDirectoryContents(dir.toPath())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "PathRemover remover = PathRemover.newSimpleRemover()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "touchWithFileName(f1,d1f1,d2f2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertFalse(d2f2.exists())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(d1.exists())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "File d1f1 = new File(d1,\"d1f1\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File d2 = new File(dir,\"d2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assumeTrue(Functions.isWindows())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File dir = tmp.newFolder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "locker.acquireLock(d1f1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->26 [style = bold, label=""];
23->22 [style = bold, label=""];
29->27 [style = bold, label=""];
0->14 [style = solid, label="dir"];
1->9 [style = bold, label=""];
8->5 [style = bold, label=""];
6->15 [style = bold, label=""];
28->20 [style = bold, label=""];
24->15 [style = bold, label=""];
8->25 [style = dashed, label="0"];
14->7 [style = solid, label="d1"];
3->26 [style = dashed, label="0"];
1->13 [style = solid, label="d2"];
1->10 [style = solid, label="d2"];
7->4 [style = solid, label="d1f1"];
11->2 [style = bold, label=""];
9->7 [style = bold, label=""];
0->9 [style = solid, label="dir"];
14->1 [style = bold, label=""];
7->13 [style = bold, label=""];
25->21 [style = bold, label=""];
26->25 [style = bold, label=""];
15->0 [style = bold, label=""];
5->11 [style = bold, label=""];
10->4 [style = bold, label=""];
12->3 [style = bold, label=""];
0->1 [style = solid, label="dir"];
19->17 [style = bold, label=""];
13->4 [style = solid, label="d2f2"];
22->28 [style = bold, label=""];
3->19 [style = bold, label=""];
3->8 [style = bold, label=""];
5->21 [style = dashed, label="0"];
4->12 [style = bold, label=""];
17->11 [style = bold, label=""];
20->29 [style = bold, label=""];
9->4 [style = solid, label="f1"];
2->16 [style = bold, label=""];
14->10 [style = solid, label="d1"];
13->10 [style = bold, label=""];
0->14 [style = bold, label=""];
21->23 [style = bold, label=""];
7->12 [style = solid, label="d1f1"];
18->15 [style = bold, label=""];
}
