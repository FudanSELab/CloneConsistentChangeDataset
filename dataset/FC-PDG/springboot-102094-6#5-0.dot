digraph {
8 [style = filled, label = "NonGenericCallback callbackInstance = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String argument = \"foo\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "callbacksInvokeWhenHasResolvableGenericNonMatchShouldNotInvokeCallback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LambdaSafe.callbacks(,Collections.singleton(callbackInstance),argument).invoke(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LambdaSafe.callbacks(,Collections.singleton(callbackInstance),argument).invoke(null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "callbacksInvokeWhenNoGenericShouldInvokeCallbacks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "GenericCallback<?> callbackInstance = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verifyZeroInteractions(callbackInstance)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "verifyNoInteractions(callbackInstance)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "verify(callbackInstance).handle(argument)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "callbacksInvokeWhenHasResolvableGenericNonMatchShouldNotInvokeCallback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8->0 [style = bold, label=""];
0->3 [style = bold, label=""];
4->5 [style = dashed, label="0"];
2->5 [style = solid, label="callbackInstance"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->2 [style = bold, label=""];
0->9 [style = bold, label=""];
9->10 [style = bold, label=""];
2->4 [style = solid, label="callbackInstance"];
4->10 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
7->8 [style = bold, label=""];
2->8 [style = dashed, label="0"];
3->4 [style = bold, label=""];
6->2 [style = bold, label=""];
0->10 [style = solid, label="argument"];
}
