digraph {
30 [style = filled, label = "to.assertTerminated()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Flowable<Long> f1 = createFlowableOf5IntervalsOf1SecondIncrementsWithSubscriptionHook(scheduler1,os1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestScheduler scheduler1 = new TestScheduler()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ts.assertNoValues()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TestSubscriberEx<Long> ts = new TestSubscriberEx<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "scheduler2.advanceTimeBy(3,TimeUnit.SECONDS)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ts.assertValues(0L,1L,2L,0L,1L,3L,4L)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "scheduler1.advanceTimeBy(3,TimeUnit.SECONDS)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(os2.get())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "to.assertNoValues()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFalse(os1.get())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "scheduler1.advanceTimeBy(3,TimeUnit.SECONDS)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TestScheduler scheduler2 = new TestScheduler()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "TestObserverEx<Long> to = new TestObserverEx<Long>()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "unsubscribeAsFlowablesComplete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "scheduler2.advanceTimeBy(2,TimeUnit.SECONDS)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ts.assertValues(0L,1L,2L,0L,1L,3L,4L,2L,3L,4L)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "unsubscribeAsFlowablesComplete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "unsubscribeAsObservablesComplete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Flowable<Long> f2 = createFlowableOf5IntervalsOf1SecondIncrementsWithSubscriptionHook(scheduler2,os2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Observable<Long> o1 = createObservableOf5IntervalsOf1SecondIncrementsWithSubscriptionHook(scheduler1,os1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertFalse(os2.get())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ts.assertTerminated()@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AtomicBoolean os1 = new AtomicBoolean(false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "to.assertValues(0L,1L,2L,0L,1L,3L,4L,2L,3L,4L)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Flowable.merge(f1,f2).subscribe(ts)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "to.assertValues(0L,1L,2L,0L,1L)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "TestSubscriberEx<Long> ts = new TestSubscriberEx<Long>()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(os1.get())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(os2.get())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "to.assertValues(0L,1L,2L,0L,1L,3L,4L)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Observable<Long> o2 = createObservableOf5IntervalsOf1SecondIncrementsWithSubscriptionHook(scheduler2,os2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(os1.get())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "AtomicBoolean os2 = new AtomicBoolean(false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Observable.merge(o1,o2).subscribe(to)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ts.assertValues(0L,1L,2L,0L,1L)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->18 [style = bold, label=""];
24->12 [style = bold, label=""];
16->0 [style = bold, label=""];
13->32 [style = bold, label=""];
3->35 [style = dashed, label="0"];
23->33 [style = solid, label="os1"];
19->12 [style = bold, label=""];
0->19 [style = bold, label=""];
16->31 [style = solid, label="os2"];
11->33 [style = dashed, label="0"];
1->15 [style = bold, label=""];
4->13 [style = bold, label=""];
26->34 [style = bold, label=""];
1->27 [style = bold, label=""];
8->32 [style = dashed, label="0"];
14->10 [style = bold, label=""];
10->28 [style = dashed, label="0"];
9->20 [style = bold, label=""];
20->14 [style = bold, label=""];
14->28 [style = bold, label=""];
17->31 [style = solid, label="scheduler2"];
16->0 [style = solid, label="os2"];
25->7 [style = bold, label=""];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
35->4 [style = bold, label=""];
23->11 [style = solid, label="os1"];
32->9 [style = bold, label=""];
28->2 [style = bold, label=""];
31->26 [style = bold, label=""];
7->33 [style = solid, label="scheduler1"];
23->33 [style = bold, label=""];
19->26 [style = dashed, label="0"];
2->21 [style = bold, label=""];
16->31 [style = bold, label=""];
18->5 [style = bold, label=""];
0->24 [style = bold, label=""];
7->23 [style = bold, label=""];
21->1 [style = bold, label=""];
22->30 [style = dashed, label="0"];
17->0 [style = solid, label="scheduler2"];
0->31 [style = dashed, label="0"];
8->9 [style = bold, label=""];
29->7 [style = bold, label=""];
11->17 [style = bold, label=""];
26->34 [style = solid, label="to"];
10->2 [style = bold, label=""];
19->24 [style = dashed, label="0"];
12->3 [style = bold, label=""];
15->27 [style = dashed, label="0"];
34->35 [style = bold, label=""];
5->30 [style = bold, label=""];
23->11 [style = bold, label=""];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
7->11 [style = solid, label="scheduler1"];
5->22 [style = bold, label=""];
12->34 [style = dashed, label="0"];
19->12 [style = solid, label="ts"];
24->12 [style = solid, label="ts"];
17->16 [style = bold, label=""];
33->17 [style = bold, label=""];
}
