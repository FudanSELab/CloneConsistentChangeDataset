digraph {
24 [style = filled, label = "ECall userCallNode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "irInvokeCallNode.attachDecoration(new IRDExpressionType(valueType))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "irExpressionNode = irInvokeCallNode@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "InvokeCallDefNode irCallSubDefNode = new InvokeCallDefNode(userCallNode.getLocation())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ScriptScope scriptScope@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "irCallSubDefNode.attachDecoration(new IRDExpressionType(valueType))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "constantNode.attachDecoration(new IRDExpressionType(parameterType))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BinaryImplNode irBinaryImplNode = new BinaryImplNode(irExpressionNode.getLocation())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "AExpression userCallArgumentNode@@@41@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "irBinaryImplNode.setLeftNode((ExpressionNode)visit(userCallNode.getPrefixNode(),scriptScope))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "irInvokeCallNode.addArgumentNode(injectCast(userCallArgumentNode,scriptScope))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boxType = scriptScope.getDecoration(userCallNode.getPrefixNode(),).getStaticType()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "irNullSafeSubNode.setChildNode(irExpressionNode)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "prefixValueType != null && prefixValueType.getValueType() == @@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Class<?>(( parameterTypes = method.javaMethod.getParameterTypes()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "irInvokeCallNode.addArgumentNode(constantNode)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "AExpression userCallArgumentNode@@@41@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "Object injection = injections(i(@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Class<?> boxType@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "irBinaryImplNode.setRightNode(irExpressionNode)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ECall userCallNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "NullSafeSubNode irNullSafeSubNode = new NullSafeSubNode(irExpressionNode.getLocation())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "irCallSubDefNode.addArgumentNode((ExpressionNode)visit(userArgumentNode,scriptScope))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "throw new IllegalStateException(\"illegal tree structure\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "AExpression userArgumentNode@@@8@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "irCallSubDefNode.attachDecoration(new IRDName(userCallNode.getMethodName()))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "scriptScope.putDecoration(userCallNode,new IRNodeDecoration(irBinaryImplNode))@@@59@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "irExpressionNode = irCallSubDefNode@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "InvokeCallNode irInvokeCallNode = new InvokeCallNode(userCallNode.getLocation())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "visitCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ConstantNode constantNode = new ConstantNode(userCallNode.getLocation())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "boxType = prefixValueType.getValueType()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "irCallSubDefNode.setName(userCallNode.getMethodName())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "constantNode.attachDecoration(new IRDConstant(injection))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Class<?> valueType = scriptScope.getDecoration(userCallNode,).getValueType()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "irBinaryImplNode.attachDecoration(irExpressionNode.getDecoration())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "SDeclBlock userDeclBlockNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "int augmentedOffset = method.javaMethod.getDeclaringClass() == method.targetClass? 0: 1@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "userCallNode.getArgumentNodes()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "scriptScope.putDecoration(userDeclBlockNode,new IRNodeDecoration(irDeclarationBlockNode))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "userCallNode.isNullSafe()@@@49@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "irExpressionNode = irNullSafeSubNode@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ScriptScope scriptScope@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i < injections.length@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "PainlessMethod method = scriptScope.getDecoration(userCallNode,).getStandardPainlessMethod()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "prefixValueType != null@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Class<?> parameterType = parameterTypes(i + augmentedOffset(@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Object(( injections = PainlessLookupUtility.buildInjections(method,scriptScope.getCompilerSettings().asMap())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "irInvokeCallNode.setMethod(scriptScope.getDecoration(userCallNode,).getStandardPainlessMethod())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i++@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ValueType prefixValueType = scriptScope.getDecoration(userCallNode.getPrefixNode(),)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "AExpression userArgumentNode@@@8@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "userCallNode.getArgumentNodes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "visitCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "parameterType != PainlessLookupUtility.typeToUnboxedType(injection.getClass())@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "irInvokeCallNode.setBox(boxType)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ExpressionNode irExpressionNode@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "visitDeclBlock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "irNullSafeSubNode.attachDecoration(irExpressionNode.getDecoration())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "constantNode.setConstant(injection)@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "irDeclarationBlockNode.addDeclarationNode((DeclarationNode)visit(userDeclarationNode,scriptScope))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "DeclarationBlockNode irDeclarationBlockNode = new DeclarationBlockNode(userDeclBlockNode.getLocation())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->27 [style = solid, label="scriptScope"];
42->44 [style = solid, label="parameterTypes"];
31->44 [style = solid, label="augmentedOffset"];
56->24 [style = dotted, label="true"];
46->16 [style = solid, label="irExpressionNode"];
57->62 [style = bold, label=""];
46->5 [style = bold, label=""];
32->12 [style = bold, label=""];
13->20 [style = dotted, label="true"];
8->28 [style = dotted, label="false"];
26->54 [style = dashed, label="0"];
34->18 [style = bold, label=""];
59->57 [style = bold, label=""];
32->45 [style = dotted, label="true"];
39->59 [style = dashed, label="0"];
8->49 [style = dotted, label="false"];
12->19 [style = solid, label="constantNode"];
30->6 [style = bold, label=""];
11->9 [style = bold, label=""];
54->19 [style = bold, label=""];
47->11 [style = bold, label=""];
8->37 [style = dotted, label="true"];
13->35 [style = dotted, label="true"];
22->4 [style = bold, label=""];
48->54 [style = bold, label=""];
8->0 [style = bold, label=""];
60->58 [style = dotted, label="true"];
1->33 [style = bold, label=""];
20->46 [style = solid, label="irNullSafeSubNode"];
23->44 [style = dotted, label="true"];
33->16 [style = solid, label="irExpressionNode"];
3->44 [style = solid, label="i"];
8->52 [style = dotted, label="true"];
11->9 [style = dotted, label="false"];
14->46 [style = bold, label=""];
8->47 [style = bold, label=""];
51->7 [style = solid, label="scriptScope"];
8->0 [style = dotted, label="true"];
17->2 [style = dotted, label="true"];
8->55 [style = dotted, label="true"];
43->44 [style = bold, label=""];
8->33 [style = dotted, label="false"];
33->35 [style = solid, label="irExpressionNode"];
15->16 [style = solid, label="irExpressionNode"];
30->6 [style = solid, label="method"];
34->8 [style = solid, label="prefixValueType"];
15->13 [style = bold, label=""];
8->6 [style = dotted, label="false"];
24->29 [style = solid, label="userCallNode"];
39->34 [style = bold, label=""];
34->11 [style = solid, label="prefixValueType"];
23->21 [style = dotted, label="true"];
8->4 [style = dotted, label="false"];
8->7 [style = dotted, label="true"];
3->21 [style = solid, label="i"];
23->43 [style = dotted, label="true"];
42->31 [style = bold, label=""];
12->48 [style = bold, label=""];
23->19 [style = dotted, label="true"];
24->61 [style = dashed, label="0"];
58->57 [style = solid, label="scriptScope"];
33->13 [style = bold, label=""];
3->23 [style = solid, label="i"];
8->50 [style = dotted, label="true"];
3->23 [style = bold, label=""];
13->46 [style = dotted, label="true"];
61->62 [style = solid, label="userDeclBlockNode"];
49->1 [style = bold, label=""];
2->29 [style = solid, label="userCallNode"];
44->32 [style = bold, label=""];
17->39 [style = bold, label=""];
13->5 [style = bold, label=""];
3->43 [style = solid, label="i"];
23->7 [style = bold, label=""];
31->3 [style = bold, label=""];
36->55 [style = dashed, label="0"];
9->1 [style = solid, label="boxType"];
43->26 [style = solid, label="injection"];
21->23 [style = bold, label=""];
0->15 [style = solid, label="irCallSubDefNode"];
21->43 [style = solid, label="i"];
8->11 [style = dotted, label="false"];
8->25 [style = dotted, label="false"];
4->33 [style = solid, label="irInvokeCallNode"];
24->7 [style = solid, label="scriptScope"];
28->49 [style = bold, label=""];
23->43 [style = bold, label=""];
6->42 [style = bold, label=""];
8->15 [style = dotted, label="true"];
8->31 [style = dotted, label="false"];
26->19 [style = bold, label=""];
35->14 [style = bold, label=""];
48->26 [style = bold, label=""];
23->32 [style = dotted, label="true"];
7->28 [style = bold, label=""];
43->54 [style = solid, label="injection"];
27->10 [style = bold, label=""];
56->39 [style = bold, label=""];
11->22 [style = bold, label=""];
55->15 [style = bold, label=""];
41->16 [style = bold, label=""];
18->8 [style = bold, label=""];
8->36 [style = dotted, label="true"];
60->61 [style = dotted, label="true"];
13->14 [style = dotted, label="true"];
8->42 [style = dotted, label="false"];
17->24 [style = dotted, label="true"];
51->27 [style = solid, label="scriptScope"];
19->21 [style = bold, label=""];
8->40 [style = dotted, label="false"];
32->45 [style = bold, label=""];
59->62 [style = solid, label="irDeclarationBlockNode"];
23->54 [style = dotted, label="true"];
8->3 [style = dotted, label="false"];
8->23 [style = dotted, label="false"];
44->32 [style = solid, label="parameterType"];
0->27 [style = bold, label=""];
24->41 [style = solid, label="scriptScope"];
23->48 [style = dotted, label="true"];
9->4 [style = bold, label=""];
38->29 [style = bold, label=""];
8->53 [style = dotted, label="false"];
36->15 [style = bold, label=""];
8->10 [style = dotted, label="true"];
60->59 [style = bold, label=""];
10->55 [style = bold, label=""];
5->29 [style = solid, label="irBinaryImplNode"];
11->22 [style = dotted, label="true"];
10->36 [style = bold, label=""];
6->43 [style = solid, label="injections"];
45->12 [style = bold, label=""];
21->44 [style = solid, label="i"];
23->26 [style = dotted, label="true"];
56->51 [style = dotted, label="true"];
5->41 [style = bold, label=""];
4->30 [style = bold, label=""];
18->28 [style = solid, label="valueType"];
51->41 [style = solid, label="scriptScope"];
44->48 [style = solid, label="parameterType"];
20->35 [style = bold, label=""];
8->27 [style = dotted, label="true"];
23->12 [style = dotted, label="true"];
8->47 [style = dotted, label="false"];
8->30 [style = dotted, label="false"];
21->23 [style = solid, label="i"];
22->1 [style = solid, label="boxType"];
18->10 [style = solid, label="valueType"];
8->1 [style = dotted, label="false"];
16->38 [style = bold, label=""];
15->35 [style = solid, label="irExpressionNode"];
13->20 [style = bold, label=""];
}
