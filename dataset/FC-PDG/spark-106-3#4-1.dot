digraph {
4 [style = filled, label = "int seed@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assert(lengthInBytes % 4 == 0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "hashBytesByInt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return h1@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int h1 = seed@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int k1 = mixK1(halfWord)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < lengthInBytes@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "long offset@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int halfWord = Platform.getInt(base,offset + i)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Object base@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Object base@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int seed@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int seed@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "long offset@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "hashBytesByInt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "isBigEndian@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "h1 = mixH1(h1,mixK1(halfWord))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "hashBytesByInt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "i += 4@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Object base@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int lengthInBytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "int lengthInBytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "halfWord = Integer.reverseBytes(halfWord)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "h1 = mixH1(h1,k1)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->7 [style = solid, label="base"];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
22->7 [style = solid, label="offset"];
16->18 [style = bold, label=""];
0->7 [style = solid, label="base"];
19->8 [style = solid, label="lengthInBytes"];
15->6 [style = solid, label="h1"];
20->11 [style = dotted, label="true"];
21->11 [style = dotted, label="true"];
7->18 [style = solid, label="halfWord"];
20->17 [style = dotted, label="true"];
2->3 [style = bold, label=""];
11->7 [style = solid, label="offset"];
12->8 [style = solid, label="i"];
18->15 [style = bold, label=""];
8->16 [style = dotted, label="true"];
20->14 [style = dotted, label="true"];
8->15 [style = dotted, label="true"];
8->7 [style = dotted, label="true"];
19->2 [style = solid, label="lengthInBytes"];
21->22 [style = dotted, label="true"];
8->6 [style = bold, label=""];
3->15 [style = solid, label="h1"];
5->10 [style = solid, label="k1"];
3->12 [style = bold, label=""];
10->6 [style = solid, label="h1"];
8->10 [style = dotted, label="true"];
9->8 [style = bold, label=""];
3->6 [style = solid, label="h1"];
23->8 [style = solid, label="lengthInBytes"];
11->2 [style = solid, label="lengthInBytes"];
7->15 [style = solid, label="halfWord"];
8->7 [style = bold, label=""];
21->2 [style = bold, label=""];
18->15 [style = solid, label="halfWord"];
4->3 [style = solid, label="seed"];
20->2 [style = bold, label=""];
13->1 [style = dotted, label="true"];
7->5 [style = bold, label=""];
21->24 [style = dotted, label="true"];
8->5 [style = dotted, label="true"];
13->0 [style = dotted, label="true"];
15->9 [style = bold, label=""];
12->8 [style = bold, label=""];
11->8 [style = solid, label="lengthInBytes"];
14->3 [style = solid, label="seed"];
21->23 [style = dotted, label="true"];
7->16 [style = bold, label=""];
11->3 [style = solid, label="seed"];
24->7 [style = solid, label="base"];
23->2 [style = solid, label="lengthInBytes"];
13->11 [style = dotted, label="true"];
3->10 [style = solid, label="h1"];
9->8 [style = solid, label="i"];
7->5 [style = solid, label="halfWord"];
10->9 [style = bold, label=""];
20->19 [style = dotted, label="true"];
9->7 [style = solid, label="i"];
8->9 [style = dotted, label="true"];
1->7 [style = solid, label="offset"];
12->7 [style = solid, label="i"];
13->4 [style = dotted, label="true"];
13->2 [style = bold, label=""];
16->18 [style = dotted, label="true"];
}
