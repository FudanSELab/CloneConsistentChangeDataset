digraph {
12 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ProduceRequest.Builder builder = ProduceRequest.Builder.forCurrentMagic((short)1,1000,Collections.emptyMap())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestCallbackHandler handler = new TestCallbackHandler()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testRequestTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,requestTimeoutMs,null,null,handler)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testRequestTimeout(request)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,requestTimeoutMs,handler)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testDefaultRequestTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(requestTimeoutMs,request.requestTimeoutMs())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRequestTimeout(request)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testRequestTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "int requestTimeoutMs = defaultRequestTimeoutMs + 5000@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(defaultRequestTimeoutMs,request.requestTimeoutMs())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "awaitReady(client,node)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
6->5 [style = solid, label="handler"];
4->2 [style = solid, label="requestTimeoutMs"];
4->5 [style = solid, label="requestTimeoutMs"];
3->1 [style = bold, label=""];
9->2 [style = bold, label=""];
5->0 [style = solid, label="request"];
1->9 [style = solid, label="builder"];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
5->9 [style = dashed, label="0"];
6->9 [style = solid, label="handler"];
7->3 [style = bold, label=""];
6->4 [style = bold, label=""];
9->0 [style = solid, label="request"];
5->2 [style = bold, label=""];
12->10 [style = solid, label="request"];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
13->3 [style = bold, label=""];
11->10 [style = bold, label=""];
1->5 [style = solid, label="builder"];
1->12 [style = bold, label=""];
1->12 [style = solid, label="builder"];
4->9 [style = solid, label="requestTimeoutMs"];
4->11 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
