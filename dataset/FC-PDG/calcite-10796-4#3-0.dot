digraph {
12 [style = filled, label = "final Pair<String,Hook.Closeable> pair = currentTimeString(LOCAL_TZ)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.checkScalar(\"CURRENT_TIMESTAMP\",Pattern.compile(pair.left + \"(0-9((0-9(:(0-9((0-9(\"),\"TIMESTAMP(0) NOT NULL\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkFails(\"^LOCALTIMESTAMP()^\",\"No match found for function signature LOCALTIMESTAMP\(\)\",false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "tester.checkScalar(\"LOCALTIMESTAMP\",Pattern.compile(pair.left + \"(0-9((0-9(:(0-9((0-9(\"),\"TIMESTAMP(0) NOT NULL\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tester.checkScalar(\"CAST(CURRENT_TIMESTAMP AS VARCHAR(30))\",Pattern.compile(pair.left + \"(0-9((0-9(:(0-9((0-9(\"),\"VARCHAR(30) NOT NULL\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testLocalTimestampFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Pair<String,Hook.Closeable> pair = currentTimeString(CURRENT_TZ)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkScalar(\"LOCALTIMESTAMP(1)\",TIMESTAMP_PATTERN,\"TIMESTAMP(1) NOT NULL\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.setFor(SqlStdOperatorTable.CURRENT_TIMESTAMP)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkScalar(\"LOCALTIMESTAMP\",TIMESTAMP_PATTERN,\"TIMESTAMP(0) NOT NULL\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "pair.right.close()@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tester.checkFails(\"^CURRENT_TIMESTAMP()^\",\"No match found for function signature CURRENT_TIMESTAMP\(\)\",false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.setFor(SqlStdOperatorTable.LOCALTIMESTAMP)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tester.checkFails(\"^CURRENT_TIMESTAMP(4000000000)^\",LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "tester.checkScalar(\"CURRENT_TIMESTAMP\",TIMESTAMP_PATTERN,\"TIMESTAMP(0) NOT NULL\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.checkScalar(\"CURRENT_TIMESTAMP(1)\",TIMESTAMP_PATTERN,\"TIMESTAMP(1) NOT NULL\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tester.checkFails(\"LOCALTIMESTAMP(^4000000000^)\",LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkFails(\"CURRENT_TIMESTAMP(^4000000000^)\",LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testCurrentTimestampFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkScalar(\"CAST(LOCALTIMESTAMP AS VARCHAR(30))\",Pattern.compile(pair.left + \"(0-9((0-9(:(0-9((0-9(\"),\"VARCHAR(30) NOT NULL\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCurrentTimestampFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
1->15 [style = dashed, label="0"];
12->15 [style = bold, label=""];
6->0 [style = bold, label=""];
6->14 [style = dashed, label="0"];
15->19 [style = bold, label=""];
7->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
1->7 [style = bold, label=""];
11->2 [style = bold, label=""];
19->8 [style = bold, label=""];
4->12 [style = dashed, label="0"];
13->17 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
17->12 [style = bold, label=""];
10->5 [style = bold, label=""];
20->16 [style = bold, label=""];
5->17 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
5->4 [style = bold, label=""];
18->13 [style = bold, label=""];
0->18 [style = dashed, label="0"];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
4->1 [style = bold, label=""];
3->10 [style = dashed, label="0"];
}
