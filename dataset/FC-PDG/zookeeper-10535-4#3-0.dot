digraph {
0 [style = filled, label = "List<Op> ops = Arrays.asList(Op.create(\"/multi\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT),Op.delete(\"/nonexist1\",-1))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verifyMultiFailure_NoSideEffect['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assert.assertTrue(this.opResults.get(1) instanceof OpResult.ErrorResult)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertNull(zk.exists(\"/multi\",false))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "List<Op> ops = Arrays.asList(Op.create(\"/multi\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT),Op.delete(\"/nonexist1\",-1),Op.setData(\"/multi\",\"test\".getBytes(),-1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "latch_await()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "zk.multi(ops,this,null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(this.opResults.get(2) instanceof OpResult.ErrorResult)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(this.opResults.get(0) instanceof OpResult.ErrorResult)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "verifyMultiFailure_AllErrorResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertNull(zk.exists(\"/multi\",false))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "verifyMultiFailure_NoSideEffect['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->7 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->8 [style = bold, label=""];
2->12 [style = dashed, label="0"];
1->4 [style = bold, label=""];
5->2 [style = bold, label=""];
12->10 [style = bold, label=""];
6->0 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->11 [style = bold, label=""];
5->12 [style = bold, label=""];
11->1 [style = solid, label="ops"];
2->7 [style = dashed, label="0"];
11->1 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
3->0 [style = bold, label=""];
0->1 [style = solid, label="ops"];
}
