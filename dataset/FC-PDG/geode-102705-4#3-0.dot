digraph {
29 [style = filled, label = "DataSerializer.writeTreeMap(null,out)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(null,DataSerializer.readTreeMap(in))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(new TreeMap(),DataSerializer.readTreeMap(in))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "TreeMap map2 = DataSerializer.readTreeMap(in)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DataInput in = getDataInput()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataInput in = getDataInput()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(new HashMap<>(map),new HashMap<>(map2))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "String value = String.valueOf(random.nextLong())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Object value = String.valueOf(random.nextLong())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testIdentityHashMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "IdentityHashMap<Long,String> map2 = DataSerializer.readIdentityHashMap(in)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "DataOutputStream out = getDataOutput()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DataSerializer.writeIdentityHashMap(map,out)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testTreeMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "DataSerializer.writeTreeMap(new TreeMap(),out)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int size = random.nextInt(50)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataSerializer.writeTreeMap(map,out)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "out.flush()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Long key = random.nextLong()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testIdentityHashMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IdentityHashMap<Long,String> map = new IdentityHashMap<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(map,map2)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Object key = new Long(random.nextLong())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "out.flush()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IdentityHashMap map = new IdentityHashMap()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "TreeMap map = new TreeMap()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "map.put(key,value)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Random random = getRandom()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < size@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
2->10 [style = dotted, label="true"];
11->16 [style = bold, label=""];
5->29 [style = bold, label=""];
15->30 [style = solid, label="in"];
14->15 [style = solid, label="map2"];
15->20 [style = dashed, label="0"];
30->22 [style = bold, label=""];
2->0 [style = dotted, label="true"];
16->20 [style = solid, label="map"];
21->0 [style = bold, label=""];
15->28 [style = solid, label="in"];
8->18 [style = bold, label=""];
6->7 [style = solid, label="map"];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
2->17 [style = dotted, label="true"];
10->2 [style = solid, label="i"];
16->7 [style = solid, label="map"];
15->22 [style = solid, label="in"];
12->17 [style = dashed, label="0"];
8->14 [style = bold, label=""];
19->11 [style = bold, label=""];
22->28 [style = bold, label=""];
8->18 [style = solid, label="in"];
9->2 [style = solid, label="size"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
15->30 [style = bold, label=""];
5->29 [style = solid, label="out"];
2->21 [style = dotted, label="true"];
1->21 [style = dashed, label="0"];
12->1 [style = bold, label=""];
1->0 [style = solid, label="value"];
13->11 [style = bold, label=""];
26->11 [style = bold, label=""];
7->3 [style = bold, label=""];
2->12 [style = bold, label=""];
5->7 [style = solid, label="out"];
18->20 [style = solid, label="map2"];
24->14 [style = bold, label=""];
4->2 [style = solid, label="i"];
17->0 [style = solid, label="key"];
28->25 [style = solid, label="map2"];
15->22 [style = dashed, label="0"];
29->27 [style = bold, label=""];
18->20 [style = bold, label=""];
0->10 [style = bold, label=""];
6->16 [style = dashed, label="0"];
23->25 [style = solid, label="map"];
6->15 [style = solid, label="map"];
5->27 [style = solid, label="out"];
2->1 [style = dotted, label="true"];
3->8 [style = bold, label=""];
14->30 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
4->10 [style = solid, label="i"];
2->12 [style = dotted, label="true"];
28->25 [style = bold, label=""];
5->7 [style = bold, label=""];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
27->24 [style = bold, label=""];
23->24 [style = solid, label="map"];
7->29 [style = dashed, label="0"];
5->24 [style = solid, label="out"];
14->18 [style = dashed, label="0"];
6->9 [style = bold, label=""];
23->9 [style = bold, label=""];
11->23 [style = bold, label=""];
17->21 [style = bold, label=""];
12->0 [style = solid, label="key"];
8->14 [style = solid, label="in"];
16->9 [style = bold, label=""];
21->0 [style = solid, label="value"];
2->5 [style = bold, label=""];
}
