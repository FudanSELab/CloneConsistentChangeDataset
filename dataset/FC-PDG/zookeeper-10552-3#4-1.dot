digraph {
20 [style = filled, label = "testDeleteCountQuota['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "SetQuotaCommand.createQuota(zk,path,st)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "fail(\"should not set quota when exceeds hard count quota\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "st = new StatsTrack()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSetQuotaWhenExceedCountHardQuota['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "zk.create(path,\"data\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fail(\"should not set quota when exceeds hard count quota\")@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "zk.create(path + \"/c2\",\"data\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String path = \"/c1\"@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "st.setCountHardLimit(count)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSetQuotaWhenExceedCountHardQuota['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DelQuotaCommand.delQuota(zk,path,st)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "zk.create(path + \"/c2\" + \"/c3\",\"data\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String namespace = UUID.randomUUID().toString()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "QuotaExceededException e@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "{}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int count = 2@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "st.setCountHardLimit(1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StatsTrack st = new StatsTrack()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String path = \"/\" + namespace@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "zk.create(path + \"/c2\",\"data\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "zk.create(path + \"/c2\" + \"/c3\",\"data\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
1->18 [style = solid, label="path"];
13->10 [style = bold, label=""];
4->14 [style = bold, label=""];
16->18 [style = bold, label=""];
7->1 [style = bold, label=""];
1->15 [style = solid, label="path"];
21->19 [style = bold, label=""];
9->2 [style = bold, label=""];
8->19 [style = bold, label=""];
9->3 [style = solid, label="st"];
12->6 [style = solid, label="path"];
2->3 [style = bold, label=""];
18->15 [style = bold, label=""];
1->10 [style = dashed, label="0"];
20->1 [style = bold, label=""];
12->6 [style = bold, label=""];
6->2 [style = solid, label="count"];
1->4 [style = solid, label="path"];
1->0 [style = solid, label="path"];
1->3 [style = solid, label="path"];
3->4 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
12->8 [style = solid, label="path"];
12->4 [style = solid, label="path"];
12->14 [style = solid, label="path"];
5->6 [style = bold, label=""];
2->4 [style = solid, label="st"];
10->12 [style = bold, label=""];
0->8 [style = bold, label=""];
19->18 [style = solid, label="st"];
14->8 [style = bold, label=""];
9->3 [style = solid, label="count"];
6->9 [style = bold, label=""];
10->12 [style = solid, label="namespace"];
1->5 [style = solid, label="path"];
8->11 [style = bold, label=""];
17->21 [style = bold, label=""];
}
