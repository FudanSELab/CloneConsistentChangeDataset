digraph {
10 [style = filled, label = "final Identifier identifier = Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(),\"references\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "customEventType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(ev.getSource(),is(sdo))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertSame(ev.getSource(),sdo)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(ev.getOf(),is(CollectionDomainEvent.Of.ADD_TO))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "defaultEventType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Identifier identifier = Identifier.propertyOrCollectionIdentifier(,\"references\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "defaultEventType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(ev.getValue(),is(other))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final CollectionDomainEvent<SomeDomainObject,SomeReferencedObject> ev = Utils.domainEventHelper().newCollectionDomainEvent(,AbstractDomainEvent.Phase.EXECUTED,identifier,sdo,CollectionDomainEvent.Of.ADD_TO,other)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final CollectionDomainEvent<Object,Object> ev = Utils.domainEventHelper().newCollectionDomainEvent(,null,identifier,sdo)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertSame(ev.getValue(),other)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final SomeReferencedObject other = new SomeReferencedObject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final SomeDomainObject sdo = new SomeDomainObject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(ev.getIdentifier(),is(identifier))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final CollectionDomainEvent<Object,Object> ev = Utils.domainEventHelper().newCollectionDomainEvent(,null,identifier,sdo,CollectionDomainEvent.Of.ADD_TO,other)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10->9 [style = solid, label="identifier"];
0->15 [style = solid, label="sdo"];
1->8 [style = bold, label=""];
0->6 [style = bold, label=""];
7->14 [style = solid, label="identifier"];
2->3 [style = bold, label=""];
6->8 [style = solid, label="other"];
8->12 [style = dashed, label="0"];
7->4 [style = solid, label="identifier"];
3->4 [style = bold, label=""];
6->14 [style = solid, label="other"];
7->14 [style = bold, label=""];
0->2 [style = solid, label="sdo"];
11->0 [style = bold, label=""];
2->14 [style = dashed, label="0"];
5->0 [style = bold, label=""];
0->3 [style = solid, label="sdo"];
6->12 [style = solid, label="other"];
2->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
15->4 [style = bold, label=""];
0->14 [style = solid, label="sdo"];
1->12 [style = bold, label=""];
3->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
7->10 [style = dashed, label="0"];
6->2 [style = solid, label="other"];
7->2 [style = solid, label="identifier"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
10->4 [style = solid, label="identifier"];
6->7 [style = bold, label=""];
13->0 [style = bold, label=""];
0->9 [style = solid, label="sdo"];
}
