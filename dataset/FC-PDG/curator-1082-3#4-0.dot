digraph {
14 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(backgroundLatch))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "client.create().forPath(\"/test/a/b\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client.delete().forPath(\"/test/foo\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.setData().forPath(\"/test/foo\",\"hey\".getBytes())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testPersistentWatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Watcher watcher = null@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CountDownLatch latch = new CountDownLatch(3)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.create().forPath(\"/test/a/b/c\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client.create().forPath(\"/test/a/b/c/d\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Watcher watcher = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.blockUntilConnected()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT).usingWatcher(watcher).forPath(\"/test/foo\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testPersistentRecursiveWatchInBackground['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "client.create().forPath(\"/test/a\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "BackgroundCallback backgroundCallback = null@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testPersistentWatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "CountDownLatch latch = new CountDownLatch(5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT_RECURSIVE).inBackground(backgroundCallback).usingWatcher(watcher).forPath(\"/test\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "client.create().forPath(\"/test\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "CountDownLatch backgroundLatch = new CountDownLatch(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
2->19 [style = dashed, label="0"];
15->14 [style = bold, label=""];
22->19 [style = bold, label=""];
17->6 [style = bold, label=""];
9->2 [style = bold, label=""];
4->0 [style = solid, label="latch"];
6->21 [style = bold, label=""];
1->3 [style = bold, label=""];
10->3 [style = bold, label=""];
9->22 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
7->4 [style = bold, label=""];
7->20 [style = bold, label=""];
4->11 [style = solid, label="latch"];
21->18 [style = bold, label=""];
17->16 [style = solid, label="latch"];
6->18 [style = dashed, label="0"];
2->0 [style = bold, label=""];
18->22 [style = bold, label=""];
19->13 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
3->7 [style = bold, label=""];
20->23 [style = bold, label=""];
4->20 [style = dashed, label="0"];
5->21 [style = dashed, label="0"];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
12->3 [style = bold, label=""];
13->15 [style = bold, label=""];
20->14 [style = solid, label="backgroundLatch"];
6->9 [style = bold, label=""];
2->11 [style = bold, label=""];
}
