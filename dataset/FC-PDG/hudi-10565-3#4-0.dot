digraph {
6 [style = filled, label = "testCompactionIsNotScheduledEarly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(6,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HoodieReadClient readClient = getHoodieReadClient(cfg.getBasePath())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(HoodieActiveTimeline.createNewInstantTime(),10)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testSuccessfulCompactionBasedOnNumOrTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "finalInstant = HoodieActiveTimeline.createNewInstantTime(20000)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(HoodieActiveTimeline.createNewInstantTime(),100)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(4,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,10),writeClient,metaClient,cfg,false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testCompactionIsNotScheduledEarly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(3,20,CompactionTriggerStrategy.NUM_OR_TIME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String finalInstant = HoodieActiveTimeline.createNewInstantTime()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(2,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,instants,records,cfg,true,new ArrayList<>())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,10),writeClient,metaClient,cfg,false)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(3,60,CompactionTriggerStrategy.NUM_COMMITS)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<String> instants = IntStream.range(0,2).mapToObj(null).collect(Collectors.toList())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->21 [style = bold, label=""];
14->18 [style = bold, label=""];
13->20 [style = solid, label="finalInstant"];
19->5 [style = bold, label=""];
8->0 [style = bold, label=""];
16->1 [style = solid, label="cfg"];
1->8 [style = bold, label=""];
12->1 [style = solid, label="records"];
11->16 [style = bold, label=""];
7->2 [style = bold, label=""];
2->1 [style = solid, label="records"];
4->1 [style = bold, label=""];
2->3 [style = bold, label=""];
4->1 [style = solid, label="instants"];
5->17 [style = bold, label=""];
16->12 [style = bold, label=""];
7->1 [style = solid, label="cfg"];
5->8 [style = dashed, label="0"];
3->1 [style = solid, label="readClient"];
5->0 [style = bold, label=""];
17->15 [style = bold, label=""];
12->3 [style = bold, label=""];
5->17 [style = solid, label="metaClient"];
1->19 [style = bold, label=""];
21->20 [style = solid, label="metaClient"];
7->16 [style = dashed, label="0"];
19->17 [style = solid, label="finalInstant"];
13->20 [style = bold, label=""];
6->7 [style = bold, label=""];
16->20 [style = solid, label="cfg"];
20->14 [style = bold, label=""];
2->12 [style = dashed, label="0"];
15->10 [style = bold, label=""];
3->4 [style = bold, label=""];
16->17 [style = solid, label="cfg"];
21->13 [style = bold, label=""];
1->5 [style = bold, label=""];
9->7 [style = bold, label=""];
}
