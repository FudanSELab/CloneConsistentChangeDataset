digraph {
2 [style = filled, label = "server.invoke(null)@@@106@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cycleDurableClient(client2,\"client2_dc\",server1Port,regionName,timeout)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "VM client1 = host.getVM(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client1.invoke(new CacheSerializableRunnable(\"Register more cq for client 1\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()CqAttributesFactory cqAf = new CqAttributesFactory()CqAttributes attributes = cqAf.create()try {queryService.newCq(\"client1MoreDCQ1\",\"Select * From \" + SEPARATOR + regionName + \" where id = 1\",attributes,true).execute()queryService.newCq(\"client1MoreDCQ2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 10\",attributes,true).execute()queryService.newCq(\"client1MoreNoDC1\",\"Select * From \" + SEPARATOR + regionName,attributes,false).execute()queryService.newCq(\"client1MoreNoDC2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 3\",attributes,false).execute()}catch (RegionNotFoundException e) catch (CqException e) catch (CqExistsException e) }})@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cqDUnitTest.createServer(server)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cycleDurableClient(client1,\"client1_dc\",server1Port,regionName,timeout)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testGetDurableCqsFromServerCycleClientsAndMoreCqs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "final String host0 = NetworkUtils.getServerHostName(server.getHost())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "cqDUnitTest.createPool(client1,poolName1,host0,port)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "client1.invoke(new CacheSerializableRunnable(\"check durable cqs for client 1\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(4,list.size())assertTrue(list.contains(\"client1DCQ1\"))assertTrue(list.contains(\"client1DCQ2\"))assertTrue(list.contains(\"client1MoreDCQ1\"))assertTrue(list.contains(\"client1MoreDCQ2\"))}})@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cycleDurableClient(client2,\"client2_dc\",server1Port,regionName,timeout)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final int port = server.invoke(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testGetDurableCQsFromServerWithEmptyList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client2.invoke(null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cqDUnitTest.closeServer(server)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testGetDurableCqsFromServerCycleClientsAndMoreCqs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int server1Port = ((Integer)server.invoke(null)).intValue()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client2.invoke(new CacheSerializableRunnable(\"check durable cqs for client 2\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(8,list.size())assertTrue(list.contains(\"client2DCQ1\"))assertTrue(list.contains(\"client2DCQ2\"))assertTrue(list.contains(\"client2DCQ3\"))assertTrue(list.contains(\"client2DCQ4\"))assertTrue(list.contains(\"client2MoreDCQ1\"))assertTrue(list.contains(\"client2MoreDCQ2\"))assertTrue(list.contains(\"client2MoreDCQ3\"))assertTrue(list.contains(\"client2MoreDCQ4\"))}})@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "VM server = host.getVM(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int timeout = 60000@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "client2.invoke(null)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createClient1CqsAndDurableCqs(client1,regionName)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createClient2CqsAndDurableCqs(client2,regionName)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client1.invoke(null)@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "client1.invoke(new CacheSerializableRunnable(\"test getDurableCQsFromServer for client1\"){@Override public void run2(){QueryService queryService = nulltry {queryService = (PoolManager.find(poolName1)).getQueryService()}catch (Exception cqe) List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(0,list.size())assertFalse(list.contains(\"client1DCQ1\"))assertFalse(list.contains(\"client1DCQ2\"))}})@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final String poolName1 = \"pool1\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client2.invoke(new CacheSerializableRunnable(\"Register more cq for client 2\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()CqAttributesFactory cqAf = new CqAttributesFactory()CqAttributes attributes = cqAf.create()try {queryService.newCq(\"client2MoreDCQ1\",\"Select * From \" + SEPARATOR + regionName + \" where id = 1\",attributes,true).execute()queryService.newCq(\"client2MoreDCQ2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 10\",attributes,true).execute()queryService.newCq(\"client2MoreDCQ3\",\"Select * From \" + SEPARATOR + regionName,attributes,true).execute()queryService.newCq(\"client2MoreDCQ4\",\"Select * From \" + SEPARATOR + regionName + \" where id = 3\",attributes,true).execute()}catch (RegionNotFoundException e) catch (CqException e) catch (CqExistsException e) }})@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final Host host = Host.getHost(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client1.invoke(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cycleDurableClient(client1,\"client1_dc\",server1Port,regionName,timeout)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "VM client2 = host.getVM(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String regionName = \"testGetAllDurableCqsFromServerCycleClients\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cqDUnitTest.closeClient(client1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->3 [style = bold, label=""];
8->24 [style = solid, label="server"];
19->13 [style = solid, label="timeout"];
27->28 [style = bold, label=""];
20->16 [style = solid, label="client2"];
17->7 [style = solid, label="regionName"];
19->16 [style = solid, label="timeout"];
12->2 [style = bold, label=""];
3->7 [style = solid, label="server1Port"];
4->5 [style = bold, label=""];
25->26 [style = bold, label=""];
17->13 [style = solid, label="regionName"];
9->21 [style = bold, label=""];
22->17 [style = bold, label=""];
6->20 [style = bold, label=""];
26->27 [style = bold, label=""];
17->5 [style = solid, label="regionName"];
3->1 [style = bold, label=""];
20->19 [style = bold, label=""];
7->13 [style = bold, label=""];
8->18 [style = bold, label=""];
8->6 [style = solid, label="server"];
25->27 [style = solid, label="host0"];
6->11 [style = solid, label="client1"];
10->7 [style = bold, label=""];
11->10 [style = bold, label=""];
19->5 [style = solid, label="timeout"];
6->32 [style = bold, label=""];
32->25 [style = bold, label=""];
0->12 [style = bold, label=""];
15->11 [style = bold, label=""];
20->13 [style = solid, label="client2"];
3->5 [style = solid, label="server1Port"];
3->16 [style = solid, label="server1Port"];
17->16 [style = solid, label="regionName"];
17->10 [style = solid, label="regionName"];
3->13 [style = solid, label="server1Port"];
26->27 [style = solid, label="poolName1"];
1->15 [style = bold, label=""];
17->8 [style = bold, label=""];
20->10 [style = solid, label="client2"];
6->5 [style = solid, label="client1"];
17->11 [style = solid, label="regionName"];
18->29 [style = solid, label="client1"];
18->27 [style = solid, label="client1"];
31->30 [style = bold, label=""];
19->7 [style = solid, label="timeout"];
29->24 [style = bold, label=""];
14->4 [style = bold, label=""];
30->8 [style = bold, label=""];
19->32 [style = dashed, label="0"];
13->14 [style = bold, label=""];
21->0 [style = bold, label=""];
23->17 [style = bold, label=""];
32->27 [style = solid, label="port"];
5->16 [style = bold, label=""];
6->7 [style = solid, label="client1"];
18->6 [style = bold, label=""];
28->29 [style = bold, label=""];
16->9 [style = bold, label=""];
}
