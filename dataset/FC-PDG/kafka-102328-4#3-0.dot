digraph {
0 [style = filled, label = "final String rateDescription = \"The average per-second number of newly created tasks\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String totalDescription = \"The total number of newly created tasks\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(,streamsMetrics)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expect(expectedSensor.add(eq(new MetricName(\"process-rate\",threadLevelGroup,\"The average per-second number of calls to process\",tagMap)),anyObject())).andReturn(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Sensor sensor = ThreadMetrics.createTaskSensor(THREAD_ID,streamsMetrics)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String operation = \"task-created\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Sensor sensor = ThreadMetrics.processRateSensor(THREAD_ID,streamsMetrics)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verify(,streamsMetrics)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shouldGetProcessRateSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,\"process-rate\",RecordingLevel.INFO)).andReturn(expectedSensor)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "shouldGetCreateTaskSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "mockStatic()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "replay(,streamsMetrics,expectedSensor)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldGetCreateTaskSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "replay(,streamsMetrics)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expect(expectedSensor.add(eq(new MetricName(\"process-total\",threadLevelGroup,\"The total number of calls to process\",tagMap)),anyObject())).andReturn(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
5->1 [style = solid, label="operation"];
0->1 [style = solid, label="rateDescription"];
3->2 [style = solid, label="sensor"];
11->8 [style = dashed, label="0"];
12->5 [style = bold, label=""];
8->19 [style = bold, label=""];
18->15 [style = bold, label=""];
8->6 [style = bold, label=""];
20->14 [style = bold, label=""];
9->8 [style = bold, label=""];
1->11 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
3->19 [style = dashed, label="0"];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
10->5 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
7->2 [style = bold, label=""];
5->4 [style = bold, label=""];
14->18 [style = bold, label=""];
4->1 [style = solid, label="totalDescription"];
19->13 [style = solid, label="sensor"];
15->8 [style = bold, label=""];
17->20 [style = bold, label=""];
}
