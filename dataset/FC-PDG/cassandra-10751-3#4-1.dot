digraph {
14 [style = filled, label = "cfs.truncateBlocking()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "rebuild.get()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "!cfs.metadata.getIndexes().get(\"test_index\").isPresent()@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"k6\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ColumnDefinition cd = cfs.metadata.getColumnDefinition(indexedColumnName).copy()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < 10@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "new RowUpdateBuilder(cfs.metadata,0,key).addRangeTombstone(0,7).build().applyUnsafe()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "!cfs.metadata.getIndexes().get(\"test_index\").isPresent()@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "cfs.metadata.indexes(cfs.metadata.getIndexes().with(indexDef))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rebuild.get()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1,index.rowsUpdated.size())@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "index.reset()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "builder.newRow(i).add(\"val\",i)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "UpdateBuilder builder = UpdateBuilder.create(cfs.metadata,key).withTimestamp(0)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "UpdateBuilder.create(cfs.metadata,key).withTimestamp(0).newRow(1).add(\"val\",1).applyUnsafe()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "rebuild != null@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "ByteBuffer indexedColumnName = ByteBufferUtil.bytes(\"val\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(1,index.rowsInserted.size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "builder.newRow(i).add(\"val\",i)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "IndexMetadata indexDef = IndexMetadata.fromIndexTargets(cfs.metadata,Collections.singletonList(new IndexTarget(cd.name,IndexTarget.Type.VALUES)),\"test_index\",IndexMetadata.Kind.CUSTOM,ImmutableMap.of(IndexTarget.CUSTOM_INDEX_OPTION_NAME,.getName()))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "testOverwritesToDeletedColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(8,index.rowsDeleted.size())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cfs.disableAutoCompaction()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"k5\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rebuild != null@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,cfs.getLiveSSTables().size())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CompactionManager.instance.performMaximal(cfs,false)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "UpdateBuilder.create(cfs.metadata,key).withTimestamp(2).newRow(1).add(\"val\",1).applyUnsafe()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "StubIndex index = (StubIndex)cfs.indexManager.getIndexByName(\"test_index\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cfs.forceBlockingFlush()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ColumnFamilyStore cfs = table.getColumnFamilyStore(CFNAME)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "new RowUpdateBuilder(cfs.metadata,1,key).addRangeTombstone(0,1).build().applyUnsafe()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i++@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "cfs.forceBlockingFlush()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "builder.applyUnsafe()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Future<?> rebuild = cfs.indexManager.addIndex(indexDef)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testRowWithRangeTombstonesUpdatesSecondaryIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(10,index.rowsInserted.size())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "IndexMetadata indexDef = IndexMetadata.singleTargetIndex(cfs.metadata,new IndexTarget(cd.name,IndexTarget.Type.VALUES),\"test_index\",IndexMetadata.Kind.CUSTOM,ImmutableMap.of(IndexTarget.CUSTOM_INDEX_OPTION_NAME,.getName()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testRowWithRangeTombstonesUpdatesSecondaryIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "IndexMetadata indexDef = IndexMetadata.singleTargetIndex(cfs.metadata,new IndexTarget(cd.name,IndexTarget.Type.VALUES),\"test_index\",IndexMetadata.Kind.CUSTOM,ImmutableMap.of(IndexTarget.CUSTOM_INDEX_OPTION_NAME,.getName()))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "StubIndex index = (StubIndex)cfs.indexManager.listIndexes().stream().filter(null).findFirst().orElseThrow(null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "!cfs.metadata.getIndexes().get(\"test_index\").isPresent()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Keyspace table = Keyspace.open(KSNAME)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
42->41 [style = bold, label=""];
32->28 [style = dotted, label="true"];
3->24 [style = bold, label=""];
11->14 [style = bold, label=""];
15->21 [style = bold, label=""];
27->28 [style = bold, label=""];
36->28 [style = bold, label=""];
18->30 [style = bold, label=""];
26->9 [style = bold, label=""];
13->5 [style = dotted, label="true"];
40->18 [style = solid, label="indexDef"];
43->26 [style = bold, label=""];
22->4 [style = bold, label=""];
21->26 [style = bold, label=""];
35->37 [style = bold, label=""];
36->18 [style = bold, label=""];
26->35 [style = bold, label=""];
32->18 [style = bold, label=""];
16->39 [style = dashed, label="0"];
28->18 [style = bold, label=""];
15->34 [style = bold, label=""];
15->34 [style = dotted, label="true"];
18->15 [style = bold, label=""];
44->17 [style = bold, label=""];
0->7 [style = bold, label=""];
7->33 [style = bold, label=""];
33->18 [style = solid, label="indexDef"];
8->29 [style = solid, label="i"];
13->29 [style = dotted, label="true"];
13->5 [style = bold, label=""];
41->38 [style = bold, label=""];
33->28 [style = solid, label="indexDef"];
30->15 [style = bold, label=""];
2->17 [style = bold, label=""];
13->10 [style = bold, label=""];
27->18 [style = bold, label=""];
20->8 [style = solid, label="i"];
20->13 [style = bold, label=""];
25->39 [style = bold, label=""];
6->21 [style = bold, label=""];
9->20 [style = bold, label=""];
25->24 [style = solid, label="cfs"];
36->28 [style = dotted, label="true"];
20->29 [style = solid, label="i"];
25->16 [style = bold, label=""];
20->13 [style = solid, label="i"];
9->35 [style = dashed, label="0"];
30->21 [style = bold, label=""];
18->30 [style = solid, label="rebuild"];
40->36 [style = bold, label=""];
13->8 [style = dotted, label="true"];
15->43 [style = bold, label=""];
4->12 [style = bold, label=""];
33->32 [style = bold, label=""];
12->3 [style = bold, label=""];
31->17 [style = bold, label=""];
34->43 [style = bold, label=""];
7->19 [style = bold, label=""];
19->40 [style = dashed, label="0"];
7->40 [style = bold, label=""];
37->42 [style = bold, label=""];
8->13 [style = bold, label=""];
24->23 [style = bold, label=""];
10->22 [style = bold, label=""];
5->8 [style = bold, label=""];
29->8 [style = bold, label=""];
21->43 [style = dashed, label="0"];
20->5 [style = solid, label="i"];
40->28 [style = solid, label="indexDef"];
16->11 [style = bold, label=""];
18->15 [style = solid, label="rebuild"];
19->28 [style = solid, label="indexDef"];
19->18 [style = solid, label="indexDef"];
15->6 [style = bold, label=""];
39->11 [style = bold, label=""];
8->13 [style = solid, label="i"];
27->28 [style = dotted, label="true"];
13->29 [style = bold, label=""];
14->0 [style = bold, label=""];
8->5 [style = solid, label="i"];
15->6 [style = dotted, label="true"];
19->27 [style = bold, label=""];
23->1 [style = bold, label=""];
38->22 [style = bold, label=""];
30->15 [style = dotted, label="true"];
19->33 [style = dashed, label="0"];
32->28 [style = bold, label=""];
}
