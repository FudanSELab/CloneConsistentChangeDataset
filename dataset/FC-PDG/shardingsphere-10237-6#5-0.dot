digraph {
4 [style = filled, label = "checkToBeAlteredLoadBalancer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new InvalidKeyGeneratorsException(invalidKeyGenerators)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "!invalidKeyGenerators.isEmpty()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "checkToBeCreatedKeyGenerators['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Collection<String> invalidKeyGenerators = getToBeCreatedKeyGenerators(sqlStatement).stream().distinct().filter(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "!invalidLoadBalances.isEmpty()@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Collection<String> invalidLoadBalances = sqlStatement.getRules().stream().map(null).distinct().filter(null).collect(Collectors.toList())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final AlterReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Collection<String> invalidLoadBalancers = sqlStatement.getRules().stream().map(null).distinct().filter(null).collect(Collectors.toList())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "throw new InvalidAlgorithmConfigurationException(\"Load balancers\",invalidLoadBalancers)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "!invalidLoadBalancers.isEmpty()@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "checkToBeAlteredLoadBalancer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final AlterReadwriteSplittingRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "throw new InvalidLoadBalancersException(invalidLoadBalances)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->3 [style = dotted, label="true"];
13->10 [style = bold, label=""];
5->8 [style = bold, label=""];
14->12 [style = dotted, label="true"];
4->1 [style = dotted, label="true"];
3->7 [style = dashed, label="0"];
11->10 [style = solid, label="invalidKeyGenerators"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
0->11 [style = dashed, label="0"];
13->10 [style = dotted, label="true"];
4->0 [style = bold, label=""];
1->12 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
11->13 [style = bold, label=""];
2->6 [style = dashed, label="0"];
8->7 [style = solid, label="invalidLoadBalancers"];
6->7 [style = dotted, label="true"];
5->9 [style = dotted, label="true"];
0->8 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
6->7 [style = bold, label=""];
14->11 [style = bold, label=""];
0->3 [style = solid, label="invalidLoadBalances"];
}
