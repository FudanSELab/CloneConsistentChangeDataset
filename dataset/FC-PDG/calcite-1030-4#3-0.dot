digraph {
14 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).firstOrDefault(startWithS))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Predicate1<String> startWithS = new Predicate1<String>(){public boolean apply(String s){return s != null && Character.toString(s.charAt(0)).equals(\"S\")}}@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).firstOrDefault(startWithS))@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testFirstOrDefaultPredicate1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "testFirstOrDefault['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Predicate1<Integer> numberGT15 = new Predicate1<Integer>(){public boolean apply(Integer i){return i > 15}}@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).firstOrDefault(startWithS))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Predicate1<String> startWithS = null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).firstOrDefault(numberGT15))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).firstOrDefault(startWithS))@@@26@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String(( empty = {}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).firstOrDefault(numberGT15))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNull(Linq4j.asEnumerable(empty).firstOrDefault())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testFirstOrDefaultPredicate1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(people(0(,Linq4j.asEnumerable(people).firstOrDefault())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Predicate1<Integer> numberGT15 = null@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(numbers(0(,Linq4j.asEnumerable(numbers).firstOrDefault())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->18 [style = dashed, label="0"];
5->7 [style = solid, label="startWithS"];
3->17 [style = dashed, label="0"];
22->19 [style = bold, label=""];
16->10 [style = bold, label=""];
2->1 [style = bold, label=""];
6->3 [style = solid, label="numberGT15"];
2->7 [style = solid, label="people"];
1->21 [style = dashed, label="0"];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
19->17 [style = bold, label=""];
15->14 [style = solid, label="people"];
13->2 [style = solid, label="numbers"];
0->3 [style = solid, label="numbers"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
11->15 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
10->14 [style = solid, label="startWithS"];
12->13 [style = bold, label=""];
10->9 [style = solid, label="startWithS"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
23->21 [style = bold, label=""];
20->23 [style = bold, label=""];
5->4 [style = solid, label="startWithS"];
21->22 [style = bold, label=""];
11->2 [style = solid, label="numberGT15"];
22->17 [style = solid, label="numbers"];
5->10 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
23->19 [style = solid, label="people"];
15->12 [style = bold, label=""];
14->2 [style = bold, label=""];
13->14 [style = bold, label=""];
17->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
