digraph {
0 [style = filled, label = "CheckpointResponder checkpointResponder = new TestCheckpointResponder(){@Override public void acknowledgeCheckpoint(JobID jobID,ExecutionAttemptID executionAttemptID,long checkpointId,CheckpointMetrics checkpointMetrics,TaskStateSnapshot subtaskState){super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b17098jobIDexecutionAttemptIDcheckpointIdcheckpointMetricssubtaskStatecheckpointCompleted.complete(null)}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(triggerResult.isDone())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testHarness.waitForTaskCompletion()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(checkpointCompleted.isDone())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHarness.finishProcessing()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SourceOperatorFactory<Integer> sourceOperatorFactory = new SourceOperatorFactory<>(new MockSource(Boundedness.CONTINUOUS_UNBOUNDED,2),WatermarkStrategy.noWatermarks())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(triggerResult.get())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CompletableFuture<Boolean> triggerResult = testHarness.streamTask.triggerCheckpointAsync(new CheckpointMetaData(2,2),CheckpointOptions.alignedNoTimeout(SAVEPOINT_TERMINATE,CheckpointStorageLocationReference.getDefault()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testTriggeringStopWithSavepointWithDrain['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testTriggeringStopWithSavepointWithDrain['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CompletableFuture<Boolean> triggerResult = testHarness.streamTask.triggerCheckpointAsync(new CheckpointMetaData(1,1),CheckpointOptions.alignedNoTimeout(SAVEPOINT_TERMINATE,CheckpointStorageLocationReference.getDefault()))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testTriggeringStopWithSavepointWithDrain['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "checkpointCompleted.whenComplete(null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "CompletableFuture<Boolean> checkpointCompleted = new CompletableFuture<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkpointCompleted.whenComplete(null)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->12 [style = dashed, label="0"];
7->9 [style = bold, label=""];
0->11 [style = bold, label=""];
5->2 [style = bold, label=""];
11->12 [style = bold, label=""];
1->6 [style = bold, label=""];
6->0 [style = bold, label=""];
8->11 [style = dashed, label="0"];
9->4 [style = bold, label=""];
3->1 [style = bold, label=""];
2->10 [style = bold, label=""];
12->9 [style = bold, label=""];
4->5 [style = bold, label=""];
13->1 [style = bold, label=""];
14->1 [style = bold, label=""];
8->7 [style = bold, label=""];
0->8 [style = bold, label=""];
}
