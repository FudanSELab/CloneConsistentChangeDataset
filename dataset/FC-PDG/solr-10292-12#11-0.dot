digraph {
15 [style = filled, label = "fieldMappings.entrySet()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (FieldComparator sort : bucketSorts){if (0 != builder.length()) {builder.append(\",\")}builder.append(sort.toExpression(factory))}expression.addParameter(new StreamExpressionNamedParameter(\"bucketSorts\",builder.toString()))}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return expression@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),String.join(\",\",param.getValue())))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "param.getKey().equals(\"fq\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "return expression@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "sb.append(\",\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "value = value.replace(\"\"\",\"\\\"\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Entry<String,String> mapping@@@21@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "sb.append(\"=\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String value = String.join(\",\",param.getValue())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ModifiableSolrParams mParams = new ModifiableSolrParams(SolrParams.toMultiMap(params.toNamedList()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (Bucket bucket : buckets){if (0 != builder.length()) {builder.append(\",\")}builder.append(bucket.toString())}expression.addParameter(new StreamExpressionNamedParameter(\"buckets\",builder.toString()))}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sb.append(mapping.getKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "fieldMappings.entrySet()@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sb.append(mapping.getValue())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(getClass()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expression.addParameter(metric.toExpression(factory))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "null != fieldMappings && 0 != fieldMappings.size()@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "param.getValue()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"aliases\",sb.toString()))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sb.length() > 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),fqParam.replace(\"\"\",\"\\\"\")))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "ModifiableSolrParams tmpParams = new ModifiableSolrParams(params)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(bucketSizeLimit)))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String fqParam@@@8@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),value))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->0 [style = bold, label=""];
5->14 [style = bold, label=""];
20->23 [style = bold, label=""];
3->22 [style = dotted, label="true"];
13->7 [style = bold, label=""];
3->15 [style = dotted, label="true"];
23->12 [style = dotted, label="false"];
18->2 [style = bold, label=""];
29->28 [style = solid, label="factory"];
8->4 [style = bold, label=""];
11->10 [style = dotted, label="true"];
23->20 [style = dotted, label="true"];
7->18 [style = bold, label=""];
10->29 [style = dashed, label="0"];
12->4 [style = bold, label=""];
9->13 [style = dotted, label="true"];
9->13 [style = bold, label=""];
8->23 [style = bold, label=""];
23->19 [style = dotted, label="false"];
23->4 [style = dotted, label="false"];
3->17 [style = dotted, label="true"];
23->24 [style = dotted, label="true"];
0->3 [style = bold, label=""];
12->23 [style = bold, label=""];
4->32 [style = dashed, label="0"];
21->10 [style = dotted, label="true"];
31->32 [style = bold, label=""];
2->17 [style = bold, label=""];
3->1 [style = bold, label=""];
32->26 [style = bold, label=""];
14->31 [style = bold, label=""];
28->27 [style = bold, label=""];
5->1 [style = solid, label="expression"];
2->9 [style = bold, label=""];
27->36 [style = bold, label=""];
33->35 [style = bold, label=""];
4->19 [style = bold, label=""];
5->35 [style = dashed, label="0"];
3->18 [style = dotted, label="true"];
19->12 [style = solid, label="value"];
36->34 [style = bold, label=""];
23->20 [style = bold, label=""];
3->2 [style = dotted, label="true"];
21->5 [style = bold, label=""];
3->6 [style = dotted, label="true"];
23->25 [style = dotted, label="true"];
14->8 [style = bold, label=""];
33->29 [style = dotted, label="true"];
35->34 [style = solid, label="expression"];
8->31 [style = dashed, label="0"];
30->28 [style = bold, label=""];
29->30 [style = solid, label="factory"];
3->16 [style = bold, label=""];
3->7 [style = dotted, label="true"];
20->0 [style = bold, label=""];
26->30 [style = bold, label=""];
3->16 [style = dotted, label="true"];
19->12 [style = bold, label=""];
23->4 [style = bold, label=""];
3->9 [style = dotted, label="true"];
35->14 [style = bold, label=""];
11->5 [style = bold, label=""];
17->1 [style = bold, label=""];
16->9 [style = bold, label=""];
9->7 [style = bold, label=""];
}
