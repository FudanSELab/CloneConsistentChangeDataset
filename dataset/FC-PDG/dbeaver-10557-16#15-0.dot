digraph {
36 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_DRIVER,dataSource.getDriver().getId())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JSONUtils.serializeStringList(json,RegistryConstants.TAG_EXCLUDE,filter.getExclude())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_PROVIDER,dataSource.getDriver().getProviderDescriptor().getId())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_NAME,dataSource.getName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.ATTR_TYPE,typeName)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "saveObjectFiler['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String objectID@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.ATTR_NAME,filter.getName())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "dataSource.hasSharedVirtualModel()@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String objectID@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "!CommonUtils.isEmpty(lockPasswordHash)@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "JSONUtils.serializeStringList(json,RegistryConstants.TAG_INCLUDE,filter.getInclude())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "String typeName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "JsonWriter json@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "JsonWriter json@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DBSObjectFilter filter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_FOLDER,dataSource.getFolder().getFolderPath())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_SHOW_SYSTEM_OBJECTS,dataSource.isShowSystemObjects())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "saveDataSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JSONUtils.serializeStringList(json,RegistryConstants.TAG_EXCLUDE,filter.getExclude())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_ENABLED,false)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "!filter.isEnabled()@@@8@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "JSONUtils.field(json,\"virtual-model-id\",dataSource.getVirtualModel().getId())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_ENABLED,filter.isEnabled())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "dataSource.getFolder() != null@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "{Collection<FilterMapping> filterMappings = dataSource.getObjectFilters()if (!CommonUtils.isEmpty(filterMappings)) {json.name(RegistryConstants.TAG_FILTERS)json.beginArray()for (FilterMapping filter : filterMappings){if (filter.defaultFilter != null && !filter.defaultFilter.isEmpty()) {saveObjectFiler(json,filter.typeName,null,filter.defaultFilter)}for (Map.Entry<String,DBSObjectFilter> cf : filter.customFilters.entrySet()){if (!cf.getValue().isEmpty()) {saveObjectFiler(json,filter.typeName,cf.getKey(),cf.getValue())}}}json.endArray()}}@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_READ_ONLY,dataSource.isConnectionReadOnly())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "json.endObject()@@@13@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_SHOW_UTIL_OBJECTS,dataSource.isShowUtilityObjects())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "json.beginObject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "dataSource.isShowUtilityObjects()@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "dataSource.isShowSystemObjects()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "json.name(dataSource.getId())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "{SimplePreferenceStore prefStore = dataSource.getPreferenceStore()Map<String,String> props = new TreeMap<>()for (String propName : prefStore.preferenceNames()){String propValue = prefStore.getString(propName)String defValue = prefStore.getDefaultString(propName)if (propValue != null && !CommonUtils.equalObjects(propValue,defValue)) {props.put(propName,propValue)}}if (!props.isEmpty()) {JSONUtils.serializeProperties(json,RegistryConstants.TAG_CUSTOM_PROPERTIES,props)}}@@@117@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "{DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration()json.name(\"configuration\")json.beginObject()JSONUtils.fieldNE(json,RegistryConstants.ATTR_HOST,connectionInfo.getHostName())JSONUtils.fieldNE(json,RegistryConstants.ATTR_PORT,connectionInfo.getHostPort())JSONUtils.fieldNE(json,RegistryConstants.ATTR_SERVER,connectionInfo.getServerName())JSONUtils.fieldNE(json,RegistryConstants.ATTR_DATABASE,connectionInfo.getDatabaseName())JSONUtils.fieldNE(json,RegistryConstants.ATTR_URL,connectionInfo.getUrl())saveSecuredCredentials(dataSource,null,null,connectionInfo.getUserName(),dataSource.isSavePassword()? connectionInfo.getUserPassword(): null)JSONUtils.fieldNE(json,RegistryConstants.ATTR_HOME,connectionInfo.getClientHomeId())if (connectionInfo.getConnectionType() != null) {JSONUtils.field(json,RegistryConstants.ATTR_TYPE,connectionInfo.getConnectionType().getId())}JSONUtils.fieldNE(json,RegistryConstants.ATTR_COLOR,connectionInfo.getConnectionColor())if (connectionInfo.getKeepAliveInterval() > 0) {JSONUtils.field(json,RegistryConstants.ATTR_KEEP_ALIVE,connectionInfo.getKeepAliveInterval())}JSONUtils.fieldNE(json,\"config-profile\",connectionInfo.getConfigProfileName())JSONUtils.fieldNE(json,\"user-profile\",connectionInfo.getUserProfileName())JSONUtils.serializeProperties(json,RegistryConstants.TAG_PROPERTIES,connectionInfo.getProperties())JSONUtils.serializeProperties(json,RegistryConstants.TAG_PROVIDER_PROPERTIES,connectionInfo.getProviderProperties())if (!ArrayUtils.isEmpty(connectionInfo.getDeclaredEvents())) {json.name(RegistryConstants.TAG_EVENTS)json.beginObject()for (DBPConnectionEventType eventType : connectionInfo.getDeclaredEvents()){DBRShellCommand command = connectionInfo.getEvent(eventType)json.name(eventType.name())json.beginObject()JSONUtils.field(json,RegistryConstants.ATTR_ENABLED,command.isEnabled())JSONUtils.field(json,RegistryConstants.ATTR_SHOW_PANEL,command.isShowProcessPanel())JSONUtils.field(json,RegistryConstants.ATTR_WAIT_PROCESS,command.isWaitProcessFinish())if (command.isWaitProcessFinish()) {JSONUtils.field(json,RegistryConstants.ATTR_WAIT_PROCESS_TIMEOUT,command.getWaitProcessTimeoutMs())}JSONUtils.field(json,RegistryConstants.ATTR_TERMINATE_AT_DISCONNECT,command.isTerminateAtDisconnect())JSONUtils.field(json,RegistryConstants.ATTR_PAUSE_AFTER_EXECUTE,command.getPauseAfterExecute())JSONUtils.fieldNE(json,RegistryConstants.ATTR_WORKING_DIRECTORY,command.getWorkingDirectory())JSONUtils.fieldNE(json,RegistryConstants.ATTR_COMMAND,command.getCommand())json.endObject()}json.endObject()}if (!CommonUtils.isEmpty(connectionInfo.getHandlers())) {json.name(RegistryConstants.TAG_HANDLERS)json.beginObject()for (DBWHandlerConfiguration configuration : connectionInfo.getHandlers()){saveNetworkHandlerConfiguration(json,dataSource,null,configuration)}json.endObject()}{DBPConnectionBootstrap bootstrap = connectionInfo.getBootstrap()if (bootstrap.hasData()) {json.name(RegistryConstants.TAG_BOOTSTRAP)json.beginObject()if (bootstrap.getDefaultAutoCommit() != null) {JSONUtils.field(json,RegistryConstants.ATTR_AUTOCOMMIT,bootstrap.getDefaultAutoCommit())}if (bootstrap.getDefaultTransactionIsolation() != null) {JSONUtils.field(json,RegistryConstants.ATTR_TXN_ISOLATION,bootstrap.getDefaultTransactionIsolation())}JSONUtils.fieldNE(json,RegistryConstants.ATTR_DEFAULT_OBJECT,bootstrap.getDefaultObjectName())if (bootstrap.isIgnoreErrors()) {JSONUtils.field(json,RegistryConstants.ATTR_IGNORE_ERRORS,true)}JSONUtils.serializeStringList(json,RegistryConstants.TAG_QUERY,bootstrap.getInitQueries())json.endObject()}}json.endObject()}@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "json.endObject()@@@131@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "json.endObject()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_SAVE_PASSWORD,dataSource.isSavePassword())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.ATTR_DESCRIPTION,filter.getDescription())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "@NotNull DataSourceDescriptor dataSource@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "DBSObjectFilter filter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.TAG_DESCRIPTION,dataSource.getDescription())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final String lockPasswordHash = dataSource.getLockPasswordHash()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "saveObjectFiler['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "@NotNull JsonWriter json@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "json.beginObject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_LOCK_PASSWORD,lockPasswordHash)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46->37 [style = dotted, label="true"];
9->11 [style = bold, label=""];
25->33 [style = bold, label=""];
10->36 [style = dashed, label="0"];
35->41 [style = bold, label=""];
15->9 [style = solid, label="json"];
33->37 [style = solid, label="lockPasswordHash"];
6->1 [style = dotted, label="true"];
30->36 [style = bold, label=""];
23->41 [style = solid, label="dataSource"];
29->26 [style = dotted, label="true"];
5->13 [style = solid, label="objectID"];
8->9 [style = solid, label="json"];
32->25 [style = dotted, label="true"];
33->46 [style = bold, label=""];
32->25 [style = bold, label=""];
8->7 [style = solid, label="json"];
31->37 [style = solid, label="json"];
29->44 [style = bold, label=""];
43->29 [style = bold, label=""];
38->31 [style = dotted, label="true"];
31->27 [style = solid, label="json"];
7->26 [style = dashed, label="0"];
0->3 [style = bold, label=""];
4->3 [style = bold, label=""];
8->11 [style = solid, label="json"];
31->36 [style = solid, label="json"];
15->20 [style = solid, label="json"];
22->43 [style = bold, label=""];
4->0 [style = dotted, label="true"];
31->34 [style = solid, label="json"];
31->30 [style = solid, label="json"];
31->28 [style = solid, label="json"];
46->37 [style = bold, label=""];
42->40 [style = bold, label=""];
45->29 [style = bold, label=""];
43->45 [style = bold, label=""];
9->34 [style = dashed, label="0"];
4->0 [style = bold, label=""];
29->26 [style = bold, label=""];
12->13 [style = solid, label="objectID"];
3->7 [style = bold, label=""];
7->2 [style = bold, label=""];
44->32 [style = bold, label=""];
38->23 [style = dotted, label="true"];
18->10 [style = solid, label="typeName"];
31->22 [style = solid, label="json"];
8->3 [style = solid, label="json"];
12->10 [style = solid, label="typeName"];
6->12 [style = dotted, label="true"];
8->0 [style = solid, label="json"];
31->42 [style = solid, label="json"];
24->13 [style = bold, label=""];
13->10 [style = bold, label=""];
15->10 [style = solid, label="json"];
38->24 [style = bold, label=""];
11->21 [style = bold, label=""];
11->4 [style = bold, label=""];
19->18 [style = dotted, label="true"];
19->12 [style = dotted, label="true"];
19->15 [style = dotted, label="true"];
4->21 [style = dashed, label="0"];
15->13 [style = solid, label="json"];
32->33 [style = bold, label=""];
15->11 [style = solid, label="json"];
8->10 [style = solid, label="json"];
34->28 [style = bold, label=""];
40->39 [style = bold, label=""];
19->14 [style = bold, label=""];
26->44 [style = bold, label=""];
6->8 [style = dotted, label="true"];
31->26 [style = solid, label="json"];
46->35 [style = bold, label=""];
31->25 [style = solid, label="json"];
17->3 [style = bold, label=""];
31->41 [style = solid, label="json"];
10->9 [style = bold, label=""];
14->13 [style = bold, label=""];
37->35 [style = bold, label=""];
36->34 [style = bold, label=""];
28->22 [style = bold, label=""];
31->45 [style = solid, label="json"];
35->27 [style = bold, label=""];
20->17 [style = bold, label=""];
15->21 [style = solid, label="json"];
31->44 [style = solid, label="json"];
13->30 [style = bold, label=""];
15->17 [style = solid, label="json"];
31->40 [style = solid, label="json"];
6->14 [style = bold, label=""];
11->28 [style = dashed, label="0"];
35->27 [style = dotted, label="true"];
21->20 [style = bold, label=""];
43->45 [style = dotted, label="true"];
27->41 [style = bold, label=""];
19->16 [style = dotted, label="true"];
13->30 [style = dashed, label="0"];
8->13 [style = solid, label="json"];
6->5 [style = dotted, label="true"];
41->42 [style = bold, label=""];
}
