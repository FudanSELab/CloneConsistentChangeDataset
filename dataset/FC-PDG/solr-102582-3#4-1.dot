digraph {
9 [style = filled, label = "int minPrefixChars = params.get(MIN_PREFIX_CHARS) != null? Integer.parseInt(params.get(MIN_PREFIX_CHARS).toString()): AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SolrCore core@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "return new BlendedInfixSuggester(core.getSolrConfig().luceneMatchVersion,new File(indexPath),indexAnalyzer,queryAnalyzer,minPrefixChars,blenderType,numFactor)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Object fieldTypeName = params.get(QUERY_ANALYZER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "NamedList params@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "BlenderType blenderType = getBlenderType(params.get(BLENDER_TYPE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SolrCore core@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "fieldTypeName == null@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return new AnalyzingInfixSuggester(core.getSolrConfig().luceneMatchVersion,new File(indexPath),indexAnalyzer,queryAnalyzer,minPrefixChars)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Analyzer indexAnalyzer = ft.getAnalyzer()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ft == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String indexPath = params.get(INDEX_PATH) != null? params.get(INDEX_PATH).toString(): DEFAULT_INDEX_PATH@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return new AnalyzingInfixSuggester(core.getSolrConfig().luceneMatchVersion,FSDirectory.open(new File(indexPath)),indexAnalyzer,queryAnalyzer,minPrefixChars)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "throw new IllegalArgumentException(\"Error in configuration: \" + QUERY_ANALYZER + \" parameter is mandatory\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Analyzer queryAnalyzer = ft.getQueryAnalyzer()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "NamedList params@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int numFactor = params.get(NUM_FACTOR) != null? Integer.parseInt(params.get(NUM_FACTOR).toString()): BlendedInfixSuggester.DEFAULT_NUM_FACTOR@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->11 [style = solid, label="indexAnalyzer"];
0->10 [style = solid, label="fieldTypeName"];
9->11 [style = solid, label="minPrefixChars"];
9->11 [style = bold, label=""];
2->16 [style = solid, label="indexAnalyzer"];
19->17 [style = dotted, label="true"];
2->6 [style = bold, label=""];
11->16 [style = dashed, label="0"];
7->21 [style = solid, label="indexPath"];
2->21 [style = solid, label="indexAnalyzer"];
18->21 [style = solid, label="blenderType"];
9->16 [style = solid, label="minPrefixChars"];
19->13 [style = dotted, label="true"];
20->21 [style = solid, label="numFactor"];
9->16 [style = bold, label=""];
14->13 [style = dotted, label="true"];
5->4 [style = dotted, label="true"];
7->16 [style = solid, label="indexPath"];
19->0 [style = bold, label=""];
20->21 [style = bold, label=""];
7->9 [style = bold, label=""];
18->20 [style = bold, label=""];
5->13 [style = dotted, label="true"];
0->10 [style = bold, label=""];
14->15 [style = dotted, label="true"];
9->18 [style = bold, label=""];
6->21 [style = solid, label="queryAnalyzer"];
3->2 [style = bold, label=""];
8->2 [style = bold, label=""];
5->0 [style = bold, label=""];
14->0 [style = bold, label=""];
10->12 [style = bold, label=""];
3->8 [style = bold, label=""];
6->11 [style = solid, label="queryAnalyzer"];
7->11 [style = solid, label="indexPath"];
1->12 [style = bold, label=""];
9->21 [style = solid, label="minPrefixChars"];
12->3 [style = bold, label=""];
10->1 [style = dotted, label="true"];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
3->8 [style = dotted, label="true"];
6->16 [style = solid, label="queryAnalyzer"];
12->3 [style = solid, label="ft"];
11->21 [style = dashed, label="0"];
}
