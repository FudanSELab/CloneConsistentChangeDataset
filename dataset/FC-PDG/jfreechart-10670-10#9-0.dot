digraph {
0 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(d1 != d2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset d2 = TestUtils.serialised(d1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset d2 = (DefaultBoxAndWhiskerCategoryDataset)d1.clone()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "d1.add(new BoxAndWhiskerItem(Double.valueOf(1.0),Double.valueOf(2.0),Double.valueOf(3.0),Double.valueOf(4.0),Double.valueOf(5.0),Double.valueOf(6.0),Double.valueOf(7.0),Double.valueOf(8.0),new ArrayList<>()),\"ROW2\",\"COLUMN1\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset<String,String> d1 = new DefaultBoxAndWhiskerCategoryDataset()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(d1,d2)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset<String,String> d2 = CloneUtils.clone(d1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(d1.equals(d2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d1.add(new BoxAndWhiskerItem(Double.valueOf(1.0),Double.valueOf(2.0),Double.valueOf(3.0),Double.valueOf(4.0),Double.valueOf(5.0),Double.valueOf(6.0),Double.valueOf(7.0),Double.valueOf(8.0),new ArrayList<>()),\"ROW1\",\"COLUMN1\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset d1 = new DefaultBoxAndWhiskerCategoryDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "d1.add(new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList<>()),\"ROW2\",\"COLUMN1\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertFalse(d1.equals(d2))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "d1.add(new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList<>()),\"ROW1\",\"COLUMN1\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
10->6 [style = solid, label="d1"];
15->7 [style = bold, label=""];
1->3 [style = solid, label="d2"];
13->5 [style = solid, label="d2"];
1->14 [style = dashed, label="0"];
3->11 [style = bold, label=""];
8->14 [style = bold, label=""];
6->0 [style = bold, label=""];
13->6 [style = solid, label="d2"];
9->10 [style = bold, label=""];
7->16 [style = solid, label="d1"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
14->16 [style = solid, label="d2"];
1->13 [style = dashed, label="0"];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
1->5 [style = solid, label="d2"];
1->6 [style = solid, label="d2"];
6->16 [style = dashed, label="0"];
1->6 [style = bold, label=""];
10->13 [style = solid, label="d1"];
7->6 [style = solid, label="d1"];
10->12 [style = bold, label=""];
7->10 [style = dashed, label="0"];
13->3 [style = solid, label="d2"];
2->7 [style = bold, label=""];
13->6 [style = bold, label=""];
4->5 [style = bold, label=""];
7->14 [style = solid, label="d1"];
}
