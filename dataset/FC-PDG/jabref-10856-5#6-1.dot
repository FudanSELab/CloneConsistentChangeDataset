digraph {
3 [style = filled, label = "reviewField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BibEntry entry = createMinimalBibEntry()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "BibEntry expectedEntry = createMinimalBibEntry()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedEntry.setField(StandardField.COMMENT,\"My Review\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "commentField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "reviewField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "action.performMigration(actualParserResult)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(expectedEntry,actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "ParserResult actualParserResult = new ParserResult(Collections.singletonList(entry))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "entry.setField(StandardField.COMMENT,\"My Comment\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "action.performMigration(actualParserResult)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(expectedEntry,actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "actualEntry.setField(StandardField.REVIEW,\"My Review\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BibEntry actualEntry = createMinimalBibEntry()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(entry,actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
5->2 [style = solid, label="actualEntry"];
6->8 [style = dashed, label="0"];
14->12 [style = solid, label="actualParserResult"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
11->14 [style = bold, label=""];
0->2 [style = bold, label=""];
12->15 [style = bold, label=""];
0->11 [style = dashed, label="0"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
4->7 [style = bold, label=""];
2->1 [style = solid, label="actualParserResult"];
3->5 [style = bold, label=""];
13->15 [style = solid, label="entry"];
1->6 [style = bold, label=""];
2->14 [style = dashed, label="0"];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
6->15 [style = dashed, label="0"];
13->14 [style = solid, label="entry"];
14->12 [style = bold, label=""];
9->5 [style = bold, label=""];
4->6 [style = solid, label="expectedEntry"];
4->8 [style = solid, label="expectedEntry"];
}
