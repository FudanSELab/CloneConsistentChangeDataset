digraph {
11 [style = filled, label = "assertThat(SqlFunctions.minusAny(2,1.0D),is((Object)new BigDecimal(1)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(SqlFunctions.divideAny(5,2L),is((Object)new BigDecimal(\"2.5\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(SqlFunctions.minusAny(null,null),nullValue())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "fail(\"'minus' on non-numeric type is not possible\")@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testDivideAny['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNull(SqlFunctions.minusAny(null,null))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertThat(SqlFunctions.minusAny(2L,1.0D),is((Object)new BigDecimal(1)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(SqlFunctions.minusAny(1,null))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertNull(SqlFunctions.divideAny(1,null))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SqlFunctions.minusAny(\"2\",2L)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(SqlFunctions.minusAny(null,1),nullValue())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(SqlFunctions.minusAny(new BigDecimal(2L),new BigDecimal(1.0D)),is((Object)new BigDecimal(1)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(SqlFunctions.minusAny(2,1L),is((Object)new BigDecimal(1)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(SqlFunctions.minusAny(new BigDecimal(2L),1),is((Object)new BigDecimal(1)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testMinusAny['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertNull(SqlFunctions.divideAny(null,1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),2.0D),is((Object)new BigDecimal(2.5)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),2),is((Object)new BigDecimal(2.5)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),new BigDecimal(2.0D)),is((Object)new BigDecimal(2.5)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),2L),is((Object)new BigDecimal(2.5)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testMinusAny['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNull(SqlFunctions.divideAny(null,null))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(SqlFunctions.minusAny(new BigDecimal(2L),1L),is((Object)new BigDecimal(1)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(SqlFunctions.divideAny(5,2.0D),is((Object)new BigDecimal(\"2.5\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "fail(\"'divide' on non-numeric type is not possible\")@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(SqlFunctions.divideAny(5L,2.0D),is((Object)new BigDecimal(\"2.5\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(SqlFunctions.minusAny(new BigDecimal(2L),1.0D),is((Object)new BigDecimal(1)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(SqlFunctions.minusAny(null,1))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertThat(SqlFunctions.minusAny(1,null),nullValue())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "SqlFunctions.divideAny(\"5\",2L)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->15 [style = dashed, label="0"];
28->29 [style = bold, label=""];
5->10 [style = bold, label=""];
16->13 [style = bold, label=""];
18->24 [style = bold, label=""];
20->17 [style = bold, label=""];
8->16 [style = dashed, label="0"];
3->28 [style = dashed, label="0"];
7->23 [style = dashed, label="0"];
9->0 [style = bold, label=""];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
1->19 [style = dashed, label="0"];
9->22 [style = dashed, label="0"];
0->27 [style = dashed, label="0"];
8->21 [style = dashed, label="0"];
12->9 [style = bold, label=""];
15->16 [style = bold, label=""];
3->13 [style = dashed, label="0"];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
2->12 [style = bold, label=""];
21->28 [style = bold, label=""];
29->18 [style = bold, label=""];
26->22 [style = bold, label=""];
6->2 [style = bold, label=""];
12->26 [style = dashed, label="0"];
10->8 [style = bold, label=""];
22->27 [style = bold, label=""];
11->18 [style = dashed, label="0"];
0->1 [style = bold, label=""];
24->25 [style = bold, label=""];
19->23 [style = bold, label=""];
6->24 [style = dashed, label="0"];
25->26 [style = bold, label=""];
10->17 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
14->15 [style = bold, label=""];
27->19 [style = bold, label=""];
4->29 [style = dashed, label="0"];
4->11 [style = bold, label=""];
17->21 [style = bold, label=""];
13->4 [style = bold, label=""];
}
