digraph {
13 [style = filled, label = "String(( args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "env.execute()@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iteration = verticesWithInitialId.iterateDelta(verticesWithInitialId,100,0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "runConnectedComponents['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "ExecutionEnvironment env@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "result.output(new DiscardingOutputFormat<Tuple2<Long,Long>>())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env).rebalance()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithInitialId = vertices.map(new ConnectedComponents.DuplicateValue<Long>())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.setParallelism(PARALLELISM)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DataSet<Tuple2<Long,Long>> changes = iteration.getWorkset().join(edges).where(0).equalTo(0).with(new ConnectedComponents.NeighborWithComponentIDJoin()).groupBy(0).aggregate(Aggregations.MIN,1).join(iteration.getSolutionSet()).where(0).equalTo(0).with(new ConnectedComponents.ComponentIdFilter())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DataSet<Tuple2<Long,Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env).rebalance().flatMap(new ConnectedComponents.UndirectEdge())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithInitialId = vertices.map(new ConnectedComponents.DuplicateValue<>())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DataSet<Tuple2<Long,Long>> result = iteration.closeWith(changes,changes)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "runConnectedComponents['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result.output(new DiscardingOutputFormat<>())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->1 [style = bold, label=""];
16->6 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
7->5 [style = solid, label="changes"];
14->10 [style = bold, label=""];
5->15 [style = bold, label=""];
11->9 [style = dotted, label="true"];
6->0 [style = bold, label=""];
1->0 [style = bold, label=""];
12->1 [style = bold, label=""];
10->7 [style = bold, label=""];
14->10 [style = solid, label="verticesWithInitialId"];
3->10 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
3->10 [style = solid, label="verticesWithInitialId"];
4->15 [style = dashed, label="0"];
2->14 [style = bold, label=""];
5->4 [style = bold, label=""];
9->13 [style = dashed, label="0"];
4->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
17->13 [style = dotted, label="true"];
15->8 [style = bold, label=""];
17->16 [style = bold, label=""];
12->9 [style = dotted, label="true"];
}
