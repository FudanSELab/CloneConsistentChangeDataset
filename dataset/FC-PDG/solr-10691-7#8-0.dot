digraph {
13 [style = filled, label = "assertEquals(5,t.get(\"batchIndexed\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tuple = tuples.get(2)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testUpdateStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Tuple t@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "TupleStream parallelUpdateStream = factory.constructStream(\"parallel(collection1, \" + updateExpression + \", workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"batchNumber asc\")\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "parallelUpdateStream.setStreamContext(streamContext)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assert(t.EOF == false)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "t = tuples.get(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "cluster.waitForActiveCollection(\"parallelDestinationCollection\",2,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "long count = 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "StreamExpression expression@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "cluster.waitForActiveCollection(\"destinationCollection\",2,2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "List<Tuple> tuples = getTuples(parallelUpdateStream)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TupleStream stream@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Tuple tuple = tuples.get(0)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "stream = new UpdateStream(expression,factory)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assert(count == 5)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "String updateExpression = \"commit(parallelDestinationCollection, batchSize=0, zkHost=\"\" + cluster.getZkServer().getZkAddress() + \"\", update(parallelDestinationCollection, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\")))\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"destinationCollection\").process(cluster.getSolrClient())solrClientCache.close()}@@@64@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "tuple = tuples.get(3)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(destinationCollection, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "stream.setStreamContext(streamContext)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"destinationCollection\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(5,tuples.size())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "count += tuple.getLong(\"batchIndexed\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "tuple = tuples.get(4)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testParallelCommitStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cluster.getSolrClient().commit(\"destinationCollection\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testUpdateStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "expression = StreamExpressionParser.parse(\"update(destinationCollection, batchSize=5, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\"))\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assert(tuples.size() == 1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "expression = StreamExpressionParser.parse(\"update(destinationCollection, batchSize=5, search(collection1, q=*:*, fl=\"id,_version_,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\"))\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "tuple = tuples.get(1)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tuples = getTuples(stream)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection\").process(cluster.getSolrClient())solrClientCache.close()}@@@65@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"commit\",).withFunctionName(\"parallel\",)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "CollectionAdminRequest.createCollection(\"destinationCollection\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\",\"s_multi\",\"aaaa\",\"s_multi\",\"bbbb\",\"i_multi\",\"4\",\"i_multi\",\"7\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\",\"s_multi\",\"aaaa1\",\"s_multi\",\"bbbb1\",\"i_multi\",\"44\",\"i_multi\",\"77\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\",\"s_multi\",\"aaaa2\",\"s_multi\",\"bbbb2\",\"i_multi\",\"444\",\"i_multi\",\"777\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\",\"s_multi\",\"aaaa3\",\"s_multi\",\"bbbb3\",\"i_multi\",\"4444\",\"i_multi\",\"7777\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\",\"s_multi\",\"aaaa4\",\"s_multi\",\"bbbb4\",\"i_multi\",\"44444\",\"i_multi\",\"77777\").commit(cluster.getSolrClient(),\"collection1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "stream.setStreamContext(streamContext)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->25 [style = bold, label=""];
7->32 [style = bold, label=""];
71->70 [style = bold, label=""];
13->47 [style = bold, label=""];
21->51 [style = bold, label=""];
76->68 [style = bold, label=""];
38->61 [style = dashed, label="0"];
18->55 [style = bold, label=""];
53->21 [style = bold, label=""];
51->24 [style = bold, label=""];
49->64 [style = dashed, label="0"];
56->19 [style = solid, label="streamContext"];
37->76 [style = dashed, label="0"];
73->74 [style = bold, label=""];
57->1 [style = bold, label=""];
56->15 [style = bold, label=""];
0->16 [style = solid, label="stream"];
63->64 [style = solid, label="updateExpression"];
59->71 [style = bold, label=""];
25->48 [style = bold, label=""];
45->31 [style = bold, label=""];
64->77 [style = bold, label=""];
2->53 [style = bold, label=""];
9->69 [style = dashed, label="0"];
29->2 [style = bold, label=""];
38->49 [style = bold, label=""];
56->77 [style = solid, label="streamContext"];
23->17 [style = bold, label=""];
41->54 [style = bold, label=""];
65->19 [style = bold, label=""];
27->60 [style = bold, label=""];
47->0 [style = bold, label=""];
3->30 [style = bold, label=""];
60->23 [style = bold, label=""];
61->49 [style = bold, label=""];
36->41 [style = bold, label=""];
55->29 [style = bold, label=""];
0->19 [style = bold, label=""];
15->50 [style = bold, label=""];
52->67 [style = dashed, label="0"];
74->63 [style = bold, label=""];
26->14 [style = bold, label=""];
19->18 [style = solid, label="stream"];
31->4 [style = bold, label=""];
56->16 [style = solid, label="streamContext"];
67->72 [style = solid, label="count"];
33->13 [style = bold, label=""];
10->7 [style = bold, label=""];
68->1 [style = bold, label=""];
6->61 [style = bold, label=""];
6->38 [style = bold, label=""];
49->9 [style = solid, label="stream"];
35->77 [style = dashed, label="0"];
59->28 [style = bold, label=""];
57->68 [style = dashed, label="0"];
44->45 [style = bold, label=""];
24->3 [style = bold, label=""];
11->58 [style = bold, label=""];
1->39 [style = bold, label=""];
22->26 [style = bold, label=""];
16->18 [style = bold, label=""];
42->37 [style = bold, label=""];
34->40 [style = bold, label=""];
49->35 [style = bold, label=""];
39->5 [style = bold, label=""];
35->9 [style = bold, label=""];
52->33 [style = bold, label=""];
77->69 [style = bold, label=""];
69->75 [style = bold, label=""];
67->72 [style = bold, label=""];
8->52 [style = bold, label=""];
66->76 [style = bold, label=""];
74->19 [style = solid, label="factory"];
64->69 [style = solid, label="parallelUpdateStream"];
15->50 [style = solid, label="solrClientCache"];
19->16 [style = bold, label=""];
72->65 [style = bold, label=""];
38->63 [style = dashed, label="0"];
38->49 [style = solid, label="expression"];
12->8 [style = bold, label=""];
6->49 [style = solid, label="factory"];
4->20 [style = bold, label=""];
32->44 [style = bold, label=""];
54->10 [style = bold, label=""];
9->12 [style = bold, label=""];
75->67 [style = bold, label=""];
37->57 [style = bold, label=""];
65->19 [style = solid, label="expression"];
50->6 [style = bold, label=""];
30->22 [style = bold, label=""];
58->27 [style = bold, label=""];
48->36 [style = bold, label=""];
63->64 [style = bold, label=""];
61->49 [style = solid, label="expression"];
14->34 [style = bold, label=""];
73->64 [style = solid, label="zkHost"];
46->11 [style = bold, label=""];
5->43 [style = bold, label=""];
40->46 [style = bold, label=""];
6->0 [style = solid, label="factory"];
56->35 [style = solid, label="streamContext"];
62->37 [style = bold, label=""];
20->59 [style = bold, label=""];
50->73 [style = bold, label=""];
47->65 [style = dashed, label="0"];
43->56 [style = bold, label=""];
47->0 [style = solid, label="expression"];
}
