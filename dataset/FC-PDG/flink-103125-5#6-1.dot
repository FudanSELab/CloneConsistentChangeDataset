digraph {
6 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RestartStrategies.RestartStrategyConfiguration restartStrategy = jobGraph.getExecutionConfig().getRestartStrategy()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(1337,((RestartStrategies.FixedDelayRestartStrategyConfiguration)restartStrategy).getDelayBetweenAttempts())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "env.fromElements(1).print()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testFixedRestartingWhenCheckpointingAndExplicitExecutionRetriesNonZero['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "env.fromElements(1).print()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamGraph graph = env.getStreamGraph()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "env.getConfig().setExecutionRetryDelay(1337)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JobGraph jobGraph = graph.getJobGraph()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(42,((RestartStrategies.FixedDelayRestartStrategyConfiguration)restartStrategy).getRestartAttempts())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RestartStrategies.RestartStrategyConfiguration restartStrategy = ExecutionConfigTest.deserializeConfig(jobGraph.getSerializedExecutionConfig()).getRestartStrategy()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertTrue(restartStrategy instanceof RestartStrategies.FixedDelayRestartStrategyConfiguration)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testNoRestartingWhenCheckpointingAndExplicitExecutionRetriesZero['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "env.setNumberOfExecutionRetries(42)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testNoRestartingWhenCheckpointingAndExplicitExecutionRetriesZero['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "env.setNumberOfExecutionRetries(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertNotNull(restartStrategy)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "env.enableCheckpointing()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
2->12 [style = solid, label="restartStrategy"];
5->13 [style = dashed, label="0"];
2->9 [style = solid, label="restartStrategy"];
10->9 [style = solid, label="restartStrategy"];
11->6 [style = bold, label=""];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
15->16 [style = bold, label=""];
4->2 [style = solid, label="restartStrategy"];
3->0 [style = bold, label=""];
10->2 [style = solid, label="restartStrategy"];
5->1 [style = bold, label=""];
13->17 [style = bold, label=""];
7->5 [style = bold, label=""];
0->10 [style = bold, label=""];
0->4 [style = bold, label=""];
4->9 [style = solid, label="restartStrategy"];
17->3 [style = bold, label=""];
10->2 [style = bold, label=""];
9->12 [style = dashed, label="0"];
9->12 [style = bold, label=""];
6->7 [style = bold, label=""];
4->10 [style = dashed, label="0"];
14->6 [style = bold, label=""];
}
