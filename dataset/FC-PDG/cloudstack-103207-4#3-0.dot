digraph {
20 [style = filled, label = "final Long vmId = 1l@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(ingressRuleSet(0(.getEndPort()).thenReturn(22)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final String guestIp = \"127.0.0.1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final SecurityGroupRulesCmd command = new SecurityGroupRulesCmd(guestIp,guestIp6,guestMac,vmName,vmId,signature,seqNum,ingressRuleSet,egressRuleSet,secIps)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final List<String> cidrs = new Vector<String>()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "command.setVmTO(vm)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "nics.add(interfaceDef)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<String> secIps = new Vector<String>()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final List<InterfaceDef> nics = new ArrayList<InterfaceDef>()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final IpPortAndProto(( ingressRuleSet = new IpPortAndProto((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@726db8@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(libvirtComputingResource.getInterfaces(conn,command.getVmName())).thenReturn(nics)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final String vmName = \"Test\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "when(interfaceDef.getDevName()).thenReturn(\"eth0\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final InterfaceDef interfaceDef = Mockito.mock()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNotNull(wrapper)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(egressRuleSet(0(.getAllowedCidrs()).thenReturn(cidrs)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final VirtualMachineTO vm = Mockito.mock()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "when(libvirtComputingResource.applyDefaultNetworkRules(conn,vm,true)).thenReturn(true)@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "final Connect conn = Mockito.mock()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cidrs.add(\"0.0.0.0/0\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final IpPortAndProto(( egressRuleSet = new IpPortAndProto((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@726dc3@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String guestMac = \"00:00:00:00\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final String signature = \"signature\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fail(e.getMessage())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(egressRuleSet(0(.getStartPort()).thenReturn(22)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testSecurityGroupRulesCmdTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(ingressRuleSet(0(.getProto()).thenReturn(\"tcp\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final String guestIp6 = \"2001:db8::cad:40ff:fefd:75c4\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertFalse(answer.getResult())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "when(egressRuleSet(0(.getEndPort()).thenReturn(22)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(interfaceDef.getBrName()).thenReturn(\"br0\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testSecurityGroupRulesCmdTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "when(ingressRuleSet(0(.getStartPort()).thenReturn(22)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(libvirtComputingResource.addNetworkRules(command.getVmName(),Long.toString(command.getVmId()),command.getGuestIp(),command.getGuestIp6(),command.getSignature(),Long.toString(command.getSeqNum()),command.getGuestMac(),command.stringifyRules(),vif,brname,command.getSecIpsString())).thenReturn(true)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(egressRuleSet(0(.getProto()).thenReturn(\"tcp\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final LibvirtException e@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Long seqNum = 1l@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(answer.getResult())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testSecurityGroupRulesCmdFalse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "when(ingressRuleSet(0(.getAllowedCidrs()).thenReturn(cidrs)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String vif = nics.get(0).getDevName()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(command.getVmName())@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final String brname = nics.get(0).getBrName()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->25 [style = bold, label=""];
38->26 [style = bold, label=""];
42->2 [style = solid, label="signature"];
33->2 [style = solid, label="seqNum"];
2->23 [style = solid, label="command"];
44->13 [style = bold, label=""];
41->2 [style = solid, label="guestIp"];
24->34 [style = bold, label=""];
37->20 [style = bold, label=""];
8->4 [style = bold, label=""];
30->21 [style = bold, label=""];
35->41 [style = bold, label=""];
23->10 [style = bold, label=""];
2->7 [style = bold, label=""];
10->47 [style = dashed, label="0"];
37->2 [style = solid, label="vmName"];
25->19 [style = bold, label=""];
0->39 [style = bold, label=""];
6->0 [style = bold, label=""];
15->31 [style = bold, label=""];
27->32 [style = bold, label=""];
34->25 [style = solid, label="cidrs"];
38->26 [style = solid, label="wrapper"];
41->36 [style = bold, label=""];
16->13 [style = bold, label=""];
16->38 [style = bold, label=""];
47->15 [style = bold, label=""];
48->41 [style = bold, label=""];
45->46 [style = solid, label="vm"];
13->38 [style = bold, label=""];
8->4 [style = solid, label="interfaceDef"];
9->6 [style = dotted, label="true"];
9->6 [style = bold, label=""];
29->0 [style = bold, label=""];
19->27 [style = bold, label=""];
43->41 [style = bold, label=""];
16->44 [style = bold, label=""];
7->3 [style = solid, label="libvirtUtilitiesHelper"];
12->17 [style = bold, label=""];
45->46 [style = bold, label=""];
34->16 [style = solid, label="cidrs"];
40->14 [style = bold, label=""];
20->42 [style = bold, label=""];
2->45 [style = bold, label=""];
28->2 [style = solid, label="guestMac"];
12->2 [style = solid, label="ingressRuleSet"];
17->24 [style = bold, label=""];
7->40 [style = bold, label=""];
28->37 [style = bold, label=""];
42->33 [style = bold, label=""];
21->5 [style = bold, label=""];
36->28 [style = bold, label=""];
14->8 [style = bold, label=""];
22->18 [style = bold, label=""];
5->29 [style = bold, label=""];
32->16 [style = bold, label=""];
6->30 [style = bold, label=""];
46->7 [style = bold, label=""];
26->23 [style = bold, label=""];
23->47 [style = bold, label=""];
3->22 [style = bold, label=""];
10->15 [style = bold, label=""];
24->2 [style = solid, label="secIps"];
17->2 [style = solid, label="egressRuleSet"];
18->0 [style = bold, label=""];
4->3 [style = bold, label=""];
18->30 [style = bold, label=""];
1->2 [style = bold, label=""];
36->2 [style = solid, label="guestIp6"];
33->12 [style = bold, label=""];
14->22 [style = solid, label="nics"];
34->1 [style = bold, label=""];
39->11 [style = bold, label=""];
20->2 [style = solid, label="vmId"];
40->18 [style = solid, label="conn"];
}
