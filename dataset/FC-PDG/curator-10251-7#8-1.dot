digraph {
2 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertFalse(lock.writeLock().acquire(5,TimeUnit.SECONDS))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(lock.readLock().acquire(5,TimeUnit.SECONDS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "lock.writeLock().release()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client,\"/lock\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testThatUpgradingIsDisallowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertFalse(lock.writeLock().acquire(5,TimeUnit.SECONDS))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testThatUpgradingIsDisallowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "lock.readLock().release()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "lock.readLock().release()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "lock.writeLock().acquire()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testDowngrading['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "lock.readLock().acquire()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->10 [style = bold, label=""];
2->1 [style = solid, label="client"];
5->14 [style = dashed, label="0"];
5->9 [style = bold, label=""];
0->6 [style = bold, label=""];
3->14 [style = bold, label=""];
4->2 [style = bold, label=""];
0->12 [style = dashed, label="0"];
2->3 [style = solid, label="client"];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
9->6 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
3->5 [style = bold, label=""];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
14->12 [style = bold, label=""];
13->15 [style = bold, label=""];
2->10 [style = solid, label="client"];
2->7 [style = bold, label=""];
0->9 [style = dashed, label="0"];
}
