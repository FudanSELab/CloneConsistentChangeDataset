digraph {
18 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(4 1 8 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ParallelStream pstream = parallelStream(mstream,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testParallelMergeStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<Tuple> tuples = getTuples(pstream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assert(tuples.size() == 9)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "attachStreamFactory(pstream)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertOrder(tuples,0,1,2,3,4,7,6,8,9)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "pstream = new ParallelStream(zkHost,COLLECTION,mstream,2,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "testParallelEOF['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"id:(4 1 8 7 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").add(id,\"5\",\"a_s\",\"hello0\",\"a_i\",\"10\",\"a_f\",\"0\").add(id,\"6\",\"a_s\",\"hello2\",\"a_i\",\"8\",\"a_f\",\"0\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"7\",\"a_f\",\"3\").add(id,\"8\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"4\").add(id,\"9\",\"a_s\",\"hello1\",\"a_i\",\"100\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertOrder(tuples,9,8,6,4,3,2,1,0)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "pstream = parallelStream(mstream,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assert(tuples.size() == 8)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SolrParams sParamsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assert(eofTuples.size() == 2)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,Tuple> eofTuples = pstream.getEofTuples()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testParallelMergeStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "ParallelStream pstream = new ParallelStream(zkHost,COLLECTION,mstream,2,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "attachStreamFactory(pstream)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tuples = getTuples(pstream)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->22 [style = solid, label="mstream"];
17->25 [style = bold, label=""];
23->13 [style = solid, label="pstream"];
21->15 [style = solid, label="mstream"];
16->0 [style = bold, label=""];
0->9 [style = bold, label=""];
12->4 [style = solid, label="streamA"];
4->5 [style = solid, label="mstream"];
5->23 [style = dashed, label="0"];
21->15 [style = bold, label=""];
19->20 [style = bold, label=""];
15->6 [style = solid, label="pstream"];
16->9 [style = solid, label="tuples"];
13->7 [style = solid, label="tuples"];
22->16 [style = solid, label="pstream"];
14->19 [style = bold, label=""];
5->13 [style = solid, label="pstream"];
11->12 [style = bold, label=""];
15->6 [style = bold, label=""];
18->14 [style = solid, label="sParamsA"];
1->13 [style = bold, label=""];
15->22 [style = dashed, label="0"];
23->1 [style = solid, label="pstream"];
14->21 [style = solid, label="streamA"];
11->12 [style = solid, label="sParamsA"];
15->16 [style = solid, label="pstream"];
20->21 [style = bold, label=""];
17->7 [style = bold, label=""];
5->1 [style = solid, label="pstream"];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
13->17 [style = bold, label=""];
22->6 [style = solid, label="pstream"];
21->22 [style = bold, label=""];
6->16 [style = bold, label=""];
25->26 [style = bold, label=""];
10->4 [style = bold, label=""];
7->18 [style = bold, label=""];
23->1 [style = bold, label=""];
20->21 [style = solid, label="streamB"];
12->3 [style = bold, label=""];
24->8 [style = bold, label=""];
10->4 [style = solid, label="streamB"];
19->20 [style = solid, label="sParamsB"];
3->10 [style = solid, label="sParamsB"];
4->23 [style = solid, label="mstream"];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
18->14 [style = bold, label=""];
27->8 [style = bold, label=""];
4->23 [style = bold, label=""];
2->8 [style = bold, label=""];
22->6 [style = bold, label=""];
}
