digraph {
2 [style = filled, label = "LOG.info(String.format(\"Job type %s does not provide Hadoop tokens. Negotiating Hadoop tokens.\",props.getProperty(JOB_TYPE)))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "AzkabanJobLauncher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String jobId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!this.props.containsKey(ConfigurationKeys.STATE_STORE_FS_URI_KEY)@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "this.ownAzkabanSla = Long.parseLong(jobProps.getProperty(AZKABAN_GOBBLIN_JOB_SLA_IN_SECONDS,DEFAULT_AZKABAN_GOBBLIN_JOB_SLA_IN_SECONDS))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "String jobId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "HadoopUtils.addGobblinSite()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Config dynamicConfig = dynamicConfigGenerator.generateDynamicConfig(propsAsConfig)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Logger.getLogger(\"org.apache.gobblin\").setLevel(logLevel)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Properties jobProps = this.props@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "this.props.setProperty(\"env.\" + HADOOP_TOKEN_FILE_LOCATION,tokenFile.getAbsolutePath())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "LOG.info(\"Job type \" + props.getProperty(JOB_TYPE) + \" provides Hadoop tokens automatically. Using provided tokens.\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.props = new Properties()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!jobProps.containsKey(ConfigurationKeys.JOB_LAUNCHER_TYPE_KEY)@@@53@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "String jobId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Level logLevel = Level.toLevel(props.getProperty(GOBBLIN_LOG_LEVEL_KEY),Level.INFO)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "System.setProperty(HADOOP_TOKEN_FILE_LOCATION,tokenFile.getAbsolutePath())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "jobProps.containsKey(TEMPLATE_KEY)@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "this.props.putAll(props)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<Tag<?>> tags = Lists.newArrayList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!Strings.isNullOrEmpty(fsUri)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "tags.addAll(Tag.fromMap(AzkabanTags.getAzkabanTags()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "this.props.setProperty(ConfigurationKeys.FS_URI_KEY,fsUri)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "this.props.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,tokenFile.getAbsolutePath())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RootMetricContext.get(tags)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "jobProps = ConfigUtils.configToProperties(resolvedJob)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "this.daemon = new SchedulerDaemon(props)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "!this.props.containsKey(ConfigurationKeys.FS_URI_KEY)@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "GobblinMetrics.addCustomTagsToProperties(jobProps,tags)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "this.props.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,System.getenv(HADOOP_TOKEN_FILE_LOCATION))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "props.containsKey(GOBBLIN_LOG_LEVEL_KEY)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "System.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,tokenFile.getAbsolutePath())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "AzkabanGobblinDaemon['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Properties props@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "this.props.setProperty(ConfigurationKeys.JOB_TRACKING_URL_KEY,Strings.nullToEmpty(conf.get(AZKABAN_LINK_JOBEXEC_URL)))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "AzkabanJobLauncher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "URI templateUri = new URI(jobProps.getProperty(TEMPLATE_KEY))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "jobProps.setProperty(ConfigurationKeys.JOB_LAUNCHER_TYPE_KEY,JobLauncherFactory.JobLauncherType.MAPREDUCE.toString())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "this.props.put(entry.getKey(),entry.getValue().unwrapped().toString())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Properties props@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "this.jobLauncher = this.closer.register(JobLauncherFactory.newJobLauncher(jobProps,jobProps))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "props.containsKey(JOB_TYPE) && JOB_TYPES_WITH_AUTOMATIC_TOKEN.contains(props.getProperty(JOB_TYPE))@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "File tokenFile = File.createTempFile(\"mr-azkaban\",\".token\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "this.applicationLauncher = this.closer.register(new ServiceBasedAppLauncher(jobProps,\"Azkaban-\" + UUID.randomUUID()))@@@58@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "this.props.setProperty(ConfigurationKeys.STATE_STORE_FS_URI_KEY,fsUri)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Config resolvedJob = new PackagedTemplatesJobCatalogDecorator().getTemplate(templateUri).getResolvedConfig(ConfigUtils.propertiesToConfig(jobProps))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DynamicConfigGenerator dynamicConfigGenerator = DynamicConfigGeneratorFactory.createDynamicConfigGenerator(propsAsConfig)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Configuration conf = new Configuration()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "TokenUtils.getHadoopTokens(new State(props),Optional.of(tokenFile),new Credentials())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Logger.getLogger(\"gobblin\").setLevel(logLevel)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "super(jobId,LOG)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Config propsAsConfig = ConfigUtils.propertiesToConfig(props)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String fsUri = conf.get(HADOOP_FS_DEFAULT_NAME)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
16->34 [style = dotted, label="true"];
4->12 [style = solid, label="resolvedJob"];
15->21 [style = bold, label=""];
44->7 [style = bold, label=""];
11->29 [style = bold, label=""];
17->14 [style = dotted, label="true"];
13->40 [style = solid, label="jobProps"];
12->35 [style = solid, label="jobProps"];
1->30 [style = bold, label=""];
32->6 [style = bold, label=""];
26->11 [style = solid, label="propsAsConfig"];
8->38 [style = solid, label="fsUri"];
34->24 [style = bold, label=""];
49->10 [style = bold, label=""];
17->14 [style = bold, label=""];
23->13 [style = bold, label=""];
33->46 [style = bold, label=""];
51->52 [style = dotted, label="true"];
1->36 [style = dotted, label="false"];
43->8 [style = bold, label=""];
2->36 [style = bold, label=""];
25->19 [style = bold, label=""];
39->38 [style = bold, label=""];
29->43 [style = bold, label=""];
1->5 [style = dotted, label="false"];
28->42 [style = bold, label=""];
42->15 [style = bold, label=""];
20->37 [style = solid, label="tags"];
10->31 [style = bold, label=""];
32->49 [style = bold, label=""];
1->45 [style = dotted, label="false"];
18->11 [style = bold, label=""];
7->37 [style = bold, label=""];
16->34 [style = bold, label=""];
22->33 [style = dotted, label="true"];
21->32 [style = dotted, label="true"];
33->27 [style = bold, label=""];
12->40 [style = solid, label="jobProps"];
1->30 [style = dotted, label="true"];
5->25 [style = bold, label=""];
8->22 [style = bold, label=""];
1->23 [style = dotted, label="false"];
6->49 [style = dashed, label="0"];
0->42 [style = solid, label="jobId"];
35->40 [style = bold, label=""];
48->47 [style = dotted, label="true"];
50->42 [style = solid, label="jobId"];
13->37 [style = solid, label="jobProps"];
51->42 [style = bold, label=""];
38->33 [style = bold, label=""];
37->16 [style = bold, label=""];
28->41 [style = dotted, label="true"];
48->41 [style = dotted, label="true"];
21->6 [style = dotted, label="true"];
13->35 [style = solid, label="jobProps"];
30->17 [style = bold, label=""];
1->17 [style = dotted, label="true"];
16->24 [style = bold, label=""];
12->20 [style = bold, label=""];
3->9 [style = dotted, label="true"];
21->49 [style = dotted, label="true"];
39->33 [style = bold, label=""];
3->9 [style = bold, label=""];
20->7 [style = solid, label="tags"];
31->26 [style = bold, label=""];
28->0 [style = dotted, label="true"];
10->13 [style = solid, label="props"];
8->46 [style = solid, label="fsUri"];
6->10 [style = bold, label=""];
4->12 [style = bold, label=""];
52->53 [style = solid, label="props"];
22->39 [style = bold, label=""];
32->49 [style = solid, label="logLevel"];
10->26 [style = solid, label="props"];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
14->13 [style = bold, label=""];
33->46 [style = dotted, label="true"];
41->52 [style = dashed, label="0"];
27->1 [style = bold, label=""];
10->31 [style = solid, label="props"];
24->35 [style = bold, label=""];
22->39 [style = dotted, label="true"];
9->4 [style = bold, label=""];
39->38 [style = dotted, label="true"];
42->20 [style = bold, label=""];
1->25 [style = dotted, label="false"];
3->4 [style = dotted, label="true"];
48->42 [style = bold, label=""];
1->19 [style = dotted, label="false"];
20->44 [style = bold, label=""];
1->2 [style = dotted, label="false"];
26->18 [style = solid, label="propsAsConfig"];
13->4 [style = solid, label="jobProps"];
3->20 [style = bold, label=""];
10->45 [style = solid, label="props"];
36->45 [style = solid, label="tokenFile"];
13->3 [style = bold, label=""];
22->27 [style = bold, label=""];
3->12 [style = dotted, label="true"];
19->23 [style = bold, label=""];
46->27 [style = bold, label=""];
21->32 [style = bold, label=""];
12->37 [style = solid, label="jobProps"];
47->42 [style = solid, label="jobId"];
32->6 [style = solid, label="logLevel"];
36->45 [style = bold, label=""];
51->50 [style = dotted, label="true"];
7->53 [style = bold, label=""];
26->18 [style = bold, label=""];
45->5 [style = bold, label=""];
}
