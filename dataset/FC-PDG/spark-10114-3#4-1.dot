digraph {
3 [style = filled, label = "stream1.onData(stream1.getID(),ByteBuffer.wrap(new byte(((())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testDeferredBufsAreWrittenDuringOnComplete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamCallbackWithID stream1 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,0,0,0,0))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "stream1.onData(stream1.getID(),ByteBuffer.wrap(new byte(((())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stream2.onData(stream2.getID(),ByteBuffer.wrap(new byte(((())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamCallbackWithID stream2 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,1,0,0))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "MergedBlockMeta blockMeta = pushResolver.getMergedBlockMeta(TEST_APP,0,0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "stream2.onData(stream2.getID(),ByteBuffer.wrap(new byte(((())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "stream2.onData(stream2.getID(),ByteBuffer.wrap(new byte(((())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "stream2.onData(stream2.getID(),ByteBuffer.wrap(new byte(((())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "StreamCallbackWithID stream2 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,0,0,0,0))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "pushResolver.finalizeShuffleMerge(new FinalizeShuffleMerge(TEST_APP,0))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "pushResolver.finalizeShuffleMerge(new FinalizeShuffleMerge(TEST_APP,NO_ATTEMPT_ID,0))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "stream1.onComplete(stream1.getID())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "stream2.onComplete(stream2.getID())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testDeferredBufsAreWrittenDuringOnComplete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "StreamCallbackWithID stream2 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,0,1,0,0))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "StreamCallbackWithID stream1 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,0,0,0))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testDuplicateBlocksAreIgnoredWhenPrevStreamIsInProgress['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "validateChunks(TEST_APP,0,0,blockMeta,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a60008,new int((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6000c)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
4->16 [style = dashed, label="0"];
1->14 [style = dashed, label="0"];
16->10 [style = bold, label=""];
2->6 [style = bold, label=""];
3->11 [style = bold, label=""];
3->12 [style = bold, label=""];
11->12 [style = dashed, label="0"];
15->3 [style = bold, label=""];
7->3 [style = bold, label=""];
17->7 [style = bold, label=""];
3->19 [style = bold, label=""];
11->19 [style = dashed, label="0"];
12->8 [style = bold, label=""];
2->6 [style = solid, label="blockMeta"];
10->0 [style = bold, label=""];
9->14 [style = bold, label=""];
7->15 [style = dashed, label="0"];
11->8 [style = bold, label=""];
5->7 [style = bold, label=""];
8->18 [style = dashed, label="0"];
1->2 [style = bold, label=""];
14->2 [style = bold, label=""];
13->15 [style = bold, label=""];
8->4 [style = bold, label=""];
9->1 [style = bold, label=""];
18->16 [style = bold, label=""];
}
