digraph {
44 [style = filled, label = "assertEquals(6L,consumer.position(tp))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(4L,changelogReader.changelogMetadata(tp).totalRestored())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldPollWithRightTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,11L,\"key\".getBytes(),\"value\".getBytes()))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(changelogReader.completedChangelogs().isEmpty())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,11L))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "changelogReader.restore()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "changelogReader.restore()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldPollWithRightTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),consumer.lastPollTimeout())@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(5L).anyTimes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_END))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final MockConsumer<byte((,byte((> consumer = new MockConsumer<byte((,byte((>(OffsetResetStrategy.EARLIEST){@Override public Map<TopicPartition,Long> endOffsets(final Collection<TopicPartition> partitions){return partitions.stream().collect(Collectors.toMap(Function.identity(),null))}}@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.COMPLETED,changelogReader.changelogMetadata(tp).state())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.replay(stateManager,storeMetadata,store)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,consumer,callback)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@22@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(10L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "changelogReader.register(tp,stateManager)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(null).andReturn(9L).anyTimes()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_BATCH))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "type == ACTIVE@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(12L,consumer.position(tp))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "shouldRestoreFromPositionAndCheckForCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_START))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "type == ACTIVE@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "type == STANDBY@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "type == ACTIVE@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4->6 [style = bold, label=""];
30->19 [style = dotted, label="true"];
11->12 [style = bold, label=""];
26->35 [style = bold, label=""];
10->11 [style = bold, label=""];
30->21 [style = dotted, label="true"];
0->25 [style = bold, label=""];
0->45 [style = dotted, label="true"];
0->24 [style = dotted, label="true"];
30->37 [style = dotted, label="false"];
20->46 [style = bold, label=""];
16->1 [style = bold, label=""];
0->42 [style = dotted, label="true"];
30->22 [style = dotted, label="false"];
9->17 [style = bold, label=""];
4->9 [style = bold, label=""];
4->9 [style = dotted, label="true"];
39->22 [style = bold, label=""];
7->1 [style = bold, label=""];
0->50 [style = dotted, label="true"];
0->5 [style = dotted, label="false"];
30->48 [style = bold, label=""];
1->10 [style = bold, label=""];
36->19 [style = bold, label=""];
0->29 [style = bold, label=""];
50->20 [style = bold, label=""];
47->32 [style = bold, label=""];
2->14 [style = dotted, label="true"];
30->32 [style = dotted, label="true"];
30->51 [style = dotted, label="false"];
8->18 [style = bold, label=""];
1->41 [style = dashed, label="0"];
35->23 [style = bold, label=""];
11->12 [style = solid, label="consumer"];
2->13 [style = dotted, label="false"];
51->38 [style = bold, label=""];
46->43 [style = bold, label=""];
18->15 [style = bold, label=""];
0->2 [style = dotted, label="true"];
43->49 [style = bold, label=""];
30->28 [style = dotted, label="true"];
6->26 [style = bold, label=""];
2->13 [style = bold, label=""];
6->0 [style = bold, label=""];
15->4 [style = bold, label=""];
10->8 [style = bold, label=""];
24->42 [style = bold, label=""];
9->0 [style = bold, label=""];
9->17 [style = dotted, label="true"];
21->47 [style = bold, label=""];
9->6 [style = bold, label=""];
30->38 [style = dotted, label="false"];
40->41 [style = bold, label=""];
11->8 [style = bold, label=""];
12->3 [style = bold, label=""];
41->10 [style = bold, label=""];
22->51 [style = bold, label=""];
0->29 [style = dotted, label="false"];
31->30 [style = bold, label=""];
23->44 [style = bold, label=""];
45->50 [style = bold, label=""];
3->4 [style = bold, label=""];
17->0 [style = bold, label=""];
27->31 [style = bold, label=""];
30->36 [style = dotted, label="true"];
29->20 [style = bold, label=""];
30->48 [style = dotted, label="true"];
42->45 [style = bold, label=""];
0->25 [style = dotted, label="true"];
8->12 [style = bold, label=""];
30->37 [style = bold, label=""];
25->24 [style = bold, label=""];
19->21 [style = bold, label=""];
30->47 [style = dotted, label="true"];
48->28 [style = bold, label=""];
37->39 [style = bold, label=""];
28->36 [style = bold, label=""];
2->14 [style = bold, label=""];
0->2 [style = bold, label=""];
0->5 [style = bold, label=""];
49->34 [style = bold, label=""];
44->33 [style = bold, label=""];
33->0 [style = bold, label=""];
30->39 [style = dotted, label="false"];
34->27 [style = bold, label=""];
}
