digraph {
26 [style = filled, label = "target = reinitShard(target,routing)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertDocs(target,\"1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertTrue(target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,Version version,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState){try {cleanLuceneIndex(targetStore.directory())for (String file : sourceStore.directory().listAll()){if (file.equals(\"write.lock\") || file.startsWith(\"extra\")) {continue}targetStore.directory().copyFrom(sourceStore.directory(),file,file,IOContext.DEFAULT)}}catch (Exception ex) }}))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "closeShard(source,false)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(2L))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "source.refresh(\"test\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final Settings sourceSettings = Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "IndexShard target = newStartedShard(true,Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),source.indexSettings().isSoftDeleteEnabled()).build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Store sourceStore = source.store()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "randomBoolean()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final IndexShard source = newStartedShard(true,sourceSettings)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"foo\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "closeShards(target)@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EngineTestCase.generateNewSeqNo(IndexShardTestCase.getEngine(source))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(0L))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertThat(IndexShardTestCase.getEngine(target),instanceOf())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testRestoreShard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "source.refresh(\"test\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "routing = ShardRoutingHelper.newWithRestoreSource(routing,new RecoverySource.SnapshotRecoverySource(UUIDs.randomBase64UUID(),snapshot,Version.CURRENT,\"test\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "IndexShard target = newStartedShard(true,targetSettings,new FollowingEngineFactory())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final IndexShard source = newStartedShard(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Store targetStore = target.store()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testRestoreShard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testRestoreShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final Settings targetSettings = Settings.builder().put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),true).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "closeShard(source,false)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "target.markAsRecovering(\"store\",new RecoveryState(routing,localNode,null))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "closeShards(target)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EngineTestCase.generateNewSeqNo(source.getEngine())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->38 [style = dashed, label="0"];
7->32 [style = bold, label=""];
30->13 [style = bold, label=""];
26->33 [style = solid, label="target"];
6->22 [style = bold, label=""];
12->4 [style = solid, label="snapshot"];
21->15 [style = bold, label=""];
24->19 [style = solid, label="target"];
40->38 [style = bold, label=""];
28->14 [style = bold, label=""];
13->17 [style = solid, label="source"];
4->26 [style = solid, label="routing"];
23->29 [style = bold, label=""];
20->16 [style = bold, label=""];
3->19 [style = bold, label=""];
6->11 [style = bold, label=""];
34->41 [style = solid, label="targetSettings"];
19->16 [style = solid, label="target"];
2->3 [style = solid, label="routing"];
24->22 [style = solid, label="target"];
3->21 [style = solid, label="routing"];
6->11 [style = dotted, label="true"];
13->18 [style = solid, label="source"];
24->10 [style = bold, label=""];
19->12 [style = bold, label=""];
13->20 [style = solid, label="source"];
45->6 [style = solid, label="source"];
2->9 [style = bold, label=""];
46->37 [style = bold, label=""];
42->40 [style = bold, label=""];
35->42 [style = solid, label="localNode"];
15->35 [style = bold, label=""];
45->3 [style = solid, label="source"];
17->2 [style = bold, label=""];
31->33 [style = bold, label=""];
10->0 [style = bold, label=""];
45->36 [style = solid, label="source"];
37->45 [style = bold, label=""];
41->43 [style = bold, label=""];
6->39 [style = bold, label=""];
27->8 [style = bold, label=""];
13->24 [style = bold, label=""];
13->10 [style = solid, label="source"];
35->42 [style = bold, label=""];
1->3 [style = bold, label=""];
38->27 [style = bold, label=""];
37->45 [style = solid, label="sourceSettings"];
7->20 [style = bold, label=""];
24->25 [style = solid, label="target"];
25->17 [style = bold, label=""];
26->7 [style = solid, label="target"];
26->21 [style = bold, label=""];
3->19 [style = solid, label="routing"];
22->1 [style = dotted, label="true"];
4->42 [style = solid, label="routing"];
18->6 [style = bold, label=""];
45->31 [style = solid, label="source"];
5->13 [style = bold, label=""];
11->22 [style = bold, label=""];
32->44 [style = bold, label=""];
9->3 [style = bold, label=""];
0->18 [style = bold, label=""];
14->27 [style = bold, label=""];
22->1 [style = bold, label=""];
1->25 [style = bold, label=""];
44->31 [style = bold, label=""];
41->26 [style = solid, label="target"];
45->39 [style = solid, label="source"];
19->14 [style = solid, label="target"];
15->23 [style = bold, label=""];
26->21 [style = solid, label="localNode"];
4->26 [style = bold, label=""];
34->41 [style = bold, label=""];
0->39 [style = dashed, label="0"];
43->6 [style = bold, label=""];
8->7 [style = bold, label=""];
19->7 [style = solid, label="target"];
29->28 [style = bold, label=""];
22->3 [style = bold, label=""];
12->4 [style = bold, label=""];
19->4 [style = solid, label="routing"];
26->44 [style = solid, label="target"];
41->43 [style = solid, label="target"];
39->36 [style = bold, label=""];
45->34 [style = bold, label=""];
9->3 [style = solid, label="snapshot"];
36->22 [style = bold, label=""];
}
