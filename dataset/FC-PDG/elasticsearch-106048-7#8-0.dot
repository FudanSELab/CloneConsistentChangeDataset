digraph {
25 [style = filled, label = "maxNumberOfThreads.set(-1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testMaxNumberOfThreadsCheck['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "maxFileDescriptorCount.set(-1)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BootstrapChecks.check(emptyContext,true,Collections.singletonList(check))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "maxFileDescriptorCount.set(randomIntBetween(limit + 1,Integer.MAX_VALUE))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "BootstrapChecks.check(emptyContext,true,Collections.singletonList(check))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(e.getMessage(),containsString(\"max file descriptors\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int limit = osX? 10240: 1 << 16@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "BootstrapChecks.check(emptyContext,true,Collections.singletonList(check))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final NodeValidationException e = expectThrows(,null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "check = new BootstrapChecks.OsXFileDescriptorCheck(){@Override long getMaxFileDescriptorCount(){return maxFileDescriptorCount.get()}}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "check = new BootstrapChecks.FileDescriptorCheck(){@Override long getMaxFileDescriptorCount(){return maxFileDescriptorCount.get()}}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final AtomicLong maxFileDescriptorCount = new AtomicLong(randomIntBetween(1,limit - 1))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "BootstrapChecks.check(emptyContext,true,Collections.singletonList(check))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testFileDescriptorLimits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "maxNumberOfThreads.set(randomIntBetween(limit + 1,Integer.MAX_VALUE))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final boolean osX = randomBoolean()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "osX@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final BootstrapChecks.FileDescriptorCheck check@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final AtomicLong maxNumberOfThreads = new AtomicLong(randomIntBetween(1,limit - 1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final NodeValidationException e = expectThrows(,null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int limit = osX? 10240: 65535@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testFileDescriptorLimits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final int limit = 1 << 11@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final BootstrapChecks.MaxNumberOfThreadsCheck check = new BootstrapChecks.MaxNumberOfThreadsCheck(){@Override long getMaxNumberOfThreads(){return maxNumberOfThreads.get()}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(e.getMessage(),containsString(\"max number of threads\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
11->13 [style = solid, label="check"];
6->11 [style = dotted, label="false"];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
5->8 [style = solid, label="check"];
7->12 [style = bold, label=""];
2->1 [style = bold, label=""];
4->13 [style = bold, label=""];
1->3 [style = bold, label=""];
22->21 [style = bold, label=""];
21->19 [style = solid, label="check"];
16->19 [style = bold, label=""];
25->17 [style = bold, label=""];
1->6 [style = solid, label="osX"];
19->25 [style = bold, label=""];
20->22 [style = bold, label=""];
3->9 [style = bold, label=""];
24->16 [style = bold, label=""];
6->5 [style = bold, label=""];
18->20 [style = bold, label=""];
14->9 [style = solid, label="limit"];
1->3 [style = solid, label="osX"];
23->24 [style = bold, label=""];
20->22 [style = solid, label="limit"];
10->8 [style = bold, label=""];
12->4 [style = bold, label=""];
3->4 [style = solid, label="limit"];
5->13 [style = solid, label="check"];
6->11 [style = bold, label=""];
5->7 [style = bold, label=""];
14->9 [style = bold, label=""];
1->14 [style = bold, label=""];
20->16 [style = solid, label="limit"];
3->9 [style = solid, label="limit"];
14->4 [style = solid, label="limit"];
21->17 [style = solid, label="check"];
3->14 [style = dashed, label="0"];
11->8 [style = solid, label="check"];
21->23 [style = bold, label=""];
10->25 [style = dashed, label="0"];
1->14 [style = solid, label="osX"];
11->7 [style = bold, label=""];
6->5 [style = dotted, label="true"];
15->1 [style = bold, label=""];
}
