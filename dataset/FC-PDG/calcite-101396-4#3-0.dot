digraph {
3 [style = filled, label = "assertThat(SqlFunctions.ltAny(1L,2.0D),is(true))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(SqlFunctions.neAny(new BigDecimal(2L),1),is(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "fail(\"'lt' on non-numeric different type is not possible\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),2.0D),is(true))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),2L),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testLtWithAny['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(SqlFunctions.neAny(1L,2.0D),is(true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(SqlFunctions.neAny(\"2\",2),is(true))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testLtWithAny['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(SqlFunctions.neAny(new BigDecimal(2L),1L),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(SqlFunctions.neAny(new BigDecimal(2L),1.0D),is(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(SqlFunctions.neAny(new BigDecimal(2L),new BigDecimal(1.0D)),is(true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(SqlFunctions.ltAny(1,2L),is(true))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(SqlFunctions.neAny(1,2.0D),is(true))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),2),is(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(SqlFunctions.ltAny(1,2.0D),is(true))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),new BigDecimal(2.0D)),is(true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(SqlFunctions.neAny(\"hello\",\"world\"),is(true))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testNeWithAny['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(SqlFunctions.ltAny(\"apple\",\"banana\"),is(true))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(SqlFunctions.ltAny(\"1\",2L),is(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(SqlFunctions.neAny(1,2L),is(true))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->17 [style = bold, label=""];
12->14 [style = bold, label=""];
20->18 [style = bold, label=""];
15->12 [style = bold, label=""];
0->9 [style = bold, label=""];
7->6 [style = bold, label=""];
0->14 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
14->19 [style = bold, label=""];
6->8 [style = bold, label=""];
10->15 [style = dashed, label="0"];
7->13 [style = dashed, label="0"];
5->4 [style = bold, label=""];
19->13 [style = bold, label=""];
10->3 [style = bold, label=""];
9->7 [style = bold, label=""];
9->19 [style = dashed, label="0"];
8->2 [style = bold, label=""];
21->20 [style = bold, label=""];
3->0 [style = bold, label=""];
5->20 [style = dashed, label="0"];
4->10 [style = bold, label=""];
4->18 [style = dashed, label="0"];
3->12 [style = dashed, label="0"];
17->16 [style = bold, label=""];
11->5 [style = bold, label=""];
1->5 [style = bold, label=""];
18->15 [style = bold, label=""];
}
