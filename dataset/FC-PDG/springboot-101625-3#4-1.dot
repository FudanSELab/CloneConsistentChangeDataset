digraph {
5 [style = filled, label = "propertySource.setProperty(\"spring.config.import\",\"springboot\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(withChildren.getChildren(ImportPhase.BEFORE_PROFILE_ACTIVATION)).containsExactly(childContributor)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ConfigDataEnvironmentContributor contributor = ConfigDataEnvironmentContributor.ofImported(null,configData,0,this.activationContext)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "hasUnprocessedImportsWhenHasChildrenForPhaseReturnsFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ConfigDataEnvironmentContributor childContributor = ConfigDataEnvironmentContributor.ofImported(null,childConfigData,0,this.activationContext)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ConfigDataEnvironmentContributor withChildren = contributor.withChildren(ImportPhase.BEFORE_PROFILE_ACTIVATION,Collections.singletonList(childContributor))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ConfigData childConfigData = new ConfigData(Collections.singleton(new MockPropertySource()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ConfigData configData = new ConfigData(Collections.singleton(propertySource))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getChildrenWhenHasChildrenReturnsChildren['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MockPropertySource propertySource = new MockPropertySource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "hasUnprocessedImportsWhenHasChildrenForPhaseReturnsFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "ConfigDataEnvironmentContributor contributor = createBoundContributor(null,configData,0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(withChildren.hasUnprocessedImports(ImportPhase.AFTER_PROFILE_ACTIVATION)).isTrue()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ConfigDataEnvironmentContributor childContributor = createBoundContributor(null,childConfigData,0)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(withChildren.hasUnprocessedImports(ImportPhase.BEFORE_PROFILE_ACTIVATION)).isFalse()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(withChildren.getChildren(ImportPhase.AFTER_PROFILE_ACTIVATION)).isEmpty()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
8->1 [style = solid, label="childConfigData"];
2->6 [style = bold, label=""];
3->0 [style = solid, label="propertySource"];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
7->3 [style = bold, label=""];
2->13 [style = bold, label=""];
8->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
8->12 [style = solid, label="childConfigData"];
1->13 [style = solid, label="childContributor"];
6->13 [style = dashed, label="0"];
5->0 [style = bold, label=""];
9->15 [style = dashed, label="0"];
0->4 [style = bold, label=""];
4->8 [style = bold, label=""];
11->8 [style = bold, label=""];
0->4 [style = solid, label="configData"];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
4->11 [style = dashed, label="0"];
6->9 [style = bold, label=""];
1->2 [style = solid, label="childContributor"];
8->12 [style = bold, label=""];
12->2 [style = solid, label="childContributor"];
0->11 [style = solid, label="configData"];
}
