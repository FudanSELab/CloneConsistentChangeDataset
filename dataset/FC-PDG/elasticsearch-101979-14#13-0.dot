digraph {
12 [style = filled, label = "Map<String,Object> mappingsProperties = (Map<String,Object>)doc.get(\"properties\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(parsedMappings,hasKey(\"_doc\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CompressedXContent reqMapping = createMapping(\"test\",\"keyword\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(doc,hasKey(\"properties\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testRequestDataHavePriorityOverTemplateData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertThat(aggregatedIndexSettings.get(\"key1\"),equalTo(\"requestValue\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(mappingsProperties,hasKey(\"mapping_from_template\"))@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,Object> parsedMappings = MetadataCreateIndexService.parseV1Mappings(request.mappings(),List.of(templateMetadata.getMappings()),NamedXContentRegistry.EMPTY)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(mappingsProperties,hasKey(\"test\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Settings aggregatedIndexSettings = aggregateIndexSettings(ClusterState.EMPTY_STATE,request,templateMetadata.settings(),null,Settings.EMPTY,IndexScopedSettings.DEFAULT_SCOPED_SETTINGS,randomShardLimitService())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "request.mappings(createMapping(\"mapping_from_request\",\"text\").string())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<AliasMetadata> resolvedAliases = resolveAndValidateAliases(request.index(),request.aliases(),MetadataIndexTemplateService.resolveAliases(List.of(templateMetadata)),Metadata.builder().build(),aliasValidator,xContentRegistry(),queryShardContext)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRequestDataHavePriorityOverTemplateData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testParseMappingsAppliesDataFromTemplateAndRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat((Map<String,Object>)mappingsProperties.get(\"test\"),hasValue(\"keyword\"))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Map<String,Object> mappingsProperties = (Map<String,Object>)doc.get(\"properties\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(doc,hasKey(\"properties\"))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Settings aggregatedIndexSettings = aggregateIndexSettings(ClusterState.EMPTY_STATE,request,templateMetadata.settings(),null,Settings.EMPTY,IndexScopedSettings.DEFAULT_SCOPED_SETTINGS,randomShardLimitService(),Collections.emptySet())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(mappingsProperties,hasKey(\"mapping_from_request\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexTemplateMetadata templateMetadata = addMatchingTemplate(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(resolvedAliases.get(0).getSearchRouting(),equalTo(\"fromRequest\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CompressedXContent templateMapping = createMapping(\"test\",\"text\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IndexTemplateMetadata templateMetadata = addMatchingTemplate(null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "request.mappings(reqMapping.string())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "request.aliases(Set.of(new Alias(\"alias\").searchRouting(\"fromRequest\")))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "request.settings(Settings.builder().put(\"key1\",\"requestValue\").build())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,Object> parsedMappings = MetadataCreateIndexService.parseV1Mappings(request.mappings(),List.of(templateMetadata.mappings()),xContentRegistry())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map<String,Object> doc = (Map<String,Object>)parsedMappings.get(\"_doc\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->25 [style = bold, label=""];
11->16 [style = solid, label="parsedMappings"];
20->21 [style = solid, label="doc"];
9->16 [style = dashed, label="0"];
1->8 [style = bold, label=""];
2->10 [style = solid, label="templateMetadata"];
3->1 [style = bold, label=""];
25->24 [style = solid, label="parsedMappings"];
10->19 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
18->17 [style = bold, label=""];
14->17 [style = bold, label=""];
26->16 [style = solid, label="mappingsProperties"];
15->16 [style = bold, label=""];
12->9 [style = bold, label=""];
27->22 [style = bold, label=""];
22->23 [style = bold, label=""];
4->7 [style = bold, label=""];
24->20 [style = bold, label=""];
20->21 [style = bold, label=""];
26->16 [style = bold, label=""];
25->24 [style = bold, label=""];
21->26 [style = bold, label=""];
5->6 [style = solid, label="doc"];
17->0 [style = bold, label=""];
5->6 [style = bold, label=""];
12->9 [style = solid, label="mappingsProperties"];
11->10 [style = bold, label=""];
11->25 [style = dashed, label="0"];
10->4 [style = bold, label=""];
16->5 [style = bold, label=""];
7->15 [style = bold, label=""];
26->5 [style = solid, label="mappingsProperties"];
4->19 [style = dashed, label="0"];
8->11 [style = bold, label=""];
19->7 [style = bold, label=""];
9->13 [style = bold, label=""];
6->12 [style = bold, label=""];
}
