digraph {
36 [style = filled, label = "replay(indexerMetadataStorageCoordinator)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "EasyMock.expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "taskRunner.registerListener(anyObject(),anyObject())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "EasyMock.expect(indexerMetadataStorageCoordinator.resetDataSourceMetadata(EasyMock.capture(captureDataSource),EasyMock.capture(captureDataSourceMetadata))).andReturn(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(captureDataSourceMetadata.getValue(),expectedMetadata)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.reset(indexerMetadataStorageCoordinator)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "expect(taskStorage.getActiveTasks()).andReturn(ImmutableList.of()).anyTimes()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Capture<String> captureDataSource = EasyMock.newCapture()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "KinesisDataSourceMetadata kinesisDataSourceMetadata = new KinesisDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(stream,ImmutableMap.of(shardId1,KinesisSequenceNumber.NO_END_SEQUENCE_NUMBER,shardId0,KinesisSequenceNumber.NO_END_SEQUENCE_NUMBER),ImmutableSet.of()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "EasyMock.reset(indexerMetadataStorageCoordinator)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "EasyMock.expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.replay(indexerMetadataStorageCoordinator)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KinesisDataSourceMetadata KinesisDataSourceMetadata = new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,SeekableStreamPartitions.NO_END_SEQUENCE_NUMBER,shardId0,SeekableStreamPartitions.NO_END_SEQUENCE_NUMBER)))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "testResetDataSourceMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Capture<DataSourceMetadata> captureDataSourceMetadata = EasyMock.newCapture()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(KinesisDataSourceMetadata)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "EasyMock.expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "KinesisDataSourceMetadata resetMetadata = new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId0,SeekableStreamPartitions.NO_END_SEQUENCE_NUMBER)))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(kinesisDataSourceMetadata)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "KinesisDataSourceMetadata resetMetadata = new KinesisDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(stream,ImmutableMap.of(shardId0,KinesisSequenceNumber.NO_END_SEQUENCE_NUMBER),ImmutableSet.of()))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testResetDataSourceMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(npe.getCause() == null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expect(supervisorRecordSupplier.getPartitionIds(anyObject())).andReturn(Collections.emptySet()).anyTimes()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.expect(taskStorage.getActiveTasks()).andReturn(ImmutableList.of()).anyTimes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "KafkaDataSourceMetadata resetMetadata = new KafkaDataSourceMetadata(new SeekableStreamPartitions<>(topic,ImmutableMap.of(1,1000L,2,1000L)))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "supervisor.start()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(captureDataSource.getValue(),DATASOURCE)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "verifyAll()@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "KinesisDataSourceMetadata expectedMetadata = new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,SeekableStreamPartitions.NO_END_SEQUENCE_NUMBER)))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "KinesisDataSourceMetadata expectedMetadata = new KinesisDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(stream,ImmutableMap.of(shardId1,KinesisSequenceNumber.NO_END_SEQUENCE_NUMBER),ImmutableSet.of()))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "verifyAll()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "supervisor.resetInternal(resetMetadata)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "NullPointerException npe@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "supervisor.runInternal()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "taskRunner.registerListener(EasyMock.anyObject(),EasyMock.anyObject())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "supervisor.resetInternal(resetMetadata)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verifyAll()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testResetNoDataSourceMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "replayAll()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "supervisor = getSupervisor(1,1,true,\"PT1H\",null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->3 [style = bold, label=""];
30->1 [style = solid, label="resetMetadata"];
14->18 [style = solid, label="expectedMetadata"];
42->41 [style = bold, label=""];
16->38 [style = dashed, label="0"];
36->40 [style = bold, label=""];
12->5 [style = bold, label=""];
24->42 [style = bold, label=""];
28->30 [style = bold, label=""];
25->13 [style = bold, label=""];
15->25 [style = bold, label=""];
20->26 [style = bold, label=""];
27->9 [style = bold, label=""];
30->27 [style = bold, label=""];
8->14 [style = bold, label=""];
5->15 [style = bold, label=""];
1->20 [style = bold, label=""];
9->17 [style = bold, label=""];
17->32 [style = dashed, label="0"];
21->24 [style = bold, label=""];
31->21 [style = bold, label=""];
7->20 [style = bold, label=""];
3->12 [style = bold, label=""];
8->1 [style = solid, label="resetMetadata"];
17->29 [style = dashed, label="0"];
24->22 [style = bold, label=""];
14->27 [style = dashed, label="0"];
22->23 [style = bold, label=""];
19->41 [style = dashed, label="0"];
4->28 [style = dashed, label="0"];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
22->24 [style = dashed, label="0"];
4->17 [style = solid, label="KinesisDataSourceMetadata"];
6->4 [style = bold, label=""];
25->40 [style = solid, label="resetMetadata"];
3->34 [style = dashed, label="0"];
40->39 [style = bold, label=""];
27->18 [style = solid, label="expectedMetadata"];
25->37 [style = bold, label=""];
11->10 [style = bold, label=""];
2->21 [style = bold, label=""];
33->24 [style = bold, label=""];
23->19 [style = bold, label=""];
38->34 [style = bold, label=""];
37->32 [style = bold, label=""];
43->33 [style = bold, label=""];
32->36 [style = bold, label=""];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
41->38 [style = bold, label=""];
28->29 [style = solid, label="kinesisDataSourceMetadata"];
8->30 [style = dashed, label="0"];
34->35 [style = bold, label=""];
13->6 [style = bold, label=""];
23->42 [style = dashed, label="0"];
10->1 [style = bold, label=""];
9->29 [style = bold, label=""];
29->11 [style = bold, label=""];
35->12 [style = bold, label=""];
0->7 [style = dotted, label="true"];
6->28 [style = bold, label=""];
26->18 [style = bold, label=""];
17->11 [style = bold, label=""];
}
