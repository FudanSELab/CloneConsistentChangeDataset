digraph {
35 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "git.commit().setMessage(\"Test test Commit\").call()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "mockResultCommit.assertIsSatisfied()@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "Status status = git.status().call()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "count++@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(count,2)@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "count++@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "fileToAdd.createNewFile()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "count = 0@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "int count = 0@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "commitTestEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Exchange ex1 = mockResultCommit.getExchanges().get(0)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Git git = getGitTestRepository()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,\"Test test Commit\")}})@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "logs = new Git(repository).log().call()@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "status = git.status().call()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "fileToAdd1.createNewFile()@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@56@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "fileToAdd.createNewFile()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-commit\")@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Status status = git.status().call()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Status status = new Git(repository).status().call()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(count,1)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "int count = 0@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Thread.sleep(1 * 5000)@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(count,2)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "Git git = new Git(repository)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "commitConsumerTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessage)}})@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fileToAdd.createNewFile()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "MockEndpoint mockResultCommit = getMockEndpoint(\"mock:result-commit\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "fileToAdd1.createNewFile()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Exchange ex1 = added.getExchanges().get(0)@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "git.close()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "Iterable<RevCommit> logs = git.log().call()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "commitConsumerTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Exchange ex2 = added.getExchanges().get(1)@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "template.requestBodyAndHeader(\"direct:commit\",\"\",GitConstants.GIT_COMMIT_MESSAGE,commitMessage)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "mockResultCommit.expectedMessageCount(2)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "repository.close()@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "count++@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "Exchange ex2 = mockResultCommit.getExchanges().get(1)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "status = new Git(repository).status().call()@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50->32 [style = bold, label=""];
44->54 [style = bold, label=""];
54->55 [style = bold, label=""];
26->5 [style = solid, label="count"];
52->44 [style = bold, label=""];
62->14 [style = bold, label=""];
2->20 [style = bold, label=""];
34->52 [style = solid, label="count"];
6->26 [style = bold, label=""];
56->36 [style = bold, label=""];
43->50 [style = bold, label=""];
28->10 [style = bold, label=""];
0->13 [style = bold, label=""];
14->60 [style = solid, label="repository"];
11->1 [style = bold, label=""];
4->6 [style = bold, label=""];
15->25 [style = bold, label=""];
26->5 [style = bold, label=""];
35->41 [style = bold, label=""];
63->64 [style = bold, label=""];
21->15 [style = bold, label=""];
27->28 [style = bold, label=""];
31->24 [style = bold, label=""];
34->52 [style = bold, label=""];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
46->53 [style = bold, label=""];
12->11 [style = solid, label="count"];
22->29 [style = bold, label=""];
22->60 [style = dashed, label="0"];
25->4 [style = bold, label=""];
14->10 [style = bold, label=""];
20->31 [style = bold, label=""];
16->22 [style = bold, label=""];
9->7 [style = bold, label=""];
36->33 [style = bold, label=""];
24->18 [style = bold, label=""];
16->60 [style = bold, label=""];
45->34 [style = solid, label="count"];
48->39 [style = bold, label=""];
19->8 [style = bold, label=""];
1->9 [style = bold, label=""];
59->66 [style = bold, label=""];
47->49 [style = bold, label=""];
20->55 [style = dashed, label="0"];
53->37 [style = bold, label=""];
3->23 [style = bold, label=""];
13->27 [style = bold, label=""];
65->58 [style = bold, label=""];
33->51 [style = bold, label=""];
55->46 [style = bold, label=""];
29->19 [style = bold, label=""];
14->0 [style = bold, label=""];
10->16 [style = bold, label=""];
41->40 [style = bold, label=""];
6->26 [style = solid, label="count"];
17->14 [style = bold, label=""];
42->56 [style = bold, label=""];
51->47 [style = bold, label=""];
16->48 [style = bold, label=""];
60->63 [style = bold, label=""];
18->37 [style = dashed, label="0"];
39->38 [style = bold, label=""];
7->21 [style = bold, label=""];
2->54 [style = dashed, label="0"];
64->61 [style = bold, label=""];
23->12 [style = bold, label=""];
12->23 [style = bold, label=""];
40->45 [style = bold, label=""];
58->59 [style = bold, label=""];
5->30 [style = bold, label=""];
3->12 [style = solid, label="count"];
30->2 [style = bold, label=""];
49->57 [style = bold, label=""];
57->10 [style = bold, label=""];
38->35 [style = bold, label=""];
32->42 [style = bold, label=""];
45->34 [style = bold, label=""];
61->65 [style = bold, label=""];
}
