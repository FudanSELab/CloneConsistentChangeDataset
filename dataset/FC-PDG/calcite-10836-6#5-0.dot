digraph {
4 [style = filled, label = "RelDataType operand2 = CUSTOM_FACTORY.createSqlType(SqlTypeName.DECIMAL,38,20)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RelDataType operand1 = TYPE_FACTORY.createSqlType(SqlTypeName.DECIMAL,10,1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "RelDataType dataType = SqlStdOperatorTable.MOD.inferReturnType(TYPE_FACTORY,Lists.newArrayList(operand1,operand2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testDecimalModReturnTypeInference['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(10,dataType.getScale())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "RelDataType dataType = SqlStdOperatorTable.MOD.inferReturnType(CUSTOM_FACTORY,Lists.newArrayList(operand1,operand2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(28,dataType.getPrecision())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(11,dataType.getPrecision())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "RelDataType operand2 = TYPE_FACTORY.createSqlType(SqlTypeName.DECIMAL,19,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RelDataType operand1 = CUSTOM_FACTORY.createSqlType(SqlTypeName.DECIMAL,28,10)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(28,dataType.getPrecision())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(SqlTypeName.DECIMAL,dataType.getSqlTypeName())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(2,dataType.getScale())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCustomDecimalModReturnTypeInference['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(SqlTypeName.DECIMAL,dataType.getSqlTypeName())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(10,dataType.getScale())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testCustomDecimalModReturnTypeInference['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
16->13 [style = bold, label=""];
1->8 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->6 [style = bold, label=""];
6->7 [style = dashed, label="0"];
4->1 [style = solid, label="operand2"];
10->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
13->14 [style = solid, label="operand2"];
11->12 [style = bold, label=""];
15->16 [style = bold, label=""];
2->8 [style = dashed, label="0"];
3->4 [style = bold, label=""];
8->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
7->9 [style = bold, label=""];
3->1 [style = solid, label="operand1"];
6->5 [style = bold, label=""];
16->14 [style = solid, label="operand1"];
2->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
4->13 [style = dashed, label="0"];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
3->16 [style = dashed, label="0"];
}
