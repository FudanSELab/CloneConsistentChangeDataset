digraph {
57 [style = filled, label = "String hourlyPath = \"Identity/MemberAccount/hourly/2017/04/03/10/\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"i\"),new IntWritable(2))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "File jobDir = new File(basePath,minutelyPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "String minutelyPath = \"Identity/MemberAccount/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "EmbeddedGobblin embeddedGobblin_nondedup = createEmbeddedGobblinCompactionJob(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,\"orc\").setConfiguration(COMPACTION_SHOULD_DEDUPLICATE,\"false\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Assert.assertNull(result.get(2).getFieldValue(\"k\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "file_2.setLastModified(Long.MAX_VALUE)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "createTestingData(jobDir)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<OrcStruct> result = readOrcFile(statuses.get(0).getPath())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "JobExecutionResult execution = embeddedGobblin.run()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"i\"),new IntWritable(1))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "writeOrcRecordsInFile(new Path(file_2.getAbsolutePath()),evolvedSchema,ImmutableList.of(orcStruct_4))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "orcStruct_4.setFieldValue(\"k\",new IntWritable(7))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,extensionName).setConfiguration(COMPACTION_LATEDATA_THRESHOLD_FOR_RECOMPACT_PER_DATASET,\"Identity.*:0.1\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"i\"),new IntWritable(5))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(statuses.size() == 1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "orcStruct_4.setFieldValue(\"i\",new IntWritable(5))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"j\"),new IntWritable(5))@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "orcStruct_5.setFieldValue(\"i\",new IntWritable(10))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "reloadFolder(statuses,outputDir,fs)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "writeOrcRecordsInFile(new Path(file_late.getAbsolutePath()),evolvedSchema,ImmutableList.of(orcStruct_5))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "execution = embeddedGobblin.run()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"j\"),new IntWritable(2))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "orcStruct_5.setFieldValue(\"j\",new IntWritable(11))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"k\"),new IntWritable(7))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Assert.assertEquals(result.size(),4 + 1)@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertNull(result.get(1).getFieldValue(\"k\"))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"j\"),new IntWritable(6))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "File outputDir = new File(basePath,hourlyPath)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"i\"),new IntWritable(1))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "OrcStruct orcStruct_4 = (OrcStruct)OrcStruct.createValue(evolvedSchema)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EmbeddedGobblin embeddedGobblin_nondedup = createEmbeddedGobblin(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,\"orc\").setConfiguration(COMPACTION_SHOULD_DEDUPLICATE,\"false\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "List<OrcStruct> result = readOrcFile(statuses.get(0).getPath())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "result.sort(new Comparator<OrcStruct>(){@Override public int compare(OrcStruct o1,OrcStruct o2){return o1.compareTo(o2)}})@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JobExecutionResult execution = embeddedGobblin_nondedup.run()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "basicTestWithRecompactionAndBasicSchemaEvolution['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testNonDedup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"j\"),new IntWritable(2))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "orcStruct_5.setFieldValue(\"k\",new IntWritable(12))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"i\"),new IntWritable(4))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"j\"),new IntWritable(3))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"i\"),new IntWritable(2))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"j\"),new IntWritable(3))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "OrcStruct orcStruct_5 = (OrcStruct)OrcStruct.createValue(evolvedSchema)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "File file_late = new File(jobDir,\"file_late.1.\" + extensionName)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertNull(result.get(0).getFieldValue(\"k\"))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(result.size(),4)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "result = readOrcFile(statuses.get(0).getPath())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "orcStruct_4.setFieldValue(\"j\",new IntWritable(6))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String hourlyPath = \"Identity/MemberAccount_2/hourly/2017/04/03/10/\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "File basePath = Files.createTempDir()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<FileStatus> statuses = new ArrayList<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"j\"),new IntWritable(5))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File file_2 = new File(jobDir,\"file_2.1.\" + extensionName)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testNonDedup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"i\"),new IntWritable(4))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "TypeDescription evolvedSchema = TypeDescription.fromString(\"struct<i:int,j:int,k:int>\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "List<FileStatus> statuses = new ArrayList<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(result.size(),4)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertTrue(statuses.size() == 1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "File outputDir = new File(basePath,hourlyPath)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "reloadFolder(statuses,outputDir,fs)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "basePath.deleteOnExit()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String minutelyPath = \"Identity/MemberAccount_2/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
29->59 [style = bold, label=""];
15->21 [style = bold, label=""];
61->65 [style = solid, label="orcStruct_5"];
28->9 [style = bold, label=""];
26->49 [style = dashed, label="0"];
13->46 [style = solid, label="fs"];
0->15 [style = bold, label=""];
22->4 [style = bold, label=""];
48->62 [style = bold, label=""];
12->10 [style = bold, label=""];
19->32 [style = solid, label="jobDir"];
37->31 [style = bold, label=""];
21->1 [style = bold, label=""];
54->37 [style = bold, label=""];
7->68 [style = dashed, label="0"];
22->67 [style = bold, label=""];
67->57 [style = bold, label=""];
60->68 [style = bold, label=""];
34->32 [style = bold, label=""];
63->38 [style = bold, label=""];
41->58 [style = bold, label=""];
53->60 [style = bold, label=""];
49->36 [style = bold, label=""];
4->16 [style = bold, label=""];
50->65 [style = solid, label="evolvedSchema"];
58->46 [style = solid, label="outputDir"];
9->25 [style = solid, label="basePath"];
66->46 [style = bold, label=""];
30->69 [style = bold, label=""];
10->14 [style = bold, label=""];
15->50 [style = bold, label=""];
24->10 [style = dashed, label="0"];
29->59 [style = solid, label="statuses"];
2->9 [style = bold, label=""];
50->42 [style = solid, label="evolvedSchema"];
68->12 [style = bold, label=""];
16->19 [style = bold, label=""];
13->11 [style = bold, label=""];
51->42 [style = solid, label="orcStruct_4"];
67->19 [style = solid, label="minutelyPath"];
61->48 [style = bold, label=""];
8->60 [style = dashed, label="0"];
57->58 [style = solid, label="hourlyPath"];
46->33 [style = bold, label=""];
16->57 [style = dashed, label="0"];
18->25 [style = bold, label=""];
39->41 [style = bold, label=""];
14->8 [style = bold, label=""];
59->56 [style = bold, label=""];
32->42 [style = bold, label=""];
10->49 [style = bold, label=""];
44->66 [style = bold, label=""];
51->63 [style = bold, label=""];
9->22 [style = bold, label=""];
13->59 [style = solid, label="fs"];
23->20 [style = bold, label=""];
7->17 [style = bold, label=""];
19->15 [style = solid, label="jobDir"];
21->27 [style = dashed, label="0"];
47->40 [style = bold, label=""];
33->55 [style = bold, label=""];
58->59 [style = solid, label="outputDir"];
4->67 [style = dashed, label="0"];
57->19 [style = bold, label=""];
42->47 [style = bold, label=""];
19->0 [style = bold, label=""];
56->35 [style = bold, label=""];
9->58 [style = solid, label="basePath"];
43->61 [style = bold, label=""];
24->26 [style = bold, label=""];
50->61 [style = solid, label="evolvedSchema"];
40->39 [style = bold, label=""];
64->65 [style = bold, label=""];
65->44 [style = bold, label=""];
38->34 [style = bold, label=""];
31->43 [style = bold, label=""];
25->5 [style = bold, label=""];
35->30 [style = bold, label=""];
45->9 [style = bold, label=""];
50->51 [style = solid, label="evolvedSchema"];
29->46 [style = solid, label="statuses"];
58->13 [style = bold, label=""];
6->12 [style = bold, label=""];
27->1 [style = bold, label=""];
14->53 [style = dashed, label="0"];
52->53 [style = bold, label=""];
9->19 [style = solid, label="basePath"];
1->18 [style = bold, label=""];
20->6 [style = bold, label=""];
62->64 [style = bold, label=""];
8->7 [style = bold, label=""];
13->29 [style = bold, label=""];
17->24 [style = bold, label=""];
50->51 [style = bold, label=""];
3->13 [style = bold, label=""];
36->54 [style = bold, label=""];
17->12 [style = dashed, label="0"];
69->52 [style = bold, label=""];
19->43 [style = solid, label="jobDir"];
15->27 [style = bold, label=""];
11->23 [style = bold, label=""];
4->19 [style = solid, label="minutelyPath"];
16->25 [style = solid, label="hourlyPath"];
}
