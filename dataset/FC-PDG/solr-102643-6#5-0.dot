digraph {
4 [style = filled, label = "nodeBuilder.setFreeDiskGB(1.0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"one\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "replicas.forEach(null)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "PlacementContext placementContext = clusterBuilder.buildPlacementContext()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Optional<String> groupOptional = attributeValues.getSystemProperty(rp.getNode(),\"group\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "i < NUM_NODES / 3 * 2@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "String group = groupOptional.get()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Cluster cluster = placementContext.getCluster()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testFreeDiskConstraints['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(group,null).incrementAndGet()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Nrt, TlOg\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertTrue(\"wrong replica type in group one\",(rp.getReplicaType() == Replica.ReplicaType.NRT) || rp.getReplicaType() == Replica.ReplicaType.TLOG)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "fail(\"missing group sysprop for node \" + rp.getNode())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"wrong replica type in group two\",Replica.ReplicaType.PULL,rp.getReplicaType())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "AttributeValues attributeValues = attributeFetcher.fetchAttributes()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(placementRequest,placementContext)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "int NUM_NODES = 3@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PlacementPlanFactory placementPlanFactory = new PlacementPlanFactoryImpl()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String collectionName = \"replicaTypeCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "group.equals(\"one\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"two\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Pull,foobar\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "!groupOptional.isPresent()@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i == 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testFreeDiskConstraints['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testReplicaType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(cluster,placementRequest,attributeFetcher,placementPlanFactory)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i < NUM_NODES@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Cluster cluster = clusterBuilder.build()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Node smallNode = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "int NUM_NODES = 6@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
42->41 [style = bold, label=""];
7->16 [style = solid, label="smallNode"];
51->1 [style = solid, label="NUM_NODES"];
6->47 [style = solid, label="attributeFetcher"];
24->17 [style = dotted, label="true"];
45->33 [style = bold, label=""];
44->15 [style = bold, label=""];
18->30 [style = bold, label=""];
9->26 [style = solid, label="smallNode"];
51->1 [style = bold, label=""];
6->34 [style = dashed, label="0"];
38->31 [style = bold, label=""];
9->16 [style = solid, label="smallNode"];
14->3 [style = solid, label="collectionName"];
32->18 [style = solid, label="collectionName"];
30->29 [style = bold, label=""];
0->15 [style = bold, label=""];
28->14 [style = bold, label=""];
22->4 [style = bold, label=""];
8->1 [style = bold, label=""];
12->10 [style = bold, label=""];
22->0 [style = bold, label=""];
35->50 [style = bold, label=""];
24->21 [style = bold, label=""];
8->51 [style = dashed, label="0"];
37->38 [style = bold, label=""];
20->48 [style = bold, label=""];
53->41 [style = bold, label=""];
24->17 [style = bold, label=""];
15->36 [style = solid, label="i"];
14->13 [style = solid, label="collectionName"];
51->36 [style = solid, label="NUM_NODES"];
2->24 [style = bold, label=""];
47->34 [style = bold, label=""];
0->49 [style = dashed, label="0"];
36->44 [style = dotted, label="false"];
11->25 [style = bold, label=""];
52->35 [style = bold, label=""];
17->20 [style = bold, label=""];
46->42 [style = bold, label=""];
19->18 [style = bold, label=""];
21->19 [style = bold, label=""];
33->15 [style = bold, label=""];
40->47 [style = solid, label="placementRequest"];
46->53 [style = dotted, label="false"];
22->0 [style = dotted, label="false"];
13->11 [style = solid, label="solrCollection"];
11->12 [style = bold, label=""];
13->40 [style = dashed, label="0"];
13->10 [style = solid, label="placementRequest"];
9->45 [style = dashed, label="0"];
24->18 [style = bold, label=""];
13->11 [style = bold, label=""];
23->14 [style = bold, label=""];
25->27 [style = bold, label=""];
51->24 [style = solid, label="NUM_NODES"];
36->45 [style = dotted, label="true"];
14->21 [style = solid, label="collectionName"];
36->49 [style = bold, label=""];
7->2 [style = bold, label=""];
24->22 [style = dotted, label="true"];
15->24 [style = solid, label="i"];
13->47 [style = solid, label="cluster"];
14->8 [style = bold, label=""];
8->24 [style = solid, label="NUM_NODES"];
2->17 [style = solid, label="i"];
2->36 [style = solid, label="i"];
22->9 [style = dotted, label="true"];
2->24 [style = solid, label="i"];
22->4 [style = dotted, label="true"];
41->43 [style = bold, label=""];
6->47 [style = bold, label=""];
32->51 [style = bold, label=""];
5->30 [style = dashed, label="0"];
27->26 [style = bold, label=""];
4->9 [style = bold, label=""];
31->52 [style = bold, label=""];
49->44 [style = bold, label=""];
2->22 [style = solid, label="i"];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
32->11 [style = solid, label="collectionName"];
11->40 [style = solid, label="solrCollection"];
14->32 [style = dashed, label="0"];
39->32 [style = bold, label=""];
24->20 [style = dotted, label="true"];
24->48 [style = dotted, label="true"];
52->50 [style = bold, label=""];
41->31 [style = bold, label=""];
1->2 [style = bold, label=""];
30->25 [style = solid, label="placementContext"];
24->36 [style = dotted, label="true"];
3->13 [style = solid, label="solrCollection"];
18->3 [style = solid, label="collectionBuilder"];
36->33 [style = dotted, label="true"];
40->10 [style = bold, label=""];
10->47 [style = solid, label="placementPlanFactory"];
12->10 [style = solid, label="attributeFetcher"];
48->36 [style = bold, label=""];
50->46 [style = bold, label=""];
46->53 [style = bold, label=""];
21->18 [style = solid, label="collectionBuilder"];
36->49 [style = dotted, label="false"];
11->25 [style = solid, label="placementRequest"];
11->40 [style = bold, label=""];
2->15 [style = solid, label="i"];
8->1 [style = solid, label="NUM_NODES"];
20->22 [style = bold, label=""];
15->17 [style = solid, label="i"];
34->37 [style = bold, label=""];
15->22 [style = solid, label="i"];
11->10 [style = solid, label="placementPlanFactory"];
6->16 [style = bold, label=""];
9->15 [style = bold, label=""];
18->5 [style = bold, label=""];
15->24 [style = bold, label=""];
7->26 [style = solid, label="smallNode"];
24->15 [style = dotted, label="true"];
52->35 [style = dotted, label="true"];
3->13 [style = bold, label=""];
46->42 [style = dotted, label="true"];
5->10 [style = solid, label="cluster"];
36->45 [style = bold, label=""];
29->13 [style = bold, label=""];
}
