digraph {
13 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE upsertSink (\" + \" cnt BIGINT,\" + \" lencnt BIGINT,\" + \" cTag INT,\" + \" ts TIMESTAMP(3),\" + \" PRIMARY KEY (cnt, cTag) NOT ENFORCED\" + \") WITH (\" + \" 'connector'='jdbc',\" + \" 'url'='\" + DB_URL + \"',\" + \" 'table-name'='\" + OUTPUT_TABLE1 + \"',\" + \" 'sink.buffer-flush.max-rows' = '2',\" + \" 'sink.buffer-flush.interval' = '0'\" + \")\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "EnvironmentSettings envSettings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE upsertSink (\" + \" cnt BIGINT,\" + \" lencnt BIGINT,\" + \" cTag INT,\" + \" ts TIMESTAMP(3),\" + \" PRIMARY KEY (cnt, cTag) NOT ENFORCED\" + \") WITH (\" + \" 'connector'='jdbc',\" + \" 'url'='\" + DB_URL + \"',\" + \" 'table-name'='\" + OUTPUT_TABLE1 + \"'\" + \")\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Table t = tEnv.fromDataStream(get4TupleDataStream(env).assignTimestampsAndWatermarks(new AscendingTimestampExtractor<Tuple4<Integer,Long,String,Timestamp>>(){@Override public long extractAscendingTimestamp(Tuple4<Integer,Long,String,Timestamp> element){return element.f0}}),$(\"id\"),$(\"num\"),$(\"text\"),$(\"ts\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testUpsert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testUpsert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamTableEnvironment tEnv = StreamTableEnvironment.create(env)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Table t = tEnv.fromDataStream(get4TupleDataStream(env).assignTimestampsAndWatermarks(new AscendingTimestampExtractor<Tuple4<Integer,Long,String,Timestamp>>(){@Override public long extractAscendingTimestamp(Tuple4<Integer,Long,String,Timestamp> element){return element.f0}}),$(\"id\"),$(\"num\"),$(\"text\"),$(\"ts\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tEnv.createTemporaryView(\"T\",t)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testUpsert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "env.getConfig().enableObjectReuse()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TableResult tableResult = tEnv.executeSql(\"INSERT INTO upsertSink \" + \"SELECT cnt, COUNT(len) AS lencnt, cTag, MAX(ts) AS ts\" + \"FROM (\" + \" SELECT len, COUNT(id) as cnt, cTag, MAX(ts) AS ts\" + \" FROM (SELECT id, CHAR_LENGTH(text) AS len, (CASE WHEN id > 0 THEN 1 ELSE 0 END) cTag, ts FROM T)\" + \" GROUP BY len, cTag\" + \")\" + \"GROUP BY cnt, cTag\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "check(new Row((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b9432e,DB_URL,OUTPUT_TABLE1,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b94351)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamTableEnvironment tEnv = StreamTableEnvironment.create(env,envSettings)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE upsertSink (\" + \" cnt BIGINT,\" + \" lencnt BIGINT,\" + \" cTag INT,\" + \" ts TIMESTAMP(3)\" + \") WITH (\" + \" 'connector.type'='jdbc',\" + \" 'connector.url'='\" + DB_URL + \"',\" + \" 'connector.table'='\" + OUTPUT_TABLE1 + \"'\" + \")\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "check(new Row((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b943da,DB_URL,OUTPUT_TABLE1,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b943fd)@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tableResult.getJobClient().get().getJobExecutionResult(Thread.currentThread().getContextClassLoader()).get()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->10 [style = bold, label=""];
9->10 [style = solid, label="t"];
4->6 [style = bold, label=""];
1->11 [style = solid, label="envSettings"];
10->17 [style = bold, label=""];
8->11 [style = solid, label="env"];
9->10 [style = bold, label=""];
11->9 [style = bold, label=""];
7->3 [style = bold, label=""];
2->10 [style = dashed, label="0"];
1->11 [style = bold, label=""];
17->7 [style = bold, label=""];
14->15 [style = solid, label="t"];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
10->13 [style = bold, label=""];
6->16 [style = bold, label=""];
13->7 [style = bold, label=""];
12->8 [style = bold, label=""];
2->13 [style = dashed, label="0"];
0->8 [style = bold, label=""];
16->14 [style = bold, label=""];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
18->8 [style = bold, label=""];
8->4 [style = bold, label=""];
2->7 [style = bold, label=""];
8->16 [style = solid, label="env"];
}
