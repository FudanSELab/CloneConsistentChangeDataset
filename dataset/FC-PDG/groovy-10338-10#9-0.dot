digraph {
5 [style = filled, label = "assertTrue(\"Managed to create bean\",bean != null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Class fooClass = loadClass(classNode)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertGetProperty(bean,\"name\",\"James\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "classNode.addProperty(new PropertyNode(\"bar\",ACC_PUBLIC,\"java.lang.String\",\"Foo\",null,null,null))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertGetProperty(bean,\"bar\",null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ClassNode classNode = new ClassNode(\"Foo\",ACC_PUBLIC + ACC_SUPER,\"java.lang.Object\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertField(fooClass,\"bar\",0,Type.STRING_TYPE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testInheritedProperties['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "ClassNode classNode = new ClassNode(\"Foo\",ACC_PUBLIC + ACC_SUPER,\"org.codehaus.groovy.runtime.DummyBean\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertField(fooClass,\"bar\",0,\"java.lang.String\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ClassNode classNode = new ClassNode(Type.makeType(\"Foo\"),ACC_PUBLIC + ACC_SUPER,Type.makeType(\"org.codehaus.groovy.runtime.DummyBean\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertSetProperty(bean,\"name\",\"Bob\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertSetProperty(bean,\"bar\",\"newValue\")@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "classNode.addProperty(new PropertyNode(\"bar\",ACC_PUBLIC,Type.STRING_TYPE,Type.makeType(\"Foo\"),null,null,null))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(\"Loaded a new class\",fooClass != null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Object bean = fooClass.newInstance()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testInheritedProperties['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11->9 [style = solid, label="classNode"];
4->9 [style = bold, label=""];
8->10 [style = bold, label=""];
16->9 [style = solid, label="classNode"];
15->14 [style = bold, label=""];
0->6 [style = bold, label=""];
3->6 [style = solid, label="bean"];
11->16 [style = dashed, label="0"];
11->4 [style = bold, label=""];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
9->7 [style = solid, label="fooClass"];
7->3 [style = bold, label=""];
1->11 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->2 [style = bold, label=""];
3->5 [style = bold, label=""];
5->0 [style = bold, label=""];
11->14 [style = dashed, label="0"];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
9->13 [style = solid, label="fooClass"];
0->13 [style = dashed, label="0"];
0->8 [style = bold, label=""];
9->0 [style = solid, label="fooClass"];
3->2 [style = solid, label="bean"];
13->6 [style = bold, label=""];
16->4 [style = bold, label=""];
3->5 [style = solid, label="bean"];
3->10 [style = solid, label="bean"];
14->9 [style = solid, label="classNode"];
17->16 [style = bold, label=""];
2->8 [style = bold, label=""];
3->8 [style = solid, label="bean"];
}
