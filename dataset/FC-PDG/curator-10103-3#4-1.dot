digraph {
3 [style = filled, label = "client.setData().forPath(\"/test\",\"foo\".getBytes())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSameCuratorWatcherPerZKDocs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Timing timing = new Timing()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CountCuratorWatcher actualWatcher = new CountCuratorWatcher()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client.checkExists().usingWatcher(actualWatcher).forPath(\"/test\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.create().forPath(\"/test\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSameWatcherPerZKDocs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "client.delete().forPath(\"/test\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CountZKWatcher actualWatcher = new CountZKWatcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "timing.sleepABit()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.create().forPath(\"/test\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "timing.sleepABit()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(actualWatcher.count.getAndSet(0),1)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(actualWatcher.count.get(),1)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testSameWatcherPerZKDocs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client.checkExists().usingWatcher(actualWatcher).forPath(\"/test\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.delete().forPath(\"/test\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.getData().usingWatcher(actualWatcher).forPath(\"/test\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(actualWatcher.count.get(),1)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(actualWatcher.count.getAndSet(0),1)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
5->8 [style = bold, label=""];
15->2 [style = bold, label=""];
6->14 [style = solid, label="client"];
7->17 [style = bold, label=""];
16->11 [style = bold, label=""];
11->20 [style = dashed, label="0"];
17->1 [style = bold, label=""];
11->14 [style = bold, label=""];
1->15 [style = bold, label=""];
22->21 [style = bold, label=""];
20->14 [style = bold, label=""];
12->6 [style = bold, label=""];
10->7 [style = bold, label=""];
21->12 [style = bold, label=""];
8->0 [style = bold, label=""];
3->10 [style = bold, label=""];
18->1 [style = bold, label=""];
19->9 [style = bold, label=""];
9->21 [style = dashed, label="0"];
6->13 [style = bold, label=""];
13->5 [style = bold, label=""];
7->18 [style = bold, label=""];
9->12 [style = bold, label=""];
16->20 [style = bold, label=""];
17->18 [style = dashed, label="0"];
2->16 [style = bold, label=""];
}
