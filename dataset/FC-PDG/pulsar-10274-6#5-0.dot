digraph {
19 [style = filled, label = "decompressor.decompress(encodedNio,encodedNio.position(),uncompressedNio,uncompressedNio.position(),uncompressedNio.remaining())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ByteBuf encoded@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "decode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Snappy.uncompress(encodedNio,uncompressedNio)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int uncompressedLength@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return uncompressed@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ByteBuf encoded@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "return uncompressed@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "decode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SNAPPY_DECOMPRESSOR.get().decompress(encodedNio,uncompressedNio)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ByteBuf uncompressed = PooledByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "SnappyRawDecompressor.decompress(null,encoded.memoryAddress() + encoded.readerIndex(),encoded.memoryAddress() + encoded.writerIndex(),null,uncompressed.memoryAddress(),uncompressed.memoryAddress() + uncompressedLength)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "encoded.hasMemoryAddress() && uncompressed.hasMemoryAddress()@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "decode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int uncompressedLength@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18->7 [style = solid, label="uncompressedLength"];
0->3 [style = bold, label=""];
16->11 [style = bold, label=""];
4->8 [style = solid, label="uncompressedLength"];
2->20 [style = dashed, label="0"];
4->17 [style = solid, label="uncompressedLength"];
4->16 [style = solid, label="uncompressedLength"];
11->12 [style = dotted, label="false"];
21->18 [style = dotted, label="true"];
16->13 [style = solid, label="uncompressed"];
4->15 [style = solid, label="uncompressedLength"];
20->0 [style = bold, label=""];
5->1 [style = dotted, label="true"];
6->9 [style = dashed, label="0"];
3->19 [style = solid, label="encodedNio"];
3->6 [style = bold, label=""];
9->17 [style = bold, label=""];
1->7 [style = solid, label="uncompressedLength"];
7->8 [style = bold, label=""];
18->20 [style = solid, label="uncompressedLength"];
12->9 [style = bold, label=""];
21->4 [style = dotted, label="true"];
11->15 [style = bold, label=""];
5->4 [style = dotted, label="true"];
10->14 [style = dotted, label="true"];
3->6 [style = solid, label="encodedNio"];
12->9 [style = solid, label="encodedNio"];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
2->0 [style = bold, label=""];
18->0 [style = solid, label="uncompressedLength"];
21->20 [style = bold, label=""];
10->16 [style = bold, label=""];
3->19 [style = bold, label=""];
0->6 [style = solid, label="uncompressedNio"];
0->19 [style = solid, label="uncompressedNio"];
2->16 [style = dashed, label="0"];
11->9 [style = dotted, label="false"];
6->19 [style = dashed, label="0"];
20->8 [style = solid, label="uncompressed"];
8->9 [style = solid, label="uncompressedNio"];
11->8 [style = bold, label=""];
17->13 [style = bold, label=""];
11->8 [style = dotted, label="false"];
1->0 [style = solid, label="uncompressedLength"];
1->2 [style = solid, label="uncompressedLength"];
6->7 [style = bold, label=""];
11->15 [style = dotted, label="true"];
10->4 [style = dotted, label="true"];
19->7 [style = bold, label=""];
8->12 [style = bold, label=""];
2->8 [style = solid, label="uncompressed"];
}
