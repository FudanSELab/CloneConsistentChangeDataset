digraph {
10 [style = filled, label = "throw e@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Throwable> errors@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<Throwable> errors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "_cleanUpDisconnectComputers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "l.onBeforeShutdown()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "LinkageError e@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Throwable e@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LOGGER.log(Level.WARNING,\"ItemListener \" + l + \": \" + e.getMessage(),e)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "LOGGER.log(Level.WARNING,e,null)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final Set<Future<?>> pending = new HashSet<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return pending@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "LOGGER.log(Level.WARNING,\"ItemListener \" + l + \": \" + e.getMessage(),e)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "LOGGER.log(Level.WARNING,e,null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "LOGGER.log(Main.isUnitTest? Level.FINE: Level.INFO,\"Starting node disconnection\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "LOGGER.log(Level.FINE,\"Notifying termination\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "fireBeforeShutdown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "OutOfMemoryError e@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Queue.withLock(new Runnable(){@Override public void run(){for (Computer c : computers.values()){try {c.interrupt()killComputer(c)pending.add(c.disconnect(null))}catch (OutOfMemoryError e) catch (LinkageError e) catch (Throwable e) }}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "errors.add(e)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "fireBeforeShutdown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->18 [style = dashed, label="0"];
0->10 [style = dotted, label="true"];
2->3 [style = bold, label=""];
1->11 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
7->11 [style = dashed, label="0"];
8->6 [style = bold, label=""];
5->3 [style = dotted, label="true"];
6->14 [style = dashed, label="0"];
11->9 [style = bold, label=""];
12->6 [style = bold, label=""];
1->7 [style = bold, label=""];
8->4 [style = dotted, label="true"];
1->11 [style = bold, label=""];
1->7 [style = dotted, label="true"];
7->9 [style = bold, label=""];
3->9 [style = bold, label=""];
5->13 [style = dotted, label="true"];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
15->17 [style = bold, label=""];
19->14 [style = bold, label=""];
13->3 [style = bold, label=""];
2->13 [style = dashed, label="0"];
5->13 [style = bold, label=""];
15->16 [style = solid, label="pending"];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
12->4 [style = dotted, label="true"];
6->9 [style = bold, label=""];
17->16 [style = bold, label=""];
5->2 [style = dotted, label="true"];
}
