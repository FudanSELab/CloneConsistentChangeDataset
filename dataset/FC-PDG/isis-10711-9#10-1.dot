digraph {
3 [style = filled, label = "stubConfiguration.getViewer().getWicket().setPromptStyle(PromptStyle.INLINE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertThat(facet,is(anInstanceOf()))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "context.checking(new Expectations(){})@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when_annotated_with_as_configured['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertThat(facet.value(),is(PromptStyle.INLINE))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(Optional.of(mockPropertyLayout),stubConfiguration,mockFacetHolder).orElse(null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when_annotated_with_as_configured['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertThat(facet,is(anInstanceOf()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when_not_annotated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "context.checking(new Expectations(){})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(Optional.of(mockPropertyLayout),stubConfiguration,mockFacetHolder)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
9->0 [style = solid, label="facet"];
5->7 [style = bold, label=""];
6->3 [style = bold, label=""];
4->2 [style = solid, label="facet"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
10->8 [style = bold, label=""];
4->7 [style = dashed, label="0"];
7->2 [style = bold, label=""];
7->2 [style = solid, label="facet"];
5->4 [style = bold, label=""];
9->4 [style = bold, label=""];
4->0 [style = bold, label=""];
8->9 [style = bold, label=""];
}
