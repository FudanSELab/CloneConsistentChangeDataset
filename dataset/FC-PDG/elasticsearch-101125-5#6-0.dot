digraph {
5 [style = filled, label = "methodWriter.checkCast(MethodWriter.getType(getterPainlessMethod.returnType))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PainlessMethod getterPainlessMethod = irLoadMapShortcutNode.getDecorationValue()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MethodWriter methodWriter = writeScope.getMethodWriter()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "!getterPainlessMethod.returnType.equals(getterPainlessMethod.javaMethod.getReturnType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "visitLoadDotShortcut['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "LoadDotShortcutNode irDotSubShortcutNode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "visitLoadMapShortcut['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "LoadMapShortcutNode irLoadMapShortcutNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "visitLoadDotShortcut['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "methodWriter.writeDebugInfo(irLoadMapShortcutNode.getLocation())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PainlessMethod getterPainlessMethod = irDotSubShortcutNode.getDecorationValue()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "methodWriter.invokeMethodCall(getterPainlessMethod)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "WriteScope writeScope@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "WriteScope writeScope@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "getterPainlessMethod.returnType != getterPainlessMethod.javaMethod.getReturnType()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "methodWriter.writeDebugInfo(irDotSubShortcutNode.getLocation())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "getterPainlessMethod.returnType.equals(getterPainlessMethod.javaMethod.getReturnType()) == false@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "LoadDotShortcutNode irDotSubShortcutNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
17->5 [style = bold, label=""];
1->8 [style = bold, label=""];
8->10 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
9->11 [style = dotted, label="true"];
12->15 [style = dotted, label="true"];
9->7 [style = bold, label=""];
10->5 [style = dotted, label="true"];
12->7 [style = bold, label=""];
14->1 [style = bold, label=""];
1->17 [style = bold, label=""];
0->14 [style = dashed, label="0"];
14->1 [style = solid, label="getterPainlessMethod"];
0->1 [style = solid, label="getterPainlessMethod"];
2->0 [style = bold, label=""];
10->5 [style = bold, label=""];
8->5 [style = bold, label=""];
6->4 [style = dotted, label="true"];
12->16 [style = dotted, label="true"];
8->5 [style = dotted, label="true"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
2->13 [style = dashed, label="0"];
9->4 [style = dotted, label="true"];
8->17 [style = dashed, label="0"];
6->7 [style = bold, label=""];
6->3 [style = dotted, label="true"];
1->10 [style = bold, label=""];
13->14 [style = bold, label=""];
17->5 [style = dotted, label="true"];
}
