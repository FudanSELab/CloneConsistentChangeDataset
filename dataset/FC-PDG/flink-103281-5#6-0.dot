digraph {
19 [style = filled, label = "expectedOutput.add(new StreamRecord<>(1L))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectedOutput.add(new StreamRecord<>(3L))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testHarness.processWatermarkStatus2(WatermarkStatus.IDLE)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testHarness.processElement1(1L,1L)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testHarness.processStreamStatus2(StreamStatus.IDLE)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testHarness.processWatermark1(new Watermark(4L))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness.processWatermark1(new Watermark(1L))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(testHarness.getOutput(),empty())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectedOutput.add(new Watermark(1L))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testIdleWatermarkHandling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testIdleWatermarkHandling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testHarness.processStreamStatus2(StreamStatus.IDLE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "KeySelector<Long,Integer> dummyKeySelector = null@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness.processElement1(3L,3L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestHarnessUtil.assertOutputEquals(\"Output was not correct\",expectedOutput,testHarness.getOutput())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.processStreamStatus1(StreamStatus.IDLE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testHarness.setup()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHarness.processWatermark1(new Watermark(3L))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testIdlenessForwarding['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final WatermarkTestingOperator testOperator = new WatermarkTestingOperator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.processElement1(4L,4L)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "expectedOutput.add(StreamStatus.IDLE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness.processStreamStatus2(StreamStatus.ACTIVE)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "expectedOutput.add(new Watermark(3L))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testHarness.open()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testHarness.processWatermarkStatus2(WatermarkStatus.ACTIVE)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10->22 [style = bold, label=""];
7->17 [style = bold, label=""];
24->19 [style = bold, label=""];
17->1 [style = bold, label=""];
14->28 [style = dashed, label="0"];
4->6 [style = bold, label=""];
19->20 [style = bold, label=""];
1->18 [style = bold, label=""];
4->22 [style = dashed, label="0"];
3->16 [style = bold, label=""];
11->8 [style = solid, label="expectedOutput"];
11->10 [style = solid, label="expectedOutput"];
21->2 [style = bold, label=""];
9->28 [style = bold, label=""];
26->27 [style = bold, label=""];
29->2 [style = bold, label=""];
19->26 [style = dashed, label="0"];
14->0 [style = bold, label=""];
18->10 [style = bold, label=""];
11->3 [style = bold, label=""];
5->13 [style = bold, label=""];
15->24 [style = bold, label=""];
12->24 [style = dashed, label="0"];
6->8 [style = bold, label=""];
25->26 [style = bold, label=""];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
28->25 [style = bold, label=""];
22->6 [style = bold, label=""];
11->7 [style = solid, label="expectedOutput"];
15->12 [style = bold, label=""];
13->15 [style = bold, label=""];
23->2 [style = bold, label=""];
20->7 [style = bold, label=""];
12->19 [style = bold, label=""];
11->27 [style = solid, label="expectedOutput"];
2->11 [style = bold, label=""];
16->9 [style = bold, label=""];
0->5 [style = bold, label=""];
}
