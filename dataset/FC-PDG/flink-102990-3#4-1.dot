digraph {
1 [style = filled, label = "env.disableOperatorChaining()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "env.setParallelism(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testManualHashAssignmentCollisionThrowsException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "env.getStreamGraph().getJobGraph()@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testManualHashAssignmentForIntermediateNodeInChain['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).uid(\"map\").addSink(new NoOpSinkFunction())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testManualHashAssignmentCollisionThrowsException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "env.getStreamGraph().getJobGraph()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "env.addSource(new NoOpSourceFunction()).uid(\"source\").map(new NoOpMapFunction()).uid(\"source\").addSink(new DiscardingSink<>())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "env.addSource(new NoOpSourceFunction()).uid(\"source\").map(new NoOpMapFunction()).uid(\"source\").addSink(new NoOpSinkFunction())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
4->3 [style = bold, label=""];
6->4 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
7->0 [style = bold, label=""];
10->9 [style = bold, label=""];
8->4 [style = bold, label=""];
3->1 [style = bold, label=""];
2->7 [style = dashed, label="0"];
1->7 [style = bold, label=""];
5->4 [style = bold, label=""];
}
