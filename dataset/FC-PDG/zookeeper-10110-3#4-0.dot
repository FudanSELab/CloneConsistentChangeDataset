digraph {
19 [style = filled, label = "commitWithWait(req2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "commitWithWait(req1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(2L,values.get(\"cnt_write_commitproc_time_ms\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Request req2 = createWriteRequest(1l,2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),0l,1000l)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testWriteCommitProcTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testReadFinalProcTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Request req1 = createWriteRequest(1l,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_write_commitproc_time_ms\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_read_final_proc_time_ms\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testReadFinalProcTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "processRequestWithWait(req2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1L,values.get(\"cnt_read_final_proc_time_ms\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "setupProcessors(0,1000)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "processRequestWithWait(req1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "setupProcessors(0,0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Thread.sleep(1000)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "checkTimeMetric((long)values.get(\"max_read_final_proc_time_ms\"),1000L,2000L)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),1000L,2000L)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "processRequestWithWait(createReadRequest(1L,1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
10->16 [style = solid, label="req1"];
4->14 [style = bold, label=""];
16->18 [style = bold, label=""];
19->12 [style = bold, label=""];
12->15 [style = bold, label=""];
6->0 [style = bold, label=""];
9->21 [style = solid, label="req2"];
2->7 [style = dashed, label="0"];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
3->0 [style = bold, label=""];
5->1 [style = bold, label=""];
15->17 [style = bold, label=""];
9->19 [style = solid, label="req2"];
21->20 [style = bold, label=""];
18->4 [style = bold, label=""];
10->16 [style = bold, label=""];
2->14 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
10->18 [style = solid, label="req1"];
4->8 [style = dashed, label="0"];
9->21 [style = bold, label=""];
1->2 [style = bold, label=""];
4->11 [style = dashed, label="0"];
20->19 [style = bold, label=""];
14->11 [style = bold, label=""];
22->13 [style = bold, label=""];
0->5 [style = bold, label=""];
}
