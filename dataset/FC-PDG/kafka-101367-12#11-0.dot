digraph {
15 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(1)).grace(ofMillis(4)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(1)).grace(ofMillis(4)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).grace(ofMillis(7)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).grace(ofMillis(7)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)),SessionWindows.with(ofMillis(1)))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(7)),SessionWindows.with(ofMillis(1)).grace(ofMillis(7)))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).grace(ofMillis(4)),TimeWindows.of(ofMillis(3)).grace(ofMillis(4)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(6)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "verifyEquality(SessionWindows.ofInactivityGapAndGrace(ofMillis(1),ofMillis(11)),SessionWindows.ofInactivityGapAndGrace(ofMillis(1),ofMillis(11)))@@@4@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "verifyEquality(SessionWindows.ofInactivityGapWithNoGrace(ofMillis(1)),SessionWindows.ofInactivityGapWithNoGrace(ofMillis(1)))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)),TimeWindows.of(ofMillis(3)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verifyEquality(TimeWindows.ofSizeWithNoGrace(ofMillis(3)),TimeWindows.ofSizeWithNoGrace(ofMillis(3)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verifyEquality(SessionWindows.ofInactivityGapAndGrace(ofMillis(1),ofMillis(11)),SessionWindows.ofInactivityGapAndGrace(ofMillis(1),ofMillis(11)))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).grace(ofMillis(1)),TimeWindows.of(ofMillis(3)).grace(ofMillis(1)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verifyEquality(SessionWindows.ofInactivityGapWithNoGrace(ofMillis(1)),SessionWindows.ofInactivityGapWithNoGrace(ofMillis(1)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "verifyEquality(TimeWindows.ofSizeAndGrace(ofMillis(3),ofMillis(33)),TimeWindows.ofSizeAndGrace(ofMillis(3),ofMillis(33)))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
6->4 [style = bold, label=""];
17->13 [style = bold, label=""];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
3->1 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
16->10 [style = bold, label=""];
13->14 [style = bold, label=""];
1->15 [style = dashed, label="0"];
14->12 [style = bold, label=""];
11->15 [style = bold, label=""];
4->8 [style = dashed, label="0"];
8->9 [style = bold, label=""];
12->11 [style = bold, label=""];
}
