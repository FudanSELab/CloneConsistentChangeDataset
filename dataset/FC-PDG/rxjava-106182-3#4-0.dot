digraph {
8 [style = filled, label = "conditionalCancel1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(2L)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "syncFusedCancelAfterRequestConditional2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "syncFusedCancelAfterRequestConditional2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ts.assertResult(1)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>(2L){@Override public void onNext(Integer t){super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@177d84dtif (t == 1) {cancel()onComplete()}}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS).assertResult(1,2)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<>(2L)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Flowable.range(1,2).filter(Functions.alwaysTrue()).subscribe(ts)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Flowable.range(1,2).observeOn(Schedulers.single()).filter(Functions.alwaysTrue()).subscribe(ts)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->7 [style = bold, label=""];
4->1 [style = bold, label=""];
7->6 [style = bold, label=""];
7->6 [style = solid, label="ts"];
1->0 [style = bold, label=""];
6->9 [style = bold, label=""];
3->1 [style = bold, label=""];
3->1 [style = solid, label="ts"];
3->4 [style = dashed, label="0"];
3->7 [style = dashed, label="0"];
4->1 [style = solid, label="ts"];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
}
