digraph {
12 [style = filled, label = "createClient1CqsAndDurableCqs(client1,regionName)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "VM client2 = host.getVM(2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "server.invoke(null)@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "createClient1CqsAndDurableCqs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "VM client@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.invoke(new CacheSerializableRunnable(\"Register cq for client 1\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()CqAttributesFactory cqAf = new CqAttributesFactory()CqAttributes attributes = cqAf.create()try {queryService.newCq(\"client1DCQ1\",\"Select * From \" + SEPARATOR + regionName + \" where id = 1\",attributes,true).execute()queryService.newCq(\"client1DCQ2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 10\",attributes,true).execute()queryService.newCq(\"client1NoDC1\",\"Select * From \" + SEPARATOR + regionName,attributes,false).execute()queryService.newCq(\"client1NoDC2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 3\",attributes,false).execute()}catch (RegionNotFoundException e) catch (CqException e) catch (CqExistsException e) }})@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int timeout = 60000@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "cycleDurableClient(client1,\"client1_dc\",server1Port,regionName,timeout)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "createClient2CqsAndDurableCqs(client2,regionName)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String regionName = \"testGetAllDurableCqsFromServerCycleClients\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client1.invoke(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "client2.invoke(null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client1.invoke(new CacheSerializableRunnable(\"check durable cqs for client 1\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(2,list.size())assertTrue(list.contains(\"client1DCQ1\"))assertTrue(list.contains(\"client1DCQ2\"))}})@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "createClient1CqsAndDurableCqs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client2.invoke(new CacheSerializableRunnable(\"check durable cqs for client 2\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(4,list.size())assertTrue(list.contains(\"client2DCQ1\"))assertTrue(list.contains(\"client2DCQ2\"))assertTrue(list.contains(\"client2DCQ3\"))assertTrue(list.contains(\"client2DCQ4\"))}})@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final int server1Port = ((Integer)server.invoke(null)).intValue()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "VM client1 = host.getVM(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "VM server = host.getVM(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "disconnectAllFromDS()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "cycleDurableClient(client2,\"client2_dc\",server1Port,regionName,timeout)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testGetDurableCqsFromServerCycleClients['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "client1.invoke(null)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client2.invoke(null)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "VM client@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Host host = Host.getHost(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String regionName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0->2 [style = dotted, label="true"];
9->19 [style = bold, label=""];
10->23 [style = solid, label="client2"];
10->21 [style = bold, label=""];
24->13 [style = bold, label=""];
9->24 [style = solid, label="regionName"];
19->6 [style = bold, label=""];
11->12 [style = solid, label="client1"];
9->12 [style = solid, label="regionName"];
23->24 [style = bold, label=""];
5->3 [style = dotted, label="true"];
7->18 [style = bold, label=""];
5->1 [style = bold, label=""];
6->11 [style = bold, label=""];
25->7 [style = bold, label=""];
21->17 [style = bold, label=""];
0->3 [style = dotted, label="true"];
5->4 [style = dotted, label="true"];
10->13 [style = solid, label="client2"];
16->22 [style = bold, label=""];
12->23 [style = bold, label=""];
21->24 [style = solid, label="timeout"];
0->1 [style = bold, label=""];
9->23 [style = solid, label="regionName"];
11->24 [style = solid, label="client1"];
11->10 [style = bold, label=""];
21->13 [style = solid, label="timeout"];
9->13 [style = solid, label="regionName"];
20->9 [style = bold, label=""];
17->24 [style = solid, label="server1Port"];
22->12 [style = bold, label=""];
13->14 [style = bold, label=""];
15->25 [style = bold, label=""];
17->16 [style = bold, label=""];
14->15 [style = bold, label=""];
8->20 [style = bold, label=""];
17->13 [style = solid, label="server1Port"];
}
