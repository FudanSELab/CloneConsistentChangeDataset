digraph {
5 [style = filled, label = "final BucketState<String> initStateWithOnlyInProgressFile = new BucketState<>(\"test\",new Path(),12345L,null,completePartsPerCheckpoint)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "return Bucket.restore(0,1L,new RowWisePartWriter.Factory<>(writer,ENCODER),rollingPolicy,stateWithOnlyInProgressFile,OutputFileConfig.builder().build())@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "getRestoredBucketWithOnlyInProgressPart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return Bucket.restore(writer,0,1L,partFileFactory,rollingPolicy,initStateWithOnlyInProgressFile,OutputFileConfig.builder().build())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final Map<Long,List<RecoverableWriter.CommitRecoverable>> completePartsPerCheckpoint = createPendingPartsPerCheckpoint(numberOfPendingParts)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "getRestoredBucketWithOnlyPendingParts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final BucketState<String> initStateWithOnlyInProgressFile = new BucketState<>(\"test\",new Path(),12345L,null,completePartsPerCheckpoint)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final int numberOfPendingParts@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "getRestoredBucketWithOnlyPendingParts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final BaseStubWriter writer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Map<Long,List<InProgressFileWriter.PendingFileRecoverable>> completePartsPerCheckpoint = createPendingPartsPerCheckpoint(numberOfPendingParts)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "return Bucket.restore(0,1L,new RowWiseBucketWriter<>(writer,ENCODER),rollingPolicy,initStateWithOnlyInProgressFile,OutputFileConfig.builder().build())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final BucketState<String> stateWithOnlyInProgressFile = new BucketState<>(\"test\",new Path(),12345L,new OutputStreamBasedPartFileWriter.OutputStreamBasedInProgressFileRecoverable(new NoOpRecoverable()),new HashMap<>())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final BaseStubWriter writer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final BaseStubWriter writer@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
3->4 [style = solid, label="numberOfPendingParts"];
9->10 [style = solid, label="initStateWithOnlyInProgressFile"];
11->14 [style = bold, label=""];
12->11 [style = bold, label=""];
5->9 [style = dashed, label="0"];
3->10 [style = solid, label="writer"];
9->10 [style = bold, label=""];
2->0 [style = solid, label="writer"];
3->13 [style = dashed, label="0"];
13->14 [style = solid, label="writer"];
0->10 [style = dashed, label="0"];
4->5 [style = solid, label="completePartsPerCheckpoint"];
1->3 [style = dotted, label="true"];
11->14 [style = solid, label="stateWithOnlyInProgressFile"];
5->0 [style = solid, label="initStateWithOnlyInProgressFile"];
8->9 [style = solid, label="completePartsPerCheckpoint"];
7->8 [style = solid, label="numberOfPendingParts"];
12->13 [style = dotted, label="true"];
5->0 [style = bold, label=""];
6->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
8->9 [style = bold, label=""];
6->7 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
4->5 [style = bold, label=""];
}
