digraph {
7 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),b.getField(\"pages\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),first.getField(\"author\"))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"testX\"),be4.getField(\"abstract\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "BibEntry be0 = bibEntries.get(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(Optional.of(\"testP\"),be4.getField(\"pages\"))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),second.getField(\"pages\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"testT\"),be0.getField(\"title\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),be1.getField(\"journal\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(Optional.empty(),first.getField(\"month\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "BibEntry be3 = bibEntries.get(3)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"testV\"),be4.getField(\"volume\"))@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),be3.getField(\"publisher\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"article\",b.getType())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),second.getField(\"title\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),be4.getField(\"school\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(\"misc\",be1.getType())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Optional.of(\"12\"),first.getField(\"volume\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),second.getField(\"author\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),first.getField(\"title\"))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"testD\"),be1.getField(\"year\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),a.getField(\"title\"))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"12\"),a.getField(\"volume\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"2006\"),b.getField(\"year\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "assertEquals(\"misc\",be0.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"article\",a.getType())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testImportEntriesMedline['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"13\"),second.getField(\"volume\"))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"#may#\"),b.getField(\"month\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "testImportEntries0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),be4.getField(\"note\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"13\"),b.getField(\"volume\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(\"article\",be2.getType())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(Optional.of(\"testR\"),be4.getField(\"doi\"))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"2006\"),a.getField(\"year\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"testN\"),be4.getField(\"number\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Optional.of(\"3\"),b.getField(\"number\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"2006\"),second.getField(\"year\"))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "testImportEntriesMedline['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "assertEquals(\"article\",first.getType())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "BibEntry a = entries.get(0)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Optional.of(\"testU\"),be4.getField(\"url\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "BibEntry be2 = bibEntries.get(2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),be0.getField(\"author\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),b.getField(\"title\"))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(2,entries.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(\"year\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(\"mastersthesis\",be4.getType())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "BibEntry be4 = bibEntries.get(4)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "BibEntry b = entries.get(1)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"test8\"),be1.getField(\"date\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),be2.getField(\"journal\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(Optional.of(\"testC\"),be1.getField(\"address\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),be1.getField(\"booktitle\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),b.getField(\"author\"))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"20\"),a.getField(\"number\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"20\"),first.getField(\"number\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(\"book\",be3.getType())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),first.getField(\"pages\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),a.getField(\"pages\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"3\"),second.getField(\"number\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"testK\"),be4.getField(\"keywords\"))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"testF\"),be4.getField(\"bibtexkey\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "BibEntry be1 = bibEntries.get(1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),be0.getField(\"editor\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),a.getField(\"journal\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"#may#\"),second.getField(\"month\"))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "assertEquals(Optional.of(\"test7\"),be1.getField(\"edition\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(Optional.empty(),a.getField(\"month\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),first.getField(\"journal\"))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),be3.getField(\"series\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),a.getField(\"author\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8->16 [style = bold, label=""];
14->24 [style = bold, label=""];
15->10 [style = bold, label=""];
27->32 [style = bold, label=""];
20->52 [style = dashed, label="0"];
2->76 [style = dashed, label="0"];
68->50 [style = bold, label=""];
62->61 [style = bold, label=""];
71->62 [style = bold, label=""];
30->29 [style = bold, label=""];
22->30 [style = bold, label=""];
5->69 [style = dashed, label="0"];
55->63 [style = bold, label=""];
10->32 [style = dashed, label="0"];
48->43 [style = bold, label=""];
52->67 [style = bold, label=""];
57->74 [style = bold, label=""];
43->53 [style = bold, label=""];
47->51 [style = bold, label=""];
29->14 [style = bold, label=""];
67->47 [style = bold, label=""];
66->60 [style = bold, label=""];
76->46 [style = bold, label=""];
12->46 [style = dashed, label="0"];
19->28 [style = dashed, label="0"];
18->33 [style = dashed, label="0"];
61->49 [style = bold, label=""];
0->3 [style = bold, label=""];
9->59 [style = dashed, label="0"];
7->1 [style = bold, label=""];
63->78 [style = bold, label=""];
33->28 [style = bold, label=""];
50->70 [style = bold, label=""];
72->77 [style = bold, label=""];
18->19 [style = bold, label=""];
65->75 [style = bold, label=""];
75->69 [style = bold, label=""];
19->2 [style = bold, label=""];
16->17 [style = bold, label=""];
4->0 [style = bold, label=""];
45->71 [style = bold, label=""];
21->9 [style = bold, label=""];
36->25 [style = bold, label=""];
0->41 [style = dashed, label="0"];
5->6 [style = bold, label=""];
54->44 [style = bold, label=""];
22->65 [style = dashed, label="0"];
53->68 [style = bold, label=""];
41->38 [style = bold, label=""];
13->15 [style = bold, label=""];
22->14 [style = bold, label=""];
32->42 [style = bold, label=""];
44->66 [style = bold, label=""];
12->39 [style = dashed, label="0"];
4->57 [style = dashed, label="0"];
9->22 [style = bold, label=""];
42->37 [style = bold, label=""];
35->9 [style = bold, label=""];
28->31 [style = bold, label=""];
59->65 [style = bold, label=""];
1->51 [style = dashed, label="0"];
58->48 [style = bold, label=""];
20->42 [style = dashed, label="0"];
51->64 [style = bold, label=""];
39->40 [style = bold, label=""];
38->34 [style = bold, label=""];
73->72 [style = bold, label=""];
16->77 [style = dashed, label="0"];
77->55 [style = bold, label=""];
17->55 [style = dashed, label="0"];
31->39 [style = bold, label=""];
60->52 [style = bold, label=""];
64->58 [style = bold, label=""];
46->57 [style = bold, label=""];
56->59 [style = bold, label=""];
70->45 [style = bold, label=""];
14->5 [style = bold, label=""];
20->11 [style = bold, label=""];
7->47 [style = dashed, label="0"];
10->20 [style = bold, label=""];
25->23 [style = bold, label=""];
19->78 [style = dashed, label="0"];
23->26 [style = bold, label=""];
16->23 [style = dashed, label="0"];
14->75 [style = dashed, label="0"];
2->12 [style = bold, label=""];
2->31 [style = dashed, label="0"];
24->36 [style = bold, label=""];
0->74 [style = dashed, label="0"];
12->4 [style = bold, label=""];
11->7 [style = bold, label=""];
6->8 [style = bold, label=""];
40->41 [style = bold, label=""];
10->60 [style = dashed, label="0"];
3->13 [style = bold, label=""];
11->37 [style = dashed, label="0"];
17->26 [style = dashed, label="0"];
69->73 [style = bold, label=""];
15->27 [style = dashed, label="0"];
78->76 [style = bold, label=""];
74->54 [style = bold, label=""];
4->40 [style = dashed, label="0"];
26->33 [style = bold, label=""];
17->18 [style = bold, label=""];
34->27 [style = bold, label=""];
}
