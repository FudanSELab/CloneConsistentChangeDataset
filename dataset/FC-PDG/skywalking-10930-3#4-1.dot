digraph {
8 [style = filled, label = "Assert.assertEquals(DetectPoint.server,incoming.getDetectPoint())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"\",incoming.getSourceServiceName())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testIngress2SidecarMetric['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(\"review\",incoming.getDestServiceName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<ServiceMeshMetric.Builder> result = this.analysis.analysis(requestBuilder.getIdentifier(),requestBuilder.getHttpLogs().getLogEntry(0),Role.SIDECAR)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSidecar2SidecarServerMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(1,result.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ServiceMeshMetric.Builder incoming = result.get(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"productpage\",incoming.getSourceServiceName())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testIngress2SidecarMetric['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JsonFormat.parser().merge(isr,requestBuilder)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<ServiceMeshMetric.Builder> result = this.analysis.analysis(new ArrayList<>(),requestBuilder.getIdentifier(),requestBuilder.getHttpLogs().getLogEntry(0),Role.SIDECAR)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(\"productpage\",incoming.getDestServiceName())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
1->9 [style = bold, label=""];
5->11 [style = bold, label=""];
1->6 [style = bold, label=""];
7->1 [style = bold, label=""];
11->12 [style = bold, label=""];
0->11 [style = dashed, label="0"];
3->12 [style = dashed, label="0"];
5->0 [style = bold, label=""];
9->2 [style = bold, label=""];
10->7 [style = bold, label=""];
12->8 [style = bold, label=""];
3->8 [style = bold, label=""];
13->7 [style = bold, label=""];
4->7 [style = bold, label=""];
7->1 [style = solid, label="requestBuilder"];
2->5 [style = bold, label=""];
6->9 [style = dashed, label="0"];
6->2 [style = bold, label=""];
}
