digraph {
29 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testRestoreShard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(IndexShardTestCase.getEngine(target),instanceOf())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"foo\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final Settings sourceSettings = Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final Settings targetSettings = Settings.builder().put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),true).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EngineTestCase.generateNewSeqNo(source.getEngine())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(0L))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Store sourceStore = source.store()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final IndexShard source = newStartedShard(true,sourceSettings)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "source.refresh(\"test\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "closeShard(source,false)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "closeShard(source,false)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Store targetStore = target.store()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(IndexShard shard,SnapshotId snapshotId,Version version,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState){try {cleanLuceneIndex(targetStore.directory())for (String file : sourceStore.directory().listAll()){if (file.equals(\"write.lock\") || file.startsWith(\"extra\")) {continue}targetStore.directory().copyFrom(sourceStore.directory(),file,file,IOContext.DEFAULT)}}catch (Exception ex) }}))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertDocs(target,\"1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(2L))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "IndexShard target = newStartedShard(true,targetSettings,new FollowingEngineFactory())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "closeShards(target)@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "target = reinitShard(target,routing)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "closeShards(target)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "randomBoolean()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "target.markAsRecovering(\"store\",new RecoveryState(routing,localNode,null))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testRestoreShard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "testRestoreShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "IndexShard target = newStartedShard(true,Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),source.indexSettings().isSoftDeleteEnabled()).build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final IndexShard source = newStartedShard(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "EngineTestCase.generateNewSeqNo(IndexShardTestCase.getEngine(source))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "routing = ShardRoutingHelper.newWithRestoreSource(routing,new RecoverySource.SnapshotRecoverySource(UUIDs.randomBase64UUID(),snapshot,Version.CURRENT,\"test\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "source.refresh(\"test\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->41 [style = dashed, label="0"];
18->46 [style = solid, label="target"];
13->27 [style = solid, label="target"];
0->16 [style = solid, label="routing"];
36->33 [style = bold, label=""];
28->14 [style = bold, label=""];
25->18 [style = solid, label="routing"];
34->31 [style = solid, label="source"];
29->6 [style = bold, label=""];
19->9 [style = bold, label=""];
0->8 [style = bold, label=""];
34->32 [style = bold, label=""];
26->28 [style = bold, label=""];
21->13 [style = bold, label=""];
28->33 [style = dashed, label="0"];
27->0 [style = bold, label=""];
18->15 [style = solid, label="target"];
12->21 [style = bold, label=""];
24->0 [style = bold, label=""];
34->39 [style = solid, label="source"];
16->26 [style = bold, label=""];
23->3 [style = bold, label=""];
1->0 [style = bold, label=""];
27->24 [style = dotted, label="true"];
46->39 [style = bold, label=""];
44->38 [style = bold, label=""];
5->25 [style = bold, label=""];
33->29 [style = bold, label=""];
0->8 [style = solid, label="routing"];
31->27 [style = bold, label=""];
26->37 [style = bold, label=""];
45->46 [style = bold, label=""];
1->0 [style = solid, label="snapshot"];
24->7 [style = bold, label=""];
34->41 [style = solid, label="source"];
7->17 [style = bold, label=""];
8->9 [style = solid, label="target"];
8->25 [style = solid, label="routing"];
8->10 [style = solid, label="target"];
25->18 [style = bold, label=""];
37->35 [style = solid, label="localNode"];
8->15 [style = solid, label="target"];
34->11 [style = solid, label="source"];
21->20 [style = solid, label="source"];
21->17 [style = solid, label="source"];
15->19 [style = bold, label=""];
2->10 [style = bold, label=""];
4->0 [style = solid, label="routing"];
6->15 [style = bold, label=""];
21->23 [style = solid, label="source"];
11->41 [style = bold, label=""];
13->8 [style = solid, label="target"];
30->21 [style = bold, label=""];
42->11 [style = bold, label=""];
32->40 [style = bold, label=""];
38->34 [style = bold, label=""];
11->22 [style = bold, label=""];
27->24 [style = bold, label=""];
4->1 [style = bold, label=""];
14->2 [style = bold, label=""];
41->31 [style = bold, label=""];
18->16 [style = solid, label="localNode"];
37->35 [style = bold, label=""];
17->4 [style = bold, label=""];
32->40 [style = solid, label="targetSettings"];
20->11 [style = bold, label=""];
18->16 [style = bold, label=""];
18->43 [style = solid, label="target"];
34->0 [style = solid, label="source"];
15->45 [style = bold, label=""];
25->35 [style = solid, label="routing"];
40->42 [style = solid, label="target"];
13->7 [style = solid, label="target"];
39->43 [style = bold, label=""];
21->19 [style = solid, label="source"];
40->18 [style = solid, label="target"];
38->34 [style = solid, label="sourceSettings"];
5->25 [style = solid, label="snapshot"];
11->22 [style = dotted, label="true"];
3->20 [style = bold, label=""];
8->5 [style = bold, label=""];
22->27 [style = bold, label=""];
10->29 [style = bold, label=""];
13->23 [style = bold, label=""];
35->36 [style = bold, label=""];
40->42 [style = bold, label=""];
11->27 [style = bold, label=""];
}
