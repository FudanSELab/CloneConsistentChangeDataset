digraph {
9 [style = filled, label = "testParallelNullStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "nullCount += t.getLong(\"nullCount\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamExpression expression@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"nullCount desc\", null(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id), by=\"a_i asc\"))\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTIONORALIAS,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"null\",)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(tuples.size() == 1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tuples = getTuples(stream)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(tuples.get(0).getLong(\"nullCount\") == 6)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Tuple> tuples@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TupleStream stream@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTIONORALIAS,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"null\",).withFunctionName(\"parallel\",)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"nullCount desc\", null(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id, qt=\"/export\"), by=\"a_i asc\"))\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testParallelNullStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "{solrClientCache.close()}@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(tuples.size() == 2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "stream.setStreamContext(streamContext)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long nullCount = 0@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").add(id,\"5\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"2\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(nullCount,6L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "stream = factory.constructStream(\"null(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\"), by=\"a_i asc\")\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{solrClientCache.close()}@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testNullStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
11->20 [style = bold, label=""];
21->10 [style = bold, label=""];
1->4 [style = bold, label=""];
15->20 [style = dashed, label="0"];
2->19 [style = bold, label=""];
3->17 [style = dashed, label="0"];
4->13 [style = solid, label="streamContext"];
16->8 [style = bold, label=""];
2->6 [style = bold, label=""];
17->2 [style = solid, label="stream"];
3->22 [style = dashed, label="0"];
9->10 [style = bold, label=""];
15->3 [style = bold, label=""];
12->0 [style = bold, label=""];
11->15 [style = bold, label=""];
8->7 [style = bold, label=""];
22->2 [style = solid, label="stream"];
20->22 [style = bold, label=""];
6->14 [style = bold, label=""];
15->17 [style = bold, label=""];
23->24 [style = bold, label=""];
3->2 [style = solid, label="stream"];
14->23 [style = dashed, label="0"];
18->10 [style = bold, label=""];
10->12 [style = bold, label=""];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
6->19 [style = dashed, label="0"];
3->13 [style = bold, label=""];
5->11 [style = bold, label=""];
17->13 [style = bold, label=""];
5->11 [style = solid, label="solrClientCache"];
4->5 [style = bold, label=""];
22->13 [style = bold, label=""];
13->2 [style = bold, label=""];
}
