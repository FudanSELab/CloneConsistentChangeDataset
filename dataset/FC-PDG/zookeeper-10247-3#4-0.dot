digraph {
0 [style = filled, label = "db.committedLog.add(createProposal(6))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "db.txnLog.add(createProposal(9))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "db.committedLog.add(createProposal(8))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testTxnLog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long peerZxid@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(9,learnerHandler.getQueuedPackets().size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "db.txnLog.add(createProposal(5))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "db.lastProcessedZxid = 7@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(0,learnerHandler.getQueuedPackets().size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertOpType(Leader.DIFF,db.lastProcessedZxid,db.lastProcessedZxid)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertOpType(Leader.TRUNC,3,db.getmaxCommittedLog())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "reset()@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testTxnLogOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "db.txnLog.add(createProposal(6))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3e18fe)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "reset()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "db.txnLog.add(createProposal(2))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertOpType(Leader.DIFF,db.getmaxCommittedLog(),db.getmaxCommittedLog())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "peerZxid = 3@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "db.txnLog.add(createProposal(8))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "db.committedLog.add(createProposal(7))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3e192d)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertOpType(Leader.TRUNC,3,db.lastProcessedZxid)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "db.lastProcessedZxid = 9@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "reset()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,db,leader))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "peerZxid = 4@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "peerZxid = 2@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "db.txnLog.add(createProposal(3))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "db.txnLog.add(createProposal(7))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(9,learnerHandler.getQueuedPackets().size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testTxnLog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertEquals(7,learnerHandler.getQueuedPackets().size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "peerZxid = 1@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
6->31 [style = dashed, label="0"];
6->17 [style = solid, label="peerZxid"];
25->3 [style = bold, label=""];
26->2 [style = bold, label=""];
3->32 [style = dashed, label="0"];
19->1 [style = bold, label=""];
23->27 [style = solid, label="peerZxid"];
36->19 [style = bold, label=""];
11->27 [style = dashed, label="0"];
7->16 [style = bold, label=""];
15->23 [style = bold, label=""];
0->9 [style = bold, label=""];
8->23 [style = bold, label=""];
16->0 [style = bold, label=""];
9->15 [style = bold, label=""];
29->28 [style = bold, label=""];
37->33 [style = bold, label=""];
30->2 [style = bold, label=""];
1->18 [style = bold, label=""];
6->17 [style = bold, label=""];
4->8 [style = bold, label=""];
23->11 [style = bold, label=""];
31->17 [style = solid, label="peerZxid"];
17->3 [style = bold, label=""];
36->37 [style = solid, label="lastProcessedZxid"];
34->35 [style = solid, label="peerZxid"];
11->24 [style = bold, label=""];
24->10 [style = bold, label=""];
6->25 [style = solid, label="peerZxid"];
3->20 [style = bold, label=""];
12->31 [style = bold, label=""];
32->20 [style = bold, label=""];
23->11 [style = solid, label="peerZxid"];
10->22 [style = bold, label=""];
27->24 [style = bold, label=""];
2->19 [style = bold, label=""];
2->36 [style = bold, label=""];
20->13 [style = bold, label=""];
33->22 [style = bold, label=""];
17->32 [style = bold, label=""];
10->33 [style = dashed, label="0"];
31->17 [style = bold, label=""];
6->25 [style = bold, label=""];
36->32 [style = solid, label="lastProcessedZxid"];
21->34 [style = bold, label=""];
35->29 [style = bold, label=""];
8->7 [style = bold, label=""];
11->37 [style = bold, label=""];
34->35 [style = bold, label=""];
14->4 [style = bold, label=""];
22->12 [style = bold, label=""];
18->14 [style = bold, label=""];
24->37 [style = dashed, label="0"];
17->25 [style = dashed, label="0"];
12->6 [style = bold, label=""];
23->27 [style = bold, label=""];
13->21 [style = bold, label=""];
}
