digraph {
14 [style = filled, label = "assertThat(enumerator.snapshotState().getSplits(),empty())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(context.getSplitAssignments().get(2).getAssignedSplits(),contains(split))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator,context)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final TestingFileEnumerator fileEnumerator = new TestingFileEnumerator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(enumerator.snapshotState().getSplits(),contains(split))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final FileSourceSplit split = createRandomSplit()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testDiscoverSplitWhenNoReaderRegistered['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertThat(enumerator.snapshotState(1L).getSplits(),contains(split))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "context.registerReader(2,\"localhost\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "enumerator.handleSplitRequest(2,\"localhost\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fileEnumerator.addSplits(split)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.triggerAllActions()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "enumerator.addReader(2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testDiscoverSplitWhenNoReaderRegistered['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testDiscoverWhenReaderRegistered['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
3->1 [style = bold, label=""];
6->1 [style = solid, label="fileEnumerator"];
3->1 [style = solid, label="context"];
7->14 [style = dashed, label="0"];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
12->6 [style = bold, label=""];
0->9 [style = solid, label="split"];
1->11 [style = bold, label=""];
0->15 [style = solid, label="split"];
5->6 [style = bold, label=""];
10->13 [style = bold, label=""];
0->4 [style = solid, label="split"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
0->7 [style = solid, label="split"];
7->9 [style = dashed, label="0"];
2->14 [style = bold, label=""];
14->15 [style = bold, label=""];
2->7 [style = bold, label=""];
13->0 [style = bold, label=""];
}
