digraph {
2 [style = filled, label = "final ClusterState initialState = ClusterState.builder(ClusterState.EMPTY_STATE).metaData(metaDataBuilder).blocks(ClusterBlocks.builder().addGlobalBlock(STATE_NOT_RECOVERED_BLOCK).build()).build()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final IndexMetadata indexMetadata = createIndexMetadata(\"test\",Settings.EMPTY)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final Metadata.Builder metadataBuilder = Metadata.builder().persistentSettings(Settings.builder().put(\"test\",\"test\").build())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final IndexMetaData indexMetaData = createIndexMetaData(\"test\",Settings.EMPTY)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testAddStateNotRecoveredBlock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertMetadataEquals(initialState,newState)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final MetaData.Builder metaDataBuilder = MetaData.builder().persistentSettings(Settings.builder().put(\"test\",\"test\").build())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "metaDataBuilder.put(indexMetaData,false)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ClusterState newState = removeStateNotRecoveredBlock(initialState)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final ClusterState newState = addStateNotRecoveredBlock(initialState)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testRemoveStateNotRecoveredBlock['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "metadataBuilder.put(indexMetadata,false)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertFalse(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testRemoveStateNotRecoveredBlock['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final ClusterState initialState = ClusterState.builder(ClusterState.EMPTY_STATE).metadata(metadataBuilder).blocks(ClusterBlocks.builder().addGlobalBlock(STATE_NOT_RECOVERED_BLOCK).build()).build()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertFalse(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final ClusterState initialState = ClusterState.builder(ClusterState.EMPTY_STATE).metaData(metaDataBuilder).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertMetaDataEquals(initialState,newState)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->5 [style = bold, label=""];
2->19 [style = dashed, label="0"];
7->1 [style = bold, label=""];
10->14 [style = bold, label=""];
9->10 [style = solid, label="indexMetadata"];
11->6 [style = bold, label=""];
8->15 [style = dashed, label="0"];
0->11 [style = bold, label=""];
5->18 [style = bold, label=""];
1->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
12->9 [style = bold, label=""];
19->17 [style = solid, label="initialState"];
0->17 [style = dashed, label="0"];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
8->0 [style = bold, label=""];
17->5 [style = solid, label="newState"];
15->17 [style = bold, label=""];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
2->14 [style = dashed, label="0"];
2->5 [style = solid, label="initialState"];
5->11 [style = dashed, label="0"];
7->9 [style = dashed, label="0"];
0->11 [style = solid, label="newState"];
14->0 [style = solid, label="initialState"];
14->11 [style = solid, label="initialState"];
7->1 [style = solid, label="indexMetaData"];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
2->0 [style = solid, label="initialState"];
19->15 [style = bold, label=""];
1->19 [style = bold, label=""];
16->4 [style = bold, label=""];
0->5 [style = solid, label="newState"];
19->5 [style = solid, label="initialState"];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
}
