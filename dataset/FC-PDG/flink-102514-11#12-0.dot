digraph {
3 [style = filled, label = "InterceptingTaskMetricGroup taskMetricGroup = new InterceptingTaskMetricGroup(){@Override public InternalOperatorMetricGroup getOrAddOperator(OperatorID id,String name){if (id.equals(mainOperatorId)) {return mainOperatorMetricGroup}if (id.equals(chainedOperatorId)) {return chainedOperatorMetricGroup}{return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bc7ab3idname}}}@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Long.MIN_VALUE,chainedOutputWatermarkGauge.getValue().longValue())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "addSourceRecords(testHarness,1,2)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Long.MIN_VALUE,chainedOutputWatermarkGauge.getValue().longValue())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Long.MIN_VALUE,chainedInputWatermarkGauge.getValue().longValue())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "int inputChannels@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Gauge<Long> taskInputWatermarkGauge = (Gauge<Long>)taskMetricGroup.get(MetricNames.IO_CURRENT_INPUT_WATERMARK)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2L,mainOutputWatermarkGauge.getValue().longValue())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInputWatermarkGauge.getValue().longValue())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Long.MIN_VALUE,chainedInputWatermarkGauge.getValue().longValue())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "InterceptingOperatorMetricGroup chainedOperatorMetricGroup = new InterceptingOperatorMetricGroup()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.processElement(new Watermark(1L),0)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Gauge<Long> mainInput3WatermarkGauge = (Gauge<Long>)mainOperatorMetricGroup.get(MetricNames.currentInputWatermarkName(3))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainOutputWatermarkGauge.getValue().longValue())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Gauge<Long> chainedInputWatermarkGauge = (Gauge<Long>)chainedOperatorMetricGroup.get(MetricNames.IO_CURRENT_INPUT_WATERMARK)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Gauge<Long> mainInputWatermarkGauge = (Gauge<Long>)mainOperatorMetricGroup.get(MetricNames.IO_CURRENT_INPUT_WATERMARK)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Gauge<Long> mainInput1WatermarkGauge = (Gauge<Long>)mainOperatorMetricGroup.get(MetricNames.currentInputWatermarkName(1))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "return new StreamTaskMailboxTestHarnessBuilder<>(null,BasicTypeInfo.STRING_TYPE_INFO).modifyExecutionConfig(applyObjectReuse(objectReuse)).addInput(BasicTypeInfo.STRING_TYPE_INFO,inputChannels).addSourceInput(new SourceOperatorFactory<>(new MockSource(Boundedness.CONTINUOUS_UNBOUNDED,2,true,readerMarkIdleOnNoSplits),WatermarkStrategy.forGenerator(null)),BasicTypeInfo.INT_TYPE_INFO).addInput(BasicTypeInfo.DOUBLE_TYPE_INFO,inputChannels).setupOutputForSingletonOperatorChain(new MapToStringMultipleInputOperatorFactory(3)).build()@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1L,mainInput1WatermarkGauge.getValue().longValue())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testHarness.processElement(new Watermark(2L),1)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainOutputWatermarkGauge.getValue().longValue())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(4L,mainInput1WatermarkGauge.getValue().longValue())@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInput2WatermarkGauge.getValue().longValue())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Gauge<Long> mainInput2WatermarkGauge = (Gauge<Long>)mainOperatorMetricGroup.get(MetricNames.currentInputWatermarkName(2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(2L,chainedInputWatermarkGauge.getValue().longValue())@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInputWatermarkGauge.getValue().longValue())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "OperatorID mainOperatorId = new OperatorID()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testHarness.processAll()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "InterceptingOperatorMetricGroup mainOperatorMetricGroup = new InterceptingOperatorMetricGroup()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testHarness.processAll()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(1L,mainInput1WatermarkGauge.getValue().longValue())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(4L,chainedOutputWatermarkGauge.getValue().longValue())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(Long.MIN_VALUE,taskInputWatermarkGauge.getValue().longValue())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1L,taskInputWatermarkGauge.getValue().longValue())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Long.MIN_VALUE,chainedInputWatermarkGauge.getValue().longValue())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Long.MIN_VALUE,chainedOutputWatermarkGauge.getValue().longValue())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "buildWatermarkTestHarness['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1L,mainOutputWatermarkGauge.getValue().longValue())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testHarness.processElement(new Watermark(4L),0)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "boolean readerMarkIdleOnNoSplits@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testWatermarkMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInputWatermarkGauge.getValue().longValue())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1L,mainInputWatermarkGauge.getValue().longValue())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(2L,taskInputWatermarkGauge.getValue().longValue())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Long.MIN_VALUE,taskInputWatermarkGauge.getValue().longValue())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1L,chainedInputWatermarkGauge.getValue().longValue())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(2L,mainInputWatermarkGauge.getValue().longValue())@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "addSourceRecords(testHarness,1,3)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testHarness.endInput()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testHarness.finishProcessing()@@@80@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Long.MIN_VALUE,taskInputWatermarkGauge.getValue().longValue())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(2L,chainedOutputWatermarkGauge.getValue().longValue())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testWatermarkMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInput3WatermarkGauge.getValue().longValue())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(2L,mainInput3WatermarkGauge.getValue().longValue())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1L,mainInput1WatermarkGauge.getValue().longValue())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInput3WatermarkGauge.getValue().longValue())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInput1WatermarkGauge.getValue().longValue())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInput3WatermarkGauge.getValue().longValue())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Gauge<Long> chainedOutputWatermarkGauge = (Gauge<Long>)chainedOperatorMetricGroup.get(MetricNames.IO_CURRENT_OUTPUT_WATERMARK)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(2L,mainInput3WatermarkGauge.getValue().longValue())@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainOutputWatermarkGauge.getValue().longValue())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(2L,mainInput2WatermarkGauge.getValue().longValue())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Gauge<Long> mainOutputWatermarkGauge = (Gauge<Long>)mainOperatorMetricGroup.get(MetricNames.IO_CURRENT_OUTPUT_WATERMARK)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "finishAddingRecords(testHarness,1)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testHarness.waitForTaskCompletion()@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(3L,mainInput2WatermarkGauge.getValue().longValue())@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Long.MIN_VALUE,mainInput2WatermarkGauge.getValue().longValue())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(2L,mainInput2WatermarkGauge.getValue().longValue())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "OperatorID chainedOperatorId = new OperatorID()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->26 [style = bold, label=""];
56->12 [style = bold, label=""];
45->1 [style = bold, label=""];
50->43 [style = bold, label=""];
59->29 [style = bold, label=""];
1->31 [style = bold, label=""];
19->6 [style = bold, label=""];
60->11 [style = bold, label=""];
39->52 [style = bold, label=""];
52->61 [style = bold, label=""];
46->58 [style = bold, label=""];
63->50 [style = bold, label=""];
65->33 [style = bold, label=""];
67->69 [style = bold, label=""];
21->33 [style = bold, label=""];
10->39 [style = bold, label=""];
28->38 [style = bold, label=""];
13->17 [style = bold, label=""];
34->24 [style = bold, label=""];
29->35 [style = bold, label=""];
4->5 [style = bold, label=""];
24->4 [style = bold, label=""];
25->34 [style = bold, label=""];
20->15 [style = bold, label=""];
18->13 [style = bold, label=""];
62->53 [style = bold, label=""];
48->14 [style = bold, label=""];
58->63 [style = bold, label=""];
51->64 [style = bold, label=""];
53->42 [style = bold, label=""];
54->59 [style = bold, label=""];
8->62 [style = bold, label=""];
12->47 [style = bold, label=""];
23->60 [style = bold, label=""];
22->46 [style = bold, label=""];
17->20 [style = bold, label=""];
45->3 [style = solid, label="chainedOperatorId"];
26->9 [style = bold, label=""];
27->49 [style = bold, label=""];
55->0 [style = bold, label=""];
1->3 [style = solid, label="mainOperatorMetricGroup"];
14->44 [style = bold, label=""];
67->66 [style = dotted, label="true"];
16->2 [style = bold, label=""];
64->28 [style = bold, label=""];
40->48 [style = bold, label=""];
49->57 [style = bold, label=""];
44->27 [style = bold, label=""];
33->3 [style = solid, label="mainOperatorId"];
3->8 [style = bold, label=""];
41->22 [style = bold, label=""];
47->54 [style = bold, label=""];
43->36 [style = bold, label=""];
67->68 [style = dotted, label="true"];
30->40 [style = bold, label=""];
31->3 [style = solid, label="chainedOperatorMetricGroup"];
11->37 [style = bold, label=""];
57->32 [style = bold, label=""];
5->55 [style = bold, label=""];
42->56 [style = bold, label=""];
9->25 [style = bold, label=""];
61->7 [style = bold, label=""];
35->19 [style = bold, label=""];
6->23 [style = bold, label=""];
32->41 [style = bold, label=""];
15->10 [style = bold, label=""];
37->16 [style = bold, label=""];
0->18 [style = bold, label=""];
31->3 [style = bold, label=""];
33->45 [style = bold, label=""];
7->30 [style = bold, label=""];
2->51 [style = bold, label=""];
}
