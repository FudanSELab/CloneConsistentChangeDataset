digraph {
23 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Iterator<Record> iterator = records.records()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "buildUsingCreateTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(logAppendTime,info.maxTimestamp)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buffer.position(bufferOffset)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int i = 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "iterator.hasNext()@@@20@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MemoryRecordsBuilder.RecordsInfo info = builder.info()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.LOG_APPEND_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MemoryRecords records = builder.build()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "long(( expectedTimestamps = new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c95cc9@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(TimestampType.CREATE_TIME,record.timestampType())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "builder.append(1L,2L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "buildUsingLogAppendTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "builder.append(2L,1L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "buildUsingLogAppendTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.CREATE_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "compressionType == CompressionType.NONE@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.append(0L,0L,\"a\".getBytes(),\"1\".getBytes())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.append(2L,0L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,record.timestampType())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Record record = iterator.next()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.append(1L,0L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Iterator<Record> iterator = records.records()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
3->16 [style = solid, label="buffer"];
5->4 [style = solid, label="logAppendTime"];
12->28 [style = bold, label=""];
26->3 [style = bold, label=""];
28->31 [style = bold, label=""];
11->6 [style = bold, label=""];
27->9 [style = bold, label=""];
25->9 [style = bold, label=""];
29->25 [style = solid, label="i"];
6->1 [style = dotted, label="true"];
18->17 [style = bold, label=""];
8->28 [style = dashed, label="0"];
20->23 [style = dotted, label="false"];
15->3 [style = bold, label=""];
4->21 [style = dashed, label="0"];
2->4 [style = bold, label=""];
5->11 [style = solid, label="logAppendTime"];
0->22 [style = dashed, label="0"];
6->29 [style = bold, label=""];
1->11 [style = bold, label=""];
4->0 [style = bold, label=""];
20->22 [style = bold, label=""];
9->25 [style = dotted, label="true"];
5->16 [style = bold, label=""];
3->30 [style = solid, label="buffer"];
29->27 [style = bold, label=""];
7->5 [style = bold, label=""];
0->14 [style = bold, label=""];
30->12 [style = bold, label=""];
9->24 [style = dotted, label="true"];
21->20 [style = bold, label=""];
20->23 [style = bold, label=""];
13->31 [style = dashed, label="0"];
16->30 [style = dashed, label="0"];
3->7 [style = bold, label=""];
27->25 [style = solid, label="expectedTimestamps"];
6->9 [style = dotted, label="true"];
31->10 [style = bold, label=""];
12->8 [style = bold, label=""];
2->21 [style = bold, label=""];
1->24 [style = bold, label=""];
23->6 [style = bold, label=""];
24->25 [style = bold, label=""];
1->24 [style = dashed, label="0"];
9->1 [style = dotted, label="true"];
11->25 [style = dashed, label="0"];
5->30 [style = solid, label="logAppendTime"];
10->14 [style = solid, label="records"];
5->17 [style = solid, label="logAppendTime"];
0->18 [style = bold, label=""];
5->16 [style = solid, label="logAppendTime"];
10->2 [style = bold, label=""];
20->22 [style = dotted, label="true"];
5->30 [style = bold, label=""];
10->6 [style = solid, label="records"];
6->11 [style = dotted, label="true"];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
16->12 [style = bold, label=""];
19->3 [style = bold, label=""];
14->6 [style = bold, label=""];
17->18 [style = bold, label=""];
8->13 [style = bold, label=""];
22->6 [style = bold, label=""];
}
