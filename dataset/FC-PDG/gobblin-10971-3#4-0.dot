digraph {
10 [style = filled, label = "testSimpleCalls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Mockito.when(fs.listStatus(Mockito.any())).thenAnswer(new Answer<FileStatus((>(){@Override public FileStatus(( answer(InvocationOnMock invocation){Path path = (Path)invocation.getArguments()(0(int files = Integer.parseInt(path.getName())FileStatus status = new FileStatus(0,false,0,0,0,new Path(\"/\"))FileStatus(( out = new FileStatus((((for (int i = 0 i < files i++){out(i( = status}return out}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.fail()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testSimpleCalls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "NotEnoughPermitsException expected@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/250\")))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Mockito.when(fs.getFileStatus(Mockito.any())).thenReturn(new FileStatus(0,false,0,0,0,new Path(\"/\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs,limiter)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\")))@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throttledFileSystem.listStatus(new Path(\"/files/150\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.fail()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FileSystem fs = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throttledFileSystem.getFileStatus(new Path(\"/myFile\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{}@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Limiter limiter = new CountBasedLimiter(5)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\")))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testListing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs,limiter,\"testService\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Limiter limiter = new CountBasedLimiter(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs,limiter)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->18 [style = dashed, label="0"];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
2->14 [style = solid, label="fs"];
2->20 [style = bold, label=""];
5->8 [style = solid, label="limiter"];
5->9 [style = bold, label=""];
4->6 [style = bold, label=""];
9->4 [style = bold, label=""];
2->8 [style = solid, label="fs"];
18->12 [style = bold, label=""];
19->11 [style = bold, label=""];
12->16 [style = bold, label=""];
0->20 [style = dashed, label="0"];
1->7 [style = bold, label=""];
5->9 [style = solid, label="limiter"];
6->12 [style = dashed, label="0"];
20->21 [style = bold, label=""];
8->9 [style = dashed, label="0"];
6->1 [style = bold, label=""];
13->19 [style = bold, label=""];
2->0 [style = bold, label=""];
15->11 [style = bold, label=""];
3->2 [style = bold, label=""];
17->2 [style = bold, label=""];
21->14 [style = solid, label="limiter"];
1->16 [style = dashed, label="0"];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
8->4 [style = bold, label=""];
0->5 [style = bold, label=""];
21->14 [style = bold, label=""];
2->9 [style = solid, label="fs"];
}
