digraph {
19 [style = filled, label = "result.setReferencedTable((SimpleTableSegment)visit(ctx.referenceDefinition()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "result.getPrimaryKeyColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>)visit(ctx.tableConstraintOption().columnNames(0))).getValue())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "null != ctx.indexNameAndType()@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "visitTableConstraint['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "null != ctx.KEY() && null != ctx.PRIMARY()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "null != ctx.indexName()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "visitTableConstraintDef['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "null != ctx.tableConstraintOption().primaryKey()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final TableConstraintContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexName()))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final TableConstraintDefContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "null != ctx.tableConstraintOption().FOREIGN()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result.getIndexColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexNameAndType().indexName()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "null != ctx.UNIQUE()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "null != ctx.indexNameAndType()@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(),ctx.getStop().getStopIndex())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexNameAndType().indexName()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "null != ctx.constraintClause()@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "return result@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "null != ctx.FOREIGN()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return result@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "result.setConstraintName((ConstraintSegment)visit(ctx.constraintClause().constraintName()))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "result.getIndexColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return result@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return result@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "null != ctx.checkConstraint()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return result@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "visitTableConstraint['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "return result@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "result.setReferencedTable((SimpleTableSegment)visit(ctx.tableConstraintOption().tableName()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->25 [style = dotted, label="true"];
29->21 [style = bold, label=""];
5->22 [style = dashed, label="0"];
26->24 [style = bold, label=""];
0->1 [style = dotted, label="true"];
7->4 [style = dotted, label="true"];
31->11 [style = bold, label=""];
23->19 [style = bold, label=""];
10->6 [style = bold, label=""];
18->2 [style = bold, label=""];
17->16 [style = dotted, label="true"];
19->28 [style = bold, label=""];
14->21 [style = bold, label=""];
13->23 [style = bold, label=""];
23->19 [style = dotted, label="true"];
6->0 [style = bold, label=""];
28->26 [style = bold, label=""];
24->17 [style = bold, label=""];
9->2 [style = bold, label=""];
10->8 [style = bold, label=""];
12->13 [style = dotted, label="true"];
2->10 [style = bold, label=""];
0->3 [style = bold, label=""];
8->6 [style = bold, label=""];
11->15 [style = bold, label=""];
12->23 [style = bold, label=""];
17->20 [style = bold, label=""];
26->14 [style = bold, label=""];
0->1 [style = bold, label=""];
2->29 [style = solid, label="result"];
4->30 [style = dashed, label="0"];
23->26 [style = bold, label=""];
12->22 [style = bold, label=""];
25->11 [style = bold, label=""];
2->20 [style = solid, label="result"];
11->27 [style = bold, label=""];
2->27 [style = solid, label="result"];
14->29 [style = bold, label=""];
15->27 [style = bold, label=""];
6->5 [style = dotted, label="true"];
6->12 [style = dashed, label="0"];
12->22 [style = dotted, label="true"];
5->0 [style = bold, label=""];
1->3 [style = bold, label=""];
0->23 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
26->24 [style = dotted, label="true"];
10->8 [style = dotted, label="true"];
9->4 [style = dotted, label="true"];
18->30 [style = dotted, label="true"];
14->29 [style = dotted, label="true"];
6->5 [style = bold, label=""];
2->13 [style = solid, label="result"];
2->28 [style = solid, label="result"];
11->15 [style = dotted, label="true"];
2->3 [style = solid, label="result"];
2->6 [style = bold, label=""];
16->20 [style = bold, label=""];
23->28 [style = dotted, label="true"];
26->20 [style = dotted, label="true"];
20->14 [style = bold, label=""];
17->16 [style = bold, label=""];
21->31 [style = bold, label=""];
26->17 [style = dotted, label="true"];
31->25 [style = bold, label=""];
22->13 [style = bold, label=""];
2->12 [style = bold, label=""];
7->2 [style = bold, label=""];
}
