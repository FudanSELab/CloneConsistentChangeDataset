digraph {
2 [style = filled, label = "DataStream<File> src = env.fromElements(new File(\"/\"))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "env.registerTypeWithKryoSerializer(,)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SingleOutputStreamOperator<?> result = src.windowAll(TumblingEventTimeWindows.of(Time.milliseconds(1000))).process(new ProcessAllWindowFunction<File,String,TimeWindow>(){@Override public void process(Context ctx,Iterable<File> input,Collector<String> out){}})@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testProcessAllWindowState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "SingleOutputStreamOperator<?> result = src.timeWindowAll(Time.milliseconds(1000)).apply(new AllWindowFunction<File,String,TimeWindow>(){@Override public void apply(TimeWindow window,Iterable<File> input,Collector<String> out){}})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testApplyWindowAllState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testProcessAllWindowState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "validateListStateDescriptorConfigured(result)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DataStream<File> src = env.fromElements(new File(\"/\")).assignTimestampsAndWatermarks(WatermarkStrategy.forMonotonousTimestamps().withTimestampAssigner(null))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "SingleOutputStreamOperator<?> result = src.timeWindowAll(Time.milliseconds(1000)).process(new ProcessAllWindowFunction<File,String,TimeWindow>(){@Override public void process(Context ctx,Iterable<File> input,Collector<String> out){}})@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
6->4 [style = bold, label=""];
10->3 [style = bold, label=""];
11->4 [style = bold, label=""];
4->1 [style = bold, label=""];
0->9 [style = bold, label=""];
0->2 [style = bold, label=""];
5->3 [style = solid, label="result"];
1->0 [style = bold, label=""];
8->4 [style = bold, label=""];
7->3 [style = solid, label="result"];
10->3 [style = solid, label="result"];
5->7 [style = dashed, label="0"];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
2->9 [style = dashed, label="0"];
5->10 [style = dashed, label="0"];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
2->5 [style = bold, label=""];
}
