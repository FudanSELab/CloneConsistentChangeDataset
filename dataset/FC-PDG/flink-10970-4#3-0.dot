digraph {
2 [style = filled, label = "FileWriterBucket<String> bucket = createBucket(recoverableWriter,path,DEFAULT_ROLLING_POLICY,OutputFileConfig.builder().build())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "bucket.write(\"test-element\",0)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testFlush['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(BUCKET_ID,bucketState.getBucketId())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<FileSinkCommittable> fileSinkCommittables = bucket.prepareCommit(false)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "compareNumberOfPendingAndInProgress(fileSinkCommittables,2,0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "FileWriterBucketState bucketState = bucket.snapshotState()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "compareNumberOfPendingAndInProgress(fileSinkCommittables,1,0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "FileWriterBucket<String> bucket = createBucket(recoverableWriter,path,EACH_ELEMENT_ROLLING_POLICY,OutputFileConfig.builder().build())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "bucket.write(\"test-element\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<FileSinkCommittable> fileSinkCommittables = bucket.prepareCommit(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestRecoverableWriter recoverableWriter = getRecoverableWriter(path)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testOnCheckpointMultiplePendingFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(path,bucketState.getBucketPath())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testFlush['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(\"The bucket should not have in-progress part after flushed\",bucket.getInProgressPart())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "File outDir = TEMP_FOLDER.newFolder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "bucket.write(\"test-element\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "bucket.write(\"test-element\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Path path = new Path(outDir.toURI())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(\"The bucket should not have in-progress recoverable\",bucketState.getInProgressFileRecoverable())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->1 [style = solid, label="path"];
5->13 [style = solid, label="path"];
2->4 [style = bold, label=""];
13->4 [style = bold, label=""];
14->16 [style = bold, label=""];
4->9 [style = dashed, label="0"];
20->18 [style = bold, label=""];
5->1 [style = bold, label=""];
15->19 [style = bold, label=""];
17->14 [style = bold, label=""];
0->3 [style = bold, label=""];
9->0 [style = bold, label=""];
5->14 [style = solid, label="path"];
11->7 [style = bold, label=""];
2->9 [style = bold, label=""];
10->7 [style = bold, label=""];
1->2 [style = solid, label="recoverableWriter"];
19->17 [style = bold, label=""];
3->8 [style = bold, label=""];
12->20 [style = bold, label=""];
4->12 [style = bold, label=""];
7->5 [style = bold, label=""];
18->19 [style = solid, label="fileSinkCommittables"];
6->7 [style = bold, label=""];
5->2 [style = solid, label="path"];
1->13 [style = solid, label="recoverableWriter"];
1->2 [style = bold, label=""];
0->3 [style = solid, label="fileSinkCommittables"];
4->0 [style = bold, label=""];
2->13 [style = dashed, label="0"];
1->13 [style = bold, label=""];
18->15 [style = bold, label=""];
}
