digraph {
4 [style = filled, label = "int i = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "onErrorOnCompleteRace['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ts.assertFailure()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final TestObserverEx<Integer> to = new TestObserverEx<Integer>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestHelper.race(r1,r2)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ts.assertResult()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final AtomicInteger wip = new AtomicInteger()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final AtomicThrowable error = new AtomicThrowable()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "to.completions() != 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "onErrorOnCompleteRace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ts.completions() != 0@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "to.assertResult()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "to.assertFailure()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "onErrorOnCompleteRace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Runnable r1 = new Runnable(){@Override public void run(){HalfSerializer.onError(ts,ex,wip,error)}}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "to.onSubscribe(Disposables.empty())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "i < TestHelper.RACE_DEFAULT_LOOPS@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final TestException ex = new TestException()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Runnable r2 = new Runnable(){@Override public void run(){HalfSerializer.onComplete(ts,wip,error)}}@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ts.onSubscribe(new BooleanSubscription())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->11 [style = solid, label="wip"];
4->12 [style = solid, label="i"];
13->10 [style = bold, label=""];
14->3 [style = bold, label=""];
10->20 [style = bold, label=""];
9->11 [style = bold, label=""];
5->9 [style = bold, label=""];
21->6 [style = bold, label=""];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
12->8 [style = dotted, label="true"];
1->11 [style = solid, label="error"];
7->13 [style = solid, label="to"];
20->21 [style = dotted, label="false"];
22->11 [style = solid, label="ts"];
12->15 [style = dotted, label="true"];
12->1 [style = dotted, label="true"];
14->20 [style = dashed, label="0"];
3->6 [style = bold, label=""];
11->10 [style = solid, label="r1"];
12->18 [style = dotted, label="true"];
22->13 [style = solid, label="ts"];
5->18 [style = dashed, label="0"];
19->6 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
7->11 [style = solid, label="to"];
9->11 [style = solid, label="ex"];
3->19 [style = dashed, label="0"];
4->6 [style = solid, label="i"];
1->22 [style = bold, label=""];
20->21 [style = bold, label=""];
12->11 [style = dotted, label="true"];
8->1 [style = bold, label=""];
12->14 [style = dotted, label="true"];
7->5 [style = bold, label=""];
22->18 [style = bold, label=""];
12->13 [style = dotted, label="true"];
14->0 [style = dotted, label="false"];
12->22 [style = dotted, label="true"];
12->20 [style = dotted, label="true"];
8->13 [style = solid, label="wip"];
14->0 [style = bold, label=""];
12->10 [style = dotted, label="true"];
12->6 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
15->9 [style = bold, label=""];
13->10 [style = solid, label="r2"];
12->8 [style = bold, label=""];
0->21 [style = dashed, label="0"];
11->13 [style = bold, label=""];
18->9 [style = bold, label=""];
14->3 [style = dotted, label="true"];
4->12 [style = bold, label=""];
7->15 [style = bold, label=""];
20->19 [style = dotted, label="true"];
6->12 [style = solid, label="i"];
16->4 [style = bold, label=""];
20->19 [style = bold, label=""];
12->7 [style = dotted, label="true"];
5->15 [style = dashed, label="0"];
1->13 [style = solid, label="error"];
7->22 [style = dashed, label="0"];
17->4 [style = bold, label=""];
12->9 [style = dotted, label="true"];
6->12 [style = bold, label=""];
}
