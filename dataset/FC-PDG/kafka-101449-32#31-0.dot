digraph {
52 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getter.init(driver.context())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "driver.flushState()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i < 2@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stream1 = builder.stream(intSerde,stringSerde,topic1)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i < 2@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "driver.flushState()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "stream2 = builder.stream(intSerde,stringSerde,topic2)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "int i = 0@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "joined.process(processor)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "KTable<Integer,String> table1 = builder.table(intSerde,stringSerde,topic1,storeName1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "i < 2@@@58@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "i++@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "i++@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "driver.setTime(0L)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testOuterJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "driver.setUp(builder,stateDir)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@be42e9@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i < 2@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "driver.flushState()@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i++@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "KTable<Integer,String> table2 = builder.table(intSerde,stringSerde,topic2,storeName2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "driver.flushState()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "int i = 0@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "driver.flushState()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i < 2@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "i++@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testOuterJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "driver.flushState()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "driver.flushState()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47->76 [style = solid, label="i"];
72->0 [style = bold, label=""];
6->70 [style = bold, label=""];
76->51 [style = bold, label=""];
5->9 [style = bold, label=""];
50->22 [style = bold, label=""];
18->64 [style = bold, label=""];
18->10 [style = solid, label="i"];
68->50 [style = bold, label=""];
27->28 [style = bold, label=""];
10->34 [style = dotted, label="true"];
43->42 [style = bold, label=""];
39->24 [style = bold, label=""];
30->6 [style = bold, label=""];
40->38 [style = bold, label=""];
69->67 [style = solid, label="getter"];
37->25 [style = solid, label="i"];
1->64 [style = dotted, label="true"];
52->28 [style = bold, label=""];
71->76 [style = solid, label="i"];
50->31 [style = solid, label="builder"];
47->76 [style = bold, label=""];
36->0 [style = bold, label=""];
31->35 [style = bold, label=""];
10->8 [style = bold, label=""];
64->18 [style = solid, label="i"];
10->12 [style = bold, label=""];
75->47 [style = bold, label=""];
37->74 [style = solid, label="i"];
42->1 [style = bold, label=""];
17->5 [style = dotted, label="true"];
69->65 [style = solid, label="getter"];
64->1 [style = bold, label=""];
46->59 [style = bold, label=""];
76->75 [style = bold, label=""];
42->1 [style = solid, label="i"];
6->70 [style = solid, label="processor"];
2->16 [style = bold, label=""];
57->54 [style = bold, label=""];
17->5 [style = bold, label=""];
28->17 [style = solid, label="i"];
74->41 [style = bold, label=""];
33->44 [style = dashed, label="0"];
64->1 [style = solid, label="i"];
66->67 [style = bold, label=""];
41->21 [style = bold, label=""];
50->46 [style = solid, label="builder"];
76->47 [style = dotted, label="true"];
4->19 [style = bold, label=""];
23->21 [style = dotted, label="true"];
47->75 [style = solid, label="i"];
11->37 [style = bold, label=""];
9->17 [style = bold, label=""];
45->44 [style = solid, label="table2"];
49->62 [style = bold, label=""];
76->75 [style = dotted, label="true"];
26->4 [style = bold, label=""];
67->61 [style = bold, label=""];
25->14 [style = solid, label="i"];
6->2 [style = bold, label=""];
23->14 [style = bold, label=""];
1->18 [style = dotted, label="true"];
42->18 [style = solid, label="i"];
23->14 [style = dotted, label="true"];
69->28 [style = solid, label="getter"];
71->75 [style = solid, label="i"];
69->54 [style = solid, label="getter"];
24->0 [style = solid, label="builder"];
29->32 [style = bold, label=""];
56->13 [style = bold, label=""];
22->18 [style = solid, label="expectedKeys"];
24->50 [style = dashed, label="0"];
33->30 [style = bold, label=""];
69->62 [style = solid, label="getter"];
3->58 [style = bold, label=""];
16->20 [style = bold, label=""];
26->48 [style = bold, label=""];
25->23 [style = solid, label="i"];
14->21 [style = bold, label=""];
0->31 [style = bold, label=""];
21->23 [style = bold, label=""];
44->30 [style = bold, label=""];
25->21 [style = solid, label="i"];
38->20 [style = bold, label=""];
9->5 [style = solid, label="i"];
73->49 [style = bold, label=""];
22->5 [style = solid, label="expectedKeys"];
37->41 [style = bold, label=""];
37->25 [style = bold, label=""];
41->25 [style = dotted, label="true"];
22->29 [style = bold, label=""];
3->26 [style = bold, label=""];
59->72 [style = bold, label=""];
34->12 [style = solid, label="i"];
70->46 [style = bold, label=""];
69->11 [style = bold, label=""];
22->75 [style = solid, label="expectedKeys"];
45->44 [style = bold, label=""];
32->33 [style = bold, label=""];
71->76 [style = bold, label=""];
54->8 [style = bold, label=""];
32->45 [style = dashed, label="0"];
69->48 [style = solid, label="getter"];
1->34 [style = bold, label=""];
63->60 [style = bold, label=""];
18->10 [style = bold, label=""];
71->47 [style = solid, label="i"];
21->14 [style = solid, label="i"];
16->20 [style = solid, label="stream2"];
28->17 [style = bold, label=""];
55->43 [style = bold, label=""];
42->64 [style = solid, label="i"];
38->20 [style = solid, label="stream2"];
58->26 [style = bold, label=""];
60->52 [style = bold, label=""];
74->41 [style = solid, label="i"];
29->53 [style = dashed, label="0"];
20->36 [style = bold, label=""];
8->13 [style = bold, label=""];
21->14 [style = bold, label=""];
13->65 [style = bold, label=""];
18->12 [style = solid, label="i"];
8->56 [style = bold, label=""];
16->38 [style = dashed, label="0"];
65->3 [style = bold, label=""];
10->12 [style = dotted, label="true"];
24->11 [style = solid, label="builder"];
37->41 [style = solid, label="i"];
25->23 [style = bold, label=""];
74->25 [style = solid, label="i"];
12->57 [style = bold, label=""];
9->17 [style = solid, label="i"];
6->36 [style = solid, label="processor"];
19->63 [style = dashed, label="0"];
1->18 [style = bold, label=""];
12->34 [style = bold, label=""];
34->12 [style = bold, label=""];
24->22 [style = bold, label=""];
34->10 [style = bold, label=""];
28->9 [style = solid, label="i"];
22->25 [style = solid, label="expectedKeys"];
25->74 [style = bold, label=""];
18->34 [style = solid, label="i"];
5->75 [style = dashed, label="0"];
17->7 [style = bold, label=""];
22->14 [style = solid, label="expectedKeys"];
22->53 [style = bold, label=""];
22->12 [style = solid, label="expectedKeys"];
34->10 [style = solid, label="i"];
13->3 [style = bold, label=""];
69->43 [style = solid, label="getter"];
6->40 [style = bold, label=""];
19->27 [style = bold, label=""];
15->24 [style = bold, label=""];
28->71 [style = bold, label=""];
17->9 [style = dotted, label="true"];
61->73 [style = bold, label=""];
23->1 [style = bold, label=""];
48->63 [style = bold, label=""];
35->69 [style = bold, label=""];
14->55 [style = bold, label=""];
41->25 [style = bold, label=""];
2->40 [style = dashed, label="0"];
41->74 [style = dotted, label="true"];
21->23 [style = solid, label="i"];
53->45 [style = bold, label=""];
51->66 [style = bold, label=""];
35->11 [style = bold, label=""];
28->5 [style = solid, label="i"];
}
