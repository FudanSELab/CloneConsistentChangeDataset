digraph {
19 [style = filled, label = "assertRouteForDropIndexStatementDoNotFoundTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertRouteUnitWithoutTables(routeContext)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_1\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(schema,sqlStatementContext)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(mock(),createSQLStatementContext(Lists.newArrayList(\"t_order\")))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertRouteForNormalTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "when(((TableAvailable)sqlStatementContext).getAllTables()).thenReturn(Collections.emptyList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_0\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ShardingSphereSchema schema = mock(,RETURNS_DEEP_STUBS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertRouteForNormalTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DropIndexStatement dropIndexStatement = mock(,RETURNS_DEEP_STUBS)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(Collections.emptyList())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(routeContext.getRouteUnits().size(),is(4))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(mock(),createSQLStatementContext(Collections.singletonList(\"t_order\")))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(segment.getIdentifier().getValue()).thenReturn(\"t_order\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_0\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SQLStatementContext<DropIndexStatement> sqlStatementContext = mock(,RETURNS_DEEP_STUBS)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
4->3 [style = bold, label=""];
14->15 [style = solid, label="sqlStatementContext"];
21->15 [style = bold, label=""];
7->9 [style = solid, label="routeContext"];
14->17 [style = bold, label=""];
1->18 [style = bold, label=""];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
7->9 [style = bold, label=""];
24->16 [style = bold, label=""];
6->4 [style = bold, label=""];
2->12 [style = dashed, label="0"];
23->24 [style = bold, label=""];
13->15 [style = solid, label="schema"];
18->22 [style = bold, label=""];
20->23 [style = bold, label=""];
19->13 [style = bold, label=""];
0->1 [style = bold, label=""];
9->5 [style = bold, label=""];
16->14 [style = bold, label=""];
10->2 [style = bold, label=""];
13->20 [style = bold, label=""];
2->7 [style = bold, label=""];
1->18 [style = solid, label="routeContext"];
1->22 [style = solid, label="routeContext"];
17->21 [style = bold, label=""];
15->1 [style = bold, label=""];
}
