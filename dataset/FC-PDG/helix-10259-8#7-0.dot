digraph {
2 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@90@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "ClusterDataCache cache = new ClusterDataCache()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),cache)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "pipeline.handle(event)@@@93@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "event.addAttribute(AttributeName.ControllerDataProvider.name(),new ResourceControllerDataProvider())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CurrentStateOutput currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "cache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Message relayMessage = toSlaveMessage.getRelayMessage(newMasterInstance)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Pipeline pipeline = createPipeline()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "pipeline.handle(event)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ClusterConfig clusterConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@69056c,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "preSetup()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(message.getRelayMessages().entrySet().size(),1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "pipeline.handle(event)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@6903d6,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testP2PMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "p2pMessageEnabled@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "pipeline.handle(event)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "pipeline.handle(event)@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Boolean p2pMessageEnabled@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
106 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "BestPossibleStateOutput bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Message relayMessage = message.getRelayMessage(newMasterInstance)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testP2PMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "ResourceControllerDataProvider cache = event.getAttribute(AttributeName.ControllerDataProvider.name())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "pipeline.handle(event)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "pipeline = createPipeline()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ClusterConfig clusterConfig@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "pipeline.handle(event)@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->10 [style = solid, label="masterInstance"];
27->98 [style = solid, label="p"];
34->80 [style = bold, label=""];
12->86 [style = dashed, label="0"];
33->34 [style = solid, label="resourceMap"];
71->115 [style = bold, label=""];
40->42 [style = dotted, label="true"];
79->120 [style = bold, label=""];
5->18 [style = dotted, label="true"];
27->75 [style = solid, label="p"];
72->46 [style = bold, label=""];
39->38 [style = dotted, label="true"];
92->64 [style = bold, label=""];
24->111 [style = dashed, label="0"];
39->32 [style = dotted, label="true"];
8->39 [style = bold, label=""];
76->126 [style = bold, label=""];
54->56 [style = bold, label=""];
28->39 [style = solid, label="p2pMessageEnabled"];
101->109 [style = bold, label=""];
77->93 [style = bold, label=""];
120->54 [style = bold, label=""];
13->34 [style = bold, label=""];
27->90 [style = solid, label="p"];
126->60 [style = bold, label=""];
39->25 [style = dotted, label="true"];
27->79 [style = solid, label="p"];
19->29 [style = bold, label=""];
50->15 [style = bold, label=""];
61->116 [style = bold, label=""];
56->88 [style = bold, label=""];
100->77 [style = bold, label=""];
90->44 [style = bold, label=""];
27->30 [style = bold, label=""];
86->49 [style = bold, label=""];
119->87 [style = bold, label=""];
17->23 [style = bold, label=""];
31->48 [style = solid, label="bestPossibleStateOutput"];
5->33 [style = bold, label=""];
20->17 [style = bold, label=""];
118->102 [style = bold, label=""];
30->55 [style = solid, label="masterInstance"];
83->76 [style = bold, label=""];
14->15 [style = dashed, label="0"];
106->81 [style = bold, label=""];
27->69 [style = solid, label="p"];
27->57 [style = solid, label="p"];
35->22 [style = bold, label=""];
39->14 [style = dotted, label="true"];
15->97 [style = bold, label=""];
36->35 [style = bold, label=""];
116->85 [style = bold, label=""];
115->48 [style = bold, label=""];
30->17 [style = solid, label="masterInstance"];
18->33 [style = solid, label="clusterConfig"];
14->7 [style = bold, label=""];
112->50 [style = bold, label=""];
29->24 [style = solid, label="masterInstance"];
8->49 [style = dashed, label="0"];
0->1 [style = solid, label="currentStateOutput"];
11->31 [style = bold, label=""];
15->38 [style = bold, label=""];
30->98 [style = solid, label="masterInstance"];
31->96 [style = solid, label="bestPossibleStateOutput"];
9->16 [style = bold, label=""];
6->11 [style = bold, label=""];
31->58 [style = dashed, label="0"];
27->45 [style = solid, label="p"];
96->113 [style = bold, label=""];
114->101 [style = bold, label=""];
14->7 [style = solid, label="relayMessage"];
70->59 [style = bold, label=""];
121->122 [style = bold, label=""];
30->123 [style = solid, label="masterInstance"];
55->65 [style = bold, label=""];
23->26 [style = bold, label=""];
38->9 [style = bold, label=""];
69->121 [style = bold, label=""];
122->84 [style = bold, label=""];
110->26 [style = bold, label=""];
15->123 [style = solid, label="relayMessage"];
19->32 [style = solid, label="p"];
59->127 [style = bold, label=""];
10->4 [style = bold, label=""];
50->126 [style = solid, label="newMasterInstance"];
80->63 [style = solid, label="cache"];
67->63 [style = bold, label=""];
41->22 [style = bold, label=""];
50->79 [style = solid, label="newMasterInstance"];
117->78 [style = bold, label=""];
29->4 [style = solid, label="masterInstance"];
96->114 [style = solid, label="currentStateOutput"];
96->120 [style = solid, label="currentStateOutput"];
29->10 [style = bold, label=""];
65->21 [style = bold, label=""];
84->117 [style = bold, label=""];
37->3 [style = bold, label=""];
62->71 [style = bold, label=""];
77->34 [style = solid, label="clusterConfig"];
50->16 [style = solid, label="newMasterInstance"];
27->85 [style = solid, label="p"];
15->97 [style = solid, label="relayMessage"];
91->124 [style = bold, label=""];
97->9 [style = bold, label=""];
60->75 [style = bold, label=""];
19->29 [style = solid, label="p"];
39->15 [style = dotted, label="true"];
74->103 [style = bold, label=""];
50->103 [style = solid, label="newMasterInstance"];
39->7 [style = dotted, label="true"];
99->82 [style = bold, label=""];
27->113 [style = solid, label="p"];
3->0 [style = solid, label="bestPossibleStateOutput"];
32->15 [style = solid, label="newMasterInstance"];
96->89 [style = solid, label="currentStateOutput"];
102->108 [style = bold, label=""];
5->28 [style = dotted, label="true"];
21->57 [style = bold, label=""];
27->43 [style = dashed, label="0"];
39->112 [style = dashed, label="0"];
48->99 [style = solid, label="currentStateOutput"];
7->2 [style = bold, label=""];
123->53 [style = bold, label=""];
103->114 [style = bold, label=""];
51->92 [style = bold, label=""];
29->10 [style = solid, label="bestPossibleStateOutput"];
28->33 [style = solid, label="clusterConfig"];
107->34 [style = bold, label=""];
35->41 [style = bold, label=""];
40->28 [style = dotted, label="true"];
30->85 [style = solid, label="masterInstance"];
27->12 [style = solid, label="p"];
32->14 [style = solid, label="newMasterInstance"];
27->88 [style = solid, label="p"];
4->27 [style = bold, label=""];
58->111 [style = bold, label=""];
27->30 [style = solid, label="p"];
95->94 [style = bold, label=""];
32->14 [style = bold, label=""];
113->79 [style = bold, label=""];
34->36 [style = bold, label=""];
52->100 [style = bold, label=""];
40->33 [style = bold, label=""];
77->107 [style = solid, label="clusterConfig"];
108->70 [style = bold, label=""];
89->83 [style = bold, label=""];
30->113 [style = solid, label="masterInstance"];
82->105 [style = bold, label=""];
27->91 [style = solid, label="p"];
57->98 [style = bold, label=""];
46->69 [style = bold, label=""];
31->109 [style = solid, label="bestPossibleStateOutput"];
30->20 [style = bold, label=""];
27->110 [style = dashed, label="0"];
66->118 [style = bold, label=""];
42->39 [style = solid, label="p2pMessageEnabled"];
19->6 [style = solid, label="p"];
47->95 [style = bold, label=""];
81->72 [style = bold, label=""];
10->53 [style = solid, label="currentStateOutput"];
29->38 [style = solid, label="masterInstance"];
24->12 [style = bold, label=""];
27->44 [style = solid, label="p"];
43->30 [style = bold, label=""];
8->58 [style = bold, label=""];
30->111 [style = solid, label="masterInstance"];
88->51 [style = bold, label=""];
12->8 [style = bold, label=""];
45->74 [style = bold, label=""];
39->9 [style = dotted, label="true"];
80->67 [style = bold, label=""];
39->25 [style = bold, label=""];
26->6 [style = bold, label=""];
25->32 [style = bold, label=""];
16->55 [style = bold, label=""];
27->76 [style = solid, label="p"];
34->22 [style = solid, label="resourceMap"];
27->123 [style = solid, label="p"];
27->83 [style = solid, label="p"];
30->20 [style = solid, label="masterInstance"];
58->98 [style = solid, label="toSlaveMessage"];
50->90 [style = solid, label="newMasterInstance"];
83->44 [style = solid, label="slaveInstance"];
93->107 [style = bold, label=""];
53->119 [style = bold, label=""];
127->125 [style = bold, label=""];
68->62 [style = bold, label=""];
39->16 [style = dotted, label="true"];
27->71 [style = solid, label="p"];
124->96 [style = bold, label=""];
31->66 [style = solid, label="bestPossibleStateOutput"];
63->22 [style = bold, label=""];
48->90 [style = bold, label=""];
44->99 [style = bold, label=""];
39->21 [style = bold, label=""];
105->106 [style = bold, label=""];
64->61 [style = bold, label=""];
17->110 [style = bold, label=""];
104->47 [style = bold, label=""];
0->1 [style = bold, label=""];
39->21 [style = dotted, label="false"];
75->66 [style = bold, label=""];
33->13 [style = bold, label=""];
15->103 [style = solid, label="relayMessage"];
111->86 [style = bold, label=""];
73->104 [style = bold, label=""];
10->4 [style = solid, label="currentStateOutput"];
109->73 [style = bold, label=""];
39->2 [style = dotted, label="true"];
50->15 [style = solid, label="newMasterInstance"];
34->37 [style = solid, label="resourceMap"];
49->112 [style = bold, label=""];
87->91 [style = bold, label=""];
27->50 [style = solid, label="p"];
50->84 [style = solid, label="newMasterInstance"];
3->0 [style = bold, label=""];
94->68 [style = bold, label=""];
27->103 [style = solid, label="p"];
98->123 [style = bold, label=""];
1->19 [style = bold, label=""];
76->75 [style = solid, label="instanceStateMap"];
4->43 [style = bold, label=""];
85->89 [style = bold, label=""];
30->64 [style = solid, label="masterInstance"];
31->101 [style = solid, label="bestPossibleStateOutput"];
31->24 [style = bold, label=""];
125->45 [style = bold, label=""];
30->57 [style = solid, label="masterInstance"];
15->79 [style = solid, label="relayMessage"];
2->15 [style = bold, label=""];
33->13 [style = solid, label="resourceMap"];
22->37 [style = bold, label=""];
83->60 [style = solid, label="slaveInstance"];
}
