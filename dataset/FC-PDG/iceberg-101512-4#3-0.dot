digraph {
25 [style = filled, label = "return ROWS_MUST_MATCH@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "notEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Literal<T> lit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return ROWS_CANNOT_MATCH@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "lt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return ROWS_MUST_MATCH@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "cmp > 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "T lower = Conversions.fromByteBuffer(field.type(),lowerBounds.get(id))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "return ROWS_MIGHT_MATCH@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cmp >= 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cmp < 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "T lower = Conversions.fromByteBuffer(ref.type(),lowerBounds.get(id))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "lt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17->19 [style = solid, label="upper"];
0->9 [style = bold, label=""];
23->16 [style = bold, label=""];
20->17 [style = bold, label=""];
9->12 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
18->25 [style = dotted, label="true"];
22->16 [style = bold, label=""];
2->6 [style = bold, label=""];
2->1 [style = bold, label=""];
20->17 [style = dotted, label="true"];
15->4 [style = solid, label="lower"];
10->26 [style = dashed, label="0"];
8->3 [style = bold, label=""];
3->11 [style = bold, label=""];
3->17 [style = solid, label="id"];
9->20 [style = bold, label=""];
4->18 [style = bold, label=""];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
8->10 [style = dotted, label="true"];
9->7 [style = bold, label=""];
13->10 [style = dotted, label="true"];
22->23 [style = bold, label=""];
17->19 [style = bold, label=""];
9->6 [style = bold, label=""];
3->9 [style = bold, label=""];
18->20 [style = bold, label=""];
25->20 [style = bold, label=""];
19->22 [style = solid, label="cmp"];
7->4 [style = solid, label="lower"];
3->7 [style = solid, label="id"];
11->0 [style = solid, label="field"];
3->15 [style = solid, label="id"];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
12->4 [style = bold, label=""];
13->3 [style = bold, label=""];
20->16 [style = bold, label=""];
8->5 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
9->15 [style = bold, label=""];
4->18 [style = solid, label="cmp"];
9->2 [style = dotted, label="true"];
24->26 [style = dotted, label="true"];
15->4 [style = bold, label=""];
2->18 [style = dashed, label="0"];
18->25 [style = bold, label=""];
7->15 [style = dashed, label="0"];
7->12 [style = dashed, label="0"];
4->2 [style = solid, label="cmp"];
3->12 [style = solid, label="id"];
9->4 [style = dotted, label="true"];
3->0 [style = solid, label="id"];
9->18 [style = dotted, label="true"];
3->11 [style = solid, label="id"];
9->15 [style = dotted, label="true"];
20->19 [style = dotted, label="true"];
9->12 [style = bold, label=""];
20->22 [style = dotted, label="true"];
9->7 [style = dotted, label="true"];
1->25 [style = dashed, label="0"];
13->14 [style = dotted, label="true"];
24->21 [style = dotted, label="true"];
19->22 [style = bold, label=""];
24->3 [style = bold, label=""];
12->4 [style = solid, label="lower"];
3->20 [style = solid, label="id"];
3->9 [style = solid, label="id"];
}
