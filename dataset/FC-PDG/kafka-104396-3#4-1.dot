digraph {
16 [style = filled, label = "assertEquals(electionTimeoutMs + jitterMs,votedState.remainingElectionTimeMs(time.milliseconds()))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "state.transitionToCandidate()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "random.mockNextInt(electionTimeoutMs,jitterMs)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "int jitterMs = 2500@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testFollowerToCandidate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(9,candidateState.epoch())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int node2 = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testFollowerToCandidate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Mockito.doReturn(jitterMs).when(random).nextInt(electionTimeoutMs)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(state.isCandidate())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(9,votedState.epoch())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,node1,node2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFollowerToVotedHigherEpoch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(state.isVoted())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(node1,votedState.votedId())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "VotedState votedState = state.votedStateOrThrow()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "state.initialize(new OffsetAndEpoch(0L,logEndEpoch))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "state.transitionToVoted(9,node1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "state.transitionToFollower(8,node2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "QuorumState state = initializeEmptyState(voters)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int node1 = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CandidateState candidateState = state.candidateStateOrThrow()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(electionTimeoutMs + jitterMs,candidateState.remainingElectionTimeMs(time.milliseconds()))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
9->20 [style = dashed, label="0"];
4->3 [style = bold, label=""];
9->11 [style = bold, label=""];
12->21 [style = solid, label="node1"];
12->4 [style = solid, label="node1"];
6->17 [style = dashed, label="0"];
12->17 [style = solid, label="node1"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
3->0 [style = bold, label=""];
13->14 [style = dashed, label="0"];
10->18 [style = dashed, label="0"];
7->14 [style = bold, label=""];
11->5 [style = bold, label=""];
12->2 [style = bold, label=""];
13->17 [style = bold, label=""];
18->20 [style = bold, label=""];
11->19 [style = dashed, label="0"];
0->1 [style = bold, label=""];
22->12 [style = bold, label=""];
6->10 [style = bold, label=""];
2->4 [style = solid, label="node2"];
21->16 [style = bold, label=""];
7->16 [style = solid, label="jitterMs"];
7->5 [style = solid, label="jitterMs"];
10->9 [style = bold, label=""];
15->12 [style = bold, label=""];
2->1 [style = solid, label="node2"];
7->14 [style = solid, label="jitterMs"];
13->6 [style = bold, label=""];
4->3 [style = solid, label="voters"];
20->19 [style = bold, label=""];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
17->18 [style = bold, label=""];
19->21 [style = bold, label=""];
}
