digraph {
12 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(1)).until(9),SessionWindows.with(ofMillis(1)).until(7))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(0)).until(7),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(7))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(70),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(7))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "verifyInEquality(SessionWindows.with(1).grace(9),SessionWindows.with(1).grace(6))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "verifyInEquality(JoinWindows.of(3).before(1).after(9).grace(3).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verifyInEquality(SessionWindows.with(1).until(9),SessionWindows.with(1).until(7))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "verifyInEquality(JoinWindows.of(3).until(90),JoinWindows.of(3).until(60))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verifyInEquality(JoinWindows.of(3).before(9),JoinWindows.of(3).before(2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(9)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "verifyInEquality(JoinWindows.of(3).grace(9),JoinWindows.of(3).grace(2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verifyInEquality(JoinWindows.of(3).before(1).after(2).grace(3).until(90),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verifyInEquality(JoinWindows.of(3).before(1).after(2).grace(9).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verifyInEquality(JoinWindows.of(3).before(9).after(2).grace(3).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(9)),SessionWindows.with(ofMillis(1)))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "verifyInEquality(SessionWindows.with(1).grace(6).until(70),SessionWindows.with(1).grace(6).until(7))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "verifyInEquality(JoinWindows.of(3).after(9),JoinWindows.of(3).after(2))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(2)).grace(ofMillis(6)).until(7),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(7))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "verifyInEquality(SessionWindows.with(2).grace(6).until(7),SessionWindows.with(1).grace(6).until(7))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "verifyInEquality(SessionWindows.with(1).grace(0).until(7),SessionWindows.with(1).grace(6).until(7))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "verifyInEquality(SessionWindows.with(9),SessionWindows.with(1))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "verifyInEquality(JoinWindows.of(9),JoinWindows.of(3))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->23 [style = dashed, label="0"];
4->3 [style = bold, label=""];
23->16 [style = bold, label=""];
7->11 [style = bold, label=""];
16->18 [style = bold, label=""];
3->1 [style = bold, label=""];
22->19 [style = bold, label=""];
6->7 [style = dashed, label="0"];
21->15 [style = bold, label=""];
19->20 [style = bold, label=""];
0->16 [style = dashed, label="0"];
11->12 [style = bold, label=""];
1->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
0->12 [style = dashed, label="0"];
6->14 [style = dashed, label="0"];
6->2 [style = bold, label=""];
20->21 [style = bold, label=""];
2->0 [style = bold, label=""];
18->22 [style = bold, label=""];
5->6 [style = bold, label=""];
14->23 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
17->14 [style = bold, label=""];
12->8 [style = bold, label=""];
13->7 [style = bold, label=""];
4->8 [style = dashed, label="0"];
8->9 [style = bold, label=""];
2->11 [style = dashed, label="0"];
}
