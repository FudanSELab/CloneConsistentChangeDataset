digraph {
4 [style = filled, label = "assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",res.contains(\"/foo1/\") || res.contains(\"/foo2/\"))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",res.contains(\"/foo1/\") || res.contains(\"/foo2/\"))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Enumeration<URL> en = p.classLoader.getResources(\"test-resource\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertTrue(\"expected foo4, found \" + res,res.contains(\"/foo4/\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "res = en.nextElement().toString()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "en.hasMoreElements()@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testDependencyClassLoader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PluginWrapper p = j.jenkins.getPluginManager().getPlugin(\"foo3\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testDependencyClassLoader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "i == 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i++@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(\"In current impl, \" + res + \"should be foo3\",res.contains(\"/foo3/\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",res.contains(\"/foo1/\") || res.contains(\"/foo2/\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "res = p.classLoader.getResource(\"test-resource\").toString()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "fail(\"disabled dependency should not be included\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "i < 2@@@10@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "String res@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String res = en.nextElement().toString()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDisabledDependencyClassLoader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->20 [style = solid, label="i"];
13->10 [style = bold, label=""];
5->10 [style = bold, label=""];
1->8 [style = bold, label=""];
5->4 [style = solid, label="res"];
12->5 [style = bold, label=""];
12->20 [style = solid, label="i"];
19->12 [style = bold, label=""];
11->1 [style = bold, label=""];
7->12 [style = bold, label=""];
0->6 [style = bold, label=""];
18->12 [style = bold, label=""];
7->19 [style = solid, label="res"];
0->6 [style = solid, label="res"];
8->7 [style = dotted, label="true"];
7->20 [style = bold, label=""];
7->10 [style = solid, label="i"];
9->7 [style = bold, label=""];
13->10 [style = dotted, label="true"];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
4->7 [style = bold, label=""];
8->7 [style = bold, label=""];
8->13 [style = solid, label="i"];
7->13 [style = solid, label="i"];
2->15 [style = dashed, label="0"];
20->18 [style = bold, label=""];
5->10 [style = solid, label="res"];
13->9 [style = dotted, label="false"];
12->13 [style = dotted, label="true"];
8->12 [style = dotted, label="true"];
15->11 [style = bold, label=""];
3->2 [style = bold, label=""];
5->9 [style = solid, label="res"];
12->10 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
12->8 [style = bold, label=""];
16->21 [style = bold, label=""];
2->16 [style = dashed, label="0"];
5->13 [style = bold, label=""];
1->12 [style = solid, label="i"];
21->1 [style = bold, label=""];
8->10 [style = solid, label="i"];
10->4 [style = bold, label=""];
10->9 [style = dotted, label="false"];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
8->20 [style = dotted, label="true"];
13->9 [style = bold, label=""];
20->19 [style = dotted, label="true"];
20->18 [style = dotted, label="false"];
10->4 [style = dotted, label="true"];
5->7 [style = dashed, label="0"];
20->19 [style = bold, label=""];
12->7 [style = dotted, label="true"];
8->7 [style = solid, label="i"];
2->11 [style = bold, label=""];
8->12 [style = bold, label=""];
17->16 [style = bold, label=""];
}
