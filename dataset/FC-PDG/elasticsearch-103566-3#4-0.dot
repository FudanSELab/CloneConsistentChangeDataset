digraph {
26 [style = filled, label = "testRetentionLeaseSyncActionOnReplica['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "final RetentionLeaseBackgroundSyncAction.Request request = new RetentionLeaseBackgroundSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(flushRequest.getValue().force())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new IndexNameExpressionResolver())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "result.respond(ActionListener.wrap(null,null))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertTrue(flushRequest.getValue().waitIfOngoing())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final RetentionLeases retentionLeases = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Index index = new Index(\"index\",\"uuid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final IndicesService indicesService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final AtomicBoolean success = new AtomicBoolean()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "when(indexService.getShard(id)).thenReturn(indexShard)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(success.get())@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "final TransportReplicationAction.ReplicaResult result = action.shardOperationOnReplica(request,indexShard)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final ShardId shardId = new ShardId(index,id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "verify(indexShard).afterWriteOperation()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(indexShard).flush(flushRequest.capture())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "final RetentionLeaseSyncAction.Request request = new RetentionLeaseSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRetentionLeaseSyncActionOnReplica['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testRetentionLeaseBackgroundSyncActionOnReplica['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final RetentionLeaseBackgroundSyncAction action = new RetentionLeaseBackgroundSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new IndexNameExpressionResolver())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "verify(indexShard).persistRetentionLeases()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "result.respond(ActionListener.wrap(null,null))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(success.get())@@@23@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(indicesService.indexServiceSafe(index)).thenReturn(indexService)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(indexShard.shardId()).thenReturn(shardId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final AtomicBoolean success = new AtomicBoolean()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final AtomicBoolean success = new AtomicBoolean()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int id = randomIntBetween(0,4)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "result.respond(ActionListener.wrap(null,null))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final ArgumentCaptor<FlushRequest> flushRequest = ArgumentCaptor.forClass()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(success.get())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final IndexService indexService = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final TransportWriteAction.WriteReplicaResult<RetentionLeaseSyncAction.Request> result = action.shardOperationOnReplica(request,indexShard)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final IndexShard indexShard = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(indexShard).updateRetentionLeasesOnReplica(retentionLeases)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->7 [style = solid, label="retentionLeases"];
7->15 [style = solid, label="request"];
21->0 [style = bold, label=""];
14->18 [style = solid, label="indexShard"];
1->33 [style = solid, label="indicesService"];
14->15 [style = solid, label="indexShard"];
25->23 [style = bold, label=""];
8->33 [style = dashed, label="0"];
33->6 [style = bold, label=""];
0->12 [style = bold, label=""];
11->21 [style = bold, label=""];
3->14 [style = bold, label=""];
26->1 [style = bold, label=""];
6->19 [style = solid, label="retentionLeases"];
12->20 [style = bold, label=""];
10->3 [style = bold, label=""];
19->11 [style = bold, label=""];
8->6 [style = bold, label=""];
1->8 [style = solid, label="indicesService"];
28->1 [style = bold, label=""];
15->29 [style = dashed, label="0"];
15->19 [style = bold, label=""];
2->10 [style = bold, label=""];
5->13 [style = solid, label="shardId"];
30->29 [style = bold, label=""];
19->25 [style = bold, label=""];
20->4 [style = bold, label=""];
1->17 [style = bold, label=""];
23->22 [style = bold, label=""];
27->34 [style = bold, label=""];
29->19 [style = bold, label=""];
17->2 [style = bold, label=""];
5->30 [style = solid, label="shardId"];
18->5 [style = bold, label=""];
5->13 [style = bold, label=""];
19->27 [style = bold, label=""];
17->5 [style = solid, label="index"];
7->30 [style = dashed, label="0"];
14->29 [style = solid, label="indexShard"];
30->29 [style = solid, label="request"];
7->15 [style = bold, label=""];
5->7 [style = solid, label="shardId"];
14->18 [style = bold, label=""];
34->32 [style = bold, label=""];
3->5 [style = solid, label="id"];
22->24 [style = bold, label=""];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
13->33 [style = bold, label=""];
32->31 [style = bold, label=""];
2->10 [style = solid, label="indexService"];
4->16 [style = bold, label=""];
6->30 [style = solid, label="retentionLeases"];
6->30 [style = bold, label=""];
}
