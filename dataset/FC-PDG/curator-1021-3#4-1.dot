digraph {
15 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(TIMES)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "latch.await()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testRetries['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(elapsed >= SLEEP,elapsed + \": \" + times)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "client.create().inBackground().forPath(\"/one\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "server.stop()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testRetries['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "latch.await()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "AsyncCuratorFramework async = AsyncCuratorFramework.wrap(client)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(elapsed >= SLEEP,elapsed + \": \" + times)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "client.getZookeeperClient().blockUntilConnectedOrTimedOut()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<Long> times = Lists.newArrayList()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "((CuratorFrameworkImpl)client).debugListener = new CuratorFrameworkImpl.DebugBackgroundListener(){@Override public void listen(OperationAndData<?> data){if (data.getOperation().getClass().getName().contains(\"CreateBuilderImpl\")) {long now = System.currentTimeMillis()times.add(now - start.get())start.set(now)latch.countDown()}}}@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "server.stop()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testRetries['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final int TIMES = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryNTimes(TIMES,SLEEP))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Timing timing = new Timing()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(elapsed >= SLEEP,elapsed + \": \" + times)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final AtomicLong start = new AtomicLong(System.currentTimeMillis())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int SLEEP = 1000@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "((CuratorFrameworkImpl)client).debugListener = null@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->16 [style = bold, label=""];
2->15 [style = solid, label="TIMES"];
4->17 [style = bold, label=""];
9->4 [style = bold, label=""];
22->9 [style = bold, label=""];
5->11 [style = solid, label="SLEEP"];
0->11 [style = solid, label="times"];
21->24 [style = bold, label=""];
11->17 [style = dashed, label="0"];
2->8 [style = solid, label="TIMES"];
16->22 [style = bold, label=""];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
13->1 [style = bold, label=""];
20->5 [style = bold, label=""];
5->2 [style = bold, label=""];
22->19 [style = solid, label="client"];
10->5 [style = bold, label=""];
5->8 [style = solid, label="SLEEP"];
0->17 [style = solid, label="times"];
8->1 [style = solid, label="client"];
11->3 [style = bold, label=""];
9->21 [style = dashed, label="0"];
18->5 [style = bold, label=""];
15->0 [style = bold, label=""];
23->19 [style = bold, label=""];
12->3 [style = solid, label="client"];
5->17 [style = solid, label="SLEEP"];
12->22 [style = dashed, label="0"];
9->21 [style = bold, label=""];
17->3 [style = bold, label=""];
5->23 [style = solid, label="SLEEP"];
1->14 [style = bold, label=""];
14->15 [style = bold, label=""];
2->7 [style = bold, label=""];
6->9 [style = bold, label=""];
4->11 [style = bold, label=""];
16->12 [style = bold, label=""];
13->14 [style = bold, label=""];
0->23 [style = solid, label="times"];
8->13 [style = bold, label=""];
24->23 [style = bold, label=""];
}
