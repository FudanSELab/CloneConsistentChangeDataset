digraph {
9 [style = filled, label = "casSinkFunc.invoke(\"hello\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(1,casSinkFunc.getAcquiredPermits())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TestCassandraSink casSinkFunc = new TestCassandraSink()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testWaitForPendingUpdatesOnSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "casSinkFunc.enqueueCompletableFuture(completableFuture)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "t.getState() != Thread.State.WAITING@@@18@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "latch.await()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Thread t = new CheckedThread(\"Flink-CassandraSinkBaseTest\"){@Override public void go(){testHarness.close()latch.countDown()}}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "t.getState() != Thread.State.TIMED_WAITING@@@18@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "t.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final TestCassandraSink casSinkFunc = new TestCassandraSink()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "completableFuture.complete(null)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testWaitForPendingUpdatesOnSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(0,casSinkFunc.getAcquiredPermits())@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Thread.sleep(5)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(1,casSinkFunc.getAcquiredPermits())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testWaitForPendingUpdatesOnClose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CompletableFuture<ResultSet> completableFuture = new CompletableFuture<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->3 [style = bold, label=""];
15->5 [style = dotted, label="true"];
4->17 [style = dashed, label="0"];
2->6 [style = bold, label=""];
18->17 [style = bold, label=""];
5->15 [style = bold, label=""];
7->0 [style = bold, label=""];
3->12 [style = bold, label=""];
0->15 [style = bold, label=""];
15->5 [style = bold, label=""];
6->1 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
3->5 [style = dotted, label="true"];
11->10 [style = bold, label=""];
13->7 [style = bold, label=""];
11->10 [style = solid, label="completableFuture"];
9->14 [style = bold, label=""];
3->15 [style = dashed, label="0"];
10->9 [style = bold, label=""];
15->12 [style = bold, label=""];
14->13 [style = bold, label=""];
8->4 [style = bold, label=""];
16->4 [style = bold, label=""];
4->11 [style = bold, label=""];
17->11 [style = bold, label=""];
}
