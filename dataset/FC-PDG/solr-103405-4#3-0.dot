digraph {
25 [style = filled, label = "Replica connectedReplica = connectedSlice.getReplicas().iterator().next()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "connectedSlice = getRandomEntry(slices)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fail(\"An exception should be thrown when ZooKeeper is not connected and shards.tolerant=requireZkConnected\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JettySolrRunner disconnectedJetty = miniCluster.getReplicaJetty(disconnectedReplica)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRequireZkConnectedDistrib['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Replica disconnectedReplica = getRandomEntry(disconnectedSlice.getReplicas())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "req.process(httpSolrClient)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "miniCluster.uploadConfigSet(SolrTestCaseJ4.TEST_PATH().resolve(\"collection1/conf\"),configName)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "QueryRequest req = new QueryRequest(params)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(rsp.getResponseHeader().getBooleanArg(\"zkConnected\"))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(\"Exception message is missing 'no servers hosting shard:': \" + e,e.getMessage().contains(\"no servers hosting shard:\"))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "params.set(ShardParams.SHARDS_TOLERANT,\"requireZkConnected\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CollectionAdminRequest.createCollection(collectionName,configName,2,1).process(miniCluster.getSolrClient())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Collection<Slice> slices = cloudSolrClient.getZkStateReader().getClusterState().getCollection(collectionName).getSlices()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "CollectionAdminRequest.createCollection(collectionName,configName,2,2).process(miniCluster.getSolrClient())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Exception e@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(5,jettys.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testRequireZkConnected['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(e.getMessage().contains(\"no servers hosting shard:\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "MiniSolrCloudCluster miniCluster = new MiniSolrCloudCluster(5,createTempDir(),buildJettyConfig(\"/solr\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Slice connectedSlice = getRandomEntry(slices)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(jetty.isRunning())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(2,jettys.size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MiniSolrCloudCluster miniCluster = new MiniSolrCloudCluster(2,createTempDir(),buildJettyConfig(\"/solr\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "{miniCluster.shutdown()}@@@35@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testRequireZkConnectedDistrib['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "ignoreException(\"ZooKeeper is not connected\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ModifiableSolrParams params = new ModifiableSolrParams()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String configName = collectionName + \"Config\"@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNotNull(miniCluster.getZkServer())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String collectionName = \"testRequireZkConnectedDistribCollection\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "disconnectedJetty.getCoreContainer().getZkController().getZkClient().close()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String collectionName = \"testRequireZkConnectedCollection\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "connectedSlice.getName().equals(disconnectedSlice.getName())@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ignoreException(\"ZooKeeper is not connected\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "QueryResponse rsp = req.process(cloudSolrClient,collectionName)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Slice disconnectedSlice = getRandomEntry(slices)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final CloudSolrClient cloudSolrClient = miniCluster.getSolrClient()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<JettySolrRunner> jettys = miniCluster.getJettySolrRunners()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(e.getMessage().contains(\"ZooKeeper is not connected\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
34->15 [style = solid, label="collectionName"];
5->8 [style = bold, label=""];
22->25 [style = bold, label=""];
4->35 [style = bold, label=""];
27->38 [style = dashed, label="0"];
30->22 [style = bold, label=""];
13->24 [style = bold, label=""];
26->7 [style = bold, label=""];
9->5 [style = solid, label="slices"];
38->28 [style = bold, label=""];
10->39 [style = dashed, label="0"];
24->0 [style = bold, label=""];
11->34 [style = dashed, label="0"];
27->28 [style = bold, label=""];
21->34 [style = bold, label=""];
4->19 [style = bold, label=""];
7->37 [style = bold, label=""];
11->15 [style = solid, label="collectionName"];
14->10 [style = bold, label=""];
39->6 [style = bold, label=""];
1->18 [style = bold, label=""];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
18->36 [style = bold, label=""];
11->12 [style = solid, label="collectionName"];
23->3 [style = solid, label="params"];
34->12 [style = solid, label="collectionName"];
34->12 [style = bold, label=""];
15->16 [style = bold, label=""];
10->6 [style = bold, label=""];
22->30 [style = bold, label=""];
12->4 [style = solid, label="configName"];
8->7 [style = bold, label=""];
8->7 [style = solid, label="disconnectedReplica"];
20->21 [style = bold, label=""];
2->38 [style = bold, label=""];
2->32 [style = dotted, label="true"];
36->21 [style = bold, label=""];
6->1 [style = bold, label=""];
18->20 [style = bold, label=""];
35->23 [style = bold, label=""];
33->39 [style = bold, label=""];
12->4 [style = bold, label=""];
21->11 [style = bold, label=""];
2->27 [style = dotted, label="true"];
20->36 [style = dashed, label="0"];
31->10 [style = bold, label=""];
19->23 [style = bold, label=""];
6->15 [style = solid, label="cloudSolrClient"];
27->32 [style = dashed, label="0"];
25->26 [style = bold, label=""];
17->3 [style = bold, label=""];
9->5 [style = bold, label=""];
2->27 [style = bold, label=""];
9->30 [style = solid, label="slices"];
23->17 [style = bold, label=""];
2->32 [style = bold, label=""];
2->38 [style = dotted, label="true"];
29->22 [style = bold, label=""];
19->35 [style = dashed, label="0"];
22->30 [style = dotted, label="true"];
37->13 [style = bold, label=""];
32->28 [style = bold, label=""];
8->29 [style = bold, label=""];
16->9 [style = bold, label=""];
0->28 [style = bold, label=""];
9->29 [style = solid, label="slices"];
}
