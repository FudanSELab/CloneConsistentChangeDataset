digraph {
3 [style = filled, label = "HARegionQueue regionQueue = createHARegionQueue(testName.getMethodName(),haa)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "waitAtLeast(1000,start,null)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(\" Expected the available id's size not to be zero since expiry time has not been exceeded but it is not so \",!regionQueue.getAvailableIds().isEmpty(),is(true))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "regionQueue.put(new ConflatableObject(\"key\",\"value\",new EventID(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@179c24,1,1),true,testName.getMethodName()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testExpiryPositiveWithConflation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "haa.setExpiryTime(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Map map = (Map)regionQueue.getConflationMapForTesting().get(testName.getMethodName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testExpiryPositive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HARegionQueueAttributes haa = new HARegionQueueAttributes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(\" Expected eventID map size not to be zero since expiry time has not been exceeded but it is not so \",!regionQueue.getEventsMapForTesting().isEmpty(),is(true))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(\" Expected conflation map size not to be zero since expiry time has not been exceeded but it is not so \" + ((Map)regionQueue.getConflationMapForTesting().get(testName.getMethodName())).get(\"key\"),((Map)regionQueue.getConflationMapForTesting().get(testName.getMethodName())).get(\"key\"),not(sameInstance(null)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "long start = System.currentTimeMillis()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "regionQueue.put(new ConflatableObject(\"key\",\"newValue\",new EventID(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@179b9b,1,2),true,testName.getMethodName()))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(\" Expected region size not to be zero since expiry time has not been exceeded but it is not so \",!regionQueue.isEmpty(),is(true))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testExpiryPositiveWithConflation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "waitAtLeast(1000,start,null)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(\" Expected the available id's size not to be zero since expiry time has not been exceeded but it is not so \",!regionQueue.getAvalaibleIds().isEmpty(),is(true))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->10 [style = bold, label=""];
15->14 [style = bold, label=""];
2->1 [style = bold, label=""];
11->6 [style = bold, label=""];
12->11 [style = bold, label=""];
10->3 [style = bold, label=""];
7->8 [style = bold, label=""];
2->12 [style = bold, label=""];
1->11 [style = bold, label=""];
5->14 [style = solid, label="start"];
1->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
4->3 [style = solid, label="haa"];
5->7 [style = bold, label=""];
7->15 [style = bold, label=""];
5->9 [style = solid, label="start"];
6->9 [style = bold, label=""];
16->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
