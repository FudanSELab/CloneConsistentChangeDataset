digraph {
15 [style = filled, label = "testAggregateRowsWithExtraction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "i < values1.size()@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testAggregateRowsWithExtraction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < VALUES1.size()@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "++i@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CardinalityAggregator agg = new CardinalityAggregator(dimInfoListWithExtraction,false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i < values1.size()@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(9.0,(Double)rowAggregatorFactory.finalizeComputation(agg.get()),0.05)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CardinalityAggregator agg2 = new CardinalityAggregator(dimInfoListConstantVal,true)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(3.0,(Double)rowAggregatorFactory.finalizeComputation(agg2.get()),0.05)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "++i@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < VALUES1.size()@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testAggregateValuesWithExtraction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CardinalityAggregator agg = new CardinalityAggregator(dimInfoListWithExtraction,true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(7.0,(Double)valueAggregatorFactory.finalizeComputation(agg.get()),0.05)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "aggregate(selectorListWithExtraction,agg)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "CardinalityAggregator agg2 = new CardinalityAggregator(dimInfoListConstantVal,false)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "aggregate(selectorListConstantVal,agg2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(1.0,(Double)valueAggregatorFactory.finalizeComputation(agg2.get()),0.05)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
9->20 [style = dashed, label="0"];
13->10 [style = bold, label=""];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
2->19 [style = bold, label=""];
11->4 [style = solid, label="agg"];
9->0 [style = bold, label=""];
0->13 [style = bold, label=""];
3->1 [style = bold, label=""];
5->9 [style = bold, label=""];
1->14 [style = dashed, label="0"];
4->6 [style = bold, label=""];
0->13 [style = solid, label="i"];
3->14 [style = bold, label=""];
0->2 [style = bold, label=""];
20->0 [style = bold, label=""];
1->18 [style = bold, label=""];
3->1 [style = solid, label="i"];
14->6 [style = dotted, label="true"];
1->4 [style = dotted, label="true"];
11->17 [style = dashed, label="0"];
16->17 [style = bold, label=""];
5->18 [style = dashed, label="0"];
2->10 [style = bold, label=""];
17->4 [style = solid, label="agg"];
13->10 [style = dotted, label="true"];
2->12 [style = bold, label=""];
6->14 [style = bold, label=""];
6->1 [style = bold, label=""];
18->20 [style = bold, label=""];
14->4 [style = bold, label=""];
13->12 [style = bold, label=""];
20->10 [style = solid, label="agg2"];
15->11 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
9->10 [style = solid, label="agg2"];
11->3 [style = bold, label=""];
13->8 [style = dotted, label="true"];
12->19 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
17->3 [style = bold, label=""];
1->6 [style = dotted, label="true"];
3->14 [style = solid, label="i"];
14->4 [style = dotted, label="true"];
2->8 [style = dotted, label="true"];
8->13 [style = bold, label=""];
2->10 [style = dotted, label="true"];
14->5 [style = bold, label=""];
0->2 [style = solid, label="i"];
}
