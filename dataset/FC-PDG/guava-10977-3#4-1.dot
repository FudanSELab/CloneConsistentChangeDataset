digraph {
5 [style = filled, label = "nodeOrder_insertion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "nodeOrder_insertion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "nodeOrder_default['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(graph.nodes()).containsExactly(3,1,4).inOrder()@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(graph.nodeOrder()).isEqualTo(insertion())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "addNodes(graph)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MutableGraph<Integer> graph = GraphBuilder.directed().build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MutableGraph<Integer> graph = GraphBuilder.directed().nodeOrder(insertion()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
6->4 [style = bold, label=""];
3->6 [style = dashed, label="0"];
7->6 [style = bold, label=""];
3->4 [style = solid, label="graph"];
0->1 [style = bold, label=""];
3->4 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
6->4 [style = solid, label="graph"];
}
