digraph {
7 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int uncompressedLength@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "decode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "decode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return uncompressed@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "encoded.hasMemoryAddress() && uncompressed.hasMemoryAddress()@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "LZ4_DECOMPRESSOR.get().decompress(encodedNio,uncompressedNio)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Snappy.uncompress(encodedNio,uncompressedNio)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "decode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteBuf encoded@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "decompressor.decompress(encodedNio,encodedNio.position(),uncompressedNio,uncompressedNio.position(),uncompressedNio.remaining())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ByteBuf uncompressed = PooledByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ByteBuf encoded@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Lz4RawDecompressor.decompress(null,encoded.memoryAddress() + encoded.readerIndex(),encoded.memoryAddress() + encoded.writerIndex(),null,uncompressed.memoryAddress(),uncompressed.memoryAddress() + uncompressedLength)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "int uncompressedLength@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return uncompressed@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12->10 [style = dotted, label="true"];
8->14 [style = bold, label=""];
9->0 [style = dotted, label="false"];
6->5 [style = solid, label="uncompressedLength"];
5->8 [style = solid, label="uncompressed"];
10->5 [style = solid, label="uncompressedLength"];
7->8 [style = bold, label=""];
9->11 [style = bold, label=""];
2->3 [style = dotted, label="true"];
9->13 [style = dotted, label="false"];
9->4 [style = bold, label=""];
6->7 [style = solid, label="uncompressedLength"];
9->4 [style = dotted, label="false"];
6->18 [style = solid, label="uncompressedLength"];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = solid, label="uncompressedLength"];
9->11 [style = dotted, label="true"];
0->1 [style = solid, label="encodedNio"];
18->8 [style = solid, label="uncompressed"];
2->6 [style = dotted, label="true"];
5->9 [style = bold, label=""];
0->13 [style = bold, label=""];
5->18 [style = dashed, label="0"];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
4->1 [style = solid, label="uncompressedNio"];
10->8 [style = solid, label="uncompressedLength"];
12->5 [style = bold, label=""];
17->15 [style = dotted, label="true"];
0->13 [style = solid, label="encodedNio"];
11->8 [style = bold, label=""];
0->16 [style = solid, label="encodedNio"];
4->13 [style = solid, label="uncompressedNio"];
6->4 [style = solid, label="uncompressedLength"];
17->6 [style = dotted, label="true"];
10->4 [style = solid, label="uncompressedLength"];
16->7 [style = bold, label=""];
5->14 [style = solid, label="uncompressed"];
13->8 [style = bold, label=""];
1->7 [style = bold, label=""];
12->6 [style = dotted, label="true"];
4->16 [style = solid, label="uncompressedNio"];
4->0 [style = bold, label=""];
18->4 [style = bold, label=""];
0->16 [style = bold, label=""];
}
