digraph {
30 [style = filled, label = "tokens = analyze.getTokens()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "request.tokenizer(\"standard\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(4,tokens.size())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,\"text\",null,randomBoolean()? indexAnalyzers: null,registry,environment,maxTokenCount)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(1).getTerm())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,environment,randomBoolean()? mockIndexService(): null,maxTokenCount)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testNormalizerWithIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "request.analyzer(\"standard\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<AnalyzeAction.AnalyzeToken> tokens = analyze.getTokens()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "AnalyzeAction.Response analyze = TransportAnalyzeAction.analyze(request,\"text\",null,indexAnalyzers,registry,environment,maxTokenCount)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"foxbar\",tokens.get(3).getTerm())@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"brown\",tokens.get(2).getTerm())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "AnalyzeAction.Response analyze = TransportAnalyzeAction.analyze(request,\"text\",null,null,registry,environment,maxTokenCount)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "AnalyzeAction.Request request = new AnalyzeAction.Request()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(4,tokens.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(4,tokens.size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "request.tokenizer(\"standard\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "request.normalizer(\"my_normalizer\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "request.text(\"ABc\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testNoIndexAnalyzers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "request.addCharFilter(\"append_foo\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(\"abc\",tokens.get(0).getTerm())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "request = new AnalyzeAction.Request()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "request = new AnalyzeAction.Request()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,\"text\",null,randomBoolean()? indexAnalyzers: null,registry,environment,maxTokenCount)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "testNoIndexAnalyzers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"fox\",tokens.get(2).getTerm())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"brown\",tokens.get(1).getTerm())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "request.tokenizer(\"standard\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(3,tokens.size())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(1).getTerm())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "request = new AnalyzeAction.Request()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "request.addCharFilter(\"append\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tokens = analyze.getTokens()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"the\",tokens.get(0).getTerm())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "request.addTokenFilter(\"mock\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,\"text\",null,randomBoolean()? indexAnalyzers: null,registry,environment,maxTokenCount)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"the\",tokens.get(0).getTerm())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "request.text(\"the quick brown fox\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(1,tokens.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,environment,randomBoolean()? mockIndexService(): null,maxTokenCount)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(0).getTerm())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,environment,randomBoolean()? mockIndexService(): null,maxTokenCount)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "AnalyzeAction.Request request = new AnalyzeAction.Request(\"index\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "AnalyzeAction.Response analyze = TransportAnalyzeAction.analyze(request,registry,environment,mockIndexService(),maxTokenCount)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "tokens = analyze.getTokens()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"brown\",tokens.get(2).getTerm())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"foxfoo\",tokens.get(3).getTerm())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
37->0 [style = bold, label=""];
48->49 [style = bold, label=""];
27->36 [style = bold, label=""];
4->38 [style = bold, label=""];
18->31 [style = solid, label="analyze"];
0->26 [style = bold, label=""];
2->18 [style = solid, label="request"];
34->40 [style = bold, label=""];
23->27 [style = bold, label=""];
16->8 [style = bold, label=""];
19->12 [style = bold, label=""];
47->48 [style = bold, label=""];
3->38 [style = solid, label="request"];
35->20 [style = bold, label=""];
38->17 [style = solid, label="analyze"];
3->44 [style = solid, label="request"];
44->40 [style = solid, label="analyze"];
20->34 [style = bold, label=""];
41->29 [style = bold, label=""];
18->41 [style = dashed, label="0"];
11->6 [style = bold, label=""];
14->47 [style = dashed, label="0"];
24->46 [style = dashed, label="0"];
44->19 [style = bold, label=""];
7->37 [style = bold, label=""];
10->35 [style = bold, label=""];
28->9 [style = bold, label=""];
43->2 [style = bold, label=""];
17->30 [style = bold, label=""];
31->42 [style = dashed, label="0"];
31->38 [style = solid, label="analyze"];
18->49 [style = dashed, label="0"];
36->33 [style = bold, label=""];
31->7 [style = bold, label=""];
4->44 [style = bold, label=""];
23->42 [style = solid, label="request"];
38->19 [style = bold, label=""];
26->22 [style = bold, label=""];
15->5 [style = bold, label=""];
2->41 [style = solid, label="request"];
49->29 [style = bold, label=""];
8->40 [style = solid, label="request"];
5->16 [style = bold, label=""];
22->3 [style = bold, label=""];
30->11 [style = bold, label=""];
18->29 [style = bold, label=""];
8->17 [style = solid, label="request"];
51->45 [style = bold, label=""];
2->45 [style = dashed, label="0"];
12->25 [style = bold, label=""];
33->42 [style = bold, label=""];
39->2 [style = bold, label=""];
34->17 [style = bold, label=""];
2->14 [style = bold, label=""];
29->46 [style = bold, label=""];
17->40 [style = dashed, label="0"];
45->47 [style = bold, label=""];
3->13 [style = bold, label=""];
33->31 [style = bold, label=""];
25->15 [style = bold, label=""];
40->30 [style = bold, label=""];
32->41 [style = bold, label=""];
42->7 [style = bold, label=""];
32->18 [style = bold, label=""];
46->50 [style = bold, label=""];
41->42 [style = solid, label="analyze"];
9->1 [style = bold, label=""];
32->48 [style = dashed, label="0"];
14->32 [style = bold, label=""];
29->24 [style = bold, label=""];
13->21 [style = bold, label=""];
23->31 [style = solid, label="request"];
45->49 [style = solid, label="request"];
38->44 [style = dashed, label="0"];
42->44 [style = solid, label="analyze"];
6->28 [style = bold, label=""];
21->4 [style = bold, label=""];
24->23 [style = bold, label=""];
}
