digraph {
13 [style = filled, label = "testParseBrokerEntryMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ByteBuf byteBuf = PulsarByteBufAllocator.DEFAULT.buffer(data.length(),data.length())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int MOCK_BATCH_SIZE = 10@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(data.length(),dataWithBrokerEntryMetadata.readableBytes())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "BrokerEntryMetadata brokerMetadata = Commands.parseBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ByteBuf dataWithBrokerEntryMetadata = Commands.addBrokerEntryMetadata(byteBuf,getBrokerEntryMetadataInterceptors(),11)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(brokerMetadata.getBrokerTimestamp() <= System.currentTimeMillis())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "PulsarApi.BrokerEntryMetadata brokerMetadata = Commands.parseBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "byte(( content = new byte((((@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ByteBuf dataWithBrokerEntryMetadata = Commands.addBrokerEntryMetadata(byteBuf,getBrokerEntryMetadataInterceptors(),MOCK_BATCH_SIZE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(new String(content,StandardCharsets.UTF_8),data)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSkipBrokerEntryMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testParseBrokerEntryMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "byteBuf.writeBytes(data.getBytes(StandardCharsets.UTF_8))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "dataWithBrokerEntryMetadata.readBytes(content)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "dataWithBrokerEntryMetadata.readBytes(content)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(new String(content,StandardCharsets.UTF_8),data)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Commands.skipBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(brokerMetadata.getIndex(),MOCK_BATCH_SIZE - 1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String data = \"test-message\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "byte(( content = new byte((((@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->8 [style = bold, label=""];
5->8 [style = bold, label=""];
7->10 [style = solid, label="data"];
0->20 [style = solid, label="dataWithBrokerEntryMetadata"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
16->7 [style = bold, label=""];
3->11 [style = bold, label=""];
18->19 [style = bold, label=""];
9->6 [style = solid, label="content"];
7->0 [style = solid, label="byteBuf"];
19->17 [style = bold, label=""];
7->4 [style = bold, label=""];
15->16 [style = bold, label=""];
12->1 [style = bold, label=""];
1->7 [style = bold, label=""];
13->1 [style = bold, label=""];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
2->3 [style = solid, label="dataWithBrokerEntryMetadata"];
9->10 [style = solid, label="content"];
19->8 [style = solid, label="content"];
20->18 [style = bold, label=""];
11->5 [style = bold, label=""];
19->17 [style = solid, label="content"];
16->8 [style = solid, label="data"];
4->2 [style = solid, label="byteBuf"];
2->14 [style = solid, label="dataWithBrokerEntryMetadata"];
2->0 [style = dashed, label="0"];
6->10 [style = bold, label=""];
2->14 [style = bold, label=""];
3->20 [style = dashed, label="0"];
8->9 [style = bold, label=""];
0->20 [style = bold, label=""];
3->14 [style = dashed, label="0"];
14->11 [style = bold, label=""];
1->5 [style = solid, label="MOCK_BATCH_SIZE"];
1->2 [style = solid, label="MOCK_BATCH_SIZE"];
}
