digraph {
3 [style = filled, label = "descriptor.isRepeated()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List result = new ArrayList()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return singularToFieldSetType(value)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "toFieldSetType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Object element@@@6@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fromFieldSetType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "return result@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return value@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Object element@@@6@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "result.add(singularToFieldSetType(element))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "fromFieldSetType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return singularFromFieldSetType(value)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "descriptor.getLiteJavaType() == WireFormat.JavaType.ENUM@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "(List)value@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final Object value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List result = new ArrayList<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "result.add(singularFromFieldSetType(element))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Object value@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "(List)value@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->17 [style = dotted, label="true"];
5->14 [style = dotted, label="true"];
5->8 [style = bold, label=""];
4->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
4->8 [style = solid, label="value"];
0->17 [style = bold, label=""];
5->10 [style = dotted, label="true"];
17->9 [style = bold, label=""];
5->6 [style = dotted, label="true"];
0->11 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
5->0 [style = dotted, label="true"];
5->12 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
15->3 [style = bold, label=""];
16->8 [style = solid, label="value"];
7->3 [style = bold, label=""];
0->9 [style = solid, label="result"];
3->18 [style = bold, label=""];
3->5 [style = bold, label=""];
5->11 [style = dotted, label="true"];
3->5 [style = dotted, label="true"];
3->18 [style = dotted, label="false"];
0->10 [style = bold, label=""];
13->3 [style = bold, label=""];
5->0 [style = bold, label=""];
11->10 [style = bold, label=""];
11->9 [style = solid, label="result"];
7->4 [style = dotted, label="true"];
10->17 [style = dashed, label="0"];
5->9 [style = dotted, label="true"];
10->9 [style = bold, label=""];
16->18 [style = solid, label="value"];
5->11 [style = bold, label=""];
5->8 [style = dotted, label="false"];
3->1 [style = dotted, label="false"];
4->1 [style = solid, label="value"];
13->4 [style = dotted, label="true"];
5->2 [style = dotted, label="true"];
}
