digraph {
15 [style = filled, label = "System.out.println(\"Waiting until going online is in progress...\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "onlineNodeShouldSucceedOnDisconnectingNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "onlineNodeShouldSucceedOnDisconnectingNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DumbSlave slave = j.createSlave(\"aNode\",\"\",null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "slave.toComputer().isConnecting()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "slave.toComputer().disconnect()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "slave.toComputer().isConnecting()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.println(\"Waiting until online in progress...\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(result,succeededSilently())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "System.out.println(\"Waiting until going online is in progress...\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "onlineNodeShouldSucceedOnOnlineNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "System.out.println(\"Waiting until online in progress...\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(false))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
5->10 [style = bold, label=""];
16->0 [style = bold, label=""];
10->15 [style = bold, label=""];
15->7 [style = bold, label=""];
4->6 [style = bold, label=""];
11->15 [style = dashed, label="0"];
4->0 [style = dotted, label="true"];
1->3 [style = bold, label=""];
9->5 [style = solid, label="result"];
6->0 [style = bold, label=""];
5->18 [style = bold, label=""];
7->8 [style = bold, label=""];
2->12 [style = bold, label=""];
1->9 [style = bold, label=""];
10->18 [style = dashed, label="0"];
10->15 [style = dotted, label="true"];
3->9 [style = bold, label=""];
17->12 [style = bold, label=""];
6->16 [style = dashed, label="0"];
10->8 [style = bold, label=""];
12->4 [style = bold, label=""];
10->11 [style = dotted, label="true"];
13->5 [style = solid, label="result"];
0->1 [style = bold, label=""];
14->12 [style = bold, label=""];
9->13 [style = dashed, label="0"];
13->5 [style = bold, label=""];
9->5 [style = bold, label=""];
3->13 [style = bold, label=""];
4->1 [style = bold, label=""];
4->16 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
11->7 [style = bold, label=""];
4->16 [style = bold, label=""];
10->11 [style = bold, label=""];
}
