digraph {
18 [style = filled, label = "return copy@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String key = prop.getKey()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Schema.Field field@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "copy.addAlias(field.name())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "copyField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "copy.addProp(prop.getKey(),prop.getValue())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "!Objects.equals(key,AvroSchemaUtil.FIELD_ID_PROP)@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "String newName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Schema newSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Schema.Field field@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "copyField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return copy@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Schema newSchema@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "!newName.equals(field.name())@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Schema.Field copy = new Schema.Field(field.name(),newSchema,field.doc(),field.defaultVal(),field.order())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "copyField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Schema.Field field@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Schema.Field copy = new Schema.Field(newName,newSchema,field.doc(),field.defaultVal(),field.order())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "copy.addProp(key,prop.getValue())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "key != AvroSchemaUtil.FIELD_ID_PROP@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
16->11 [style = bold, label=""];
4->1 [style = dotted, label="true"];
7->16 [style = dashed, label="0"];
2->1 [style = solid, label="key"];
2->4 [style = solid, label="key"];
16->18 [style = solid, label="copy"];
5->6 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
5->3 [style = dotted, label="true"];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
9->6 [style = dotted, label="true"];
2->4 [style = bold, label=""];
4->0 [style = bold, label=""];
9->8 [style = dotted, label="true"];
7->0 [style = solid, label="copy"];
12->13 [style = bold, label=""];
12->13 [style = dotted, label="true"];
6->7 [style = solid, label="newSchema"];
17->15 [style = dotted, label="true"];
7->2 [style = bold, label=""];
10->0 [style = bold, label=""];
6->19 [style = dashed, label="0"];
12->18 [style = bold, label=""];
17->19 [style = dotted, label="true"];
5->7 [style = bold, label=""];
2->11 [style = dashed, label="0"];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
15->16 [style = solid, label="newName"];
1->2 [style = bold, label=""];
10->1 [style = dotted, label="true"];
4->10 [style = dashed, label="0"];
10->1 [style = bold, label=""];
17->16 [style = bold, label=""];
13->18 [style = bold, label=""];
19->16 [style = solid, label="newSchema"];
}
