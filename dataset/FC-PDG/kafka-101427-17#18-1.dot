digraph {
7 [style = filled, label = "i < 2@@@56@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "getter.init(driver.context())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "joined = table1.outerJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@68@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KStreamBuilder builder = new KStreamBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "KTable<Integer,String> table1 = builder.table(intSerde,stringSerde,topic1,storeName1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "driver.flushState()@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "final KStreamBuilder builder = new KStreamBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "table2 = builder.table(intSerde,stringSerde,topic2,storeName2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int i = 0@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Collection<Set<String>> copartitionGroups = builder.copartitionGroups()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "driver.flushState()@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "i++@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "KTable<Integer,String> table2 = builder.table(intSerde,stringSerde,topic2,storeName2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "KTable<Integer,String> table2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i < 2@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < 2@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "KTable<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "driver.flushState()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "processor.checkAndClearProcessResult(\"1:null\",\"2:null+YY2\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 1@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "i++@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "table1 = builder.table(intSerde,stringSerde,topic1,storeName1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < 3@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "driver.flushState()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.process(topic1,expectedKeys(i(,null)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.flushState()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "driver.flushState()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver = new KStreamTestDriver(builder,stateDir)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "i++@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int i = 0@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "driver.flushState()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "KTable<Integer,String> table1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,null),kv(2,\"null+YY2\"),kv(3,\"XX3+YY3\"))@@@80@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "driver.setTime(0L)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "driver.flushState()@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b18fb7@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->46 [style = solid, label="i"];
4->11 [style = solid, label="builder"];
53->7 [style = solid, label="i"];
44->35 [style = bold, label=""];
1->27 [style = bold, label=""];
15->23 [style = solid, label="getter"];
59->31 [style = bold, label=""];
30->62 [style = solid, label="i"];
57->41 [style = bold, label=""];
56->70 [style = dashed, label="0"];
35->16 [style = dotted, label="true"];
15->60 [style = solid, label="getter"];
55->48 [style = bold, label=""];
21->26 [style = bold, label=""];
46->21 [style = bold, label=""];
68->11 [style = solid, label="builder"];
3->26 [style = solid, label="i"];
23->52 [style = bold, label=""];
30->51 [style = solid, label="i"];
0->24 [style = bold, label=""];
13->45 [style = bold, label=""];
28->25 [style = bold, label=""];
21->46 [style = solid, label="i"];
62->0 [style = solid, label="i"];
22->13 [style = bold, label=""];
61->49 [style = bold, label=""];
32->56 [style = bold, label=""];
26->46 [style = bold, label=""];
68->39 [style = bold, label=""];
38->11 [style = bold, label=""];
7->40 [style = dotted, label="true"];
16->34 [style = bold, label=""];
31->29 [style = bold, label=""];
3->21 [style = solid, label="i"];
62->0 [style = bold, label=""];
7->55 [style = bold, label=""];
43->53 [style = solid, label="i"];
34->35 [style = solid, label="i"];
36->58 [style = bold, label=""];
66->69 [style = bold, label=""];
13->57 [style = bold, label=""];
35->28 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
45->14 [style = bold, label=""];
52->5 [style = bold, label=""];
47->54 [style = bold, label=""];
71->68 [style = bold, label=""];
21->26 [style = solid, label="i"];
39->51 [style = solid, label="expectedKeys"];
15->9 [style = bold, label=""];
39->46 [style = solid, label="expectedKeys"];
30->0 [style = solid, label="i"];
39->66 [style = bold, label=""];
9->44 [style = bold, label=""];
15->27 [style = solid, label="getter"];
49->3 [style = bold, label=""];
70->22 [style = bold, label=""];
26->37 [style = bold, label=""];
0->51 [style = dotted, label="true"];
34->35 [style = bold, label=""];
15->59 [style = solid, label="getter"];
39->20 [style = bold, label=""];
15->50 [style = solid, label="getter"];
17->8 [style = bold, label=""];
29->61 [style = bold, label=""];
26->46 [style = dotted, label="true"];
15->12 [style = solid, label="getter"];
27->43 [style = bold, label=""];
40->53 [style = bold, label=""];
51->62 [style = bold, label=""];
4->39 [style = bold, label=""];
39->40 [style = solid, label="expectedKeys"];
3->26 [style = bold, label=""];
15->17 [style = solid, label="getter"];
19->10 [style = bold, label=""];
2->60 [style = bold, label=""];
33->57 [style = bold, label=""];
43->40 [style = solid, label="i"];
63->24 [style = bold, label=""];
15->49 [style = solid, label="getter"];
43->7 [style = bold, label=""];
32->69 [style = dashed, label="0"];
11->67 [style = bold, label=""];
58->38 [style = bold, label=""];
41->36 [style = bold, label=""];
10->23 [style = bold, label=""];
44->16 [style = solid, label="i"];
0->63 [style = bold, label=""];
37->2 [style = bold, label=""];
30->0 [style = bold, label=""];
4->68 [style = dashed, label="0"];
7->40 [style = bold, label=""];
24->42 [style = bold, label=""];
34->16 [style = solid, label="i"];
48->59 [style = bold, label=""];
44->35 [style = solid, label="i"];
35->16 [style = bold, label=""];
42->50 [style = bold, label=""];
8->19 [style = bold, label=""];
18->17 [style = bold, label=""];
20->32 [style = bold, label=""];
20->66 [style = dashed, label="0"];
65->4 [style = bold, label=""];
12->30 [style = bold, label=""];
44->34 [style = solid, label="i"];
14->33 [style = bold, label=""];
11->15 [style = bold, label=""];
53->40 [style = solid, label="i"];
54->18 [style = bold, label=""];
53->7 [style = bold, label=""];
69->70 [style = solid, label="table2"];
0->62 [style = dotted, label="true"];
39->16 [style = solid, label="expectedKeys"];
25->12 [style = bold, label=""];
13->57 [style = solid, label="processor"];
50->47 [style = bold, label=""];
26->21 [style = dotted, label="true"];
43->7 [style = solid, label="i"];
0->51 [style = bold, label=""];
7->53 [style = dotted, label="true"];
56->22 [style = bold, label=""];
14->33 [style = solid, label="table2"];
35->34 [style = dotted, label="true"];
69->70 [style = bold, label=""];
35->64 [style = bold, label=""];
64->28 [style = bold, label=""];
67->15 [style = bold, label=""];
62->51 [style = solid, label="i"];
}
