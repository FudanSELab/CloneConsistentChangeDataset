digraph {
26 [style = filled, label = "final MatchQuery matchQuery = new MatchQuery(context)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return queryParser.parse(MatchQueryParser.Type.PHRASE_PREFIX,fieldName,value)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "queryParser.setAnalyzer(analyzer)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "SearchExecutionContext context@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "matchQuery.setAnalyzer(analyzer)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "matchQuery.setFuzzyRewriteMethod(QueryParsers.parseRewriteMethod(fuzzyRewrite,null,LoggingDeprecationHandler.INSTANCE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "matchQuery.setFuzzyPrefixLength(prefixLength)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return Queries.maybeApplyMinimumShouldMatch(query,minimumShouldMatch)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "matchQuery.setMaxExpansions(maxExpansions)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "matchQuery.setPhraseSlop(slop)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final Query query = matchQuery.parse(MatchQuery.Type.BOOLEAN_PREFIX,fieldName,value)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "queryParser.setPhraseSlop(slop)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "doToQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "queryParser.setZeroTermsQuery(zeroTermsQuery)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "doToQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "throw new QueryShardException(context,\"(\" + NAME + \"( analyzer (\" + analyzer + \"( not found\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "analyzer != null && context.getIndexAnalyzers().get(analyzer) == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queryParser.setMaxExpansions(maxExpansions)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "matchQuery.setFuzziness(fuzziness)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MatchQuery matchQuery = new MatchQuery(context)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "matchQuery.setOccur(operator.toBooleanClauseOccur())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "analyzer != null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "matchQuery.setMaxExpansions(maxExpansions)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MatchQueryParser queryParser = new MatchQueryParser(context)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "matchQuery.setZeroTermsQuery(zeroTermsQuery)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "doToQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "matchQuery.setTranspositions(fuzzyTranspositions)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
10->15 [style = dashed, label="0"];
5->10 [style = bold, label=""];
6->26 [style = bold, label=""];
4->24 [style = bold, label=""];
4->16 [style = dashed, label="0"];
9->11 [style = bold, label=""];
18->23 [style = bold, label=""];
17->6 [style = bold, label=""];
9->2 [style = bold, label=""];
3->11 [style = solid, label="context"];
11->1 [style = bold, label=""];
2->1 [style = bold, label=""];
3->2 [style = solid, label="context"];
26->1 [style = bold, label=""];
1->20 [style = bold, label=""];
25->4 [style = bold, label=""];
7->20 [style = dashed, label="0"];
8->6 [style = bold, label=""];
1->0 [style = bold, label=""];
1->14 [style = dotted, label="true"];
18->23 [style = solid, label="query"];
21->25 [style = bold, label=""];
15->16 [style = bold, label=""];
24->22 [style = bold, label=""];
19->6 [style = bold, label=""];
1->7 [style = bold, label=""];
17->3 [style = dotted, label="true"];
8->3 [style = dotted, label="true"];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
20->21 [style = bold, label=""];
9->26 [style = bold, label=""];
0->14 [style = dashed, label="0"];
12->13 [style = bold, label=""];
7->5 [style = bold, label=""];
22->18 [style = bold, label=""];
3->9 [style = solid, label="context"];
6->9 [style = dotted, label="true"];
19->3 [style = dotted, label="true"];
6->11 [style = bold, label=""];
3->26 [style = solid, label="context"];
14->12 [style = bold, label=""];
1->12 [style = bold, label=""];
10->4 [style = bold, label=""];
7->12 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
0->20 [style = bold, label=""];
1->14 [style = bold, label=""];
1->0 [style = dotted, label="true"];
13->15 [style = bold, label=""];
2->26 [style = dashed, label="0"];
6->9 [style = bold, label=""];
10->24 [style = dashed, label="0"];
}
