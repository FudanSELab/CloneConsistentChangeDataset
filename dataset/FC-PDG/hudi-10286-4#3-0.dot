digraph {
7 [style = filled, label = "dfs.delete(p,false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Throwable thrown = assertThrows(,null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testExportDatasetWithNoCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<Path> commitFiles = Arrays.stream(dfs.listStatus(new Path(sourcePath + \"/.hoodie\"))).map(null).filter(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "dfs.delete(new Path(sourcePath + \"/\" + PARTITION_PATH),true)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "final Throwable thrown = assertThrows(,null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"The source dataset has 0 partition to snapshot.\",thrown.getMessage())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "dfs().delete(new Path(sourcePath + \"/\" + PARTITION_PATH),true)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testExportDatasetWithNoPartition['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testExportDatasetWithNoPartition['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"No commits present. Nothing to snapshot.\",thrown.getMessage())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3->5 [style = dashed, label="0"];
5->1 [style = bold, label=""];
10->9 [style = bold, label=""];
8->6 [style = bold, label=""];
3->6 [style = dashed, label="0"];
1->0 [style = bold, label=""];
0->9 [style = dashed, label="0"];
6->7 [style = bold, label=""];
3->1 [style = bold, label=""];
7->10 [style = bold, label=""];
4->5 [style = bold, label=""];
2->3 [style = bold, label=""];
}
