digraph {
16 [style = filled, label = "HoodieTableType tableType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "execInsertSql(tableEnv,TestSQL.INSERT_T1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "boolean hiveStylePartitioning@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TableEnvironment tableEnv = batchTableEnv@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testBatchModeUpsertWithoutPartition['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "HoodieTableType tableType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testBatchModeUpsertWithoutPartition['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "List<Row> result2 = CollectionUtil.iterableToList(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String hoodieTableDDL = sql(\"t1\").option(FlinkOptions.PATH,tempFile.getAbsolutePath()).option(FlinkOptions.TABLE_NAME,tableType.name()).noPartition().end()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "String hoodieTableDDL = sql(\"t1\").option(FlinkOptions.PATH,tempFile.getAbsolutePath()).option(FlinkOptions.TABLE_NAME,tableType.name()).withPartition(false).end()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "String hoodieTableDDL = sql(\"t1\").option(FlinkOptions.PATH,tempFile.getAbsolutePath()).option(FlinkOptions.TABLE_NAME,tableType).option(FlinkOptions.HIVE_STYLE_PARTITIONING,hiveStylePartitioning).end()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "execInsertSql(tableEnv,TestSQL.UPDATE_INSERT_T1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tableEnv.executeSql(hoodieTableDDL)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertRowsEquals(result2,TestData.DATA_SET_SOURCE_MERGED)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testBatchModeUpsert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<Row> result1 = CollectionUtil.iterableToList(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertRowsEquals(result1,TestData.DATA_SET_SOURCE_INSERT)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
9->1 [style = solid, label="hoodieTableDDL"];
3->5 [style = solid, label="tableEnv"];
8->16 [style = dashed, label="0"];
15->1 [style = solid, label="hoodieTableDDL"];
7->10 [style = bold, label=""];
2->0 [style = solid, label="result2"];
3->15 [style = bold, label=""];
3->12 [style = bold, label=""];
12->1 [style = bold, label=""];
12->1 [style = solid, label="hoodieTableDDL"];
4->7 [style = bold, label=""];
14->13 [style = dotted, label="true"];
3->9 [style = bold, label=""];
14->16 [style = dotted, label="true"];
2->0 [style = bold, label=""];
11->3 [style = bold, label=""];
6->8 [style = dotted, label="true"];
4->7 [style = solid, label="result1"];
5->4 [style = bold, label=""];
3->10 [style = solid, label="tableEnv"];
11->8 [style = dotted, label="true"];
10->2 [style = bold, label=""];
9->12 [style = dashed, label="0"];
9->1 [style = bold, label=""];
9->15 [style = dashed, label="0"];
15->1 [style = bold, label=""];
}
