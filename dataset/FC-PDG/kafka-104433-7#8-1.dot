digraph {
7 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(3L,context.log.endOffset().offset)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "context.client.poll()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "context.deliverResponse(correlationId,otherNodeId,response)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).appendToLog(0L,lastEpoch,singletonList(\"foo\")).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.pollUntilSend()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testFollowerLogReconciliation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int correlationId = context.assertSentFetchRequest(epoch,3L,lastEpoch)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "context.pollUntilRequest()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(2L,context.log.endOffset().offset)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "context.client.poll()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "context.assertSentFetchRequest(epoch,1L,lastEpoch)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int epoch = 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int lastEpoch = 3@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).appendToLog(0L,lastEpoch,Arrays.asList(\"foo\",\"bar\")).appendToLog(2L,lastEpoch,Arrays.asList(\"baz\")).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "FetchResponseData response = context.outOfRangeFetchRecordsResponse(epoch,otherNodeId,2L,lastEpoch,1L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "context.assertSentFetchRequest(epoch,2L,lastEpoch)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9->12 [style = solid, label="lastEpoch"];
4->9 [style = bold, label=""];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
4->6 [style = solid, label="epoch"];
4->12 [style = solid, label="epoch"];
0->6 [style = bold, label=""];
11->1 [style = bold, label=""];
9->15 [style = solid, label="lastEpoch"];
2->1 [style = bold, label=""];
8->19 [style = bold, label=""];
9->6 [style = solid, label="lastEpoch"];
0->12 [style = bold, label=""];
12->17 [style = bold, label=""];
1->3 [style = bold, label=""];
21->8 [style = bold, label=""];
3->8 [style = solid, label="otherNodeId"];
3->17 [style = solid, label="otherNodeId"];
20->14 [style = bold, label=""];
17->18 [style = solid, label="response"];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
3->18 [style = solid, label="otherNodeId"];
0->10 [style = dashed, label="0"];
19->0 [style = bold, label=""];
6->12 [style = dashed, label="0"];
8->0 [style = bold, label=""];
4->17 [style = solid, label="epoch"];
9->17 [style = solid, label="lastEpoch"];
7->5 [style = bold, label=""];
3->7 [style = solid, label="otherNodeId"];
16->1 [style = bold, label=""];
12->18 [style = solid, label="correlationId"];
4->8 [style = solid, label="epoch"];
18->13 [style = bold, label=""];
4->15 [style = solid, label="epoch"];
5->21 [style = dashed, label="0"];
7->21 [style = bold, label=""];
14->15 [style = bold, label=""];
1->7 [style = solid, label="localId"];
17->18 [style = bold, label=""];
13->20 [style = bold, label=""];
}
