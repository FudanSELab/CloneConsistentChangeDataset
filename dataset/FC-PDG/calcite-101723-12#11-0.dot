digraph {
6 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "terms.set(i,t2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "!simplify.allowedAsPredicateDuringOrSimplification(t)@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "allowedAsPredicateDuringOrSimplification(t)@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RexNode t2 = simplify.simplify(t,unknownAs)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "simplifyOrTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < terms.size()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "simplifyAndTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_TRUE,t2),RexUnknownAs.UNKNOWN)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final RexNode t = terms.get(i)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RexNode t = terms.get(i)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Predicate.of(t) == null@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "simplifyOrTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "!allowedAsPredicateDuringOrSimplification(t)@@@8@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "RexSimplify simplify = this@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RexNode t = terms.get(i)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Predicate.of(t) != null@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8->19 [style = solid, label="t"];
29->26 [style = solid, label="t"];
18->3 [style = bold, label=""];
3->24 [style = bold, label=""];
16->27 [style = dashed, label="0"];
3->8 [style = solid, label="i"];
4->29 [style = solid, label="i"];
19->6 [style = solid, label="i"];
3->4 [style = bold, label=""];
7->4 [style = solid, label="i"];
7->16 [style = solid, label="i"];
12->0 [style = solid, label="inverse"];
4->2 [style = solid, label="i"];
19->24 [style = bold, label=""];
1->13 [style = dotted, label="true"];
17->6 [style = solid, label="simplify"];
15->8 [style = dashed, label="0"];
5->31 [style = solid, label="i"];
15->11 [style = bold, label=""];
9->6 [style = solid, label="unknownAs"];
2->14 [style = bold, label=""];
18->3 [style = dotted, label="true"];
32->30 [style = dotted, label="true"];
5->19 [style = solid, label="i"];
3->6 [style = solid, label="simplify"];
19->8 [style = solid, label="i"];
15->11 [style = solid, label="t"];
20->13 [style = dotted, label="true"];
23->26 [style = solid, label="unknownAs"];
24->8 [style = dotted, label="true"];
19->15 [style = solid, label="i"];
27->25 [style = bold, label=""];
24->5 [style = dotted, label="true"];
3->31 [style = solid, label="i"];
10->12 [style = solid, label="t2"];
25->31 [style = solid, label="simplify"];
0->3 [style = bold, label=""];
28->18 [style = bold, label=""];
18->16 [style = dotted, label="true"];
31->5 [style = bold, label=""];
14->10 [style = bold, label=""];
14->22 [style = dashed, label="0"];
0->3 [style = solid, label="newPredicates"];
7->18 [style = solid, label="i"];
4->18 [style = bold, label=""];
29->28 [style = solid, label="t"];
7->29 [style = solid, label="i"];
9->10 [style = solid, label="unknownAs"];
1->17 [style = bold, label=""];
21->6 [style = solid, label="unknownAs"];
26->27 [style = bold, label=""];
22->18 [style = bold, label=""];
10->16 [style = solid, label="t2"];
18->26 [style = dotted, label="true"];
23->31 [style = solid, label="unknownAs"];
7->27 [style = solid, label="i"];
18->0 [style = dotted, label="true"];
5->24 [style = solid, label="i"];
11->8 [style = bold, label=""];
14->18 [style = bold, label=""];
24->19 [style = dotted, label="true"];
24->8 [style = bold, label=""];
32->17 [style = bold, label=""];
18->27 [style = dotted, label="true"];
8->19 [style = dotted, label="true"];
18->29 [style = dotted, label="true"];
5->8 [style = solid, label="i"];
3->24 [style = solid, label="i"];
25->26 [style = solid, label="simplify"];
8->15 [style = bold, label=""];
3->5 [style = solid, label="i"];
7->2 [style = solid, label="i"];
4->18 [style = solid, label="i"];
8->31 [style = solid, label="t"];
8->15 [style = dotted, label="true"];
28->26 [style = bold, label=""];
17->12 [style = solid, label="simplify"];
18->10 [style = dotted, label="true"];
8->6 [style = dotted, label="true"];
4->16 [style = solid, label="i"];
10->16 [style = bold, label=""];
17->26 [style = solid, label="simplify"];
5->24 [style = bold, label=""];
1->9 [style = dotted, label="true"];
2->29 [style = dashed, label="0"];
22->10 [style = bold, label=""];
7->18 [style = bold, label=""];
8->11 [style = dotted, label="true"];
4->26 [style = solid, label="i"];
27->25 [style = solid, label="newPredicates"];
17->10 [style = solid, label="simplify"];
3->10 [style = solid, label="simplify"];
18->2 [style = dotted, label="true"];
18->22 [style = dotted, label="true"];
5->8 [style = bold, label=""];
20->17 [style = bold, label=""];
18->25 [style = dotted, label="true"];
15->6 [style = solid, label="t"];
19->31 [style = bold, label=""];
2->10 [style = solid, label="t"];
8->19 [style = bold, label=""];
32->23 [style = dotted, label="true"];
3->12 [style = solid, label="simplify"];
11->6 [style = bold, label=""];
24->31 [style = dotted, label="true"];
25->4 [style = bold, label=""];
4->27 [style = solid, label="i"];
6->19 [style = bold, label=""];
20->21 [style = dotted, label="true"];
18->2 [style = bold, label=""];
12->0 [style = bold, label=""];
17->31 [style = solid, label="simplify"];
18->14 [style = dotted, label="true"];
19->8 [style = bold, label=""];
29->28 [style = bold, label=""];
17->7 [style = bold, label=""];
18->29 [style = bold, label=""];
10->26 [style = dashed, label="0"];
18->12 [style = dotted, label="true"];
5->15 [style = solid, label="i"];
18->28 [style = dotted, label="true"];
18->5 [style = bold, label=""];
18->4 [style = dotted, label="true"];
2->22 [style = bold, label=""];
21->10 [style = solid, label="unknownAs"];
5->6 [style = solid, label="i"];
7->26 [style = solid, label="i"];
16->12 [style = bold, label=""];
13->30 [style = dashed, label="0"];
}
