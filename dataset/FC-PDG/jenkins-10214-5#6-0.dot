digraph {
14 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,2,-3', expected string with a range M-N\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-1,2,3\" is not a valid option\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\",2,3\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,-2,3', expected string with a range M-N\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,-2,3\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsNegative['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,,3', expected correct notation M,N or M-N\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,2,', expected correct notation M,N or M-N\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse ',2,3', expected correct notation M,N or M-N\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(result,failedWith(2))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(result,failedWith(3))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2,-3\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,,3\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,2,-3', expected string with a range M-N\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(result,failedWith(3))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(result,failedWith(3))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,-2,3', expected string with a range M-N\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsNegative['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2,\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-1,2,3\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
10->15 [style = dashed, label="0"];
2->20 [style = bold, label=""];
19->18 [style = bold, label=""];
5->14 [style = dashed, label="0"];
12->23 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
23->1 [style = solid, label="result"];
3->21 [style = dashed, label="0"];
9->2 [style = bold, label=""];
18->17 [style = solid, label="result"];
11->21 [style = bold, label=""];
22->9 [style = bold, label=""];
23->4 [style = bold, label=""];
18->17 [style = bold, label=""];
0->11 [style = bold, label=""];
7->0 [style = bold, label=""];
22->9 [style = solid, label="result"];
2->10 [style = bold, label=""];
8->9 [style = solid, label="result"];
0->17 [style = dashed, label="0"];
8->2 [style = solid, label="result"];
5->16 [style = dashed, label="0"];
8->22 [style = dashed, label="0"];
20->23 [style = bold, label=""];
12->4 [style = bold, label=""];
7->11 [style = solid, label="result"];
11->3 [style = bold, label=""];
7->0 [style = solid, label="result"];
10->12 [style = bold, label=""];
13->7 [style = bold, label=""];
21->22 [style = bold, label=""];
18->11 [style = solid, label="result"];
3->8 [style = bold, label=""];
1->16 [style = bold, label=""];
2->15 [style = bold, label=""];
8->9 [style = bold, label=""];
12->1 [style = solid, label="result"];
10->20 [style = dashed, label="0"];
1->14 [style = bold, label=""];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
22->2 [style = solid, label="result"];
12->4 [style = solid, label="result"];
6->7 [style = bold, label=""];
23->4 [style = solid, label="result"];
17->11 [style = bold, label=""];
}
