digraph {
14 [style = filled, label = "Preconditions.checkArgument(endpointKeys.size() > 0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<String> serviceKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<String> serviceKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return left(io.vavr.collection.Stream.concat(serviceKeys,instanceKeys).asJava())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "instance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "instance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "endpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return left(io.vavr.collection.Stream.concat(serviceKeys,endpointKeys).asJava())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<String> instanceKeys@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this == EMPTY@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<String> serviceKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ExpressionParsingContext.get().ifPresent(null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Preconditions.checkArgument(serviceKeys.size() > 0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "this.context.setMeterEntity(MeterEntity.newEndpoint(dim(serviceKeys),dim(endpointKeys)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return EMPTY@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ExpressionParsingContext.get().ifPresent(null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "this.context.setMeterEntity(MeterEntity.newServiceInstance(dim(serviceKeys),dim(instanceKeys)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Preconditions.checkArgument(instanceKeys.size() > 0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<String> endpointKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11->7 [style = dotted, label="true"];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
4->14 [style = bold, label=""];
2->5 [style = bold, label=""];
16->13 [style = dotted, label="true"];
7->17 [style = dashed, label="0"];
16->17 [style = dotted, label="true"];
0->2 [style = bold, label=""];
17->15 [style = solid, label="serviceKeys"];
11->4 [style = bold, label=""];
11->9 [style = dotted, label="true"];
3->12 [style = bold, label=""];
15->18 [style = bold, label=""];
0->15 [style = bold, label=""];
3->0 [style = bold, label=""];
13->15 [style = solid, label="endpointKeys"];
1->7 [style = dotted, label="true"];
12->10 [style = bold, label=""];
9->5 [style = solid, label="serviceKeys"];
14->0 [style = bold, label=""];
10->0 [style = bold, label=""];
2->15 [style = bold, label=""];
1->6 [style = dotted, label="true"];
8->18 [style = dashed, label="0"];
0->2 [style = dotted, label="true"];
16->4 [style = bold, label=""];
6->5 [style = solid, label="serviceKeys"];
3->14 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
7->5 [style = solid, label="instanceKeys"];
0->5 [style = bold, label=""];
}
