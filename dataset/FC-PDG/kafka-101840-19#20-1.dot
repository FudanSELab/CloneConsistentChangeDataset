digraph {
1 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"d\" + expectedKey,time))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+f0 (ts: 1000)\",\"1:A1+f1 (ts: 1001)\",\"2:A2+f2 (ts: 1002)\",\"3:A3+f3 (ts: 1003)\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "processor.checkAndClearProcessResult(\"1:A1+g1 (ts: 1001)\",\"2:A2+g2 (ts: 1002)\",\"3:A3+g3 (ts: 1003)\")@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+e0 (ts: 1000)\",\"1:A1+e1 (ts: 1001)\",\"2:A2+e2 (ts: 1002)\",\"3:A3+e3 (ts: 1003)\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"c\" + expectedKey,time))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"a\" + expectedKey,time))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "processor.checkAndClearProcessResult(\"3:A3+i3 (ts: 1103)\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"h\" + expectedKey,time))@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 1001)\",\"1:A1+c1 (ts: 1001)\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"g\" + expectedKey,time))@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "time += 1L@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b9cd6a@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "time += 1L@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "time += 1L@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+e0 (ts: 1003)\",\"1:A1+e1 (ts: 1003)\",\"2:A2+e2 (ts: 1003)\",\"3:A3+e3 (ts: 1003)\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+f0 (ts: 1100)\",\"1:A1+f1 (ts: 1100)\",\"2:A2+f2 (ts: 1100)\",\"3:A3+f3 (ts: 1100)\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "time = 1000L - 1L@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"f\" + expectedKey,time))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "processor.checkAndClearProcessResult(\"2:A2+h2 (ts: 1102)\",\"3:A3+h3 (ts: 1102)\")@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "i < expectedKeys.length@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).after(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"i\" + expectedKey,time))@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+d0 (ts: 1002)\",\"1:A1+d1 (ts: 1002)\",\"2:A2+d2 (ts: 1002)\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "time = 1000L - 100L - 1L@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "time = 1000 + 100L@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).before(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "time += 1L@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+b0 (ts: 1000)\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i(,time + i))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long time = 1000L@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "time += 1L@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"j\" + expectedKey,time))@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "processor.checkAndClearProcessResult()@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testAsymmetricWindowingAfter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "processor.checkAndClearProcessResult(\"3:A3+i3 (ts: 1003)\")@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testAsymmetricWindowingAfter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+d0 (ts: 1000)\",\"1:A1+d1 (ts: 1001)\",\"2:A2+d2 (ts: 1002)\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"e\" + expectedKey,time))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testAsymmetricWindowingBefore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "processor.checkAndClearProcessResult(\"1:A1+g1 (ts: 1101)\",\"2:A2+g2 (ts: 1101)\",\"3:A3+g3 (ts: 1101)\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "time = 1000L@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 1000)\",\"1:A1+c1 (ts: 1001)\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "processor.checkAndClearProcessResult(\"2:A2+h2 (ts: 1002)\",\"3:A3+h3 (ts: 1003)\")@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "processor.checkAndClearProcessResult()@@@76@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "processor.checkAndClearProcessResult()@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "time += 1L@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey,time))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "time += 1L@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "time += 1L@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50->40 [style = solid, label="i"];
13->56 [style = dashed, label="0"];
17->59 [style = dashed, label="0"];
18->9 [style = solid, label="time"];
55->47 [style = bold, label=""];
42->45 [style = bold, label=""];
15->25 [style = bold, label=""];
56->3 [style = bold, label=""];
43->42 [style = bold, label=""];
38->4 [style = bold, label=""];
1->20 [style = bold, label=""];
24->34 [style = bold, label=""];
24->27 [style = solid, label="expectedKeys"];
40->36 [style = dotted, label="true"];
2->64 [style = dashed, label="0"];
31->55 [style = dashed, label="0"];
45->6 [style = solid, label="time"];
45->6 [style = bold, label=""];
65->16 [style = bold, label=""];
41->64 [style = bold, label=""];
14->46 [style = bold, label=""];
33->35 [style = solid, label="stream2"];
54->5 [style = bold, label=""];
32->11 [style = bold, label=""];
64->60 [style = bold, label=""];
2->28 [style = bold, label=""];
44->51 [style = dashed, label="0"];
50->36 [style = solid, label="i"];
30->43 [style = solid, label="time"];
62->46 [style = bold, label=""];
11->51 [style = bold, label=""];
63->18 [style = bold, label=""];
20->27 [style = solid, label="time"];
23->61 [style = bold, label=""];
11->44 [style = bold, label=""];
59->32 [style = bold, label=""];
32->11 [style = solid, label="time"];
26->14 [style = bold, label=""];
36->40 [style = solid, label="i"];
53->30 [style = bold, label=""];
23->8 [style = bold, label=""];
16->19 [style = bold, label=""];
48->17 [style = bold, label=""];
41->2 [style = bold, label=""];
34->0 [style = bold, label=""];
0->38 [style = bold, label=""];
19->53 [style = dashed, label="0"];
7->24 [style = bold, label=""];
21->65 [style = bold, label=""];
25->37 [style = bold, label=""];
57->7 [style = bold, label=""];
18->9 [style = bold, label=""];
47->41 [style = bold, label=""];
52->7 [style = bold, label=""];
31->47 [style = bold, label=""];
61->29 [style = bold, label=""];
58->15 [style = bold, label=""];
33->58 [style = bold, label=""];
40->21 [style = bold, label=""];
60->12 [style = bold, label=""];
33->58 [style = solid, label="stream2"];
21->54 [style = dashed, label="0"];
10->18 [style = bold, label=""];
36->40 [style = bold, label=""];
3->26 [style = solid, label="time"];
35->15 [style = bold, label=""];
28->12 [style = solid, label="time"];
30->43 [style = bold, label=""];
9->31 [style = bold, label=""];
4->39 [style = bold, label=""];
50->27 [style = solid, label="i"];
36->27 [style = solid, label="i"];
3->26 [style = bold, label=""];
26->62 [style = bold, label=""];
28->12 [style = bold, label=""];
39->33 [style = bold, label=""];
5->16 [style = bold, label=""];
60->12 [style = solid, label="time"];
21->5 [style = bold, label=""];
12->13 [style = bold, label=""];
37->22 [style = bold, label=""];
28->60 [style = dashed, label="0"];
12->56 [style = bold, label=""];
40->27 [style = bold, label=""];
6->10 [style = bold, label=""];
49->7 [style = bold, label=""];
22->1 [style = bold, label=""];
6->63 [style = bold, label=""];
40->27 [style = dotted, label="true"];
35->58 [style = dashed, label="0"];
46->23 [style = bold, label=""];
20->50 [style = bold, label=""];
48->59 [style = bold, label=""];
33->35 [style = bold, label=""];
40->54 [style = bold, label=""];
27->36 [style = bold, label=""];
5->16 [style = solid, label="time"];
29->48 [style = solid, label="time"];
14->62 [style = dashed, label="0"];
17->32 [style = bold, label=""];
16->53 [style = bold, label=""];
9->55 [style = bold, label=""];
47->41 [style = solid, label="time"];
13->3 [style = bold, label=""];
50->40 [style = bold, label=""];
46->23 [style = solid, label="time"];
4->15 [style = solid, label="supplier"];
29->48 [style = bold, label=""];
65->16 [style = solid, label="time"];
8->61 [style = dashed, label="0"];
10->63 [style = dashed, label="0"];
8->29 [style = bold, label=""];
5->65 [style = dashed, label="0"];
19->30 [style = bold, label=""];
}
