digraph {
57 [style = filled, label = "System.out.format(\"Class %f precision = %f\",metrics.labels()(i(,metrics.precision(metrics.labels()(i())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training.rdd())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "model.clearThreshold()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "System.out.println(\"Area under ROC = \" + metrics.areaUnderROC())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "System.out.println(\"F1 Score by threshold: \" + f1Score.collect())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "System.out.println(\"Precision by threshold: \" + precision.collect())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "System.out.println(\"F1 Score = \" + metrics.fMeasure())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "JavaRDD<LabeledPoint> training = splits(0(.cache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(3).run(training.rdd())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "System.out.println(\"Recall = \" + metrics.recall())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Matrix confusion = metrics.confusionMatrix()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SparkContext sc = new SparkContext(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "System.out.println(\"Area under precision-recall curve = \" + metrics.areaUnderPR())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "System.out.format(\"Weighted precision = %f\",metrics.weightedPrecision())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "System.out.format(\"Weighted recall = %f\",metrics.weightedRecall())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "System.out.println(\"F2 Score by threshold: \" + f2Score.toArray())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f1Score = metrics.fMeasureByThreshold().toJavaRDD()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Java Binary Classification Metrics Example\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "System.out.println(\"Precision-recall curve: \" + prc.collect())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "System.out.println(\"Precision by threshold: \" + precision.toArray())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "BinaryClassificationMetrics metrics = new BinaryClassificationMetrics(predictionAndLabels.rdd())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "System.out.format(\"Class %f recall = %f\",metrics.labels()(i(,metrics.recall(metrics.labels()(i())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "JavaRDD<LabeledPoint> data = MLUtils.loadLibSVMFile(sc,path).toJavaRDD()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "System.out.println(\"Precision-recall curve: \" + prc.toArray())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> precision = metrics.precisionByThreshold().toJavaRDD()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Multi class Classification Metrics Example\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "System.out.println(\"F1 Score by threshold: \" + f1Score.toArray())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f2Score = metrics.fMeasureByThreshold(2.0).toJavaRDD()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "System.out.println(\"F2 Score by threshold: \" + f2Score.collect())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "System.out.println(\"ROC curve: \" + roc.collect())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "System.out.println(\"Recall by threshold: \" + recall.toArray())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> prc = metrics.pr().toJavaRDD()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> recall = metrics.recallByThreshold().toJavaRDD()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "System.out.println(\"ROC curve: \" + roc.toArray())@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "i < metrics.labels().length@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "System.out.format(\"Weighted false positive rate = %f\",metrics.weightedFalsePositiveRate())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "System.out.format(\"Class %f F1 score = %f\",metrics.labels()(i(,metrics.fMeasure(metrics.labels()(i())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String path = \"data/mllib/sample_binary_classification_data.txt\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "JavaRDD<LabeledPoint> test = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "System.out.format(\"Weighted F1 score = %f\",metrics.weightedFMeasure())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "i++@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "System.out.println(\"Confusion matrix: \" + confusion)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7ec6f,11L)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> roc = metrics.roc().toJavaRDD()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "System.out.println(\"Precision = \" + metrics.precision())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "JavaRDD<Double> thresholds = precision.map(new Function<Tuple2<Object,Object>,Double>(){public Double call(Tuple2<Object,Object> t){return new Double(t._1().toString())}})@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "System.out.println(\"Recall by threshold: \" + recall.collect())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "String path = \"data/mllib/sample_multiclass_classification_data.txt\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "MulticlassMetrics metrics = new MulticlassMetrics(predictionAndLabels.rdd())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->6 [style = bold, label=""];
56->3 [style = bold, label=""];
41->44 [style = solid, label="confusion"];
21->24 [style = bold, label=""];
24->30 [style = dashed, label="0"];
21->30 [style = bold, label=""];
22->34 [style = dashed, label="0"];
20->27 [style = bold, label=""];
7->26 [style = bold, label=""];
22->8 [style = bold, label=""];
45->53 [style = solid, label="i"];
51->38 [style = solid, label="i"];
30->11 [style = bold, label=""];
8->20 [style = bold, label=""];
45->51 [style = solid, label="i"];
28->46 [style = dashed, label="0"];
24->11 [style = bold, label=""];
36->2 [style = bold, label=""];
45->57 [style = solid, label="i"];
50->55 [style = bold, label=""];
11->13 [style = bold, label=""];
2->14 [style = bold, label=""];
11->33 [style = bold, label=""];
57->38 [style = bold, label=""];
51->53 [style = solid, label="i"];
35->7 [style = bold, label=""];
6->32 [style = bold, label=""];
0->3 [style = bold, label=""];
23->25 [style = bold, label=""];
3->27 [style = solid, label="sc"];
5->23 [style = bold, label=""];
33->15 [style = bold, label=""];
49->53 [style = dotted, label="true"];
14->22 [style = bold, label=""];
56->3 [style = solid, label="conf"];
18->12 [style = bold, label=""];
38->53 [style = bold, label=""];
34->8 [style = bold, label=""];
27->16 [style = bold, label=""];
15->35 [style = bold, label=""];
46->41 [style = bold, label=""];
54->58 [style = bold, label=""];
49->51 [style = dotted, label="true"];
3->10 [style = bold, label=""];
49->57 [style = dotted, label="true"];
3->40 [style = solid, label="sc"];
13->33 [style = dashed, label="0"];
48->5 [style = bold, label=""];
13->15 [style = bold, label=""];
19->32 [style = dashed, label="0"];
31->29 [style = dotted, label="true"];
59->56 [style = bold, label=""];
22->54 [style = dashed, label="0"];
37->47 [style = bold, label=""];
44->42 [style = bold, label=""];
42->37 [style = bold, label=""];
1->35 [style = dashed, label="0"];
0->56 [style = dashed, label="0"];
31->0 [style = bold, label=""];
23->17 [style = solid, label="splits"];
25->17 [style = bold, label=""];
1->7 [style = bold, label=""];
59->29 [style = dotted, label="true"];
24->37 [style = dashed, label="0"];
17->50 [style = bold, label=""];
10->5 [style = bold, label=""];
47->45 [style = bold, label=""];
43->54 [style = bold, label=""];
3->16 [style = solid, label="sc"];
7->36 [style = bold, label=""];
15->1 [style = bold, label=""];
19->21 [style = bold, label=""];
9->29 [style = dotted, label="true"];
52->39 [style = bold, label=""];
32->21 [style = bold, label=""];
9->0 [style = bold, label=""];
53->51 [style = bold, label=""];
45->49 [style = bold, label=""];
39->43 [style = bold, label=""];
58->40 [style = bold, label=""];
14->34 [style = bold, label=""];
6->19 [style = bold, label=""];
51->49 [style = bold, label=""];
51->57 [style = solid, label="i"];
4->28 [style = bold, label=""];
19->44 [style = dashed, label="0"];
0->3 [style = solid, label="conf"];
18->50 [style = dashed, label="0"];
26->2 [style = bold, label=""];
45->49 [style = solid, label="i"];
3->48 [style = bold, label=""];
55->46 [style = bold, label=""];
45->38 [style = solid, label="i"];
49->52 [style = bold, label=""];
12->4 [style = bold, label=""];
51->49 [style = solid, label="i"];
10->48 [style = dashed, label="0"];
26->36 [style = dashed, label="0"];
49->57 [style = bold, label=""];
41->44 [style = bold, label=""];
49->38 [style = dotted, label="true"];
17->18 [style = bold, label=""];
3->58 [style = solid, label="sc"];
}
