digraph {
27 [style = filled, label = "_client = new FlowConfigClient(String.format(\"http://localhost:%s/\",_server.getPort()),transportClientProperties)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Map<String,String> transportClientProperties = Maps.newHashMap()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ConfigBuilder configBuilder = ConfigBuilder.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "transportClientProperties.put(HttpClientFactory.HTTP_REQUEST_TIMEOUT,\"10000\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "_server.startAsync()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "_server = EmbeddedRestliServer.builder().resources(Lists.newArrayList()).injector(injector).build()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "flowCatalog.startAsync()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "_client = new FlowStatusClient(String.format(\"http://localhost:%s/\",_server.getPort()))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(mockListener.getName()).thenReturn(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_SCHEDULER_LISTENER_CLASS)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "flowCatalog.awaitRunning()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "JobStatusRetriever jobStatusRetriever = new TestJobStatusRetriever()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "cleanUpDir(TEST_SPEC_STORE_DIR)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "_testDirectory = Files.createTempDir()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final FlowStatusGenerator flowStatusGenerator = new FlowStatusGenerator(jobStatusRetriever)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "_server.startAsync()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobStatusRetriever jobStatusRetriever = new TestJobStatusRetriever(mock())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "when(mockListener.onAddSpec(any())).thenReturn(new AddSpecResponse(\"\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "_server = EmbeddedRestliServer.builder().resources(Lists.newArrayList()).injector(injector).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final FlowCatalog flowCatalog = new FlowCatalog(config)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final SpecCatalogListener mockListener = mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "configBuilder.addPrimitive(ConfigurationKeys.JOB_CONFIG_FILE_DIR_KEY,_testDirectory.getAbsolutePath()).addPrimitive(FSSpecStore.SPECSTORE_FS_DIR_KEY,TEST_SPEC_STORE_DIR)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Injector injector = Guice.createInjector(new Module(){@Override public void configure(Binder binder){binder.bind().toInstance(new FlowConfigResourceLocalHandler(flowCatalog))binder.bindConstant().annotatedWith(Names.named(FlowConfigsResource.INJECT_READY_TO_USE)).to(Boolean.TRUE)binder.bind().toInstance(new NoopRequesterService(config))}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "flowCatalog.addListener(mockListener)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "_server.awaitRunning()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Config config = configBuilder.build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "_server.awaitRunning()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Injector injector = Guice.createInjector(new Module(){@Override public void configure(Binder binder){binder.bind().toInstance(flowStatusGenerator)}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
22->25 [style = bold, label=""];
21->10 [style = bold, label=""];
6->8 [style = dashed, label="0"];
25->28 [style = bold, label=""];
3->4 [style = solid, label="flowStatusGenerator"];
10->19 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
6->3 [style = solid, label="jobStatusRetriever"];
14->22 [style = bold, label=""];
12->15 [style = bold, label=""];
16->26 [style = bold, label=""];
22->25 [style = solid, label="config"];
19->17 [style = bold, label=""];
13->27 [style = solid, label="transportClientProperties"];
28->12 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
25->23 [style = solid, label="flowCatalog"];
4->7 [style = bold, label=""];
24->20 [style = bold, label=""];
20->18 [style = bold, label=""];
28->29 [style = solid, label="mockListener"];
22->23 [style = solid, label="config"];
7->5 [style = bold, label=""];
23->24 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
7->24 [style = dashed, label="0"];
17->14 [style = bold, label=""];
26->23 [style = bold, label=""];
18->13 [style = bold, label=""];
29->16 [style = bold, label=""];
15->29 [style = bold, label=""];
8->3 [style = solid, label="jobStatusRetriever"];
11->27 [style = bold, label=""];
}
