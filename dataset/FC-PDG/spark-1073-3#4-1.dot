digraph {
11 [style = filled, label = "assertEquals(res.successChunks,Sets.newHashSet(BUFFER_CHUNK_INDEX,FILE_CHUNK_INDEX))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fetchBothChunks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertBufferListsEqual(res.buffers,Lists.newArrayList(bufferChunk))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "res.releaseBuffers()@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(res.failedChunks.isEmpty())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertBufferListsEqual(Arrays.asList(bufferChunk),res.buffers)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(res.successChunks,Sets.newHashSet(BUFFER_CHUNK_INDEX))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "fetchBufferChunk['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertBufferListsEqual(res.buffers,Lists.newArrayList(bufferChunk,fileChunk))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "FetchResult res = fetchChunks(Lists.newArrayList(BUFFER_CHUNK_INDEX,FILE_CHUNK_INDEX))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "fetchBufferChunk['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(Sets.newHashSet(BUFFER_CHUNK_INDEX),res.successChunks)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "FetchResult res = fetchChunks(Lists.newArrayList(BUFFER_CHUNK_INDEX))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "FetchResult res = fetchChunks(Arrays.asList(BUFFER_CHUNK_INDEX))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13->10 [style = bold, label=""];
2->1 [style = bold, label=""];
8->3 [style = bold, label=""];
1->3 [style = bold, label=""];
4->2 [style = bold, label=""];
9->7 [style = bold, label=""];
4->6 [style = dashed, label="0"];
11->2 [style = bold, label=""];
0->10 [style = dashed, label="0"];
2->12 [style = bold, label=""];
6->2 [style = bold, label=""];
1->12 [style = dashed, label="0"];
5->0 [style = bold, label=""];
0->4 [style = bold, label=""];
7->6 [style = bold, label=""];
1->8 [style = dashed, label="0"];
12->3 [style = bold, label=""];
4->11 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
}
