digraph {
12 [style = filled, label = "dataset.setFirstCategoryIndex(0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testGetColumnCount['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "underlying.addValue(1.0,\"R1\",\"C3\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(2,dataset.getColumnCount())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGetColumnCount['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,dataset.getColumnCount())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(0,dataset.getRowCount())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "dataset.setFirstCategoryIndex(2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(0,dataset.getColumnCount())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "underlying.addValue(1.0,\"R1\",\"C1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DefaultCategoryDataset underlying = new DefaultCategoryDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(0,dataset.getRowCount())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,dataset.getColumnCount())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(2,dataset.getColumnCount())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testGetRowCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(1,dataset.getRowCount())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DefaultCategoryDataset<String,String> underlying = new DefaultCategoryDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(0,dataset.getColumnCount())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "underlying.clear()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SlidingCategoryDataset<String,String> dataset = new SlidingCategoryDataset<>(underlying,10,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "underlying.addValue(1.0,\"R1\",\"C2\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,dataset.getColumnCount())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SlidingCategoryDataset dataset = new SlidingCategoryDataset(underlying,10,2)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "underlying.clear()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SlidingCategoryDataset dataset = new SlidingCategoryDataset(underlying,10,5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
15->10 [style = bold, label=""];
15->23 [style = dashed, label="0"];
7->21 [style = dashed, label="0"];
9->2 [style = bold, label=""];
10->24 [style = bold, label=""];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
11->22 [style = dashed, label="0"];
6->0 [style = bold, label=""];
16->17 [style = bold, label=""];
22->23 [style = bold, label=""];
10->6 [style = bold, label=""];
14->1 [style = bold, label=""];
11->15 [style = bold, label=""];
1->11 [style = bold, label=""];
2->13 [style = bold, label=""];
1->22 [style = bold, label=""];
24->20 [style = bold, label=""];
1->22 [style = solid, label="underlying"];
20->21 [style = bold, label=""];
19->1 [style = bold, label=""];
17->18 [style = solid, label="underlying"];
1->17 [style = dashed, label="0"];
12->4 [style = bold, label=""];
5->12 [style = bold, label=""];
3->7 [style = bold, label=""];
11->18 [style = dashed, label="0"];
6->24 [style = dashed, label="0"];
23->10 [style = bold, label=""];
1->11 [style = solid, label="underlying"];
13->8 [style = bold, label=""];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
}
