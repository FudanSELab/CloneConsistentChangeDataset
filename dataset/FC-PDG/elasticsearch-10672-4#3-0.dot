digraph {
34 [style = filled, label = "serverBootstrap.group(new NioEventLoopGroup(workerCount,daemonThreadFactory(settings,HTTP_SERVER_WORKER_THREAD_NAME_PREFIX)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "serverBootstrap.option(ChannelOption.RCVBUF_ALLOCATOR,recvByteBufAllocator)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "bootstrap.option(ChannelOption.SO_SNDBUF,Math.toIntExact(tcpSendBufferSize.getBytes()))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "bootstrap.option(ChannelOption.TCP_NODELAY,TCP_NO_DELAY.get(settings))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ByteSizeValue tcpReceiveBufferSize = TCP_RECEIVE_BUFFER_SIZE.get(settings)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "bootstrap.group(eventLoopGroup)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "createClientBootstrap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ByteSizeValue tcpReceiveBufferSize = SETTING_HTTP_TCP_RECEIVE_BUFFER_SIZE.get(settings)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "bootstrap.option(ChannelOption.SO_KEEPALIVE,TCP_KEEP_ALIVE.get(settings))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tcpSendBufferSize.getBytes() > 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "serverBootstrap.childOption(ChannelOption.RCVBUF_ALLOCATOR,recvByteBufAllocator)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_KEEPALIVE,SETTING_HTTP_TCP_KEEP_ALIVE.get(settings))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final ByteSizeValue tcpSendBufferSize = TCP_SEND_BUFFER_SIZE.get(settings)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "serverBootstrap.channel()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final ByteSizeValue tcpSendBufferSize = SETTING_HTTP_TCP_SEND_BUFFER_SIZE.get(settings)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "serverBootstrap.option(ChannelOption.SO_REUSEADDR,reuseAddress)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_RCVBUF,Math.toIntExact(tcpReceiveBufferSize.getBytes()))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tcpReceiveBufferSize.getBytes() > 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createClientBootstrap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "NioEventLoopGroup eventLoopGroup@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "serverBootstrap.childHandler(configureServerChannelHandler())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "bootstrap.option(ChannelOption.RCVBUF_ALLOCATOR,recvByteBufAllocator)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "serverBootstrap.childOption(ChannelOption.TCP_NODELAY,SETTING_HTTP_TCP_NO_DELAY.get(settings))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "success = true@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "doStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "bootstrap.option(ChannelOption.SO_REUSEADDR,reuseAddress)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_SNDBUF,Math.toIntExact(tcpSendBufferSize.getBytes()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_REUSEADDR,reuseAddress)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Bootstrap bootstrap = new Bootstrap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "bootstrap.group(new NioEventLoopGroup(workerCount,daemonThreadFactory(settings,TRANSPORT_CLIENT_BOSS_THREAD_NAME_PREFIX)))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "bootstrap.option(ChannelOption.SO_RCVBUF,Math.toIntExact(tcpReceiveBufferSize.getBytes()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "bindServer()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "{if (success == false) {doStop()}}@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "serverBootstrap.handler(new ServerChannelExceptionHandler(this))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "serverBootstrap = new ServerBootstrap()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "boolean success = false@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tcpSendBufferSize.getBytes() > 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return bootstrap@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final boolean reuseAddress = SETTING_HTTP_TCP_REUSE_ADDRESS.get(settings)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "bootstrap.channel()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->2 [style = dotted, label="true"];
33->27 [style = bold, label=""];
11->4 [style = bold, label=""];
20->3 [style = bold, label=""];
15->1 [style = bold, label=""];
35->30 [style = bold, label=""];
25->36 [style = bold, label=""];
15->18 [style = bold, label=""];
6->26 [style = dashed, label="0"];
13->0 [style = bold, label=""];
1->12 [style = bold, label=""];
29->35 [style = bold, label=""];
4->5 [style = bold, label=""];
34->23 [style = bold, label=""];
26->20 [style = bold, label=""];
3->21 [style = bold, label=""];
7->6 [style = bold, label=""];
39->38 [style = bold, label=""];
16->15 [style = bold, label=""];
22->36 [style = solid, label="reuseAddress"];
37->33 [style = bold, label=""];
19->22 [style = bold, label=""];
6->13 [style = bold, label=""];
10->21 [style = dashed, label="0"];
2->10 [style = bold, label=""];
8->25 [style = dashed, label="0"];
0->26 [style = dotted, label="true"];
3->32 [style = bold, label=""];
39->38 [style = solid, label="success"];
10->3 [style = bold, label=""];
32->21 [style = bold, label=""];
7->13 [style = bold, label=""];
0->10 [style = bold, label=""];
0->20 [style = bold, label=""];
3->9 [style = solid, label="reuseAddress"];
21->19 [style = bold, label=""];
28->24 [style = bold, label=""];
22->25 [style = bold, label=""];
36->31 [style = bold, label=""];
3->9 [style = bold, label=""];
0->26 [style = bold, label=""];
30->0 [style = bold, label=""];
13->20 [style = dashed, label="0"];
12->11 [style = bold, label=""];
17->18 [style = solid, label="eventLoopGroup"];
23->28 [style = bold, label=""];
22->25 [style = solid, label="reuseAddress"];
18->12 [style = bold, label=""];
0->2 [style = bold, label=""];
9->8 [style = bold, label=""];
27->34 [style = bold, label=""];
24->29 [style = bold, label=""];
31->39 [style = bold, label=""];
2->32 [style = dashed, label="0"];
16->17 [style = dotted, label="true"];
14->15 [style = bold, label=""];
15->8 [style = solid, label="bootstrap"];
5->7 [style = bold, label=""];
9->22 [style = dashed, label="0"];
3->32 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
}
