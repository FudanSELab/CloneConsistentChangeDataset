digraph {
4 [style = filled, label = "Files.copy(ckp,config.getTranslogPath().resolve(Translog.getCommitCheckpointFileName(read.generation)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"payload missmatch\",i,Integer.parseInt(next.getSource().source.utf8ToString()))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "translog.add(new Translog.Index(\"\" + 0,0,primaryTerm.get(),Integer.toString(0).getBytes(Charset.forName(\"UTF-8\"))))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "translog.add(new Translog.Index(\"test\",\"\" + 0,0,primaryTerm.get(),Integer.toString(0).getBytes(Charset.forName(\"UTF-8\"))))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "translog.close()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testRecoverWithUnbackedNextGenAndFutureFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(ex.getMessage(),\"failed to create new translog file\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Files.createFile(config.getTranslogPath().resolve(\"translog-\" + (read.generation + 2) + \".tlog\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TranslogConfig config = translog.getConfig()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(ex.getCause().getClass(),)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tlog.add(new Translog.Index(\"\" + 1,1,primaryTerm.get(),Integer.toString(1).getBytes(Charset.forName(\"UTF-8\"))))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "TranslogException ex = expectThrows(,null)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final TranslogDeletionPolicy deletionPolicy = translog.getDeletionPolicy()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < 1@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(tlog.syncNeeded())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Files.createFile(config.getTranslogPath().resolve(\"translog-\" + (read.generation + 1) + \".tlog\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Translog.Operation next = snapshot.next()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String translogUUID = translog.getTranslogUUID()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Path ckp = config.getTranslogPath().resolve(Translog.CHECKPOINT_FILE_NAME)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(ex.getCause().getClass(),)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "TranslogException ex = expectThrows(,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testRecoverWithUnbackedNextGenInIllegalState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertNotNull(\"operation \" + i + \" must be non-null\",next)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tlog.add(new Translog.Index(\"test\",\"\" + 1,1,primaryTerm.get(),Integer.toString(1).getBytes(Charset.forName(\"UTF-8\"))))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testRecoverWithUnbackedNextGenAndFutureFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Checkpoint read = Checkpoint.read(ckp)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->18 [style = bold, label=""];
13->21 [style = solid, label="i"];
18->7 [style = solid, label="i"];
8->15 [style = bold, label=""];
5->9 [style = bold, label=""];
21->6 [style = bold, label=""];
7->10 [style = bold, label=""];
18->10 [style = solid, label="i"];
21->18 [style = dotted, label="true"];
16->4 [style = solid, label="ckp"];
13->7 [style = solid, label="i"];
6->0 [style = bold, label=""];
25->14 [style = bold, label=""];
16->17 [style = bold, label=""];
21->10 [style = dotted, label="true"];
11->19 [style = bold, label=""];
23->8 [style = bold, label=""];
15->16 [style = bold, label=""];
1->13 [style = bold, label=""];
17->11 [style = bold, label=""];
9->16 [style = bold, label=""];
3->7 [style = solid, label="next"];
15->5 [style = bold, label=""];
6->22 [style = dashed, label="0"];
16->17 [style = solid, label="ckp"];
20->2 [style = bold, label=""];
13->18 [style = solid, label="i"];
11->26 [style = bold, label=""];
19->1 [style = bold, label=""];
26->27 [style = bold, label=""];
13->10 [style = solid, label="i"];
14->23 [style = dashed, label="0"];
22->0 [style = bold, label=""];
3->7 [style = bold, label=""];
21->22 [style = bold, label=""];
21->7 [style = dotted, label="true"];
18->21 [style = solid, label="i"];
12->14 [style = bold, label=""];
21->3 [style = dotted, label="true"];
0->20 [style = bold, label=""];
14->8 [style = bold, label=""];
18->21 [style = bold, label=""];
4->11 [style = bold, label=""];
13->21 [style = bold, label=""];
27->20 [style = bold, label=""];
17->4 [style = bold, label=""];
21->3 [style = bold, label=""];
24->23 [style = bold, label=""];
}
