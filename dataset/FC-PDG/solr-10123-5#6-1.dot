digraph {
9 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'workersParam' parameter of type positive integer but didn't find one\",expression))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'sort' parameter telling us how to join the parallel streams but didn't find one\",expression))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' is not a valid integer.\",expression,nStr))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "workersInt <= 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "workersInt = Integer.parseInt(workersStr)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 3 + (null != zkHostExpression? 1: 0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "1 != streamExpressions.size()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "zkHost = ((StreamExpressionValue)zkHostExpression.getParameter()).getValue()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Comparator<Tuple> comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "init(zkHost,collectionName,stream,workersInt,comp)@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "RankStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "ParallelStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "int workersInt = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "null == nParam || null == nParam.getParameter() || !(nParam.getParameter() instanceof StreamExpressionValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one\",expression))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "null == zkHost@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' must be greater than 0.\",expression,workersStr))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "String nStr = ((StreamExpressionValue)nParam.getParameter()).getValue()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' is not a valid integer.\",expression,workersStr))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Comparator<Tuple> comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "init(stream,nInt,comp)@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "null == collectionName@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - collectionName expected as first operand\",expression))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "objectSerialize = false@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int nInt = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "zkHostExpression.getParameter() instanceof StreamExpressionValue@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "null == zkHostExpression@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String zkHost = null@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "zkHost = factory.getCollectionZkHost(collectionName)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamExpressionNamedParameter zkHostExpression = factory.getNamedOperand(expression,\"zkHost\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ParallelStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "streamFactory = factory@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - zkHost not found for collection '%s'\",expression,collectionName))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "nInt <= 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'n' parameter of type positive integer but didn't find one\",expression))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String workersStr = ((StreamExpressionValue)workersParam.getParameter()).getValue()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "NumberFormatException e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String collectionName = factory.getValueOperand(expression,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "null == workersParam || null == workersParam.getParameter() || !(workersParam.getParameter() instanceof StreamExpressionValue)@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamExpressionNamedParameter workersParam = factory.getNamedOperand(expression,\"workers\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->32 [style = bold, label=""];
34->25 [style = solid, label="expression"];
34->14 [style = solid, label="expression"];
20->52 [style = dashed, label="0"];
11->23 [style = solid, label="zkHost"];
15->21 [style = bold, label=""];
38->34 [style = dotted, label="true"];
10->6 [style = dashed, label="0"];
25->30 [style = bold, label=""];
35->10 [style = dotted, label="true"];
38->39 [style = dotted, label="true"];
34->22 [style = solid, label="expression"];
8->23 [style = solid, label="workersInt"];
56->52 [style = solid, label="nStr"];
31->1 [style = bold, label=""];
49->58 [style = solid, label="expression"];
51->58 [style = dotted, label="true"];
12->9 [style = bold, label=""];
34->5 [style = solid, label="expression"];
39->5 [style = solid, label="expression"];
53->55 [style = dotted, label="true"];
33->13 [style = solid, label="comp"];
32->27 [style = solid, label="zkHost"];
44->51 [style = bold, label=""];
46->51 [style = bold, label=""];
3->5 [style = bold, label=""];
6->26 [style = dotted, label="true"];
36->0 [style = bold, label=""];
39->16 [style = solid, label="expression"];
24->11 [style = bold, label=""];
34->19 [style = solid, label="expression"];
51->47 [style = bold, label=""];
6->41 [style = bold, label=""];
29->14 [style = bold, label=""];
28->23 [style = solid, label="zkHost"];
11->27 [style = bold, label=""];
35->10 [style = bold, label=""];
8->4 [style = bold, label=""];
29->11 [style = solid, label="collectionName"];
22->54 [style = dotted, label="true"];
32->23 [style = solid, label="zkHost"];
19->3 [style = bold, label=""];
27->25 [style = bold, label=""];
39->19 [style = solid, label="expression"];
49->52 [style = solid, label="expression"];
53->49 [style = dotted, label="true"];
31->20 [style = solid, label="workersStr"];
33->13 [style = dotted, label="true"];
47->6 [style = bold, label=""];
27->25 [style = dotted, label="true"];
27->30 [style = bold, label=""];
22->43 [style = bold, label=""];
14->22 [style = bold, label=""];
37->21 [style = bold, label=""];
44->52 [style = dotted, label="true"];
39->25 [style = solid, label="expression"];
0->29 [style = bold, label=""];
29->23 [style = solid, label="collectionName"];
51->58 [style = bold, label=""];
33->13 [style = bold, label=""];
43->45 [style = bold, label=""];
11->27 [style = solid, label="zkHost"];
34->2 [style = solid, label="expression"];
28->27 [style = solid, label="zkHost"];
39->2 [style = solid, label="expression"];
35->28 [style = bold, label=""];
3->5 [style = dotted, label="true"];
59->43 [style = solid, label="nParam"];
8->4 [style = solid, label="workersInt"];
5->45 [style = dashed, label="0"];
15->23 [style = solid, label="comp"];
38->0 [style = bold, label=""];
39->13 [style = solid, label="expression"];
47->41 [style = bold, label=""];
28->24 [style = bold, label=""];
45->56 [style = bold, label=""];
22->54 [style = bold, label=""];
52->51 [style = bold, label=""];
24->7 [style = bold, label=""];
56->40 [style = bold, label=""];
59->48 [style = bold, label=""];
7->32 [style = dotted, label="true"];
12->31 [style = bold, label=""];
4->44 [style = dashed, label="0"];
30->15 [style = bold, label=""];
39->14 [style = solid, label="expression"];
21->23 [style = bold, label=""];
2->17 [style = bold, label=""];
2->17 [style = solid, label="zkHostExpression"];
6->26 [style = bold, label=""];
1->8 [style = bold, label=""];
22->16 [style = bold, label=""];
54->43 [style = bold, label=""];
49->59 [style = solid, label="expression"];
9->31 [style = bold, label=""];
53->42 [style = bold, label=""];
8->57 [style = dashed, label="0"];
49->48 [style = solid, label="expression"];
57->13 [style = solid, label="nInt"];
32->27 [style = bold, label=""];
34->21 [style = solid, label="factory"];
39->10 [style = solid, label="expression"];
3->12 [style = bold, label=""];
39->20 [style = solid, label="expression"];
4->33 [style = bold, label=""];
39->22 [style = solid, label="expression"];
34->13 [style = solid, label="expression"];
24->11 [style = dotted, label="true"];
34->10 [style = solid, label="expression"];
50->46 [style = dotted, label="true"];
29->25 [style = solid, label="collectionName"];
39->29 [style = solid, label="expression"];
34->55 [style = dashed, label="0"];
4->20 [style = bold, label=""];
17->19 [style = dotted, label="true"];
2->24 [style = solid, label="zkHostExpression"];
17->3 [style = bold, label=""];
48->47 [style = solid, label="sortExpression"];
49->42 [style = solid, label="expression"];
30->23 [style = solid, label="stream"];
37->23 [style = solid, label="comp"];
41->33 [style = bold, label=""];
31->8 [style = solid, label="workersStr"];
36->18 [style = dotted, label="true"];
34->16 [style = solid, label="expression"];
42->59 [style = bold, label=""];
39->9 [style = solid, label="expression"];
49->45 [style = solid, label="expression"];
33->35 [style = bold, label=""];
10->28 [style = bold, label=""];
34->29 [style = solid, label="expression"];
49->54 [style = solid, label="expression"];
50->46 [style = bold, label=""];
15->37 [style = dashed, label="0"];
4->20 [style = dotted, label="true"];
48->22 [style = bold, label=""];
49->6 [style = solid, label="expression"];
30->37 [style = bold, label=""];
24->7 [style = dotted, label="false"];
16->2 [style = bold, label=""];
17->19 [style = bold, label=""];
40->57 [style = bold, label=""];
20->33 [style = bold, label=""];
16->35 [style = solid, label="sortExpression"];
58->47 [style = bold, label=""];
34->20 [style = solid, label="expression"];
21->13 [style = dashed, label="0"];
5->12 [style = bold, label=""];
43->45 [style = dotted, label="true"];
57->44 [style = solid, label="nInt"];
3->43 [style = dashed, label="0"];
44->52 [style = bold, label=""];
7->27 [style = bold, label=""];
47->6 [style = dotted, label="true"];
29->3 [style = solid, label="collectionName"];
34->9 [style = solid, label="expression"];
57->44 [style = bold, label=""];
18->21 [style = solid, label="factory"];
12->9 [style = dotted, label="true"];
26->33 [style = bold, label=""];
13->35 [style = bold, label=""];
36->34 [style = dotted, label="true"];
43->56 [style = bold, label=""];
56->57 [style = solid, label="nStr"];
14->12 [style = solid, label="workersParam"];
41->13 [style = solid, label="stream"];
26->46 [style = dashed, label="0"];
}
