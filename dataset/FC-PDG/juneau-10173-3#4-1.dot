digraph {
13 [style = filled, label = "assertOptional(cp.get(\"A.f1.si\")).isNull()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testSetIntegerDefault['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertOptional(cp.get(\"A.f1.si\")).asJson().is(\"(1,2(\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertObject(cp.get(\"A.f1.si\")).asJson().is(\"(1,2(\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testListIntegerDefault['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "System.clearProperty(\"A.f1.si\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "System.setProperty(\"A.f1.si\",\"('2','1'(\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ContextProperties cp = ContextProperties.create().build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertObject(cp.get(\"A.f1.li\")).asJson().is(\"(2,1(\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "cp = ContextProperties.create().build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testSetIntegerDefault['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "System.setProperty(\"A.f1.li\",\"('2','1'(\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertObject(cp.get(\"A.f1.si\")).isNull()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertOptional(cp.get(\"A.f1.si\")).asJson().is(\"(1,2(\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "System.clearProperty(\"A.f1.li\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertObject(cp.get(\"A.f1.li\")).asJson().is(\"(2,1(\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "System.clearProperty(\"A.f1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertObject(cp.get(\"A.f1.li\")).isNull()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "System.setProperty(\"A.f1\",\"('2','1'(\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertObject(cp.get(\"A.f1.si\")).asJson().is(\"(1,2(\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
2->17 [style = bold, label=""];
15->2 [style = bold, label=""];
5->9 [style = bold, label=""];
11->1 [style = bold, label=""];
6->18 [style = bold, label=""];
3->6 [style = bold, label=""];
6->0 [style = bold, label=""];
19->6 [style = bold, label=""];
12->6 [style = bold, label=""];
10->7 [style = bold, label=""];
4->7 [style = bold, label=""];
3->19 [style = dashed, label="0"];
8->1 [style = bold, label=""];
3->12 [style = dashed, label="0"];
7->2 [style = bold, label=""];
1->16 [style = dashed, label="0"];
6->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
16->5 [style = bold, label=""];
9->19 [style = bold, label=""];
9->3 [style = bold, label=""];
8->17 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
9->12 [style = bold, label=""];
8->11 [style = dashed, label="0"];
2->11 [style = bold, label=""];
17->16 [style = bold, label=""];
2->8 [style = bold, label=""];
}
