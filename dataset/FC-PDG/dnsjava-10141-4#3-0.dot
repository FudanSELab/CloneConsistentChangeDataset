digraph {
25 [style = filled, label = "assertEquals(2,sigs.size())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(2,itr.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Record_placement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(m_a1,rs2.first())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(2,itr.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(m_s1,sigs.get(0))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "m_rs.addRR(m_a2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Record_placement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "m_rs.addRR(m_s2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(m_a2,itr.get(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RRset<ARecord> rs2 = new RRset<>(m_rs)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "m_rs.addRR(m_s1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(m_s2,sigs.get(1))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<RRSIGRecord> sigs = rs2.sigs()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<RRSIGRecord> sigs = m_rs.sigs()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(m_a1,itr.get(0))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<Record> itr = m_rs.rrs()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "List<ARecord> itr = m_rs.rrs()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "List<ARecord> itr = rs2.rrs()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "m_rs.addRR(m_a1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ctor_1arg['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "m_rs.addRR(m_s1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(m_a2,itr.get(1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(m_s1,sigs.get(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(m_a1,itr.get(0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(2,rs2.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = bold, label=""];
23->16 [style = bold, label=""];
5->12 [style = dashed, label="0"];
5->9 [style = bold, label=""];
3->21 [style = dashed, label="0"];
0->6 [style = bold, label=""];
1->3 [style = bold, label=""];
21->25 [style = bold, label=""];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
24->22 [style = bold, label=""];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
19->0 [style = bold, label=""];
8->17 [style = bold, label=""];
22->3 [style = bold, label=""];
3->23 [style = bold, label=""];
11->0 [style = bold, label=""];
8->5 [style = bold, label=""];
7->2 [style = bold, label=""];
4->15 [style = dashed, label="0"];
10->0 [style = bold, label=""];
6->8 [style = bold, label=""];
0->8 [style = bold, label=""];
4->1 [style = bold, label=""];
17->13 [style = bold, label=""];
18->21 [style = bold, label=""];
20->24 [style = bold, label=""];
13->14 [style = bold, label=""];
8->12 [style = bold, label=""];
14->20 [style = bold, label=""];
}
