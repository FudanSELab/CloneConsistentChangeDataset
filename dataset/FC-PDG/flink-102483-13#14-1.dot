digraph {
22 [style = filled, label = "testStateBackendClosingOnFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Task task = createTask(,cfg,taskManagerConfig)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(TestStreamSource.rawOperatorStateInputs).close()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(TestStreamSource.keyedStateBackend).close()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Configuration taskManagerConfig = new Configuration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StateBackendTestSource.fail = false@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamConfig cfg = new StreamConfig(new Configuration())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestStreamSource<Long,MockSourceFunction> streamSource = new TestStreamSource<>(new MockSourceFunction())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(ExecutionState.FINISHED,task.getExecutionState())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "taskManagerConfig.setString(CheckpointingOptions.STATE_BACKEND,.getName())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "verify(TestStreamSource.keyedStateBackend).dispose()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testStateBackendLoadingAndClosing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cfg.setStreamOperator(streamSource)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(TestStreamSource.operatorStateBackend).dispose()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "StateBackendTestSource.fail = true@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(ExecutionState.FAILED,task.getExecutionState())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "task.startTaskThread()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testStateBackendLoadingAndClosing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "cfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(TestStreamSource.operatorStateBackend).close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cfg.setStateKeySerializer(mock())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "task.getExecutingThread().join()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(TestStreamSource.rawKeyedStateInputs).close()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cfg.setOperatorID(new OperatorID(4711L,42L))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "taskManagerConfig.setString(CheckpointingOptions.STATE_BACKEND,.getName())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->21 [style = dashed, label="0"];
5->8 [style = bold, label=""];
15->23 [style = bold, label=""];
13->24 [style = bold, label=""];
4->17 [style = bold, label=""];
8->13 [style = solid, label="taskManagerConfig"];
14->19 [style = bold, label=""];
8->6 [style = bold, label=""];
16->23 [style = dashed, label="0"];
9->10 [style = bold, label=""];
15->16 [style = bold, label=""];
7->3 [style = bold, label=""];
11->15 [style = bold, label=""];
1->9 [style = bold, label=""];
19->0 [style = bold, label=""];
3->18 [style = bold, label=""];
6->14 [style = bold, label=""];
22->8 [style = bold, label=""];
12->2 [style = bold, label=""];
20->8 [style = bold, label=""];
17->12 [style = bold, label=""];
1->9 [style = solid, label="streamSource"];
18->4 [style = bold, label=""];
10->13 [style = bold, label=""];
7->24 [style = dashed, label="0"];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
8->21 [style = bold, label=""];
14->13 [style = solid, label="cfg"];
24->3 [style = bold, label=""];
2->11 [style = bold, label=""];
21->14 [style = bold, label=""];
}
