digraph {
2 [style = filled, label = "assertFalse(\"Source 2 still has subscribers!\",source3.hasSubscribers())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PublishSubject<Integer> source2 = PublishSubject.create()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Observable.ambArray(source1,source2,source3).subscribe(to)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(\"Source 1 doesn't have subscribers!\",source1.hasSubscribers())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PublishProcessor<Integer> source3 = PublishProcessor.create()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ambCancelsOthers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(\"Source 2 doesn't have subscribers!\",source2.hasSubscribers())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "source1.onNext(1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PublishProcessor<Integer> source2 = PublishProcessor.create()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(\"Source 1 doesn't have subscribers!\",source1.hasSubscribers())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(\"Source 2 still has subscribers!\",source2.hasSubscribers())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(\"Source 2 doesn't have subscribers!\",source2.hasObservers())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(\"Source 1 doesn't have subscribers!\",source1.hasObservers())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(\"Source 2 still has subscribers!\",source2.hasObservers())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PublishProcessor<Integer> source1 = PublishProcessor.create()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Flowable.ambArray(source1,source2,source3).subscribe(ts)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "PublishSubject<Integer> source3 = PublishSubject.create()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ambCancelsOthers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "PublishSubject<Integer> source1 = PublishSubject.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(\"Source 3 doesn't have subscribers!\",source3.hasSubscribers())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(\"Source 2 still has subscribers!\",source3.hasObservers())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(\"Source 1 doesn't have subscribers!\",source1.hasObservers())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(\"Source 3 doesn't have subscribers!\",source3.hasObservers())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ambCancelsOthers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
14->9 [style = solid, label="ts"];
17->26 [style = bold, label=""];
25->23 [style = bold, label=""];
7->16 [style = dashed, label="0"];
8->15 [style = dashed, label="0"];
11->26 [style = dashed, label="0"];
22->21 [style = bold, label=""];
12->20 [style = bold, label=""];
16->25 [style = bold, label=""];
11->12 [style = bold, label=""];
1->21 [style = dashed, label="0"];
7->4 [style = bold, label=""];
1->7 [style = bold, label=""];
15->18 [style = bold, label=""];
0->22 [style = dashed, label="0"];
9->23 [style = dashed, label="0"];
9->6 [style = bold, label=""];
7->14 [style = bold, label=""];
4->25 [style = dashed, label="0"];
25->23 [style = solid, label="to"];
6->5 [style = bold, label=""];
26->12 [style = bold, label=""];
23->24 [style = bold, label=""];
5->17 [style = dashed, label="0"];
8->2 [style = bold, label=""];
6->24 [style = dashed, label="0"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
10->0 [style = bold, label=""];
3->20 [style = dashed, label="0"];
24->17 [style = bold, label=""];
2->18 [style = dashed, label="0"];
21->16 [style = bold, label=""];
14->9 [style = bold, label=""];
4->14 [style = dashed, label="0"];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
4->9 [style = solid, label="ts"];
20->15 [style = bold, label=""];
19->22 [style = bold, label=""];
13->0 [style = bold, label=""];
}
