digraph {
0 [style = filled, label = "assertIs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.EMPTY_LIST))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "null != expected.getTables() && !expected.getTables().isEmpty()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertIs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final MySQLRevokeStatement actual@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final RevokeStatementTestCase expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(expected.getTables().size(),is(1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertIs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "GrantLevelSegmentAssert.assertIs(assertContext,actual.getLevel(),expected.getTables())@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final MySQLGrantStatement actual@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final GrantStatementTestCase expected@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final GrantStatementTestCase expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13->16 [style = dotted, label="true"];
0->5 [style = dotted, label="true"];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
11->6 [style = bold, label=""];
0->4 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
11->5 [style = dotted, label="true"];
6->7 [style = dotted, label="false"];
9->1 [style = solid, label="assertContext"];
6->2 [style = bold, label=""];
6->12 [style = dotted, label="false"];
5->16 [style = dashed, label="0"];
6->2 [style = dotted, label="true"];
6->10 [style = bold, label=""];
3->1 [style = solid, label="assertContext"];
15->1 [style = solid, label="assertContext"];
7->12 [style = dashed, label="0"];
7->10 [style = dashed, label="0"];
11->8 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
0->3 [style = dotted, label="true"];
6->10 [style = dotted, label="false"];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
13->14 [style = dotted, label="true"];
6->12 [style = bold, label=""];
}
