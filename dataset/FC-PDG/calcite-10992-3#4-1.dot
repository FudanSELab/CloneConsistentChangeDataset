digraph {
5 [style = filled, label = "builder.addRuleInstance(ReduceExpressionsRule.PROJECT_INSTANCE)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sql(sql).withPre(preBuilder.build()).with(hepPlanner).check()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String sql = \"select empno, deptno, w_count from (\" + \" select empno, deptno, count(empno) over (ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) w_count\" + \" from emp\" + \") sub_query where w_count is null\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "HepPlanner hepPlanner = new HepPlanner(builder.build())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String sql = \"select empno, deptno, w_count from (\" + \" select empno, deptno, count(empno) over (w) w_count\" + \" from emp\" + \" window w as (partition by deptno order by empno)\" + \") sub_query where w_count is null\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HepProgramBuilder builder = new HepProgramBuilder()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "preBuilder.addRuleInstance(ProjectToWindowRule.PROJECT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testIsNullPushDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testIsNullPushDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testIsNullPushDown2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HepProgramBuilder preBuilder = new HepProgramBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.addRuleInstance(ReduceExpressionsRule.FILTER_INSTANCE)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->7 [style = bold, label=""];
6->4 [style = bold, label=""];
11->8 [style = bold, label=""];
9->4 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
2->11 [style = bold, label=""];
3->11 [style = dashed, label="0"];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
10->4 [style = bold, label=""];
}
