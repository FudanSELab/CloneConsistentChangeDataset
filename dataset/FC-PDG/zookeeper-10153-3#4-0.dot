digraph {
18 [style = filled, label = "String ipAddress@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "BigInteger serialNumber = new BigInteger(128,new Random())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Date notBefore = new Date()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "cal.setTime(notBefore)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cal.add(Calendar.YEAR,1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JcaX509v3CertificateBuilder jcaX509v3CertificateBuilder = new JcaX509v3CertificateBuilder(nameBuilder.build(),serialNumber,certStartTime,certEndTime,nameBuilder.build(),keyPair.getPublic())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "KeyPair keyPair@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "nameBuilder.addRDN(BCStyle.CN,\"NOT_LOCALHOST\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "!generalNames.isEmpty()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<GeneralName> generalNames = new ArrayList<>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "createSelfSignedCertifcateChain['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ContentSigner contentSigner = new JcaContentSignerBuilder(\"SHA256WithRSAEncryption\").build(keyPair.getPrivate())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(contentSigner))@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "BigInteger serialNumber = new BigInteger(128,new Random())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "certificateBuilder.addExtension(Extension.subjectAlternativeName,true,new GeneralNames(generalNames.toArray(new GeneralName((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3dfcf3)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String hostname@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "createSelfSignedCertifcate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "X500NameBuilder nameBuilder = new X500NameBuilder(BCStyle.INSTANCE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "hostname != null@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "X509v3CertificateBuilder certificateBuilder = jcaX509v3CertificateBuilder.addExtension(Extension.basicConstraints,true,new BasicConstraints(0)).addExtension(Extension.keyUsage,true,new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyCertSign | KeyUsage.cRLSign))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "X509v3CertificateBuilder certificateBuilder = new JcaX509v3CertificateBuilder(nameBuilder.build(),serialNumber,certStartTime,certEndTime,nameBuilder.build(),keyPair.getPublic()).addExtension(Extension.basicConstraints,true,new BasicConstraints(0)).addExtension(Extension.keyUsage,true,new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyCertSign | KeyUsage.cRLSign))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "return new X509Certificate((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3dfd03@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "generalNames.add(new GeneralName(GeneralName.iPAddress,ipAddress))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "createSelfSignedCertifcate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "nameBuilder.addRDN(BCStyle.CN,HOSTNAME)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "generalNames.add(new GeneralName(GeneralName.dNSName,hostname))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Date notAfter = cal.getTime()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "X509v3CertificateBuilder certificateBuilder = new JcaX509v3CertificateBuilder(nameBuilder.build(),serialNumber,notBefore,notAfter,nameBuilder.build(),keyPair.getPublic()).addExtension(Extension.basicConstraints,true,new BasicConstraints(0)).addExtension(Extension.keyUsage,true,new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyCertSign | KeyUsage.cRLSign))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return new JcaX509CertificateConverter().getCertificate(certificateBuilder.build(contentSigner))@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ipAddress != null@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Calendar cal = Calendar.getInstance()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->25 [style = bold, label=""];
25->28 [style = bold, label=""];
17->1 [style = bold, label=""];
5->9 [style = bold, label=""];
17->18 [style = dotted, label="true"];
29->30 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = dotted, label="true"];
18->13 [style = solid, label="ipAddress"];
23->26 [style = bold, label=""];
26->14 [style = bold, label=""];
2->27 [style = dashed, label="0"];
22->28 [style = solid, label="notBefore"];
12->16 [style = bold, label=""];
15->30 [style = bold, label=""];
26->13 [style = dotted, label="true"];
28->12 [style = bold, label=""];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
24->22 [style = bold, label=""];
16->19 [style = bold, label=""];
21->14 [style = solid, label="hostname"];
26->13 [style = bold, label=""];
14->20 [style = dotted, label="true"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
30->11 [style = bold, label=""];
1->6 [style = bold, label=""];
2->9 [style = dashed, label="0"];
0->21 [style = dashed, label="0"];
1->24 [style = bold, label=""];
15->29 [style = dotted, label="true"];
6->24 [style = dashed, label="0"];
19->27 [style = bold, label=""];
18->26 [style = solid, label="ipAddress"];
10->0 [style = dotted, label="true"];
27->23 [style = bold, label=""];
4->1 [style = bold, label=""];
14->15 [style = bold, label=""];
5->9 [style = solid, label="serialNumber"];
30->11 [style = solid, label="contentSigner"];
10->1 [style = bold, label=""];
17->21 [style = dotted, label="true"];
20->15 [style = bold, label=""];
13->14 [style = bold, label=""];
15->29 [style = bold, label=""];
21->20 [style = solid, label="hostname"];
14->20 [style = bold, label=""];
}
