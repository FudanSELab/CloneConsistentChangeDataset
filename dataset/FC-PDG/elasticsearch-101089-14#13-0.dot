digraph {
21 [style = filled, label = "irExpressionNode = irCallSubDefNode@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "SDeclBlock userDeclBlockNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "userCallNode.getArgumentNodes()@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "userCallNode.getArgumentNodes()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "userCallNode.getArgumentNodes()@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "visitDeclBlock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ExpressionNode irExpressionNode@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "irBinaryImplNode.setRightNode(irExpressionNode)@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "irBinaryImplNode.setLeftNode((ExpressionNode)visit(userCallNode.getPrefixNode(),scriptScope))@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ScriptScope scriptScope@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "irInvokeCallNode.setBox(boxType)@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "irNullSafeSubNode.setChildNode(irExpressionNode)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "userCallNode.isNullSafe()@@@32@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "irExpressionNode = irInvokeCallNode@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ScriptScope scriptScope@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "boxType = prefixValueType.getValueType()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Object injection = injections(i(@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Class<?>(( parameterTypes = method.javaMethod.getParameterTypes()@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "visitCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "irNullSafeSubNode.setChildNode(irExpressionNode)@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "InvokeCallNode irInvokeCallNode = new InvokeCallNode(userCallNode.getLocation())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "constantNode.setConstant(injection)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "irInvokeCallNode.addArgumentNode(injectCast(userCallArgumentNode,scriptScope))@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Class<?> boxType@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "scriptScope.putDecoration(userDeclBlockNode,new IRNodeDecoration(irDeclarationBlockNode))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "userCallNode.isNullSafe()@@@49@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "int augmentedOffset = method.javaMethod.getDeclaringClass() == method.targetClass? 0: 1@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "i++@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "irDeclarationBlockNode.addDeclarationNode((DeclarationNode)visit(userDeclarationNode,scriptScope))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boxType = scriptScope.getDecoration(userCallNode.getPrefixNode(),).getStaticType()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ConstantNode constantNode = new ConstantNode(userCallNode.getLocation())@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "throw new IllegalStateException(\"illegal tree structure\")@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "scriptScope.putDecoration(userCallNode,new IRNodeDecoration(irBinaryImplNode))@@@59@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "irCallSubDefNode.addArgumentNode((ExpressionNode)visit(userArgumentNode,scriptScope))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "NullSafeSubNode irNullSafeSubNode = new NullSafeSubNode(irExpressionNode.getLocation())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "irBinaryImplNode.setRightNode(irExpressionNode)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "AExpression userArgumentNode@@@7@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "irInvokeCallNode.setExpressionType(scriptScope.getDecoration(userCallNode,).getValueType())@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AExpression userArgumentNode@@@7@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "irExpressionNode = irNullSafeSubNode@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "irBinaryImplNode.setExpressionType(irExpressionNode.getExpressionType())@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "prefixValueType != null@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Class<?> parameterType = parameterTypes(i + augmentedOffset(@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "int i = 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "irInvokeCallNode.setExpressionType(scriptScope.getDecoration(userCallNode,).getValueType())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "i < injections.length@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "visitCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "NullSafeSubNode irNullSafeSubNode = new NullSafeSubNode(irExpressionNode.getLocation())@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "irCallSubDefNode.setName(userCallNode.getMethodName())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "BinaryImplNode irBinaryImplNode = new BinaryImplNode(irExpressionNode.getLocation())@@@55@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "ScriptScope scriptScope@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "irInvokeCallNode.setMethod(scriptScope.getDecoration(userCallNode,).getStandardPainlessMethod())@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "AExpression userArgumentNode@@@23@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ValueType prefixValueType = scriptScope.getDecoration(userCallNode.getPrefixNode(),)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "AExpression userCallArgumentNode@@@40@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "prefixValueType != null && prefixValueType.getValueType() == @@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "irInvokeCallNode.setBox(boxType)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ECall userCallNode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "parameterType != PainlessLookupUtility.typeToUnboxedType(injection.getClass())@@@32@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "DeclarationBlockNode irDeclarationBlockNode = new DeclarationBlockNode(userDeclBlockNode.getLocation())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "constantNode.setExpressionType(parameterType)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "irNullSafeSubNode.setExpressionType(irExpressionNode.getExpressionType())@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "InvokeCallDefNode irCallSubDefNode = new InvokeCallDefNode(userCallNode.getLocation())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Object(( injections = PainlessLookupUtility.buildInjections(method,scriptScope.getCompilerSettings().asMap())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "irInvokeCallNode.setMethod(scriptScope.getDecoration(userCallNode,).getStandardPainlessMethod())@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "PainlessMethod method = scriptScope.getDecoration(userCallNode,).getStandardPainlessMethod()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "irCallSubDefNode.setExpressionType(scriptScope.getDecoration(userCallNode,).getValueType())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "irExpressionNode = irInvokeCallNode@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "irInvokeCallNode.addArgumentNode(constantNode)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "irInvokeCallNode.addArgumentNode(injectCast(userArgumentNode,scriptScope))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->21 [style = bold, label=""];
6->15 [style = solid, label="scriptScope"];
26->5 [style = solid, label="irExpressionNode"];
12->33 [style = bold, label=""];
23->9 [style = bold, label=""];
3->24 [style = bold, label=""];
5->14 [style = bold, label=""];
7->29 [style = solid, label="prefixValueType"];
48->15 [style = solid, label="scriptScope"];
29->63 [style = dotted, label="false"];
25->43 [style = dotted, label="true"];
59->47 [style = dotted, label="true"];
44->42 [style = bold, label=""];
29->61 [style = dotted, label="false"];
41->49 [style = solid, label="irBinaryImplNode"];
29->10 [style = dotted, label="true"];
59->55 [style = dotted, label="true"];
59->37 [style = dotted, label="true"];
37->59 [style = solid, label="i"];
48->44 [style = solid, label="scriptScope"];
0->28 [style = solid, label="boxType"];
8->62 [style = bold, label=""];
51->36 [style = bold, label=""];
29->22 [style = dotted, label="false"];
42->50 [style = bold, label=""];
59->52 [style = dotted, label="true"];
58->39 [style = bold, label=""];
19->32 [style = dotted, label="true"];
29->11 [style = dotted, label="false"];
43->41 [style = bold, label=""];
21->25 [style = bold, label=""];
9->4 [style = solid, label="irNullSafeSubNode"];
12->18 [style = solid, label="irInvokeCallNode"];
59->58 [style = dotted, label="true"];
10->21 [style = solid, label="irCallSubDefNode"];
29->34 [style = dotted, label="false"];
30->7 [style = bold, label=""];
11->1 [style = dotted, label="true"];
7->29 [style = bold, label=""];
69->71 [style = bold, label=""];
28->18 [style = bold, label=""];
38->60 [style = bold, label=""];
53->48 [style = dotted, label="true"];
26->23 [style = bold, label=""];
10->15 [style = bold, label=""];
25->41 [style = bold, label=""];
29->59 [style = dotted, label="false"];
34->26 [style = bold, label=""];
54->14 [style = bold, label=""];
22->13 [style = bold, label=""];
64->43 [style = bold, label=""];
71->70 [style = bold, label=""];
69->67 [style = dotted, label="true"];
25->62 [style = dotted, label="true"];
25->64 [style = dotted, label="true"];
71->66 [style = solid, label="irDeclarationBlockNode"];
11->0 [style = dotted, label="false"];
52->39 [style = solid, label="parameterType"];
29->2 [style = dotted, label="false"];
18->42 [style = solid, label="irExpressionNode"];
21->35 [style = solid, label="irExpressionNode"];
41->44 [style = bold, label=""];
1->12 [style = bold, label=""];
70->66 [style = bold, label=""];
59->38 [style = dotted, label="true"];
56->51 [style = solid, label="method"];
32->8 [style = solid, label="userCallNode"];
53->32 [style = dotted, label="true"];
21->62 [style = solid, label="irExpressionNode"];
29->18 [style = dotted, label="false"];
37->55 [style = solid, label="i"];
47->40 [style = bold, label=""];
29->51 [style = dotted, label="false"];
0->12 [style = bold, label=""];
7->11 [style = solid, label="prefixValueType"];
18->62 [style = solid, label="irExpressionNode"];
26->35 [style = solid, label="irExpressionNode"];
8->43 [style = solid, label="irNullSafeSubNode"];
53->30 [style = bold, label=""];
29->45 [style = dotted, label="true"];
29->14 [style = dotted, label="false"];
15->3 [style = bold, label=""];
29->10 [style = bold, label=""];
29->31 [style = dotted, label="false"];
32->49 [style = solid, label="userCallNode"];
35->25 [style = bold, label=""];
40->58 [style = bold, label=""];
55->52 [style = bold, label=""];
57->52 [style = solid, label="augmentedOffset"];
29->20 [style = dotted, label="true"];
32->68 [style = dashed, label="0"];
57->63 [style = bold, label=""];
6->18 [style = solid, label="scriptScope"];
37->52 [style = solid, label="i"];
36->57 [style = bold, label=""];
29->24 [style = dotted, label="true"];
28->8 [style = solid, label="irBinaryImplNode"];
56->51 [style = bold, label=""];
31->11 [style = bold, label=""];
29->28 [style = dotted, label="false"];
0->34 [style = solid, label="boxType"];
29->56 [style = dotted, label="false"];
13->17 [style = bold, label=""];
59->60 [style = dotted, label="true"];
11->0 [style = bold, label=""];
4->65 [style = bold, label=""];
23->5 [style = dotted, label="true"];
63->55 [style = solid, label="i"];
23->14 [style = dotted, label="true"];
59->54 [style = bold, label=""];
29->54 [style = dotted, label="true"];
47->40 [style = dotted, label="true"];
63->59 [style = bold, label=""];
4->35 [style = solid, label="irExpressionNode"];
36->52 [style = solid, label="parameterTypes"];
23->9 [style = dotted, label="true"];
29->57 [style = dotted, label="false"];
29->27 [style = dotted, label="true"];
63->37 [style = solid, label="i"];
29->31 [style = bold, label=""];
67->66 [style = solid, label="userDeclBlockNode"];
21->5 [style = solid, label="irExpressionNode"];
19->6 [style = dotted, label="true"];
68->70 [style = solid, label="scriptScope"];
9->5 [style = bold, label=""];
47->58 [style = bold, label=""];
29->21 [style = dotted, label="true"];
63->52 [style = solid, label="i"];
18->35 [style = bold, label=""];
52->47 [style = bold, label=""];
30->71 [style = dashed, label="0"];
6->33 [style = solid, label="scriptScope"];
55->38 [style = solid, label="injection"];
29->15 [style = dotted, label="true"];
1->28 [style = solid, label="boxType"];
58->60 [style = solid, label="constantNode"];
51->55 [style = solid, label="injections"];
19->30 [style = bold, label=""];
52->47 [style = solid, label="parameterType"];
43->42 [style = solid, label="irExpressionNode"];
29->17 [style = dotted, label="false"];
25->8 [style = dotted, label="true"];
62->64 [style = bold, label=""];
39->38 [style = bold, label=""];
18->25 [style = bold, label=""];
48->54 [style = solid, label="scriptScope"];
11->1 [style = bold, label=""];
23->4 [style = dotted, label="true"];
60->37 [style = bold, label=""];
65->28 [style = bold, label=""];
29->46 [style = dotted, label="false"];
33->22 [style = bold, label=""];
4->28 [style = bold, label=""];
59->55 [style = bold, label=""];
29->12 [style = dotted, label="false"];
29->26 [style = dotted, label="false"];
69->68 [style = dotted, label="true"];
63->59 [style = solid, label="i"];
50->49 [style = bold, label=""];
12->56 [style = bold, label=""];
29->65 [style = dotted, label="false"];
29->33 [style = dotted, label="true"];
25->8 [style = bold, label=""];
59->39 [style = dotted, label="true"];
23->28 [style = bold, label=""];
29->16 [style = dotted, label="false"];
1->34 [style = solid, label="boxType"];
17->34 [style = bold, label=""];
14->4 [style = bold, label=""];
37->59 [style = bold, label=""];
21->23 [style = bold, label=""];
21->42 [style = solid, label="irExpressionNode"];
29->3 [style = dotted, label="true"];
29->36 [style = dotted, label="false"];
12->26 [style = solid, label="irInvokeCallNode"];
}
