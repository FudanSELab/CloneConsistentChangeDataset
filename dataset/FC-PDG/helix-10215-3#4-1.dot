digraph {
46 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())return leader == null}},5 * 1000)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "MockParticipantManager participant = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final PropertyKey.Builder keyBuilder = accessor.keyBuilder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "participant.syncStart()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "TestHelper.verify(new Verifier(){@Override public boolean verify(){return listener.count == expectDisconnectCnt.get()}},30 * 1000)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final ZkClient client = participant.getManager().getZkClient()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(success,\"Leader should be gone after \" + (n + 1) + \" disconnects\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < n@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String newSessionId = ZkTestHelper.getSessionId(client)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.subscribeStateChanges(listener)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "client.unsubscribeStateChanges(listener)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testParticipantFlapping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectDisconnectCnt.incrementAndGet()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,new ZkBaseDataAccessor<ZNRecord>(_gZkClient))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testControllerFlapping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestHelper.verify(new Verifier(){@Override public boolean verify(){return listener.count == expectDisconnectCnt.get()}},30 * 1000)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ClusterController controller = new ClusterController(clusterName,\"controller\",ZK_ADDR)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final ZkStateCountListener listener = new ZkStateCountListener()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final int n = ZKHelixManager.MAX_DISCONNECT_THRESHOLD@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertNotNull(leader,\"Leader should exist after \" + n + \" disconnects\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "MockParticipant participant = new MockParticipant(clusterName,instanceName,ZK_ADDR,null)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "i++@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String oldSessionId = ZkTestHelper.getSessionId(client)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String instanceName = \"localhost_12918\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))return liveInstance == null}},3 * 1000)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(success,\"Live-instance should be gone after \" + (n + 1) + \" disconnects\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final ZkClient client = controller.getManager().getZkClient()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertNotNull(liveInstance,\"Live-instance should exist after \" + n + \" disconnects\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "controller.syncStart()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(newSessionId,oldSessionId)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(newSessionId,oldSessionId)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final AtomicInteger expectDisconnectCnt = new AtomicInteger(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final ZkClient client = participant.getZkClient()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testParticipantFlapping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,1,1,\"MasterSlave\",false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int i = 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->3 [style = solid, label="n"];
42->50 [style = solid, label="client"];
15->21 [style = bold, label=""];
12->43 [style = solid, label="clusterName"];
48->47 [style = solid, label="success"];
3->8 [style = solid, label="i"];
28->14 [style = solid, label="client"];
3->33 [style = dotted, label="true"];
25->6 [style = bold, label=""];
38->42 [style = bold, label=""];
3->40 [style = dotted, label="true"];
1->13 [style = bold, label=""];
35->23 [style = solid, label="client"];
21->28 [style = bold, label=""];
18->47 [style = solid, label="n"];
29->8 [style = dotted, label="true"];
22->4 [style = bold, label=""];
22->4 [style = solid, label="newSessionId"];
29->14 [style = dotted, label="true"];
31->16 [style = solid, label="success"];
29->14 [style = bold, label=""];
3->0 [style = dotted, label="true"];
18->32 [style = bold, label=""];
40->22 [style = bold, label=""];
12->45 [style = solid, label="clusterName"];
4->8 [style = bold, label=""];
21->35 [style = bold, label=""];
28->0 [style = solid, label="client"];
32->3 [style = bold, label=""];
12->20 [style = solid, label="clusterName"];
42->14 [style = solid, label="client"];
37->41 [style = solid, label="leader"];
33->7 [style = bold, label=""];
19->18 [style = bold, label=""];
23->30 [style = bold, label=""];
3->29 [style = dotted, label="true"];
32->29 [style = solid, label="n"];
30->27 [style = bold, label=""];
11->19 [style = solid, label="listener"];
27->31 [style = bold, label=""];
9->17 [style = bold, label=""];
32->3 [style = solid, label="i"];
42->8 [style = solid, label="client"];
15->36 [style = dashed, label="0"];
3->29 [style = solid, label="i"];
29->26 [style = bold, label=""];
5->1 [style = bold, label=""];
13->12 [style = bold, label=""];
12->2 [style = solid, label="clusterName"];
17->2 [style = bold, label=""];
8->29 [style = solid, label="i"];
35->14 [style = solid, label="client"];
10->15 [style = solid, label="instanceName"];
32->16 [style = solid, label="n"];
28->23 [style = solid, label="client"];
37->46 [style = solid, label="leader"];
12->15 [style = solid, label="clusterName"];
16->20 [style = bold, label=""];
44->45 [style = bold, label=""];
18->41 [style = solid, label="n"];
42->40 [style = solid, label="client"];
41->50 [style = bold, label=""];
3->29 [style = bold, label=""];
13->12 [style = solid, label="methodName"];
25->31 [style = solid, label="liveInstance"];
2->43 [style = bold, label=""];
46->44 [style = bold, label=""];
29->0 [style = dotted, label="true"];
29->4 [style = dotted, label="true"];
35->0 [style = solid, label="client"];
3->37 [style = bold, label=""];
32->6 [style = solid, label="n"];
6->23 [style = bold, label=""];
37->41 [style = bold, label=""];
18->44 [style = solid, label="n"];
16->44 [style = dashed, label="0"];
29->7 [style = dotted, label="true"];
12->17 [style = solid, label="clusterName"];
22->29 [style = bold, label=""];
8->14 [style = bold, label=""];
12->24 [style = bold, label=""];
50->48 [style = bold, label=""];
2->10 [style = bold, label=""];
49->11 [style = solid, label="listener"];
3->14 [style = dotted, label="true"];
29->22 [style = dotted, label="true"];
7->22 [style = bold, label=""];
10->25 [style = solid, label="instanceName"];
43->38 [style = bold, label=""];
3->8 [style = bold, label=""];
14->4 [style = solid, label="oldSessionId"];
25->6 [style = solid, label="liveInstance"];
39->1 [style = bold, label=""];
10->36 [style = solid, label="instanceName"];
32->29 [style = solid, label="i"];
49->11 [style = bold, label=""];
28->22 [style = solid, label="client"];
24->9 [style = bold, label=""];
29->3 [style = solid, label="i"];
12->36 [style = solid, label="clusterName"];
10->15 [style = bold, label=""];
31->16 [style = bold, label=""];
34->1 [style = bold, label=""];
28->11 [style = bold, label=""];
26->25 [style = bold, label=""];
29->3 [style = bold, label=""];
8->22 [style = solid, label="oldSessionId"];
11->26 [style = solid, label="listener"];
47->46 [style = bold, label=""];
10->31 [style = solid, label="instanceName"];
30->27 [style = solid, label="success"];
28->35 [style = dashed, label="0"];
11->19 [style = bold, label=""];
35->22 [style = solid, label="client"];
46->44 [style = solid, label="success"];
12->24 [style = solid, label="clusterName"];
10->36 [style = bold, label=""];
36->21 [style = bold, label=""];
33->40 [style = bold, label=""];
32->27 [style = solid, label="n"];
14->0 [style = bold, label=""];
0->33 [style = bold, label=""];
48->47 [style = bold, label=""];
40->22 [style = solid, label="newSessionId"];
3->22 [style = dotted, label="true"];
42->49 [style = bold, label=""];
29->33 [style = dotted, label="true"];
1->12 [style = solid, label="className"];
3->8 [style = dotted, label="true"];
8->29 [style = bold, label=""];
35->11 [style = bold, label=""];
}
