digraph {
0 [style = filled, label = "final StreamNode globalCommitterNode = findNodeNameContains(streamGraph,\"Global Committer\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "generateWriterGlobalCommitterTopology['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final StreamNode writerNode = findNodeNameContains(streamGraph,\"Writer\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final StreamGraph streamGraph = buildGraph(TestSink.newBuilder().setDefaultCommitter().setDefaultGlobalCommitter().build(),runtimeExecutionMode)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamNode committerNode = findNodeNameContains(streamGraph,\"Committer\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "validateTopology(writerNode,,committerNode,,1,1)@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "validateTopology(writerNode,,globalCommitterNode,String.format(\"Sink Global Committer: %s\",NAME),String.format(\"Sink Global Committer: %s\",UID),globalCommitterClass,1,1)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "generateWriterCommitterGlobalCommitterTopology['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "validateTopology(committerNode,,globalCommitterNode,String.format(\"Sink Global Committer: %s\",NAME),String.format(\"Sink Global Committer: %s\",UID),globalCommitterClass,1,1)@@@6@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final StreamNode writerNode = findWriter(streamGraph)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final StreamGraph streamGraph = buildGraph(TestSink.newBuilder().setCommittableSerializer(TestSink.StringCommittableSerializer.INSTANCE).setDefaultGlobalCommitter().build(),runtimeExecutionMode)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "generateWriterCommitterGlobalCommitterTopology['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final StreamNode committerNode = findCommitter(streamGraph)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9->0 [style = solid, label="streamGraph"];
0->10 [style = solid, label="globalCommitterNode"];
0->5 [style = dashed, label="0"];
4->1 [style = solid, label="committerNode"];
12->10 [style = solid, label="writerNode"];
2->3 [style = bold, label=""];
1->10 [style = dashed, label="0"];
11->9 [style = bold, label=""];
3->8 [style = solid, label="streamGraph"];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
3->4 [style = solid, label="streamGraph"];
3->0 [style = solid, label="streamGraph"];
4->12 [style = dashed, label="0"];
5->6 [style = solid, label="committerNode"];
0->10 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
8->6 [style = solid, label="writerNode"];
4->8 [style = dashed, label="0"];
9->12 [style = bold, label=""];
0->1 [style = solid, label="globalCommitterNode"];
3->5 [style = solid, label="streamGraph"];
9->12 [style = solid, label="streamGraph"];
}
