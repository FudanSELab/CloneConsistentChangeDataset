digraph {
5 [style = filled, label = "return ((Decimal)result).toJavaBigDecimal()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "return ((UTF8String)result).toString()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Type.PrimitiveType primitive@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "primitive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return result@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Object result = RandomUtil.generatePrimitive(primitive,random)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "primitive.typeId()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "primitive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "return UUID.nameUUIDFromBytes((byte(()result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Object result = generatePrimitive(primitive,random)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return new GenericData.Fixed(typeToSchema.get(primitive),(byte(()result)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "primitive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return ByteBuffer.wrap((byte(()result)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->0 [style = solid, label="result"];
5->8 [style = bold, label=""];
7->1 [style = bold, label=""];
4->6 [style = bold, label=""];
6->1 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
6->0 [style = bold, label=""];
3->9 [style = dotted, label="true"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
6->2 [style = bold, label=""];
9->10 [style = solid, label="primitive"];
4->1 [style = solid, label="result"];
6->1 [style = bold, label=""];
6->5 [style = bold, label=""];
2->0 [style = bold, label=""];
6->2 [style = dotted, label="true"];
12->4 [style = bold, label=""];
9->4 [style = solid, label="primitive"];
11->10 [style = bold, label=""];
6->8 [style = dotted, label="true"];
6->8 [style = bold, label=""];
0->8 [style = bold, label=""];
6->7 [style = dotted, label="true"];
1->2 [style = bold, label=""];
6->0 [style = dotted, label="true"];
4->8 [style = solid, label="result"];
10->0 [style = solid, label="result"];
6->7 [style = bold, label=""];
10->1 [style = solid, label="result"];
10->2 [style = solid, label="result"];
4->10 [style = dashed, label="0"];
10->8 [style = solid, label="result"];
4->2 [style = solid, label="result"];
9->1 [style = solid, label="primitive"];
6->5 [style = dotted, label="true"];
0->5 [style = bold, label=""];
12->9 [style = dotted, label="true"];
}
