digraph {
19 [style = filled, label = "long versionTTL@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "int bucketSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_znRecordClient.setZkSerializer(new ZNRecordSerializer())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "_zkSerializer = new ZNRecordJacksonSerializer()@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "HelixZkClient zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(new HelixZkClient.ZkConnectionConfig(ZK_ADDR))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "_zkClient.setZkSerializer(new ZkSerializer(){@Override public byte(( serialize(Object data){if (data instanceof byte(() {return (byte(()data}throw new HelixException(\"ZkBucketDataAccesor only supports a byte array as an argument!\")}@Override public Object deserialize(byte(( data){return data}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String zkAddr@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "beforeClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "_znRecordBaseDataAccessor = new ZkBaseDataAccessor<>(_znRecordClient)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "_bucketDataAccessor = new ZkBucketDataAccessor(ZK_ADDR,50 * 1024,0L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "_zkBaseDataAccessor = new ZkBaseDataAccessor(_zkClient)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "ZkBucketDataAccessor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int numVersions@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String zkAddr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "_numVersions = numVersions@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "_bucketSize = bucketSize@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "record.setListField(NAME_KEY,LIST_FIELD)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "record.setMapField(NAME_KEY,MAP_FIELD)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int bucketSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "zkClient.setZkSerializer(new ZkSerializer(){@Override public byte(( serialize(Object data){if (data instanceof byte(() {return (byte(()data}throw new HelixException(\"ZkBucketDataAccesor only supports a byte array as an argument!\")}@Override public Object deserialize(byte(( data){return data}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "_versionTTL = versionTTL@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "_zkSerializer = new ZNRecordJacksonSerializer()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "_zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "_zkBaseDataAccessor = new ZkBaseDataAccessor<>(_zkClient)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "_bucketSize = bucketSize@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "_znRecordClient = SharedZkClientFactory.getInstance().buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "record.setSimpleField(NAME_KEY,NAME_KEY)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ZkBucketDataAccessor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "_zkBaseDataAccessor = new ZkBaseDataAccessor<>(zkClient)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->8 [style = bold, label=""];
2->20 [style = solid, label="_zkClient"];
9->11 [style = bold, label=""];
3->1 [style = bold, label=""];
23->27 [style = bold, label=""];
18->16 [style = dotted, label="true"];
7->3 [style = solid, label="_znRecordClient"];
11->15 [style = dashed, label="0"];
16->2 [style = solid, label="zkAddr"];
10->19 [style = dashed, label="0"];
6->11 [style = solid, label="numVersions"];
18->19 [style = dotted, label="true"];
14->17 [style = bold, label=""];
20->14 [style = bold, label=""];
18->2 [style = bold, label=""];
0->20 [style = dashed, label="0"];
2->4 [style = bold, label=""];
27->22 [style = bold, label=""];
7->3 [style = bold, label=""];
13->17 [style = solid, label="bucketSize"];
4->0 [style = bold, label=""];
21->28 [style = bold, label=""];
0->7 [style = bold, label=""];
26->21 [style = bold, label=""];
22->25 [style = solid, label="zkClient"];
12->2 [style = bold, label=""];
0->25 [style = dashed, label="0"];
12->10 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
12->6 [style = dotted, label="true"];
10->2 [style = solid, label="zkAddr"];
24->25 [style = bold, label=""];
25->26 [style = bold, label=""];
19->15 [style = solid, label="versionTTL"];
4->20 [style = bold, label=""];
8->9 [style = bold, label=""];
17->15 [style = bold, label=""];
22->24 [style = bold, label=""];
10->7 [style = solid, label="zkAddr"];
5->9 [style = solid, label="bucketSize"];
2->0 [style = solid, label="_zkClient"];
18->13 [style = dotted, label="true"];
}
