digraph {
28 [style = filled, label = "isFloat = false@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "isFloat@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "!enable@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "checkCastToScalarOkay(MAX_NUMERIC_STRINGS(i(,type)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkCastFails(\"'notnumeric'\",type,INVALID_CHAR_MESSAGE,true)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "checkCastToApproxOkay(\"'\" + MIN_NUMERIC_STRINGS(i( + \"'\",type,Double.parseDouble(MIN_NUMERIC_STRINGS(i(),0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "checkCastFails(MAX_OVERFLOW_NUMERIC_STRINGS(i(,type,LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "checkCastToApproxOkay(\"'\" + MIN_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,0,0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "checkCastToApproxOkay(MIN_OVERFLOW_NUMERIC_STRINGS(i(,type,0,0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "checkCastFails(\"'\" + MAX_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,OUT_OF_RANGE_MESSAGE,true)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,type,null)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "type.equalsIgnoreCase(\"DOUBLE\") || type.equalsIgnoreCase(\"FLOAT\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,type,isFloat? \"1.401298E-45\": null)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,type,isFloat? \"3.402824E38\": \"1.797693134862316E308\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "checkCastToApproxOkay(MIN_NUMERIC_STRINGS(i(,type,Double.parseDouble(MIN_NUMERIC_STRINGS(i(),0)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCastExactNumericLimits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,null,null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkCastFails(\"'\" + MIN_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,OUT_OF_RANGE_MESSAGE,true)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "checkCastToApproxOkay(\"'\" + MAX_NUMERIC_STRINGS(i( + \"'\",type,Double.parseDouble(MAX_NUMERIC_STRINGS(i(),isFloat? 1E32: 0)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "false@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,null,isFloat? null: \"4.940656458412465E-324\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "checkCastToApproxOkay(MAX_NUMERIC_STRINGS(i(,type,Double.parseDouble(MAX_NUMERIC_STRINGS(i(),isFloat? 1E32: 0)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < NUMERIC_TYPE_NAMES.length@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkCastFails(MIN_OVERFLOW_NUMERIC_STRINGS(i(,type,OUT_OF_RANGE_MESSAGE,true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkCastFails(MIN_OVERFLOW_NUMERIC_STRINGS(i(,type,LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "type.equalsIgnoreCase(\"BIGINT\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "false@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "type.equalsIgnoreCase(\"REAL\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "isFloat = true@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,null,isFloat? null: \"1.79769313486231E308\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "checkCastFails(\"'notnumeric'\",type,INVALID_CHAR_MESSAGE,true)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String type = NUMERIC_TYPE_NAMES(i(@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "checkCastToScalarOkay(\"'\" + MIN_NUMERIC_STRINGS(i( + \"'\",type,MIN_NUMERIC_STRINGS(i()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testCastApproxNumericLimits['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "checkCastFails(MAX_OVERFLOW_NUMERIC_STRINGS(i(,type,LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.setFor(SqlStdOperatorTable.CAST)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "boolean isFloat@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "type.equalsIgnoreCase(\"DOUBLE\") || type.equalsIgnoreCase(\"FLOAT\") || type.equalsIgnoreCase(\"REAL\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "checkCastFails(MAX_OVERFLOW_NUMERIC_STRINGS(i(,type,OUT_OF_RANGE_MESSAGE,true)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,null,null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,type,isFloat? \"3.402823E38\": \"1.797693134862316E308\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,type,isFloat? \"1.401299E-45\": \"4.940656458412465E-324\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "checkCastToScalarOkay(MIN_NUMERIC_STRINGS(i(,type)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,null,isFloat? null: null)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "return@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,type,null)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testCastExactNumericLimits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "checkCastFails(\"'\" + MAX_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,OUT_OF_RANGE_MESSAGE,true)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->14 [style = bold, label=""];
20->23 [style = bold, label=""];
14->0 [style = dotted, label="true"];
25->3 [style = bold, label=""];
13->45 [style = bold, label=""];
26->38 [style = bold, label=""];
9->46 [style = bold, label=""];
0->4 [style = bold, label=""];
38->36 [style = bold, label=""];
42->18 [style = bold, label=""];
5->7 [style = solid, label="i"];
16->19 [style = solid, label="type"];
49->28 [style = dotted, label="true"];
14->18 [style = dotted, label="true"];
46->44 [style = bold, label=""];
36->30 [style = bold, label=""];
5->10 [style = solid, label="i"];
35->42 [style = bold, label=""];
14->26 [style = dotted, label="true"];
28->12 [style = solid, label="isFloat"];
28->35 [style = solid, label="isFloat"];
16->21 [style = solid, label="type"];
5->35 [style = solid, label="i"];
19->0 [style = bold, label=""];
14->7 [style = dotted, label="true"];
18->29 [style = solid, label="i"];
33->47 [style = bold, label=""];
40->33 [style = solid, label="isFloat"];
28->47 [style = solid, label="isFloat"];
43->42 [style = bold, label=""];
5->18 [style = solid, label="i"];
5->1 [style = solid, label="i"];
18->23 [style = solid, label="i"];
5->19 [style = solid, label="i"];
18->12 [style = solid, label="i"];
0->7 [style = dotted, label="false"];
16->23 [style = solid, label="type"];
7->48 [style = dotted, label="true"];
18->21 [style = solid, label="i"];
16->2 [style = solid, label="type"];
16->41 [style = solid, label="type"];
18->7 [style = solid, label="i"];
18->11 [style = solid, label="i"];
49->28 [style = bold, label=""];
7->48 [style = bold, label=""];
34->29 [style = bold, label=""];
14->23 [style = dotted, label="true"];
18->14 [style = solid, label="i"];
16->9 [style = solid, label="type"];
40->34 [style = solid, label="isFloat"];
31->3 [style = bold, label=""];
5->29 [style = solid, label="i"];
5->2 [style = solid, label="i"];
16->7 [style = solid, label="type"];
39->14 [style = bold, label=""];
40->12 [style = solid, label="isFloat"];
16->33 [style = solid, label="type"];
0->1 [style = dotted, label="true"];
5->15 [style = solid, label="i"];
16->34 [style = solid, label="type"];
18->43 [style = solid, label="i"];
5->37 [style = solid, label="i"];
28->27 [style = solid, label="isFloat"];
36->47 [style = dotted, label="true"];
18->2 [style = solid, label="i"];
14->36 [style = dotted, label="true"];
0->7 [style = bold, label=""];
1->12 [style = bold, label=""];
16->42 [style = solid, label="type"];
16->11 [style = solid, label="type"];
18->10 [style = solid, label="i"];
5->12 [style = solid, label="i"];
39->40 [style = dotted, label="true"];
5->6 [style = solid, label="i"];
5->22 [style = solid, label="i"];
5->38 [style = solid, label="i"];
5->16 [style = solid, label="i"];
4->1 [style = bold, label=""];
8->3 [style = bold, label=""];
12->13 [style = bold, label=""];
40->46 [style = solid, label="isFloat"];
14->32 [style = dotted, label="true"];
12->9 [style = bold, label=""];
28->34 [style = solid, label="isFloat"];
7->12 [style = bold, label=""];
18->35 [style = solid, label="i"];
16->35 [style = solid, label="type"];
16->1 [style = solid, label="type"];
48->12 [style = bold, label=""];
49->39 [style = bold, label=""];
40->7 [style = bold, label=""];
5->43 [style = solid, label="i"];
36->33 [style = dotted, label="true"];
18->34 [style = solid, label="i"];
17->11 [style = bold, label=""];
18->37 [style = solid, label="i"];
14->20 [style = dotted, label="true"];
14->2 [style = dotted, label="true"];
46->13 [style = dotted, label="true"];
14->22 [style = dotted, label="true"];
10->38 [style = dashed, label="0"];
18->9 [style = solid, label="i"];
14->34 [style = dotted, label="true"];
15->26 [style = dashed, label="0"];
18->41 [style = solid, label="i"];
5->34 [style = solid, label="i"];
28->43 [style = solid, label="isFloat"];
30->42 [style = bold, label=""];
0->21 [style = dotted, label="false"];
36->30 [style = dotted, label="false"];
5->44 [style = solid, label="i"];
16->32 [style = bold, label=""];
21->13 [style = bold, label=""];
1->13 [style = bold, label=""];
14->17 [style = dotted, label="true"];
22->2 [style = bold, label=""];
16->24 [style = solid, label="type"];
16->12 [style = solid, label="type"];
16->26 [style = solid, label="type"];
36->35 [style = dotted, label="true"];
14->16 [style = bold, label=""];
10->6 [style = bold, label=""];
5->21 [style = solid, label="i"];
18->45 [style = solid, label="i"];
18->38 [style = solid, label="i"];
13->12 [style = dashed, label="0"];
5->33 [style = solid, label="i"];
18->1 [style = solid, label="i"];
28->46 [style = solid, label="isFloat"];
49->39 [style = dotted, label="false"];
5->4 [style = solid, label="i"];
14->49 [style = dotted, label="true"];
14->46 [style = dotted, label="true"];
46->44 [style = dotted, label="false"];
5->13 [style = solid, label="i"];
29->41 [style = bold, label=""];
18->47 [style = solid, label="i"];
30->43 [style = dotted, label="true"];
16->37 [style = solid, label="type"];
11->24 [style = bold, label=""];
22->9 [style = dashed, label="0"];
47->35 [style = bold, label=""];
45->34 [style = bold, label=""];
14->38 [style = dotted, label="true"];
5->26 [style = solid, label="i"];
18->44 [style = solid, label="i"];
14->6 [style = dotted, label="true"];
16->6 [style = solid, label="type"];
16->4 [style = solid, label="type"];
11->47 [style = dashed, label="0"];
41->26 [style = bold, label=""];
17->33 [style = dashed, label="0"];
14->13 [style = dotted, label="true"];
12->9 [style = dotted, label="true"];
18->4 [style = solid, label="i"];
16->29 [style = solid, label="type"];
16->43 [style = solid, label="type"];
40->37 [style = solid, label="isFloat"];
14->24 [style = dotted, label="true"];
36->33 [style = bold, label=""];
16->44 [style = solid, label="type"];
28->33 [style = solid, label="isFloat"];
5->47 [style = solid, label="i"];
40->35 [style = solid, label="isFloat"];
28->37 [style = solid, label="isFloat"];
28->38 [style = solid, label="isFloat"];
18->14 [style = bold, label=""];
5->41 [style = solid, label="i"];
15->10 [style = bold, label=""];
14->42 [style = dotted, label="true"];
40->27 [style = solid, label="isFloat"];
14->9 [style = dotted, label="true"];
28->7 [style = bold, label=""];
5->23 [style = solid, label="i"];
46->13 [style = bold, label=""];
5->11 [style = solid, label="i"];
18->19 [style = solid, label="i"];
23->19 [style = bold, label=""];
24->18 [style = bold, label=""];
30->37 [style = bold, label=""];
40->38 [style = solid, label="isFloat"];
37->27 [style = bold, label=""];
18->15 [style = solid, label="i"];
30->27 [style = dotted, label="true"];
13->22 [style = bold, label=""];
40->47 [style = solid, label="isFloat"];
9->13 [style = bold, label=""];
44->45 [style = bold, label=""];
18->6 [style = solid, label="i"];
14->16 [style = dotted, label="true"];
30->37 [style = dotted, label="true"];
6->17 [style = bold, label=""];
40->43 [style = solid, label="isFloat"];
7->21 [style = bold, label=""];
18->27 [style = solid, label="i"];
14->12 [style = dotted, label="true"];
3->5 [style = bold, label=""];
21->12 [style = bold, label=""];
16->45 [style = solid, label="type"];
18->26 [style = solid, label="i"];
18->13 [style = solid, label="i"];
18->16 [style = solid, label="i"];
14->41 [style = dotted, label="true"];
14->15 [style = dotted, label="true"];
32->49 [style = bold, label=""];
5->9 [style = solid, label="i"];
14->29 [style = dotted, label="true"];
14->10 [style = dotted, label="true"];
27->43 [style = bold, label=""];
18->17 [style = solid, label="i"];
14->45 [style = dotted, label="true"];
14->19 [style = dotted, label="true"];
18->33 [style = solid, label="i"];
16->20 [style = bold, label=""];
16->13 [style = solid, label="type"];
5->27 [style = solid, label="i"];
39->40 [style = bold, label=""];
0->4 [style = dotted, label="true"];
16->22 [style = solid, label="type"];
5->45 [style = solid, label="i"];
14->11 [style = dotted, label="true"];
20->14 [style = bold, label=""];
18->22 [style = solid, label="i"];
2->15 [style = bold, label=""];
5->17 [style = solid, label="i"];
16->15 [style = solid, label="type"];
5->14 [style = solid, label="i"];
}
