digraph {
13 [style = filled, label = "assertEquals(\"wrong revision\",1,lm(0(.getRevisionNumber())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LogMessage lm = collectLogMessages(thisTest.getWCPath(),null,new RevisionRange((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1aae9e,false,true,false,0)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"wrong date with getTimeMillis()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMillis()))@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"wrong user\",\"jrandom\",lm(0(.getAuthor())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"wrong copy source rev\",-1,cp(0(.getCopySrcRevision())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"wrong number of objects\",1,lm.length)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testBasicLogMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertNull(\"wrong copy source path\",cp(0(.getCopySrcPath())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"wrong path\",\"/A\",cp(0(.getPath())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ranges.add(new RevisionRange(null,null))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testBasicLogMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OneTest thisTest = new OneTest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNotNull(\"changed paths set\",lm(0(.getChangedPaths())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LogMessage lm = collectLogMessages(thisTest.getWCPath(),null,ranges,false,true,false,0)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(\"wrong date with getTimeMicros()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMicros() / 1000))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<RevisionRange> ranges = new ArrayList<RevisionRange>(1)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(\"wrong number of chang pathes\",20,cp.length)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"wrong time with getTimeMicros()\",lm(0(.getTimeMicros() / 1000,lm(0(.getDate().getTime())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ChangePath cp = lm(0(.getChangedPaths()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"wrong action\",'A',cp(0(.getAction())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"wrong date with getTimeMicros()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMicros() / 1000))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testBasicLogMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"wrong date with getTimeMillis()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMillis()))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "LogMessage lm = client.logMessages(thisTest.getWCPath(),null,null,false,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"wrong message\",\"Log Message\",lm(0(.getMessage())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"wrong time with getTimeMillis()\",lm(0(.getTimeMillis(),lm(0(.getDate().getTime())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = bold, label=""];
11->22 [style = bold, label=""];
13->15 [style = bold, label=""];
8->9 [style = bold, label=""];
2->4 [style = bold, label=""];
11->21 [style = bold, label=""];
18->20 [style = bold, label=""];
10->17 [style = bold, label=""];
24->23 [style = bold, label=""];
7->10 [style = bold, label=""];
22->24 [style = bold, label=""];
5->1 [style = bold, label=""];
11->0 [style = bold, label=""];
17->14 [style = bold, label=""];
0->13 [style = bold, label=""];
3->7 [style = bold, label=""];
15->2 [style = bold, label=""];
25->11 [style = bold, label=""];
6->16 [style = bold, label=""];
23->13 [style = bold, label=""];
1->3 [style = bold, label=""];
20->13 [style = bold, label=""];
19->11 [style = bold, label=""];
21->18 [style = bold, label=""];
14->8 [style = bold, label=""];
16->5 [style = bold, label=""];
12->11 [style = bold, label=""];
21->20 [style = solid, label="ranges"];
0->22 [style = dashed, label="0"];
}
