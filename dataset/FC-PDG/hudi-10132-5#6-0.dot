digraph {
6 [style = filled, label = "updateHiveSyncConfig(writer)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LOG.info(\"Commit at instant time :\" + commitInstantTime1)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StreamingQuery query = writer.trigger(Trigger.ProcessingTime(500)).start(tablePath)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String instantTime = HoodieActiveTimeline.createNewInstantTime()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "insert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "HoodieTestDataGenerator dataGen = getDataGenerate()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "JavaSparkContext jssc = new JavaSparkContext(spark.sparkContext())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String operationType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "DataStreamWriter<Row> writer = streamingInput.writeStream().format(\"org.apache.hudi\").option(\"hoodie.insert.shuffle.parallelism\",\"2\").option(\"hoodie.upsert.shuffle.parallelism\",\"2\").option(\"hoodie.delete.shuffle.parallelism\",\"2\").option(DataSourceWriteOptions.OPERATION_OPT_KEY().key(),operationType).option(DataSourceWriteOptions.TABLE_TYPE_OPT_KEY().key(),tableType).option(DataSourceWriteOptions.RECORDKEY_FIELD_OPT_KEY().key(),\"_row_key\").option(DataSourceWriteOptions.PARTITIONPATH_FIELD_OPT_KEY().key(),\"partition\").option(DataSourceWriteOptions.PRECOMBINE_FIELD_OPT_KEY().key(),\"timestamp\").option(HoodieCompactionConfig.INLINE_COMPACT_NUM_DELTA_COMMITS_PROP.key(),\"1\").option(DataSourceWriteOptions.ASYNC_COMPACT_ENABLE_OPT_KEY().key(),\"true\").option(DataSourceWriteOptions.ASYNC_CLUSTERING_ENABLE_OPT_KEY().key(),\"true\").option(HoodieWriteConfig.TABLE_NAME.key(),tableName).option(\"checkpointLocation\",checkpointLocation).outputMode(OutputMode.Append())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String commitInstantTime1 = HoodieDataSourceHelpers.latestCommit(fs,tablePath)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "FileSystem fs = FileSystem.get(jssc.hadoopConfiguration())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "DataFrameWriter<Row> writer = inputDF1.write().format(\"org.apache.hudi\").option(\"hoodie.insert.shuffle.parallelism\",\"2\").option(\"hoodie.upsert.shuffle.parallelism\",\"2\").option(DataSourceWriteOptions.TABLE_TYPE_OPT_KEY().key(),tableType).option(DataSourceWriteOptions.OPERATION_OPT_KEY().key(),DataSourceWriteOptions.INSERT_OPERATION_OPT_VAL()).option(DataSourceWriteOptions.RECORDKEY_FIELD_OPT_KEY().key(),\"_row_key\").option(DataSourceWriteOptions.PARTITIONPATH_FIELD_OPT_KEY().key(),\"partition\").option(DataSourceWriteOptions.PRECOMBINE_FIELD_OPT_KEY().key(),\"timestamp\").option(HoodieWriteConfig.TABLE_NAME.key(),tableName).option(DataSourceWriteOptions.KEYGENERATOR_CLASS_OPT_KEY().key(),nonPartitionedTable? .getCanonicalName(): .getCanonicalName()).mode(commitType)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "writer.save(tablePath)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "stream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "List<String> records1 = recordsToStrings(recordsSoFar)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String operationType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String checkpointLocation@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "updateHiveSyncConfig(writer)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Dataset<Row> inputDF1 = spark.read().json(jssc.parallelize(records1,2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SparkSession spark@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "stream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "query.awaitTermination(streamingDurationInMs)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DataStreamWriter<Row> writer = streamingInput.writeStream().format(\"org.apache.hudi\").option(\"hoodie.insert.shuffle.parallelism\",\"2\").option(\"hoodie.upsert.shuffle.parallelism\",\"2\").option(\"hoodie.delete.shuffle.parallelism\",\"2\").option(DataSourceWriteOptions.OPERATION_OPT_KEY().key(),operationType).option(DataSourceWriteOptions.TABLE_TYPE_OPT_KEY().key(),tableType).option(DataSourceWriteOptions.RECORDKEY_FIELD_OPT_KEY().key(),\"_row_key\").option(DataSourceWriteOptions.PARTITIONPATH_FIELD_OPT_KEY().key(),\"partition\").option(DataSourceWriteOptions.PRECOMBINE_FIELD_OPT_KEY().key(),\"timestamp\").option(HoodieCompactionConfig.INLINE_COMPACT_NUM_DELTA_COMMITS_PROP.key(),\"1\").option(DataSourceWriteOptions.ASYNC_COMPACT_ENABLE_OPT_KEY().key(),\"true\").option(HoodieWriteConfig.TABLE_NAME.key(),tableName).option(\"checkpointLocation\",checkpointLocation).outputMode(OutputMode.Append())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Dataset<Row> streamingInput@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Dataset<Row> streamingInput@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "List<HoodieRecord> recordsSoFar = new ArrayList<>(dataGen.generateInserts(instantTime,100))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
8->6 [style = solid, label="writer"];
25->14 [style = solid, label="fs"];
15->23 [style = bold, label=""];
0->6 [style = bold, label=""];
22->16 [style = bold, label=""];
12->21 [style = bold, label=""];
16->24 [style = bold, label=""];
0->6 [style = solid, label="writer"];
18->15 [style = bold, label=""];
14->20 [style = solid, label="commitInstantTime1"];
8->6 [style = bold, label=""];
25->14 [style = bold, label=""];
10->9 [style = dotted, label="true"];
21->18 [style = bold, label=""];
18->15 [style = solid, label="recordsSoFar"];
6->4 [style = bold, label=""];
2->0 [style = bold, label=""];
22->16 [style = solid, label="writer"];
13->12 [style = bold, label=""];
23->22 [style = bold, label=""];
10->8 [style = bold, label=""];
10->11 [style = dotted, label="true"];
24->25 [style = bold, label=""];
2->7 [style = dotted, label="true"];
17->19 [style = dotted, label="true"];
0->8 [style = dashed, label="0"];
15->23 [style = solid, label="records1"];
4->1 [style = bold, label=""];
17->13 [style = bold, label=""];
2->5 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
21->18 [style = solid, label="instantTime"];
14->20 [style = bold, label=""];
}
