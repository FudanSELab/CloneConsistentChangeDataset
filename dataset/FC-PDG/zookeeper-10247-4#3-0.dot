digraph {
0 [style = filled, label = "db.lastProcessedZxid = 7@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(7,learnerHandler.getQueuedPackets().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "peerZxid = 2@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,db,leader))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "db.committedLog.add(createProposal(7))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "db.txnLog.add(createProposal(6))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3e1b53)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "db.lastProcessedZxid = 9@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "reset()@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertOpType(Leader.TRUNC,3,db.getmaxCommittedLog())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertOpType(Leader.DIFF,db.getmaxCommittedLog(),db.getmaxCommittedLog())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testTxnLogOnly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "db.txnLog.add(createProposal(3))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(9,learnerHandler.getQueuedPackets().size())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(9,learnerHandler.getQueuedPackets().size())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "db.committedLog.add(createProposal(6))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3e1b83)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "peerZxid = 4@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "db.txnLog.add(createProposal(2))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,learnerHandler.getQueuedPackets().size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "peerZxid = 1@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testTxnLogOnly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "db.txnLog.add(createProposal(5))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertOpType(Leader.DIFF,db.lastProcessedZxid,db.lastProcessedZxid)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOpType(Leader.TRUNC,3,db.lastProcessedZxid)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "db.txnLog.add(createProposal(9))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "db.txnLog.add(createProposal(7))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "db.committedLog.add(createProposal(8))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "peerZxid = 3@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,leader))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "testTxnLog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "reset()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "db.txnLog.add(createProposal(8))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "reset()@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long peerZxid@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->31 [style = bold, label=""];
11->27 [style = solid, label="peerZxid"];
15->38 [style = bold, label=""];
1->4 [style = bold, label=""];
15->2 [style = bold, label=""];
0->2 [style = solid, label="lastProcessedZxid"];
16->32 [style = dashed, label="0"];
33->3 [style = bold, label=""];
27->12 [style = bold, label=""];
16->10 [style = bold, label=""];
34->5 [style = bold, label=""];
5->26 [style = solid, label="peerZxid"];
37->30 [style = bold, label=""];
11->6 [style = bold, label=""];
5->26 [style = bold, label=""];
5->15 [style = bold, label=""];
11->6 [style = solid, label="peerZxid"];
38->36 [style = bold, label=""];
18->25 [style = solid, label="peerZxid"];
31->21 [style = bold, label=""];
31->21 [style = solid, label="peerZxid"];
29->34 [style = bold, label=""];
14->36 [style = dashed, label="0"];
0->16 [style = solid, label="lastProcessedZxid"];
25->16 [style = bold, label=""];
2->38 [style = dashed, label="0"];
22->5 [style = bold, label=""];
30->29 [style = bold, label=""];
32->10 [style = bold, label=""];
3->0 [style = bold, label=""];
18->21 [style = solid, label="peerZxid"];
7->9 [style = bold, label=""];
8->17 [style = bold, label=""];
26->2 [style = bold, label=""];
3->20 [style = bold, label=""];
36->13 [style = bold, label=""];
10->8 [style = bold, label=""];
35->37 [style = bold, label=""];
6->27 [style = dashed, label="0"];
5->15 [style = solid, label="peerZxid"];
2->14 [style = bold, label=""];
21->32 [style = bold, label=""];
13->23 [style = bold, label=""];
18->25 [style = bold, label=""];
21->16 [style = bold, label=""];
15->26 [style = dashed, label="0"];
21->25 [style = dashed, label="0"];
0->20 [style = bold, label=""];
28->3 [style = bold, label=""];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
20->7 [style = bold, label=""];
9->1 [style = bold, label=""];
12->19 [style = bold, label=""];
22->35 [style = bold, label=""];
18->31 [style = dashed, label="0"];
4->22 [style = bold, label=""];
23->18 [style = bold, label=""];
24->3 [style = bold, label=""];
11->27 [style = bold, label=""];
17->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
