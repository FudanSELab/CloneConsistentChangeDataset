digraph {
14 [style = filled, label = "assertEquals(MultiStatus.MESSAGE,paths.get(\"/multiStatus\").get(\"get\").getResponse(MultiStatus.CODE).getDescription())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "assertEquals(ServiceUnavailable.MESSAGE,paths.get(\"/serviceUnavailable\").get(\"get\").getResponse(ServiceUnavailable.CODE).getDescription())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(Locked.MESSAGE,paths.get(\"/locked\").get(\"get\").getResponse(Locked.CODE).getDescription())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Continue.MESSAGE,paths.get(\"/continue\").get(\"get\").getResponse(Continue.CODE).getDescription())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "f01_swagger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(SeeOther.MESSAGE,paths.get(\"/seeOther\").get(\"get\").getResponse(SeeOther.CODE).getDescription())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(ResetContent.MESSAGE,paths.get(\"/resetContent\").get(\"get\").getResponse(ResetContent.CODE).getDescription())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(IMUsed.REASON_PHRASE,paths.get(\"/imUsed\").get(\"get\").getResponse(IMUsed.STATUS_CODE).getDescription())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(UseProxy.REASON_PHRASE,paths.get(\"/useProxy\").get(\"get\").getResponse(UseProxy.STATUS_CODE).getDescription())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(RequestHeaderFieldsTooLarge.MESSAGE,paths.get(\"/requestHeaderFieldsTooLarge\").get(\"get\").getResponse(RequestHeaderFieldsTooLarge.CODE).getDescription())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(MovedPermanently.REASON_PHRASE,paths.get(\"/movedPermanently\").get(\"get\").getResponse(MovedPermanently.STATUS_CODE).getDescription())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(InsufficientStorage.MESSAGE,paths.get(\"/insufficientStorage\").get(\"get\").getResponse(InsufficientStorage.CODE).getDescription())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(VariantAlsoNegotiates.MESSAGE,paths.get(\"/variantAlsoNegotiates\").get(\"get\").getResponse(VariantAlsoNegotiates.CODE).getDescription())@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "a02_responseBeans_swagger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(NoContent.MESSAGE,paths.get(\"/noContent\").get(\"get\").getResponse(NoContent.CODE).getDescription())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Accepted.REASON_PHRASE,paths.get(\"/accepted\").get(\"get\").getResponse(Accepted.STATUS_CODE).getDescription())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "assertEquals(UnavailableForLegalReasons.MESSAGE,paths.get(\"/unavailableForLegalReasons\").get(\"get\").getResponse(UnavailableForLegalReasons.CODE).getDescription())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(Found.MESSAGE,paths.get(\"/found\").get(\"get\").getResponse(Found.CODE).getDescription())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Unauthorized.MESSAGE,paths.get(\"/unauthorized\").get(\"get\").getResponse(Unauthorized.CODE).getDescription())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(LoopDetected.MESSAGE,paths.get(\"/loopDetected\").get(\"get\").getResponse(LoopDetected.CODE).getDescription())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(NotImplemented.MESSAGE,paths.get(\"/notImplemented\").get(\"get\").getResponse(NotImplemented.CODE).getDescription())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(SwitchingProtocols.REASON_PHRASE,paths.get(\"/switchingProtocols\").get(\"get\").getResponse(SwitchingProtocols.STATUS_CODE).getDescription())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(InternalServerError.MESSAGE,paths.get(\"/internalServerError\").get(\"get\").getResponse(InternalServerError.CODE).getDescription())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "Map<String,OperationMap> paths = getSwagger().getPaths()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(NoContent.REASON_PHRASE,paths.get(\"/noContent\").get(\"get\").getResponse(NoContent.STATUS_CODE).getDescription())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Ok.MESSAGE,paths.get(\"/ok\").get(\"get\").getResponse(Ok.CODE).getDescription())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "assertEquals(NetworkAuthenticationRequired.MESSAGE,paths.get(\"/networkAuthenticationRequired\").get(\"get\").getResponse(NetworkAuthenticationRequired.CODE).getDescription())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(SwitchingProtocols.MESSAGE,paths.get(\"/switchingProtocols\").get(\"get\").getResponse(SwitchingProtocols.CODE).getDescription())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(MovedPermanently.MESSAGE,paths.get(\"/movedPermanently\").get(\"get\").getResponse(MovedPermanently.CODE).getDescription())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "assertEquals(PreconditionFailed.MESSAGE,paths.get(\"/preconditionFailed\").get(\"get\").getResponse(PreconditionFailed.CODE).getDescription())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(TemporaryRedirect.MESSAGE,paths.get(\"/temporaryRedirect\").get(\"get\").getResponse(TemporaryRedirect.CODE).getDescription())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(SeeOther.REASON_PHRASE,paths.get(\"/seeOther\").get(\"get\").getResponse(SeeOther.STATUS_CODE).getDescription())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(TooManyRequests.MESSAGE,paths.get(\"/tooManyRequests\").get(\"get\").getResponse(TooManyRequests.CODE).getDescription())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(NotModified.REASON_PHRASE,paths.get(\"/notModified\").get(\"get\").getResponse(NotModified.STATUS_CODE).getDescription())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "assertEquals(UriTooLong.MESSAGE,paths.get(\"/uriTooLong\").get(\"get\").getResponse(UriTooLong.CODE).getDescription())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(Conflict.MESSAGE,paths.get(\"/conflict\").get(\"get\").getResponse(Conflict.CODE).getDescription())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(EarlyHints.REASON_PHRASE,paths.get(\"/earlyHints\").get(\"get\").getResponse(EarlyHints.STATUS_CODE).getDescription())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(ResetContent.REASON_PHRASE,paths.get(\"/resetContent\").get(\"get\").getResponse(ResetContent.STATUS_CODE).getDescription())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(AlreadyReported.MESSAGE,paths.get(\"/alreadyReported\").get(\"get\").getResponse(AlreadyReported.CODE).getDescription())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "assertEquals(NotExtended.MESSAGE,paths.get(\"/notExtended\").get(\"get\").getResponse(NotExtended.CODE).getDescription())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(IMUsed.MESSAGE,paths.get(\"/imUsed\").get(\"get\").getResponse(IMUsed.CODE).getDescription())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Accepted.MESSAGE,paths.get(\"/accepted\").get(\"get\").getResponse(Accepted.CODE).getDescription())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(PartialContent.REASON_PHRASE,paths.get(\"/partialContent\").get(\"get\").getResponse(PartialContent.STATUS_CODE).getDescription())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(Found.REASON_PHRASE,paths.get(\"/found\").get(\"get\").getResponse(Found.STATUS_CODE).getDescription())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(Continue.REASON_PHRASE,paths.get(\"/continue\").get(\"get\").getResponse(Continue.STATUS_CODE).getDescription())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "a02_responseBeans_swagger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(UseProxy.MESSAGE,paths.get(\"/useProxy\").get(\"get\").getResponse(UseProxy.CODE).getDescription())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(MultiStatus.REASON_PHRASE,paths.get(\"/multiStatus\").get(\"get\").getResponse(MultiStatus.STATUS_CODE).getDescription())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertEquals(PermanentRedirect.REASON_PHRASE,paths.get(\"/permanentRedirect\").get(\"get\").getResponse(PermanentRedirect.STATUS_CODE).getDescription())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(MultipleChoices.MESSAGE,paths.get(\"/multipleChoices\").get(\"get\").getResponse(MultipleChoices.CODE).getDescription())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Ok.REASON_PHRASE,paths.get(\"/ok\").get(\"get\").getResponse(Ok.STATUS_CODE).getDescription())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Map<String,OperationMap> paths = getSwagger().getPaths()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(MethodNotAllowed.MESSAGE,paths.get(\"/methodNotAllowed\").get(\"get\").getResponse(MethodNotAllowed.CODE).getDescription())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(PayloadTooLarge.MESSAGE,paths.get(\"/payloadTooLarge\").get(\"get\").getResponse(PayloadTooLarge.CODE).getDescription())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(LengthRequired.MESSAGE,paths.get(\"/lengthRequired\").get(\"get\").getResponse(LengthRequired.CODE).getDescription())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(PreconditionRequired.MESSAGE,paths.get(\"/preconditionRequired\").get(\"get\").getResponse(PreconditionRequired.CODE).getDescription())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(UnprocessableEntity.MESSAGE,paths.get(\"/unprocessableEntity\").get(\"get\").getResponse(UnprocessableEntity.CODE).getDescription())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(PartialContent.MESSAGE,paths.get(\"/partialContent\").get(\"get\").getResponse(PartialContent.CODE).getDescription())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Created.MESSAGE,paths.get(\"/created\").get(\"get\").getResponse(Created.CODE).getDescription())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "assertEquals(UpgradeRequired.MESSAGE,paths.get(\"/upgradeRequired\").get(\"get\").getResponse(UpgradeRequired.CODE).getDescription())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(Gone.MESSAGE,paths.get(\"/gone\").get(\"get\").getResponse(Gone.CODE).getDescription())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Created.REASON_PHRASE,paths.get(\"/created\").get(\"get\").getResponse(Created.STATUS_CODE).getDescription())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(MultipleChoices.REASON_PHRASE,paths.get(\"/multipleChoices\").get(\"get\").getResponse(MultipleChoices.STATUS_CODE).getDescription())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(AlreadyReported.REASON_PHRASE,paths.get(\"/alreadyReported\").get(\"get\").getResponse(AlreadyReported.STATUS_CODE).getDescription())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(Processing.MESSAGE,paths.get(\"/processing\").get(\"get\").getResponse(Processing.CODE).getDescription())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Processing.REASON_PHRASE,paths.get(\"/processing\").get(\"get\").getResponse(Processing.STATUS_CODE).getDescription())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(TemporaryRedirect.REASON_PHRASE,paths.get(\"/temporaryRedirect\").get(\"get\").getResponse(TemporaryRedirect.STATUS_CODE).getDescription())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertEquals(MisdirectedRequest.MESSAGE,paths.get(\"/misdirectedRequest\").get(\"get\").getResponse(MisdirectedRequest.CODE).getDescription())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(NonAuthoritiveInformation.MESSAGE,paths.get(\"/nonAuthoritiveInformation\").get(\"get\").getResponse(NonAuthoritiveInformation.CODE).getDescription())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "assertEquals(NotFound.MESSAGE,paths.get(\"/notFound\").get(\"get\").getResponse(NotFound.CODE).getDescription())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(FailedDependency.MESSAGE,paths.get(\"/failedDependency\").get(\"get\").getResponse(FailedDependency.CODE).getDescription())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(HttpVersionNotSupported.MESSAGE,paths.get(\"/httpVersionNotSupported\").get(\"get\").getResponse(HttpVersionNotSupported.CODE).getDescription())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(PermanentRedirect.MESSAGE,paths.get(\"/permanentRedirect\").get(\"get\").getResponse(PermanentRedirect.CODE).getDescription())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "assertEquals(NotAcceptable.MESSAGE,paths.get(\"/notAcceptable\").get(\"get\").getResponse(NotAcceptable.CODE).getDescription())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(RangeNotSatisfiable.MESSAGE,paths.get(\"/rangeNotSatisfiable\").get(\"get\").getResponse(RangeNotSatisfiable.CODE).getDescription())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(BadRequest.MESSAGE,paths.get(\"/badRequest\").get(\"get\").getResponse(BadRequest.CODE).getDescription())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(NotModified.MESSAGE,paths.get(\"/notModified\").get(\"get\").getResponse(NotModified.CODE).getDescription())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(EarlyHints.MESSAGE,paths.get(\"/earlyHints\").get(\"get\").getResponse(EarlyHints.CODE).getDescription())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertEquals(NonAuthoritiveInformation.REASON_PHRASE,paths.get(\"/nonAuthoritiveInformation\").get(\"get\").getResponse(NonAuthoritiveInformation.STATUS_CODE).getDescription())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertEquals(Forbidden.MESSAGE,paths.get(\"/forbidden\").get(\"get\").getResponse(Forbidden.CODE).getDescription())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(UnsupportedMediaType.MESSAGE,paths.get(\"/unsupportedMediaType\").get(\"get\").getResponse(UnsupportedMediaType.CODE).getDescription())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(ExpectationFailed.MESSAGE,paths.get(\"/expectationFailed\").get(\"get\").getResponse(ExpectationFailed.CODE).getDescription())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34->46 [style = bold, label=""];
76->62 [style = bold, label=""];
21->66 [style = dashed, label="0"];
73->65 [style = bold, label=""];
25->34 [style = bold, label=""];
14->81 [style = dashed, label="0"];
55->51 [style = bold, label=""];
65->48 [style = bold, label=""];
0->47 [style = dashed, label="0"];
38->41 [style = bold, label=""];
15->60 [style = dashed, label="0"];
49->78 [style = bold, label=""];
53->54 [style = bold, label=""];
35->43 [style = bold, label=""];
61->59 [style = bold, label=""];
36->33 [style = bold, label=""];
16->79 [style = dashed, label="0"];
23->32 [style = dashed, label="0"];
1->40 [style = dashed, label="0"];
15->45 [style = dashed, label="0"];
7->9 [style = bold, label=""];
30->28 [style = bold, label=""];
19->30 [style = dashed, label="0"];
81->66 [style = bold, label=""];
20->71 [style = dashed, label="0"];
6->26 [style = dashed, label="0"];
52->69 [style = bold, label=""];
68->74 [style = bold, label=""];
71->49 [style = bold, label=""];
18->52 [style = dashed, label="0"];
41->45 [style = bold, label=""];
70->57 [style = bold, label=""];
9->41 [style = dashed, label="0"];
13->22 [style = bold, label=""];
0->36 [style = dashed, label="0"];
45->35 [style = bold, label=""];
18->29 [style = dashed, label="0"];
46->42 [style = bold, label=""];
15->13 [style = bold, label=""];
5->80 [style = dashed, label="0"];
57->61 [style = bold, label=""];
22->43 [style = dashed, label="0"];
16->25 [style = dashed, label="0"];
72->77 [style = bold, label=""];
2->27 [style = dashed, label="0"];
54->81 [style = bold, label=""];
20->3 [style = bold, label=""];
23->8 [style = bold, label=""];
56->58 [style = bold, label=""];
3->10 [style = bold, label=""];
29->27 [style = bold, label=""];
51->60 [style = bold, label=""];
2->69 [style = dashed, label="0"];
20->34 [style = dashed, label="0"];
58->76 [style = bold, label=""];
7->38 [style = dashed, label="0"];
42->32 [style = bold, label=""];
21->7 [style = bold, label=""];
11->17 [style = bold, label=""];
5->11 [style = bold, label=""];
16->20 [style = bold, label=""];
13->72 [style = dashed, label="0"];
14->21 [style = bold, label=""];
40->29 [style = bold, label=""];
59->50 [style = bold, label=""];
67->80 [style = bold, label=""];
12->33 [style = dashed, label="0"];
17->1 [style = bold, label=""];
13->35 [style = dashed, label="0"];
14->28 [style = dashed, label="0"];
8->70 [style = dashed, label="0"];
22->16 [style = bold, label=""];
0->12 [style = bold, label=""];
28->31 [style = bold, label=""];
78->64 [style = bold, label=""];
3->46 [style = dashed, label="0"];
31->38 [style = bold, label=""];
33->26 [style = bold, label=""];
21->31 [style = dashed, label="0"];
9->51 [style = dashed, label="0"];
2->0 [style = bold, label=""];
19->14 [style = bold, label=""];
66->55 [style = bold, label=""];
60->72 [style = bold, label=""];
10->23 [style = bold, label=""];
5->24 [style = bold, label=""];
32->39 [style = bold, label=""];
79->71 [style = bold, label=""];
44->5 [style = bold, label=""];
4->5 [style = bold, label=""];
47->75 [style = bold, label=""];
80->63 [style = bold, label=""];
12->75 [style = dashed, label="0"];
27->36 [style = bold, label=""];
48->56 [style = bold, label=""];
74->52 [style = bold, label=""];
1->18 [style = bold, label=""];
6->19 [style = bold, label=""];
18->2 [style = bold, label=""];
10->42 [style = dashed, label="0"];
12->6 [style = bold, label=""];
1->74 [style = dashed, label="0"];
11->63 [style = dashed, label="0"];
77->79 [style = bold, label=""];
26->30 [style = bold, label=""];
63->68 [style = bold, label=""];
9->15 [style = bold, label=""];
8->39 [style = dashed, label="0"];
3->49 [style = dashed, label="0"];
50->73 [style = bold, label=""];
11->24 [style = dashed, label="0"];
24->37 [style = bold, label=""];
69->47 [style = bold, label=""];
17->37 [style = dashed, label="0"];
43->25 [style = bold, label=""];
75->53 [style = bold, label=""];
37->40 [style = bold, label=""];
64->70 [style = bold, label=""];
}
