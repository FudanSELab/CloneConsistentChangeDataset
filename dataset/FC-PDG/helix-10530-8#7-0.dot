digraph {
4 [style = filled, label = "_driver.delete(queueName)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testCreateStoppedQueue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "wCtx.getScheduledWorkflows().size() < 2@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String lastScheduledWorkflow = wCtx.getLastScheduledSingleWorkflow()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "_driver.delete(queueName)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "_driver.resume(queueName)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertNull(scheduledWorkflowCfg)@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertNull(scheduledWorkflowCtx)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "_driver.pollForWorkflowState(queueName,TaskState.STOPPED)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Thread.sleep(60000)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testDeletingRecurrentQueueWithHistory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "String scheduledQueue = wCtx.getLastScheduledSingleWorkflow()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "WorkflowConfig workflowConfig = _driver.getWorkflowConfig(queueName)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "_driver.createQueue(queueBuild.build())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "_driver.pollForWorkflowState(scheduledQueue,TaskState.COMPLETED)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "WorkflowContext scheduledWorkflowCtx = _driver.getWorkflowContext(scheduledWorkflow)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String queueName = TestHelper.getTestMethodName()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "_driver.stop(queueName)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(workflowConfig.getTargetState(),TargetState.STOP)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "wCtx = TaskTestUtil.pollForWorkflowContext(_driver,queueName)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JobQueue.Builder queueBuild = TaskTestUtil.buildRecurrentJobQueue(queueName,0,60,TargetState.STOP)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "wCtx = TaskTestUtil.pollForWorkflowContext(_driver,queueName)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "LOG.info(\"Starting job-queue: \" + queueName)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(result)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "WorkflowConfig scheduledWorkflowCfg = _driver.getWorkflowConfig(scheduledWorkflow)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "createAndEnqueueJob(queueBuild,2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "WorkflowContext wCtx = TaskTestUtil.pollForWorkflowContext(_driver,queueName)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){WorkflowContext wCtx = _driver.getWorkflowContext(queueName)WorkflowContext lastWfCtx = _driver.getWorkflowContext(lastScheduledWorkflow)return (wCtx == null && lastWfCtx == null)}},5 * 1000)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<String> scheduledWorkflows = new ArrayList<>(wCtx.getScheduledWorkflows())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final String queueName = TestHelper.getTestMethodName()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "JobQueue.Builder queueBuild = TaskTestUtil.buildRecurrentJobQueue(queueName,0,600000,TargetState.STOP)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<String> scheduledWorkflows = new ArrayList<String>(wCtx.getScheduledWorkflows())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testDeletingRecurrentQueueWithHistory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "WorkflowContext wCtx@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33->17 [style = solid, label="queueBuild"];
8->10 [style = bold, label=""];
27->18 [style = bold, label=""];
4->14 [style = bold, label=""];
10->20 [style = bold, label=""];
9->17 [style = solid, label="queueBuild"];
24->2 [style = bold, label=""];
4->25 [style = bold, label=""];
29->30 [style = bold, label=""];
0->6 [style = bold, label=""];
5->26 [style = dashed, label="0"];
32->8 [style = solid, label="queueName"];
33->17 [style = bold, label=""];
18->1 [style = solid, label="queueName"];
18->9 [style = solid, label="queueName"];
6->12 [style = solid, label="scheduledWorkflowCtx"];
9->17 [style = bold, label=""];
25->14 [style = bold, label=""];
32->13 [style = solid, label="queueName"];
18->16 [style = solid, label="queueName"];
10->29 [style = dashed, label="0"];
16->19 [style = bold, label=""];
7->8 [style = bold, label=""];
11->24 [style = bold, label=""];
18->32 [style = dashed, label="0"];
21->14 [style = solid, label="lastScheduledWorkflow"];
32->29 [style = solid, label="queueName"];
1->9 [style = bold, label=""];
6->15 [style = bold, label=""];
26->21 [style = bold, label=""];
28->32 [style = bold, label=""];
24->20 [style = bold, label=""];
18->14 [style = solid, label="queueName"];
19->14 [style = solid, label="wCtx"];
19->5 [style = bold, label=""];
5->21 [style = bold, label=""];
18->8 [style = solid, label="queueName"];
24->11 [style = dotted, label="true"];
9->33 [style = dashed, label="0"];
1->33 [style = bold, label=""];
32->33 [style = solid, label="queueName"];
14->0 [style = bold, label=""];
18->1 [style = bold, label=""];
18->11 [style = solid, label="queueName"];
30->31 [style = bold, label=""];
18->19 [style = solid, label="queueName"];
18->4 [style = solid, label="queueName"];
13->7 [style = bold, label=""];
19->26 [style = bold, label=""];
18->13 [style = solid, label="queueName"];
18->25 [style = solid, label="queueName"];
14->0 [style = solid, label="result"];
32->1 [style = bold, label=""];
18->2 [style = solid, label="queueName"];
24->20 [style = dotted, label="true"];
17->3 [style = bold, label=""];
3->13 [style = bold, label=""];
15->22 [style = solid, label="scheduledWorkflowCfg"];
15->12 [style = bold, label=""];
32->1 [style = solid, label="queueName"];
21->4 [style = bold, label=""];
30->31 [style = solid, label="scheduledQueue"];
8->29 [style = bold, label=""];
23->18 [style = bold, label=""];
12->22 [style = bold, label=""];
22->6 [style = bold, label=""];
20->11 [style = bold, label=""];
2->16 [style = bold, label=""];
}
