digraph {
12 [style = filled, label = "env.executeAsync()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "env.executeAsync()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ParallelismTrackingSource.waitForInstances()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testScaleLimitByMaxParallelism['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "input.addSink(new ParallelismTrackingSink<>())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ParallelismTrackingSink.expectInstances(1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "startAdditionalTaskManager()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final DataStream<String> input = env.addSource(new FailOnParallelExecutionSource()).setMaxParallelism(1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "input.addSink(new ParallelismTrackingSink<>()).getTransformation().setMaxParallelism(1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "env.executeAsync()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "input.addSink(new DiscardingSink<>())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "ParallelismTrackingSource.waitForInstances()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testScaleLimitByMaxParallelism['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final DataStream<String> input = env.addSource(new ParallelismTrackingSource())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testScaleDownOnTaskManagerLoss['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,0L))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "ParallelismTrackingSink.waitForInstances()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "miniClusterResource.getMiniCluster().terminateTaskManager(0).get()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ParallelismTrackingSink.waitForInstances()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "FailOnParallelExecutionSource.waitForScaleUpToParallelism(1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final DataStream<String> input = env.addSource(new ParallelismTrackingSource()).setMaxParallelism(1)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ParallelismTrackingSource.expectInstances(1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23->20 [style = bold, label=""];
19->18 [style = bold, label=""];
8->10 [style = dashed, label="0"];
18->23 [style = bold, label=""];
20->26 [style = bold, label=""];
16->24 [style = bold, label=""];
12->11 [style = bold, label=""];
7->11 [style = dashed, label="0"];
22->21 [style = bold, label=""];
14->10 [style = bold, label=""];
6->0 [style = bold, label=""];
1->21 [style = dashed, label="0"];
4->22 [style = dashed, label="0"];
8->24 [style = dashed, label="0"];
9->7 [style = bold, label=""];
15->19 [style = bold, label=""];
24->22 [style = bold, label=""];
1->9 [style = bold, label=""];
6->14 [style = bold, label=""];
17->7 [style = bold, label=""];
0->14 [style = dashed, label="0"];
3->5 [style = bold, label=""];
5->6 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
6->16 [style = bold, label=""];
2->15 [style = bold, label=""];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
25->5 [style = bold, label=""];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
21->17 [style = bold, label=""];
}
