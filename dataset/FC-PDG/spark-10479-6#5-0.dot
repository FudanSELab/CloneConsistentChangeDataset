digraph {
4 [style = filled, label = "runLinearRegressionUsingStaticMethods['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "LinearRegressionWithSGD linSGDImpl = new LinearRegressionWithSGD()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = jsc.parallelize(LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,42,0.1),2).cache()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int numAccurate = validatePrediction(validationData,model)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(numAccurate > nPoints * 4.0 / 5.0)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "linSGDImpl.setIntercept(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "runLinearRegressionUsingStaticMethods['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "LinearRegressionModel model = LinearRegressionWithSGD.train(testRDD.rdd(),100)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "double(( weights = {10,10}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LinearRegressionModel model = new LinearRegressionWithSGD(1.0,100,0.0,1.0).run(testRDD.rdd())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "LinearRegressionModel model = linSGDImpl.run(testRDD.rdd())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "double A = 3.0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(numAccurate > nPoints * 4.0 / 5.0)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<LabeledPoint> validationData = LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,17,0.1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int numAccurate = validatePrediction(validationData,model)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "double A = 0.0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "runLinearRegressionUsingConstructor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int nPoints = 100@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
9->5 [style = solid, label="model"];
0->9 [style = bold, label=""];
2->3 [style = solid, label="nPoints"];
1->5 [style = solid, label="model"];
0->13 [style = bold, label=""];
2->6 [style = bold, label=""];
0->11 [style = solid, label="validationData"];
6->0 [style = solid, label="A"];
16->7 [style = bold, label=""];
1->9 [style = dashed, label="0"];
2->0 [style = solid, label="nPoints"];
4->2 [style = bold, label=""];
7->8 [style = bold, label=""];
0->5 [style = solid, label="validationData"];
1->13 [style = dashed, label="0"];
8->0 [style = bold, label=""];
5->3 [style = solid, label="numAccurate"];
12->2 [style = bold, label=""];
6->16 [style = dashed, label="0"];
15->11 [style = bold, label=""];
7->0 [style = solid, label="weights"];
0->1 [style = bold, label=""];
9->5 [style = bold, label=""];
11->17 [style = bold, label=""];
15->11 [style = solid, label="model"];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
6->7 [style = bold, label=""];
11->17 [style = solid, label="numAccurate"];
16->0 [style = solid, label="A"];
13->14 [style = bold, label=""];
2->17 [style = solid, label="nPoints"];
2->16 [style = bold, label=""];
}
