digraph {
5 [style = filled, label = "Path path = new Path(outDir.toURI())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testOnCheckpointNoPendingRecoverable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FileWriterBucketState bucketState = bucket.snapshotState()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestRecoverableWriter recoverableWriter = getRecoverableWriter(path)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "bucket.write(\"test-element\",0)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "FileWriterBucket<String> bucket = createBucket(recoverableWriter,path,ON_CHECKPOING_ROLLING_POLICY,OutputFileConfig.builder().build())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<FileSinkCommittable> fileSinkCommittables = bucket.prepareCommit(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testOnCheckpointNoPendingRecoverable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "compareNumberOfPendingAndInProgress(fileSinkCommittables,1,0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "bucket.write(\"test-element\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(BUCKET_ID,bucketState.getBucketId())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "compareNumberOfPendingAndInProgress(fileSinkCommittables,0,0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testOnCheckpointRollingOnCheckpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "File outDir = TEMP_FOLDER.newFolder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FileWriterBucket<String> bucket = createBucket(recoverableWriter,path,DEFAULT_ROLLING_POLICY,OutputFileConfig.builder().build())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(path,bucketState.getBucketPath())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNull(\"The bucket should not have in-progress recoverable\",bucketState.getInProgressFileRecoverable())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNotNull(\"The bucket should have in-progress recoverable\",bucketState.getInProgressFileRecoverable())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
9->1 [style = solid, label="recoverableWriter"];
5->9 [style = solid, label="path"];
4->16 [style = dashed, label="0"];
5->9 [style = bold, label=""];
17->6 [style = bold, label=""];
10->15 [style = solid, label="fileSinkCommittables"];
12->11 [style = bold, label=""];
5->7 [style = solid, label="path"];
10->0 [style = solid, label="fileSinkCommittables"];
0->15 [style = dashed, label="0"];
9->17 [style = bold, label=""];
7->4 [style = bold, label=""];
15->3 [style = bold, label=""];
1->13 [style = bold, label=""];
11->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
5->1 [style = solid, label="path"];
1->17 [style = dashed, label="0"];
6->13 [style = dashed, label="0"];
3->7 [style = bold, label=""];
6->10 [style = bold, label=""];
7->16 [style = bold, label=""];
2->15 [style = bold, label=""];
9->17 [style = solid, label="recoverableWriter"];
10->2 [style = bold, label=""];
5->17 [style = solid, label="path"];
9->1 [style = bold, label=""];
8->11 [style = bold, label=""];
14->11 [style = bold, label=""];
}
