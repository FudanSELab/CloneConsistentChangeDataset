digraph {
11 [style = filled, label = "testFillPaintLookup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "BarRenderer r = new BarRenderer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE(0(,r.lookupSeriesPaint(0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertNull(r.getSeriesPaint(0))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "r.setAutoPopulateSeriesPaint(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertNotNull(r.getSeriesFillPaint(0))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE(0(,r.lookupSeriesFillPaint(0))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Color.blue,r.getBasePaint())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "r.setAutoPopulateSeriesPaint(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(Color.red,r.lookupSeriesFillPaint(0))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Color.blue,r.lookupSeriesPaint(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "new CategoryPlot(null,new CategoryAxis(\"Category\"),new NumberAxis(\"Value\"),r)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testFillPaintLookup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(r.getSeriesPaint(0))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "r.setAutoPopulateSeriesFillPaint(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Color.WHITE,r.lookupSeriesFillPaint(0))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testPaintLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "r.setAutoPopulateSeriesFillPaint(false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(r.getSeriesFillPaint(0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Color.red,r.getBaseFillPaint())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Color.WHITE,r.getBaseFillPaint())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
8->19 [style = dashed, label="0"];
5->8 [style = bold, label=""];
7->1 [style = bold, label=""];
15->7 [style = bold, label=""];
7->12 [style = bold, label=""];
6->20 [style = dashed, label="0"];
19->20 [style = bold, label=""];
3->18 [style = dashed, label="0"];
14->17 [style = bold, label=""];
7->2 [style = solid, label="r"];
8->6 [style = bold, label=""];
9->10 [style = bold, label=""];
12->9 [style = bold, label=""];
17->19 [style = bold, label=""];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
2->13 [style = bold, label=""];
20->2 [style = bold, label=""];
6->2 [style = bold, label=""];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
9->14 [style = dashed, label="0"];
5->17 [style = dashed, label="0"];
10->8 [style = bold, label=""];
5->10 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
7->16 [style = bold, label=""];
9->5 [style = bold, label=""];
16->14 [style = bold, label=""];
11->7 [style = bold, label=""];
13->18 [style = bold, label=""];
}
