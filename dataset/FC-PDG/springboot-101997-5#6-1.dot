digraph {
14 [style = filled, label = "factory.setSsl(getSsl(ClientAuth.WANT,\"password\",\"classpath:test.jks\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(new SSLContextBuilder().loadTrustMaterial(null,new TrustSelfSignedStrategy()).build())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String keyStore@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.webServer = factory.getWebServer()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "HttpClient httpClient = this.httpClientBuilder.get().setSSLSocketFactory(socketFactory).build()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "this.webServer.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testBasicSslWithKeyStore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "addTestTxtFile(factory)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "factory.setSsl(getSsl(null,\"password\",keyStore))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sslWantsClientAuthenticationSucceedsWithoutClientCertificate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testBasicSslWithKeyStore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "AbstractServletWebServerFactory factory = getFactory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(getResponse(getLocalUrl(\"https\",\"/test.txt\"),requestFactory)).isEqualTo(\"test\")@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
5->1 [style = dotted, label="true"];
4->0 [style = solid, label="factory"];
12->1 [style = dotted, label="true"];
11->10 [style = solid, label="httpClient"];
1->8 [style = solid, label="keyStore"];
8->14 [style = dashed, label="0"];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
14->7 [style = bold, label=""];
7->9 [style = bold, label=""];
3->10 [style = bold, label=""];
0->14 [style = bold, label=""];
3->10 [style = solid, label="httpClient"];
12->4 [style = bold, label=""];
11->10 [style = bold, label=""];
6->11 [style = bold, label=""];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
10->2 [style = bold, label=""];
3->11 [style = dashed, label="0"];
13->4 [style = bold, label=""];
}
