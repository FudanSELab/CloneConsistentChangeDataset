digraph {
23 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(out.get(4).doubleValue(),-113.0,0.01)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(out.size() == 19)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(out.get(14).doubleValue(),65.0,0.01)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(out.get(5).doubleValue(),-239.0,0.01)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "solrStream.setStreamContext(context)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0), 12)\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(out.get(0).doubleValue(),-88.0,0.01)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(out.get(1).doubleValue(),-64.0,0.01)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0))\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(out.get(8).doubleValue(),129.0,0.01)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(out.get(9).doubleValue(),-49.0,0.01)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(out.get(3).doubleValue(),144.0,0.01)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(out.get(18).doubleValue(),94.0,0.01)@@@35@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(out.get(15).doubleValue(),-71.0,0.01)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(out.get(16).doubleValue(),-262.0,0.01)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(out.get(0).doubleValue(),-88.0,0.01)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(tuples.size() == 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(out.get(2).doubleValue(),-82.0,0.01)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(out.get(12).doubleValue(),-58.0,0.01)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(out.get(13).doubleValue(),334.0,0.01)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(out.get(6).doubleValue(),-37.0,0.01)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testTimeDifferencingDefaultLag['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(out.get(5).doubleValue(),78.0,0.01)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(out.get(0).doubleValue(),-94.0,0.01)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testTimeDifferencingDefaultLag['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(out.get(3).doubleValue(),163.0,0.01)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(out.get(7).doubleValue(),-16.0,0.01)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(out.get(6).doubleValue(),73.0,0.01)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testTimeDifferencingDefinedLag['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(out.get(10).doubleValue(),138.0,0.01)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(out.get(11).doubleValue(),-199.0,0.01)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(out.get(17).doubleValue(),280.0,0.01)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertTrue(out.size() == 19)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(out.get(4).doubleValue(),-90.0,0.01)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(out.get(1).doubleValue(),352.0,0.01)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(out.size() == 8)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(out.get(2).doubleValue(),-161.0,0.01)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(out.get(7).doubleValue(),-417.0,0.01)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
0->3 [style = bold, label=""];
22->26 [style = bold, label=""];
5->44 [style = dashed, label="0"];
13->37 [style = dashed, label="0"];
14->25 [style = bold, label=""];
8->15 [style = bold, label=""];
5->20 [style = bold, label=""];
11->40 [style = dashed, label="0"];
9->2 [style = bold, label=""];
20->45 [style = dashed, label="0"];
31->0 [style = bold, label=""];
38->18 [style = solid, label="cexpr"];
35->33 [style = bold, label=""];
3->11 [style = bold, label=""];
45->36 [style = bold, label=""];
25->4 [style = bold, label=""];
26->9 [style = bold, label=""];
12->16 [style = bold, label=""];
16->23 [style = bold, label=""];
20->6 [style = bold, label=""];
23->8 [style = bold, label=""];
11->24 [style = bold, label=""];
32->30 [style = bold, label=""];
42->40 [style = bold, label=""];
46->41 [style = bold, label=""];
24->14 [style = bold, label=""];
21->12 [style = bold, label=""];
29->28 [style = bold, label=""];
19->44 [style = bold, label=""];
23->8 [style = solid, label="context"];
19->5 [style = bold, label=""];
30->18 [style = solid, label="cexpr"];
28->35 [style = bold, label=""];
1->34 [style = bold, label=""];
31->46 [style = dashed, label="0"];
0->41 [style = dashed, label="0"];
37->46 [style = bold, label=""];
24->43 [style = dashed, label="0"];
38->7 [style = bold, label=""];
30->7 [style = bold, label=""];
6->36 [style = dashed, label="0"];
6->13 [style = bold, label=""];
34->6 [style = bold, label=""];
39->38 [style = bold, label=""];
7->18 [style = bold, label=""];
36->37 [style = bold, label=""];
18->21 [style = bold, label=""];
13->31 [style = bold, label=""];
17->27 [style = bold, label=""];
1->19 [style = bold, label=""];
27->29 [style = bold, label=""];
40->43 [style = bold, label=""];
44->45 [style = bold, label=""];
12->16 [style = solid, label="url"];
4->22 [style = bold, label=""];
10->30 [style = bold, label=""];
41->42 [style = bold, label=""];
3->42 [style = dashed, label="0"];
16->15 [style = solid, label="solrStream"];
7->16 [style = solid, label="paramsLoc"];
15->1 [style = bold, label=""];
30->38 [style = dashed, label="0"];
}
