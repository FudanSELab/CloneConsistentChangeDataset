digraph {
3 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getInstanceConfigs().size(),_instances.size())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRoutingTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getInstanceConfigs().size(),_instances.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getInstanceConfigs().size(),_instances.size())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "validateRoutingTable(_routingTableProvider,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(1),_instances.get(2)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getLiveInstances().size(),_instances.size() - 1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "validateRoutingTable(_routingTableProvider2,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(2)))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getLiveInstances().size(),_instances.size())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Collection<String> databases = _routingTableProvider.getResources()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "validateRoutingTable(_routingTableProvider,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(2)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testShutdownInstance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getInstanceConfigs().size(),_instances.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "_participants.get(1).syncStop()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "_gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME,prevMasterInstance,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getLiveInstances().size(),_instances.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRoutingTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(databases.size(),1)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getLiveInstances().size(),_instances.size() - 1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String prevMasterInstance = _instances.get(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->17 [style = bold, label=""];
3->2 [style = bold, label=""];
17->18 [style = bold, label=""];
5->1 [style = bold, label=""];
16->19 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
9->0 [style = bold, label=""];
6->8 [style = bold, label=""];
13->12 [style = bold, label=""];
1->3 [style = bold, label=""];
11->10 [style = bold, label=""];
6->14 [style = bold, label=""];
19->11 [style = solid, label="prevMasterInstance"];
19->11 [style = bold, label=""];
10->13 [style = bold, label=""];
2->6 [style = bold, label=""];
8->7 [style = bold, label=""];
6->15 [style = dashed, label="0"];
0->5 [style = bold, label=""];
4->0 [style = bold, label=""];
12->6 [style = bold, label=""];
18->15 [style = bold, label=""];
}
