digraph {
16 [style = filled, label = "context.setTimestamp(timestamp)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "final Change<Long> value = ARBITRARY_CHANGE@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "harness.processor.process(key,value)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "suppressShouldNotDropTombstonesForTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(finalResults(ofMillis(0L)),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "harness.processor.process(new Record<>(key,value,timestamp))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0,100L))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(capturedForward.record(),is(new Record<>(key,value,timestamp,headers)))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final MockInternalNewProcessorContext<Windowed<String>,Change<Long>> context = harness.context@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final Headers headers = new RecordHeaders().add(\"k\",\"v\".getBytes(StandardCharsets.UTF_8))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(untilTimeLimit(ofMillis(0),maxRecords(0)),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "suppressShouldNotDropTombstonesForTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "finalResultsWithZeroGraceAtWindowEndShouldImmediatelyEmit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "context.setHeaders(headers)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "context.setRecordMetadata(\"\",0,0L)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Change<Long> value = new Change<>(null,ARBITRARY_LONG)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0L,100L))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long timestamp = 100L@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,new RecordHeaders(),timestamp)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
3->10 [style = bold, label=""];
21->0 [style = solid, label="key"];
15->12 [style = solid, label="headers"];
7->8 [style = bold, label=""];
19->6 [style = bold, label=""];
10->2 [style = bold, label=""];
11->20 [style = bold, label=""];
14->16 [style = bold, label=""];
15->19 [style = solid, label="headers"];
8->4 [style = bold, label=""];
1->13 [style = solid, label="value"];
23->5 [style = solid, label="value"];
16->19 [style = bold, label=""];
3->21 [style = bold, label=""];
9->3 [style = bold, label=""];
10->21 [style = dashed, label="0"];
9->15 [style = bold, label=""];
4->17 [style = dashed, label="0"];
9->3 [style = solid, label="timestamp"];
2->5 [style = solid, label="value"];
8->17 [style = bold, label=""];
23->0 [style = bold, label=""];
9->11 [style = solid, label="timestamp"];
10->5 [style = solid, label="key"];
24->22 [style = bold, label=""];
9->13 [style = solid, label="timestamp"];
0->13 [style = dashed, label="0"];
1->12 [style = solid, label="value"];
10->0 [style = solid, label="key"];
13->11 [style = bold, label=""];
23->0 [style = solid, label="value"];
21->5 [style = solid, label="key"];
5->11 [style = bold, label=""];
15->14 [style = bold, label=""];
4->9 [style = bold, label=""];
17->9 [style = bold, label=""];
2->0 [style = solid, label="value"];
22->4 [style = bold, label=""];
6->12 [style = solid, label="key"];
3->15 [style = dashed, label="0"];
5->12 [style = dashed, label="0"];
2->23 [style = dashed, label="0"];
2->0 [style = bold, label=""];
8->22 [style = dashed, label="0"];
18->8 [style = bold, label=""];
9->12 [style = solid, label="timestamp"];
21->23 [style = bold, label=""];
6->1 [style = bold, label=""];
20->12 [style = bold, label=""];
9->16 [style = solid, label="timestamp"];
6->13 [style = solid, label="key"];
1->13 [style = bold, label=""];
1->5 [style = bold, label=""];
}
