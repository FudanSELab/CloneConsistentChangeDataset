digraph {
0 [style = filled, label = "Action onDispose@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "@NonNull Action onDispose@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "return RxJavaPlugins.onAssembly(new MaybePeek<>(this,Functions.emptyConsumer(),Functions.emptyConsumer(),Functions.emptyConsumer(),Functions.EMPTY_ACTION,Functions.EMPTY_ACTION,Objects.requireNonNull(onDispose,\"onDispose is null\")))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "return RxJavaPlugins.onAssembly(new MaybePeek<T>(this,Functions.emptyConsumer(),Functions.emptyConsumer(),Functions.emptyConsumer(),Functions.EMPTY_ACTION,Functions.EMPTY_ACTION,Objects.requireNonNull(onDispose,\"onDispose is null\")))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "return RxJavaPlugins.onAssembly(new ParallelPeek<T>(this,Functions.emptyConsumer(),Functions.emptyConsumer(),onError,Functions.EMPTY_ACTION,Functions.EMPTY_ACTION,Functions.emptyConsumer(),Functions.EMPTY_LONG_CONSUMER,Functions.EMPTY_ACTION))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "doOnDispose['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Objects.requireNonNull(onError,\"onError is null\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "doOnDispose['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "doOnError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "@NonNull Consumer<Throwable> onError@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7->9 [style = bold, label=""];
3->4 [style = dotted, label="true"];
0->8 [style = dashed, label="0"];
2->5 [style = dashed, label="0"];
0->2 [style = solid, label="onDispose"];
1->2 [style = bold, label=""];
3->5 [style = bold, label=""];
1->0 [style = dotted, label="true"];
0->4 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->5 [style = solid, label="onDispose"];
8->7 [style = solid, label="onError"];
6->8 [style = dotted, label="true"];
8->9 [style = solid, label="onError"];
}
