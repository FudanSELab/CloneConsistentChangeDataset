digraph {
7 [style = filled, label = "Charset UTF8 = Charset.forName(\"UTF-8\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HashMap<String,DirEntry> dirents = new HashMap<String,DirEntry>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testGetFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(dirents.get(\"lambda\").getPath(),\"lambda\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "dirents.put(\"E\",null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ISVNRemote session = getSession()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(key.startsWith(\"svn:entry:\") || key.startsWith(\"svn:wc:\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "long fetched_rev = session.getDirectory(Revision.SVN_INVALID_REVNUM,\"A/B\",DirEntry.Fields.all,dirents,properties)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(e.getKey().startsWith(\"svn:entry:\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "dirents.put(\"lambda\",null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HashMap<String,byte((> properties = new HashMap<String,byte((>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HashMap<String,byte((> properties = new HashMap<String,byte((>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "dirents.put(\"F\",null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final String key = e.getKey()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ByteArrayOutputStream contents = new ByteArrayOutputStream()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(dirents.get(\"F\").getPath(),\"F\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(e.getKey().startsWith(\"svn:entry:\"))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "properties.put(\"fakename\",\"fakecontents\".getBytes(UTF8))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long fetched_rev = session.getFile(Revision.SVN_INVALID_REVNUM,\"A/B/lambda\",contents,properties)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(dirents.get(\"E\").getPath(),\"E\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testGetFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(fetched_rev,1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "properties.put(\"fakename\",\"fakecontents\".getBytes(UTF8))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testGetDirectory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
8->10 [style = bold, label=""];
16->15 [style = bold, label=""];
1->8 [style = bold, label=""];
15->14 [style = bold, label=""];
4->6 [style = bold, label=""];
6->1 [style = solid, label="fetched_rev"];
2->18 [style = bold, label=""];
14->17 [style = bold, label=""];
2->9 [style = bold, label=""];
3->4 [style = bold, label=""];
17->23 [style = bold, label=""];
8->0 [style = bold, label=""];
6->1 [style = bold, label=""];
19->1 [style = bold, label=""];
13->19 [style = bold, label=""];
12->10 [style = bold, label=""];
6->16 [style = dashed, label="0"];
23->22 [style = bold, label=""];
3->6 [style = solid, label="properties"];
1->16 [style = solid, label="properties"];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
18->16 [style = solid, label="dirents"];
7->4 [style = solid, label="UTF8"];
9->6 [style = solid, label="contents"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
18->21 [style = bold, label=""];
20->7 [style = bold, label=""];
11->7 [style = bold, label=""];
7->8 [style = solid, label="UTF8"];
21->13 [style = bold, label=""];
16->15 [style = solid, label="fetched_rev"];
}
