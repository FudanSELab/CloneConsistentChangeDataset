digraph {
4 [style = filled, label = "env.execute()@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final int numElements = 10@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "env.setParallelism(PARALLELISM)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDisabledTimestamps['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DataStream<Integer> source2 = env.addSource(new MyTimestampSource(0L,NUM_ELEMENTS))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "source1.map(new IdentityMap()).connect(source2).map(new IdentityCoMap()).transform(\"Custom Operator\",BasicTypeInfo.INT_TYPE_INFO,new DisabledTimestampCheckingOperator()).addSink(new DiscardingSink<Integer>())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DataStream<Integer> source1 = env.addSource(new MyTimestampSource(0L,NUM_ELEMENTS))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testTimestampHandling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DataStream<Integer> source2 = env.addSource(new MyTimestampSource(0L,numElements))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DataStream<Integer> source1 = env.addSource(new MyTimestampSource(0L,numElements))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final int NUM_ELEMENTS = 10@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTimestampHandling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "DataStream<Integer> source2 = env.addSource(new MyNonWatermarkingSource(NUM_ELEMENTS))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "DataStream<Integer> source1 = env.addSource(new MyNonWatermarkingSource(NUM_ELEMENTS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "source1.map(new IdentityMap()).connect(source2).map(new IdentityCoMap()).transform(\"Custom Operator\",BasicTypeInfo.INT_TYPE_INFO,new TimestampCheckingOperator()).addSink(new DiscardingSink<Integer>())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->11 [style = solid, label="numElements"];
13->10 [style = bold, label=""];
10->12 [style = solid, label="numElements"];
9->16 [style = dashed, label="0"];
16->18 [style = bold, label=""];
5->14 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
3->1 [style = bold, label=""];
17->6 [style = bold, label=""];
1->15 [style = dashed, label="0"];
2->3 [style = bold, label=""];
3->11 [style = bold, label=""];
6->9 [style = solid, label="NUM_ELEMENTS"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
15->16 [style = bold, label=""];
12->7 [style = bold, label=""];
1->9 [style = bold, label=""];
6->10 [style = dashed, label="0"];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
18->4 [style = bold, label=""];
1->11 [style = dashed, label="0"];
6->15 [style = solid, label="NUM_ELEMENTS"];
10->0 [style = bold, label=""];
6->1 [style = solid, label="NUM_ELEMENTS"];
14->2 [style = bold, label=""];
9->12 [style = dashed, label="0"];
0->5 [style = bold, label=""];
6->16 [style = solid, label="NUM_ELEMENTS"];
}
