digraph {
5 [style = filled, label = "given(this.http.execute(isA())).willReturn(response)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ProjectGenerationRequest request = new ProjectGenerationRequest()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CloseableHttpResponse response = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.thrown.expect()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "generateProjectNoContent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "loadMetadataNoContent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.thrown.expectMessage(\"No content received from server\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "mockSuccessfulMetadataGet(false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.invoker.generate(request)@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mockStatus(response,500)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThatExceptionOfType().isThrownBy(null).withMessageContaining(\"No content received from server\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "generateProjectNoContent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "this.invoker.generate(request)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->8 [style = bold, label=""];
6->5 [style = bold, label=""];
3->10 [style = dashed, label="0"];
6->5 [style = solid, label="response"];
8->4 [style = solid, label="request"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
9->0 [style = bold, label=""];
6->8 [style = solid, label="response"];
11->6 [style = solid, label="response"];
7->2 [style = solid, label="request"];
0->6 [style = bold, label=""];
3->4 [style = bold, label=""];
7->10 [style = bold, label=""];
11->5 [style = solid, label="response"];
7->3 [style = bold, label=""];
8->7 [style = bold, label=""];
11->6 [style = bold, label=""];
12->11 [style = bold, label=""];
}
