digraph {
7 [style = filled, label = "checkExpType(\"TO_TIMESTAMP(2000, 'YYYY')\",\"DATE NOT NULL\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP(2000, 'YYYY')\").withOperatorTable(postgresTable).withTypeCoercion(false).fails(\"Cannot apply 'TO_TIMESTAMP' to arguments of type \" + \"'TO_TIMESTAMP\(<INTEGER>, <CHAR\(4\)>\)'\. \" + \"Supported form\(s\): 'TO_TIMESTAMP\(<STRING>, <STRING>\)'\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "expr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "tester = tester.withOperatorTable(SqlLibraryOperatorTableFactory.INSTANCE.getOperatorTable(SqlLibrary.STANDARD,SqlLibrary.POSTGRESQL))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "checkWholeExpFails(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles')\",\"Invalid number of arguments to function 'CONVERT_TIMEZONE'. Was expecting 3 arguments\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "checkWholeExpFails(\"TO_TIMESTAMP(2000, 'YYYY')\",\"Cannot apply 'TO_TIMESTAMP' to arguments of type \" + \"'TO_TIMESTAMP\(<INTEGER>, <CHAR\(4\)>\)'\. \" + \"Supported form\(s\): 'TO_TIMESTAMP\(<STRING>, <STRING>\)'\",false)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "checkWholeExpFails(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', \" + \"'UTC', CAST('2000-01-01' AS TIMESTAMP))\",\"Invalid number of arguments to function 'CONVERT_TIMEZONE'. Was expecting 3 arguments\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "checkExpType(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS')\",\"DATE NOT NULL\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testToTimestampFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testConvertTimezoneFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "checkWholeExpFails(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', '2000-01-01')\",\"Cannot apply 'CONVERT_TIMEZONE' to arguments of type 'CONVERT_TIMEZONE\(<CHAR\(3\)>, <CHAR\(19\)>, \" + \"<CHAR\(10\)>\)'\. Supported form\(s\): 'CONVERT_TIMEZONE\(<CHARACTER>, <CHARACTER>, <DATETIME>\)'\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final SqlOperatorTable postgresTable = SqlLibraryOperatorTableFactory.INSTANCE.getOperatorTable(SqlLibrary.STANDARD,SqlLibrary.POSTGRESQL)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS',\" + \" 'YYYY-MM-DD')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_TIMESTAMP'. \" + \"Was expecting 2 arguments\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_TIMESTAMP'. \" + \"Was expecting 2 arguments\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "checkWholeExpFails(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS', 'YYYY-MM-DD')\",\"Invalid number of arguments to function 'TO_TIMESTAMP'. Was expecting 2 arguments\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "checkWholeExpFails(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', CAST('2000-01-01' AS TIMESTAMP))\",\"No match found for function signature CONVERT_TIMEZONE\(<CHARACTER>, <CHARACTER>, <TIMESTAMP>\)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS')\").fails(\"No match found for function signature \" + \"TO_TIMESTAMP\(<CHARACTER>, <CHARACTER>\)\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "expr(\"TO_TIMESTAMP(2000, 'YYYY')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "checkWholeExpFails(\"TO_TIMESTAMP('2000-01-01 01:00:00')\",\"Invalid number of arguments to function 'TO_TIMESTAMP'. Was expecting 2 arguments\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testToTimestampFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "checkWholeExpFails(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS')\",\"No match found for function signature TO_TIMESTAMP\(<CHARACTER>, <CHARACTER>\)\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "checkExpType(\"CONVERT_TIMEZONE('UTC', 'America/Los_Angeles', CAST('2000-01-01' AS TIMESTAMP))\",\"DATE NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->18 [style = dashed, label="0"];
16->0 [style = bold, label=""];
8->15 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
0->17 [style = bold, label=""];
3->16 [style = dashed, label="0"];
7->8 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
6->12 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
6->4 [style = bold, label=""];
18->20 [style = bold, label=""];
12->10 [style = bold, label=""];
13->12 [style = bold, label=""];
10->8 [style = bold, label=""];
15->9 [style = bold, label=""];
7->2 [style = bold, label=""];
11->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
21->16 [style = bold, label=""];
4->10 [style = dashed, label="0"];
20->19 [style = bold, label=""];
14->11 [style = bold, label=""];
17->18 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
