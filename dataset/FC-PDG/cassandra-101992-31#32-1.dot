digraph {
4 [style = filled, label = "LifecycleTransaction.waitForDeletions()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(files - 1,cfs.getLiveSSTables().size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "files++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ci.hasNext()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testNumberOfFiles_finish_empty_new_writer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(cfs.getLiveSSTables().size(),files)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testNumberOfFiles_finish_empty_new_writer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<SSTableReader> sstables@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "cfs.disableAutoCompaction()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "files == 3@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cfs.addSSTable(s)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rewriter.finish()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sstables = rewriter.finish()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 25000000@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testNumberOfFiles_truncate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFileCounts(s.descriptor.directory.list())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "validateCFS(cfs)@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "truncate(cfs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Set<SSTableReader> compacting = Sets.newHashSet(s)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rewriter.append(ci.next())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "rewriter.currentWriter().getFilePointer() > 2500000@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int files = 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->17 [style = bold, label=""];
14->3 [style = bold, label=""];
4->10 [style = bold, label=""];
1->4 [style = bold, label=""];
20->13 [style = bold, label=""];
17->1 [style = bold, label=""];
1->17 [style = dotted, label="true"];
16->13 [style = dotted, label="true"];
9->2 [style = bold, label=""];
26->1 [style = bold, label=""];
25->9 [style = bold, label=""];
18->19 [style = bold, label=""];
5->26 [style = bold, label=""];
16->20 [style = dotted, label="true"];
26->20 [style = dotted, label="true"];
23->3 [style = bold, label=""];
16->17 [style = bold, label=""];
3->12 [style = bold, label=""];
26->13 [style = dotted, label="true"];
12->1 [style = bold, label=""];
9->14 [style = solid, label="s"];
13->17 [style = solid, label="files"];
18->19 [style = solid, label="cfs"];
18->7 [style = solid, label="cfs"];
11->18 [style = bold, label=""];
19->25 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
3->17 [style = solid, label="files"];
5->16 [style = bold, label=""];
16->26 [style = dashed, label="0"];
6->1 [style = bold, label=""];
9->2 [style = solid, label="s"];
24->4 [style = bold, label=""];
1->26 [style = dotted, label="true"];
3->10 [style = solid, label="files"];
17->15 [style = dotted, label="true"];
14->23 [style = bold, label=""];
19->9 [style = bold, label=""];
21->11 [style = bold, label=""];
1->24 [style = bold, label=""];
10->0 [style = bold, label=""];
2->14 [style = bold, label=""];
18->9 [style = solid, label="cfs"];
15->4 [style = bold, label=""];
17->15 [style = bold, label=""];
13->10 [style = solid, label="files"];
18->20 [style = solid, label="cfs"];
13->6 [style = solid, label="files"];
26->6 [style = dotted, label="true"];
1->16 [style = dotted, label="true"];
13->6 [style = bold, label=""];
3->13 [style = solid, label="files"];
18->12 [style = solid, label="cfs"];
16->20 [style = bold, label=""];
8->11 [style = bold, label=""];
22->11 [style = bold, label=""];
1->5 [style = dotted, label="true"];
26->20 [style = bold, label=""];
16->6 [style = dotted, label="true"];
}
