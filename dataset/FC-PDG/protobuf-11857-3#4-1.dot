digraph {
13 [style = filled, label = "final Parser<T> parser@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "--recursionDepth@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "recursionDepth >= recursionLimit@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "T result = parser.parsePartialFrom(this,extensionRegistry)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "popLimit(oldLimit)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "++recursionDepth@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "readMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "getBytesUntilLimit() != 0@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "readMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int length = readRawVarint32()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return result@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw InvalidProtocolBufferException.truncatedMessage()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "readMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Parser<T> parser@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final int oldLimit = pushLimit(length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkLastTagWas(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw InvalidProtocolBufferException.recursionLimitExceeded()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Parser<T> parser@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17->12 [style = solid, label="extensionRegistry"];
5->11 [style = solid, label="length"];
10->12 [style = solid, label="extensionRegistry"];
0->11 [style = bold, label=""];
3->12 [style = bold, label=""];
15->16 [style = dotted, label="true"];
15->16 [style = bold, label=""];
9->6 [style = dotted, label="true"];
2->4 [style = bold, label=""];
12->7 [style = bold, label=""];
14->13 [style = dotted, label="true"];
14->10 [style = dotted, label="true"];
0->8 [style = dotted, label="true"];
18->10 [style = dotted, label="true"];
5->0 [style = bold, label=""];
11->3 [style = bold, label=""];
7->2 [style = bold, label=""];
18->5 [style = bold, label=""];
2->15 [style = bold, label=""];
15->4 [style = bold, label=""];
0->8 [style = bold, label=""];
12->1 [style = solid, label="result"];
9->5 [style = bold, label=""];
11->4 [style = solid, label="oldLimit"];
4->1 [style = bold, label=""];
18->17 [style = dotted, label="true"];
16->4 [style = bold, label=""];
9->10 [style = dotted, label="true"];
8->11 [style = bold, label=""];
14->5 [style = bold, label=""];
}
