digraph {
8 [style = filled, label = "assertEquals(0,floats.get(0))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "iw.addDocument(doc)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "BytesRef scratch = binaries.get(0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(NO_MORE_DOCS,ints.nextDoc())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "Bits bits = cache.getDocsWithField(ar,\"bogusbits\",null)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(NO_MORE_DOCS,floats.nextDoc())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "doc.add(new StoredField(\"bogusints\",\"bogus\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,doubles.get(0))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LeafReader ar = getOnlyLeafReader(ir)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER,true)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER,true)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(0,scratch.length)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "RandomIndexWriter iw = new RandomIndexWriter(random(),dir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(0,ints.get(0))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(-1,sorted.getOrd(0))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testNonIndexedFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER,true)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(NO_MORE_DOCS,doubles.nextDoc())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "dir.close()@@@35@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "SortedDocValues sorted = cache.getTermsIndex(ar,\"bogustermsindex\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DirectoryReader ir = iw.getReader()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doc.add(new StoredField(\"boguslongs\",\"bogus\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(NO_MORE_DOCS,longs.nextDoc())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\",true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "doc.add(new StoredField(\"bogusbytes\",\"bogus\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER,true)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "doc.add(new StoredField(\"bogusbits\",\"bogus\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER,true)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final FieldCache cache = FieldCache.DEFAULT@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "iw.close()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "ir.close()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "doc.add(new StoredField(\"bogusfloats\",\"bogus\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertFalse(bits.get(0))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER,true)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "testNonexistantFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "SortedSetDocValues sortedSet = cache.getDocTermOrds(ar,\"bogusmultivalued\",null)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "sortedSet.setDocument(0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER,true)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(0,scratch.length)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testNonIndexedFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER,true)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Document doc = new Document()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "doc.add(new StoredField(\"bogusdoubles\",\"bogus\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "scratch = sorted.get(0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "cache.purgeAllCaches()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,longs.get(0))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "doc.add(new StoredField(\"bogusshorts\",\"bogus\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->38 [style = dashed, label="0"];
3->41 [style = dashed, label="0"];
9->11 [style = bold, label=""];
3->24 [style = bold, label=""];
42->45 [style = bold, label=""];
36->29 [style = bold, label=""];
24->39 [style = bold, label=""];
53->47 [style = bold, label=""];
29->34 [style = bold, label=""];
0->33 [style = solid, label="ar"];
7->23 [style = solid, label="doc"];
0->25 [style = bold, label=""];
31->30 [style = bold, label=""];
54->53 [style = bold, label=""];
25->10 [style = bold, label=""];
48->18 [style = bold, label=""];
32->18 [style = bold, label=""];
0->1 [style = solid, label="ar"];
35->31 [style = bold, label=""];
21->44 [style = bold, label=""];
24->19 [style = bold, label=""];
0->30 [style = solid, label="ar"];
12->21 [style = bold, label=""];
0->39 [style = solid, label="ar"];
26->1 [style = bold, label=""];
20->14 [style = bold, label=""];
0->12 [style = solid, label="ar"];
21->36 [style = dashed, label="0"];
18->28 [style = bold, label=""];
0->38 [style = solid, label="ar"];
33->36 [style = bold, label=""];
7->23 [style = bold, label=""];
17->15 [style = bold, label=""];
2->33 [style = bold, label=""];
10->2 [style = bold, label=""];
34->35 [style = bold, label=""];
0->42 [style = solid, label="ar"];
45->46 [style = bold, label=""];
52->51 [style = bold, label=""];
16->20 [style = bold, label=""];
4->23 [style = bold, label=""];
22->6 [style = bold, label=""];
0->29 [style = solid, label="ar"];
27->18 [style = bold, label=""];
3->30 [style = dashed, label="0"];
12->33 [style = dashed, label="0"];
1->8 [style = bold, label=""];
8->41 [style = bold, label=""];
1->35 [style = dashed, label="0"];
0->51 [style = solid, label="ar"];
8->3 [style = bold, label=""];
5->26 [style = bold, label=""];
19->17 [style = bold, label=""];
5->29 [style = dashed, label="0"];
21->5 [style = bold, label=""];
7->22 [style = bold, label=""];
51->40 [style = bold, label=""];
24->37 [style = dashed, label="0"];
0->41 [style = solid, label="ar"];
14->13 [style = bold, label=""];
26->34 [style = dashed, label="0"];
0->44 [style = solid, label="ar"];
1->50 [style = dashed, label="0"];
49->42 [style = bold, label=""];
5->44 [style = dashed, label="0"];
40->54 [style = bold, label=""];
41->24 [style = bold, label=""];
39->43 [style = bold, label=""];
28->7 [style = bold, label=""];
18->28 [style = solid, label="dir"];
0->50 [style = solid, label="ar"];
30->37 [style = bold, label=""];
46->52 [style = bold, label=""];
2->12 [style = bold, label=""];
2->38 [style = bold, label=""];
0->5 [style = solid, label="ar"];
11->0 [style = bold, label=""];
44->26 [style = bold, label=""];
26->50 [style = bold, label=""];
0->53 [style = solid, label="ar"];
6->16 [style = bold, label=""];
0->3 [style = solid, label="ar"];
47->19 [style = bold, label=""];
50->8 [style = bold, label=""];
38->21 [style = bold, label=""];
43->49 [style = bold, label=""];
37->19 [style = bold, label=""];
8->31 [style = dashed, label="0"];
0->35 [style = solid, label="ar"];
23->9 [style = bold, label=""];
9->0 [style = solid, label="ir"];
13->4 [style = bold, label=""];
}
