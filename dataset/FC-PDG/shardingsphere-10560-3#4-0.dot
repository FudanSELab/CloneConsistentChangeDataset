digraph {
8 [style = filled, label = "when(indexStatement.executeQuery()).thenReturn(indexResultSet)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ResultSet resultSet = createColumnResultSet(\"t_order_0\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mockH2ResultSet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PreparedStatement preparedStatement = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(connection.prepareStatement(startsWith(\"SELECT table_name, column_name, ordinal_position, data_type, udt_name, column_default\"))).thenReturn(preparedStatement)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(connection.prepareStatement(startsWith(\"SELECT TABLE_CATALOG, TABLE_NAME, INDEX_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.INDEXES\"))).thenReturn(indexStatement)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ResultSet indexResultSet = createPostgreSQLIndexResultSet()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "when(connection.prepareStatement(startsWith(\"SELECT TABLE_CATALOG, TABLE_NAME\"))).thenReturn(preparedStatement)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(preparedStatement.executeQuery()).thenReturn(resultSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "mockPGResultSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Connection connection@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "mockPGResultSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "when(connection.prepareStatement(startsWith(\"SELECT tablename, indexname FROM pg_indexes WHERE schemaname\"))).thenReturn(indexStatement)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ResultSet resultSet = createColumnResultSetForPostgreSQL()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ResultSet indexResultSet = createIndexResultSet()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PreparedStatement indexStatement = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Connection connection@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8->14 [style = bold, label=""];
15->13 [style = dotted, label="true"];
9->12 [style = dashed, label="0"];
0->7 [style = bold, label=""];
0->2 [style = solid, label="preparedStatement"];
1->14 [style = solid, label="indexStatement"];
11->0 [style = bold, label=""];
4->5 [style = bold, label=""];
7->16 [style = bold, label=""];
1->8 [style = bold, label=""];
12->1 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
10->11 [style = bold, label=""];
9->8 [style = solid, label="indexResultSet"];
5->11 [style = dashed, label="0"];
8->3 [style = bold, label=""];
1->3 [style = solid, label="indexStatement"];
2->16 [style = dashed, label="0"];
2->9 [style = bold, label=""];
5->0 [style = bold, label=""];
0->16 [style = solid, label="preparedStatement"];
15->5 [style = bold, label=""];
10->6 [style = dotted, label="true"];
11->7 [style = solid, label="resultSet"];
5->7 [style = solid, label="resultSet"];
4->6 [style = dotted, label="true"];
9->1 [style = bold, label=""];
12->8 [style = solid, label="indexResultSet"];
2->12 [style = bold, label=""];
16->9 [style = bold, label=""];
7->2 [style = bold, label=""];
}
