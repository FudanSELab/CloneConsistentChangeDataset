digraph {
24 [style = filled, label = "Class dataClass = @@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "moduleManager.put(TelemetryModule.NAME,telemetryModuleDefine)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ModuleManagerTesting moduleManager = new ModuleManagerTesting()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "WorkerInstancesService workerInstancesService = new WorkerInstancesService()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "streamObserver.onCompleted()@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final String testWorkerId = \"mock-worker\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "when(metricsCreator.createHistogramMetric(any(),any(),any(),any(),any())).thenReturn(new HistogramMetrics(){@Override public void observe(double value){}})@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MetricsCreator metricsCreator = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "moduleManager = new ModuleManagerTesting()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RemoteMessage.Builder remoteMessage = RemoteMessage.newBuilder()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String serverName = InProcessServerBuilder.generateName()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "remoteData.addDataStrings(\"test2\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(metricsCreator.createCounter(any(),any(),any(),any())).thenReturn(new CounterMetrics(){@Override public void inc(){}@Override public void inc(double value){}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RemoteServiceGrpc.RemoteServiceStub remoteServiceStub = RemoteServiceGrpc.newStub(gRPCCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "telemetryModuleDefine.provider().registerServiceImplementation(,metricsCreator)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "remoteMessage.setStreamDataId(streamDataClassId)@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final int streamDataClassId = 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "remoteData.addDataStrings(\"test1\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ModuleDefineTesting telemetryModuleDefine = new ModuleDefineTesting()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int testWorkerId = 1@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "StreamObserver<RemoteMessage> streamObserver = remoteServiceStub.call(new StreamObserver<Empty>(){@Override public void onNext(Empty empty){}@Override public void onError(Throwable throwable){}@Override public void onCompleted(){}})@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "before['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "remoteMessage.setNextWorkerId(testWorkerId)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "RemoteData.Builder remoteData = RemoteData.newBuilder()@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "when(classGetter.findClassById(streamDataClassId)).thenReturn(dataClass)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "callTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "streamObserver.onNext(remoteMessage.build())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "remoteData.addDataLongs(10)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "remoteMessage.setRemoteData(remoteData)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "remoteMessage.setNextWorkerName(testWorkerId)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "remoteData.addDataLongs(20)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestWorker worker = new TestWorker(moduleManager)@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "callTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "gRPCCleanup.register(InProcessServerBuilder.forName(serverName).directExecutor().addService(new RemoteServiceHandler(moduleManager)).build().start())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "classGetter = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "StreamDataMappingGetter classGetter = mock()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "streamObserver.onCompleted()@@@50@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,classGetter)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
22->25 [style = dashed, label="0"];
34->20 [style = bold, label=""];
24->2 [style = bold, label=""];
36->41 [style = bold, label=""];
10->14 [style = bold, label=""];
4->6 [style = bold, label=""];
26->10 [style = bold, label=""];
19->20 [style = bold, label=""];
27->28 [style = bold, label=""];
16->29 [style = bold, label=""];
36->41 [style = solid, label="moduleDefine"];
12->15 [style = bold, label=""];
39->8 [style = bold, label=""];
18->30 [style = bold, label=""];
28->9 [style = bold, label=""];
7->0 [style = bold, label=""];
33->1 [style = bold, label=""];
0->21 [style = bold, label=""];
18->30 [style = solid, label="telemetryModuleDefine"];
37->39 [style = solid, label="workerInstancesService"];
9->7 [style = bold, label=""];
17->31 [style = dashed, label="0"];
15->18 [style = bold, label=""];
17->19 [style = bold, label=""];
32->6 [style = bold, label=""];
26->22 [style = bold, label=""];
31->34 [style = bold, label=""];
20->27 [style = bold, label=""];
34->7 [style = solid, label="remoteData"];
11->31 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
33->31 [style = solid, label="testWorkerId"];
40->39 [style = bold, label=""];
24->2 [style = solid, label="dataClass"];
35->8 [style = solid, label="moduleManager"];
6->33 [style = bold, label=""];
37->40 [style = solid, label="workerInstancesService"];
14->12 [style = bold, label=""];
25->26 [style = solid, label="moduleDefine"];
25->26 [style = bold, label=""];
6->17 [style = solid, label="streamDataClassId"];
5->33 [style = dashed, label="0"];
13->23 [style = bold, label=""];
5->19 [style = solid, label="testWorkerId"];
11->17 [style = bold, label=""];
26->37 [style = bold, label=""];
25->26 [style = solid, label="classGetter"];
20->0 [style = solid, label="remoteData"];
41->25 [style = bold, label=""];
22->8 [style = solid, label="classGetter"];
22->24 [style = bold, label=""];
35->36 [style = bold, label=""];
23->11 [style = bold, label=""];
38->35 [style = bold, label=""];
30->16 [style = bold, label=""];
1->25 [style = bold, label=""];
37->40 [style = bold, label=""];
2->8 [style = bold, label=""];
21->3 [style = bold, label=""];
14->16 [style = solid, label="metricsCreator"];
29->13 [style = bold, label=""];
}
