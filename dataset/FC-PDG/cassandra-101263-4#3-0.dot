digraph {
9 [style = filled, label = "assertLogEntry(cql,AuditLogEntryType.PREPARE_STATEMENT,logEntry,false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.poll()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "String cql = \"INSERT INTO \" + KEYSPACE + '.' + currentTable() + \" (id, v1, v2) VALUES (?,?,?)\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.size())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "SyntaxError e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.fail(\"should not succeed\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.size())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "{}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.poll()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Session session = sessionNet()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ResultSet rs = session.execute(cql)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testCqlSelectQuerySyntaxError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "NoHostAvailableException e@@@14@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertLogEntry(logEntry,cql)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{}@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertLogEntry(logEntry,cql)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createTable(\"CREATE TABLE %s (id int primary key, v1 text, v2 text)\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertLogEntry(logEntry,null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String cql = \"SELECT * FROM \" + KEYSPACE + '.' + currentTable() + \" LIMIT 2w\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testCqlPrepareQueryError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "NoHostAvailableException e@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "logEntry = ((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.poll()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.size())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "PreparedStatement pstmt = session.prepare(cql)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ResultSet rs = session.execute(pstmt.bind(1,\"insert_audit\",\"test\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCqlPrepareQueryError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
18->6 [style = solid, label="logEntry"];
24->28 [style = solid, label="cql"];
4->27 [style = solid, label="logEntry"];
10->20 [style = bold, label=""];
3->28 [style = dashed, label="0"];
24->2 [style = bold, label=""];
29->30 [style = bold, label=""];
17->9 [style = bold, label=""];
2->3 [style = bold, label=""];
4->15 [style = bold, label=""];
15->18 [style = dashed, label="0"];
21->8 [style = bold, label=""];
25->4 [style = bold, label=""];
0->11 [style = bold, label=""];
7->20 [style = dashed, label="0"];
19->10 [style = bold, label=""];
13->10 [style = solid, label="logEntry"];
15->6 [style = bold, label=""];
4->18 [style = bold, label=""];
26->8 [style = bold, label=""];
6->19 [style = bold, label=""];
17->9 [style = solid, label="logEntry"];
3->16 [style = bold, label=""];
13->19 [style = dashed, label="0"];
1->3 [style = solid, label="cql"];
10->7 [style = bold, label=""];
11->18 [style = bold, label=""];
11->15 [style = bold, label=""];
19->10 [style = solid, label="logEntry"];
8->1 [style = bold, label=""];
15->6 [style = solid, label="logEntry"];
18->6 [style = bold, label=""];
1->24 [style = dashed, label="0"];
12->8 [style = bold, label=""];
30->4 [style = bold, label=""];
6->13 [style = bold, label=""];
5->4 [style = bold, label=""];
4->27 [style = bold, label=""];
9->14 [style = bold, label=""];
1->10 [style = solid, label="cql"];
28->25 [style = bold, label=""];
16->9 [style = solid, label="logEntry"];
3->17 [style = bold, label=""];
1->9 [style = solid, label="cql"];
27->23 [style = bold, label=""];
1->2 [style = bold, label=""];
16->17 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
24->27 [style = solid, label="cql"];
2->28 [style = bold, label=""];
22->11 [style = bold, label=""];
16->9 [style = bold, label=""];
14->5 [style = bold, label=""];
8->24 [style = bold, label=""];
}
