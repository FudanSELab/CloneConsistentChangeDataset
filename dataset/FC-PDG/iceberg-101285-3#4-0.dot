digraph {
5 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThanOrEqual(\"id\",85)).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(\"Should read: many possible ids\",shouldRead)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThanOrEqual(\"id\",75)).eval(FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (80 > 79)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",INT_MIN_VALUE - 25)).eval(FILE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",INT_MIN_VALUE)).eval(FILE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",INT_MIN_VALUE - 1)).eval(FILE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (29 < 30)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",30)).eval(FILE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",79)).eval(FILE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testIntegerLtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThanOrEqual(\"id\",79)).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThanOrEqual(\"id\",80)).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testIntegerLtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testIntegerGtEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",5)).eval(FILE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",INT_MAX_VALUE)).eval(FILE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThanOrEqual(\"id\",29)).eval(FILE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
5->10 [style = bold, label=""];
1->5 [style = solid, label="shouldRead"];
16->0 [style = bold, label=""];
4->0 [style = solid, label="shouldRead"];
20->17 [style = bold, label=""];
20->17 [style = solid, label="shouldRead"];
4->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
16->0 [style = solid, label="shouldRead"];
8->6 [style = solid, label="shouldRead"];
7->14 [style = dashed, label="0"];
11->6 [style = bold, label=""];
18->19 [style = bold, label=""];
0->11 [style = bold, label=""];
8->6 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
2->12 [style = bold, label=""];
4->0 [style = bold, label=""];
4->12 [style = dashed, label="0"];
10->2 [style = solid, label="shouldRead"];
1->13 [style = dashed, label="0"];
7->2 [style = solid, label="shouldRead"];
1->20 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
14->15 [style = solid, label="shouldRead"];
21->20 [style = bold, label=""];
11->6 [style = solid, label="shouldRead"];
5->17 [style = dashed, label="0"];
17->14 [style = bold, label=""];
7->2 [style = bold, label=""];
6->19 [style = dashed, label="0"];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
5->7 [style = bold, label=""];
0->18 [style = bold, label=""];
7->10 [style = dashed, label="0"];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
8->18 [style = dashed, label="0"];
12->0 [style = solid, label="shouldRead"];
13->5 [style = solid, label="shouldRead"];
8->11 [style = dashed, label="0"];
18->19 [style = solid, label="shouldRead"];
9->13 [style = bold, label=""];
}
