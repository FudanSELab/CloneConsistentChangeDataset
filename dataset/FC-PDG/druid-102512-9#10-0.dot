digraph {
36 [style = filled, label = "i < numToAdd@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final String baseSequenceName = \"sequence0\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "SegmentDescriptor desc7 = sd(task,\"2013/P1D\",0)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Thread.sleep(10)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final ListenableFuture<TaskStatus> future = runTask(task)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "final SeekableStreamStartSequenceNumbers<Integer,Long> startPartitions = new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(0,0L,1,1L),ImmutableSet.of())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SegmentDescriptor desc2 = sd(task,\"2009/P1D\",0)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "task.getRunner().getStatus() != Status.PAUSED@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "insertData()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int numToAdd = records.size() - 2@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Map<Integer,Long> nextOffsets = ImmutableMap.copyOf(task.getRunner().getCurrentOffsets())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "kafkaProducer.send(records.get(i)).get()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final SeekableStreamEndSequenceNumbers<Integer,Long> checkpoint2 = new SeekableStreamEndSequenceNumbers<>(topic,ImmutableMap.of(0,10L,1,0L))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "maxTotalRows = 3L@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "testCanStartFromLaterThanEarliestOffset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertTrue(checkpointRequestsHash.contains(Objects.hash(DATA_SCHEMA.getDataSource(),0,new KafkaDataSourceMetadata(startPartitions),new KafkaDataSourceMetadata(new SeekableStreamEndSequenceNumbers<>(topic,currentOffsets)))))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(new KafkaDataSourceMetadata(new SeekableStreamEndSequenceNumbers<>(topic,ImmutableMap.of(0,10L,1,2L))),metadataStorageCoordinator.getDataSourceMetadata(DATA_SCHEMA.getDataSource()))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "kafkaProducer.send(records.get(i)).get()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(8,task.getRunner().getRowIngestionMeters().getProcessed())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "kafkaProducer.initTransactions()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "kafkaProducer.beginTransaction()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Map<String,Object> consumerProps = kafkaServer.consumerProperties()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "SegmentDescriptor desc5 = sd(task,\"2011/P1D\",1)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"a\"),readSegmentColumn(\"dim1\",desc1))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(new KafkaDataSourceMetadata(new SeekableStreamEndSequenceNumbers<>(topic,ImmutableMap.of(0,10L,1,2L))),metadataStorageCoordinator.getDataSourceMetadata(DATA_SCHEMA.getDataSource()))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testIncrementalHandOffMaxTotalRows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "Assert.assertTrue(checkpointRequestsHash.contains(Objects.hash(DATA_SCHEMA.getDataSource(),0,new KafkaDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(topic,currentOffsets,ImmutableSet.of())),new KafkaDataSourceMetadata(new SeekableStreamEndSequenceNumbers<>(topic,nextOffsets)))))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"g\"),readSegmentColumn(\"dim1\",desc6))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "consumerProps.put(\"max.poll.records\",\"1\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SegmentDescriptor desc1 = sd(task,\"2008/P1D\",0)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "final SeekableStreamEndSequenceNumbers<Integer,Long> endPartitions = new SeekableStreamEndSequenceNumbers<>(topic,ImmutableMap.of(0,10L,1,2L))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue((ImmutableList.of(\"d\",\"e\").equals(readSegmentColumn(\"dim1\",desc4)) && ImmutableList.of(\"h\").equals(readSegmentColumn(\"dim1\",desc5))) || (ImmutableList.of(\"d\",\"h\").equals(readSegmentColumn(\"dim1\",desc4)) && ImmutableList.of(\"e\").equals(readSegmentColumn(\"dim1\",desc5))))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "kafkaProducer.initTransactions()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(TaskState.SUCCESS,future.get().getStatusCode())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = numToAdd@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final SeekableStreamStartSequenceNumbers<Integer,Long> startPartitions = new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(0,0L,1,0L),ImmutableSet.of())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<String,Object> consumerProps = kafkaServer.consumerProperties()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,baseSequenceName,startPartitions,endPartitions,consumerProps,KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"b\"),readSegmentColumn(\"dim1\",desc2))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testIncrementalHandOffMaxTotalRows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "consumerProps.put(\"max.poll.records\",\"1\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final Map<Integer,Long> currentOffsets = ImmutableMap.copyOf(task.getRunner().getCurrentOffsets())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(checkpoint2.getPartitionSequenceNumberMap().equals(nextOffsets))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,baseSequenceName,startPartitions,endPartitions,consumerProps,KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"c\"),readSegmentColumn(\"dim1\",desc3))@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "SegmentDescriptor desc4 = sd(task,\"2011/P1D\",0)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < records.size()@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "task.getRunner().setEndOffsets(nextOffsets,false)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "kafkaProducer.commitTransaction()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertEquals(TaskState.SUCCESS,future.get().getStatusCode())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "maxTotalRows = null@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(2,checkpointRequestsHash.size())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "task.getRunner().getStatus() != Status.PAUSED@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "kafkaProducer.beginTransaction()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final SeekableStreamEndSequenceNumbers<Integer,Long> checkpoint1 = new SeekableStreamEndSequenceNumbers<>(topic,ImmutableMap.of(0,3L,1,0L))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "maxRowsPerSegment = Integer.MAX_VALUE@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Thread.sleep(10)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(desc1,desc2,desc3,desc4,desc5,desc6,desc7),publishedDescriptors())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"f\"),readSegmentColumn(\"dim1\",desc7))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "SegmentDescriptor desc3 = sd(task,\"2010/P1D\",0)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(desc1,desc2,desc3,desc4,desc5,desc6,desc7),publishedDescriptors())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(checkpoint1.getPartitionSequenceNumberMap(),currentOffsets)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final SeekableStreamEndSequenceNumbers<Integer,Long> endPartitions = new SeekableStreamEndSequenceNumbers<>(topic,ImmutableMap.of(0,10L,1,2L))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(checkpoint2.getPartitionSequenceNumberMap(),nextOffsets)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(1,task.getRunner().getRowIngestionMeters().getThrownAway())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "i++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "final ListenableFuture<TaskStatus> future = runTask(task)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "SegmentDescriptor desc6 = sd(task,\"2012/P1D\",0)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "task.getRunner().setEndOffsets(currentOffsets,false)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Assert.assertEquals(3,task.getRunner().getRowIngestionMeters().getUnparseable())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "kafkaProducer.commitTransaction()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->21 [style = solid, label="desc1"];
32->21 [style = solid, label="desc4"];
59->21 [style = solid, label="desc5"];
30->41 [style = solid, label="task"];
70->29 [style = bold, label=""];
61->56 [style = bold, label=""];
7->30 [style = bold, label=""];
18->61 [style = dashed, label="0"];
12->45 [style = solid, label="desc1"];
27->26 [style = solid, label="desc6"];
45->33 [style = bold, label=""];
27->45 [style = solid, label="desc6"];
26->40 [style = bold, label=""];
30->11 [style = solid, label="task"];
30->27 [style = solid, label="task"];
11->21 [style = solid, label="desc2"];
36->55 [style = bold, label=""];
12->15 [style = solid, label="desc1"];
39->60 [style = bold, label=""];
53->50 [style = solid, label="currentOffsets"];
54->29 [style = bold, label=""];
29->6 [style = bold, label=""];
8->36 [style = bold, label=""];
30->34 [style = solid, label="task"];
41->21 [style = solid, label="desc7"];
15->0 [style = bold, label=""];
69->72 [style = bold, label=""];
37->5 [style = solid, label="i"];
5->19 [style = solid, label="i"];
52->36 [style = solid, label="i"];
41->45 [style = bold, label=""];
28->13 [style = dotted, label="true"];
14->20 [style = bold, label=""];
20->61 [style = bold, label=""];
25->57 [style = bold, label=""];
53->39 [style = solid, label="currentOffsets"];
32->45 [style = solid, label="desc4"];
67->64 [style = bold, label=""];
2->37 [style = solid, label="numToAdd"];
44->3 [style = bold, label=""];
8->36 [style = solid, label="i"];
12->11 [style = bold, label=""];
62->29 [style = bold, label=""];
56->46 [style = bold, label=""];
49->38 [style = bold, label=""];
65->66 [style = bold, label=""];
30->34 [style = bold, label=""];
18->56 [style = bold, label=""];
71->72 [style = solid, label="startPartitions"];
17->37 [style = bold, label=""];
29->30 [style = solid, label="baseSequenceName"];
49->30 [style = solid, label="startPartitions"];
7->30 [style = solid, label="endPartitions"];
57->24 [style = bold, label=""];
3->53 [style = bold, label=""];
32->59 [style = bold, label=""];
20->18 [style = bold, label=""];
28->35 [style = bold, label=""];
21->9 [style = bold, label=""];
36->55 [style = dotted, label="true"];
59->45 [style = solid, label="desc5"];
20->61 [style = solid, label="nextOffsets"];
19->4 [style = dotted, label="true"];
32->1 [style = solid, label="desc4"];
35->17 [style = bold, label=""];
36->16 [style = bold, label=""];
52->36 [style = bold, label=""];
36->52 [style = dotted, label="true"];
6->67 [style = bold, label=""];
48->28 [style = bold, label=""];
3->44 [style = dotted, label="true"];
69->72 [style = solid, label="endPartitions"];
59->27 [style = bold, label=""];
24->12 [style = bold, label=""];
59->1 [style = solid, label="desc5"];
42->8 [style = bold, label=""];
6->51 [style = bold, label=""];
27->21 [style = solid, label="desc6"];
51->67 [style = dashed, label="0"];
50->48 [style = bold, label=""];
2->10 [style = bold, label=""];
58->49 [style = bold, label=""];
31->30 [style = solid, label="consumerProps"];
60->25 [style = bold, label=""];
43->7 [style = bold, label=""];
53->50 [style = bold, label=""];
5->19 [style = bold, label=""];
47->45 [style = solid, label="desc3"];
3->44 [style = bold, label=""];
11->45 [style = solid, label="desc2"];
47->32 [style = bold, label=""];
19->14 [style = bold, label=""];
72->65 [style = bold, label=""];
51->2 [style = bold, label=""];
20->56 [style = solid, label="nextOffsets"];
16->31 [style = bold, label=""];
23->39 [style = bold, label=""];
11->47 [style = bold, label=""];
47->22 [style = solid, label="desc3"];
19->5 [style = dotted, label="true"];
37->19 [style = solid, label="i"];
22->1 [style = bold, label=""];
55->52 [style = bold, label=""];
20->60 [style = solid, label="nextOffsets"];
4->5 [style = bold, label=""];
46->23 [style = bold, label=""];
30->32 [style = solid, label="task"];
38->43 [style = bold, label=""];
49->71 [style = dashed, label="0"];
20->18 [style = solid, label="nextOffsets"];
31->58 [style = bold, label=""];
30->59 [style = solid, label="task"];
8->52 [style = solid, label="i"];
30->12 [style = solid, label="task"];
53->48 [style = solid, label="currentOffsets"];
64->63 [style = bold, label=""];
2->36 [style = solid, label="numToAdd"];
47->21 [style = solid, label="desc3"];
28->13 [style = bold, label=""];
1->26 [style = bold, label=""];
29->72 [style = solid, label="baseSequenceName"];
71->69 [style = bold, label=""];
41->45 [style = solid, label="desc7"];
53->60 [style = solid, label="currentOffsets"];
41->40 [style = solid, label="desc7"];
10->42 [style = bold, label=""];
63->68 [style = bold, label=""];
34->3 [style = bold, label=""];
9->15 [style = bold, label=""];
68->71 [style = bold, label=""];
0->22 [style = bold, label=""];
27->41 [style = bold, label=""];
11->0 [style = solid, label="desc2"];
63->72 [style = solid, label="consumerProps"];
72->65 [style = solid, label="task"];
37->19 [style = bold, label=""];
19->4 [style = bold, label=""];
33->21 [style = bold, label=""];
49->39 [style = solid, label="startPartitions"];
30->47 [style = solid, label="task"];
13->28 [style = bold, label=""];
}
