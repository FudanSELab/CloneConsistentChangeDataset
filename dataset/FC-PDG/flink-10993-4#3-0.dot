digraph {
8 [style = filled, label = "final CloseTestingInputStream in = new CloseTestingInputStream()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testClosesStreamIfReaderRestoreFails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "IOException ignored@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final FileSourceSplit split = new FileSourceSplit(\"id\",testPath,0,1024,new String((((,new CheckpointedPosition(0L,5L))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "IOException ignored@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "{}@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testFs.register()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testFs.unregister()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final BulkFormat<Integer,FileSourceSplit> adapter = wrapWithAdapter(createFormatFailingInInstantiation())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testClosesStreamIfReaderCreationFails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "IOException ignored@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Path testPath = new Path(\"testFs:///testpath-1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{}@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertTrue(in.closed)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",TestingFileSystem.TestFileStatus.forFileWithStream(testPath,1024,in))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testFs.unregister()@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "adapter.createReader(new Configuration(),testPath,0,1024)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "adapter.restoreReader(new Configuration(),testPath,0,1024,new CheckpointedPosition(0L,5L))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testClosesStreamIfReaderRestoreFails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final BulkFormat<Integer> adapter = wrapWithAdapter(createFormatFailingInInstantiation())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "adapter.restoreReader(new Configuration(),split)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->2 [style = solid, label="testPath"];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
2->20 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
9->0 [style = bold, label=""];
6->7 [style = solid, label="testPath"];
20->9 [style = bold, label=""];
8->7 [style = solid, label="in"];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
19->6 [style = bold, label=""];
12->6 [style = bold, label=""];
0->15 [style = bold, label=""];
8->7 [style = bold, label=""];
6->17 [style = solid, label="testPath"];
3->10 [style = bold, label=""];
6->20 [style = solid, label="testPath"];
11->0 [style = bold, label=""];
5->6 [style = bold, label=""];
18->10 [style = bold, label=""];
1->16 [style = bold, label=""];
2->13 [style = dashed, label="0"];
17->13 [style = solid, label="split"];
6->8 [style = bold, label=""];
4->20 [style = bold, label=""];
10->9 [style = bold, label=""];
17->13 [style = bold, label=""];
14->11 [style = bold, label=""];
13->0 [style = bold, label=""];
}
