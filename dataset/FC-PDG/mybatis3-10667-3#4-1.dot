digraph {
0 [style = filled, label = "shouldDemonstrateHowAllObjectsAreKept['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cache = new SynchronizedCache(cache)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cache.clear()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNotNull(cache.getObject(0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < 100000@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldFlushAllItemsOnDemand['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i++@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldDemonstrateHowAllObjectsAreKept['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertNull(cache.getObject(0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache.putObject(i,i)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Cache cache = new PerpetualCache(\"default\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Cache cache = new SoftCache(new PerpetualCache(\"default\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertNull(cache.getObject(4))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(i,cache.getObject(i))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(100000,cache.getSize())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(cache.getObject(4))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->17 [style = bold, label=""];
11->16 [style = bold, label=""];
6->3 [style = bold, label=""];
16->6 [style = solid, label="i"];
3->2 [style = solid, label="i"];
13->10 [style = bold, label=""];
7->1 [style = bold, label=""];
4->17 [style = dashed, label="0"];
3->5 [style = solid, label="i"];
10->14 [style = bold, label=""];
6->5 [style = solid, label="i"];
3->8 [style = solid, label="i"];
16->6 [style = bold, label=""];
8->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
3->12 [style = bold, label=""];
5->3 [style = dotted, label="true"];
9->7 [style = bold, label=""];
12->6 [style = bold, label=""];
6->8 [style = solid, label="i"];
0->7 [style = bold, label=""];
7->1 [style = solid, label="cache"];
16->3 [style = solid, label="i"];
12->6 [style = solid, label="i"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
6->2 [style = solid, label="i"];
1->6 [style = bold, label=""];
15->11 [style = bold, label=""];
5->6 [style = dashed, label="0"];
5->4 [style = bold, label=""];
16->12 [style = solid, label="i"];
14->18 [style = bold, label=""];
17->13 [style = bold, label=""];
6->12 [style = dotted, label="true"];
12->3 [style = solid, label="i"];
5->8 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
6->3 [style = solid, label="i"];
2->8 [style = bold, label=""];
5->2 [style = dotted, label="true"];
}
