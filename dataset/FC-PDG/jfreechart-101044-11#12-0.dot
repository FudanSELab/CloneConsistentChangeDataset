digraph {
17 [style = filled, label = "ko2 = CloneUtils.clone(ko1)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Object obj1 = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(ko1 != ko2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ko1.addObject(\"Key 2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ko1.addObject(\"Key 1\",\"Object 1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "KeyedObjects<String> ko1 = new KeyedObjects<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ko1.addObject(\"Key 3\",\"Object 2\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ko2 = (KeyedObjects)ko1.clone()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "KeyedObjects<String> ko2 = CloneUtils.clone(ko1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(ko2.getObject(\"K1\") != obj1)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(ko2.getObject(\"K1\") == obj1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(ko1 != ko2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "KeyedObjects<String> ko2 = TestUtils.serialised(ko1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(ko1,ko2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ko1 = new KeyedObjects<>()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->24 [style = solid, label="ko1"];
6->17 [style = solid, label="ko1"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
3->17 [style = dashed, label="0"];
9->11 [style = bold, label=""];
19->12 [style = bold, label=""];
22->19 [style = bold, label=""];
16->10 [style = bold, label=""];
0->6 [style = bold, label=""];
11->4 [style = solid, label="obj1"];
3->8 [style = solid, label="ko2"];
18->11 [style = bold, label=""];
17->8 [style = solid, label="ko2"];
8->14 [style = bold, label=""];
5->15 [style = bold, label=""];
11->12 [style = bold, label=""];
15->16 [style = bold, label=""];
4->12 [style = dashed, label="0"];
17->7 [style = bold, label=""];
12->5 [style = solid, label="ko1"];
3->7 [style = solid, label="ko2"];
13->17 [style = bold, label=""];
5->10 [style = solid, label="ko2"];
2->0 [style = bold, label=""];
21->20 [style = bold, label=""];
13->3 [style = bold, label=""];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
23->21 [style = bold, label=""];
12->15 [style = solid, label="ko1"];
20->24 [style = solid, label="ko2"];
6->13 [style = bold, label=""];
0->13 [style = solid, label="obj1"];
17->7 [style = solid, label="ko2"];
0->14 [style = solid, label="obj1"];
5->15 [style = solid, label="ko2"];
10->2 [style = bold, label=""];
12->23 [style = bold, label=""];
11->2 [style = solid, label="obj1"];
20->24 [style = bold, label=""];
6->7 [style = solid, label="ko1"];
4->5 [style = bold, label=""];
10->24 [style = dashed, label="0"];
19->20 [style = solid, label="ko1"];
}
