digraph {
4 [style = filled, label = "final WindowStoreIterator<Object> windowStoreIterator = store.fetch(\"key\",ofEpochMilli(1),ofEpochMilli(10))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "windowStoreIterator.next()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertFalse(windowStoreIterator.hasNext())@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CompositeReadOnlyWindowStore<Object,Object> store = new CompositeReadOnlyWindowStore<>(new StateStoreProviderStub(false),QueryableStoreTypes.windowStore(),\"foo\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "emptyIteratorNextShouldThrowNoSuchElementException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "emptyIteratorAlwaysReturnsFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "windowStoreIteratorException.expect()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "emptyIteratorAlwaysReturnsFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final WindowStoreIterator<Object> windowStoreIterator = store.fetch(\"key\",1,10)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->3 [style = bold, label=""];
1->4 [style = dashed, label="0"];
1->2 [style = bold, label=""];
1->6 [style = bold, label=""];
4->2 [style = bold, label=""];
6->7 [style = bold, label=""];
3->1 [style = bold, label=""];
3->4 [style = bold, label=""];
8->3 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
