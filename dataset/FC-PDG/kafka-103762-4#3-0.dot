digraph {
10 [style = filled, label = "assertEquals(reconnectBackoffMsTest,delay)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "awaitReady(client,node)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(reconnectBackoffMsTest,delay)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "long delay = clientWithNoExponentialBackoff.connectionDelay(node,time.milliseconds())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long expectedDelay = reconnectBackoffMsTest@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "jitter = 0.6@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "client.poll(requestTimeoutMs,time.milliseconds())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.ready(node,time.milliseconds())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "clientWithNoExponentialBackoff.poll(requestTimeoutMs,time.milliseconds())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.poll(requestTimeoutMs,time.milliseconds())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "awaitReady(clientWithNoExponentialBackoff,node)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testConnectionDelayDisconnected['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testConnectionDelayDisconnectedWithNoExponentialBackoff['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(expectedDelay,delay,expectedDelay * jitter)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.poll(requestTimeoutMs,time.milliseconds())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "double jitter = 0.3@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testConnectionDelayDisconnected['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "selector.close(node.idString())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "double jitter = 0.2@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,client.connectionDelay(node,time.milliseconds()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "selector.close(node.idString())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "long delay = client.connectionDelay(node,time.milliseconds())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "delay = client.connectionDelay(node,time.milliseconds())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "jitter = 0.4@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "time.sleep(delay)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(0,clientWithNoExponentialBackoff.connectionDelay(node,time.milliseconds()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(expectedDelay,delay,expectedDelay * jitter)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectedDelay = Math.round(delay * 2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
4->9 [style = bold, label=""];
27->24 [style = solid, label="delay"];
7->21 [style = dashed, label="0"];
27->10 [style = solid, label="delay"];
4->17 [style = dashed, label="0"];
21->27 [style = bold, label=""];
17->9 [style = bold, label=""];
11->4 [style = bold, label=""];
25->3 [style = bold, label=""];
15->5 [style = solid, label="delay"];
1->5 [style = solid, label="jitter"];
3->26 [style = bold, label=""];
8->14 [style = bold, label=""];
3->6 [style = bold, label=""];
1->18 [style = dashed, label="0"];
0->21 [style = bold, label=""];
16->2 [style = bold, label=""];
12->1 [style = bold, label=""];
23->0 [style = bold, label=""];
27->22 [style = bold, label=""];
26->13 [style = bold, label=""];
17->9 [style = solid, label="jitter"];
0->7 [style = bold, label=""];
15->3 [style = solid, label="delay"];
18->5 [style = solid, label="jitter"];
27->22 [style = solid, label="delay"];
14->23 [style = dashed, label="0"];
19->14 [style = bold, label=""];
20->23 [style = bold, label=""];
14->0 [style = bold, label=""];
10->16 [style = bold, label=""];
6->25 [style = dashed, label="0"];
2->9 [style = solid, label="expectedDelay"];
24->25 [style = bold, label=""];
18->5 [style = bold, label=""];
6->13 [style = bold, label=""];
12->22 [style = dashed, label="0"];
12->18 [style = bold, label=""];
12->5 [style = solid, label="expectedDelay"];
11->9 [style = solid, label="delay"];
7->15 [style = bold, label=""];
11->17 [style = bold, label=""];
15->12 [style = bold, label=""];
15->2 [style = solid, label="delay"];
15->27 [style = dashed, label="0"];
22->24 [style = bold, label=""];
2->11 [style = bold, label=""];
4->9 [style = solid, label="jitter"];
}
