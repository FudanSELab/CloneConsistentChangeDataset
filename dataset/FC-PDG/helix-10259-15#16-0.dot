digraph {
108 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "pipeline.handle(event)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "pipeline.handle(event)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@102@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BestPossibleStateOutput bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "pipeline = createPipeline()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(message.getTgtName(),masterInstance)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "Boolean p2pMessageEnabled@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ResourceControllerDataProvider cache = event.getAttribute(AttributeName.ControllerDataProvider.name())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@692b0a,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Message message = messages.get(0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@89@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "cache = event.getAttribute(AttributeName.ControllerDataProvider.name())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "event.addAttribute(AttributeName.ControllerDataProvider.name(),new ResourceControllerDataProvider())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@41@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@76@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
120 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "Assert.assertEquals(message.getRelayMessages().entrySet().size(),1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(message.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "event.addAttribute(AttributeName.ControllerDataProvider.name(),cache)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "pipeline.handle(event)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "pipeline.handle(event)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "Message relayMessage = message.getRelayMessage(newMasterInstance)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "p2pMessageEnabled@@@32@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@102@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
95 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@89@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
119 [style = filled, label = "ClusterConfig clusterConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "pipeline.handle(event)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "pipeline.handle(event)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "pipeline.handle(event)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertTrue(message.getRelayMessages().entrySet().isEmpty())@@@44@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "testP2PMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Pipeline pipeline = createPipeline()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(message.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "CurrentStateOutput currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "preSetup()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
115 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127->123 [style = dotted, label="true"];
27->13 [style = bold, label=""];
47->9 [style = bold, label=""];
2->95 [style = bold, label=""];
51->5 [style = bold, label=""];
32->22 [style = bold, label=""];
55->72 [style = bold, label=""];
61->66 [style = bold, label=""];
36->123 [style = solid, label="p"];
77->86 [style = bold, label=""];
32->27 [style = solid, label="masterInstance"];
34->98 [style = bold, label=""];
44->63 [style = bold, label=""];
32->93 [style = solid, label="masterInstance"];
36->19 [style = solid, label="p"];
18->55 [style = bold, label=""];
58->49 [style = solid, label="relayMessage"];
69->89 [style = bold, label=""];
75->35 [style = bold, label=""];
99->94 [style = bold, label=""];
32->72 [style = solid, label="masterInstance"];
82->16 [style = bold, label=""];
93->49 [style = bold, label=""];
71->20 [style = bold, label=""];
1->35 [style = solid, label="currentStateOutput"];
8->32 [style = solid, label="p"];
0->107 [style = bold, label=""];
17->93 [style = solid, label="toSlaveMessage"];
127->117 [style = dotted, label="true"];
80->111 [style = dashed, label="0"];
58->3 [style = bold, label=""];
70->53 [style = bold, label=""];
8->27 [style = solid, label="p"];
23->76 [style = bold, label=""];
57->34 [style = bold, label=""];
111->106 [style = bold, label=""];
72->33 [style = bold, label=""];
3->18 [style = bold, label=""];
96->14 [style = bold, label=""];
127->39 [style = bold, label=""];
30->65 [style = bold, label=""];
122->18 [style = bold, label=""];
98->89 [style = solid, label="currentStateOutput"];
12->38 [style = bold, label=""];
104->43 [style = bold, label=""];
65->87 [style = bold, label=""];
10->75 [style = bold, label=""];
14->103 [style = bold, label=""];
97->29 [style = bold, label=""];
39->31 [style = bold, label=""];
104->75 [style = solid, label="slaveInstance"];
45->62 [style = bold, label=""];
8->69 [style = solid, label="p"];
115->21 [style = bold, label=""];
95->76 [style = solid, label="cache"];
32->4 [style = solid, label="masterInstance"];
58->3 [style = solid, label="relayMessage"];
52->112 [style = bold, label=""];
123->58 [style = solid, label="newMasterInstance"];
13->104 [style = bold, label=""];
62->2 [style = bold, label=""];
74->109 [style = bold, label=""];
26->68 [style = bold, label=""];
8->56 [style = solid, label="p"];
67->105 [style = solid, label="bestPossibleStateOutput"];
58->69 [style = solid, label="relayMessage"];
32->68 [style = solid, label="masterInstance"];
76->28 [style = bold, label=""];
8->57 [style = solid, label="p"];
11->112 [style = dashed, label="0"];
128->113 [style = dotted, label="true"];
21->19 [style = bold, label=""];
78->30 [style = bold, label=""];
86->15 [style = bold, label=""];
126->2 [style = bold, label=""];
127->124 [style = bold, label=""];
40->51 [style = bold, label=""];
63->54 [style = bold, label=""];
92->85 [style = bold, label=""];
95->23 [style = bold, label=""];
41->21 [style = bold, label=""];
83->12 [style = bold, label=""];
24->51 [style = dashed, label="0"];
25->96 [style = bold, label=""];
97->29 [style = solid, label="masterInstance"];
5->17 [style = bold, label=""];
100->56 [style = bold, label=""];
22->7 [style = bold, label=""];
84->69 [style = bold, label=""];
110->53 [style = bold, label=""];
38->48 [style = solid, label="newMasterInstance"];
127->39 [style = dotted, label="false"];
108->52 [style = bold, label=""];
97->122 [style = solid, label="masterInstance"];
38->69 [style = solid, label="newMasterInstance"];
58->122 [style = bold, label=""];
107->36 [style = bold, label=""];
0->121 [style = bold, label=""];
124->123 [style = bold, label=""];
121->107 [style = bold, label=""];
67->16 [style = solid, label="bestPossibleStateOutput"];
127->58 [style = dotted, label="true"];
8->75 [style = solid, label="p"];
38->58 [style = solid, label="newMasterInstance"];
89->78 [style = bold, label=""];
54->59 [style = bold, label=""];
56->82 [style = bold, label=""];
19->46 [style = bold, label=""];
15->64 [style = bold, label=""];
109->96 [style = bold, label=""];
29->81 [style = solid, label="currentStateOutput"];
8->93 [style = solid, label="p"];
90->91 [style = bold, label=""];
97->29 [style = solid, label="bestPossibleStateOutput"];
114->126 [style = bold, label=""];
101->92 [style = bold, label=""];
8->20 [style = solid, label="p"];
98->82 [style = solid, label="currentStateOutput"];
58->56 [style = solid, label="relayMessage"];
4->24 [style = bold, label=""];
118->125 [style = bold, label=""];
8->51 [style = solid, label="p"];
20->105 [style = bold, label=""];
67->40 [style = bold, label=""];
29->50 [style = solid, label="currentStateOutput"];
8->104 [style = solid, label="p"];
81->99 [style = bold, label=""];
128->114 [style = bold, label=""];
38->55 [style = solid, label="newMasterInstance"];
28->47 [style = bold, label=""];
25->109 [style = dashed, label="0"];
106->79 [style = bold, label=""];
35->74 [style = bold, label=""];
73->2 [style = solid, label="clusterConfig"];
6->42 [style = bold, label=""];
104->71 [style = solid, label="slaveInstance"];
36->97 [style = bold, label=""];
114->2 [style = solid, label="resourceMap"];
73->45 [style = bold, label=""];
31->93 [style = bold, label=""];
59->100 [style = bold, label=""];
0->121 [style = solid, label="bestPossibleStateOutput"];
121->107 [style = solid, label="currentStateOutput"];
120->116 [style = bold, label=""];
73->62 [style = solid, label="clusterConfig"];
74->25 [style = bold, label=""];
8->49 [style = solid, label="p"];
98->13 [style = solid, label="currentStateOutput"];
88->60 [style = bold, label=""];
8->92 [style = solid, label="p"];
127->124 [style = dotted, label="true"];
127->55 [style = dotted, label="true"];
127->125 [style = dotted, label="true"];
46->67 [style = bold, label=""];
29->50 [style = bold, label=""];
32->22 [style = solid, label="masterInstance"];
38->56 [style = solid, label="newMasterInstance"];
36->97 [style = solid, label="p"];
105->37 [style = bold, label=""];
117->118 [style = bold, label=""];
7->41 [style = bold, label=""];
38->10 [style = solid, label="newMasterInstance"];
32->49 [style = solid, label="masterInstance"];
116->28 [style = bold, label=""];
113->127 [style = solid, label="p2pMessageEnabled"];
94->57 [style = bold, label=""];
8->66 [style = solid, label="p"];
17->4 [style = bold, label=""];
32->31 [style = solid, label="masterInstance"];
127->122 [style = dotted, label="true"];
52->11 [style = bold, label=""];
97->40 [style = solid, label="masterInstance"];
49->81 [style = bold, label=""];
80->106 [style = bold, label=""];
114->126 [style = solid, label="resourceMap"];
128->119 [style = dotted, label="true"];
9->0 [style = bold, label=""];
37->80 [style = bold, label=""];
8->32 [style = bold, label=""];
2->28 [style = solid, label="resourceMap"];
7->115 [style = bold, label=""];
38->58 [style = bold, label=""];
97->50 [style = solid, label="masterInstance"];
123->117 [style = solid, label="newMasterInstance"];
11->6 [style = bold, label=""];
43->48 [style = bold, label=""];
125->58 [style = bold, label=""];
68->90 [style = bold, label=""];
43->20 [style = solid, label="instanceStateMap"];
127->18 [style = dotted, label="true"];
38->86 [style = solid, label="newMasterInstance"];
53->73 [style = bold, label=""];
48->71 [style = bold, label=""];
87->26 [style = bold, label=""];
8->59 [style = solid, label="p"];
32->7 [style = solid, label="masterInstance"];
112->6 [style = bold, label=""];
32->84 [style = solid, label="masterInstance"];
17->67 [style = dashed, label="0"];
8->84 [style = solid, label="p"];
102->77 [style = bold, label=""];
67->98 [style = solid, label="bestPossibleStateOutput"];
117->118 [style = solid, label="relayMessage"];
119->114 [style = solid, label="clusterConfig"];
37->111 [style = bold, label=""];
2->47 [style = solid, label="resourceMap"];
41->8 [style = dashed, label="0"];
33->39 [style = bold, label=""];
8->10 [style = solid, label="p"];
103->61 [style = bold, label=""];
91->27 [style = bold, label=""];
5->127 [style = bold, label=""];
83->5 [style = dashed, label="0"];
50->8 [style = bold, label=""];
24->83 [style = bold, label=""];
42->88 [style = bold, label=""];
123->117 [style = bold, label=""];
85->1 [style = bold, label=""];
8->31 [style = solid, label="p"];
8->65 [style = solid, label="p"];
67->108 [style = solid, label="bestPossibleStateOutput"];
58->117 [style = dashed, label="0"];
8->43 [style = solid, label="p"];
79->44 [style = bold, label=""];
4->40 [style = dashed, label="0"];
16->108 [style = bold, label=""];
60->101 [style = bold, label=""];
1->10 [style = bold, label=""];
67->1 [style = solid, label="bestPossibleStateOutput"];
98->84 [style = bold, label=""];
127->118 [style = dotted, label="true"];
66->102 [style = bold, label=""];
8->38 [style = solid, label="p"];
2->120 [style = bold, label=""];
}
