digraph {
10 [style = filled, label = "Assert.assertEquals(5L,selector.getLong())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "NullHandling.replaceWithDefault()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(0L,selector.getLong())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(4L,selector.getLong())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(5L,selector.getLong())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CURRENT_ROW.set(ROW0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testLongSelectorWithConstantNullArithmetic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertFalse(selector.isNull())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final BaseLongColumnValueSelector selector = CONSTANT_NULL_ARITHMETIC.makeColumnValueSelector(\"expr\",COLUMN_SELECTOR_FACTORY)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CURRENT_ROW.set(ROW1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final BaseLongColumnValueSelector selector = X_PLUS_Y.makeColumnValueSelector(\"expr\",COLUMN_SELECTOR_FACTORY)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "NullHandling.replaceWithDefault()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CURRENT_ROW.set(ROW2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CURRENT_ROW.set(ROW3)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(selector.isNull())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(selector.isNull())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(selector.isNull())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final BaseLongColumnValueSelector selector = XPLUSY.makeColumnValueSelector(\"expr\",COLUMN_SELECTOR_FACTORY)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testLongSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(2L,selector.getLong())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testLongSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->20 [style = dashed, label="0"];
4->9 [style = bold, label=""];
8->10 [style = bold, label=""];
20->17 [style = bold, label=""];
1->7 [style = dotted, label="false"];
9->2 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
1->11 [style = dotted, label="true"];
4->13 [style = bold, label=""];
4->20 [style = dotted, label="true"];
4->18 [style = dotted, label="false"];
10->3 [style = bold, label=""];
4->18 [style = bold, label=""];
7->8 [style = bold, label=""];
4->13 [style = dotted, label="false"];
1->7 [style = bold, label=""];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
3->5 [style = bold, label=""];
6->16 [style = dashed, label="0"];
12->4 [style = bold, label=""];
6->15 [style = dashed, label="0"];
4->20 [style = bold, label=""];
11->8 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
4->9 [style = dotted, label="true"];
4->17 [style = dotted, label="true"];
16->12 [style = bold, label=""];
13->2 [style = bold, label=""];
6->12 [style = bold, label=""];
}
