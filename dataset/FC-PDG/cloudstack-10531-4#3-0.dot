digraph {
16 [style = filled, label = "Assert.assertTrue(volumeToPoolObjectMap.isEmpty())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(storagePoolVoMock,volumeToPoolObjectMap.get(volumeVoMock))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Mockito.verify(virtualMachineManagerImpl,Mockito.times(0)).createVolumeToStoragePoolMappingIfPossible(virtualMachineProfileMock,hostMock,volumeToPoolObjectMap,volumeVoMock,storagePoolVoMock)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HashMap<Volume,StoragePool> volumeToPoolObjectMap = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "virtualMachineManagerImpl.createStoragePoolMappingsForVolumes(virtualMachineProfileMock,hostMock,volumeToPoolObjectMap,allVolumes)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mockito.verify(virtualMachineManagerImpl).createVolumeToStoragePoolMappingIfPossible(virtualMachineProfileMock,hostMock,volumeToPoolObjectMap,volumeVoMock,storagePoolVoMock)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Mockito.doNothing().when(virtualMachineManagerImpl).executeManagedStorageChecksWhenTargetStoragePoolNotProvided(hostMock,storagePoolVoMock,volumeVoMock)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "allVolumes.add(volumeVoMock)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(volumeToPoolObjectMap.isEmpty())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "createStoragePoolMappingsForVolumesTestNotCrossCluterMigrationWithClusterStorage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Mockito.verify(virtualMachineManagerImpl).isStorageCrossClusterMigration(hostMock,storagePoolVoMock)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Mockito.doReturn(ScopeType.HOST).when(storagePoolVoMock).getScope()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Mockito.verify(virtualMachineManagerImpl).executeManagedStorageChecksWhenTargetStoragePoolNotProvided(hostMock,storagePoolVoMock,volumeVoMock)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Mockito.doReturn(false).when(virtualMachineManagerImpl).isStorageCrossClusterMigration(hostMock,storagePoolVoMock)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "createStoragePoolMappingsForVolumesTestLocalStoragevolume['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "createStoragePoolMappingsForVolumesTestNotCrossCluterMigrationWithClusterStorage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(volumeToPoolObjectMap.isEmpty())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "ArrayList<Volume> allVolumes = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Mockito.doNothing().when(virtualMachineManagerImpl).createVolumeToStoragePoolMappingIfPossible(virtualMachineProfileMock,hostMock,volumeToPoolObjectMap,volumeVoMock,storagePoolVoMock)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
15->13 [style = bold, label=""];
9->5 [style = solid, label="volumeToPoolObjectMap"];
9->10 [style = solid, label="volumeToPoolObjectMap"];
10->15 [style = bold, label=""];
0->2 [style = bold, label=""];
1->3 [style = bold, label=""];
7->4 [style = bold, label=""];
16->17 [style = bold, label=""];
18->2 [style = bold, label=""];
9->7 [style = bold, label=""];
12->1 [style = bold, label=""];
10->6 [style = bold, label=""];
9->12 [style = solid, label="volumeToPoolObjectMap"];
1->12 [style = dashed, label="0"];
17->12 [style = bold, label=""];
6->16 [style = dashed, label="0"];
13->12 [style = bold, label=""];
10->16 [style = bold, label=""];
6->15 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
11->10 [style = bold, label=""];
9->3 [style = solid, label="volumeToPoolObjectMap"];
6->13 [style = bold, label=""];
2->10 [style = solid, label="allVolumes"];
8->9 [style = bold, label=""];
9->19 [style = bold, label=""];
5->11 [style = bold, label=""];
14->2 [style = bold, label=""];
19->4 [style = bold, label=""];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
}
