digraph {
3 [style = filled, label = "testDuplicatePlugin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(result.getWarnings().get(3).contains(\"duplicate declaration of plugin profile:managed-duplicate\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertTrue(result.getWarnings().get(2).contains(\"duplicate declaration of plugin profile:duplicate\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertTrue(result.getWarnings().get(1).contains(\"duplicate declaration of plugin test:managed-duplicate\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertTrue(result.getErrors().get(0).contains(\"duplicate declaration of plugin test:duplicate\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertViolations(result,0,3,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(result.getErrors().get(0).contains(\"test:d\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(result.getErrors().get(3).contains(\"duplicate declaration of plugin profile:managed-duplicate\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(result.getWarnings().get(0).contains(\"duplicate declaration of plugin test:duplicate\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertTrue(result.getErrors().get(1).contains(\"duplicate declaration of plugin test:managed-duplicate\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertViolations(result,0,4,0)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "SimpleProblemCollector result = validateRaw(\"duplicate-plugin.xml\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertViolations(result,0,0,4)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testDuplicatePlugin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "SimpleProblemCollector result = validate(\"bad-plugin-dependency-scope.xml\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testBadPluginDependencyScope['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(result.getErrors().get(2).contains(\"test:f\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(result.getErrors().get(2).contains(\"duplicate declaration of plugin profile:duplicate\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertTrue(result.getErrors().get(1).contains(\"test:e\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->13 [style = bold, label=""];
5->12 [style = dashed, label="0"];
6->8 [style = dashed, label="0"];
5->14 [style = dashed, label="0"];
9->0 [style = bold, label=""];
4->6 [style = bold, label=""];
7->12 [style = bold, label=""];
0->2 [style = bold, label=""];
0->16 [style = dashed, label="0"];
16->13 [style = solid, label="result"];
2->7 [style = dashed, label="0"];
15->18 [style = bold, label=""];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
0->2 [style = solid, label="result"];
6->1 [style = bold, label=""];
12->10 [style = bold, label=""];
10->8 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
4->15 [style = dashed, label="0"];
0->7 [style = solid, label="result"];
5->4 [style = bold, label=""];
14->15 [style = bold, label=""];
4->10 [style = dashed, label="0"];
8->11 [style = bold, label=""];
13->14 [style = bold, label=""];
17->16 [style = bold, label=""];
2->5 [style = bold, label=""];
}
