digraph {
8 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Predicate1<String> startWithS = null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Predicate1<Integer> numberGT15 = null@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).firstOrDefault(startWithS))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testFirstPredicate1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Predicate1<Integer> numberGT15 = new Predicate1<Integer>(){public boolean apply(Integer i){return i > 15}}@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String s = Linq4j.asEnumerable(peopleWithoutCharS).first(startWithS)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "fail(\"expected exception, but got\" + s)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).first(startWithS))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testFirstOrDefaultPredicate1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).first(numberGT15))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String s = Linq4j.asEnumerable(peopleWithoutCharS).first(startWithS)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).firstOrDefault(numberGT15))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Predicate1<String> startWithS = new Predicate1<String>(){public boolean apply(String s){return s != null && Character.toString(s.charAt(0)).equals(\"S\")}}@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).first(startWithS))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "testFirstPredicate1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).firstOrDefault(startWithS))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
5->8 [style = bold, label=""];
13->12 [style = solid, label="startWithS"];
5->18 [style = solid, label="numberGT15"];
15->13 [style = bold, label=""];
16->11 [style = bold, label=""];
9->0 [style = bold, label=""];
17->1 [style = bold, label=""];
2->19 [style = solid, label="startWithS"];
7->18 [style = solid, label="numbers"];
9->18 [style = dashed, label="0"];
0->4 [style = solid, label="s"];
18->19 [style = bold, label=""];
2->3 [style = solid, label="startWithS"];
5->9 [style = solid, label="numberGT15"];
13->17 [style = solid, label="startWithS"];
7->20 [style = bold, label=""];
1->7 [style = bold, label=""];
8->20 [style = solid, label="people"];
7->3 [style = bold, label=""];
21->2 [style = bold, label=""];
6->2 [style = bold, label=""];
16->12 [style = solid, label="people"];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
8->17 [style = bold, label=""];
20->18 [style = bold, label=""];
2->0 [style = solid, label="startWithS"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
2->13 [style = dashed, label="0"];
2->20 [style = solid, label="startWithS"];
10->8 [style = solid, label="numbers"];
3->20 [style = dashed, label="0"];
17->1 [style = solid, label="s"];
7->9 [style = solid, label="numbers"];
14->8 [style = solid, label="numberGT15"];
8->3 [style = solid, label="people"];
13->14 [style = bold, label=""];
2->5 [style = bold, label=""];
}
