digraph {
6 [style = filled, label = "renew(client,key,json)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "RemoteInstance remoteInstance@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "log.error(\"Failed to keep alive in Etcd coordinator\",throwable)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "EtcdEndpoint endpoint = new EtcdEndpoint.Builder().host(address.getHost()).port(address.getPort()).serviceName(SERVICE_NAME).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "client.putDir(serviceName).send()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "healthChecker.unHealth(throwable)@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "initHealthChecker()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "healthChecker.health()@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "promise.get()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "onError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "return endpoint@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "buildEndpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "this.selfAddress = remoteInstance.getAddress()@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "registerRemote['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Address address = instance.getAddress()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "RemoteInstance instance@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "onCompleted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "needUsingInternalAddr()@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String json = new Gson().toJson(endpoint)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "String key = buildKey(serviceName,selfAddress,remoteInstance)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EtcdEndpoint endpoint = new EtcdEndpoint.Builder().serviceName(serviceName).host(selfAddress.getHost()).port(selfAddress.getPort()).build()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "EtcdResponsePromise<EtcdKeysResponse> promise = client.put(key,json).ttl(KEY_TTL).send()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "remoteInstance = new RemoteInstance(new Address(config.getInternalComHost(),config.getInternalComPort(),true))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->8 [style = bold, label=""];
7->1 [style = bold, label=""];
11->6 [style = solid, label="key"];
0->6 [style = bold, label=""];
8->11 [style = solid, label="remoteInstance"];
19->20 [style = bold, label=""];
14->16 [style = solid, label="throwable"];
14->15 [style = solid, label="throwable"];
3->4 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
22->18 [style = solid, label="endpoint"];
12->11 [style = solid, label="selfAddress"];
2->7 [style = solid, label="endpoint"];
19->21 [style = dotted, label="true"];
1->0 [style = bold, label=""];
4->11 [style = solid, label="remoteInstance"];
15->14 [style = dotted, label="true"];
2->10 [style = bold, label=""];
15->16 [style = bold, label=""];
13->11 [style = bold, label=""];
20->22 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
7->6 [style = solid, label="json"];
22->18 [style = bold, label=""];
10->13 [style = bold, label=""];
5->12 [style = bold, label=""];
17->15 [style = bold, label=""];
5->8 [style = dotted, label="true"];
6->9 [style = bold, label=""];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
}
