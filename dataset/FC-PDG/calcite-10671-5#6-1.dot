digraph {
9 [style = filled, label = "SqlNode n = p.parse(tpchTestQuery)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelNode r = p.convert(n)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "p.close()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "traitDefs.add(RelCollationTraitDef.INSTANCE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testOrderByNonSelectColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(plan,equalTo(\"LogicalSort(sort0=($0(, dir0=(ASC()\" + \" LogicalProject(psPartkey=($0()\" + \" LogicalProject(psPartkey=($0()\" + \" LogicalSort(sort0=($0(, sort1=($1(, dir0=(ASC(, dir1=(ASC()\" + \" LogicalProject(psPartkey=($0(, psSupplyCost=($1()\" + \" EnumerableTableScan(table=((tpch, partsupp(()\"))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Planner p = Frameworks.getPlanner(Frameworks.newConfigBuilder().parserConfig(parserConfig).defaultSchema(schema).traitDefs(traitDefs).programs(Programs.ofRules(Programs.RULE_SET)).build())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "RelNode r = p.convert(n)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "plan = Util.toLinux(plan)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final FrameworkConfig config = Frameworks.newConfigBuilder().parserConfig(SqlParser.configBuilder().setLex(Lex.MYSQL).build()).defaultSchema(schema).programs(Programs.ofRules(Programs.RULE_SET)).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Planner p = Frameworks.getPlanner(config)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "n = p.validate(n)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<RelTraitDef> traitDefs = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkTpchQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final SchemaPlus schema = Frameworks.createRootSchema(true).add(\"tpch\",new ReflectiveSchema(new TpchSchema()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "traitDefs.add(ConventionTraitDef.INSTANCE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "n = p.validate(n)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String plan = RelOptUtil.toString(r)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SqlNode n = p.parse(query)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String tpchTestQuery@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "p.close()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkTpchQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RelNode r = p.rel(n).project()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String plan = RelOptUtil.toString(r)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final SchemaPlus schema = Frameworks.createRootSchema(true).add(\"tpch\",new ReflectiveSchema(new TpchSchema()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final SqlParser.Config parserConfig = SqlParser.configBuilder().setLex(Lex.MYSQL).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String query = \"select t.psPartkey from \" + \"(select ps.psPartkey from `tpch`.`partsupp` ps \" + \"order by ps.psPartkey, ps.psSupplyCost) t \" + \"order by t.psPartkey\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
22->26 [style = bold, label=""];
15->23 [style = bold, label=""];
3->0 [style = solid, label="r"];
5->9 [style = solid, label="tpchTestQuery"];
6->22 [style = bold, label=""];
25->13 [style = bold, label=""];
2->1 [style = bold, label=""];
22->26 [style = solid, label="r"];
11->4 [style = bold, label=""];
18->17 [style = bold, label=""];
10->3 [style = bold, label=""];
6->22 [style = solid, label="n"];
11->5 [style = dotted, label="true"];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
16->19 [style = bold, label=""];
12->0 [style = bold, label=""];
24->6 [style = solid, label="n"];
3->0 [style = bold, label=""];
1->9 [style = bold, label=""];
19->25 [style = bold, label=""];
0->7 [style = bold, label=""];
10->3 [style = solid, label="n"];
9->10 [style = solid, label="n"];
17->24 [style = bold, label=""];
3->12 [style = dashed, label="0"];
20->23 [style = solid, label="plan"];
8->5 [style = dotted, label="true"];
10->12 [style = bold, label=""];
16->24 [style = solid, label="query"];
7->6 [style = bold, label=""];
0->6 [style = solid, label="plan"];
4->14 [style = dashed, label="0"];
12->0 [style = solid, label="r"];
8->4 [style = bold, label=""];
26->20 [style = solid, label="plan"];
24->6 [style = bold, label=""];
20->15 [style = bold, label=""];
2->1 [style = solid, label="config"];
6->23 [style = dashed, label="0"];
26->20 [style = bold, label=""];
13->18 [style = bold, label=""];
21->14 [style = bold, label=""];
}
