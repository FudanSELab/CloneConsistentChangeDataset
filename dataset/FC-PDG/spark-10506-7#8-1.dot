digraph {
5 [style = filled, label = "System.out.println(\"Learned classification tree model:\" + treeModel.toDebugString())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Dataset<Row> testData = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "double accuracy = evaluator.evaluate(predictions)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Dataset<Row> data = spark.read().format(\"libsvm\").load(\"data/mllib/sample_libsvm_data.txt\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "System.out.println(\"Test Error = \" + (1.0 - accuracy))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DecisionTreeClassificationModel treeModel = (DecisionTreeClassificationModel)(model.stages()(2()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "predictions.select(\"predictedLabel\",\"label\",\"features\").show(5)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "spark.stop()@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Dataset<Row> data = spark.read().format(\"libsvm\").load(\"data/mllib/sample_libsvm_data.txt\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "IndexToString labelConverter = new IndexToString().setInputCol(\"prediction\").setOutputCol(\"predictedLabel\").setLabels(labelIndexer.labelsArray()(0()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "System.out.println(\"Learned classification forest model:\" + rfModel.toDebugString())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Pipeline pipeline = new Pipeline().setStages(new PipelineStage((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6b487)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RandomForestClassificationModel rfModel = (RandomForestClassificationModel)(model.stages()(2()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaRandomForestClassifierExample\").getOrCreate()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "RandomForestClassifier rf = new RandomForestClassifier().setLabelCol(\"indexedLabel\").setFeaturesCol(\"indexedFeatures\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaDecisionTreeClassificationExample\").getOrCreate()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MulticlassClassificationEvaluator evaluator = new MulticlassClassificationEvaluator().setLabelCol(\"indexedLabel\").setPredictionCol(\"prediction\").setMetricName(\"accuracy\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DecisionTreeClassifier dt = new DecisionTreeClassifier().setLabelCol(\"indexedLabel\").setFeaturesCol(\"indexedFeatures\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StringIndexerModel labelIndexer = new StringIndexer().setInputCol(\"label\").setOutputCol(\"indexedLabel\").fit(data)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IndexToString labelConverter = new IndexToString().setInputCol(\"prediction\").setOutputCol(\"predictedLabel\").setLabels(labelIndexer.labels())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Dataset<Row>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6b36c)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Dataset<Row>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6b44f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "PipelineModel model = pipeline.fit(trainingData)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Dataset<Row> predictions = model.transform(testData)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Dataset<Row> trainingData = splits(0(@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "VectorIndexerModel featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(4).fit(data)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Pipeline pipeline = new Pipeline().setStages(new PipelineStage((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6b3a6)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
11->16 [style = bold, label=""];
8->30 [style = bold, label=""];
29->17 [style = dotted, label="true"];
28->6 [style = bold, label=""];
2->26 [style = bold, label=""];
4->25 [style = bold, label=""];
3->24 [style = bold, label=""];
10->14 [style = bold, label=""];
2->0 [style = solid, label="featureIndexer"];
26->14 [style = solid, label="splits"];
26->8 [style = solid, label="splits"];
9->28 [style = dashed, label="0"];
3->24 [style = solid, label="labelConverter"];
26->14 [style = bold, label=""];
16->13 [style = solid, label="predictions"];
9->6 [style = solid, label="data"];
0->11 [style = bold, label=""];
5->15 [style = bold, label=""];
6->0 [style = solid, label="labelIndexer"];
21->17 [style = dotted, label="true"];
20->3 [style = bold, label=""];
3->22 [style = dashed, label="0"];
29->23 [style = bold, label=""];
2->10 [style = bold, label=""];
21->18 [style = bold, label=""];
27->15 [style = bold, label=""];
3->0 [style = bold, label=""];
28->6 [style = solid, label="data"];
9->6 [style = bold, label=""];
20->22 [style = bold, label=""];
6->2 [style = bold, label=""];
23->28 [style = bold, label=""];
25->27 [style = bold, label=""];
20->0 [style = solid, label="dt"];
9->2 [style = solid, label="data"];
5->27 [style = dashed, label="0"];
10->26 [style = dashed, label="0"];
10->14 [style = solid, label="splits"];
8->20 [style = bold, label=""];
22->0 [style = bold, label=""];
19->13 [style = bold, label=""];
22->0 [style = solid, label="labelConverter"];
30->3 [style = bold, label=""];
18->23 [style = dashed, label="0"];
24->11 [style = bold, label=""];
14->11 [style = solid, label="trainingData"];
10->8 [style = solid, label="splits"];
28->2 [style = solid, label="data"];
6->24 [style = solid, label="labelIndexer"];
20->30 [style = dashed, label="0"];
18->9 [style = bold, label=""];
7->18 [style = bold, label=""];
30->24 [style = solid, label="rf"];
0->24 [style = dashed, label="0"];
14->8 [style = bold, label=""];
4->1 [style = bold, label=""];
8->16 [style = solid, label="testData"];
13->4 [style = solid, label="accuracy"];
12->19 [style = bold, label=""];
1->25 [style = dashed, label="0"];
7->17 [style = dotted, label="true"];
16->12 [style = bold, label=""];
2->24 [style = solid, label="featureIndexer"];
3->0 [style = solid, label="labelConverter"];
13->4 [style = bold, label=""];
}
