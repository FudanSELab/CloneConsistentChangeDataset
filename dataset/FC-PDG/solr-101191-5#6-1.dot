digraph {
24 [style = filled, label = "testPreExistingMultiValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertNotNull(liProcessor.process(doc).getFieldValue(\"text_multivalue_no\"))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testPreExisting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testPreExisting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ModifiableSolrParams parameters = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "parameters.add(\"langid.enforceSchema\",\"false\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "parameters.add(\"langid.fl\",\"text\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"no\",process(doc).getFieldValue(\"languages\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "doc = englishDoc()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"no\",process(doc).getFieldValue(\"language\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "SolrInputDocument doc@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "doc.setField(\"language\",\"no\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "parameters.add(\"langid.map\",\"true\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"en\",process(doc).getFieldValue(\"language\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertNotNull(process(doc).getFieldValue(\"text_no\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "parameters.add(\"langid.langField\",\"language\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "parameters.add(\"langid.langsField\",\"languages\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"no\",liProcessor.process(doc).getFieldValue(\"language\"))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(liProcessor.process(doc).getFieldValue(\"text_no\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "parameters.add(\"langid.fl\",\"text_multivalue\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"en\",liProcessor.process(doc).getFieldValue(\"language\"))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "liProcessor = createLangIdProcessor(parameters)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"en\",liProcessor.process(doc).getFieldValue(\"languages\"))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"en\",process(doc).getFieldValue(\"languages\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "doc = englishDoc()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"no\",liProcessor.process(doc).getFieldValue(\"languages\"))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
14->3 [style = bold, label=""];
17->10 [style = bold, label=""];
10->15 [style = bold, label=""];
16->8 [style = bold, label=""];
7->10 [style = bold, label=""];
7->17 [style = dashed, label="0"];
6->23 [style = bold, label=""];
19->20 [style = bold, label=""];
3->18 [style = dashed, label="0"];
11->4 [style = bold, label=""];
18->17 [style = bold, label=""];
0->11 [style = bold, label=""];
16->23 [style = dashed, label="0"];
13->25 [style = dashed, label="0"];
23->8 [style = bold, label=""];
15->19 [style = bold, label=""];
12->1 [style = bold, label=""];
1->13 [style = bold, label=""];
24->5 [style = bold, label=""];
20->22 [style = bold, label=""];
1->20 [style = dashed, label="0"];
8->0 [style = bold, label=""];
21->5 [style = bold, label=""];
5->6 [style = bold, label=""];
12->19 [style = dashed, label="0"];
3->7 [style = bold, label=""];
6->16 [style = bold, label=""];
6->9 [style = solid, label="parameters"];
9->14 [style = bold, label=""];
14->18 [style = bold, label=""];
15->12 [style = bold, label=""];
13->22 [style = dashed, label="0"];
1->25 [style = bold, label=""];
2->5 [style = bold, label=""];
}
