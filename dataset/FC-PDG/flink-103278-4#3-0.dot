digraph {
11 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(extractResult(testHarness),contains(\"ON_PROC_TIME:HELLO\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KeyGroupRange subKeyGroupRange2 = new KeyGroupRange(subKeyGroupRange1.getEndKeyGroup() + 1,MAX_PARALLELISM - 1)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testHarness2.setProcessingTime(10L)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestOperator testOperator2 = new TestOperator()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(extractResult(testHarness).isEmpty())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testHarness.processWatermark(20L)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(extractResult(testHarness2),contains(\"ON_EVENT_TIME:CIAO\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_PROC_TIME:HELLO\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_STATE:CIAO\"),0)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "int key1 = getKeyInKeyGroupRange(subKeyGroupRange1,MAX_PARALLELISM)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testHarness1.processWatermark(20L)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testHarness2.open()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(testOperator,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,MAX_PARALLELISM,1,0)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_EVENT_TIME:HELLO\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int key2 = getKeyInKeyGroupRange(subKeyGroupRange2,MAX_PARALLELISM)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "testHarness2.initializeState(snapshot)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testHarness.processWatermark(0L)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "testHarness.open()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_PROC_TIME_TIMER:10\"),0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testHarness.processWatermark(0L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testStateAndTimerStateShufflingScalingUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "int key2 = getKeyInKeyGroupRange(subKeyGroupRange2,maxParallelism)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testHarness2.setup()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "KeyGroupRange subKeyGroupRange1 = new KeyGroupRange(0,(MAX_PARALLELISM / 2) - 1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(testOperator,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,1,0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "testHarness.setProcessingTime(0L)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertThat(extractResult(testHarness),contains(\"ON_EVENT_TIME:HELLO\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final int MAX_PARALLELISM = 10@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "testHarness2.setProcessingTime(20L)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "KeyGroupRange subKeyGroupRange1 = new KeyGroupRange(0,(maxParallelism / 2) - 1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_STATE:HELLO\"),0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final int maxParallelism = 10@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "testHarness1.setProcessingTime(10L)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testHarness.processElement(new Tuple2<>(0,\"SET_EVENT_TIME_TIMER:20\"),0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness2.processWatermark(20L)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "TestOperator testOperator = new TestOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "testHarness.setProcessingTime(10L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testProcessingTimeAndEventTimeDontInterfere['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testHarness1.setProcessingTime(20L)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "OperatorStateHandles snapshot = testHarness.snapshot(0,0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.processElement(new Tuple2<>(0,\"SET_STATE:HELLO\"),0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testHarness1.processWatermark(10L)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "TestOperator testOperator1 = new TestOperator()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness1.initializeState(snapshot)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness1 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator1,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,MAX_PARALLELISM,2,0)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "testHarness1.open()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testHarness1.setup()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_EVENT_TIME_TIMER:20\"),0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness2 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator2,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,2,1)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_EVENT_TIME_TIMER:10\"),0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testHarness.processElement(new Tuple2<>(0,\"SET_PROC_TIME_TIMER:10\"),0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(extractResult(testHarness2),contains(\"ON_PROC_TIME:CIAO\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "int key1 = getKeyInKeyGroupRange(subKeyGroupRange1,maxParallelism)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(testOperator,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testStateAndTimerStateShufflingScalingUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness1 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator1,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,2,0)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness2 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator2,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,MAX_PARALLELISM,2,1)@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "testHarness2.processWatermark(10L)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "KeyGroupRange subKeyGroupRange2 = new KeyGroupRange(subKeyGroupRange1.getEndKeyGroup() + 1,maxParallelism - 1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_PROC_TIME_TIMER:20\"),0)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->33 [style = solid, label="MAX_PARALLELISM"];
2->26 [style = bold, label=""];
61->66 [style = bold, label=""];
30->13 [style = bold, label=""];
56->30 [style = bold, label=""];
4->25 [style = bold, label=""];
23->54 [style = solid, label="testOperator"];
10->7 [style = solid, label="testHarness1"];
39->9 [style = bold, label=""];
15->54 [style = dashed, label="0"];
49->54 [style = solid, label="maxParallelism"];
40->56 [style = solid, label="testOperator1"];
49->48 [style = bold, label=""];
55->51 [style = bold, label=""];
40->10 [style = solid, label="testOperator1"];
66->62 [style = bold, label=""];
15->60 [style = dashed, label="0"];
25->6 [style = bold, label=""];
38->39 [style = bold, label=""];
0->37 [style = solid, label="testOperator2"];
9->64 [style = dashed, label="0"];
6->29 [style = bold, label=""];
1->59 [style = dashed, label="0"];
47->22 [style = bold, label=""];
17->53 [style = dashed, label="0"];
37->25 [style = solid, label="testHarness2"];
37->31 [style = bold, label=""];
3->10 [style = solid, label="MAX_PARALLELISM"];
62->23 [style = bold, label=""];
33->47 [style = solid, label="subKeyGroupRange1"];
54->5 [style = bold, label=""];
19->3 [style = bold, label=""];
55->14 [style = solid, label="key1"];
55->1 [style = solid, label="key1"];
49->51 [style = solid, label="maxParallelism"];
29->36 [style = bold, label=""];
53->51 [style = solid, label="subKeyGroupRange2"];
3->22 [style = solid, label="MAX_PARALLELISM"];
26->42 [style = bold, label=""];
49->48 [style = solid, label="maxParallelism"];
60->57 [style = solid, label="testHarness"];
49->50 [style = solid, label="maxParallelism"];
23->15 [style = solid, label="testOperator"];
51->23 [style = bold, label=""];
3->33 [style = bold, label=""];
34->5 [style = dashed, label="0"];
22->23 [style = bold, label=""];
35->28 [style = bold, label=""];
3->17 [style = solid, label="MAX_PARALLELISM"];
58->63 [style = bold, label=""];
20->43 [style = solid, label="snapshot"];
3->15 [style = solid, label="MAX_PARALLELISM"];
18->1 [style = bold, label=""];
21->11 [style = bold, label=""];
43->12 [style = bold, label=""];
50->31 [style = bold, label=""];
37->50 [style = dashed, label="0"];
10->28 [style = solid, label="testHarness1"];
45->21 [style = bold, label=""];
14->18 [style = bold, label=""];
10->56 [style = dashed, label="0"];
42->7 [style = bold, label=""];
34->38 [style = bold, label=""];
51->39 [style = solid, label="key2"];
23->59 [style = bold, label=""];
37->32 [style = solid, label="testHarness2"];
64->57 [style = bold, label=""];
23->54 [style = bold, label=""];
56->7 [style = solid, label="testHarness1"];
33->48 [style = dashed, label="0"];
13->24 [style = bold, label=""];
3->47 [style = solid, label="MAX_PARALLELISM"];
40->56 [style = bold, label=""];
47->55 [style = dashed, label="0"];
60->65 [style = solid, label="testHarness"];
23->15 [style = bold, label=""];
51->34 [style = solid, label="key2"];
9->20 [style = bold, label=""];
44->14 [style = bold, label=""];
59->5 [style = bold, label=""];
48->55 [style = solid, label="subKeyGroupRange1"];
17->22 [style = solid, label="subKeyGroupRange2"];
49->56 [style = solid, label="maxParallelism"];
55->38 [style = solid, label="key1"];
1->34 [style = bold, label=""];
32->8 [style = bold, label=""];
22->18 [style = solid, label="key2"];
12->46 [style = bold, label=""];
63->60 [style = bold, label=""];
60->61 [style = bold, label=""];
5->44 [style = bold, label=""];
18->23 [style = dashed, label="0"];
31->43 [style = bold, label=""];
47->14 [style = solid, label="key1"];
56->28 [style = solid, label="testHarness1"];
10->30 [style = bold, label=""];
38->44 [style = dashed, label="0"];
47->38 [style = solid, label="key1"];
33->17 [style = bold, label=""];
49->53 [style = solid, label="maxParallelism"];
53->55 [style = bold, label=""];
40->10 [style = bold, label=""];
0->37 [style = bold, label=""];
49->55 [style = solid, label="maxParallelism"];
24->35 [style = bold, label=""];
52->49 [style = bold, label=""];
17->47 [style = bold, label=""];
65->64 [style = bold, label=""];
14->62 [style = dashed, label="0"];
22->39 [style = solid, label="key2"];
20->13 [style = solid, label="snapshot"];
36->32 [style = bold, label=""];
48->53 [style = bold, label=""];
16->2 [style = bold, label=""];
47->1 [style = solid, label="key1"];
28->16 [style = bold, label=""];
50->32 [style = solid, label="testHarness2"];
0->50 [style = bold, label=""];
15->5 [style = bold, label=""];
7->45 [style = bold, label=""];
0->50 [style = solid, label="testOperator2"];
27->4 [style = bold, label=""];
20->40 [style = bold, label=""];
11->0 [style = bold, label=""];
5->41 [style = bold, label=""];
3->37 [style = solid, label="MAX_PARALLELISM"];
22->34 [style = solid, label="key2"];
63->60 [style = solid, label="testOperator"];
50->25 [style = solid, label="testHarness2"];
3->49 [style = dashed, label="0"];
46->27 [style = bold, label=""];
44->65 [style = bold, label=""];
41->44 [style = bold, label=""];
51->18 [style = solid, label="key2"];
22->51 [style = dashed, label="0"];
}
