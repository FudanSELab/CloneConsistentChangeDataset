digraph {
8 [style = filled, label = "when(builder.protocol(any())).thenReturn(builder)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(builder.apiCallTimeout(any())).thenReturn(builder)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return builder@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(builder.maxConcurrency(anyInt())).thenReturn(builder)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mockHttpClientBuilder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ClientOverrideConfiguration.Builder builder = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return builder@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mockHttpClientBuilder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "when(builder.http2Configuration(any())).thenReturn(builder)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(builder.putAdvancedOption(any(),any())).thenReturn(builder)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mockClientOverrideConfigurationBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(builder.writeTimeout(any())).thenReturn(builder)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "NettyNioAsyncHttpClient.Builder builder = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(builder.connectionTimeout(any())).thenReturn(builder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(builder.connectionMaxIdleTime(any())).thenReturn(builder)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(builder.apiCallAttemptTimeout(any())).thenReturn(builder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(builder.tcpKeepAlive(anyBoolean())).thenReturn(builder)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "when(builder.connectionAcquisitionTimeout(any())).thenReturn(builder)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(builder.readTimeout(any())).thenReturn(builder)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3->11 [style = bold, label=""];
5->8 [style = bold, label=""];
2->4 [style = bold, label=""];
2->4 [style = solid, label="builder"];
7->10 [style = bold, label=""];
0->7 [style = bold, label=""];
12->2 [style = bold, label=""];
2->11 [style = solid, label="builder"];
4->16 [style = dashed, label="0"];
16->15 [style = bold, label=""];
2->8 [style = solid, label="builder"];
2->9 [style = solid, label="builder"];
2->18 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
9->0 [style = bold, label=""];
14->19 [style = bold, label=""];
18->14 [style = solid, label="builder"];
2->5 [style = solid, label="builder"];
2->0 [style = solid, label="builder"];
8->3 [style = bold, label=""];
3->1 [style = bold, label=""];
6->2 [style = bold, label=""];
2->13 [style = solid, label="builder"];
15->14 [style = bold, label=""];
4->9 [style = bold, label=""];
9->15 [style = dashed, label="0"];
2->1 [style = solid, label="builder"];
18->16 [style = bold, label=""];
11->13 [style = bold, label=""];
18->16 [style = solid, label="builder"];
13->1 [style = bold, label=""];
2->7 [style = solid, label="builder"];
18->19 [style = solid, label="builder"];
2->3 [style = solid, label="builder"];
10->5 [style = bold, label=""];
18->15 [style = solid, label="builder"];
2->10 [style = solid, label="builder"];
17->18 [style = bold, label=""];
}
