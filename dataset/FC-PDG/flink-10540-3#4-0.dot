digraph {
12 [style = filled, label = "testBadTableSinkForNonExistingPartitionerClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "FactoryUtil.createTableSink(null,ObjectIdentifier.of(\"default\",\"default\",TABLE_NAME),createSinkTable(sinkSchema,sinkOptions,Collections.emptyList()),new Configuration(),Thread.currentThread().getContextClassLoader(),false)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testBadTableSinkForCustomPartitionerForPartitionedTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TableSchema sinkSchema = defaultSinkSchema().build()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testBadTableSinkForCustomPartitionerForPartitionedTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "FactoryUtil.createTableSink(null,ObjectIdentifier.of(\"default\",\"default\",TABLE_NAME),createSinkTable(sinkSchema,sinkOptions,Arrays.asList(\"name\",\"curr_id\")),new Configuration(),Thread.currentThread().getContextClassLoader(),false)@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ResolvedSchema sinkSchema = defaultSinkSchema()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Map<String,String> sinkOptions = defaultTableOptions().withTableOption(KinesisOptions.SINK_PARTITIONER,\"random\").build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "thrown.expect()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,String> sinkOptions = defaultTableOptions().withTableOption(KinesisOptions.SINK_PARTITIONER,\"abc\").build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "thrown.expect(containsCause(new ValidationException(String.format(\"Cannot set %s option for a table defined with a PARTITIONED BY clause\",KinesisOptions.SINK_PARTITIONER.key()))))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createTableSink(sinkSchema,Arrays.asList(\"name\",\"curr_id\"),sinkOptions)@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "thrown.expect(containsCause(new ValidationException(\"Could not find and instantiate partitioner class 'abc'\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->0 [style = bold, label=""];
0->7 [style = dashed, label="0"];
11->4 [style = bold, label=""];
2->4 [style = bold, label=""];
7->8 [style = solid, label="sinkSchema"];
1->9 [style = dashed, label="0"];
1->8 [style = bold, label=""];
11->10 [style = solid, label="sinkOptions"];
0->11 [style = bold, label=""];
4->1 [style = bold, label=""];
2->5 [style = solid, label="sinkOptions"];
2->8 [style = solid, label="sinkOptions"];
0->10 [style = solid, label="sinkSchema"];
3->0 [style = bold, label=""];
4->9 [style = bold, label=""];
0->5 [style = solid, label="sinkSchema"];
2->11 [style = dashed, label="0"];
0->2 [style = bold, label=""];
6->7 [style = bold, label=""];
9->10 [style = bold, label=""];
1->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
