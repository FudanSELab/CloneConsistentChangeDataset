digraph {
8 [style = filled, label = "final String tblName = \"test_parallelism\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ExecNode execNode = planner.translateToExecNodePlan(toScala(Collections.singletonList(relNode))).get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testParallelismSetting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "batchTableEnv.executeSql(\"CREATE TABLE source_db.test_parallelism \" + \"(`year` STRING, `value` INT) partitioned by (pt int)\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "@SuppressWarnings(\"unchecked\") Transformation transformation = execNode.translateToPlan(planner)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testParallelismSettingTranslateAndAssert(2,table,batchTableEnv)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Table table = tEnv.sqlQuery(\"select * from hive.source_db.test_parallelism\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Table table@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HiveTestUtils.createTextTableInserter(hiveShell,dbName,tblName).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bba2).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bba8).commit(\"pt=1\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testParallelismSettingTranslateAndAssert(2,table,tEnv)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE source_db.test_parallelism \" + \"(`year` STRING, `value` INT) partitioned by (pt int)\")@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HiveTestUtils.createTextTableInserter(hiveCatalog,dbName,tblName).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bbde).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bbe4).commit(\"pt=0\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testParallelismSetting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "HiveTestUtils.createTextTableInserter(hiveShell,dbName,tblName).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bb8a).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bb90).commit(\"pt=0\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "RelNode relNode = planner.optimize(TableTestUtil.toRelNode(table))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "HiveTestUtils.createTextTableInserter(hiveCatalog,dbName,tblName).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bbf6).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c2bbfc).commit(\"pt=1\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "int expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TableEnvironment tEnv = createTableEnv()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PlannerBase planner = (PlannerBase)((TableEnvironmentImpl)tEnv).getPlanner()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String dbName = \"source_db\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Table table = batchTableEnv.sqlQuery(\"select * from hive.source_db.test_parallelism\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(expected,transformation.getParallelism())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testParallelismSettingTranslateAndAssert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TableEnvironment tEnv@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17->20 [style = dotted, label="true"];
7->1 [style = bold, label=""];
22->15 [style = bold, label=""];
21->19 [style = bold, label=""];
17->18 [style = dotted, label="true"];
2->3 [style = bold, label=""];
12->11 [style = bold, label=""];
5->3 [style = solid, label="tEnv"];
9->10 [style = solid, label="table"];
9->10 [style = bold, label=""];
11->9 [style = bold, label=""];
16->19 [style = solid, label="table"];
4->0 [style = bold, label=""];
21->22 [style = solid, label="planner"];
17->16 [style = dotted, label="true"];
13->12 [style = bold, label=""];
23->22 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
14->0 [style = bold, label=""];
2->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
19->23 [style = bold, label=""];
2->3 [style = solid, label="table"];
0->8 [style = bold, label=""];
1->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
20->15 [style = solid, label="expected"];
6->7 [style = bold, label=""];
17->21 [style = bold, label=""];
8->13 [style = bold, label=""];
}
