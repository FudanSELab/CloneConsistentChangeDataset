digraph {
37 [style = filled, label = "masterService.start()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "createMasterService['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "masterService.submitStateUpdateTask(\"test5\",new ClusterStateUpdateTask(){@Override public ClusterState execute(ClusterState currentState){return ClusterState.builder(currentState).incrementVersion().build()}@Override public void clusterStateProcessed(String source,ClusterState oldState,ClusterState newState){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test6 should log due to slow and failing publication\",.getCanonicalName(),Level.WARN,\"took (*( and then failed to publish updated cluster state (version: *, uuid: *) for (test6(:*\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final AtomicReference<ClusterState> clusterStateRef = new AtomicReference<>(initialClusterState)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testLongClusterStateUpdateLogging['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "processedFirstTask.await()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Loggers.addAppender(clusterLogger,mockAppender)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "masterService.setClusterStateSupplier(null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "masterService.setClusterStatePublisher(null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "final CountDownLatch processedFirstTask = new CountDownLatch(1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "mockAppender.assertAllExpectationsMatched()@@@129@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(6)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final DiscoveryNode localNode = new DiscoveryNode(\"node1\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final AtomicReference<ClusterState> clusterStateRef = new AtomicReference<>(initialClusterState)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final MasterService masterService = new MasterService(Settings.builder().put(ClusterName.CLUSTER_NAME_SETTING.getKey(),.getSimpleName()).put(Node.NODE_NAME_SETTING.getKey(),\"test_node\").build(),new ClusterSettings(Settings.EMPTY,ClusterSettings.BUILT_IN_CLUSTER_SETTINGS),threadPool)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "{Loggers.removeAppender(clusterLogger,mockAppender)mockAppender.stop()}@@@125@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "masterService.submitStateUpdateTask(\"test3\",new ClusterStateUpdateTask(){@Override public ClusterState execute(ClusterState currentState){relativeTimeInMillis += MasterService.MASTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING.get(Settings.EMPTY).millis() + randomLongBetween(1,1000000)return ClusterState.builder(currentState).incrementVersion().build()}@Override public void clusterStateProcessed(String source,ClusterState oldState,ClusterState newState){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.UnseenEventExpectation(\"test5 should not log despite publishing slowly\",.getCanonicalName(),Level.WARN,\"*took*test5*\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test3\",.getCanonicalName(),Level.WARN,\"*took (*(, which is over (10s(, to compute cluster state update for (test3(\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "masterService.setClusterStatePublisher(null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "masterService.start()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "masterService.setClusterStateSupplier(null)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "masterService.submitStateUpdateTask(\"test6\",new ClusterStateUpdateTask(){@Override public ClusterState execute(ClusterState currentState){return ClusterState.builder(currentState).incrementVersion().build()}@Override public void clusterStateProcessed(String source,ClusterState oldState,ClusterState newState){fail()}@Override public void onFailure(String source,Exception e){fail()}})@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "masterService.submitStateUpdateTask(\"test7\",new ClusterStateUpdateTask(){@Override public ClusterState execute(ClusterState currentState){return currentState}@Override public void clusterStateProcessed(String source,ClusterState oldState,ClusterState newState){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "masterService.submitStateUpdateTask(\"test4\",new ClusterStateUpdateTask(){@Override public ClusterState execute(ClusterState currentState){relativeTimeInMillis += MasterService.MASTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING.get(Settings.EMPTY).millis() + randomLongBetween(1,1000000)return currentState}@Override public void clusterStateProcessed(String source,ClusterState oldState,ClusterState newState){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "masterService.setClusterStatePublisher(null)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "mockAppender.start()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "boolean makeMaster@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "masterService.submitStateUpdateTask(\"test2\",new ClusterStateUpdateTask(){@Override public ClusterState execute(ClusterState currentState){relativeTimeInMillis += MasterService.MASTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING.get(Settings.EMPTY).millis() + randomLongBetween(1,1000000)throw new IllegalArgumentException(\"Testing handling of exceptions in the cluster state task\")}@Override public void clusterStateProcessed(String source,ClusterState oldState,ClusterState newState){fail()}@Override public void onFailure(String source,Exception e){latch.countDown()}})@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final ClusterState initialClusterState = ClusterState.builder(new ClusterName(.getSimpleName())).nodes(DiscoveryNodes.builder().add(localNode).localNodeId(localNode.getId()).masterNodeId(localNode.getId())).blocks(ClusterBlocks.EMPTY_CLUSTER_BLOCK).build()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test2\",.getCanonicalName(),Level.WARN,\"*took (*(, which is over (10s(, to compute cluster state update for (test2(\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "latch.await()@@@123@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ClusterState initialClusterState = ClusterState.builder(new ClusterName(.getSimpleName())).nodes(DiscoveryNodes.builder().add(localNode).localNodeId(localNode.getId()).masterNodeId(makeMaster? localNode.getId(): null)).blocks(ClusterBlocks.EMPTY_CLUSTER_BLOCK).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createMasterService['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "masterService.submitStateUpdateTask(\"test1\",new ClusterStateUpdateTask(){@Override public ClusterState execute(ClusterState currentState){relativeTimeInMillis += randomLongBetween(0L,MasterService.MASTER_SERVICE_SLOW_TASK_LOGGING_THRESHOLD_SETTING.get(Settings.EMPTY).millis())return currentState}@Override public void clusterStateProcessed(String source,ClusterState oldState,ClusterState newState){latch.countDown()processedFirstTask.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Logger clusterLogger = LogManager.getLogger()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "MockLogAppender mockAppender = new MockLogAppender()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final DiscoveryNode localNode = new DiscoveryNode(\"node1\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.UnseenEventExpectation(\"test1 shouldn't log because it was fast enough\",.getCanonicalName(),Level.WARN,\"*took*test1*\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test4\",.getCanonicalName(),Level.WARN,\"*took (*(, which is over (10s(, to compute cluster state update for (test4(\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->26 [style = bold, label=""];
10->6 [style = dotted, label="true"];
28->36 [style = bold, label=""];
9->0 [style = bold, label=""];
7->4 [style = solid, label="masterService"];
25->13 [style = bold, label=""];
15->21 [style = bold, label=""];
29->34 [style = solid, label="mockAppender"];
39->34 [style = bold, label=""];
27->28 [style = bold, label=""];
29->31 [style = bold, label=""];
1->3 [style = bold, label=""];
35->32 [style = bold, label=""];
16->23 [style = bold, label=""];
32->19 [style = bold, label=""];
9->6 [style = dotted, label="true"];
36->33 [style = bold, label=""];
31->15 [style = bold, label=""];
39->36 [style = solid, label="clusterLogger"];
21->38 [style = bold, label=""];
0->7 [style = bold, label=""];
39->34 [style = solid, label="clusterLogger"];
20->18 [style = bold, label=""];
5->1 [style = bold, label=""];
13->37 [style = bold, label=""];
26->12 [style = bold, label=""];
23->24 [style = bold, label=""];
29->36 [style = solid, label="mockAppender"];
40->16 [style = bold, label=""];
2->5 [style = solid, label="initialClusterState"];
11->3 [style = bold, label=""];
20->18 [style = solid, label="initialClusterState"];
7->2 [style = bold, label=""];
1->11 [style = dashed, label="0"];
3->8 [style = bold, label=""];
10->0 [style = bold, label=""];
24->17 [style = bold, label=""];
4->20 [style = bold, label=""];
18->25 [style = bold, label=""];
14->29 [style = bold, label=""];
34->4 [style = bold, label=""];
30->40 [style = bold, label=""];
5->11 [style = bold, label=""];
8->4 [style = bold, label=""];
12->39 [style = bold, label=""];
37->35 [style = bold, label=""];
38->22 [style = bold, label=""];
17->27 [style = bold, label=""];
2->5 [style = bold, label=""];
19->30 [style = bold, label=""];
}
