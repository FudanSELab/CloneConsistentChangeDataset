digraph {
22 [style = filled, label = "addChild['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "_identifier == null && _function == null@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "_identifier = TransformExpressionTree.getStandardExpression(childNode)@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "_function = (FunctionCallAstNode)childNode@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "LiteralAstNode node = (LiteralAstNode)childNode@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@89f06cchildNode@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between two columns is not supported.\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_identifier = node.getName()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "_identifier = ((IdentifierAstNode)childNode).getName()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has both identifier and function.\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "addChild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "_identifier != null@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has both identifier and function.\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between two functions is not supported.\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "childNode instanceof FunctionCallAstNode@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has more than one function.\")@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "_literal = node@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "_literal == null@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has more than one identifier.\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "AstNode childNode@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "childNode instanceof LiteralAstNode@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between column and function is not supported.\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "IdentifierAstNode node = (IdentifierAstNode)childNode@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has more than one column/function\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "_identifier = ((IdentifierAstNode)childNode).getName()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "_identifier != null@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "_identifier != null@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "_identifier = TransformExpressionTree.getStandardExpression(childNode)@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between two constants is not supported.\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "_function != null@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "childNode instanceof IdentifierAstNode@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "addChild['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "_identifier = TransformExpressionTree.getStandardExpression(childNode)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between function and column is not supported.\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@89efb0childNode@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "childNode instanceof FunctionCallAstNode@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "_function == null && _identifier == null@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28->11 [style = dotted, label="true"];
12->29 [style = dotted, label="false"];
29->5 [style = bold, label=""];
25->33 [style = bold, label=""];
32->0 [style = bold, label=""];
32->0 [style = dotted, label="true"];
29->5 [style = dotted, label="true"];
11->20 [style = solid, label="childNode"];
6->1 [style = dotted, label="true"];
24->34 [style = bold, label=""];
36->33 [style = bold, label=""];
22->4 [style = bold, label=""];
6->26 [style = dotted, label="true"];
0->3 [style = dotted, label="false"];
14->7 [style = dotted, label="true"];
11->13 [style = solid, label="childNode"];
4->12 [style = dotted, label="false"];
4->31 [style = dotted, label="false"];
32->25 [style = bold, label=""];
31->30 [style = bold, label=""];
27->33 [style = bold, label=""];
31->12 [style = dotted, label="true"];
17->20 [style = bold, label=""];
6->15 [style = dotted, label="true"];
6->32 [style = bold, label=""];
0->3 [style = bold, label=""];
14->2 [style = dotted, label="true"];
5->10 [style = bold, label=""];
24->35 [style = solid, label="node"];
19->18 [style = bold, label=""];
21->20 [style = dotted, label="true"];
5->33 [style = bold, label=""];
0->23 [style = dashed, label="0"];
4->23 [style = dotted, label="true"];
12->2 [style = dotted, label="true"];
4->19 [style = bold, label=""];
4->21 [style = bold, label=""];
11->14 [style = solid, label="childNode"];
21->17 [style = dotted, label="true"];
11->30 [style = solid, label="childNode"];
11->15 [style = solid, label="childNode"];
29->27 [style = bold, label=""];
12->29 [style = bold, label=""];
11->33 [style = solid, label="childNode"];
34->36 [style = bold, label=""];
6->19 [style = dashed, label="0"];
12->14 [style = bold, label=""];
15->26 [style = dashed, label="0"];
2->33 [style = bold, label=""];
11->2 [style = solid, label="childNode"];
11->24 [style = solid, label="childNode"];
34->35 [style = bold, label=""];
32->25 [style = dotted, label="false"];
0->16 [style = bold, label=""];
6->0 [style = dotted, label="false"];
34->36 [style = dotted, label="false"];
30->24 [style = bold, label=""];
6->26 [style = bold, label=""];
18->23 [style = bold, label=""];
30->33 [style = bold, label=""];
5->10 [style = dotted, label="true"];
9->11 [style = dotted, label="true"];
6->32 [style = dotted, label="false"];
19->18 [style = dotted, label="true"];
12->20 [style = bold, label=""];
21->5 [style = dotted, label="false"];
30->34 [style = dotted, label="true"];
31->12 [style = bold, label=""];
6->15 [style = bold, label=""];
12->13 [style = bold, label=""];
21->5 [style = bold, label=""];
4->31 [style = bold, label=""];
17->12 [style = bold, label=""];
17->12 [style = dotted, label="true"];
34->35 [style = dotted, label="true"];
29->27 [style = dotted, label="false"];
4->12 [style = bold, label=""];
14->17 [style = dashed, label="0"];
14->2 [style = bold, label=""];
0->16 [style = dotted, label="true"];
5->8 [style = dotted, label="false"];
11->31 [style = solid, label="childNode"];
11->21 [style = solid, label="childNode"];
16->0 [style = dashed, label="0"];
4->19 [style = dotted, label="true"];
14->5 [style = bold, label=""];
15->1 [style = bold, label=""];
12->13 [style = dotted, label="false"];
4->6 [style = dotted, label="true"];
5->8 [style = bold, label=""];
30->24 [style = dotted, label="true"];
4->6 [style = bold, label=""];
9->4 [style = bold, label=""];
11->7 [style = solid, label="childNode"];
35->33 [style = bold, label=""];
22->11 [style = dotted, label="true"];
6->0 [style = bold, label=""];
11->5 [style = solid, label="childNode"];
12->14 [style = dotted, label="true"];
0->33 [style = bold, label=""];
4->21 [style = dotted, label="false"];
19->23 [style = bold, label=""];
8->27 [style = dashed, label="0"];
11->12 [style = solid, label="childNode"];
11->4 [style = solid, label="childNode"];
10->5 [style = dashed, label="0"];
2->7 [style = bold, label=""];
26->33 [style = bold, label=""];
21->17 [style = bold, label=""];
31->30 [style = dotted, label="false"];
14->5 [style = dotted, label="false"];
28->4 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
