digraph {
10 [style = filled, label = "SolrInputField special = null@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "special.setValue(new TreeSet<>(Arrays.asList(\"ggg\",\"first\",\"last\",\"hhh\")),1.2F)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "special.setValue(Arrays.asList(\"first\",\"ggg\",\"hhh\",\"last\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertNotNull(d)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "special.setValue(Arrays.asList(\"first\",\"ggg\",\"hhh\",\"last\"),1.2F)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "d = processAdd(\"last-value\",doc(f(\"id\",\"1111\"),special))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(d)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Arrays.asList(\"string222\"),d.getFieldValues(\"foo_s\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"last\",d.getFieldValue(\"foo_s\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "d = processAdd(\"first-value\",doc(f(\"id\",\"1111\"),f(\"foo_s\",\"string1\",\"string222\"),f(\"bar_s\",\"string3\"),f(\"yak_t\",\"string4\",\"string5\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testLastValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "d = processAdd(\"last-value\",doc(f(\"id\",\"1111\"),special))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testLastValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Arrays.asList(\"string4\",\"string5\"),d.getFieldValues(\"yak_t\"))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"last\",d.getFieldValue(\"foo_s\"))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "special = new SolrInputField(\"foo_s\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SolrInputDocument d = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "special = new SolrInputField(\"foo_s\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "d = processAdd(\"last-value\",doc(f(\"id\",\"1111\"),special))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "special.setValue(new TreeSet<>(Arrays.asList(\"ggg\",\"first\",\"last\",\"hhh\")))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "special.setValue(new LinkedHashSet<>(Arrays.asList(\"first\",\"ggg\",\"hhh\",\"last\")),1.2F)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertNotNull(d)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "special = new SolrInputField(\"foo_s\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(Arrays.asList(\"string1\"),d.getFieldValues(\"foo_s\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "special.setValue(new LinkedHashSet<>(Arrays.asList(\"first\",\"ggg\",\"hhh\",\"last\")))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(\"last\",d.getFieldValue(\"foo_s\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testFirstValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(Arrays.asList(\"string3\"),d.getFieldValues(\"bar_s\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "d = processAdd(\"last-value\",doc(f(\"id\",\"1111\"),f(\"foo_s\",\"string1\",\"string222\"),f(\"bar_s\",\"string3\"),f(\"yak_t\",\"string4\",\"string5\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(d)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->3 [style = bold, label=""];
6->11 [style = solid, label="d"];
19->18 [style = bold, label=""];
12->28 [style = bold, label=""];
27->12 [style = bold, label=""];
10->14 [style = bold, label=""];
4->6 [style = bold, label=""];
25->13 [style = bold, label=""];
16->24 [style = bold, label=""];
22->1 [style = solid, label="d"];
9->28 [style = dashed, label="0"];
28->7 [style = bold, label=""];
16->6 [style = solid, label="special"];
15->29 [style = dashed, label="0"];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
15->19 [style = bold, label=""];
3->22 [style = bold, label=""];
20->25 [style = bold, label=""];
2->13 [style = bold, label=""];
20->2 [style = bold, label=""];
21->12 [style = bold, label=""];
5->16 [style = bold, label=""];
8->0 [style = bold, label=""];
3->23 [style = dashed, label="0"];
26->12 [style = bold, label=""];
23->22 [style = bold, label=""];
29->19 [style = bold, label=""];
18->10 [style = bold, label=""];
14->23 [style = bold, label=""];
14->22 [style = solid, label="special"];
28->7 [style = solid, label="d"];
6->11 [style = bold, label=""];
20->13 [style = solid, label="special"];
2->25 [style = dashed, label="0"];
7->15 [style = bold, label=""];
11->17 [style = bold, label=""];
13->8 [style = solid, label="d"];
22->1 [style = bold, label=""];
4->24 [style = dashed, label="0"];
16->4 [style = bold, label=""];
13->8 [style = bold, label=""];
9->7 [style = solid, label="d"];
24->6 [style = bold, label=""];
17->20 [style = bold, label=""];
7->29 [style = bold, label=""];
}
