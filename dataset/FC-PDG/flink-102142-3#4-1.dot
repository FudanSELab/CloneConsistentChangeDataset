digraph {
5 [style = filled, label = "createTable(true,sink.toURI().toString(),false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<String> results = CollectionUtil.iteratorToList(iter).stream().map(null).collect(Collectors.toList())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "prepareTables(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "createTable(true,sink.toURI().toString(),true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(1,row.getField(4))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(EXPECTED,results)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "iter.close()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<String> results = CollectionUtil.iteratorToList(iter).stream().map(null).collect(Collectors.toList())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "tEnv().executeSql(\"insert into sink select id,name,UPPER(name),description,weight from source\").await()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CloseableIterator<Row> iter = tEnv().executeSql(\"select id,upper_name,description,weight,p from sink\").collect()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "prepareTables(false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Row> list = CollectionUtil.iteratorToList(iter)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "createTable(false,source.toURI().toString(),false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNonPartition['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testNonPartition['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "createTable(false,source.toURI().toString(),true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<String> results = list.stream().map(null).map(null).collect(Collectors.toList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testPartition['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CloseableIterator<Row> iter = tEnv().executeSql(\"select id,upper_name,description,weight from sink\").collect()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tEnv().executeSql(\"insert into sink select id,name,UPPER(name),description,weight,p from source\").await()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
1->8 [style = bold, label=""];
2->6 [style = bold, label=""];
3->14 [style = bold, label=""];
6->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
2->9 [style = bold, label=""];
16->19 [style = bold, label=""];
15->16 [style = bold, label=""];
16->19 [style = solid, label="iter"];
3->0 [style = bold, label=""];
8->13 [style = dashed, label="0"];
13->12 [style = bold, label=""];
8->5 [style = bold, label=""];
14->0 [style = bold, label=""];
14->0 [style = solid, label="results"];
7->2 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
11->13 [style = bold, label=""];
6->19 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
0->18 [style = bold, label=""];
4->1 [style = bold, label=""];
10->1 [style = bold, label=""];
19->3 [style = bold, label=""];
6->0 [style = solid, label="results"];
9->0 [style = solid, label="results"];
17->11 [style = bold, label=""];
}
