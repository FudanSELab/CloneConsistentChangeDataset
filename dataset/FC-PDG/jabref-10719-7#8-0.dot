digraph {
3 [style = filled, label = "assertEquals(String.join(\"\",Files.readAllLines(expectedFile)),String.join(\"\",Files.readAllLines(exportedFile)))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Path expectedFile = Path.of(.getResource(xmlFileName).toURI())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "List<BibEntry> entries = bibtexImporter.importDatabase(importFile,charset).getDatabase().getEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String xmlFileName = filename.replace(\".bib\",\".xml\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "exporter.export(databaseContext,exportedFile,charset,entries)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "importFile = Path.of(.getResource(filename).toURI())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "importFile = Paths.get(.getResource(filename).toURI())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testPerformExport['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "BibEntryAssert.assertEquals(entries,exportedFile,modsImporter)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Path expectedFile = Paths.get(.getResource(xmlFileName).toURI())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "String filename@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String filename@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testExportAsModsAndThenImportAsMods['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testPerformExport['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->13 [style = dashed, label="0"];
7->3 [style = solid, label="expectedFile"];
8->10 [style = bold, label=""];
0->5 [style = dotted, label="true"];
9->3 [style = solid, label="expectedFile"];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
2->3 [style = bold, label=""];
12->6 [style = bold, label=""];
1->7 [style = bold, label=""];
1->9 [style = bold, label=""];
1->2 [style = solid, label="entries"];
6->10 [style = dashed, label="0"];
6->1 [style = bold, label=""];
6->4 [style = bold, label=""];
1->11 [style = solid, label="entries"];
12->13 [style = dotted, label="true"];
8->5 [style = dotted, label="true"];
7->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
10->4 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
2->11 [style = bold, label=""];
}
