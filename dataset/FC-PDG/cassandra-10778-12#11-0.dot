digraph {
33 [style = filled, label = "Assert.assertTrue(pendingContains(sstable))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "cleanupCompactionFinalized['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SSTableReader sstable = makeSSTable(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "SSTableReader sstable = makeSSTable(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertTrue(sstable.isRepaired())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "SSTableRepairStatusChanged notification@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(expectedRepairedAt,sstable.getSSTableMetadata().repairedAt)@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "sstableRepairStatusChanged['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertFalse(hasPendingStrategiesFor(repairID))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "cfs.getCompactionStrategyManager().enable()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "notification = new SSTableRepairStatusChanged(Collections.singleton(sstable))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertSame(,compactionTask.getClass())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "UUID repairID = registerSession(cfs,true,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotNull(compactionTask)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mutateRepaired(sstable,repairID)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Assert.assertFalse(pendingContains(repairID,sstable))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "LocalSessionAccessor.prepareUnsafe(repairID,COORDINATOR,PARTICIPANTS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "long expectedRepairedAt = ActiveRepairService.instance.getParentRepairSession(repairID).repairedAt@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "long expectedRepairedAt = ActiveRepairService.instance.getParentRepairSession(repairID).repairedAt@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertTrue(repairedContains(sstable))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertTrue(pendingContains(repairID,sstable))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "cleanupCompactionFinalized['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "csm.handleNotification(new SSTableAddedNotification(Collections.singleton(sstable),null),cfs.getTracker())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "mutateRepaired(sstable,repairID)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "compactionTask.execute(null)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(hasPendingStrategiesFor(repairID))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(sstable.isRepaired())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LocalSessionAccessor.finalizeUnsafe(repairID)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "mutateRepaired(sstable,repairID,false)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "mutateRepaired(sstable,System.currentTimeMillis())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertTrue(unrepairedContains(sstable))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertFalse(pendingContains(sstable))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "notification = new SSTableRepairStatusChanged(Collections.singleton(sstable))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertTrue(repairedContains(sstable))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49->35 [style = solid, label="sstable"];
12->5 [style = bold, label=""];
17->14 [style = solid, label="sstable"];
7->4 [style = solid, label="repairID"];
49->41 [style = solid, label="sstable"];
22->18 [style = solid, label="expectedRepairedAt"];
34->50 [style = bold, label=""];
41->20 [style = bold, label=""];
45->7 [style = bold, label=""];
7->18 [style = solid, label="repairID"];
29->6 [style = bold, label=""];
30->28 [style = bold, label=""];
37->38 [style = bold, label=""];
20->37 [style = bold, label=""];
18->32 [style = bold, label=""];
28->25 [style = bold, label=""];
49->2 [style = solid, label="sstable"];
7->22 [style = solid, label="repairID"];
27->33 [style = bold, label=""];
11->16 [style = bold, label=""];
14->30 [style = bold, label=""];
36->41 [style = bold, label=""];
10->14 [style = bold, label=""];
33->15 [style = bold, label=""];
18->26 [style = solid, label="expectedRepairedAt"];
14->22 [style = bold, label=""];
2->27 [style = dashed, label="0"];
46->36 [style = bold, label=""];
19->2 [style = bold, label=""];
48->44 [style = bold, label=""];
17->13 [style = solid, label="sstable"];
49->40 [style = solid, label="sstable"];
7->28 [style = solid, label="repairID"];
17->30 [style = solid, label="sstable"];
2->37 [style = dashed, label="0"];
7->29 [style = solid, label="repairID"];
7->25 [style = solid, label="repairID"];
49->47 [style = solid, label="sstable"];
21->20 [style = solid, label="compactionTask"];
7->23 [style = solid, label="repairID"];
20->11 [style = solid, label="compactionTask"];
49->37 [style = solid, label="sstable"];
24->7 [style = bold, label=""];
43->34 [style = bold, label=""];
32->31 [style = bold, label=""];
13->10 [style = bold, label=""];
49->48 [style = solid, label="sstable"];
16->13 [style = bold, label=""];
4->17 [style = bold, label=""];
35->42 [style = bold, label=""];
2->1 [style = bold, label=""];
17->33 [style = solid, label="sstable"];
42->39 [style = bold, label=""];
25->18 [style = bold, label=""];
49->36 [style = solid, label="sstable"];
5->18 [style = bold, label=""];
6->40 [style = dashed, label="0"];
7->4 [style = bold, label=""];
38->48 [style = bold, label=""];
15->3 [style = bold, label=""];
49->43 [style = solid, label="sstable"];
49->34 [style = solid, label="sstable"];
7->0 [style = solid, label="repairID"];
7->27 [style = solid, label="repairID"];
31->26 [style = bold, label=""];
17->10 [style = solid, label="sstable"];
17->0 [style = bold, label=""];
49->38 [style = solid, label="sstable"];
39->2 [style = bold, label=""];
40->46 [style = solid, label="notification"];
0->29 [style = dashed, label="0"];
9->19 [style = bold, label=""];
3->21 [style = bold, label=""];
17->2 [style = solid, label="sstable"];
17->29 [style = solid, label="sstable"];
20->11 [style = bold, label=""];
49->50 [style = solid, label="sstable"];
17->0 [style = solid, label="sstable"];
7->50 [style = solid, label="repairID"];
48->44 [style = solid, label="notification"];
23->27 [style = bold, label=""];
0->6 [style = bold, label=""];
17->6 [style = solid, label="sstable"];
1->15 [style = bold, label=""];
7->9 [style = solid, label="repairID"];
7->37 [style = solid, label="repairID"];
2->40 [style = bold, label=""];
17->49 [style = dashed, label="0"];
47->35 [style = bold, label=""];
44->43 [style = bold, label=""];
8->7 [style = bold, label=""];
49->47 [style = bold, label=""];
40->46 [style = bold, label=""];
9->23 [style = bold, label=""];
21->20 [style = bold, label=""];
4->49 [style = bold, label=""];
22->12 [style = bold, label=""];
7->2 [style = solid, label="repairID"];
6->9 [style = bold, label=""];
17->29 [style = bold, label=""];
}
