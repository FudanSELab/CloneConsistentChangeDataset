digraph {
5 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@50@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "zk.addAuthInfo(\"digest\",\"ben:passwd2\".getBytes())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "skipACL@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testACL.add(new ACL(Perms.ALL | Perms.ADMIN,new Id()))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "zk.create(\"/acltest\",new byte((((,testACL,CreateMode.PERSISTENT)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ArrayList<ACL> testACL = new ArrayList<ACL>()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testNullAuthId['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "{if (zk != null) {zk.close()}}@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "zk = createClient()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.fail(\"Should have received an invalid acl error\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.fail(\"Should have received a permission error\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "zk.create(\"/acltest\",new byte((((,testACL,CreateMode.PERSISTENT)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testACL.add(new ACL(Perms.WRITE,new Id(\"ip\",\"127.0.0.1\")))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "zk.create(\"/acltest\",new byte((((,testACL,CreateMode.PERSISTENT)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(1,acls.size())@@@64@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "zk = createClient()@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "KeeperException e@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "zk = createClient()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KeeperException e@@@44@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "fail(\"Should have received a permission error\")@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testNullAuthId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testACL.add(new ACL(Perms.ALL,new Id(\"auth\",\"\")))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "LOG.info(\"Test successful, invalid acl received : \" + e.getMessage())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "ArrayList<ACL> testACL = new ArrayList<ACL>()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Assert.fail(\"Should have received an invalid acl error\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "acls = zk.getACL(\"/acltest\",null)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "testACLs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "ArrayList<ACL> testACL = new ArrayList<ACL>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "fail(\"Badauth reads should succeed with skipACL.\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(Code.NOAUTH,e.code())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "Assert.assertEquals(Code.NOAUTH,e.code())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "zk.create(\"/nullidtest\",new byte((((,testACL,CreateMode.PERSISTENT)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "zk.close()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testACL.add(new ACL(Perms.ALL | Perms.ADMIN,new Id(\"ip\",\"127.0.0.1/8\")))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "{if (zk != null) {zk.close()}}@@@71@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.fail(\"Badauth reads should succeed with skipACL.\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "LOG.info(\"Test successful, invalid acl received : \" + e.getMessage())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "zk.close()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "zk.close()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "KeeperException e@@@53@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "InvalidACLException e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<ACL> acls = zk.getACL(\"/acltest\",new Stat())@@@63@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.fail(\"Should have received an invalid acl error\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testACL.add(new ACL(Perms.ALL | Perms.ADMIN,Ids.AUTH_IDS))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "zk.setACL(\"/acltest\",Ids.OPEN_ACL_UNSAFE,-1)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "InvalidACLException e@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "LOG.info(\"Test successful, invalid acl received : \" + e.getMessage())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Assert.assertEquals(1,acls.size())@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testACL.add(new ACL(Perms.ALL,new Id(\"auth\",null)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes())@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "InvalidACLException e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1,acls.size())@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ZooKeeper zk = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "zk.create(\"/acltest\",new byte((((,Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "KeeperException e@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23->9 [style = bold, label=""];
13->29 [style = dotted, label="true"];
11->4 [style = bold, label=""];
27->7 [style = bold, label=""];
3->55 [style = bold, label=""];
5->53 [style = bold, label=""];
15->22 [style = bold, label=""];
20->32 [style = dashed, label="0"];
49->5 [style = dotted, label="true"];
12->10 [style = bold, label=""];
2->29 [style = bold, label=""];
30->7 [style = bold, label=""];
32->28 [style = bold, label=""];
49->53 [style = dotted, label="true"];
63->62 [style = bold, label=""];
16->6 [style = bold, label=""];
62->41 [style = bold, label=""];
17->8 [style = bold, label=""];
11->4 [style = dotted, label="true"];
9->26 [style = bold, label=""];
27->31 [style = dashed, label="0"];
24->14 [style = bold, label=""];
61->6 [style = bold, label=""];
20->42 [style = solid, label="acls"];
60->39 [style = bold, label=""];
16->40 [style = bold, label=""];
50->43 [style = bold, label=""];
40->47 [style = bold, label=""];
17->10 [style = solid, label="zk"];
56->34 [style = solid, label="testACL"];
48->60 [style = bold, label=""];
4->38 [style = dotted, label="true"];
11->30 [style = dotted, label="true"];
3->9 [style = solid, label="testACL"];
19->32 [style = bold, label=""];
51->64 [style = bold, label=""];
60->46 [style = solid, label="testACL"];
3->18 [style = bold, label=""];
34->48 [style = bold, label=""];
35->54 [style = bold, label=""];
63->41 [style = solid, label="acls"];
11->30 [style = bold, label=""];
25->27 [style = dotted, label="true"];
12->42 [style = bold, label=""];
47->56 [style = bold, label=""];
59->45 [style = bold, label=""];
26->1 [style = bold, label=""];
0->17 [style = bold, label=""];
29->7 [style = bold, label=""];
28->10 [style = bold, label=""];
49->44 [style = bold, label=""];
55->52 [style = bold, label=""];
44->15 [style = bold, label=""];
19->28 [style = solid, label="acls"];
25->27 [style = bold, label=""];
19->12 [style = solid, label="acls"];
20->12 [style = bold, label=""];
5->29 [style = dashed, label="0"];
5->7 [style = bold, label=""];
8->19 [style = bold, label=""];
1->13 [style = bold, label=""];
64->6 [style = bold, label=""];
59->45 [style = dotted, label="true"];
38->15 [style = bold, label=""];
4->7 [style = bold, label=""];
14->16 [style = bold, label=""];
3->23 [style = solid, label="testACL"];
22->0 [style = bold, label=""];
35->54 [style = dotted, label="true"];
27->37 [style = bold, label=""];
25->31 [style = dotted, label="true"];
8->43 [style = solid, label="zk"];
57->36 [style = bold, label=""];
6->3 [style = bold, label=""];
21->7 [style = bold, label=""];
33->14 [style = bold, label=""];
25->31 [style = bold, label=""];
7->15 [style = bold, label=""];
37->15 [style = bold, label=""];
46->61 [style = bold, label=""];
45->56 [style = bold, label=""];
52->9 [style = bold, label=""];
54->60 [style = bold, label=""];
18->23 [style = bold, label=""];
13->21 [style = dotted, label="true"];
4->38 [style = bold, label=""];
49->5 [style = bold, label=""];
12->28 [style = dashed, label="0"];
2->5 [style = bold, label=""];
49->44 [style = dotted, label="true"];
19->20 [style = bold, label=""];
41->50 [style = bold, label=""];
53->15 [style = bold, label=""];
58->14 [style = bold, label=""];
4->30 [style = dashed, label="0"];
56->57 [style = bold, label=""];
13->49 [style = bold, label=""];
13->2 [style = dotted, label="true"];
36->34 [style = bold, label=""];
42->63 [style = bold, label=""];
18->55 [style = dashed, label="0"];
51->64 [style = dotted, label="true"];
39->46 [style = bold, label=""];
13->5 [style = dotted, label="true"];
13->2 [style = bold, label=""];
27->37 [style = dotted, label="true"];
31->7 [style = bold, label=""];
13->21 [style = bold, label=""];
}
