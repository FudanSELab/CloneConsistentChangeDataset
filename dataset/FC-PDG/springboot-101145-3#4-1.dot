digraph {
9 [style = filled, label = "assertThat(getLineWithText(file,\"Hello world\")).contains(\"INFO\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "environment.setProperty(\"logging.file.total-size-cap\",expectedSize)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String expectedSize = \"101 MB\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LogFile logFile = getLogFile(file.getPath(),null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.logger.info(\"Hello world\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "this.loggingSystem.initialize(loggingInitializationContext,\"classpath:logback-include-base.xml\",logFile)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MockEnvironment environment = new MockEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testMaxHistoryProperty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.logger.info(\"Hello world\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testMaxHistoryProperty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testTotalSizeCapPropertyWithXmlConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "File file = new File(tmpDir(),\"logback-test.log\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(ReflectionTestUtils.getField(getRollingPolicy(),\"totalSizeCap\").toString()).isEqualTo(expectedSize)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MockEnvironment environment = new MockEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
2->8 [style = solid, label="environment"];
12->5 [style = bold, label=""];
3->13 [style = solid, label="logFile"];
11->12 [style = solid, label="expectedSize"];
0->12 [style = bold, label=""];
3->6 [style = bold, label=""];
0->12 [style = dashed, label="0"];
5->13 [style = solid, label="loggingInitializationContext"];
3->13 [style = dashed, label="0"];
7->9 [style = bold, label=""];
2->0 [style = bold, label=""];
11->0 [style = bold, label=""];
0->5 [style = solid, label="environment"];
8->3 [style = solid, label="loggingInitializationContext"];
8->5 [style = bold, label=""];
13->7 [style = bold, label=""];
9->15 [style = bold, label=""];
4->3 [style = solid, label="logFile"];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
3->13 [style = bold, label=""];
10->2 [style = bold, label=""];
1->2 [style = bold, label=""];
6->7 [style = bold, label=""];
14->11 [style = bold, label=""];
11->15 [style = solid, label="expectedSize"];
9->15 [style = dashed, label="0"];
}
