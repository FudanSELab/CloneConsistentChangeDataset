digraph {
6 [style = filled, label = "getTester().checkNode(\"VALUES a\",isQuoted(0,false))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testBracketIdentifier['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "getTester().checkNode(\"VALUES (a(\",isQuoted(0,true))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "sql(\"select * from myMap(field(, myArray(1 + 2(\").ok(\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "expr(\"^\"^x`y`z\"\").fails(\"(?s).*Encountered.*\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expr(\" ^\"^a \"\" b!c\"\").fails(\"(?s).*Encountered.*\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expr(\"(anything (even brackets(( is(.(ok(\").ok(\"`anything (even brackets( is`.`ok`\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "getTester().checkNode(\"VALUES `a`\",isQuoted(0,true))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "expr(\" ^`^a \" b!c`\").fails(\"(?s).*Encountered.*\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "getTester().checkNode(\"VALUES a\",isQuoted(0,false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sql(\"VALUES `a`\").node(isQuoted(0,true))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "quoting = Quoting.BACK_TICK@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sql(\"VALUES a\").node(isQuoted(0,false))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "sql(\"select * from myMap (field(, myArray (1 + 2(\").ok(\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testBackTickIdentifier['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "expr(\"^`^x``y``z`\").fails(\"(?s).*Encountered.*\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expr(\" `a \" b!c`\").ok(\"`a \" b!c`\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expr(\"(x`y`z(\").ok(\"`x``y``z`\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expr(\" (a \" b!c(\").ok(\"`a \" b!c`\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testBackTickIdentifier['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expr(\" ^\"^a \"\" b!c\"\").fails(\"(?s).*Encountered.*\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "quoting = Quoting.BRACKET@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expr(\"ab\").ok(\"`AB`\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expr(\"myMap(field( + myArray(1 + 2(\").ok(\"(`MYMAP`(`FIELD`( + `MYARRAY`((1 + 2)()\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->18 [style = dashed, label="0"];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
20->17 [style = bold, label=""];
16->13 [style = bold, label=""];
15->14 [style = bold, label=""];
21->0 [style = bold, label=""];
22->19 [style = bold, label=""];
2->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
1->3 [style = bold, label=""];
9->10 [style = bold, label=""];
0->20 [style = dashed, label="0"];
17->23 [style = bold, label=""];
9->6 [style = bold, label=""];
6->10 [style = dashed, label="0"];
4->12 [style = dashed, label="0"];
8->0 [style = bold, label=""];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
23->22 [style = bold, label=""];
10->12 [style = bold, label=""];
3->8 [style = bold, label=""];
2->15 [style = bold, label=""];
8->21 [style = bold, label=""];
0->20 [style = bold, label=""];
14->8 [style = bold, label=""];
13->2 [style = bold, label=""];
}
