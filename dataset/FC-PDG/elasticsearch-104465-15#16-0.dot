digraph {
7 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key3))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String key1 = randomAlphaOfLength(10)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(resultList.size(),equalTo(5))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertThat(resultList.get(4).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(resultList.get(1).getFailure().getMessage(),equalTo(exception.getMessage()))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "testActualPipelineProcessorWithHandledFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertThat(resultList.size(),equalTo(4))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertThat(resultList.get(1).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key1))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testActualPipelineProcessorWithHandledFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key3))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertNull(resultList.get(0).getConditionalWithResult())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(resultList.size(),equalTo(2))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(resultList.get(2).getIngestDocument().hasField(key3))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "String key2 = randomAlphaOfLength(10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(resultList.get(3).getProcessorTag(),nullValue())@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "assertNotEquals(resultList.get(0).getIngestDocument().getSourceAndMetadata().get(key1),resultList.get(1).getIngestDocument().getSourceAndMetadata().get(key1))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getType(),actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument,null)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key2))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertTrue(resultList.get(3).getIngestDocument().hasField(key2))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(resultList.get(2).getFailure().getMessage(),equalTo(exception.getMessage()))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertThat(resultList.get(1).getProcessorTag(),nullValue())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Map<String,Object> pipelineConfig = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(resultList.get(2).getIngestDocument().hasField(key1))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "String pipelineId = \"pipeline1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RuntimeException exception = new RuntimeException(\"processor failed\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null),new CompoundProcessor(false,Collections.singletonList(new TestProcessor(null)),Collections.singletonList(new TestProcessor(null))),new TestProcessor(null)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(resultList.get(3).getIngestDocument().hasField(key1))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertNull(resultList.get(2).getIngestDocument())@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(resultList.get(0).getIngestDocument(),not(equalTo(expectedResult.getIngestDocument())))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "pipelineConfig.put(\"name\",pipelineId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String key3 = randomAlphaOfLength(10)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key2))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertTrue(resultList.get(0).getIngestDocument().hasField(key1))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertNull(resultList.get(1).getIngestDocument())@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertThat(resultList.get(0).getFailure(),nullValue())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "verify(ingestService,Mockito.atLeast(2)).getPipeline(pipelineId)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertThat(resultList.get(0).getType(),equalTo(\"pipeline\"))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertThat(resultList.get(4).getProcessorTag(),nullValue())@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(resultList.get(3).getFailure(),nullValue())@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertTrue(resultList.get(2).getIngestDocument().hasField(key2))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IngestService ingestService = createIngestService()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(resultList.get(1).getFailure(),nullValue())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testActualPipelineProcessorRepeatedInvocation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertThat(resultList.get(0).getProcessorTag(),nullValue())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor,pipelineProcessor)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertFalse(resultList.get(3).getIngestDocument().hasField(key3))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertThat(resultList.get(4).getFailure(),nullValue())@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertThat(resultList.get(3).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->24 [style = bold, label=""];
29->15 [style = bold, label=""];
17->59 [style = dashed, label="0"];
25->1 [style = bold, label=""];
19->6 [style = dashed, label="0"];
55->50 [style = solid, label="pipeline"];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
1->6 [style = solid, label="pipelineId"];
24->30 [style = bold, label=""];
48->12 [style = bold, label=""];
0->42 [style = dashed, label="0"];
24->45 [style = solid, label="key2"];
23->13 [style = bold, label=""];
1->21 [style = bold, label=""];
47->56 [style = solid, label="pipelineId"];
39->38 [style = bold, label=""];
12->46 [style = dashed, label="0"];
10->57 [style = bold, label=""];
20->39 [style = dashed, label="0"];
17->36 [style = dashed, label="0"];
50->54 [style = bold, label=""];
23->3 [style = solid, label="pipelineConfig"];
24->19 [style = solid, label="key2"];
30->34 [style = solid, label="key3"];
6->32 [style = bold, label=""];
11->16 [style = bold, label=""];
27->12 [style = dashed, label="0"];
1->4 [style = solid, label="pipelineId"];
16->37 [style = dashed, label="0"];
27->0 [style = bold, label=""];
0->19 [style = bold, label=""];
18->53 [style = dashed, label="0"];
8->18 [style = bold, label=""];
36->31 [style = bold, label=""];
7->58 [style = dashed, label="0"];
26->14 [style = bold, label=""];
0->4 [style = dashed, label="0"];
40->34 [style = bold, label=""];
30->37 [style = solid, label="key3"];
24->40 [style = solid, label="key2"];
18->28 [style = bold, label=""];
5->25 [style = bold, label=""];
1->13 [style = solid, label="pipelineId"];
29->15 [style = solid, label="actualProcessor"];
46->4 [style = bold, label=""];
14->28 [style = solid, label="key1"];
56->48 [style = bold, label=""];
47->55 [style = solid, label="pipelineId"];
34->35 [style = bold, label=""];
38->33 [style = bold, label=""];
16->20 [style = bold, label=""];
32->42 [style = bold, label=""];
3->29 [style = bold, label=""];
22->11 [style = bold, label=""];
57->2 [style = bold, label=""];
22->31 [style = dashed, label="0"];
47->1 [style = bold, label=""];
21->23 [style = bold, label=""];
8->40 [style = dashed, label="0"];
47->23 [style = solid, label="pipelineId"];
30->9 [style = bold, label=""];
28->51 [style = dashed, label="0"];
30->22 [style = solid, label="key3"];
47->48 [style = solid, label="pipelineId"];
14->54 [style = solid, label="pipelineProcessor"];
18->34 [style = dashed, label="0"];
6->27 [style = bold, label=""];
3->29 [style = solid, label="pipelineProcessor"];
21->26 [style = solid, label="ingestService"];
1->13 [style = solid, label="ingestService"];
41->40 [style = bold, label=""];
13->26 [style = bold, label=""];
27->32 [style = dashed, label="0"];
28->17 [style = bold, label=""];
43->41 [style = bold, label=""];
44->25 [style = bold, label=""];
54->10 [style = bold, label=""];
7->41 [style = dashed, label="0"];
55->50 [style = bold, label=""];
37->39 [style = bold, label=""];
8->52 [style = dashed, label="0"];
21->14 [style = solid, label="pipelineConfig"];
2->46 [style = bold, label=""];
15->2 [style = bold, label=""];
42->43 [style = bold, label=""];
52->53 [style = bold, label=""];
53->51 [style = bold, label=""];
4->6 [style = bold, label=""];
26->59 [style = solid, label="key1"];
10->3 [style = bold, label=""];
14->0 [style = solid, label="key1"];
28->35 [style = dashed, label="0"];
9->10 [style = solid, label="pipeline"];
17->22 [style = bold, label=""];
2->12 [style = bold, label=""];
51->59 [style = bold, label=""];
49->47 [style = bold, label=""];
1->9 [style = solid, label="pipelineId"];
12->4 [style = bold, label=""];
24->17 [style = solid, label="key2"];
19->43 [style = dashed, label="0"];
54->10 [style = solid, label="actualProcessor"];
14->55 [style = bold, label=""];
58->52 [style = bold, label=""];
45->37 [style = bold, label=""];
35->36 [style = bold, label=""];
6->58 [style = bold, label=""];
2->56 [style = bold, label=""];
19->7 [style = bold, label=""];
31->45 [style = bold, label=""];
14->31 [style = solid, label="key1"];
30->7 [style = solid, label="key3"];
14->41 [style = solid, label="key1"];
11->45 [style = dashed, label="0"];
}
