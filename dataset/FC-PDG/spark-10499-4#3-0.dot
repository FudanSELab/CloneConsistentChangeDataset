digraph {
32 [style = filled, label = "JavaPairRDD<Double,Double> predictionAndLabel = testData.mapToPair(new PairFunction<LabeledPoint,Double,Double>(){@Override public Tuple2<Double,Double> call(LabeledPoint p){return new Tuple2<Double,Double>(model.predict(p.features()),p.label())}})@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "JavaRDD<LabeledPoint> testData = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BoostingStrategy boostingStrategy = BoostingStrategy.defaultParams(\"Regression\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "System.out.println(\"Test Mean Squared Error: \" + testMSE)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final GradientBoostedTreesModel model = GradientBoostedTrees.train(trainingData,boostingStrategy)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SparkConf sparkConf = new SparkConf().setAppName(\"JavaDecisionTreeClassificationExample\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JavaSparkContext jsc = new JavaSparkContext(sparkConf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<Integer,Integer> categoricalFeaturesInfo = new HashMap<Integer,Integer>()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "JavaRDD<LabeledPoint> trainingData = splits(0(@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "System.out.println(\"Learned classification tree model:\" + model.toDebugString())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String datapath = \"data/mllib/sample_libsvm_data.txt\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "JavaPairRDD<Double,Double> predictionAndLabel = testData.mapToPair(new PairFunction<LabeledPoint,Double,Double>(){@Override public Tuple2<Double,Double> call(LabeledPoint p){return new Tuple2<Double,Double>(model.predict(p.features()),p.label())}})@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7fe4b)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DecisionTreeModel sameModel = DecisionTreeModel.load(jsc.sc(),\"target/tmp/myDecisionTreeClassificationModel\")@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Integer maxBins = 32@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "model.save(jsc.sc(),\"target/tmp/myDecisionTreeClassificationModel\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "boostingStrategy.treeStrategy().setCategoricalFeaturesInfo(categoricalFeaturesInfo)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String impurity = \"gini\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Integer maxDepth = 5@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "System.out.println(\"Test Error: \" + testErr)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Double testErr = 1.0 * predictionAndLabel.filter(new Function<Tuple2<Double,Double>,Boolean>(){@Override public Boolean call(Tuple2<Double,Double> pl){return !pl._1().equals(pl._2())}}).count() / testData.count()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.out.println(\"Learned regression GBT model:\" + model.toDebugString())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Integer numClasses = 2@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "jsc.stop()@@@40@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "model.save(jsc.sc(),\"target/tmp/myGradientBoostingRegressionModel\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "boostingStrategy.getTreeStrategy().setMaxDepth(5)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SparkConf sparkConf = new SparkConf().setAppName(\"JavaGradientBoostedTreesRegressionExample\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "GradientBoostedTreesModel sameModel = GradientBoostedTreesModel.load(jsc.sc(),\"target/tmp/myGradientBoostingRegressionModel\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "boostingStrategy.setNumIterations(3)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final DecisionTreeModel model = DecisionTree.trainClassifier(trainingData,numClasses,categoricalFeaturesInfo,impurity,maxDepth,maxBins)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JavaRDD<LabeledPoint> data = MLUtils.loadLibSVMFile(jsc.sc(),datapath).toJavaRDD()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
19->3 [style = bold, label=""];
9->18 [style = bold, label=""];
21->0 [style = dotted, label="true"];
21->14 [style = bold, label=""];
32->13 [style = bold, label=""];
27->4 [style = solid, label="sparkConf"];
8->15 [style = solid, label="splits"];
26->2 [style = bold, label=""];
13->19 [style = bold, label=""];
18->22 [style = bold, label=""];
27->4 [style = bold, label=""];
31->28 [style = solid, label="categoricalFeaturesInfo"];
12->2 [style = bold, label=""];
28->32 [style = bold, label=""];
14->4 [style = solid, label="sparkConf"];
16->15 [style = bold, label=""];
13->24 [style = solid, label="testErr"];
13->19 [style = solid, label="testMSE"];
2->10 [style = bold, label=""];
13->24 [style = bold, label=""];
7->11 [style = bold, label=""];
31->26 [style = bold, label=""];
1->6 [style = bold, label=""];
8->16 [style = solid, label="splits"];
6->8 [style = bold, label=""];
33->28 [style = bold, label=""];
20->0 [style = dotted, label="true"];
4->1 [style = bold, label=""];
29->34 [style = bold, label=""];
10->7 [style = bold, label=""];
2->10 [style = solid, label="categoricalFeaturesInfo"];
2->28 [style = solid, label="maxDepth"];
16->28 [style = solid, label="trainingData"];
23->0 [style = dotted, label="true"];
3->9 [style = bold, label=""];
26->28 [style = solid, label="impurity"];
11->13 [style = bold, label=""];
2->33 [style = bold, label=""];
33->28 [style = solid, label="maxBins"];
25->31 [style = bold, label=""];
5->12 [style = bold, label=""];
14->4 [style = bold, label=""];
15->25 [style = bold, label=""];
17->7 [style = solid, label="boostingStrategy"];
20->14 [style = bold, label=""];
24->29 [style = bold, label=""];
34->30 [style = bold, label=""];
17->5 [style = bold, label=""];
25->28 [style = solid, label="numClasses"];
16->7 [style = solid, label="trainingData"];
14->27 [style = dashed, label="0"];
23->27 [style = bold, label=""];
15->17 [style = bold, label=""];
}
