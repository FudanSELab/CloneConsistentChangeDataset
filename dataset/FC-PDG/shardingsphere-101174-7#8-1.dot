digraph {
2 [style = filled, label = "PreparedStatement preparedStatement1 = getPreparedStatement()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "setExecuteGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verify(preparedStatement1).executeBatch()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(preparedStatement1).executeBatch()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsSuccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "when(preparedStatement2.executeBatch()).thenThrow(ex)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(preparedStatement2.executeBatch()).thenReturn(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16be98f)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(preparedStatement2).executeBatch()@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(preparedStatement1.executeBatch()).thenThrow(ex)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SQLException ex = new SQLException(\"\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(preparedStatement1.executeBatch()).thenReturn(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16be982)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsSuccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setExecutionGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "setExecuteGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16be9f0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(preparedStatement2).executeBatch()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PreparedStatement preparedStatement2 = getPreparedStatement()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
0->16 [style = bold, label=""];
2->15 [style = solid, label="preparedStatement1"];
15->14 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
2->10 [style = solid, label="preparedStatement1"];
2->4 [style = bold, label=""];
4->7 [style = solid, label="preparedStatement2"];
8->7 [style = bold, label=""];
11->12 [style = solid, label="ex"];
11->13 [style = solid, label="ex"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
2->7 [style = solid, label="preparedStatement1"];
3->2 [style = bold, label=""];
14->0 [style = bold, label=""];
17->2 [style = bold, label=""];
10->0 [style = bold, label=""];
7->10 [style = dashed, label="0"];
13->15 [style = bold, label=""];
4->11 [style = bold, label=""];
4->10 [style = solid, label="preparedStatement2"];
4->5 [style = bold, label=""];
4->15 [style = solid, label="preparedStatement2"];
}
