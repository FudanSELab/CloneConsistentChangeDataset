digraph {
22 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "AnalysisException e@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "AnalysisException e@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,String> properties = Maps.newHashMap()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"TINYINT is not supported\"))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "AnalysisException e@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k3\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "AnalysisException e@@@44@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k2\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "columns.add(new Column(\"k1\",PrimitiveType.INT))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"BOOLEAN is not supported\"))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Set<String> bfColumns = PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Set<String> bfColumns = PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns,KeysType.AGG_KEYS)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testBfColumnsError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "columns.add(new Column(\"v2\",ScalarType.createType(PrimitiveType.BIGINT),false,AggregateType.SUM,\"0\",\"\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Column> columns = Lists.newArrayList()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "columns.get(0).setIsKey(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testBfColumns['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "columns.add(new Column(\"k3\",PrimitiveType.BOOLEAN))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "columns.add(new Column(\"v1\",ScalarType.createType(PrimitiveType.VARCHAR),false,AggregateType.REPLACE,\"\",\"\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "columns.get(1).setIsKey(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k4\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(Sets.newHashSet(\"k1\"),bfColumns)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k1,K1\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"v2\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k1\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"Bloom filter index only used in\"))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.fail()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testBfColumns['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"column does not exist in table\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(Sets.newHashSet(),PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "columns.add(new Column(\"k2\",PrimitiveType.TINYINT))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "AnalysisException e@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7->22 [style = solid, label="properties"];
11->16 [style = bold, label=""];
17->26 [style = dotted, label="true"];
5->8 [style = bold, label=""];
30->24 [style = bold, label=""];
5->31 [style = solid, label="columns"];
7->15 [style = solid, label="properties"];
17->26 [style = bold, label=""];
34->25 [style = bold, label=""];
7->12 [style = solid, label="properties"];
4->18 [style = dashed, label="0"];
33->20 [style = bold, label=""];
14->35 [style = bold, label=""];
11->1 [style = bold, label=""];
5->15 [style = solid, label="columns"];
31->32 [style = bold, label=""];
3->36 [style = dashed, label="0"];
7->0 [style = solid, label="properties"];
28->14 [style = dotted, label="true"];
5->33 [style = solid, label="columns"];
23->32 [style = bold, label=""];
0->4 [style = solid, label="bfColumns"];
20->31 [style = bold, label=""];
29->23 [style = dotted, label="true"];
29->23 [style = bold, label=""];
3->12 [style = bold, label=""];
12->4 [style = solid, label="bfColumns"];
0->12 [style = dashed, label="0"];
9->7 [style = bold, label=""];
5->0 [style = solid, label="columns"];
27->19 [style = dotted, label="true"];
7->3 [style = bold, label=""];
28->14 [style = bold, label=""];
3->0 [style = bold, label=""];
19->24 [style = bold, label=""];
24->33 [style = bold, label=""];
21->5 [style = bold, label=""];
37->22 [style = bold, label=""];
25->20 [style = bold, label=""];
7->18 [style = solid, label="properties"];
1->6 [style = bold, label=""];
12->4 [style = bold, label=""];
16->1 [style = bold, label=""];
0->4 [style = bold, label=""];
6->10 [style = bold, label=""];
36->18 [style = bold, label=""];
32->15 [style = bold, label=""];
13->5 [style = bold, label=""];
18->35 [style = bold, label=""];
26->37 [style = bold, label=""];
7->31 [style = solid, label="properties"];
10->9 [style = bold, label=""];
27->19 [style = bold, label=""];
5->30 [style = solid, label="columns"];
5->22 [style = solid, label="columns"];
7->33 [style = solid, label="properties"];
8->11 [style = bold, label=""];
35->30 [style = bold, label=""];
15->37 [style = bold, label=""];
5->18 [style = solid, label="columns"];
34->25 [style = dotted, label="true"];
7->36 [style = bold, label=""];
7->30 [style = solid, label="properties"];
5->12 [style = solid, label="columns"];
2->5 [style = bold, label=""];
}
