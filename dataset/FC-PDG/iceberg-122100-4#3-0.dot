digraph {
44 [style = filled, label = "List<Types.NestedField> allFields = ManifestFile.schema().asStruct().fields()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "allFields.add(MetadataColumns.ROW_POSITION)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema).asStructType().fields()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "!found@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i))@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "GenericManifestFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fields.get(i).fieldId() == allFields.get(j).fieldId()@@@14@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Schema avroSchema@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "allFields.addAll(DataFile.getType(partitionType).fields())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "this.avroSchema = avroSchema@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<Types.NestedField> fields = schema.fields()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "fromProjectionPos(i( = j@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "i < fromProjectionPos.length@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "!found@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < fromProjectionPos.length@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int j = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "j += 1@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "this.fromProjectionPos = new int((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "j += 1@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "found = true@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "partType != null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "org.apache.avro.Schema avroSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "j < allFields.size()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "List<Types.NestedField> allFields = Lists.newArrayList()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "!found@@@27@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "j < allFields.size()@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this.partitionType = EMPTY_STRUCT_TYPE@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i))@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "int i = 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "boolean found = false@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "this.partitionType = partType.asNestedType().asStructType()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Type partType = schema.fieldType(\"partition\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int j = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "i += 1@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "BaseFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<Types.NestedField> allFields = DataFile.getType(partitionType).fields()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "fields.get(i).fieldId() == allFields.get(j).fieldId()@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "this.partitionData = new PartitionData(partitionType)@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "this.partitionData = new PartitionData(partitionType)@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "found = true@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "fromProjectionPos(i( = j@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "BaseFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Types.StructType schema = AvroSchemaUtil.convert(avroSchema).asNestedType().asStructType()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->6 [style = solid, label="i"];
35->34 [style = solid, label="i"];
3->22 [style = solid, label="i"];
6->31 [style = dotted, label="true"];
38->44 [style = bold, label=""];
5->20 [style = bold, label=""];
2->6 [style = bold, label=""];
17->9 [style = bold, label=""];
14->22 [style = dotted, label="true"];
12->9 [style = bold, label=""];
1->23 [style = bold, label=""];
24->30 [style = bold, label=""];
17->32 [style = solid, label="j"];
37->1 [style = solid, label="j"];
19->9 [style = bold, label=""];
40->1 [style = solid, label="j"];
15->0 [style = bold, label=""];
17->21 [style = solid, label="j"];
11->13 [style = bold, label=""];
1->12 [style = dotted, label="true"];
9->21 [style = bold, label=""];
33->4 [style = solid, label="avroSchema"];
42->33 [style = dotted, label="true"];
1->6 [style = dotted, label="true"];
0->3 [style = dotted, label="true"];
5->20 [style = solid, label="partType"];
0->3 [style = bold, label=""];
37->39 [style = solid, label="j"];
12->17 [style = dotted, label="true"];
4->38 [style = bold, label=""];
13->15 [style = solid, label="fields"];
21->19 [style = bold, label=""];
35->12 [style = solid, label="i"];
11->28 [style = solid, label="partitionType"];
16->6 [style = bold, label=""];
14->22 [style = bold, label=""];
31->29 [style = bold, label=""];
9->17 [style = bold, label=""];
13->24 [style = solid, label="fields"];
21->32 [style = dotted, label="true"];
12->35 [style = bold, label=""];
21->25 [style = bold, label=""];
9->21 [style = dotted, label="true"];
26->24 [style = bold, label=""];
19->9 [style = solid, label="j"];
7->5 [style = bold, label=""];
20->8 [style = bold, label=""];
18->4 [style = bold, label=""];
43->34 [style = solid, label="i"];
1->12 [style = solid, label="i"];
34->36 [style = bold, label=""];
2->1 [style = solid, label="i"];
7->38 [style = dashed, label="0"];
12->14 [style = bold, label=""];
44->41 [style = bold, label=""];
15->26 [style = dashed, label="0"];
13->15 [style = bold, label=""];
6->12 [style = dotted, label="true"];
35->34 [style = bold, label=""];
31->29 [style = dotted, label="true"];
39->0 [style = dotted, label="true"];
43->34 [style = bold, label=""];
41->43 [style = bold, label=""];
29->16 [style = bold, label=""];
8->28 [style = solid, label="partitionType"];
43->12 [style = solid, label="i"];
40->39 [style = solid, label="j"];
10->4 [style = solid, label="avroSchema"];
16->21 [style = solid, label="j"];
19->32 [style = solid, label="j"];
11->23 [style = solid, label="partitionType"];
36->40 [style = bold, label=""];
39->16 [style = bold, label=""];
22->2 [style = bold, label=""];
3->1 [style = bold, label=""];
2->1 [style = bold, label=""];
9->31 [style = bold, label=""];
34->36 [style = dotted, label="true"];
12->17 [style = bold, label=""];
2->22 [style = solid, label="i"];
32->19 [style = bold, label=""];
4->7 [style = bold, label=""];
34->39 [style = dotted, label="true"];
18->10 [style = dotted, label="true"];
21->25 [style = dotted, label="true"];
42->4 [style = bold, label=""];
39->37 [style = dotted, label="true"];
17->9 [style = solid, label="j"];
17->12 [style = bold, label=""];
1->6 [style = bold, label=""];
9->19 [style = dotted, label="true"];
40->39 [style = bold, label=""];
6->9 [style = dotted, label="true"];
34->35 [style = dotted, label="true"];
13->26 [style = bold, label=""];
9->19 [style = bold, label=""];
32->29 [style = solid, label="i"];
14->2 [style = bold, label=""];
1->2 [style = bold, label=""];
1->16 [style = dotted, label="true"];
21->22 [style = solid, label="i"];
37->39 [style = bold, label=""];
2->29 [style = solid, label="i"];
8->13 [style = bold, label=""];
1->37 [style = bold, label=""];
34->40 [style = dotted, label="true"];
20->11 [style = bold, label=""];
0->1 [style = dotted, label="true"];
6->12 [style = bold, label=""];
19->21 [style = bold, label=""];
16->12 [style = solid, label="j"];
16->12 [style = dotted, label="true"];
30->1 [style = bold, label=""];
0->37 [style = bold, label=""];
31->16 [style = bold, label=""];
2->6 [style = solid, label="i"];
20->8 [style = dotted, label="true"];
25->32 [style = bold, label=""];
27->10 [style = dotted, label="true"];
10->33 [style = dashed, label="0"];
3->1 [style = solid, label="i"];
1->14 [style = dotted, label="true"];
8->23 [style = solid, label="partitionType"];
38->44 [style = solid, label="fields"];
6->17 [style = dotted, label="true"];
27->4 [style = bold, label=""];
39->0 [style = bold, label=""];
16->29 [style = solid, label="i"];
6->16 [style = bold, label=""];
20->11 [style = dotted, label="false"];
16->35 [style = bold, label=""];
1->2 [style = dotted, label="true"];
34->16 [style = dotted, label="true"];
16->12 [style = bold, label=""];
21->17 [style = bold, label=""];
6->16 [style = dotted, label="true"];
17->12 [style = solid, label="j"];
6->28 [style = bold, label=""];
12->9 [style = dotted, label="true"];
}
