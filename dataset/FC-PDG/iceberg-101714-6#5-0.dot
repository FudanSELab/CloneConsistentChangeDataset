digraph {
1 [style = filled, label = "table.newAppend().appendFile(FILE_C).appendFile(FILE_D).commit()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Should reuse manifests from initial append commit and conflicting append\",expectedManifests,Sets.newHashSet(table.currentSnapshot().manifests()))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertSame(\"Base metadata should not change when commit is created\",base,readMetadata())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Table should be on version 1 after append\",1,(int)version())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testTransactionRetryMergeAppend['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Table should be on version 1 after txn create\",1,(int)version())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Transaction txn = table.newTransaction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "table.updateProperties().set(TableProperties.COMMIT_NUM_RETRIES,\"1\").commit()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Table should be on version 3 after commit\",3,(int)version())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testTransactionRetryMergeAppend['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Table should be on version 2 after commit\",2,(int)version())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Table should be on version 1\",1,(int)version())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Should reuse manifests from initial append commit\",appendManifests,Sets.newHashSet(table.currentSnapshot().manifests()))@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Set<ManifestFile> conflictAppendManifests = Sets.newHashSet(table.currentSnapshot().allManifests())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Table should be on version 2 after real append\",2,(int)version())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertSame(\"Base metadata should not change when commit is created\",base,readMetadata())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "txn.newAppend().appendFile(FILE_A).appendFile(FILE_B).commit()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "table.ops().failCommits(1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Set<ManifestFile> expectedManifests = Sets.newHashSet()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TableMetadata base = readMetadata()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Should reuse manifests from initial append commit and conflicting append\",expectedManifests,Sets.newHashSet(table.currentSnapshot().allManifests()))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "expectedManifests.addAll(conflictAppendManifests)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Set<ManifestFile> conflictAppendManifests = Sets.newHashSet(table.currentSnapshot().manifests())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "txn.commitTransaction()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testTransactionRetry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Set<ManifestFile> appendManifests = Sets.newHashSet(txn.table().currentSnapshot().allManifests())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "expectedManifests.addAll(appendManifests)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Set<ManifestFile> appendManifests = Sets.newHashSet(txn.table().currentSnapshot().manifests())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->3 [style = bold, label=""];
5->23 [style = solid, label="expectedManifests"];
15->23 [style = dashed, label="0"];
13->18 [style = solid, label="appendManifests"];
10->14 [style = bold, label=""];
8->19 [style = bold, label=""];
13->20 [style = dashed, label="0"];
11->21 [style = bold, label=""];
17->0 [style = solid, label="conflictAppendManifests"];
12->16 [style = bold, label=""];
7->20 [style = bold, label=""];
9->10 [style = bold, label=""];
18->2 [style = bold, label=""];
5->15 [style = solid, label="expectedManifests"];
5->18 [style = dashed, label="0"];
17->21 [style = dashed, label="0"];
24->18 [style = bold, label=""];
26->4 [style = bold, label=""];
16->10 [style = solid, label="base"];
0->15 [style = bold, label=""];
21->18 [style = bold, label=""];
3->0 [style = bold, label=""];
1->11 [style = bold, label=""];
14->7 [style = bold, label=""];
22->4 [style = bold, label=""];
6->4 [style = bold, label=""];
19->1 [style = bold, label=""];
25->24 [style = bold, label=""];
20->8 [style = bold, label=""];
0->23 [style = bold, label=""];
13->3 [style = solid, label="appendManifests"];
19->27 [style = bold, label=""];
21->0 [style = solid, label="conflictAppendManifests"];
4->12 [style = bold, label=""];
11->17 [style = bold, label=""];
20->3 [style = solid, label="appendManifests"];
2->24 [style = dashed, label="0"];
13->8 [style = bold, label=""];
16->8 [style = solid, label="base"];
27->25 [style = bold, label=""];
16->9 [style = bold, label=""];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
}
