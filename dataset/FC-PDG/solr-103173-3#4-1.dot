digraph {
29 [style = filled, label = "String msg = params + \" => \" + doc@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SolrParams params@@@15@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testAugmentersGlobsExplicitAndScoreOhMy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final SolrParams singleFl = params(\"q\",\"*:*\",\"rows\",\"1\",\"fl\",StringUtils.join(fl.toArray(),','))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "multiFl.add(\"fl\",item)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Arrays.asList(singleFl,multiFl)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Collections.shuffle(fl,random)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Arrays.asList(singleFl,multiFl)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String item@@@12@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "docs@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTrue(msg,doc.getFieldValue(\"val_i\") instanceof Integer)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final ModifiableSolrParams multiFl = params(\"q\",\"*:*\",\"rows\",\"1\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<String> fl = Arrays.asList(\"id\",\"(docid(\",\"(explain(\",\"score\",\"val_*\",\"subj*\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertQ(p.toString(),req(p),\"//result(@numFound='5'(\",\"//result/doc/str(@name='id'(\",\"//result/doc/float(@name='score'(\",\"//result/doc/str(@name='subject'(\",\"//result/doc/int(@name='val_i'(\",\"//result/doc/int(@name='(docid('(\",\"//result/doc/str(@name='(explain('(\",\"//result/doc(count(*)=6(\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "fl@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Arrays.asList(singleFl,multiFl)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "SolrDocumentList docs = assertSearch(params)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(msg,6,doc.size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Random random = random()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int iters = atLeast(random,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(params + \" => \" + docs,5,docs.getNumFound())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String item@@@12@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String item@@@12@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertTrue(msg,doc.getFieldValue(\"(docid(\") instanceof Integer)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(msg,doc.getFieldValue(\"id\") instanceof String)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(msg,doc.getFieldValue(\"subject\") instanceof String)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "SolrDocument doc@@@18@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i < iters@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testAugmentersGlobsExplicitAndScoreOhMy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testAugmentersGlobsExplicitAndScoreOhMy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertTrue(msg,doc.getFieldValue(\"score\") instanceof Float)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(msg,doc.getFieldValue(\"(explain(\") instanceof String)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final SolrParams singleFl = params(\"q\",\"*:*\",\"rows\",\"1\",\"fl\",String.join(\",\",fl))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "SolrParams p@@@15@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0->15 [style = solid, label="random"];
12->22 [style = dotted, label="true"];
26->32 [style = bold, label=""];
9->0 [style = bold, label=""];
26->32 [style = solid, label="docs"];
29->21 [style = solid, label="msg"];
28->30 [style = bold, label=""];
12->23 [style = dotted, label="true"];
12->29 [style = dotted, label="true"];
12->8 [style = dotted, label="true"];
31->0 [style = bold, label=""];
0->3 [style = solid, label="random"];
21->34 [style = bold, label=""];
12->15 [style = bold, label=""];
35->33 [style = bold, label=""];
1->3 [style = bold, label=""];
29->22 [style = solid, label="msg"];
12->15 [style = dotted, label="true"];
12->2 [style = dotted, label="true"];
19->10 [style = bold, label=""];
15->6 [style = bold, label=""];
22->28 [style = bold, label=""];
1->19 [style = solid, label="fl"];
12->18 [style = dotted, label="true"];
7->4 [style = bold, label=""];
13->25 [style = dashed, label="0"];
29->34 [style = solid, label="msg"];
15->19 [style = bold, label=""];
10->7 [style = bold, label=""];
12->21 [style = dotted, label="true"];
12->30 [style = dotted, label="true"];
12->35 [style = dotted, label="true"];
33->26 [style = bold, label=""];
12->28 [style = dotted, label="true"];
7->26 [style = bold, label=""];
32->29 [style = bold, label=""];
33->29 [style = bold, label=""];
12->11 [style = dotted, label="true"];
12->26 [style = dotted, label="true"];
12->14 [style = dotted, label="true"];
12->27 [style = dotted, label="true"];
3->5 [style = bold, label=""];
30->21 [style = bold, label=""];
12->13 [style = dotted, label="true"];
17->0 [style = bold, label=""];
12->20 [style = dotted, label="true"];
29->35 [style = solid, label="msg"];
12->32 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
29->30 [style = solid, label="msg"];
5->12 [style = bold, label=""];
12->6 [style = dotted, label="true"];
12->19 [style = dotted, label="true"];
3->12 [style = solid, label="iters"];
12->16 [style = dotted, label="true"];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
1->15 [style = solid, label="fl"];
6->19 [style = dashed, label="0"];
12->24 [style = dotted, label="true"];
29->33 [style = solid, label="msg"];
4->8 [style = bold, label=""];
12->4 [style = dotted, label="true"];
34->35 [style = bold, label=""];
29->22 [style = bold, label=""];
12->7 [style = dotted, label="true"];
8->12 [style = solid, label="i"];
33->8 [style = bold, label=""];
5->12 [style = solid, label="i"];
29->28 [style = solid, label="msg"];
12->25 [style = dotted, label="true"];
8->12 [style = bold, label=""];
12->33 [style = dotted, label="true"];
12->34 [style = dotted, label="true"];
5->8 [style = solid, label="i"];
}
