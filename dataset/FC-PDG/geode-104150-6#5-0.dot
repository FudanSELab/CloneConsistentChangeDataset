digraph {
6 [style = filled, label = "ma.allocate(1024 * 1024 * 10)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(offHeapSize,ma.getFreeMemory())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{closeCache(gfc,false)}@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,ma.getUsedMemory())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "{}@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertFalse(gfc.isClosed())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MemoryAllocator ma = gfc.getOffHeapStore()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(offHeapSize - (64 + perObjectOverhead()),ma.getFreeMemory())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "OutOfOffHeapMemoryException expected@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "OutOfOffHeapMemoryException expected@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "keep_testOutOfOffHeapMemoryErrorClosesCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(gfc.isClosed())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ma.allocate(1024 * 1024 * 20)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,ma.getUsedMemory())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "GeodeAwaitility.await().untilAsserted(waitForDisconnect)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(ma)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "mc1.release()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,ma.getUsedMemory())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "GemFireCacheImpl gfc = createCache()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "{System.clearProperty(OffHeapStorage.STAY_CONNECTED_ON_OUTOFOFFHEAPMEMORY_PROPERTY)closeCache(gfc,false)}@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testSizeAllocation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "OutOfOffHeapMemoryException expected@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final long offHeapSize = ma.getFreeMemory()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(64 + perObjectOverhead(),ma.getUsedMemory())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "keep_testOutOfOffHeapMemoryErrorClosesCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "fail(\"Expected an out of heap exception\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MemoryAllocator ma = gfc.getOffHeapStore()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final GemFireCacheImpl gfc = createCache()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "System.setProperty(OffHeapStorage.STAY_CONNECTED_ON_OUTOFOFFHEAPMEMORY_PROPERTY,\"true\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(0,ma.getUsedMemory())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StoredObject mc1 = ma.allocate(64)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{}@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "fail(\"Expected an out of heap exception\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->30 [style = bold, label=""];
18->3 [style = bold, label=""];
5->2 [style = solid, label="offHeapSize"];
8->14 [style = bold, label=""];
17->21 [style = bold, label=""];
27->4 [style = bold, label=""];
12->2 [style = bold, label=""];
25->24 [style = bold, label=""];
6->0 [style = bold, label=""];
29->28 [style = bold, label=""];
24->4 [style = bold, label=""];
28->30 [style = solid, label="gfc"];
6->32 [style = dashed, label="0"];
32->27 [style = bold, label=""];
11->15 [style = bold, label=""];
22->15 [style = bold, label=""];
15->7 [style = bold, label=""];
14->26 [style = bold, label=""];
4->20 [style = bold, label=""];
21->10 [style = bold, label=""];
19->13 [style = bold, label=""];
2->8 [style = bold, label=""];
20->19 [style = bold, label=""];
16->12 [style = solid, label="offHeapSize"];
0->10 [style = bold, label=""];
15->13 [style = solid, label="gfc"];
28->1 [style = bold, label=""];
3->12 [style = bold, label=""];
10->4 [style = bold, label=""];
9->17 [style = bold, label=""];
1->16 [style = solid, label="ma"];
26->32 [style = bold, label=""];
14->6 [style = bold, label=""];
5->18 [style = bold, label=""];
4->23 [style = bold, label=""];
16->5 [style = bold, label=""];
7->1 [style = bold, label=""];
31->29 [style = bold, label=""];
1->16 [style = bold, label=""];
7->1 [style = solid, label="ma"];
5->14 [style = solid, label="offHeapSize"];
17->10 [style = bold, label=""];
4->20 [style = solid, label="waitForDisconnect"];
16->8 [style = solid, label="offHeapSize"];
}
