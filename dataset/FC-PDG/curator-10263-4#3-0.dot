digraph {
4 [style = filled, label = "preferredQueues.remove(queuePath)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "boolean addAQueue = false@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "stat.getNumChildren() >= policies.getNewQueueThreshold()@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "addNewQueueIfNeeded(null)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "queues.size() < policies.getMaxQueues()@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "preferredQueues.contains(queuePath)@@@12@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "addAQueueIfLeader = true@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "stat.getNumChildren() <= (policies.getNewQueueThreshold() / 2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "addNewQueueIfNeeded(queuePath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "log.info(String.format(\"Adding a queue due to exceeded threshold. Queue Size: %d - Threshold: %d\",size,policies.getNewQueueThreshold()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "children.size() == 0@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "addAQueue = true@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "preferredQueues.add(queuePath)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int size = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String queuePath = ZKPaths.makePath(this.queuePath,child)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "size = stat.getNumChildren()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkThreshold['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean addAQueueIfLeader = false@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "addAQueueIfLeader && leaderLatch.hasLeadership()@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "addNewQueueIfNeeded(null)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<String> children = client.getChildren().forPath(queuePath)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "log.warn(String.format(\"Max number of queues (%d) reached. Consider increasing the max.\",policies.getMaxQueues()))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "addAQueue && leaderLatch.hasLeadership()@@@22@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Stat stat = client.checkExists().forPath(queuePath)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkThreshold['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "getInitialQueues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->14 [style = solid, label="queuePath"];
16->20 [style = dashed, label="0"];
16->12 [style = solid, label="addAQueue"];
5->8 [style = bold, label=""];
23->25 [style = bold, label=""];
2->0 [style = dotted, label="true"];
25->3 [style = solid, label="queuePath"];
22->2 [style = bold, label=""];
21->19 [style = bold, label=""];
11->14 [style = bold, label=""];
7->12 [style = bold, label=""];
2->6 [style = bold, label=""];
3->25 [style = bold, label=""];
1->15 [style = bold, label=""];
18->11 [style = bold, label=""];
25->3 [style = bold, label=""];
12->2 [style = dotted, label="true"];
11->14 [style = dotted, label="true"];
9->20 [style = bold, label=""];
11->9 [style = dotted, label="true"];
6->0 [style = bold, label=""];
9->2 [style = solid, label="size"];
19->17 [style = bold, label=""];
2->10 [style = dotted, label="false"];
11->4 [style = dotted, label="true"];
8->13 [style = bold, label=""];
15->19 [style = dashed, label="0"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
11->9 [style = bold, label=""];
8->13 [style = solid, label="queuePath"];
9->16 [style = bold, label=""];
20->4 [style = bold, label=""];
22->2 [style = dotted, label="true"];
20->22 [style = solid, label="addAQueueIfLeader"];
8->4 [style = solid, label="queuePath"];
14->16 [style = dotted, label="true"];
7->22 [style = bold, label=""];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
12->2 [style = bold, label=""];
11->20 [style = dotted, label="true"];
8->18 [style = solid, label="queuePath"];
5->12 [style = bold, label=""];
19->22 [style = solid, label="addAQueueIfLeader"];
2->6 [style = dotted, label="true"];
5->7 [style = dotted, label="true"];
3->8 [style = bold, label=""];
14->12 [style = bold, label=""];
15->12 [style = solid, label="addAQueue"];
12->22 [style = dashed, label="0"];
17->3 [style = bold, label=""];
4->12 [style = bold, label=""];
4->8 [style = bold, label=""];
5->7 [style = bold, label=""];
14->9 [style = bold, label=""];
17->6 [style = solid, label="size"];
14->8 [style = bold, label=""];
9->6 [style = solid, label="size"];
11->5 [style = dotted, label="false"];
14->9 [style = dotted, label="true"];
8->7 [style = solid, label="queuePath"];
8->13 [style = dotted, label="true"];
16->4 [style = bold, label=""];
14->4 [style = dotted, label="true"];
5->22 [style = bold, label=""];
4->22 [style = bold, label=""];
17->2 [style = solid, label="size"];
13->18 [style = bold, label=""];
24->23 [style = bold, label=""];
}
