digraph {
8 [style = filled, label = "actual instanceof SubqueryExpressionSegment@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "null == expected@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertNull(assertContext.getText(\"Actual expression should not exist.\"),actual)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "actual instanceof ColumnSegment@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ExpressionAssert.assertLiteralExpression(assertContext,(LiteralExpressionSegment)actual,expected.getLiteralExpression())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "actual instanceof BetweenExpression@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "actual instanceof ParameterMarkerExpressionSegment@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertExistsSubqueryExpression(assertContext,(ExistsSubqueryExpression)actual,expected.getExistsSubquery())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "actual instanceof ParameterMarkerExpressionSegment@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNotExpression(assertContext,(NotExpression)actual,expected.getNotExpression())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "ProjectionAssert.assertProjection(assertContext,(AggregationProjectionSegment)actual,expected.getAggregationProjection())@@@45@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "throw new UnsupportedOperationException(String.format(\"Unsupported expression : %s.\",actual.getClass().getName()))@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "actual instanceof BinaryOperationExpression@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "actual instanceof AggregationProjectionSegment@@@44@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "ExpressionAssert.assertCommonExpression(assertContext,(ExpressionProjectionSegment)actual,expected.getCommonExpression())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ExpressionAssert.assertParameterMarkerExpression(assertContext,(ParameterMarkerExpressionSegment)actual,expected.getParameterMarkerExpression())@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertInExpression(assertContext,(InExpression)actual,expected.getInExpression())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertIs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertNotNull(assertContext.getText(\"Actual expression should exist.\"),actual)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ColumnAssert.assertIs(assertContext,(ColumnSegment)actual,expected.getColumn())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "actual instanceof LiteralExpressionSegment@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final ExpectedExpression expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "final ExpectedAssignmentValue expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "actual instanceof LiteralExpressionSegment@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ProjectionAssert.assertProjection(assertContext,(ExpressionProjectionSegment)actual,expected.getExpressionProjection())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "actual instanceof ExpressionProjectionSegment@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "actual instanceof ListExpression@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "actual instanceof ColumnSegment@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final ExpressionSegment actual@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "actual instanceof InExpression@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertBetweenExpression(assertContext,(BetweenExpression)actual,expected.getBetweenExpression())@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertCommonExpression(assertContext,(ComplexExpressionSegment)actual,expected.getCommonExpression())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertParameterMarkerExpression(assertContext,(ParameterMarkerExpressionSegment)actual,expected.getParameterMarkerExpression())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertSubqueryExpression(assertContext,(SubqueryExpressionSegment)actual,expected.getSubquery())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "actual instanceof ExistsSubqueryExpression@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "actual instanceof NotExpression@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "actual instanceof CommonExpressionSegment@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ColumnAssert.assertIs(assertContext,(ColumnSegment)actual,expected.getColumn())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertBinaryOperationExpression(assertContext,(BinaryOperationExpression)actual,expected.getBinaryOperationExpression())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "actual instanceof ExpressionProjectionSegment@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertLiteralExpression(assertContext,(LiteralExpressionSegment)actual,expected.getLiteralExpression())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ExpressionSegment actual@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertListExpression(assertContext,(ListExpression)actual,expected.getListExpression())@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final ExpressionSegment actual@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13->24 [style = solid, label="actual"];
47->38 [style = solid, label="assertContext"];
14->3 [style = bold, label=""];
20->10 [style = bold, label=""];
5->20 [style = dotted, label="false"];
40->49 [style = solid, label="actual"];
24->4 [style = dotted, label="false"];
21->32 [style = bold, label=""];
46->44 [style = bold, label=""];
8->29 [style = dotted, label="false"];
37->21 [style = solid, label="actual"];
33->17 [style = solid, label="expected"];
17->28 [style = dotted, label="true"];
40->46 [style = solid, label="actual"];
6->8 [style = bold, label=""];
34->19 [style = dotted, label="true"];
19->2 [style = solid, label="assertContext"];
37->22 [style = solid, label="actual"];
37->29 [style = solid, label="actual"];
11->10 [style = solid, label="assertContext"];
13->2 [style = solid, label="actual"];
37->30 [style = solid, label="actual"];
20->10 [style = dotted, label="true"];
45->46 [style = bold, label=""];
45->39 [style = dotted, label="true"];
19->9 [style = solid, label="assertContext"];
13->14 [style = solid, label="actual"];
19->0 [style = solid, label="assertContext"];
41->40 [style = dotted, label="true"];
11->3 [style = solid, label="assertContext"];
46->44 [style = dotted, label="true"];
40->43 [style = solid, label="actual"];
13->12 [style = solid, label="actual"];
28->18 [style = bold, label=""];
37->10 [style = solid, label="actual"];
32->22 [style = dotted, label="true"];
37->6 [style = solid, label="actual"];
37->27 [style = solid, label="actual"];
37->2 [style = solid, label="actual"];
37->32 [style = solid, label="actual"];
37->23 [style = solid, label="actual"];
13->7 [style = solid, label="actual"];
40->45 [style = solid, label="actual"];
40->48 [style = solid, label="actual"];
36->35 [style = bold, label=""];
15->23 [style = dotted, label="true"];
11->23 [style = solid, label="assertContext"];
13->23 [style = solid, label="actual"];
6->8 [style = dotted, label="false"];
49->43 [style = dotted, label="true"];
37->26 [style = solid, label="actual"];
17->27 [style = bold, label=""];
11->2 [style = solid, label="assertContext"];
36->4 [style = bold, label=""];
27->28 [style = bold, label=""];
37->0 [style = solid, label="actual"];
5->9 [style = dotted, label="true"];
37->9 [style = solid, label="actual"];
15->23 [style = bold, label=""];
13->21 [style = solid, label="actual"];
49->43 [style = bold, label=""];
37->36 [style = solid, label="actual"];
37->15 [style = solid, label="actual"];
13->31 [style = solid, label="actual"];
34->17 [style = bold, label=""];
32->15 [style = dotted, label="false"];
8->45 [style = dashed, label="0"];
37->8 [style = solid, label="actual"];
48->38 [style = dotted, label="true"];
21->32 [style = dotted, label="false"];
19->31 [style = solid, label="assertContext"];
11->9 [style = solid, label="assertContext"];
19->22 [style = solid, label="assertContext"];
29->14 [style = dotted, label="false"];
11->0 [style = solid, label="assertContext"];
1->39 [style = dashed, label="0"];
13->26 [style = solid, label="actual"];
11->30 [style = solid, label="assertContext"];
7->5 [style = dotted, label="false"];
40->38 [style = solid, label="actual"];
19->1 [style = solid, label="assertContext"];
37->5 [style = solid, label="actual"];
24->25 [style = dotted, label="true"];
29->14 [style = bold, label=""];
37->7 [style = solid, label="actual"];
40->44 [style = solid, label="actual"];
24->25 [style = bold, label=""];
47->39 [style = solid, label="assertContext"];
48->38 [style = bold, label=""];
13->0 [style = solid, label="actual"];
37->35 [style = solid, label="actual"];
13->8 [style = solid, label="actual"];
49->45 [style = dotted, label="false"];
37->24 [style = solid, label="actual"];
18->6 [style = bold, label=""];
13->1 [style = solid, label="actual"];
19->17 [style = solid, label="expected"];
16->19 [style = dotted, label="true"];
7->2 [style = bold, label=""];
7->2 [style = dotted, label="true"];
36->35 [style = dotted, label="true"];
37->14 [style = solid, label="actual"];
14->26 [style = dotted, label="false"];
13->22 [style = solid, label="actual"];
13->5 [style = solid, label="actual"];
19->47 [style = dashed, label="0"];
49->45 [style = bold, label=""];
14->3 [style = dotted, label="true"];
6->30 [style = dotted, label="true"];
24->4 [style = bold, label=""];
13->10 [style = solid, label="actual"];
19->3 [style = solid, label="assertContext"];
37->1 [style = solid, label="actual"];
37->12 [style = solid, label="actual"];
19->10 [style = solid, label="assertContext"];
13->15 [style = solid, label="actual"];
15->24 [style = bold, label=""];
11->22 [style = solid, label="assertContext"];
11->25 [style = solid, label="assertContext"];
8->1 [style = bold, label=""];
37->25 [style = solid, label="actual"];
47->43 [style = solid, label="assertContext"];
48->49 [style = dotted, label="false"];
26->7 [style = dotted, label="false"];
19->12 [style = solid, label="assertContext"];
16->11 [style = dotted, label="true"];
41->42 [style = dotted, label="true"];
7->5 [style = bold, label=""];
32->22 [style = bold, label=""];
16->17 [style = bold, label=""];
34->33 [style = dotted, label="true"];
8->1 [style = dotted, label="true"];
40->39 [style = solid, label="actual"];
19->25 [style = solid, label="assertContext"];
6->30 [style = bold, label=""];
20->21 [style = dotted, label="false"];
13->3 [style = solid, label="actual"];
13->9 [style = solid, label="actual"];
45->46 [style = dotted, label="false"];
15->24 [style = dotted, label="false"];
48->49 [style = bold, label=""];
37->31 [style = solid, label="actual"];
36->4 [style = dotted, label="false"];
37->3 [style = solid, label="actual"];
13->20 [style = solid, label="actual"];
41->47 [style = dotted, label="true"];
11->1 [style = solid, label="assertContext"];
24->36 [style = bold, label=""];
13->32 [style = solid, label="actual"];
13->6 [style = solid, label="actual"];
26->31 [style = bold, label=""];
19->35 [style = solid, label="assertContext"];
11->12 [style = solid, label="assertContext"];
37->18 [style = solid, label="actual"];
13->29 [style = solid, label="actual"];
16->13 [style = dotted, label="true"];
5->9 [style = bold, label=""];
41->48 [style = bold, label=""];
14->26 [style = bold, label=""];
19->30 [style = solid, label="assertContext"];
21->12 [style = bold, label=""];
29->0 [style = bold, label=""];
20->21 [style = bold, label=""];
29->0 [style = dotted, label="true"];
13->18 [style = solid, label="actual"];
8->29 [style = bold, label=""];
19->23 [style = solid, label="assertContext"];
5->20 [style = bold, label=""];
17->27 [style = dotted, label="true"];
34->37 [style = dotted, label="true"];
26->7 [style = bold, label=""];
13->30 [style = solid, label="actual"];
13->25 [style = solid, label="actual"];
11->31 [style = solid, label="assertContext"];
47->44 [style = solid, label="assertContext"];
37->20 [style = solid, label="actual"];
21->12 [style = dotted, label="true"];
45->39 [style = bold, label=""];
17->48 [style = dashed, label="0"];
32->15 [style = bold, label=""];
13->27 [style = solid, label="actual"];
24->36 [style = dotted, label="false"];
26->31 [style = dotted, label="true"];
17->18 [style = bold, label=""];
}
