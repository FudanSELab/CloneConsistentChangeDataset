digraph {
8 [style = filled, label = "testFailedDocument(newDoc(null),\"Route value is null\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "addDocsAndCommit(true,newDoc(SHIPS(0())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "addDocsAndCommit(true,newDoc(SHIPS(1())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertInvariants(colVogon,colHoG)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(\"We expect at least 2 configSets\",retrievedConfigSetNames.size() >= expectedConfigSetNames.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "addDocsAndCommit(true,newDoc(SHIPS(1(),newDoc(SHIPS(2(),newDoc(SHIPS(3(),newDoc(SHIPS(4())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testFailedDocument(newDoc(SHIPS(2(),\"Max cardinality\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertInvariants(colVogon,colHoG)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final String colHoG = getAlias() + \"__CRA__\" + SHIPS(1(.replaceAll(\"\s\",\"_\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final String colHoG = getAlias() + \"__CRA__\" + noSpaces(SHIPS(1()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "test['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "CollectionAdminRequest.createCategoryRoutedAlias(getAlias(),categoryField,maxCardinality,CollectionAdminRequest.createCollection(\"_unused_\",configName,1,1).setMaxShardsPerNode(2)).process(solrClient)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String colStunt = getAlias() + \"__CRA__\" + noSpaces(SHIPS(2()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createConfigSet(configName)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertInvariants(colVogon,uninitialized)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(\"ConfigNames should include :\" + expectedConfigSetNames,retrievedConfigSetNames.containsAll(expectedConfigSetNames))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<String> expectedConfigSetNames = Arrays.asList(\"_default\",configName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String uninitialized = getAlias() + \"__CRA__\" + CategoryRoutedAlias.UNINITIALIZED@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String colArk = getAlias() + \"__CRA__\" + noDashes(SHIPS(3()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CollectionAdminRequest.createCategoryRoutedAlias(getAlias(),categoryField,20,CollectionAdminRequest.createCollection(\"_unused_\",configName,1,1).setMaxShardsPerNode(2)).process(solrClient)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final String colVogon = getAlias() + \"__CRA__\" + SHIPS(0(@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CollectionAdminRequest.createCategoryRoutedAlias(getAlias(),categoryField,20,CollectionAdminRequest.createCollection(\"_unused_\",configName,1,1)).process(solrClient)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "test['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testFailedDocument(newDoc(\"f鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申CRA鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申bar\"),\"7 character sequence __CRA__\")@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testFailedDocument(newDoc(\"foo__CRA__bar\"),\"7 character sequence __CRA__\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String colBistro = getAlias() + \"__CRA__\" + noDollar(SHIPS(4()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testMaxCardinality['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String configName = getSaferTestName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int maxCardinality = 2@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertInvariants(colVogon,colHoG,colStunt,colArk,colBistro)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
27->13 [style = solid, label="colHoG"];
14->3 [style = bold, label=""];
4->16 [style = bold, label=""];
6->21 [style = dashed, label="0"];
2->29 [style = solid, label="colVogon"];
30->10 [style = solid, label="expectedConfigSetNames"];
20->1 [style = solid, label="colBistro"];
1->8 [style = bold, label=""];
28->10 [style = bold, label=""];
19->12 [style = bold, label=""];
10->14 [style = bold, label=""];
22->16 [style = bold, label=""];
25->30 [style = bold, label=""];
14->11 [style = solid, label="expectedConfigSetNames"];
11->6 [style = bold, label=""];
11->21 [style = bold, label=""];
8->15 [style = dashed, label="0"];
16->7 [style = bold, label=""];
3->11 [style = bold, label=""];
12->20 [style = bold, label=""];
2->15 [style = solid, label="colVogon"];
5->9 [style = dashed, label="0"];
2->1 [style = solid, label="colVogon"];
16->7 [style = solid, label="configName"];
6->14 [style = dashed, label="0"];
17->19 [style = bold, label=""];
15->5 [style = bold, label=""];
20->10 [style = bold, label=""];
7->26 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->0 [style = bold, label=""];
2->23 [style = solid, label="colVogon"];
24->16 [style = bold, label=""];
5->1 [style = bold, label=""];
26->2 [style = bold, label=""];
21->9 [style = bold, label=""];
30->28 [style = bold, label=""];
16->14 [style = solid, label="configName"];
19->1 [style = solid, label="colStunt"];
7->2 [style = bold, label=""];
27->29 [style = solid, label="colHoG"];
17->1 [style = solid, label="colHoG"];
2->27 [style = bold, label=""];
0->18 [style = bold, label=""];
16->30 [style = solid, label="configName"];
13->15 [style = bold, label=""];
2->13 [style = solid, label="colVogon"];
11->23 [style = solid, label="uninitialized"];
6->9 [style = bold, label=""];
12->1 [style = solid, label="colArk"];
23->9 [style = bold, label=""];
11->23 [style = bold, label=""];
27->25 [style = bold, label=""];
15->29 [style = bold, label=""];
13->15 [style = solid, label="uninitialized"];
9->13 [style = bold, label=""];
17->27 [style = dashed, label="0"];
}
