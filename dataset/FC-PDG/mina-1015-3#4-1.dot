digraph {
5 [style = filled, label = "new Thread(new Runnable(){@Override public void run(){try {Thread.sleep(1000)future.setResult(true)}catch (final InterruptedException ignored) }}).start()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TimeoutException e@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(future.isDone())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testTimedGet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"This future was not interrupted\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testImmediateExceptionForTimedGet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "InterruptedException e@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testTimedGet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "fail(\"This future had an execution exception\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(future.get(1,TimeUnit.DAYS))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "future.setException(new NullPointerException())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ExecutionException ee@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(future.isCancelled())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFalse(future.isCancelled())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "future.get(1,TimeUnit.DAYS)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(future.isDone())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fail(\"This future was not interrupted\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(ee.getCause() instanceof NullPointerException)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(future.isDone())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(future.isCancelled())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
10->20 [style = bold, label=""];
16->11 [style = bold, label=""];
11->14 [style = bold, label=""];
18->16 [style = dotted, label="true"];
15->21 [style = bold, label=""];
8->3 [style = bold, label=""];
19->11 [style = bold, label=""];
7->0 [style = bold, label=""];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
17->19 [style = bold, label=""];
1->11 [style = bold, label=""];
20->2 [style = bold, label=""];
12->13 [style = bold, label=""];
12->13 [style = dotted, label="true"];
3->2 [style = bold, label=""];
9->15 [style = bold, label=""];
0->1 [style = bold, label=""];
3->20 [style = dashed, label="0"];
5->7 [style = bold, label=""];
4->5 [style = bold, label=""];
21->17 [style = bold, label=""];
0->1 [style = dotted, label="true"];
18->16 [style = bold, label=""];
}
