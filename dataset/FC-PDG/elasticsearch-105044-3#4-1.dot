digraph {
5 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Set.of(new RangeFieldMapper.Range(rangeType,1L,2L,true,true),new RangeFieldMapper.Range(rangeType,1L,4L,true,true),new RangeFieldMapper.Range(rangeType,1L,13L,true,true),new RangeFieldMapper.Range(rangeType,1L,5L,true,true)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RangeType rangeType = RangeType.LONG@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Document doc = new Document()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testMinDocCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testMultipleRangesLotsOfOverlap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "doc.add(new BinaryDocValuesField(\"field\",encodedRange))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "w.addDocument(doc)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MappedFieldType fieldType = new RangeFieldMapper.Builder(\"field\",rangeType).fieldType()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "fieldType.setName(\"field\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(0).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(1).getDocCount())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(2).getKey())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(1).getKey())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(0).getKey())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(1).getKey())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(2).getDocCount())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testMultipleRangesLotsOfOverlap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MappedFieldType fieldType = new RangeFieldMapper.Builder(\"field\",rangeType).fieldType()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(3,histogram.getBuckets().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,fieldType)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5).minDocCount(2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(2,histogram.getBuckets().size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(0).getDocCount())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
6->17 [style = bold, label=""];
17->8 [style = solid, label="doc"];
6->19 [style = solid, label="rangeType"];
17->5 [style = bold, label=""];
17->26 [style = bold, label=""];
15->23 [style = dashed, label="0"];
2->20 [style = dashed, label="0"];
29->25 [style = solid, label="aggBuilder"];
3->1 [style = bold, label=""];
16->8 [style = bold, label=""];
23->27 [style = bold, label=""];
11->14 [style = bold, label=""];
9->2 [style = bold, label=""];
4->6 [style = bold, label=""];
6->5 [style = solid, label="rangeType"];
10->19 [style = bold, label=""];
8->3 [style = bold, label=""];
12->15 [style = bold, label=""];
29->0 [style = bold, label=""];
9->27 [style = dashed, label="0"];
11->25 [style = solid, label="searcher"];
1->0 [style = bold, label=""];
3->19 [style = solid, label="aggBuilder"];
3->11 [style = solid, label="aggBuilder"];
26->16 [style = solid, label="encodedRange"];
21->28 [style = bold, label=""];
5->16 [style = bold, label=""];
8->17 [style = bold, label=""];
3->10 [style = bold, label=""];
26->16 [style = bold, label=""];
5->16 [style = solid, label="encodedRange"];
0->10 [style = bold, label=""];
19->14 [style = bold, label=""];
0->25 [style = solid, label="fieldType"];
18->6 [style = bold, label=""];
11->19 [style = dashed, label="0"];
15->9 [style = bold, label=""];
28->23 [style = bold, label=""];
12->28 [style = dashed, label="0"];
0->22 [style = bold, label=""];
14->12 [style = bold, label=""];
11->25 [style = dashed, label="0"];
14->21 [style = dashed, label="0"];
2->7 [style = bold, label=""];
10->19 [style = solid, label="searcher"];
24->6 [style = bold, label=""];
1->11 [style = solid, label="fieldType"];
27->20 [style = bold, label=""];
8->29 [style = bold, label=""];
22->11 [style = bold, label=""];
25->21 [style = bold, label=""];
10->11 [style = solid, label="searcher"];
11->25 [style = bold, label=""];
10->11 [style = bold, label=""];
}
