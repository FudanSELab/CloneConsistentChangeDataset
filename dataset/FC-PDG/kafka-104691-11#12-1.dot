digraph {
47 [style = filled, label = "EasyMock.expect(connector.taskClass()).andReturn()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "props.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expectLastCall()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "EasyMock.expect(connector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectStopStorage()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PowerMock.verifyAll()@@@51@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testAddConnectorByAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),connectorFactory,config,offsetBackingStore)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "props.put(ConnectorConfig.TASKS_MAX_CONFIG,\"1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "EasyMock.expect(plugins.newConnector(\"WorkerTestConnector\")).andReturn(connector)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "EasyMock.expect(connectorFactory.newConnector(.getName())).andReturn(connector)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ConnectorContext ctx = PowerMock.createMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "worker.stop()@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(2)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "connector.stop()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "expectConverters()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expect(connectorFactory.newConnector(\"WorkerTestConnector\")).andReturn(connector)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "connector.initialize(EasyMock.anyObject())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "EasyMock.expectLastCall()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Connector connector = PowerMock.createMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "ConnectException e@@@38@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "PowerMock.replayAll()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,2,Arrays.asList(\"foo\",\"bar\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "connector.start(props)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "{}@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "PowerMock.verifyAll()@@@37@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "testReconfigureConnectorTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "worker.start()@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expectStartStorage()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testAddConnectorByAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EasyMock.expectLastCall()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
17->10 [style = bold, label=""];
27->13 [style = bold, label=""];
22->25 [style = bold, label=""];
49->42 [style = bold, label=""];
16->36 [style = bold, label=""];
44->56 [style = bold, label=""];
4->32 [style = bold, label=""];
40->50 [style = bold, label=""];
50->43 [style = bold, label=""];
25->2 [style = solid, label="props"];
3->37 [style = bold, label=""];
25->6 [style = solid, label="props"];
56->43 [style = solid, label="expectedTaskProps"];
57->55 [style = bold, label=""];
37->30 [style = bold, label=""];
26->29 [style = bold, label=""];
17->47 [style = bold, label=""];
46->49 [style = bold, label=""];
15->20 [style = solid, label="props"];
24->41 [style = solid, label="connector"];
4->57 [style = solid, label="ctx"];
8->35 [style = dashed, label="0"];
4->21 [style = bold, label=""];
8->14 [style = bold, label=""];
53->44 [style = bold, label=""];
56->46 [style = bold, label=""];
24->21 [style = solid, label="connector"];
4->11 [style = solid, label="ctx"];
10->26 [style = bold, label=""];
45->52 [style = solid, label="taskProps"];
5->18 [style = bold, label=""];
52->10 [style = bold, label=""];
16->17 [style = bold, label=""];
48->53 [style = bold, label=""];
4->2 [style = solid, label="ctx"];
30->6 [style = bold, label=""];
25->57 [style = solid, label="props"];
12->0 [style = bold, label=""];
8->35 [style = bold, label=""];
42->40 [style = bold, label=""];
39->28 [style = bold, label=""];
19->8 [style = bold, label=""];
4->41 [style = bold, label=""];
15->11 [style = solid, label="props"];
12->51 [style = bold, label=""];
43->7 [style = bold, label=""];
6->20 [style = bold, label=""];
32->38 [style = bold, label=""];
51->3 [style = bold, label=""];
29->27 [style = bold, label=""];
35->23 [style = bold, label=""];
45->58 [style = bold, label=""];
13->19 [style = bold, label=""];
24->4 [style = bold, label=""];
7->5 [style = bold, label=""];
1->34 [style = bold, label=""];
55->44 [style = bold, label=""];
20->16 [style = bold, label=""];
33->39 [style = bold, label=""];
14->23 [style = bold, label=""];
18->1 [style = bold, label=""];
21->22 [style = bold, label=""];
15->9 [style = bold, label=""];
21->41 [style = dashed, label="0"];
0->51 [style = dashed, label="0"];
25->15 [style = bold, label=""];
28->24 [style = bold, label=""];
38->25 [style = bold, label=""];
24->38 [style = solid, label="connector"];
47->45 [style = bold, label=""];
58->52 [style = bold, label=""];
9->12 [style = bold, label=""];
23->2 [style = bold, label=""];
31->28 [style = bold, label=""];
36->17 [style = bold, label=""];
41->22 [style = bold, label=""];
54->28 [style = bold, label=""];
3->30 [style = bold, label=""];
11->57 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
56->50 [style = solid, label="expectedTaskProps"];
}
