digraph {
0 [style = filled, label = "File diffOutput = new File(super.localTmp,thisTest.testName)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,aPath,diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "writer.flush()@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "paths.add(iotaPath)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertFileContentsEquals(\"Unexpected diff output in file '\" + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String expectedDiffOutput = \"Index: iota\" + NL + sepLine + \"--- iota(.../iota)(revision 1)\" + NL + \"+++ iota(.../A/mu)(revision 1)\" + NL + expectedDiffBody@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath + \"/\",diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "diffOutput.delete()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ClientException e@@@88@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "Exception ignored@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "final String NL = System.getProperty(\"line.separator\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "setprop(iotaPath,\"svn:eol-style\",\"native\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "setprop(aPath,\"testprop\",\"Test property value.\" + NL)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "client.revert(wcPath,Depth.infinity,null)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@85@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String aPath = fileToSVNPath(new File(thisTest.getWCPath() + \"/A\"),false)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "fail(\"This test should fail because the relativeToDir parameter \" + \"does not work with URLs\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "expectedDiffOutput = \"Index: A\" + NL + sepLine + \"--- A(revision 1)\" + NL + \"+++ A(working copy)\" + NL + NL + \"Property changes on: A\" + NL + underSepLine + \"Added: testprop\" + NL + \"## -0,0 +1 ##\" + NL + \"+Test property value.\" + NL@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final String underSepLine = \"___________________________________________________________________\" + NL@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expectedDiffOutput = \"Index: iota\" + NL + sepLine + \"--- iota(revision \" + operativeRevision + \")\" + NL + \"+++ iota(working copy)\" + NL + expectedDiffBody@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Set<String> paths = new HashSet<String>(1)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "OneTest thisTest = new OneTest(true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "writer.print(\"This is the file 'mu'.\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "writer.close()@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "writer = new PrintWriter(new FileOutputStream(iotaPath))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "writer = new PrintWriter(new FileOutputStream(iotaPath))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "addExpectedCommitItem(thisTest.getWCPath(),thisTest.getUrl(),\"iota\",NodeKind.file,CommitItemStateFlags.PropMods)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "client.revert(wcPath,true)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "Exception ignored@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,diffOutput.getPath(),false,true,true,false)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testDiff['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "writer.flush()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "expectedDiffOutput = \"Index: \" + iotaPath + NL + sepLine + \"--- \" + iotaPath + \"(revision \" + operativeRevision + \")\" + NL + \"+++ \" + iotaPath + \"(working copy)\" + NL + expectedDiffBody@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ClientException e@@@63@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "String assertPrefix = revisionPrefix + \"Unexpected diff output in file '\"@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Exception ignored@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,thisTest.getUrl() + \"/A/mu\",Revision.HEAD,null,diffOutput.getPath(),Depth.files,null,true,true,false,false)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',\"\",diffOutput)@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,aPath,diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final String wcPath = fileToSVNPath(new File(thisTest.getWCPath()),false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "client.diff(thisTest.getUrl().toString() + \"/iota\",Revision.HEAD,thisTest.getUrl().toString() + \"/A/mu\",Revision.HEAD,thisTest.getUrl().toString(),diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final String sepLine = \"===================================================================\" + NL@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "setprop(aPath,\"testprop\",\"Test property value.\" + NL)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "PrintWriter writer = new PrintWriter(new FileOutputStream(iotaPath))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client.commit(paths,Depth.empty,false,false,null,null,new ConstMsg(\"Set svn:eol-style to native\"),null)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertFileContentsEquals(\"Unexpected diff output in file '\" + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "diffOutput.delete()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,new Revision.Number(operativeRevision),Revision.HEAD,null,diffOutput.getPath(),Depth.files,null,true,true,false,false)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@77@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Exception ignored@@@22@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "{}@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,\"/non/existent/path\",diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{}@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ClientException e@@@79@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{}@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "operativeRevision < 3@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "diffOutput.delete()@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ClientException e@@@70@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "client.propertySet(aPath,\"testprop\",\"Test property value.\" + NL,false)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "operativeRevision++@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "writer.close()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "operativeRevision == 2@@@45@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String iotaPath = thisTest.getWCPath().replace('\','/') + \"/iota\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,thisTest.getUrl() + \"/A/mu\",Revision.HEAD,thisTest.getUrl(),diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "int operativeRevision = 1@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final String expectedDiffBody = \"@@ -1 +1 @@\" + NL + \"-This is the file 'iota'.\" + NL + \"\ No newline at end of file\" + NL + \"+This is the file 'mu'.\" + NL + \"\ No newline at end of file\" + NL@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "ClientException e@@@71@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Exception ignored@@@22@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertFileContentsEquals(\"Unexpected diff output in file '\" + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "writer.print(\"This is the file 'mu'.\")@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ClientException e@@@80@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "expectedDiffOutput = \"Index: iota\" + NL + sepLine + \"--- iota(revision \" + operativeRevision + \")\" + NL + \"+++ iota(working copy)\" + NL + expectedDiffBody@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ClientException e@@@62@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "client.propertyCreate(iotaPath,\"svn:eol-style\",\"native\",false)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "expectedDiffOutput = \"Index: .\" + NL + sepLine + \"--- .(revision 1)\" + NL + \"+++ .(working copy)\" + NL + NL + \"Property changes on: .\" + NL + underSepLine + \"Added: testprop\" + NL + \"## -0,0 +1 ##\" + NL + \"+Test property value.\" + NL@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "client.commit(paths,\"Set svn:eol-style to native\",false)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ClientException e@@@87@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,\"/non/existent/path\",diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,null,diffOutput.getPath(),Depth.files,null,true,true,false,false)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,new Revision.Number(operativeRevision),Revision.HEAD,diffOutput.getPath(),false,true,true,false)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',\"\",diffOutput)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "String(( paths = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@19c793@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "fail(\"This test should fail because iotaPath is not a child of \" + \"the relativeToDir parameter\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath + \"/\",diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "fail(\"This test should fail becaus the relativeToDir parameter \" + \"does not work with URLs\")@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,thisTest.getUrl() + \"/A/mu\",Revision.HEAD,diffOutput.getPath(),false,true,true,false)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String revisionPrefix = \"While processing operativeRevison=\" + operativeRevision + \". \"@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "testDiff['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "addExpectedCommitItem(thisTest.getWCPath(),thisTest.getUrl().toString(),\"iota\",NodeKind.file,CommitItemStateFlags.PropMods)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "diffOutput.delete()@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "testDiff['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "client.propertySet(aPath,\"testprop\",\"Test property value.\" + NL,false)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->64 [style = dotted, label="true"];
50->15 [style = solid, label="operativeRevision"];
44->37 [style = solid, label="operativeRevision"];
70->64 [style = bold, label=""];
64->51 [style = bold, label=""];
38->44 [style = bold, label=""];
14->87 [style = solid, label="iotaPath"];
26->4 [style = solid, label="sepLine"];
68->9 [style = solid, label="NL"];
23->59 [style = dotted, label="true"];
37->94 [style = dotted, label="true"];
2->98 [style = dashed, label="0"];
37->58 [style = dotted, label="true"];
23->70 [style = dotted, label="true"];
57->14 [style = bold, label=""];
40->25 [style = bold, label=""];
14->13 [style = solid, label="iotaPath"];
62->34 [style = solid, label="assertPrefix"];
32->67 [style = dotted, label="true"];
21->24 [style = bold, label=""];
52->102 [style = dashed, label="0"];
23->84 [style = dotted, label="true"];
91->94 [style = bold, label=""];
58->18 [style = bold, label=""];
68->99 [style = solid, label="NL"];
89->93 [style = bold, label=""];
37->100 [style = dotted, label="true"];
41->88 [style = solid, label="wcPath"];
9->63 [style = bold, label=""];
0->65 [style = solid, label="diffOutput"];
4->75 [style = bold, label=""];
0->56 [style = solid, label="diffOutput"];
44->23 [style = bold, label=""];
12->74 [style = dashed, label="0"];
48->91 [style = dashed, label="0"];
32->67 [style = bold, label=""];
72->31 [style = bold, label=""];
0->38 [style = solid, label="diffOutput"];
15->62 [style = solid, label="revisionPrefix"];
8->84 [style = dashed, label="0"];
37->98 [style = dotted, label="true"];
79->102 [style = bold, label=""];
57->79 [style = solid, label="expectedDiffBody"];
84->34 [style = bold, label=""];
0->55 [style = solid, label="diffOutput"];
26->46 [style = solid, label="sepLine"];
22->87 [style = bold, label=""];
68->79 [style = solid, label="NL"];
0->59 [style = solid, label="diffOutput"];
68->33 [style = solid, label="NL"];
14->16 [style = solid, label="iotaPath"];
0->34 [style = solid, label="diffOutput"];
49->56 [style = bold, label=""];
23->15 [style = dotted, label="true"];
11->96 [style = bold, label=""];
39->47 [style = bold, label=""];
23->95 [style = dotted, label="true"];
50->33 [style = solid, label="operativeRevision"];
14->80 [style = solid, label="iotaPath"];
63->38 [style = bold, label=""];
85->84 [style = bold, label=""];
30->10 [style = solid, label="expectedDiffOutput"];
68->26 [style = solid, label="NL"];
23->29 [style = dotted, label="true"];
44->89 [style = solid, label="operativeRevision"];
35->86 [style = dashed, label="0"];
43->76 [style = solid, label="aPath"];
22->13 [style = bold, label=""];
35->12 [style = bold, label=""];
44->15 [style = solid, label="operativeRevision"];
10->11 [style = bold, label=""];
0->10 [style = solid, label="diffOutput"];
78->89 [style = bold, label=""];
37->48 [style = dotted, label="true"];
23->88 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
55->82 [style = bold, label=""];
28->37 [style = bold, label=""];
98->91 [style = bold, label=""];
50->23 [style = bold, label=""];
4->66 [style = solid, label="expectedDiffOutput"];
14->2 [style = solid, label="iotaPath"];
62->69 [style = solid, label="assertPrefix"];
24->0 [style = bold, label=""];
66->86 [style = bold, label=""];
61->1 [style = bold, label=""];
50->89 [style = solid, label="operativeRevision"];
23->55 [style = dotted, label="true"];
62->59 [style = solid, label="assertPrefix"];
0->68 [style = bold, label=""];
23->65 [style = dotted, label="true"];
23->80 [style = dotted, label="true"];
52->65 [style = bold, label=""];
68->89 [style = solid, label="NL"];
54->99 [style = bold, label=""];
37->29 [style = bold, label=""];
76->38 [style = bold, label=""];
56->46 [style = bold, label=""];
50->84 [style = solid, label="operativeRevision"];
43->63 [style = solid, label="aPath"];
23->96 [style = dotted, label="true"];
79->59 [style = solid, label="expectedDiffOutput"];
37->18 [style = dotted, label="true"];
9->92 [style = dashed, label="0"];
90->31 [style = bold, label=""];
43->99 [style = solid, label="aPath"];
63->76 [style = dashed, label="0"];
14->98 [style = solid, label="iotaPath"];
23->102 [style = dotted, label="true"];
66->35 [style = bold, label=""];
42->75 [style = dashed, label="0"];
41->61 [style = bold, label=""];
48->17 [style = solid, label="paths"];
93->55 [style = bold, label=""];
96->50 [style = bold, label=""];
80->11 [style = bold, label=""];
57->89 [style = solid, label="expectedDiffBody"];
23->50 [style = dotted, label="true"];
6->85 [style = bold, label=""];
46->38 [style = solid, label="expectedDiffOutput"];
67->78 [style = dotted, label="true"];
68->30 [style = solid, label="NL"];
23->51 [style = dotted, label="true"];
75->66 [style = bold, label=""];
14->33 [style = solid, label="iotaPath"];
14->93 [style = solid, label="iotaPath"];
36->49 [style = bold, label=""];
59->81 [style = bold, label=""];
57->33 [style = solid, label="expectedDiffBody"];
67->30 [style = bold, label=""];
41->93 [style = solid, label="wcPath"];
27->20 [style = dotted, label="true"];
7->6 [style = bold, label=""];
23->79 [style = dotted, label="true"];
43->92 [style = solid, label="aPath"];
62->28 [style = bold, label=""];
14->58 [style = solid, label="iotaPath"];
49->77 [style = dashed, label="0"];
41->16 [style = solid, label="wcPath"];
62->55 [style = solid, label="assertPrefix"];
44->84 [style = solid, label="operativeRevision"];
8->69 [style = bold, label=""];
23->33 [style = dotted, label="true"];
14->91 [style = solid, label="iotaPath"];
5->22 [style = bold, label=""];
6->85 [style = dotted, label="true"];
27->20 [style = bold, label=""];
53->54 [style = solid, label="underSepLine"];
0->47 [style = solid, label="diffOutput"];
68->26 [style = bold, label=""];
23->16 [style = dotted, label="true"];
2->48 [style = bold, label=""];
48->58 [style = bold, label=""];
95->89 [style = bold, label=""];
33->52 [style = bold, label=""];
46->9 [style = bold, label=""];
41->80 [style = solid, label="wcPath"];
37->91 [style = dotted, label="true"];
36->99 [style = dashed, label="0"];
14->61 [style = solid, label="iotaPath"];
44->8 [style = solid, label="operativeRevision"];
26->53 [style = bold, label=""];
0->11 [style = solid, label="diffOutput"];
23->81 [style = dotted, label="true"];
16->80 [style = dashed, label="0"];
102->59 [style = bold, label=""];
57->4 [style = solid, label="expectedDiffBody"];
23->28 [style = dotted, label="true"];
35->74 [style = bold, label=""];
23->52 [style = dotted, label="true"];
23->15 [style = bold, label=""];
57->30 [style = solid, label="expectedDiffBody"];
94->100 [style = bold, label=""];
44->33 [style = solid, label="operativeRevision"];
68->36 [style = solid, label="NL"];
45->16 [style = bold, label=""];
88->37 [style = bold, label=""];
41->77 [style = solid, label="wcPath"];
101->80 [style = bold, label=""];
0->69 [style = solid, label="diffOutput"];
67->78 [style = bold, label=""];
68->92 [style = solid, label="NL"];
59->8 [style = bold, label=""];
20->97 [style = bold, label=""];
62->11 [style = solid, label="assertPrefix"];
23->39 [style = dotted, label="true"];
12->13 [style = bold, label=""];
33->79 [style = bold, label=""];
14->79 [style = solid, label="iotaPath"];
86->12 [style = bold, label=""];
14->52 [style = solid, label="iotaPath"];
23->10 [style = dotted, label="true"];
0->66 [style = solid, label="diffOutput"];
44->50 [style = solid, label="operativeRevision"];
30->47 [style = solid, label="expectedDiffOutput"];
54->36 [style = bold, label=""];
23->62 [style = dotted, label="true"];
83->24 [style = bold, label=""];
54->56 [style = solid, label="expectedDiffOutput"];
33->65 [style = solid, label="expectedDiffOutput"];
43->36 [style = solid, label="aPath"];
68->4 [style = solid, label="NL"];
37->70 [style = bold, label=""];
31->43 [style = bold, label=""];
11->50 [style = bold, label=""];
87->3 [style = bold, label=""];
26->30 [style = solid, label="sepLine"];
68->46 [style = solid, label="NL"];
37->2 [style = bold, label=""];
68->54 [style = solid, label="NL"];
103->22 [style = bold, label=""];
50->8 [style = solid, label="operativeRevision"];
55->16 [style = bold, label=""];
41->28 [style = solid, label="wcPath"];
26->79 [style = solid, label="sepLine"];
12->87 [style = bold, label=""];
43->54 [style = bold, label=""];
37->98 [style = bold, label=""];
19->43 [style = bold, label=""];
14->41 [style = bold, label=""];
31->19 [style = bold, label=""];
97->50 [style = bold, label=""];
68->53 [style = solid, label="NL"];
81->84 [style = bold, label=""];
92->76 [style = bold, label=""];
50->37 [style = solid, label="operativeRevision"];
44->79 [style = solid, label="operativeRevision"];
20->50 [style = bold, label=""];
43->9 [style = solid, label="aPath"];
23->69 [style = dotted, label="true"];
45->101 [style = dotted, label="true"];
46->92 [style = bold, label=""];
82->80 [style = bold, label=""];
71->22 [style = bold, label=""];
23->47 [style = dotted, label="true"];
26->89 [style = solid, label="sepLine"];
53->46 [style = solid, label="underSepLine"];
91->100 [style = solid, label="paths"];
26->33 [style = solid, label="sepLine"];
23->8 [style = dotted, label="true"];
1->40 [style = bold, label=""];
16->10 [style = bold, label=""];
14->102 [style = solid, label="iotaPath"];
53->57 [style = bold, label=""];
41->49 [style = solid, label="wcPath"];
62->65 [style = solid, label="assertPrefix"];
26->54 [style = solid, label="sepLine"];
42->66 [style = bold, label=""];
45->101 [style = bold, label=""];
50->30 [style = solid, label="operativeRevision"];
4->42 [style = bold, label=""];
25->4 [style = bold, label=""];
18->17 [style = bold, label=""];
73->24 [style = bold, label=""];
62->88 [style = bold, label=""];
15->62 [style = bold, label=""];
23->30 [style = dotted, label="true"];
60->45 [style = dotted, label="true"];
28->88 [style = dashed, label="0"];
100->70 [style = bold, label=""];
68->57 [style = solid, label="NL"];
43->77 [style = solid, label="aPath"];
34->30 [style = bold, label=""];
60->45 [style = bold, label=""];
37->17 [style = dotted, label="true"];
23->37 [style = dotted, label="true"];
23->82 [style = dotted, label="true"];
43->49 [style = solid, label="aPath"];
99->77 [style = bold, label=""];
14->29 [style = solid, label="iotaPath"];
20->97 [style = dotted, label="true"];
50->23 [style = solid, label="operativeRevision"];
47->55 [style = bold, label=""];
13->3 [style = bold, label=""];
41->39 [style = solid, label="wcPath"];
62->47 [style = solid, label="assertPrefix"];
14->70 [style = solid, label="iotaPath"];
39->93 [style = dashed, label="0"];
89->55 [style = solid, label="expectedDiffOutput"];
34->95 [style = bold, label=""];
6->8 [style = bold, label=""];
65->59 [style = bold, label=""];
30->39 [style = bold, label=""];
62->10 [style = solid, label="assertPrefix"];
3->43 [style = bold, label=""];
23->93 [style = dotted, label="true"];
44->23 [style = solid, label="operativeRevision"];
13->87 [style = dashed, label="0"];
29->70 [style = bold, label=""];
17->29 [style = bold, label=""];
14->39 [style = solid, label="iotaPath"];
89->11 [style = solid, label="expectedDiffOutput"];
74->13 [style = bold, label=""];
23->34 [style = dotted, label="true"];
50->79 [style = solid, label="operativeRevision"];
37->2 [style = dotted, label="true"];
69->34 [style = bold, label=""];
44->30 [style = solid, label="operativeRevision"];
23->89 [style = dotted, label="true"];
77->56 [style = bold, label=""];
51->33 [style = bold, label=""];
23->11 [style = dotted, label="true"];
}
