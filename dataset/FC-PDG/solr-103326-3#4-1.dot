digraph {
19 [style = filled, label = "testDocsWithField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(i,ints.get(i))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(i,ints.nextDoc())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "i % 2 == 0@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(docsWithField.get(i))@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cache.getNumerics(reader,\"theDouble\",FieldCache.DOUBLE_POINT_PARSER,true)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertTrue(bits instanceof Bits.MatchAllBits)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < docsWithField.length()@@@29@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 0@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "i++@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(docsWithField.get(i))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testDocsWithField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "NumericDocValues numInts = cache.getNumerics(reader,\"numInt\",FieldCache.INT_POINT_PARSER,random().nextBoolean())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "NumericDocValues numInts = cache.getNumerics(reader,\"numInt\",FieldCache.LEGACY_INT_PARSER,random().nextBoolean())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(2,cache.getCacheEntries().length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "i % 2 == 0@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "NumericDocValues numInts = cache.getNumerics(reader,\"numInt\",FieldCache.INT_POINT_PARSER)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "testDocsWithField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i < reader.maxDoc()@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "docsWithField = cache.getDocsWithField(reader,\"numInt\",FieldCache.INT_POINT_PARSER)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(4,cache.getCacheEntries().length)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < docsWithField.length()@@@16@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i % 2 == 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(docsWithField.get(i))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(i,ints.longValue())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "docsWithField = cache.getDocsWithField(reader,\"numInt\",FieldCache.LEGACY_INT_PARSER)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "FieldCache cache = FieldCache.DEFAULT@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "cache.getNumerics(reader,\"theDouble\",FieldCache.DOUBLE_POINT_PARSER)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "cache.getNumerics(reader,\"theDouble\",FieldCache.LEGACY_DOUBLE_PARSER,true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Bits docsWithField = cache.getDocsWithField(reader,\"sparse\",FieldCache.LEGACY_INT_PARSER)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(2,cache.getCacheEntries().length)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(docsWithField.get(i))@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(i,numInts.get(i))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Bits bits = cache.getDocsWithField(reader,\"theDouble\",FieldCache.LEGACY_DOUBLE_PARSER)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "NumericDocValues ints = cache.getNumerics(reader,\"sparse\",FieldCache.LEGACY_INT_PARSER,true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < reader.maxDoc()@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Bits docsWithField = cache.getDocsWithField(reader,\"sparse\",FieldCache.INT_POINT_PARSER)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(4,cache.getCacheEntries().length)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "NumericDocValues ints = cache.getNumerics(reader,\"sparse\",FieldCache.INT_POINT_PARSER,true)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Bits bits = cache.getDocsWithField(reader,\"theDouble\",FieldCache.DOUBLE_POINT_PARSER)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "NumericDocValues ints = cache.getNumerics(reader,\"sparse\",FieldCache.INT_POINT_PARSER)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "cache.purgeAllCaches()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->9 [style = solid, label="i"];
35->34 [style = solid, label="i"];
27->38 [style = bold, label=""];
12->5 [style = bold, label=""];
5->9 [style = bold, label=""];
5->37 [style = solid, label="i"];
28->20 [style = bold, label=""];
20->40 [style = dashed, label="0"];
20->26 [style = bold, label=""];
29->5 [style = dotted, label="true"];
13->22 [style = solid, label="i"];
24->32 [style = bold, label=""];
38->4 [style = bold, label=""];
6->38 [style = dashed, label="0"];
0->25 [style = dotted, label="true"];
1->44 [style = dashed, label="0"];
4->44 [style = bold, label=""];
9->16 [style = bold, label=""];
18->21 [style = dotted, label="false"];
18->37 [style = dotted, label="true"];
29->18 [style = bold, label=""];
41->28 [style = bold, label=""];
22->0 [style = bold, label=""];
45->43 [style = bold, label=""];
0->25 [style = bold, label=""];
0->7 [style = dotted, label="false"];
43->8 [style = bold, label=""];
0->8 [style = bold, label=""];
31->34 [style = dotted, label="true"];
30->14 [style = bold, label=""];
40->26 [style = bold, label=""];
23->12 [style = bold, label=""];
13->22 [style = bold, label=""];
5->36 [style = solid, label="i"];
25->13 [style = dashed, label="0"];
14->11 [style = bold, label=""];
5->9 [style = solid, label="i"];
18->23 [style = dotted, label="true"];
16->3 [style = bold, label=""];
5->29 [style = bold, label=""];
35->31 [style = bold, label=""];
13->0 [style = solid, label="i"];
2->21 [style = solid, label="i"];
29->18 [style = dotted, label="true"];
34->13 [style = dotted, label="true"];
37->36 [style = bold, label=""];
13->25 [style = solid, label="i"];
35->31 [style = solid, label="i"];
22->0 [style = dotted, label="true"];
17->0 [style = dashed, label="0"];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
34->8 [style = bold, label=""];
39->4 [style = bold, label=""];
8->22 [style = bold, label=""];
0->7 [style = bold, label=""];
8->25 [style = solid, label="i"];
2->37 [style = solid, label="i"];
6->4 [style = bold, label=""];
26->27 [style = bold, label=""];
22->13 [style = dotted, label="true"];
16->45 [style = dashed, label="0"];
5->29 [style = solid, label="i"];
10->2 [style = bold, label=""];
2->36 [style = solid, label="i"];
35->8 [style = solid, label="i"];
8->7 [style = solid, label="i"];
2->5 [style = solid, label="i"];
22->31 [style = dashed, label="0"];
13->0 [style = bold, label=""];
18->37 [style = bold, label=""];
5->23 [style = solid, label="i"];
18->23 [style = bold, label=""];
8->31 [style = bold, label=""];
18->36 [style = dotted, label="true"];
13->7 [style = solid, label="i"];
15->32 [style = dashed, label="0"];
11->24 [style = bold, label=""];
2->18 [style = solid, label="i"];
25->17 [style = bold, label=""];
34->0 [style = dotted, label="true"];
15->41 [style = dashed, label="0"];
23->37 [style = dashed, label="0"];
20->27 [style = solid, label="bits"];
31->34 [style = bold, label=""];
24->41 [style = bold, label=""];
42->14 [style = bold, label=""];
35->13 [style = solid, label="i"];
31->8 [style = dotted, label="true"];
21->5 [style = bold, label=""];
27->39 [style = bold, label=""];
9->18 [style = bold, label=""];
19->14 [style = bold, label=""];
8->34 [style = solid, label="i"];
15->28 [style = bold, label=""];
3->8 [style = bold, label=""];
5->18 [style = solid, label="i"];
36->5 [style = bold, label=""];
4->1 [style = bold, label=""];
17->13 [style = bold, label=""];
35->0 [style = solid, label="i"];
18->21 [style = bold, label=""];
5->12 [style = solid, label="i"];
8->17 [style = solid, label="i"];
2->29 [style = solid, label="i"];
24->15 [style = bold, label=""];
9->5 [style = dotted, label="true"];
7->13 [style = bold, label=""];
33->35 [style = bold, label=""];
8->0 [style = solid, label="i"];
28->40 [style = bold, label=""];
13->17 [style = solid, label="i"];
40->27 [style = solid, label="bits"];
34->13 [style = bold, label=""];
8->22 [style = solid, label="i"];
5->21 [style = solid, label="i"];
44->10 [style = bold, label=""];
2->23 [style = solid, label="i"];
27->6 [style = bold, label=""];
8->13 [style = solid, label="i"];
8->31 [style = solid, label="i"];
29->33 [style = bold, label=""];
18->12 [style = dotted, label="true"];
9->29 [style = dashed, label="0"];
12->36 [style = dashed, label="0"];
9->45 [style = bold, label=""];
18->5 [style = bold, label=""];
3->43 [style = dashed, label="0"];
2->12 [style = solid, label="i"];
9->18 [style = dotted, label="true"];
0->17 [style = dotted, label="true"];
2->29 [style = bold, label=""];
1->10 [style = bold, label=""];
32->28 [style = bold, label=""];
6->39 [style = dashed, label="0"];
}
