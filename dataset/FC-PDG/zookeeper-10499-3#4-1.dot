digraph {
2 [style = filled, label = "createFile(target,\"before\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "exception = true@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testOutputStreamFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File target = new File(tmpdir,\"target.txt\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(\"tmp file should have been deleted\",tmp.exists())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "boolean exception = false@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final File tmp = new File(tmpdir,\"target.txt.tmp\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testOutputStreamFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testOutputStreamFailureIOException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(\"should have raised an exception\",exception)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"before\",getContent(target))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IOException ex@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "target.delete()@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RuntimeException ex@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"before\",getContent(target))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "new AtomicFileWritingIdiom(target,new OutputStreamStatement(){@Override public void write(OutputStream os){os.write(\"after\".getBytes(\"ASCII\"))os.flush()assertTrue(\"implementation of AtomicFileOutputStream has changed, update the test\",tmp.exists())throw new IOException()}})@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = dashed, label="0"];
7->1 [style = bold, label=""];
3->1 [style = solid, label="exception"];
10->3 [style = dotted, label="true"];
10->3 [style = bold, label=""];
4->9 [style = solid, label="target"];
15->3 [style = bold, label=""];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
8->0 [style = bold, label=""];
15->3 [style = dotted, label="true"];
12->2 [style = bold, label=""];
3->7 [style = bold, label=""];
5->4 [style = bold, label=""];
4->12 [style = bold, label=""];
11->8 [style = bold, label=""];
4->0 [style = solid, label="target"];
4->11 [style = solid, label="target"];
4->2 [style = solid, label="target"];
2->11 [style = bold, label=""];
8->1 [style = solid, label="exception"];
14->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
