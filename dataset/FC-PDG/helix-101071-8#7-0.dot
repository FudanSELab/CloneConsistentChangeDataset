digraph {
1 [style = filled, label = "Entity entity = Entity.entity(OBJECT_MAPPER.writeValueAsString(map1),MediaType.APPLICATION_JSON_TYPE)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(contentStore,map1)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String uri = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/Job_0/userContent\"@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "map1.put(\"k1\",\"v2\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(contentStore,map1)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testGetAddTaskUserContent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(contentStore,map1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String body = get(uri,null,Response.Status.OK.getStatusCode(),true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testGetAddJobContent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Map<String,String> map1 = new HashMap<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "contentStore = OBJECT_MAPPER.readValue(body,new TypeReference<Map<String,String>>(){})@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "map1.put(\"k2\",\"v2\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "post(uri,ImmutableMap.of(\"command\",\"update\"),entity,Response.Status.OK.getStatusCode())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(contentStore.isEmpty())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(contentStore.isEmpty())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String body = get(uri,null,Response.Status.OK.getStatusCode(),true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "contentStore = OBJECT_MAPPER.readValue(body,new TypeReference<Map<String,String>>(){})@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(contentStore,map1)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String uri = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/Job_0/tasks/0/userContent\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "System.out.println(\"Start test :\" + TestHelper.getTestMethodName())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "entity = Entity.entity(OBJECT_MAPPER.writeValueAsString(map1),MediaType.APPLICATION_JSON_TYPE)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "body = get(uri,null,Response.Status.OK.getStatusCode(),true)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(contentStore,map1)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String uriTaskDoesNotExist = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/Job_0/tasks/xxx/userContent\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "map1.put(\"k1\",\"v1\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "post(uriTaskDoesNotExist,ImmutableMap.of(\"command\",\"update\"),entity,Response.Status.OK.getStatusCode())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "System.out.println(\"End test :\" + TestHelper.getTestMethodName())@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Map<String,String> contentStore = OBJECT_MAPPER.readValue(body,new TypeReference<Map<String,String>>(){})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testGetAddJobContent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "body = get(uriTaskDoesNotExist,null,Response.Status.OK.getStatusCode(),true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "body = get(uri,null,Response.Status.OK.getStatusCode(),true)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String uri = \"clusters/\" + CLUSTER_NAME + \"/workflows/Workflow_0/jobs/JOB0/userContent\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "post(uri,ImmutableMap.of(\"command\",\"update\"),entity,Response.Status.OK.getStatusCode())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "contentStore = OBJECT_MAPPER.readValue(body,new TypeReference<Map<String,String>>(){})@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33->2 [style = solid, label="contentStore"];
9->33 [style = solid, label="body"];
12->10 [style = solid, label="map1"];
27->28 [style = bold, label=""];
10->32 [style = bold, label=""];
25->10 [style = solid, label="contentStore"];
0->15 [style = bold, label=""];
0->24 [style = solid, label="body"];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
28->0 [style = bold, label=""];
3->5 [style = bold, label=""];
30->26 [style = solid, label="body"];
11->13 [style = solid, label="entity"];
15->20 [style = bold, label=""];
14->19 [style = solid, label="uri"];
0->24 [style = bold, label=""];
8->9 [style = solid, label="body"];
12->1 [style = solid, label="map1"];
14->8 [style = solid, label="uri"];
25->10 [style = bold, label=""];
12->19 [style = solid, label="map1"];
13->19 [style = solid, label="entity"];
9->33 [style = bold, label=""];
30->26 [style = bold, label=""];
12->11 [style = bold, label=""];
14->22 [style = dashed, label="0"];
7->0 [style = bold, label=""];
22->7 [style = bold, label=""];
6->2 [style = bold, label=""];
24->20 [style = bold, label=""];
20->6 [style = solid, label="map1"];
18->4 [style = bold, label=""];
22->16 [style = solid, label="uri"];
18->25 [style = solid, label="body"];
18->25 [style = bold, label=""];
14->16 [style = solid, label="uri"];
20->11 [style = solid, label="map1"];
5->22 [style = bold, label=""];
1->19 [style = solid, label="entity"];
2->17 [style = bold, label=""];
14->1 [style = solid, label="uri"];
4->10 [style = bold, label=""];
16->18 [style = bold, label=""];
1->8 [style = bold, label=""];
23->5 [style = bold, label=""];
27->8 [style = solid, label="uri"];
1->29 [style = solid, label="entity"];
11->1 [style = solid, label="entity"];
20->13 [style = solid, label="map1"];
27->18 [style = solid, label="uri"];
27->0 [style = solid, label="uri"];
19->16 [style = bold, label=""];
21->5 [style = bold, label=""];
13->19 [style = bold, label=""];
26->31 [style = bold, label=""];
14->7 [style = solid, label="uri"];
9->6 [style = solid, label="contentStore"];
28->30 [style = solid, label="uriTaskDoesNotExist"];
22->7 [style = solid, label="uri"];
17->13 [style = bold, label=""];
31->17 [style = bold, label=""];
12->31 [style = solid, label="map1"];
33->2 [style = bold, label=""];
28->29 [style = solid, label="uriTaskDoesNotExist"];
27->16 [style = solid, label="uri"];
11->1 [style = bold, label=""];
19->16 [style = solid, label="entity"];
29->9 [style = bold, label=""];
22->19 [style = solid, label="uri"];
5->14 [style = bold, label=""];
14->27 [style = dashed, label="0"];
18->4 [style = solid, label="contentStore"];
22->8 [style = solid, label="uri"];
1->8 [style = solid, label="entity"];
20->12 [style = bold, label=""];
20->4 [style = solid, label="map1"];
8->9 [style = bold, label=""];
22->1 [style = solid, label="uri"];
5->27 [style = bold, label=""];
27->9 [style = solid, label="uri"];
26->31 [style = solid, label="contentStore"];
2->30 [style = bold, label=""];
8->29 [style = bold, label=""];
7->0 [style = solid, label="body"];
16->18 [style = solid, label="body"];
12->2 [style = solid, label="map1"];
}
