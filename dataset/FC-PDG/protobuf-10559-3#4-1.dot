digraph {
0 [style = filled, label = "testWriteToInternalShouldExposeInternalBufferToOutputStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "OutputStream os = new OutputStream(){@Override public void write(byte(( b,int off,int len){Arrays.fill(b,off,off + len,(byte)0)}@Override public void write(int b){throw new UnsupportedOperationException()}}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testString.writeToInternal(os,0,testString.size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertWithMessage(\"%s.writeToInternal() must grant access to underlying buffer\",CLASSNAME).that(Arrays.equals(allZeros,backingBuffer.array())).isTrue()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testWriteToInternalShouldExposeInternalBufferToOutputStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "byte(( allZeros = new byte((((@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "stringUnderTest.writeToInternal(os,0,stringUnderTest.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "byte(( allZeros = new byte((((@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testWriteToInternalShouldExposeInternalBufferToOutputStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(classUnderTest + \".writeToInternal() must grant access to underlying array\",Arrays.equals(allZeros,stringUnderTest.toByteArray()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(CLASSNAME + \".writeToInternal() must grant access to underlying buffer\",Arrays.equals(allZeros,backingBuffer.array()))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->3 [style = solid, label="os"];
1->3 [style = bold, label=""];
3->8 [style = dashed, label="0"];
9->7 [style = solid, label="allZeros"];
5->1 [style = bold, label=""];
1->8 [style = bold, label=""];
1->8 [style = solid, label="os"];
3->2 [style = bold, label=""];
9->7 [style = bold, label=""];
10->1 [style = bold, label=""];
4->6 [style = dashed, label="0"];
2->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
2->6 [style = bold, label=""];
4->7 [style = dashed, label="0"];
2->4 [style = solid, label="allZeros"];
8->9 [style = bold, label=""];
}
