digraph {
2 [style = filled, label = "TestDisposableSubscriber<Integer> tc = new TestDisposableSubscriber<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertFalse(tc.isDisposed())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,tc.values.get(0).intValue())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,tc.start)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "normal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,tc.complete)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Flowable.just(1).subscribe(tc)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestDisposableSubscriber<Integer> tc = new TestDisposableSubscriber<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "normal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertTrue(tc.errors.isEmpty())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(tc.isDisposed())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,tc.start)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestCompletable tc = new TestCompletable()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(tc.values.isEmpty())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "normal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1,tc.complete)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(tc.errors.isEmpty())@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Completable.complete().subscribe(tc)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->8 [style = solid, label="tc"];
5->8 [style = bold, label=""];
4->17 [style = dashed, label="0"];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
15->14 [style = solid, label="tc"];
7->16 [style = dashed, label="0"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
5->14 [style = bold, label=""];
8->14 [style = dashed, label="0"];
10->7 [style = bold, label=""];
3->4 [style = bold, label=""];
14->1 [style = bold, label=""];
8->1 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
0->10 [style = bold, label=""];
11->0 [style = bold, label=""];
10->16 [style = bold, label=""];
15->0 [style = bold, label=""];
16->5 [style = bold, label=""];
11->8 [style = solid, label="tc"];
3->17 [style = bold, label=""];
2->11 [style = dashed, label="0"];
13->15 [style = bold, label=""];
}
