digraph {
8 [style = filled, label = "asyncThread.start()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StuckThreadDetectionValve valve = new StuckThreadDetectionValve()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDetection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(result.toString().startsWith(\"OK\"))@@@35@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(0,valve.getStuckThreadIds().length)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Thread.sleep(3000L)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{asyncThread.join()}@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "context.addValve(valve)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertTrue(result.toString().startsWith(\"OK\"))@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(1,valve.getStuckThreadIds().length)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testDetection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "valve.setThreshold(2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(0,valve.getStuckThreadIds().length)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StuckingServlet stuckingServlet = new StuckingServlet(5000L)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "{asyncThread.join()}@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Thread.sleep(500L)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(0,valve.getStuckThreadIds().length)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Thread asyncThread = new Thread(){@Override public void run(){try {getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",result,null)}catch (IOException e) }}@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StuckingServlet stuckingServlet = new StuckingServlet(6000L)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertFalse(stuckingServlet.wasInterrupted)@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "context.setBackgroundProcessorDelay(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(1,valve.getStuckThreadIds().length)@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Thread.sleep(500L)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "servlet.addMapping(\"/myservlet\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tomcat.start()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "StuckingServlet stuckingServlet = new StuckingServlet(6000L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Wrapper servlet = Tomcat.addServlet(context,\"myservlet\",stuckingServlet)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testDetection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Thread.sleep(3000L)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertFalse(stuckingServlet.wasInterrupted)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Thread.sleep(1000L)@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final ByteChunk result = new ByteChunk()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->31 [style = dashed, label="0"];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
25->23 [style = bold, label=""];
31->5 [style = bold, label=""];
4->13 [style = bold, label=""];
27->9 [style = bold, label=""];
14->20 [style = dashed, label="0"];
10->28 [style = dashed, label="0"];
10->17 [style = bold, label=""];
9->30 [style = bold, label=""];
2->4 [style = bold, label=""];
7->4 [style = solid, label="valve"];
0->15 [style = bold, label=""];
8->22 [style = bold, label=""];
20->5 [style = bold, label=""];
8->0 [style = bold, label=""];
5->19 [style = bold, label=""];
5->21 [style = bold, label=""];
21->9 [style = bold, label=""];
10->17 [style = solid, label="stuckingServlet"];
16->12 [style = solid, label="result"];
13->3 [style = bold, label=""];
19->9 [style = bold, label=""];
1->16 [style = bold, label=""];
7->2 [style = bold, label=""];
12->8 [style = bold, label=""];
18->5 [style = bold, label=""];
6->10 [style = bold, label=""];
14->31 [style = bold, label=""];
29->14 [style = bold, label=""];
28->17 [style = bold, label=""];
23->17 [style = bold, label=""];
14->18 [style = bold, label=""];
5->27 [style = bold, label=""];
23->17 [style = solid, label="stuckingServlet"];
26->28 [style = bold, label=""];
22->14 [style = bold, label=""];
16->12 [style = bold, label=""];
8->29 [style = bold, label=""];
9->24 [style = bold, label=""];
10->23 [style = dashed, label="0"];
11->7 [style = bold, label=""];
14->20 [style = bold, label=""];
17->11 [style = bold, label=""];
28->17 [style = solid, label="stuckingServlet"];
}
