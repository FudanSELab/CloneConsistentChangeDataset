digraph {
14 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(m1,m2)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ValueMarker m1 = new ValueMarker(25.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "MatrixSeries<String> m1 = new MatrixSeries<>(\"Test\",8,3)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "m1.update(7,2,22.0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MatrixSeries m1 = new MatrixSeries(\"Test\",8,3)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "MatrixSeries<String> m2 = TestUtils.serialised(m1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ValueMarker m2 = CloneUtils.clone(m1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(m1 != m2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MatrixSeries m2 = TestUtils.serialised(m1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "m1.update(0,0,11.0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(m1.equals(m2))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
3->6 [style = dashed, label="0"];
7->1 [style = bold, label=""];
7->1 [style = solid, label="m2"];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
12->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
13->11 [style = bold, label=""];
6->1 [style = solid, label="m1"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
11->10 [style = solid, label="m2"];
3->0 [style = solid, label="m1"];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
0->1 [style = bold, label=""];
13->10 [style = solid, label="m1"];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
0->7 [style = dashed, label="0"];
0->1 [style = solid, label="m2"];
11->9 [style = solid, label="m2"];
13->11 [style = solid, label="m1"];
3->1 [style = solid, label="m1"];
6->7 [style = solid, label="m1"];
}
