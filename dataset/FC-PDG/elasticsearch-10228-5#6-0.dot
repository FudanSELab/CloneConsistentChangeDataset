digraph {
14 [style = filled, label = "i < numDocs@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(2,client().prepareGet(index,Integer.toString(randomDoc)).get().getVersion())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int randomDoc = between(0,indexDocs.size() - 1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testMultipleSources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "sourceIndex++@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String indexName = \"test\" + sourceIndex@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "indexRandom(true,allDocs)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "sourceIndex < sourceIndices@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "BulkByScrollResponse response = updateByQuery().source(sourceIndexNames).refresh(true).setSlices(slices).get()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testMultipleSources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String(( sourceIndexNames = docs.keySet().toArray(new String(((()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int expectedSlices = expectedSliceStatuses(slices,docs.keySet())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(response,matcher().updated(allDocs.size()).slices(hasSize(expectedSlices)))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,List<IndexRequestBuilder>> docs = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(deleteByQuery().source(sourceIndexNames).filter(QueryBuilders.matchAllQuery()).refresh(true).setSlices(slices).get(),matcher().deleted(allDocs.size()).slices(hasSize(expectedSlices)))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<IndexRequestBuilder> allDocs = docs.values().stream().flatMap(null).collect(Collectors.toList())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "docs.put(indexName,new ArrayList<>())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertHitCount(client().prepareSearch(index).setSize(0).get(),0)@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "docs.get(indexName).add(client().prepareIndex(indexName,\"test\",Integer.toString(i)).setSource(\"foo\",\"a\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testMultipleSources['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int sourceIndex = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(2,client().prepareGet(index,\"test\",Integer.toString(randomDoc)).get().getVersion())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertHitCount(client().prepareSearch(entry.getKey()).setSize(0).get(),entry.getValue().size())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int sourceIndices = between(2,5)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<IndexRequestBuilder> indexDocs = entry.getValue()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int slices = randomSlices(1,10)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String index = entry.getKey()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int numDocs = between(5,15)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
14->2 [style = dotted, label="true"];
19->14 [style = dotted, label="true"];
16->0 [style = bold, label=""];
19->18 [style = bold, label=""];
15->10 [style = bold, label=""];
24->19 [style = bold, label=""];
4->25 [style = bold, label=""];
25->13 [style = bold, label=""];
24->16 [style = solid, label="sourceIndex"];
12->17 [style = bold, label=""];
22->21 [style = bold, label=""];
23->4 [style = bold, label=""];
24->19 [style = solid, label="sourceIndex"];
22->14 [style = solid, label="numDocs"];
15->10 [style = solid, label="response"];
26->8 [style = bold, label=""];
19->21 [style = dotted, label="true"];
1->13 [style = bold, label=""];
11->2 [style = bold, label=""];
21->2 [style = solid, label="i"];
19->16 [style = bold, label=""];
9->27 [style = bold, label=""];
17->7 [style = bold, label=""];
7->9 [style = bold, label=""];
7->27 [style = solid, label="expectedSlices"];
20->8 [style = bold, label=""];
8->5 [style = bold, label=""];
3->19 [style = bold, label=""];
10->13 [style = bold, label=""];
18->6 [style = bold, label=""];
24->3 [style = solid, label="sourceIndex"];
21->14 [style = solid, label="i"];
9->15 [style = bold, label=""];
19->3 [style = dotted, label="true"];
5->24 [style = bold, label=""];
0->22 [style = bold, label=""];
28->8 [style = bold, label=""];
2->14 [style = bold, label=""];
2->14 [style = solid, label="i"];
17->7 [style = solid, label="slices"];
19->0 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
13->23 [style = bold, label=""];
17->10 [style = solid, label="slices"];
16->0 [style = solid, label="indexName"];
19->22 [style = dotted, label="true"];
14->11 [style = dotted, label="true"];
18->6 [style = solid, label="allDocs"];
4->1 [style = bold, label=""];
15->27 [style = dashed, label="0"];
27->29 [style = bold, label=""];
7->10 [style = solid, label="expectedSlices"];
17->27 [style = solid, label="slices"];
1->25 [style = dashed, label="0"];
14->11 [style = bold, label=""];
3->16 [style = solid, label="sourceIndex"];
8->19 [style = solid, label="sourceIndices"];
3->19 [style = solid, label="sourceIndex"];
21->14 [style = bold, label=""];
6->12 [style = bold, label=""];
}
