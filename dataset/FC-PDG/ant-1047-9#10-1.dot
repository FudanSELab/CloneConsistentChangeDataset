digraph {
48 [style = filled, label = ".getName().equals(mockProcLauncher.cmd(i()@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "mockProcLauncher.cmd(i(.equals(\"--add-exports\")@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotNull(mockProcLauncher.cmd)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "cp.setPath(junit.getAbsolutePath())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Project project = new Project()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "task.createClasspath().add(cp)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 1@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final File workDir = new File(tmp,String.format(\"%s_testJMP%d\",getClass().getName(),System.currentTimeMillis() / 1000))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "resCp = mockProcLauncher.cmd(++i(@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testJunitOnCpArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "task.createModulepath().add(mp)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "project.init()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "task.setProject(project)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final File junit = LoaderUtils.getResourceSource(.getClassLoader(),\"junit/framework/Test.class\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "{delete(workDir)}@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "project.addReference(MagicNames.ANT_VM_LAUNCHER_REF_ID,mockProcLauncher)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "project.setBaseDir(workDir)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(\"Expected modulepath\",mp.toString(),resMp)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "\"--module-path\".equals(mockProcLauncher.cmd(i()@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Path cp = new Path(project)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "task.setFork(true)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(\"No exports\",resExports.isEmpty())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final MockCommandLauncher mockProcLauncher = new MockCommandLauncher()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "{delete(workDir)}@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "mp.setPath(modulesDir.getName())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "resExports.add(mockProcLauncher.cmd(++i()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "task.execute()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testJunitOnMpArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "mp.add(new Path(project,modulesDir.getName()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "String resCp = null@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "task.addTest(new JUnitTest(\"org.apache.tools.ant.taskdefs.optional.junit.TestTest\"))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String resMp = null@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "\"-classpath\".equals(mockProcLauncher.cmd(i()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final Path mp = new Path(project)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "resMp = mockProcLauncher.cmd(++i(@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "workDir.mkdirs()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mockProcLauncher.cmd(i(.equals(\"--add-exports\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final File tmp = new File(System.getProperty(\"java.io.tmpdir\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "project.getProperty(MagicNames.BUILD_SYSCLASSPATH) == null && System.getProperty(MagicNames.BUILD_SYSCLASSPATH) == null@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testJunitOnCpArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Set<String> resExports = new TreeSet<>()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final File modulesDir = new File(workDir,\"modules\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "mp.add(new Path(project,junit.getAbsolutePath()))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(\"Expected modulepath\",mp.toString(),resMp)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final File workDir = new File(tmp,String.format(\"%s_testJCP%d\",getClass().getName(),System.currentTimeMillis() / 1000))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(\"No exports\",resExports.isEmpty())@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertNull(\"No classpath\",resCp)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "project.getProperty(MagicNames.BUILD_SYSCLASSPATH) == null && System.getProperty(MagicNames.BUILD_SYSCLASSPATH) == null && project.getProperty(\"tests.and.ant.share.classloader\") == null@@@48@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "JUnitTask task = new JUnitTask()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "modulesDir.mkdirs()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < mockProcLauncher.cmd.length@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "task.setDir(workDir)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "\"--module-path\".equals(mockProcLauncher.cmd(i()@@@35@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "task.createModulepath().add(mp)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = ".getName().equals(mockProcLauncher.cmd(i()@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30->13 [style = bold, label=""];
15->51 [style = dashed, label="0"];
8->53 [style = solid, label="project"];
13->23 [style = solid, label="i"];
44->7 [style = bold, label=""];
19->11 [style = bold, label=""];
31->24 [style = solid, label="resMp"];
21->18 [style = bold, label=""];
36->2 [style = solid, label="cp"];
35->23 [style = bold, label=""];
14->47 [style = dotted, label="true"];
18->22 [style = bold, label=""];
27->9 [style = solid, label="i"];
23->13 [style = bold, label=""];
43->24 [style = bold, label=""];
8->36 [style = solid, label="project"];
32->43 [style = dashed, label="0"];
9->5 [style = bold, label=""];
16->42 [style = bold, label=""];
34->32 [style = bold, label=""];
31->46 [style = bold, label=""];
23->48 [style = solid, label="i"];
14->48 [style = bold, label=""];
4->16 [style = bold, label=""];
23->13 [style = solid, label="i"];
32->15 [style = dotted, label="true"];
31->14 [style = bold, label=""];
35->30 [style = solid, label="i"];
13->32 [style = bold, label=""];
23->30 [style = bold, label=""];
19->54 [style = dashed, label="0"];
35->31 [style = solid, label="i"];
40->0 [style = bold, label=""];
9->31 [style = dotted, label="true"];
23->9 [style = dotted, label="false"];
19->37 [style = solid, label="workDir"];
41->6 [style = bold, label=""];
6->49 [style = solid, label="resMp"];
23->30 [style = solid, label="i"];
42->40 [style = bold, label=""];
13->12 [style = solid, label="i"];
13->23 [style = dotted, label="true"];
35->23 [style = solid, label="i"];
27->23 [style = solid, label="i"];
46->49 [style = solid, label="resMp"];
8->55 [style = solid, label="project"];
25->26 [style = bold, label=""];
22->3 [style = solid, label="mockProcLauncher"];
15->51 [style = dotted, label="true"];
48->32 [style = bold, label=""];
38->25 [style = bold, label=""];
31->46 [style = dotted, label="true"];
11->17 [style = bold, label=""];
23->31 [style = solid, label="i"];
41->51 [style = solid, label="resCp"];
52->7 [style = bold, label=""];
35->34 [style = bold, label=""];
33->8 [style = bold, label=""];
30->45 [style = dotted, label="true"];
54->11 [style = bold, label=""];
5->12 [style = dotted, label="false"];
45->23 [style = bold, label=""];
41->24 [style = solid, label="resMp"];
9->31 [style = bold, label=""];
31->13 [style = bold, label=""];
7->19 [style = solid, label="tmp"];
7->54 [style = solid, label="tmp"];
54->50 [style = solid, label="workDir"];
30->15 [style = solid, label="resCp"];
7->54 [style = bold, label=""];
1->7 [style = bold, label=""];
36->39 [style = bold, label=""];
19->17 [style = solid, label="workDir"];
29->16 [style = solid, label="mp"];
35->13 [style = solid, label="i"];
27->35 [style = bold, label=""];
49->50 [style = bold, label=""];
13->35 [style = solid, label="i"];
0->41 [style = bold, label=""];
12->13 [style = bold, label=""];
27->35 [style = solid, label="i"];
6->27 [style = bold, label=""];
8->25 [style = solid, label="project"];
29->55 [style = bold, label=""];
48->23 [style = bold, label=""];
13->30 [style = dotted, label="true"];
30->31 [style = bold, label=""];
35->13 [style = dotted, label="true"];
19->18 [style = solid, label="workDir"];
54->18 [style = solid, label="workDir"];
39->2 [style = bold, label=""];
14->48 [style = dotted, label="false"];
14->47 [style = bold, label=""];
14->13 [style = bold, label=""];
34->43 [style = bold, label=""];
47->23 [style = bold, label=""];
35->23 [style = dotted, label="true"];
7->19 [style = bold, label=""];
46->23 [style = bold, label=""];
10->38 [style = bold, label=""];
15->49 [style = bold, label=""];
13->9 [style = solid, label="i"];
5->14 [style = dotted, label="true"];
35->48 [style = solid, label="i"];
31->14 [style = dotted, label="false"];
8->29 [style = solid, label="project"];
30->31 [style = dotted, label="false"];
43->15 [style = dotted, label="true"];
26->29 [style = bold, label=""];
29->4 [style = solid, label="mp"];
26->36 [style = bold, label=""];
23->30 [style = dotted, label="true"];
12->34 [style = bold, label=""];
17->33 [style = bold, label=""];
13->30 [style = bold, label=""];
51->49 [style = bold, label=""];
5->14 [style = bold, label=""];
19->10 [style = solid, label="workDir"];
20->10 [style = bold, label=""];
29->28 [style = bold, label=""];
22->3 [style = bold, label=""];
3->20 [style = bold, label=""];
54->17 [style = solid, label="workDir"];
5->12 [style = bold, label=""];
43->15 [style = bold, label=""];
45->51 [style = solid, label="resCp"];
15->24 [style = bold, label=""];
55->53 [style = bold, label=""];
54->10 [style = solid, label="workDir"];
24->37 [style = bold, label=""];
32->15 [style = bold, label=""];
9->5 [style = dotted, label="false"];
53->16 [style = bold, label=""];
8->21 [style = bold, label=""];
0->15 [style = solid, label="resCp"];
27->13 [style = solid, label="i"];
2->29 [style = bold, label=""];
35->13 [style = bold, label=""];
13->35 [style = bold, label=""];
23->9 [style = bold, label=""];
32->24 [style = bold, label=""];
30->45 [style = bold, label=""];
28->4 [style = bold, label=""];
27->12 [style = solid, label="i"];
15->51 [style = bold, label=""];
}
