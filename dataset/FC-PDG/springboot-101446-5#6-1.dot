digraph {
10 [style = filled, label = "bindToInstanceWhenNoNestedShouldLeaveNestedAsNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "BindResult<ExampleDefaultsBean> boundBean = this.binder.bind(\"foo\",Bindable.of().withExistingValue(bean))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "bindToInstanceWithNoPropertiesShouldReturnUnbound['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "this.sources.add(source)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "source.put(\"faf.value-bean.int-value\",\"123\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "BindResult<ExampleNestedBean> boundBean = this.binder.bind(\"foo\",Bindable.of().withExistingValue(bean))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "bindToInstanceWithNoPropertiesShouldReturnUnbound['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(boundBean.isBound()).isFalse()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MockConfigurationPropertySource source = new MockConfigurationPropertySource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ExampleNestedBean bean = new ExampleNestedBean()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(bean.getValueBean()).isNull()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(bean.getBar()).isEqualTo(456)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ExampleDefaultsBean bean = new ExampleDefaultsBean()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(bean.getFoo()).isEqualTo(123)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
9->4 [style = bold, label=""];
7->4 [style = solid, label="source"];
4->13 [style = bold, label=""];
7->4 [style = bold, label=""];
0->12 [style = dashed, label="0"];
3->13 [style = dashed, label="0"];
12->1 [style = bold, label=""];
10->7 [style = bold, label=""];
13->12 [style = solid, label="bean"];
3->0 [style = solid, label="bean"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
7->9 [style = bold, label=""];
13->12 [style = bold, label=""];
0->1 [style = bold, label=""];
2->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
6->7 [style = bold, label=""];
2->5 [style = bold, label=""];
}
