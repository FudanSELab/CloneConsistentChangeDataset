digraph {
60 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
133 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+null\")@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+a0 (ts: 0)\",\"1:A1+a1 (ts: 0)\")@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "table1 = builder.table(topic1,consumed)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
111 [style = filled, label = "joined.process(supplier)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "int i = 0@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c2230e@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(1(,null,7L))@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
97 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXXX2+YY2\",13L)@@@70@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,null))@@@63@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXX1+null\",7L)@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "int i = 0@@@60@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,null,0L)@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "table2 = builder.table(topic2,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertNull(driver.readOutput(output))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"X1+Y1\",10L)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i(,10L * i))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
114 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+null\")@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "final KTable<Integer,String> table1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XX2+YY2\",10L)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(2(,null,5L))@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@62@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "assertNull(driver.readOutput(output))@@@83@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXX3+YY3\",15L)@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "assertNull(driver.readOutput(output))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,null,42L)@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XX3+YY3\",15L)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "i < 3@@@77@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"null+YY3\",20L)@@@80@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertNull(driver.readOutput(output))@@@67@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "i < 2@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"a\" + expectedKeys(i())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"null+YY2\",10L)@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
125 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"c\" + expectedKeys(i())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
103 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXXX0+null\",13L)@@@68@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertOutputKeyValue(driver,2,\"null+YY2\")@@@82@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(1(,null,42L))@@@74@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
94 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i(,5L + i))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
87 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(0(,null,0L))@@@73@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
92 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(3(,null,20L))@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+null\")@@@65@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertNull(driver.readOutput(output))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@74@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "i++@@@78@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "i < 2@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXX\" + expectedKey,6L))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XX2+null\",7L)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
123 [style = filled, label = "processor.checkAndClearProcessResult(\"0:B0+a0 (ts: 0)\",\"1:B1+a1 (ts: 0)\",\"2:B2+null (ts: 0)\",\"3:B3+null (ts: 0)\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "final KTable<Integer,String> table2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(0(,null,5L))@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertOutputKeyValue(driver,1,null)@@@81@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXX1+YY1\",6L)@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,null))@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"X0+Y0\",5L)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
134 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i++@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < 2@@@61@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XX3+null\",7L)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "i++@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertNull(driver.readOutput(output))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+Y1\",10L)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
112 [style = filled, label = "i++@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
117 [style = filled, label = "processor.checkAndClearProcessResult(\"0:C0+a0 (ts: 0)\",\"0:C0+b0 (ts: 0)\",\"1:C1+a1 (ts: 0)\",\"1:C1+b1 (ts: 0)\",\"2:C2+b2 (ts: 0)\",\"3:C3+b3 (ts: 0)\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"X1+null\",6L)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
132 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 0)\",\"0:B0+c0 (ts: 0)\",\"0:C0+c0 (ts: 0)\",\"1:A1+c1 (ts: 0)\",\"1:B1+c1 (ts: 0)\",\"1:C1+c1 (ts: 0)\")@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+null\")@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
109 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXXX3+YY3\",15L)@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\",42L))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
121 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey,expectedKey * 5L))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+null\")@@@72@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "int i = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "int i = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXXX\" + expectedKey,13L))@@@66@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
91 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,null,\"AnotherVal\",73L))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
130 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "i < 2@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"C\" + expectedKey))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertNull(driver.readOutput(output))@@@64@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
119 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+null (ts: 0)\",\"1:A1+null (ts: 0)\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey,7L))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertNull(driver.readOutput(output))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"B\" + expectedKey))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXXX1+null\",13L)@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int i = 1@@@76@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertNull(driver.readOutput(output))@@@72@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
84 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"X0+null\",5L)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
86 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+Y0\",7L)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
115 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "joined = table1.outerJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+YY0\",7L)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
105 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXX0+YY0\",6L)@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "joined.toStream().to(output)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+null\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@73@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "assertNull(driver.readOutput(output))@@@81@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
104 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+YY1\",7L)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
128 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXX2+YY2\",10L)@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXX0+null\",6L)@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final KTable<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@69@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
127 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+b0 (ts: 0)\",\"0:B0+b0 (ts: 0)\",\"1:A1+b1 (ts: 0)\",\"1:B1+b1 (ts: 0)\",\"2:B2+b2 (ts: 0)\",\"3:B3+b3 (ts: 0)\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67->86 [style = bold, label=""];
51->67 [style = bold, label=""];
23->92 [style = bold, label=""];
31->37 [style = bold, label=""];
5->55 [style = bold, label=""];
39->127 [style = bold, label=""];
52->8 [style = bold, label=""];
27->38 [style = bold, label=""];
55->36 [style = bold, label=""];
36->94 [style = solid, label="expectedKeys"];
118->6 [style = bold, label=""];
39->94 [style = solid, label="i"];
124->9 [style = dotted, label="true"];
11->127 [style = dashed, label="0"];
2->51 [style = bold, label=""];
62->54 [style = bold, label=""];
6->39 [style = dotted, label="true"];
39->11 [style = dotted, label="true"];
65->80 [style = bold, label=""];
31->93 [style = dashed, label="0"];
81->78 [style = bold, label=""];
88->103 [style = bold, label=""];
32->100 [style = dashed, label="0"];
20->90 [style = solid, label="i"];
128->112 [style = solid, label="i"];
39->6 [style = bold, label=""];
34->110 [style = dashed, label="0"];
96->97 [style = bold, label=""];
59->6 [style = solid, label="i"];
38->31 [style = bold, label=""];
64->16 [style = bold, label=""];
25->83 [style = dashed, label="0"];
13->82 [style = dashed, label="0"];
62->90 [style = dotted, label="true"];
36->54 [style = solid, label="expectedKeys"];
54->62 [style = dashed, label="0"];
84->93 [style = bold, label=""];
16->79 [style = dashed, label="0"];
113->62 [style = bold, label=""];
6->94 [style = bold, label=""];
33->103 [style = dashed, label="0"];
44->23 [style = bold, label=""];
37->53 [style = bold, label=""];
64->79 [style = bold, label=""];
15->17 [style = bold, label=""];
18->49 [style = bold, label=""];
26->12 [style = bold, label=""];
87->74 [style = bold, label=""];
60->71 [style = dashed, label="0"];
9->69 [style = dashed, label="0"];
117->120 [style = bold, label=""];
62->112 [style = bold, label=""];
121->55 [style = bold, label=""];
46->26 [style = solid, label="i"];
101->55 [style = bold, label=""];
74->23 [style = bold, label=""];
6->11 [style = bold, label=""];
11->127 [style = solid, label="i"];
69->72 [style = bold, label=""];
112->113 [style = solid, label="i"];
125->9 [style = bold, label=""];
15->133 [style = dashed, label="0"];
29->44 [style = bold, label=""];
20->62 [style = bold, label=""];
91->95 [style = bold, label=""];
46->0 [style = solid, label="i"];
36->127 [style = solid, label="expectedKeys"];
62->20 [style = dotted, label="true"];
124->125 [style = bold, label=""];
20->54 [style = solid, label="i"];
62->18 [style = bold, label=""];
59->11 [style = solid, label="i"];
6->11 [style = dotted, label="true"];
46->48 [style = solid, label="i"];
59->6 [style = bold, label=""];
18->91 [style = dashed, label="0"];
127->11 [style = bold, label=""];
126->134 [style = bold, label=""];
29->97 [style = dashed, label="0"];
48->125 [style = dashed, label="0"];
50->86 [style = dashed, label="0"];
17->35 [style = bold, label=""];
126->134 [style = solid, label="stream2"];
78->89 [style = bold, label=""];
36->125 [style = solid, label="expectedKeys"];
53->62 [style = solid, label="i"];
9->124 [style = bold, label=""];
6->94 [style = dotted, label="true"];
113->54 [style = bold, label=""];
106->75 [style = bold, label=""];
129->131 [style = bold, label=""];
54->90 [style = dashed, label="0"];
36->23 [style = solid, label="expectedKeys"];
9->122 [style = dashed, label="0"];
36->48 [style = solid, label="expectedKeys"];
89->85 [style = bold, label=""];
18->123 [style = bold, label=""];
22->50 [style = bold, label=""];
112->62 [style = solid, label="i"];
36->80 [style = solid, label="expectedKeys"];
33->41 [style = bold, label=""];
66->15 [style = bold, label=""];
36->11 [style = solid, label="expectedKeys"];
42->77 [style = dashed, label="0"];
122->129 [style = bold, label=""];
28->105 [style = dashed, label="0"];
6->39 [style = solid, label="i"];
128->113 [style = bold, label=""];
45->40 [style = solid, label="i"];
22->18 [style = dashed, label="0"];
86->71 [style = bold, label=""];
23->14 [style = bold, label=""];
128->62 [style = solid, label="i"];
111->52 [style = bold, label=""];
7->24 [style = bold, label=""];
47->25 [style = bold, label=""];
100->64 [style = bold, label=""];
22->67 [style = dashed, label="0"];
93->37 [style = bold, label=""];
85->88 [style = bold, label=""];
36->110 [style = bold, label=""];
13->61 [style = bold, label=""];
21->40 [style = dotted, label="true"];
102->84 [style = bold, label=""];
14->21 [style = solid, label="i"];
14->45 [style = solid, label="i"];
45->21 [style = bold, label=""];
43->69 [style = bold, label=""];
97->109 [style = bold, label=""];
57->65 [style = bold, label=""];
79->105 [style = bold, label=""];
36->40 [style = solid, label="expectedKeys"];
4->99 [style = dashed, label="0"];
36->81 [style = solid, label="expectedKeys"];
103->96 [style = bold, label=""];
57->68 [style = dashed, label="0"];
35->1 [style = solid, label="table2"];
26->48 [style = bold, label=""];
6->39 [style = bold, label=""];
65->46 [style = bold, label=""];
62->91 [style = bold, label=""];
32->64 [style = bold, label=""];
14->21 [style = bold, label=""];
133->130 [style = bold, label=""];
41->96 [style = dashed, label="0"];
114->126 [style = bold, label=""];
62->90 [style = bold, label=""];
21->4 [style = bold, label=""];
71->98 [style = bold, label=""];
59->39 [style = solid, label="i"];
27->102 [style = dashed, label="0"];
80->81 [style = bold, label=""];
110->116 [style = bold, label=""];
36->74 [style = solid, label="expectedKeys"];
120->125 [style = solid, label="i"];
40->92 [style = dashed, label="0"];
70->99 [style = bold, label=""];
73->51 [style = bold, label=""];
4->13 [style = bold, label=""];
109->107 [style = bold, label=""];
124->125 [style = dotted, label="true"];
68->65 [style = bold, label=""];
36->87 [style = solid, label="expectedKeys"];
120->124 [style = solid, label="i"];
113->112 [style = dotted, label="true"];
116->133 [style = bold, label=""];
95->73 [style = bold, label=""];
108->43 [style = bold, label=""];
8->59 [style = bold, label=""];
9->125 [style = solid, label="i"];
39->127 [style = dotted, label="true"];
1->7 [style = bold, label=""];
43->9 [style = bold, label=""];
77->68 [style = bold, label=""];
128->113 [style = solid, label="i"];
53->62 [style = bold, label=""];
38->84 [style = dashed, label="0"];
6->102 [style = bold, label=""];
83->100 [style = bold, label=""];
6->27 [style = bold, label=""];
19->47 [style = bold, label=""];
35->1 [style = bold, label=""];
50->60 [style = bold, label=""];
39->11 [style = solid, label="i"];
30->3 [style = bold, label=""];
14->40 [style = solid, label="i"];
42->57 [style = bold, label=""];
12->56 [style = bold, label=""];
98->108 [style = bold, label=""];
20->62 [style = solid, label="i"];
59->94 [style = solid, label="i"];
120->9 [style = solid, label="i"];
134->111 [style = bold, label=""];
11->94 [style = dashed, label="0"];
90->20 [style = bold, label=""];
6->127 [style = solid, label="i"];
35->114 [style = dashed, label="0"];
9->19 [style = bold, label=""];
49->2 [style = bold, label=""];
36->62 [style = solid, label="expectedKeys"];
130->111 [style = solid, label="supplier"];
56->63 [style = bold, label=""];
130->114 [style = bold, label=""];
19->72 [style = dashed, label="0"];
53->54 [style = solid, label="i"];
105->76 [style = bold, label=""];
39->119 [style = bold, label=""];
21->45 [style = dotted, label="true"];
113->62 [style = dotted, label="true"];
3->108 [style = dashed, label="0"];
36->34 [style = bold, label=""];
47->104 [style = dashed, label="0"];
45->21 [style = solid, label="i"];
9->124 [style = solid, label="i"];
8->115 [style = bold, label=""];
34->66 [style = bold, label=""];
0->26 [style = bold, label=""];
28->10 [style = bold, label=""];
30->98 [style = dashed, label="0"];
112->113 [style = bold, label=""];
94->39 [style = bold, label=""];
41->29 [style = bold, label=""];
26->48 [style = dotted, label="true"];
76->77 [style = bold, label=""];
124->132 [style = bold, label=""];
25->32 [style = bold, label=""];
53->20 [style = solid, label="i"];
36->90 [style = solid, label="expectedKeys"];
44->109 [style = dashed, label="0"];
54->20 [style = bold, label=""];
2->73 [style = dashed, label="0"];
0->26 [style = solid, label="i"];
10->76 [style = dashed, label="0"];
99->82 [style = bold, label=""];
123->122 [style = bold, label=""];
107->87 [style = bold, label=""];
48->0 [style = bold, label=""];
58->88 [style = dashed, label="0"];
66->116 [style = dashed, label="0"];
119->128 [style = bold, label=""];
63->58 [style = bold, label=""];
0->48 [style = solid, label="i"];
58->33 [style = bold, label=""];
46->26 [style = bold, label=""];
54->18 [style = bold, label=""];
39->6 [style = solid, label="i"];
16->28 [style = bold, label=""];
10->42 [style = bold, label=""];
92->70 [style = bold, label=""];
6->11 [style = solid, label="i"];
51->22 [style = bold, label=""];
53->90 [style = solid, label="i"];
16->131 [style = dashed, label="0"];
72->104 [style = bold, label=""];
11->39 [style = solid, label="i"];
62->54 [style = dotted, label="true"];
60->30 [style = bold, label=""];
21->40 [style = bold, label=""];
11->39 [style = bold, label=""];
131->117 [style = bold, label=""];
24->52 [style = bold, label=""];
120->124 [style = bold, label=""];
49->95 [style = dashed, label="0"];
3->43 [style = bold, label=""];
40->45 [style = bold, label=""];
82->106 [style = bold, label=""];
115->118 [style = bold, label=""];
36->92 [style = solid, label="expectedKeys"];
26->0 [style = dotted, label="true"];
7->134 [style = dashed, label="0"];
104->83 [style = bold, label=""];
}
