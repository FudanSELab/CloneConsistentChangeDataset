digraph {
20 [style = filled, label = "f = doc.getField(\"name.indexed\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(f,notNullValue())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed3\"),nullValue())@@@46@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "IllegalArgumentException e@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(f,notNullValue())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multifield/merge/test-mapping2.json\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multifield/merge/test-mapping1.json\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IndexableField f = doc.getField(\"name\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "mapperService.merge(\"person\",new CompressedXContent(mapping),MapperService.MergeReason.MAPPING_UPDATE)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(mapperService.fieldType(\"name.indexed\"),notNullValue())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(mapperService.fieldType(\"name.indexed\"),notNullValue())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mapperService.merge(\"person\",new CompressedXContent(mapping),MapperService.MergeReason.MAPPING_UPDATE)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(e.getMessage(),containsString(\"Cannot update parameter (index( from (true( to (false(\"))@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(e.getMessage(),containsString(\"Cannot update parameter (store( from (true( to (false(\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(f,notNullValue())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "IndexableField f = doc.getField(\"name\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "f = doc.getField(\"name\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testUpgradeFromMultiFieldTypeToMultiFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "MapperService mapperService = createMapperService(mapping)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "mapperService.merge(\"person\",new CompressedXContent(mapping),MapperService.MergeReason.MAPPING_UPDATE)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multifield/merge/test-mapping4.json\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(mapperService.fieldType(\"name.indexed\"),notNullValue())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed3\"),nullValue())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed2\"),notNullValue())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Document doc = mapperService.documentMapper().parse(new SourceToParse(\"test\",\"1\",json,XContentType.JSON)).rootDoc()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testMergeMultiField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "f = doc.getField(\"name.indexed\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testUpgradeFromMultiFieldTypeToMultiFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed3\"),notNullValue())@@@39@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(mapperService.fieldType(\"name.indexed\"),notNullValue())@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "assertThat(f,notNullValue())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed3\"),nullValue())@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "fail()@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "mapperService.merge(\"person\",new CompressedXContent(mapping),MapperService.MergeReason.MAPPING_UPDATE)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "doc = mapperService.documentMapper().parse(new SourceToParse(\"test\",\"1\",json,XContentType.JSON)).rootDoc()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multifield/merge/test-mapping3.json\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(f,nullValue())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "mapperService.merge(\"person\",new CompressedXContent(mapping),MapperService.MergeReason.MAPPING_UPDATE)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "BytesReference json = BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"name\",\"some name\").endObject())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(mapperService.fieldType(\"name.indexed\"),nullValue())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(mapperService.fieldType(\"name\").isSearchable())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed2\"),nullValue())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(f,notNullValue())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed2\"),notNullValue())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "doc = mapperService.documentMapper().parse(new SourceToParse(\"test\",\"1\",json,XContentType.JSON)).rootDoc()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertThat(e.getMessage(),containsString(\"Cannot update parameter (index( from (true( to (false(\"))@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed\"),notNullValue())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed\"),notNullValue())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "MapperService mapperService = createIndex(\"test\").mapperService()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(mapperService.fieldType(\"name.not_indexed\"),notNullValue())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->37 [style = bold, label=""];
32->23 [style = bold, label=""];
0->46 [style = bold, label=""];
15->25 [style = bold, label=""];
1->24 [style = solid, label="f"];
20->16 [style = solid, label="mapping"];
55->51 [style = bold, label=""];
5->45 [style = bold, label=""];
21->52 [style = bold, label=""];
38->42 [style = bold, label=""];
45->48 [style = bold, label=""];
20->16 [style = bold, label=""];
22->0 [style = bold, label=""];
23->13 [style = bold, label=""];
49->13 [style = bold, label=""];
56->8 [style = bold, label=""];
9->47 [style = bold, label=""];
38->26 [style = bold, label=""];
47->0 [style = bold, label=""];
9->29 [style = bold, label=""];
48->1 [style = bold, label=""];
27->2 [style = bold, label=""];
27->5 [style = dashed, label="0"];
21->44 [style = bold, label=""];
25->28 [style = bold, label=""];
28->36 [style = bold, label=""];
16->56 [style = bold, label=""];
22->0 [style = dotted, label="true"];
22->7 [style = dotted, label="true"];
12->11 [style = bold, label=""];
9->29 [style = solid, label="mapping"];
33->41 [style = bold, label=""];
7->0 [style = bold, label=""];
14->23 [style = solid, label="mapping"];
3->33 [style = bold, label=""];
44->17 [style = bold, label=""];
53->15 [style = solid, label="mapping"];
22->7 [style = bold, label=""];
50->49 [style = bold, label=""];
29->26 [style = bold, label=""];
24->20 [style = bold, label=""];
41->33 [style = dashed, label="0"];
21->44 [style = solid, label="f"];
40->9 [style = solid, label="mapping"];
13->5 [style = bold, label=""];
29->38 [style = bold, label=""];
42->22 [style = bold, label=""];
37->56 [style = dashed, label="0"];
38->42 [style = dotted, label="true"];
37->8 [style = solid, label="mapping"];
6->17 [style = bold, label=""];
9->55 [style = dashed, label="0"];
36->40 [style = bold, label=""];
35->15 [style = bold, label=""];
2->1 [style = bold, label=""];
56->8 [style = solid, label="mapping"];
38->22 [style = dotted, label="true"];
40->9 [style = bold, label=""];
45->48 [style = solid, label="f"];
31->34 [style = bold, label=""];
6->52 [style = dashed, label="0"];
51->29 [style = bold, label=""];
39->21 [style = bold, label=""];
55->51 [style = solid, label="mapping"];
30->3 [style = bold, label=""];
43->14 [style = bold, label=""];
12->11 [style = solid, label="f"];
32->50 [style = dashed, label="0"];
34->39 [style = bold, label=""];
14->50 [style = bold, label=""];
4->12 [style = bold, label=""];
14->50 [style = solid, label="mapping"];
10->9 [style = bold, label=""];
37->8 [style = bold, label=""];
14->32 [style = bold, label=""];
17->4 [style = bold, label=""];
54->14 [style = bold, label=""];
40->10 [style = bold, label=""];
0->26 [style = bold, label=""];
21->6 [style = bold, label=""];
17->4 [style = solid, label="f"];
19->31 [style = bold, label=""];
8->19 [style = bold, label=""];
20->16 [style = solid, label="f"];
12->11 [style = solid, label="mapping"];
10->55 [style = bold, label=""];
52->17 [style = bold, label=""];
11->35 [style = bold, label=""];
26->30 [style = bold, label=""];
35->15 [style = solid, label="mapping"];
11->53 [style = bold, label=""];
46->26 [style = bold, label=""];
1->24 [style = bold, label=""];
53->15 [style = bold, label=""];
5->27 [style = bold, label=""];
18->14 [style = bold, label=""];
6->39 [style = dashed, label="0"];
35->53 [style = dashed, label="0"];
}
