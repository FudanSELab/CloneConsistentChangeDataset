digraph {
14 [style = filled, label = "!getFailOnErr()@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkOptions(commandLine)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "commandLine.setExecutable(getClearToolCommand())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "throw new BuildException(\"Required attribute TypeValue not specified\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int result = run(commandLine)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "commandLine.createArgument().setValue(COMMAND_MKLABEL)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Commandline commandLine = new Commandline()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "getTypeValue() == null@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = run(commandLine)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new BuildException(\"Failed executing: \" + commandLine,getLocation())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "getTypeName() == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "setViewPath(aProj.getBaseDir().getPath())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Project aProj = getProject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int result = 0@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String msg = \"Failed executing: \" + commandLine.toString()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getViewPath() == null@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Execute.isFailure(result) && getFailOnErr()@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "getProject().log(\"Ignoring any errors that occur for: \" + getViewPathBasename(),Project.MSG_VERBOSE)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "commandLine.createArgument().setValue(COMMAND_MKATTR)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new BuildException(\"Required attribute TypeName not specified\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new BuildException(msg,getLocation())@@@21@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17->20 [style = dotted, label="true"];
16->3 [style = bold, label=""];
8->16 [style = bold, label=""];
15->19 [style = solid, label="commandLine"];
7->2 [style = dotted, label="true"];
15->10 [style = bold, label=""];
22->15 [style = bold, label=""];
23->5 [style = bold, label=""];
3->1 [style = bold, label=""];
17->18 [style = dotted, label="true"];
0->17 [style = solid, label="result"];
0->17 [style = bold, label=""];
0->19 [style = dashed, label="0"];
13->20 [style = dashed, label="0"];
21->15 [style = bold, label=""];
2->3 [style = bold, label=""];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
8->16 [style = dotted, label="true"];
14->19 [style = bold, label=""];
15->20 [style = solid, label="commandLine"];
11->23 [style = dashed, label="0"];
6->0 [style = bold, label=""];
6->19 [style = bold, label=""];
19->17 [style = bold, label=""];
3->12 [style = bold, label=""];
5->14 [style = bold, label=""];
7->8 [style = bold, label=""];
10->7 [style = bold, label=""];
4->7 [style = bold, label=""];
7->3 [style = bold, label=""];
15->0 [style = solid, label="commandLine"];
11->5 [style = bold, label=""];
14->0 [style = bold, label=""];
7->2 [style = bold, label=""];
9->15 [style = bold, label=""];
15->5 [style = solid, label="commandLine"];
1->12 [style = bold, label=""];
10->4 [style = bold, label=""];
17->13 [style = bold, label=""];
12->23 [style = bold, label=""];
19->17 [style = solid, label="result"];
17->13 [style = dotted, label="true"];
3->1 [style = dotted, label="true"];
14->6 [style = bold, label=""];
13->18 [style = solid, label="msg"];
13->18 [style = bold, label=""];
2->8 [style = bold, label=""];
17->20 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
