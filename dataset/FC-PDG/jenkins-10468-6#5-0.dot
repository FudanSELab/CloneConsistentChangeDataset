digraph {
2 [style = filled, label = "FreeStyleProject p = j.createFreeStyleProject(\"project\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testOnLoad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertNotNull(\"Project should have a build.\",p.getLastBuild())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testOnCreateFromScratch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createAction = true@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(\"Project should have Transient Action TransientAction.\",p.getAction())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(\"Project should have Transient Action TransientAction.\",p.getAction() != null)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "createAction = false@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertNotNull(\"Project should have transient action TransientAction.\",p.getAction())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "j.buildAndAssertSuccess(p)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "p.onCreatedFromScratch()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "createAction = false@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(\"Project should have a build.\",p.getLastBuild() != null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(\"Project should have a scm.\",p.getScm())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(\"Project should have a scm.\",p.getScm() != null)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(\"Project should have last build.\",p.getLastBuild())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "p.onLoad(j.jenkins,\"project\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "p.removeRun(p.getLastBuild())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testOnLoad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
8->16 [style = dashed, label="0"];
9->10 [style = dashed, label="0"];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
8->12 [style = dashed, label="0"];
4->2 [style = bold, label=""];
18->2 [style = bold, label=""];
10->6 [style = bold, label=""];
11->2 [style = bold, label=""];
8->7 [style = bold, label=""];
1->17 [style = bold, label=""];
9->6 [style = bold, label=""];
7->9 [style = bold, label=""];
12->13 [style = bold, label=""];
2->0 [style = bold, label=""];
5->12 [style = bold, label=""];
7->13 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
2->0 [style = solid, label="p"];
17->16 [style = bold, label=""];
}
