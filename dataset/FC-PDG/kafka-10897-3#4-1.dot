digraph {
54 [style = filled, label = "assertNull(store.putIfAbsent(2,\"two\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "store.put(0,\"zero\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "store.put(2,\"two\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "store.put(4,\"four\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(0))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "iter.hasNext()@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KeyValue<Integer,String> entry = iter.next()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(null,driver.flushedEntryStored(5))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertNull(store.putIfAbsent(4,\"four\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(\"two\",entry.value)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertEquals(5,driver.sizeOf(store))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNull(store.putIfAbsent(1,\"one\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "store.put(1,\"one\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "KeyValueStore<Integer,String> store = createKeyValueStore(driver.context(),,,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "fail(\"Unexpected entry: \" + entry)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"two\",entry.value)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(2))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "entry.key.equals(2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "entry.key.equals(4)@@@42@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "{store.close()}@@@27@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"four\",store.get(4))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"four\",entry.value)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testPutIfAbsent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"four\",driver.flushedEntryStored(4))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "KeyValueStoreTestDriver<Integer,String> driver = KeyValueStoreTestDriver.create(,)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testPutGetRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertNull(store.get(3))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"one\",driver.flushedEntryStored(1))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "KeyValue<Integer,String> entry = iter.next()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"two\",driver.flushedEntryStored(2))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(\"four\",store.putIfAbsent(4,\"unexpected value\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "store.delete(5)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fail(\"Unexpected entry: \" + entry)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "entry.key.equals(4)@@@34@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"zero\",driver.flushedEntryStored(0))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(1))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(4))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "store.put(5,\"five\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(\"one\",store.get(1))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "iter.hasNext()@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "entry.key.equals(4)@@@31@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "assertNull(store.putIfAbsent(0,\"zero\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(4,driver.sizeOf(store))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "entry.key.equals(2)@@@38@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "entry.key.equals(2)@@@41@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"two\",store.get(2))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"zero\",store.get(0))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "KeyValueStore<Integer,String> store = createKeyValueStore(driver.context(),,,false)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "entry.key.equals(4)@@@39@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(\"four\",entry.value)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"two\",entry.value)@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(true,driver.flushedEntryRemoved(5))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "store.flush()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testPutGetRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"five\",store.get(5))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->26 [style = bold, label=""];
42->45 [style = bold, label=""];
25->48 [style = dashed, label="0"];
29->0 [style = bold, label=""];
10->35 [style = bold, label=""];
49->51 [style = bold, label=""];
37->12 [style = dotted, label="false"];
15->21 [style = dotted, label="true"];
30->6 [style = bold, label=""];
12->9 [style = bold, label=""];
45->7 [style = dotted, label="true"];
45->7 [style = bold, label=""];
9->6 [style = bold, label=""];
21->2 [style = bold, label=""];
3->34 [style = bold, label=""];
37->43 [style = bold, label=""];
12->38 [style = bold, label=""];
18->22 [style = bold, label=""];
12->9 [style = dotted, label="false"];
16->47 [style = dashed, label="0"];
39->23 [style = bold, label=""];
51->47 [style = bold, label=""];
26->15 [style = bold, label=""];
25->19 [style = bold, label=""];
42->33 [style = dotted, label="true"];
28->3 [style = bold, label=""];
23->50 [style = dashed, label="0"];
8->27 [style = bold, label=""];
14->11 [style = bold, label=""];
39->52 [style = dashed, label="0"];
54->52 [style = bold, label=""];
35->31 [style = bold, label=""];
23->25 [style = bold, label=""];
46->38 [style = bold, label=""];
15->13 [style = bold, label=""];
33->15 [style = bold, label=""];
13->26 [style = solid, label="entry"];
6->37 [style = dotted, label="true"];
37->46 [style = dotted, label="false"];
17->37 [style = bold, label=""];
38->6 [style = bold, label=""];
15->13 [style = dotted, label="true"];
15->42 [style = dotted, label="true"];
21->33 [style = dotted, label="true"];
53->35 [style = bold, label=""];
2->26 [style = dotted, label="false"];
20->41 [style = bold, label=""];
37->46 [style = bold, label=""];
5->6 [style = bold, label=""];
17->9 [style = solid, label="entry"];
47->54 [style = bold, label=""];
44->32 [style = bold, label=""];
42->45 [style = dotted, label="false"];
0->20 [style = bold, label=""];
27->29 [style = bold, label=""];
31->49 [style = dashed, label="0"];
6->17 [style = bold, label=""];
16->36 [style = bold, label=""];
4->24 [style = bold, label=""];
46->9 [style = bold, label=""];
36->54 [style = dashed, label="0"];
13->42 [style = bold, label=""];
3->1 [style = bold, label=""];
46->9 [style = dotted, label="false"];
31->32 [style = bold, label=""];
37->30 [style = bold, label=""];
11->4 [style = bold, label=""];
35->49 [style = bold, label=""];
22->28 [style = bold, label=""];
32->16 [style = bold, label=""];
50->48 [style = bold, label=""];
36->39 [style = bold, label=""];
6->15 [style = bold, label=""];
37->12 [style = bold, label=""];
37->43 [style = dotted, label="true"];
21->2 [style = dotted, label="false"];
32->51 [style = dashed, label="0"];
7->15 [style = bold, label=""];
52->50 [style = bold, label=""];
19->40 [style = bold, label=""];
46->38 [style = dotted, label="true"];
41->18 [style = bold, label=""];
4->5 [style = bold, label=""];
45->26 [style = dotted, label="false"];
34->1 [style = bold, label=""];
29->41 [style = bold, label=""];
21->33 [style = bold, label=""];
49->48 [style = solid, label="store"];
42->33 [style = bold, label=""];
12->38 [style = dotted, label="true"];
6->17 [style = dotted, label="true"];
43->6 [style = bold, label=""];
37->30 [style = dotted, label="true"];
31->25 [style = solid, label="store"];
2->7 [style = dotted, label="true"];
15->24 [style = bold, label=""];
48->19 [style = bold, label=""];
1->14 [style = bold, label=""];
45->26 [style = bold, label=""];
2->7 [style = bold, label=""];
13->21 [style = bold, label=""];
40->8 [style = bold, label=""];
}
