digraph {
2 [style = filled, label = "FreeStyleBuild b2 = r.buildAndAssertSuccess(p)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "dropLinksAfterGC2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(b3,b1a.getNextBuild())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(b2,b1.getNextBuild())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(null,b3.getNextBuild())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "b1.getRunMixIn().createReference().clear()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "FreeStyleBuild b3 = r.buildAndAssertSuccess(p)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(b2,b3.getPreviousBuild())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "dropLinksAfterGC['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(b1,b2.getPreviousBuild())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(null,b1.getPreviousBuild())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(b3,b2.getNextBuild())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "b2.delete()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "dropLinksAfterGC['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,BRHF.drop(b1))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "FreeStyleBuild b1a = b2.getPreviousBuild()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RunListener.all().clear()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,b1a.getNumber())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotSame(b1,b1a)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,BRHF.drop(b1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FreeStyleBuild b1 = r.buildAndAssertSuccess(p)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
7->17 [style = bold, label=""];
10->19 [style = bold, label=""];
20->0 [style = bold, label=""];
2->8 [style = solid, label="b2"];
11->5 [style = solid, label="b3"];
10->6 [style = bold, label=""];
5->16 [style = bold, label=""];
1->2 [style = solid, label="p"];
12->21 [style = solid, label="b1"];
12->2 [style = bold, label=""];
21->9 [style = bold, label=""];
19->13 [style = bold, label=""];
8->5 [style = bold, label=""];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
12->6 [style = solid, label="b1"];
12->3 [style = solid, label="b1"];
11->17 [style = solid, label="b3"];
0->1 [style = bold, label=""];
6->13 [style = bold, label=""];
15->0 [style = bold, label=""];
1->12 [style = bold, label=""];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
2->10 [style = solid, label="b2"];
13->9 [style = bold, label=""];
13->21 [style = bold, label=""];
1->12 [style = solid, label="p"];
9->3 [style = solid, label="b1a"];
2->11 [style = bold, label=""];
18->0 [style = bold, label=""];
12->4 [style = solid, label="b1"];
14->4 [style = bold, label=""];
1->11 [style = solid, label="p"];
}
