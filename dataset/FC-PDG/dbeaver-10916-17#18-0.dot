digraph {
10 [style = filled, label = "useUpsert(session)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "@Nullable DBDDataReceiver keysReceiver@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "updateData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "deleteData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "@NotNull DBCSession session@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "updateData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "@NotNull final DBSAttributeBase(( keyAttributes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "@NotNull final DBSAttributeBase(( keyAttributes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "@NotNull final DBCExecutionSource source@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return new ExecuteBatchImpl(keyAttributes,null,false){@NotNull @Override protected DBCStatement prepareStatement(@NotNull DBCSession session,DBDValueHandler(( handlers,Object(( attributeValues){String tableAlias = nullSQLDialect dialect = ((SQLDataSource)session.getDataSource()).getSQLDialect()if (dialect.supportsAliasInUpdate()) {tableAlias = DEFAULT_TABLE_ALIAS}StringBuilder query = new StringBuilder()query.append(\"DELETE FROM \").append(getFullyQualifiedName(DBPEvaluationContext.DML))if (tableAlias != null) {query.append(' ').append(tableAlias)}if (keyAttributes.length > 0) {query.append(\"WHERE \")boolean hasKey = falsefor (int i = 0 i < keyAttributes.length i++){if (hasKey) query.append(\" AND \")hasKey = trueappendAttributeCriteria(tableAlias,dialect,query,keyAttributes(i(,attributeValues(i()}}DBCStatement dbStat = session.prepareStatement(DBCStatementType.QUERY,query.toString(),false,false,false)dbStat.setStatementSource(source)return dbStat}@Override protected void bindStatement(@NotNull DBDValueHandler(( handlers,@NotNull DBCStatement statement,Object(( attributeValues){int paramIndex = 0for (int k = 0 k < handlers.length k++){DBSAttributeBase attribute = attributes(k(if (DBUtils.isNullValue(attributeValues(k()) {continue}handlers(k(.bindValueObject(statement.getSession(),statement,attribute,paramIndex++,attributeValues(k()}}}@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "@NotNull final DBSAttributeBase(( updateAttributes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "DBSAttributeBase(( attributes = ArrayUtils.concatArrays(updateAttributes,keyAttributes)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "@Nullable DBDDataReceiver keysReceiver@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "@NotNull final DBCExecutionSource source@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "@NotNull final DBCExecutionSource source@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "@NotNull final DBSAttributeBase(( keyAttributes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "@NotNull DBCSession session@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return new ExecuteBatchImpl(attributes,keysReceiver,false){@NotNull @Override protected DBCStatement prepareStatement(@NotNull DBCSession session,DBDValueHandler(( handlers,Object(( attributeValues){String tableAlias = nullSQLDialect dialect = ((SQLDataSource)session.getDataSource()).getSQLDialect()if (dialect.supportsAliasInUpdate()) {tableAlias = DEFAULT_TABLE_ALIAS}StringBuilder query = new StringBuilder()query.append(\"UPDATE \").append(getFullyQualifiedName(DBPEvaluationContext.DML))if (tableAlias != null) {query.append(' ').append(tableAlias)}query.append(\"SET \")boolean hasKey = falsefor (int i = 0 i < updateAttributes.length i++){DBSAttributeBase attribute = updateAttributes(i(if (hasKey) query.append(\",\")hasKey = trueif (tableAlias != null) {query.append(tableAlias).append(dialect.getStructSeparator())}query.append(getAttributeName(attribute)).append(\"=\")DBDValueHandler valueHandler = handlers(i(if (valueHandler instanceof DBDValueBinder) {query.append(((DBDValueBinder)valueHandler).makeQueryBind(attribute,attributeValues(i())}{query.append(\"?\")}}if (keyAttributes.length > 0) {query.append(\"WHERE \")hasKey = falsefor (int i = 0 i < keyAttributes.length i++){DBSAttributeBase attribute = keyAttributes(i(if (hasKey) query.append(\" AND \")hasKey = trueappendAttributeCriteria(tableAlias,dialect,query,attribute,attributeValues(updateAttributes.length + i()}}DBCStatement dbStat = session.prepareStatement(DBCStatementType.QUERY,query.toString(),false,false,keysReceiver != null)dbStat.setStatementSource(source)return dbStat}@Override protected void bindStatement(@NotNull DBDValueHandler(( handlers,@NotNull DBCStatement statement,Object(( attributeValues){int paramIndex = 0for (int k = 0 k < handlers.length k++){DBSAttributeBase attribute = attributes(k(if (k >= updateAttributes.length && DBUtils.isNullValue(attributeValues(k()) {continue}handlers(k(.bindValueObject(statement.getSession(),statement,attribute,paramIndex++,attributeValues(k()}}}@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "readRequiredMeta(session.getProgressMonitor())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return insertData(session,ArrayUtils.concatArrays(updateAttributes,keyAttributes),keysReceiver,source)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "readRequiredMeta(session.getProgressMonitor())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "@NotNull DBCSession session@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4->5 [style = solid, label="keysReceiver"];
15->1 [style = solid, label="updateAttributes"];
9->8 [style = dotted, label="true"];
14->10 [style = solid, label="session"];
3->2 [style = solid, label="source"];
15->5 [style = solid, label="updateAttributes"];
8->5 [style = solid, label="keyAttributes"];
3->5 [style = solid, label="source"];
21->18 [style = dotted, label="true"];
9->7 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
7->10 [style = solid, label="session"];
11->5 [style = solid, label="keysReceiver"];
13->8 [style = dotted, label="true"];
6->5 [style = solid, label="keyAttributes"];
21->20 [style = dotted, label="true"];
0->1 [style = bold, label=""];
12->5 [style = solid, label="source"];
4->2 [style = solid, label="keysReceiver"];
9->6 [style = dotted, label="true"];
15->2 [style = solid, label="updateAttributes"];
6->2 [style = solid, label="keyAttributes"];
8->20 [style = dashed, label="0"];
8->1 [style = solid, label="updateAttributes"];
7->5 [style = solid, label="session"];
6->1 [style = solid, label="keyAttributes"];
5->0 [style = bold, label=""];
21->19 [style = bold, label=""];
14->5 [style = solid, label="session"];
11->2 [style = solid, label="keysReceiver"];
8->1 [style = solid, label="keyAttributes"];
8->5 [style = solid, label="updateAttributes"];
8->2 [style = solid, label="keyAttributes"];
19->17 [style = bold, label=""];
9->4 [style = dotted, label="true"];
12->2 [style = solid, label="source"];
16->17 [style = solid, label="source"];
18->17 [style = solid, label="keyAttributes"];
9->3 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
10->5 [style = dotted, label="true"];
21->16 [style = dotted, label="true"];
13->10 [style = bold, label=""];
13->12 [style = dotted, label="true"];
13->14 [style = dotted, label="true"];
1->2 [style = solid, label="attributes"];
1->2 [style = bold, label=""];
10->5 [style = bold, label=""];
10->0 [style = bold, label=""];
8->2 [style = solid, label="updateAttributes"];
9->10 [style = bold, label=""];
}
