digraph {
11 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Deadline deadline = Deadline.now().plus(TEST_TIMEOUT)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Thread.sleep(50)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "fail()@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "clusterClient.submitJob(jobGraph,.getClassLoader())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause() instanceof RuntimeException)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "clusterClient.submitJob(closableJobGraph.getJobGraph(),.getClassLoader())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Exception f@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CompletableFuture<JobStatus> jobStatusFuture = clusterClient.getJobStatus(closableJobGraph.getJobId())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "fail(\"Unexpected type of exception: \" + f.getMessage())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "unknownJobFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testValueState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "source.keyBy(new KeySelector<Tuple2<Integer,Long>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Long> value){return value.f0}}).asQueryableState(\"hakuna\",valueState)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "executeValueQuery(deadline,client,jobId,\"hakuna\",valueState,numElements)@@@23@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testValueState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "env.setStateBackend(stateBackend)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ClientUtils.submitJob(clusterClient,jobGraph)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "executeValueQuery(deadline,client,jobId,\"hakuna\",valueState,numElements)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final JobGraph jobGraph = autoCancellableJob.getJobGraph()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,1000L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause().getMessage().contains(\"FlinkJobNotFoundException: Could not find Flink job (\" + wrongJobId + \")\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownJobFuture = client.getKvState(wrongJobId,\"hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ExecutionException e@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "unknownQSName.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(JobStatus.RUNNING,jobStatusFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "env.setParallelism(maxParallelism)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "deadline.hasTimeLeft() && !jobStatusFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS).equals(JobStatus.RUNNING)@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "jobStatusFuture = clusterClient.getJobStatus(closableJobGraph.getJobId())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final JobID wrongJobId = new JobID()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DataStream<Tuple2<Integer,Long>> source = env.addSource(new TestAscendingValueSource(numElements))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final JobID jobId = autoCancellableJob.getJobId()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "clusterClient.setDetached(true)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final long numElements = 1024L@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "fail()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ValueStateDescriptor<Tuple2<Integer,Long>> valueState = new ValueStateDescriptor<>(\"any\",source.getType())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownQSName = client.getKvState(closableJobGraph.getJobId(),\"wrong-hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testWrongJobIdAndWrongQueryableStateName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17->10 [style = bold, label=""];
24->28 [style = bold, label=""];
18->31 [style = bold, label=""];
1->31 [style = solid, label="valueState"];
0->9 [style = bold, label=""];
1->13 [style = solid, label="valueState"];
32->23 [style = bold, label=""];
12->5 [style = bold, label=""];
10->16 [style = solid, label="deadline"];
7->10 [style = bold, label=""];
14->15 [style = solid, label="jobGraph"];
2->6 [style = bold, label=""];
28->35 [style = dotted, label="true"];
26->36 [style = bold, label=""];
11->4 [style = bold, label=""];
30->27 [style = bold, label=""];
1->16 [style = solid, label="valueState"];
25->18 [style = bold, label=""];
3->11 [style = bold, label=""];
12->32 [style = bold, label=""];
10->3 [style = bold, label=""];
5->16 [style = solid, label="jobId"];
5->14 [style = bold, label=""];
1->36 [style = solid, label="valueState"];
15->16 [style = bold, label=""];
35->24 [style = bold, label=""];
20->22 [style = bold, label=""];
14->6 [style = solid, label="jobGraph"];
2->15 [style = dashed, label="0"];
3->9 [style = solid, label="numElements"];
8->0 [style = bold, label=""];
36->30 [style = bold, label=""];
28->35 [style = bold, label=""];
28->24 [style = dotted, label="true"];
33->21 [style = dotted, label="true"];
21->36 [style = bold, label=""];
18->31 [style = solid, label="wrongJobId"];
19->26 [style = bold, label=""];
6->13 [style = bold, label=""];
22->34 [style = bold, label=""];
34->36 [style = bold, label=""];
1->12 [style = bold, label=""];
1->12 [style = solid, label="valueState"];
5->13 [style = solid, label="jobId"];
28->25 [style = bold, label=""];
4->8 [style = bold, label=""];
29->10 [style = bold, label=""];
3->16 [style = solid, label="numElements"];
14->15 [style = bold, label=""];
14->2 [style = bold, label=""];
23->2 [style = bold, label=""];
20->22 [style = dotted, label="true"];
9->1 [style = bold, label=""];
33->21 [style = bold, label=""];
10->13 [style = solid, label="deadline"];
2->28 [style = bold, label=""];
20->34 [style = dotted, label="true"];
31->19 [style = bold, label=""];
3->13 [style = solid, label="numElements"];
6->23 [style = dashed, label="0"];
}
