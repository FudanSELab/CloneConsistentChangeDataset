digraph {
5 [style = filled, label = "MetaModelContext.preset(MetaModelContext.builder().specificationLoader(mockSpecificationLoader).serviceInjector(mockServiceInjector).serviceRegistry(mockServiceRegistry).build())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "mockPersistenceSessionServiceInternal = context.mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "mockAuthenticationSessionProvider = context.mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "((MetaModelContextAware)facetHolder).setMetaModelContext(metaModelContext)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "MetaModelContext.preset(MetaModelContext.builder().specificationLoader(mockSpecificationLoader).translationService(mockTranslationService).objectAdapterProvider(mockPersistenceSessionServiceInternal).authenticationSessionProvider(mockAuthenticationSessionProvider).build())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "context.checking(new Expectations(){})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "setUpFacetedMethodAndParameter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "setUpFacetedMethodAndParameter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "mockSpecificationLoader = context.mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mockObjectAdapterProvider = context.mock()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "mockTranslationService = context.mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "facetHolder = new IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(,\"firstName\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "facetedMethod.setMetaModelContext(metaModelContext)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "mockAuthenticationSession = context.mock()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "metaModelContext = MetaModelContext_forTesting.builder().specificationLoader(mockSpecificationLoader).serviceInjector(mockServiceInjector).serviceRegistry(mockServiceRegistry).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "methodRemover = new ProgrammableMethodRemover()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "context.checking(new Expectations(){})@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a2986b@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "facetedMethodParameter.setMetaModelContext(metaModelContext)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
20->13 [style = bold, label=""];
15->14 [style = bold, label=""];
21->0 [style = bold, label=""];
9->7 [style = solid, label="metaModelContext"];
18->19 [style = bold, label=""];
9->10 [style = solid, label="metaModelContext"];
5->9 [style = dashed, label="0"];
16->17 [style = bold, label=""];
10->7 [style = bold, label=""];
3->0 [style = bold, label=""];
24->16 [style = bold, label=""];
23->24 [style = bold, label=""];
9->8 [style = solid, label="metaModelContext"];
0->4 [style = bold, label=""];
1->11 [style = dashed, label="0"];
22->12 [style = bold, label=""];
12->18 [style = bold, label=""];
13->23 [style = bold, label=""];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
4->1 [style = bold, label=""];
6->9 [style = bold, label=""];
19->15 [style = bold, label=""];
4->11 [style = bold, label=""];
17->21 [style = bold, label=""];
14->20 [style = bold, label=""];
2->5 [style = bold, label=""];
}
