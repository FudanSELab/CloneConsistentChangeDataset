digraph {
19 [style = filled, label = "assertThat(topDocs.scoreDocs(1(.doc,equalTo(0))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(topDocs.scoreDocs(2(.doc,equalTo(1))@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(bytesValues.advanceExact(1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "topDocs = searcher.search(new MatchAllDocsQuery(),10,new Sort(sortField))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexFieldData<?> indexFieldData = getForField(\"value\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SortField sortField = indexFieldData.sortField(null,MultiValueMode.MIN,null,false)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(readerContext.reader())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(topDocs.scoreDocs(0(.doc,equalTo(2))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(topDocs.scoreDocs(2(.doc,equalTo(2))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(topDocs.totalHits,equalTo(3L))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertMissing(fieldValues,1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(bytesValues.docValueCount(),equalTo(1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testSingleValueWithMissing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(toString(((FieldDoc)topDocs.scoreDocs(0().fields(0(),equalTo(one()))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(topDocs.scoreDocs(0(.doc,equalTo(1))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "bytesValues = fieldData.getBytesValues()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testSingleValueAllSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertThat(topDocs.scoreDocs(1(.doc,equalTo(0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(toString(((FieldDoc)topDocs.scoreDocs(1().fields(0(),equalTo(two()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertValues(bytesValues,0,two())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(fieldData.ramBytesUsed(),greaterThanOrEqualTo(minRamBytesUsed()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "MultiGeoPointValues fieldValues = ((AbstractAtomicGeoPointFieldData)fieldData).getGeoPointValues()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "topDocs = searcher.search(new MatchAllDocsQuery(),10,new Sort(sortField))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "TopFieldDocs topDocs@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SortedBinaryDocValues bytesValues = fieldData.getBytesValues()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(toString(((FieldDoc)topDocs.scoreDocs(2().fields(0(),equalTo(three()))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertValues(bytesValues,2,three())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sortField = indexFieldData.sortField(null,MultiValueMode.MAX,null,true)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertValues(fieldValues,0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(bytesValues.docValueCount(),equalTo(1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertValues(bytesValues,1,one())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<LeafReaderContext> readerContexts = refreshReader()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(bytesValues.nextValue(),equalTo(new BytesRef(one())))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(topDocs.totalHits.value,equalTo(3L))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertThat(bytesValues.nextValue(),equalTo(new BytesRef(three())))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(topDocs.totalHits,equalTo(3L))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertThat(bytesValues.docValueCount(),equalTo(1))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertValues(fieldValues,2)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(bytesValues.nextValue(),equalTo(new BytesRef(two())))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testSingleValueAllSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "fillSingleValueWithMissing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(bytesValues.advanceExact(0))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(topDocs.totalHits.value,equalTo(3L))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "fillSingleValueAllSet()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "AtomicFieldData fieldData = indexFieldData.load(readerContext)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(bytesValues.advanceExact(2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
2->17 [style = bold, label=""];
32->35 [style = bold, label=""];
38->5 [style = bold, label=""];
16->38 [style = dashed, label="0"];
18->24 [style = bold, label=""];
27->38 [style = bold, label=""];
28->15 [style = bold, label=""];
0->26 [style = bold, label=""];
9->0 [style = bold, label=""];
41->24 [style = bold, label=""];
19->12 [style = bold, label=""];
15->3 [style = solid, label="bytesValues"];
35->22 [style = bold, label=""];
25->9 [style = bold, label=""];
37->21 [style = bold, label=""];
8->14 [style = bold, label=""];
15->6 [style = bold, label=""];
30->34 [style = bold, label=""];
20->3 [style = bold, label=""];
31->1 [style = bold, label=""];
21->30 [style = bold, label=""];
27->16 [style = bold, label=""];
12->24 [style = bold, label=""];
31->13 [style = solid, label="sortField"];
26->4 [style = bold, label=""];
31->1 [style = solid, label="sortField"];
42->40 [style = bold, label=""];
29->21 [style = bold, label=""];
15->20 [style = solid, label="bytesValues"];
29->37 [style = dashed, label="0"];
23->28 [style = bold, label=""];
6->20 [style = bold, label=""];
17->36 [style = bold, label=""];
7->33 [style = bold, label=""];
5->19 [style = bold, label=""];
42->41 [style = solid, label="fieldValues"];
15->6 [style = solid, label="bytesValues"];
22->18 [style = bold, label=""];
36->13 [style = bold, label=""];
13->27 [style = bold, label=""];
42->44 [style = solid, label="fieldValues"];
45->43 [style = bold, label=""];
14->23 [style = bold, label=""];
34->2 [style = bold, label=""];
3->7 [style = bold, label=""];
10->25 [style = bold, label=""];
10->42 [style = bold, label=""];
40->44 [style = bold, label=""];
39->35 [style = bold, label=""];
43->22 [style = bold, label=""];
44->41 [style = bold, label=""];
16->5 [style = bold, label=""];
33->31 [style = bold, label=""];
11->8 [style = bold, label=""];
13->27 [style = solid, label="sortField"];
35->43 [style = dashed, label="0"];
1->29 [style = bold, label=""];
4->11 [style = bold, label=""];
13->31 [style = solid, label="sortField"];
1->37 [style = bold, label=""];
42->40 [style = solid, label="fieldValues"];
}
