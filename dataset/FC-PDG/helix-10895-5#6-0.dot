digraph {
24 [style = filled, label = "Map<Replica,Node> existingPreferredAssignment = new TreeMap<Replica,Node>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "computeExistingNonPreferredPlacement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Map<String,Map<String,String>> currentMapping@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i++@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "computeExistingPreferredPlacement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < count@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int replicaId = _replicaIdMap.get(state).get(i)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "skip = true@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,String> nodeStateMap = currentMapping.get(partition)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Integer count = _states.get(state)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String state = nodeStateMap.get(nodeId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "node.preferred.add(replica)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Node node = _nodeMap.get(nodeId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "_preferredAssignment.containsKey(replica) && !existingPreferredAssignment.containsKey(replica) && _preferredAssignment.get(replica).id == node.id@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "skip@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "node.currentlyAssigned = node.currentlyAssigned + 1@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "_preferredAssignment.get(replica).id != node.id@@@25@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "computeExistingNonPreferredPlacement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "return existingPreferredAssignment@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "boolean skip = false@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Replica replica = new Replica(partition,state,replicaId)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "existingPreferredAssignment.put(replica,node)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "_preferredAssignment.get(replica).id != node.id && !existingNonPreferredAssignment.containsKey(replica)@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Map<String,Map<String,String>> currentMapping@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "node.nonPreferred.add(replica)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "existingNonPreferredAssignment.put(replica,node)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return existingNonPreferredAssignment@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Map<Replica,Node> existingNonPreferredAssignment = new TreeMap<Replica,Node>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replica.partition.equals(partition)@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1->6 [style = solid, label="replica"];
12->5 [style = bold, label=""];
5->1 [style = dotted, label="true"];
1->13 [style = bold, label=""];
4->14 [style = solid, label="node"];
0->15 [style = bold, label=""];
13->17 [style = bold, label=""];
1->28 [style = bold, label=""];
5->13 [style = dotted, label="true"];
10->8 [style = solid, label="skip"];
13->21 [style = dashed, label="0"];
1->21 [style = bold, label=""];
24->11 [style = bold, label=""];
6->26 [style = dashed, label="0"];
0->8 [style = bold, label=""];
20->18 [style = dotted, label="true"];
8->4 [style = bold, label=""];
8->11 [style = bold, label=""];
13->14 [style = bold, label=""];
1->22 [style = solid, label="replica"];
18->25 [style = dashed, label="0"];
16->1 [style = solid, label="replicaId"];
13->6 [style = dotted, label="true"];
5->29 [style = bold, label=""];
17->5 [style = bold, label=""];
27->25 [style = dotted, label="true"];
19->12 [style = bold, label=""];
14->22 [style = dashed, label="0"];
4->22 [style = solid, label="node"];
1->28 [style = solid, label="replica"];
17->5 [style = solid, label="i"];
13->28 [style = dashed, label="0"];
3->2 [style = bold, label=""];
1->26 [style = solid, label="replica"];
3->18 [style = dotted, label="true"];
10->0 [style = bold, label=""];
5->7 [style = bold, label=""];
5->11 [style = bold, label=""];
2->24 [style = dashed, label="0"];
6->7 [style = bold, label=""];
14->6 [style = bold, label=""];
4->23 [style = bold, label=""];
21->6 [style = dotted, label="true"];
4->9 [style = bold, label=""];
22->26 [style = bold, label=""];
2->7 [style = solid, label="existingNonPreferredAssignment"];
11->4 [style = bold, label=""];
19->10 [style = bold, label=""];
15->8 [style = solid, label="skip"];
5->16 [style = bold, label=""];
9->19 [style = solid, label="state"];
16->1 [style = bold, label=""];
24->29 [style = solid, label="existingPreferredAssignment"];
5->4 [style = bold, label=""];
5->16 [style = dotted, label="true"];
9->1 [style = solid, label="state"];
28->22 [style = dotted, label="true"];
9->19 [style = bold, label=""];
28->17 [style = bold, label=""];
5->21 [style = dotted, label="true"];
27->24 [style = bold, label=""];
13->14 [style = dotted, label="true"];
1->13 [style = solid, label="replica"];
5->28 [style = dotted, label="true"];
2->11 [style = bold, label=""];
8->12 [style = bold, label=""];
28->22 [style = bold, label=""];
15->8 [style = bold, label=""];
21->14 [style = bold, label=""];
5->17 [style = dotted, label="true"];
12->16 [style = solid, label="i"];
0->15 [style = dotted, label="true"];
26->29 [style = bold, label=""];
1->21 [style = solid, label="replica"];
1->14 [style = solid, label="replica"];
8->7 [style = bold, label=""];
20->2 [style = bold, label=""];
17->16 [style = solid, label="i"];
12->5 [style = solid, label="i"];
12->17 [style = solid, label="i"];
19->5 [style = solid, label="count"];
28->26 [style = dotted, label="true"];
21->14 [style = dotted, label="true"];
7->29 [style = dashed, label="0"];
23->9 [style = bold, label=""];
21->17 [style = bold, label=""];
}
