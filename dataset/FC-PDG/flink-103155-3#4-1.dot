digraph {
24 [style = filled, label = "testHarness1.processElement2(new StreamRecord<>(3))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "expected.add(\"test3=3\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(expected.size(),output1.size())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamRecord<String> rec = (StreamRecord<String>)o@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertTrue(expected.contains(rec.getValue()))@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "keysToRegister.add(\"test3\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testHarness1.processElement2(new StreamRecord<>(3))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "mergedSnapshot = AbstractStreamOperatorTestHarness.repackageState(testHarness1.snapshot(0L,0L),testHarness2.snapshot(0L,0L),testHarness3.snapshot(0L,0L))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Set<String> keysToRegister = new HashSet<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness2.processElement2(new StreamRecord<>(3))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testScaleUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "Assert.assertTrue(expected.contains(rec.getValue()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final OperatorStateHandles mergedSnapshot@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "StreamRecord<String> rec = (StreamRecord<String>)o@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Queue<?> output1 = testHarness1.getOutput()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StreamRecord<String> rec = (StreamRecord<String>)o@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(expected.size(),output3.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testScaleUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHarness3.processElement2(new StreamRecord<>(3))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Queue<?> output2 = testHarness2.getOutput()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness1.processElement1(new StreamRecord<>(\"trigger\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expected.add(\"test1=3\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamRecord<String> rec = (StreamRecord<String>)o@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Queue<?> output2 = testHarness2.getOutput()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "expected.add(\"test2=3\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Set<String> expected = new HashSet<>(3)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expected.add(\"test1=3\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(expected.size(),output2.size())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testHarness1.processElement1(new StreamRecord<>(\"trigger\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Set<String> expected = new HashSet<>(3)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "keysToRegister.add(\"test1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testScaleDown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testHarness2.processElement1(new StreamRecord<>(\"trigger\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(expected.size(),output2.size())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(expected.contains(rec.getValue()))@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness2.processElement1(new StreamRecord<>(\"trigger\"))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "keysToRegister.add(\"test2\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "StreamRecord<String> rec = (StreamRecord<String>)o@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->9 [style = bold, label=""];
25->1 [style = bold, label=""];
35->16 [style = bold, label=""];
32->37 [style = bold, label=""];
4->17 [style = bold, label=""];
23->5 [style = bold, label=""];
23->30 [style = bold, label=""];
22->19 [style = bold, label=""];
37->10 [style = bold, label=""];
20->26 [style = bold, label=""];
22->16 [style = bold, label=""];
31->0 [style = bold, label=""];
29->31 [style = bold, label=""];
9->34 [style = bold, label=""];
27->3 [style = bold, label=""];
12->15 [style = bold, label=""];
30->23 [style = bold, label=""];
28->12 [style = bold, label=""];
33->12 [style = bold, label=""];
16->19 [style = bold, label=""];
26->24 [style = bold, label=""];
11->18 [style = bold, label=""];
8->22 [style = bold, label=""];
19->16 [style = bold, label=""];
5->2 [style = bold, label=""];
13->29 [style = bold, label=""];
3->20 [style = bold, label=""];
17->0 [style = bold, label=""];
36->23 [style = bold, label=""];
23->21 [style = bold, label=""];
7->2 [style = bold, label=""];
9->25 [style = bold, label=""];
16->14 [style = bold, label=""];
11->8 [style = bold, label=""];
34->32 [style = bold, label=""];
18->8 [style = bold, label=""];
2->7 [style = bold, label=""];
16->35 [style = bold, label=""];
35->36 [style = bold, label=""];
20->24 [style = bold, label=""];
15->27 [style = bold, label=""];
1->10 [style = bold, label=""];
21->23 [style = bold, label=""];
13->4 [style = bold, label=""];
14->21 [style = bold, label=""];
24->13 [style = bold, label=""];
10->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
