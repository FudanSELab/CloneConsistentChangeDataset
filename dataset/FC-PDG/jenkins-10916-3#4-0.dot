digraph {
7 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.runs.get(0).getEntryId())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "historyPageFilter.add(itemList)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(10,historyPageFilter.runs.get(0).getEntryId())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.runs.get(1).getEntryId())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.runs.size())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),HistoryPageEntry.getEntryId(itemList.get(0)))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(1,HistoryPageEntry.getEntryId(itemList.get(0)))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.queueItems.get(0).getEntryId())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.queueItems.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "itemList.addAll(newRuns(1,10))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "test_latest_partial_page['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.queueItems.get(0).getEntryId())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.runs.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.newestOnPage)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "test_latest_partial_page['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "test_latest_longer_list['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<ModelObject> itemList = new ArrayList<ModelObject>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(2),historyPageFilter.runs.get(0).getEntryId())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.queueItems.get(1).getEntryId())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasDownPage)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.newestOnPage)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(1,historyPageFilter.oldestOnPage)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "itemList.addAll(newQueueItems(3,4))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(4,HistoryPageEntry.getEntryId(itemList.get(0)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(1,historyPageFilter.runs.get(1).getEntryId())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasDownPage)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "itemList.addAll(newRuns(1,2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "itemList.addAll(newQueueItems(11,12))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
3->5 [style = dashed, label="0"];
24->28 [style = bold, label=""];
15->23 [style = bold, label=""];
30->24 [style = bold, label=""];
14->25 [style = bold, label=""];
20->13 [style = bold, label=""];
4->17 [style = bold, label=""];
23->5 [style = bold, label=""];
17->24 [style = dashed, label="0"];
11->15 [style = dashed, label="0"];
1->27 [style = dashed, label="0"];
22->21 [style = bold, label=""];
1->20 [style = bold, label=""];
14->26 [style = solid, label="itemList"];
4->30 [style = dashed, label="0"];
8->6 [style = bold, label=""];
8->21 [style = dashed, label="0"];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
0->28 [style = dashed, label="0"];
3->4 [style = bold, label=""];
9->16 [style = bold, label=""];
21->18 [style = bold, label=""];
26->13 [style = bold, label=""];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
25->27 [style = bold, label=""];
11->5 [style = bold, label=""];
17->0 [style = bold, label=""];
12->25 [style = dashed, label="0"];
15->11 [style = bold, label=""];
10->13 [style = bold, label=""];
14->13 [style = solid, label="itemList"];
0->22 [style = bold, label=""];
14->12 [style = bold, label=""];
2->15 [style = bold, label=""];
16->14 [style = bold, label=""];
10->20 [style = dashed, label="0"];
13->15 [style = bold, label=""];
5->30 [style = bold, label=""];
1->10 [style = bold, label=""];
29->16 [style = bold, label=""];
7->22 [style = dashed, label="0"];
13->2 [style = bold, label=""];
27->26 [style = bold, label=""];
}
