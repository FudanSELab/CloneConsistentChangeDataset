digraph {
2 [style = filled, label = "i++@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "log.info(\"RTG with DBQs are not working in append replicas\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@33@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "Replica rep@@@29@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "onlyLeaderIndexes@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertNull(client.getById(\"1\",params(\"distrib\",\"false\")))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "log.info(\"Version at \" + ((HttpSolrClient)client).getBaseURL() + \" is: \" + getReplicaValue(client,1,\"_version_\"))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"title_s\",\"title1_new\",\"id_i\",1,\"inplace_updatable_float\",newinplace_updatable_float))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "clearIndex()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "{clearIndex()commit()shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().unsetDelay()updates.add(regularDeleteRequest(1))shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",1,5999)shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",4,5998)threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))for (UpdateRequest update : updates){AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())threadpool.submit(task)Thread.sleep(100)}threadpool.shutdown()assertTrue(\"Thread pool didn't terminate within 15 secs\",threadpool.awaitTermination(15,TimeUnit.SECONDS))commit()ZkController zkController = shardToLeaderJetty.get(SHARD1).jetty.getCoreContainer().getZkController()String lirPath = zkController.getLeaderInitiatedRecoveryZnodePath(DEFAULT_TEST_COLLECTION_NAME,SHARD1)assertFalse(zkController.getZkClient().exists(lirPath,true))for (int i = 0 i < 100 i++){Thread.sleep(10)cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)ClusterState state = cloudClient.getZkStateReader().getClusterState()int numActiveReplicas = 0for (Replica rep : state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas())if (rep.getState().equals(Replica.State.ACTIVE)) numActiveReplicas++assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)}for (SolrClient client : new SolrClient((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ed3356){SolrDocument doc = client.getById(String.valueOf(1),params(\"distrib\",\"false\"))assertNull(\"This doc was supposed to have been deleted, but was: \" + doc,doc)}}@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClusterState state = cloudClient.getZkStateReader().getClusterState()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "reorderedDBQsUsingUpdatedValueFromADroppedUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Thread.sleep(100)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(\"Thread pool didn't terminate within 15 secs\",threadpool.awaitTermination(15,TimeUnit.SECONDS))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "buildRandomIndex(inplace_updatable_float,Collections.singletonList(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "threadpool.submit(task)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "updates.add(regularDeleteByQueryRequest(\"inplace_updatable_float:14\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "commit()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",2,8000)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "float inplace_updatable_float = 1F@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < 100@@@23@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "threadpool.shutdown()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertReplicaValue(client,1,\"title_s\",\"title1_new\",\"Title didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "log.info(\"delayedReorderingFetchesMissingUpdateFromLeaderTest: This test passed fine...\")@@@74@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "return@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",1,6000)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "log.info(\"Testing client (Fetch missing test): \" + ((HttpSolrClient)client).getBaseURL())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<UpdateRequest> updates = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "float newinplace_updatable_float = 100F@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "commit()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "delayedReorderingFetchesMissingUpdateFromLeaderTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "log.info(\"Testing client (testDBQUsingUpdatedFieldFromDroppedUpdate): \" + ((HttpSolrClient)client).getBaseURL())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Thread.sleep(100)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Replica rep@@@33@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "numActiveReplicas++@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int numActiveReplicas = 0@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"id_i\",1,\"inplace_updatable_float\",12,\"title_s\",\"mytitle\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Thread.sleep(10)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "numActiveReplicas++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertReplicaValue(client,1,\"inplace_updatable_float\",(newinplace_updatable_float + 2.0f),\"inplace_updatable_float didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(\"Thread pool didn't terminate within 12 secs\",threadpool.awaitTermination(12,TimeUnit.SECONDS))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "reorderedDBQsUsingUpdatedValueFromADroppedUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->13 [style = bold, label=""];
13->45 [style = bold, label=""];
38->36 [style = bold, label=""];
18->20 [style = bold, label=""];
7->24 [style = bold, label=""];
23->27 [style = solid, label="updates"];
20->7 [style = bold, label=""];
26->9 [style = dashed, label="0"];
23->10 [style = bold, label=""];
8->48 [style = bold, label=""];
32->2 [style = solid, label="i"];
2->5 [style = dotted, label="true"];
37->33 [style = bold, label=""];
10->11 [style = bold, label=""];
21->46 [style = bold, label=""];
0->23 [style = bold, label=""];
34->38 [style = bold, label=""];
32->43 [style = dotted, label="true"];
10->50 [style = dashed, label="0"];
6->20 [style = solid, label="numActiveReplicas"];
2->32 [style = solid, label="i"];
3->9 [style = bold, label=""];
44->41 [style = bold, label=""];
32->51 [style = bold, label=""];
49->33 [style = bold, label=""];
9->26 [style = bold, label=""];
32->7 [style = bold, label=""];
14->20 [style = solid, label="numActiveReplicas"];
15->25 [style = bold, label=""];
24->5 [style = bold, label=""];
17->16 [style = bold, label=""];
14->33 [style = solid, label="numActiveReplicas"];
38->40 [style = dotted, label="true"];
52->23 [style = bold, label=""];
17->27 [style = bold, label=""];
37->20 [style = bold, label=""];
50->11 [style = bold, label=""];
32->31 [style = dotted, label="true"];
4->27 [style = solid, label="i"];
32->47 [style = dotted, label="true"];
48->44 [style = bold, label=""];
33->20 [style = bold, label=""];
26->4 [style = bold, label=""];
6->20 [style = bold, label=""];
2->14 [style = dotted, label="true"];
16->51 [style = dashed, label="0"];
33->37 [style = bold, label=""];
13->41 [style = bold, label=""];
5->31 [style = bold, label=""];
33->2 [style = bold, label=""];
2->1 [style = dotted, label="true"];
32->24 [style = dotted, label="true"];
32->7 [style = dotted, label="true"];
32->2 [style = bold, label=""];
54->4 [style = bold, label=""];
14->49 [style = bold, label=""];
12->19 [style = bold, label=""];
2->32 [style = bold, label=""];
31->27 [style = solid, label="numActiveReplicas"];
2->24 [style = bold, label=""];
2->16 [style = bold, label=""];
49->14 [style = bold, label=""];
36->40 [style = bold, label=""];
31->14 [style = bold, label=""];
32->5 [style = dotted, label="true"];
18->6 [style = bold, label=""];
41->27 [style = solid, label="task"];
7->2 [style = bold, label=""];
2->24 [style = dotted, label="true"];
6->18 [style = bold, label=""];
32->2 [style = dotted, label="true"];
23->50 [style = bold, label=""];
46->27 [style = bold, label=""];
14->27 [style = solid, label="numActiveReplicas"];
27->42 [style = bold, label=""];
46->51 [style = bold, label=""];
2->37 [style = dotted, label="true"];
38->36 [style = dotted, label="true"];
18->6 [style = dotted, label="true"];
32->33 [style = dotted, label="true"];
2->31 [style = dotted, label="true"];
55->21 [style = bold, label=""];
11->8 [style = bold, label=""];
2->18 [style = dotted, label="true"];
33->20 [style = solid, label="numActiveReplicas"];
31->49 [style = bold, label=""];
37->33 [style = dotted, label="true"];
30->0 [style = bold, label=""];
31->33 [style = solid, label="numActiveReplicas"];
51->55 [style = bold, label=""];
13->3 [style = bold, label=""];
22->12 [style = bold, label=""];
2->35 [style = dotted, label="true"];
14->6 [style = solid, label="numActiveReplicas"];
52->50 [style = solid, label="newinplace_updatable_float"];
25->29 [style = bold, label=""];
40->12 [style = bold, label=""];
14->18 [style = bold, label=""];
19->30 [style = bold, label=""];
32->7 [style = solid, label="i"];
7->2 [style = solid, label="i"];
2->33 [style = dotted, label="true"];
28->13 [style = solid, label="task"];
4->32 [style = bold, label=""];
29->28 [style = bold, label=""];
21->17 [style = bold, label=""];
14->37 [style = bold, label=""];
45->9 [style = bold, label=""];
53->12 [style = bold, label=""];
2->20 [style = dotted, label="true"];
0->52 [style = bold, label=""];
4->32 [style = solid, label="i"];
32->49 [style = dotted, label="true"];
38->12 [style = bold, label=""];
30->0 [style = solid, label="inplace_updatable_float"];
4->2 [style = solid, label="i"];
16->21 [style = bold, label=""];
41->28 [style = solid, label="task"];
52->21 [style = solid, label="newinplace_updatable_float"];
14->33 [style = bold, label=""];
49->14 [style = dotted, label="true"];
31->14 [style = solid, label="numActiveReplicas"];
3->28 [style = bold, label=""];
9->54 [style = bold, label=""];
2->27 [style = solid, label="i"];
41->28 [style = bold, label=""];
8->15 [style = bold, label=""];
2->7 [style = dotted, label="true"];
2->39 [style = dotted, label="true"];
}
