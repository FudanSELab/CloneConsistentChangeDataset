digraph {
10 [style = filled, label = "assertThat(message.hashCode()).isEqualTo(lazyField.hashCode())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertNotEqual(message.hashCode(),lazyField.hashCode())@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(message.hashCode(),lazyField.hashCode())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testHashCode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testHashCodeEx['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "lazyField.getValue()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(message.hashCode()).isEqualTo(lazyField.hashCode())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "LazyField lazyField = createLazyFieldFromMessage(message)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHashCode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MessageLite message = TestUtil.getAllSet()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(message.hashCode(),lazyField.hashCode())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestAllExtensions message = TestUtil.getAllExtensionsSet()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "changeValue(lazyField)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->1 [style = bold, label=""];
4->3 [style = bold, label=""];
3->6 [style = bold, label=""];
5->1 [style = bold, label=""];
1->2 [style = bold, label=""];
7->0 [style = bold, label=""];
0->10 [style = bold, label=""];
10->3 [style = bold, label=""];
2->7 [style = bold, label=""];
2->9 [style = bold, label=""];
9->0 [style = bold, label=""];
11->2 [style = solid, label="message"];
12->11 [style = bold, label=""];
4->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
7->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
1->2 [style = solid, label="message"];
11->2 [style = bold, label=""];
2->3 [style = solid, label="lazyField"];
}
