digraph {
7 [style = filled, label = "return Optional.empty()@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "!noClassEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "e.matches(c)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "!noClassEntries@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "classEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "classEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "ConstructorEntry<V> e@@@3@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "find['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ClassEntry<V> e@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "find['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "find['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Class<?> c@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return Optional.of(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "e.matches(c)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return Optional.ofNullable(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Class<?> c@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ClassEntry<V> e@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "e.matches(c)@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "constructorEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "!noConstructorEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return Optional.of(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Constructor<?> c@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
22->21 [style = dotted, label="true"];
19->25 [style = dotted, label="true"];
9->0 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
22->18 [style = dotted, label="true"];
8->2 [style = dotted, label="true"];
12->17 [style = bold, label=""];
6->1 [style = dotted, label="true"];
11->17 [style = dotted, label="true"];
5->6 [style = dotted, label="true"];
22->21 [style = bold, label=""];
14->17 [style = bold, label=""];
15->10 [style = dotted, label="true"];
25->21 [style = solid, label="c"];
11->13 [style = dotted, label="true"];
19->24 [style = dotted, label="true"];
10->12 [style = solid, label="ofType"];
9->7 [style = bold, label=""];
1->7 [style = bold, label=""];
8->4 [style = dotted, label="true"];
12->7 [style = bold, label=""];
15->4 [style = dotted, label="true"];
22->7 [style = bold, label=""];
24->20 [style = solid, label="ofType"];
14->7 [style = bold, label=""];
20->21 [style = bold, label=""];
4->6 [style = solid, label="ofType"];
17->7 [style = bold, label=""];
4->25 [style = dashed, label="0"];
4->17 [style = solid, label="c"];
12->14 [style = dotted, label="true"];
6->5 [style = bold, label=""];
6->1 [style = bold, label=""];
17->12 [style = bold, label=""];
21->20 [style = bold, label=""];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
17->12 [style = dotted, label="true"];
22->26 [style = dotted, label="true"];
20->23 [style = bold, label=""];
23->21 [style = bold, label=""];
9->17 [style = dashed, label="0"];
9->26 [style = dashed, label="0"];
20->23 [style = dotted, label="true"];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
9->5 [style = bold, label=""];
11->16 [style = dotted, label="true"];
21->7 [style = bold, label=""];
5->7 [style = bold, label=""];
11->17 [style = bold, label=""];
23->7 [style = bold, label=""];
20->7 [style = bold, label=""];
6->7 [style = bold, label=""];
19->22 [style = bold, label=""];
9->3 [style = dotted, label="true"];
11->7 [style = bold, label=""];
2->5 [style = solid, label="c"];
9->5 [style = dotted, label="true"];
}
