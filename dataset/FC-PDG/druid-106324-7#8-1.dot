digraph {
11 [style = filled, label = "SegmentMetadataQuery query = Druids.newSegmentMetadataQueryBuilder().dataSource(\"testing\").intervals(\"2013/2014\").toInclude(new ListColumnIncluderator(Arrays.asList(\"placement\",\"quality_uniques\"))).analysisTypes(SegmentMetadataQuery.AnalysisType.CARDINALITY).merge(true).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testSegmentMetadataQueryWithComplexColumnMerge['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ExecutorService exec = Executors.newCachedThreadPool()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestHelper.assertExpectedObjects(ImmutableList.of(mergedSegmentAnalysis),myRunner.run(QueryPlus.wrap(query),new HashMap<>()),\"failed SegmentMetadata merging query\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SegmentMetadataQuery query = Druids.newSegmentMetadataQueryBuilder().dataSource(\"testing\").intervals(\"2013/2014\").toInclude(new ListColumnIncluderator(Arrays.asList(\"placement\",\"placementish\"))).analysisTypes(SegmentMetadataQuery.AnalysisType.CARDINALITY).merge(true).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SegmentAnalysis mergedSegmentAnalysis = new SegmentAnalysis(differentIds? \"merged\": SegmentId.dummy(\"testSegment\").toString(),null,ImmutableMap.of(\"placement\",new ColumnAnalysis(ValueType.STRING.toString(),false,0,1,null,null,null),\"placementish\",new ColumnAnalysis(ValueType.STRING.toString(),true,0,9,null,null,null)),0,expectedSegmentAnalysis1.getNumRows() + expectedSegmentAnalysis2.getNumRows(),null,null,null,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "SegmentAnalysis mergedSegmentAnalysis = new SegmentAnalysis(differentIds? \"merged\": \"testSegment\",null,ImmutableMap.of(\"placement\",new ColumnAnalysis(ValueType.STRING.toString(),false,0,1,null,null,null),\"placementish\",new ColumnAnalysis(ValueType.STRING.toString(),true,0,9,null,null,null)),0,expectedSegmentAnalysis1.getNumRows() + expectedSegmentAnalysis2.getNumRows(),null,null,null,null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testSegmentMetadataQueryWithHasMultipleValuesMerge['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "exec.shutdownNow()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "QueryRunner myRunner = new FinalizeResultsQueryRunner<>(toolChest.mergeResults(FACTORY.mergeRunners(Execs.directExecutor(),Lists.newArrayList(toolChest.preMergeQueryDecoration(runner1),toolChest.preMergeQueryDecoration(runner2)))),toolChest)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSegmentMetadataQueryWithHasMultipleValuesMerge['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "SegmentAnalysis mergedSegmentAnalysis = new SegmentAnalysis(differentIds? \"merged\": \"testSegment\",null,ImmutableMap.of(\"placement\",new ColumnAnalysis(ValueType.STRING.toString(),false,0,1,null,null,null),\"quality_uniques\",new ColumnAnalysis(\"hyperUnique\",false,0,null,null,null,null)),0,expectedSegmentAnalysis1.getNumRows() + expectedSegmentAnalysis2.getNumRows(),null,null,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "QueryToolChest toolChest = FACTORY.getToolchest()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
1->3 [style = solid, label="toolChest"];
4->5 [style = solid, label="query"];
3->11 [style = bold, label=""];
7->0 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
10->5 [style = solid, label="mergedSegmentAnalysis"];
8->1 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
12->10 [style = bold, label=""];
1->6 [style = bold, label=""];
0->1 [style = bold, label=""];
8->5 [style = solid, label="mergedSegmentAnalysis"];
11->5 [style = solid, label="query"];
0->8 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
0->5 [style = solid, label="mergedSegmentAnalysis"];
}
