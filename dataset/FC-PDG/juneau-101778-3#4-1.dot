digraph {
2 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().as().check()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType().check()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().as().check()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().as().check()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType().check()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType().check()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().as().check()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().as().check()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "x.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as().check()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType().check()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "RestClient x = client().simpleJson().json().xml().html().plainText().msgPack().uon().urlEnc().openApi().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThrown(null).contains(\"Content-Type not specified on request. Cannot match correct serializer. Use contentType(String) or mediaType(String) to specify transport language.\")@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().as().check()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().as().check()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "d01_universal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "b01_multiLanguages['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().as().check()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType().check()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType().check()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType().check()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "RestClient x = client().universal().header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "b01_multiLanguages['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType().check()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11->16 [style = bold, label=""];
17->8 [style = bold, label=""];
7->14 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
12->15 [style = bold, label=""];
18->12 [style = bold, label=""];
19->17 [style = bold, label=""];
9->10 [style = bold, label=""];
5->14 [style = bold, label=""];
0->12 [style = dashed, label="0"];
16->19 [style = bold, label=""];
2->17 [style = dashed, label="0"];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
5->20 [style = dashed, label="0"];
6->2 [style = bold, label=""];
21->20 [style = bold, label=""];
15->11 [style = bold, label=""];
0->1 [style = bold, label=""];
6->19 [style = dashed, label="0"];
13->5 [style = bold, label=""];
9->11 [style = dashed, label="0"];
5->7 [style = bold, label=""];
14->18 [style = bold, label=""];
10->16 [style = dashed, label="0"];
20->7 [style = bold, label=""];
2->22 [style = bold, label=""];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
}
