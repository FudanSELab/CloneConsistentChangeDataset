digraph {
18 [style = filled, label = "RuntimeException thrownDuringStop = new RuntimeException(\"thrown by service.stop() during test\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RuntimeException thrownDuringStart = new RuntimeException(\"thrown by service.start() during test\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "metricsService = new InternalDistributedSystemMetricsService(metricsServiceBuilder,logger,serviceLoader,metricsServiceMeterRegistry,emptyList(),meterBinder,system,false)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "doThrow(thrownDuringStart).when(throwingService).start(any())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "start_logsError_ifMetricsPublishingServiceStartThrows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String serviceClassName = throwingService.getClass().getName()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verify(logger).error(actualMessage.capture(),same(thrownDuringStart))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String serviceClassName = throwingService.getClass().getName()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "metricsService = new InternalDistributedSystemMetricsService(metricsServiceBuilder,logger,serviceLoader,metricsServiceMeterRegistry,emptyList(),meterBinder,system,false,false,true)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "verify(logger).error(actualMessage.capture(),same(thrownDuringStop))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "doThrow(thrownDuringStop).when(throwingService).stop(metricsService)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "stop_logsError_ifMetricsPublishingServiceStopThrows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "metricsService.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ArgumentCaptor<String> actualMessage = ArgumentCaptor.forClass()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "start_logsError_ifMetricsPublishingServiceStartThrows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "MetricsPublishingService throwingService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(actualMessage.getValue()).as(\"Error log message\").contains(serviceClassName)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "metricsService.stop()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(serviceLoader.loadServices()).thenReturn(singleton(throwingService))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "@SuppressWarnings(\"unchecked\") CollectingServiceLoader<MetricsPublishingService> serviceLoader = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = solid, label="serviceClassName"];
10->15 [style = bold, label=""];
11->4 [style = solid, label="thrownDuringStart"];
16->10 [style = bold, label=""];
2->1 [style = bold, label=""];
18->15 [style = solid, label="thrownDuringStop"];
6->2 [style = solid, label="throwingService"];
18->17 [style = bold, label=""];
1->0 [style = bold, label=""];
11->9 [style = bold, label=""];
12->0 [style = bold, label=""];
17->19 [style = bold, label=""];
2->12 [style = bold, label=""];
19->16 [style = bold, label=""];
1->12 [style = dashed, label="0"];
0->10 [style = bold, label=""];
3->12 [style = solid, label="serviceLoader"];
3->2 [style = bold, label=""];
3->1 [style = solid, label="serviceLoader"];
1->17 [style = solid, label="metricsService"];
6->11 [style = bold, label=""];
4->15 [style = dashed, label="0"];
7->6 [style = bold, label=""];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
4->8 [style = bold, label=""];
0->18 [style = bold, label=""];
13->6 [style = bold, label=""];
16->8 [style = solid, label="serviceClassName"];
15->8 [style = bold, label=""];
14->6 [style = bold, label=""];
}
