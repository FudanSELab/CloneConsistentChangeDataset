digraph {
33 [style = filled, label = "session.waitForValidation(Pair.create(desc,endpoint),task)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return Futures.allAsList(tasks)@@@41@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "logger.info(\"Validating \" + address)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "requests.size() > 0@@@23@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int gcBefore = Keyspace.open(desc.keyspace).getColumnFamilyStore(desc.columnFamily).gcBefore(System.currentTimeMillis())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "queue = new LinkedList<>()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final InetAddress nextAddress = requests.poll()@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<ListenableFuture<TreeResponse>> tasks = new ArrayList<>(endpoints.size())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Queue<InetAddress> requests = entry.getValue()@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "requestsByDatacenter.put(dc,queue)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,Queue<InetAddress>> requestsByDatacenter = new HashMap<>()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "session.waitForValidation(Pair.create(desc,address),firstTask)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tasks.add(nextTask)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ValidationTask currentTask = firstTask@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Collection<InetAddress> endpoints@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "InetAddress address = requests.poll()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "sendValidationRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Futures.addCallback(currentTask,new FutureCallback<TreeResponse>(){public void onSuccess(TreeResponse result){logger.info(\"Validating \" + nextAddress)session.waitForValidation(Pair.create(desc,nextAddress),nextTask)taskExecutor.execute(nextTask)}public void onFailure(Throwable t){}})@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return Futures.allAsList(tasks)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "onFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "taskExecutor.execute(task)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ValidationTask nextTask = new ValidationTask(desc,nextAddress,gcBefore)@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sendDCAwareValidationRequest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "taskExecutor.execute(firstTask)@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tasks.add(firstTask)@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "queue == null@@@9@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ValidationTask firstTask = new ValidationTask(desc,address,gcBefore)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Collection<InetAddress> endpoints@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Throwable t@@@33@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "ValidationTask task = new ValidationTask(desc,endpoint,gcBefore)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Queue<InetAddress> queue = requestsByDatacenter.get(dc)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String dc = DatabaseDescriptor.getEndpointSnitch().getDatacenter(endpoint)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "tasks.add(task)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "queue.add(endpoint)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "currentTask = nextTask@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
5->25 [style = solid, label="address"];
30->29 [style = solid, label="task"];
23->20 [style = bold, label=""];
4->24 [style = bold, label=""];
16->11 [style = bold, label=""];
34->9 [style = bold, label=""];
5->4 [style = solid, label="address"];
4->21 [style = solid, label="firstTask"];
11->3 [style = solid, label="nextAddress"];
29->30 [style = bold, label=""];
11->0 [style = solid, label="nextAddress"];
13->23 [style = solid, label="queue"];
16->6 [style = bold, label=""];
0->3 [style = solid, label="nextTask"];
26->27 [style = dotted, label="true"];
3->14 [style = bold, label=""];
4->6 [style = solid, label="firstTask"];
20->12 [style = solid, label="queue"];
1->3 [style = bold, label=""];
9->0 [style = solid, label="gcBefore"];
30->32 [style = solid, label="task"];
30->32 [style = bold, label=""];
15->10 [style = solid, label="tasks"];
15->30 [style = bold, label=""];
22->13 [style = solid, label="dc"];
5->24 [style = solid, label="address"];
18->2 [style = bold, label=""];
17->22 [style = bold, label=""];
25->7 [style = bold, label=""];
0->14 [style = solid, label="nextTask"];
0->1 [style = solid, label="nextTask"];
30->33 [style = solid, label="task"];
32->33 [style = bold, label=""];
16->3 [style = dotted, label="true"];
6->2 [style = bold, label=""];
33->29 [style = bold, label=""];
29->28 [style = bold, label=""];
4->25 [style = solid, label="firstTask"];
4->7 [style = solid, label="firstTask"];
9->4 [style = solid, label="gcBefore"];
15->17 [style = bold, label=""];
14->3 [style = solid, label="currentTask"];
11->0 [style = bold, label=""];
18->22 [style = bold, label=""];
9->30 [style = solid, label="gcBefore"];
23->20 [style = dotted, label="true"];
34->31 [style = dotted, label="true"];
16->0 [style = dotted, label="true"];
16->1 [style = dotted, label="true"];
22->12 [style = solid, label="dc"];
9->15 [style = bold, label=""];
24->25 [style = bold, label=""];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
21->3 [style = solid, label="currentTask"];
5->4 [style = bold, label=""];
16->14 [style = dotted, label="true"];
20->12 [style = bold, label=""];
12->18 [style = bold, label=""];
8->9 [style = bold, label=""];
13->23 [style = bold, label=""];
21->16 [style = bold, label=""];
7->21 [style = bold, label=""];
23->12 [style = dotted, label="true"];
16->11 [style = dotted, label="true"];
23->18 [style = bold, label=""];
15->28 [style = solid, label="tasks"];
22->13 [style = bold, label=""];
8->19 [style = dotted, label="true"];
2->5 [style = bold, label=""];
19->31 [style = dashed, label="0"];
}
