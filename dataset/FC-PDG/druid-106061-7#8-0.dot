digraph {
4 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a2fa06,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a2fa0c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a2fa12,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a2fa18,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a2fa1e))@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a2f918))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses.getJoinableClauses(),joinFilterPreAnalysis)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = new JoinFilterPreAnalysisGroup(new JoinFilterRewriteConfig(false,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE),true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnPageDisablePushDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses.getJoinableClauses(),joinFilterPreAnalysisGroup)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"page\",\"Peremptory norm\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,originalFilter,false,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(null,new SelectorFilter(\"page\",\"Peremptory norm\"),ImmutableSet.of())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "joinFilterPreAnalysisGroup.computeJoinFilterPreAnalysisIfAbsent(originalFilter,joinableClauses.getJoinableClauses(),VirtualColumns.EMPTY)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,originalFilter,true,false,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(null,new SelectorFilter(\"page\",\"Peremptory norm\"),ImmutableSet.of())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "JoinableClauses joinableClauses = JoinableClauses.fromList(ImmutableList.of(factToRegion(JoinType.LEFT),regionToCountry(JoinType.LEFT)))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftEnablePushDownDisableRewrite['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#en.wikipedia\"),new SelectorFilter(\"rtc.countryName\",\"United States\"),new OrFilter(ImmutableList.of(new SelectorFilter(\"page\",\"DirecTV\"),new SelectorFilter(\"rtc.countryIsoCode\",\"US\"))),new BoundFilter(new BoundDimFilter(\"namespace\",\"Main\",\"Main\",false,false,null,null,null))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#en.wikipedia\"),new BoundFilter(new BoundDimFilter(\"namespace\",\"Main\",\"Main\",false,false,null,null,null)))),new AndFilter(ImmutableList.of(new SelectorFilter(\"rtc.countryName\",\"United States\"),new OrFilter(ImmutableList.of(new SelectorFilter(\"page\",\"DirecTV\"),new SelectorFilter(\"rtc.countryIsoCode\",\"US\"))))),ImmutableSet.of())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnPageDisablePushDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
18->3 [style = bold, label=""];
3->8 [style = solid, label="actualFilterSplit"];
7->5 [style = solid, label="joinableClauses"];
7->1 [style = bold, label=""];
9->12 [style = solid, label="expectedFilterSplit"];
11->14 [style = bold, label=""];
16->10 [style = bold, label=""];
2->18 [style = bold, label=""];
9->17 [style = bold, label=""];
1->21 [style = dashed, label="0"];
17->15 [style = solid, label="joinFilterPreAnalysis"];
5->2 [style = solid, label="joinFilterPreAnalysis"];
16->11 [style = solid, label="joinFilterPreAnalysisGroup"];
2->10 [style = dashed, label="0"];
5->20 [style = dashed, label="0"];
20->2 [style = bold, label=""];
5->16 [style = dashed, label="0"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
15->12 [style = solid, label="actualFilterSplit"];
21->20 [style = bold, label=""];
18->8 [style = solid, label="expectedFilterSplit"];
1->10 [style = solid, label="originalFilter"];
1->14 [style = solid, label="originalFilter"];
1->16 [style = bold, label=""];
13->7 [style = bold, label=""];
1->4 [style = solid, label="originalFilter"];
3->8 [style = bold, label=""];
21->20 [style = solid, label="originalFilter"];
20->2 [style = solid, label="joinFilterPreAnalysis"];
7->20 [style = solid, label="joinableClauses"];
17->15 [style = bold, label=""];
1->5 [style = solid, label="originalFilter"];
7->21 [style = bold, label=""];
0->18 [style = dashed, label="0"];
14->9 [style = bold, label=""];
15->12 [style = bold, label=""];
0->8 [style = solid, label="expectedFilterSplit"];
20->3 [style = solid, label="joinFilterPreAnalysis"];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
19->7 [style = bold, label=""];
21->4 [style = solid, label="originalFilter"];
5->3 [style = solid, label="joinFilterPreAnalysis"];
10->11 [style = bold, label=""];
}
