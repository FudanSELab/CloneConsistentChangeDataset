digraph {
6 [style = filled, label = "testFixAuthorFirstNameFirst['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"von Last, Jr, First\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"von Neumann, J. and Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"First von Last, Jr. III\",AuthorList.fixAuthorFirstNameFirst(\"von Last, Jr. III, First\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\").equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testFixAuthorLastNameFirst['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"von Last, Jr, First\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\",false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true).equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",true)))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"John Smith\",AuthorList.fixAuthorFirstNameFirst(\"John Smith\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\",true))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"von Neumann, John and Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testFixAuthorFirstNameFirst['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"von Last, Jr, F.\",AuthorList.fixAuthorLastNameFirst(\"von Last, Jr ,First\",true))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirst(\"John Smith\",false))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"von Neumann, John and Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\"),AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertTrue(AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\").equals(AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\")))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"John von Neumann and John Smith and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirst(\"John Smith and Black Brown, Peter\",false))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirst(\"John Smith\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"John Smith and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirst(\"John Smith and Black Brown, Peter\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false).equals(AuthorList.fixAuthorLastNameFirst(\"John von Neumann and John Smith and Black Brown, Peter\",false)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"Smith, J.\",AuthorList.fixAuthorLastNameFirst(\"John Smith\",true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
23->20 [style = bold, label=""];
10->15 [style = bold, label=""];
18->19 [style = bold, label=""];
9->10 [style = bold, label=""];
16->22 [style = bold, label=""];
2->7 [style = dashed, label="0"];
1->7 [style = bold, label=""];
13->16 [style = bold, label=""];
5->20 [style = dashed, label="0"];
3->23 [style = dashed, label="0"];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
20->8 [style = bold, label=""];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
19->23 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
4->19 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
17->13 [style = bold, label=""];
21->17 [style = bold, label=""];
22->11 [style = bold, label=""];
14->21 [style = bold, label=""];
}
