digraph {
32 [style = filled, label = "final TreeMap<RootPartitionRange,AtomicUpdateGroup<T>> fullGroups = new TreeMap<>()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "findLatestFullyAvailableOvershadowedAtomicUpdateGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!rangeOfAug.equals(foundRange)@@@18@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "overshadowedGroups.isEmpty()@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "fullGroups.isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "fullGroups.put(RootPartitionRange.of(group),group)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "throw new ISE(\"This method should be called only when there is no fully available group in the given state.\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final List<AtomicUpdateGroup<T>> visibles = new ArrayList<>()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return visibles@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return Collections.emptyList()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "currEntry = lowerEntry@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "return visibles@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final List<AtomicUpdateGroup<T>> overshadowedGroups = findOvershadowedBy(rangeOfAug,minorVersion,State.OVERSHADOWED)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "fullGroups.firstKey().startPartitionId != rangeOfAug.startPartitionId || fullGroups.lastKey().endPartitionId != rangeOfAug.endPartitionId@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "lowerEntry.getKey().endPartitionId != currEntry.getKey().startPartitionId@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "findLatestFullyAvailableOvershadowedAtomicUpdateGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "RootPartitionRange rangeOfAug@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Entry<RootPartitionRange,AtomicUpdateGroup<T>> currEntry = fullGroups.lastEntry()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "visibles.sort(Comparator.comparing(null))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "!manager.standbyGroups.isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "findLatestNonFullyAvailableAtomicUpdateGroups['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final OvershadowableManager<T> manager = new OvershadowableManager<>(overshadowedGroups)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Entry<RootPartitionRange,AtomicUpdateGroup<T>> lowerEntry = fullGroups.lowerEntry(currEntry.getKey())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "RootPartitionRange rangeOfAug@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "return Collections.emptyList()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "return Collections.emptyList()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "return Collections.emptyList()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return Collections.emptyList()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final List<AtomicUpdateGroup<T>> visibles = new ArrayList<>()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "short minorVersion@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final List<AtomicUpdateGroup<T>> visibles = new ArrayList<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "groups.isEmpty()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "visibles.addAll(map.values())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "lowerEntry != null@@@18@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "final OvershadowableManager<T> manager = new OvershadowableManager<>(groups)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final RootPartitionRange foundRange = RootPartitionRange.of(visibles.get(0).getStartRootPartitionId(),visibles.get(visibles.size() - 1).getEndRootPartitionId())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<AtomicUpdateGroup<T>> groups@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return Collections.emptyList()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "return visibles@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "currEntry != null@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "visibles.add(currEntry.getValue())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "!atomicUpdateGroup.isFull()@@@11@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
31->23 [style = solid, label="lowerEntry"];
29->17 [style = dotted, label="true"];
12->33 [style = dashed, label="0"];
30->17 [style = bold, label=""];
0->26 [style = bold, label=""];
40->35 [style = bold, label=""];
34->40 [style = bold, label=""];
28->20 [style = bold, label=""];
12->10 [style = solid, label="minorVersion"];
28->20 [style = dotted, label="true"];
35->36 [style = dotted, label="true"];
39->34 [style = bold, label=""];
26->29 [style = bold, label=""];
9->4 [style = bold, label=""];
29->31 [style = bold, label=""];
3->14 [style = bold, label=""];
20->0 [style = bold, label=""];
23->29 [style = solid, label="currEntry"];
37->1 [style = bold, label=""];
18->19 [style = bold, label=""];
5->1 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
31->15 [style = solid, label="lowerEntry"];
22->25 [style = dotted, label="true"];
33->40 [style = solid, label="groups"];
37->38 [style = solid, label="visibles"];
10->32 [style = bold, label=""];
29->23 [style = dotted, label="true"];
1->0 [style = bold, label=""];
15->30 [style = bold, label=""];
16->17 [style = bold, label=""];
29->15 [style = dotted, label="true"];
24->18 [style = bold, label=""];
31->15 [style = bold, label=""];
10->6 [style = bold, label=""];
18->28 [style = bold, label=""];
17->23 [style = bold, label=""];
4->7 [style = bold, label=""];
14->13 [style = dotted, label="true"];
22->12 [style = dotted, label="true"];
23->29 [style = bold, label=""];
15->30 [style = dotted, label="true"];
28->0 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
29->27 [style = bold, label=""];
7->5 [style = bold, label=""];
15->17 [style = bold, label=""];
11->2 [style = dotted, label="true"];
2->10 [style = solid, label="rangeOfAug"];
10->4 [style = solid, label="overshadowedGroups"];
7->8 [style = solid, label="visibles"];
5->0 [style = bold, label=""];
6->9 [style = dotted, label="true"];
35->37 [style = bold, label=""];
30->16 [style = dotted, label="true"];
11->10 [style = bold, label=""];
26->29 [style = solid, label="currEntry"];
39->40 [style = bold, label=""];
22->10 [style = bold, label=""];
5->31 [style = dashed, label="0"];
14->8 [style = bold, label=""];
25->10 [style = solid, label="rangeOfAug"];
36->37 [style = bold, label=""];
19->28 [style = bold, label=""];
14->13 [style = bold, label=""];
35->36 [style = bold, label=""];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
41->39 [style = bold, label=""];
30->16 [style = bold, label=""];
41->33 [style = dotted, label="true"];
0->21 [style = solid, label="visibles"];
32->24 [style = bold, label=""];
27->21 [style = bold, label=""];
4->40 [style = dashed, label="0"];
39->34 [style = dotted, label="true"];
1->38 [style = bold, label=""];
0->5 [style = bold, label=""];
29->31 [style = dotted, label="true"];
}
