digraph {
16 [style = filled, label = "SSTableReader s = writeFile(cfs,400)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ci.hasNext()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "validateCFS(cfs)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSmallFiles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "List<SSTableReader> sstables@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testNumberOfFiles_truncate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(cfs.getSSTables().size(),files)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sstables = rewriter.finish()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(files,cfs.getSSTables().size())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(files,sstables.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "rewriter.append(ci.next())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(files,cfs.getLiveSSTables().size())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "truncate(cfs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TransactionLogs.waitForDeletions()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Set<SSTableReader> compacting = Sets.newHashSet(s)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "files++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(files,cfs.getLiveSSTables().size())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cfs.disableAutoCompaction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(files,cfs.getSSTables().size())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 25000000@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "cfs.addSSTable(s)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "validateCFS(cfs)@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int files = 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "sstables = rewriter.finish()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 2500000@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFileCounts(s.descriptor.directory.list())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSmallFiles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
10->22 [style = bold, label=""];
24->10 [style = bold, label=""];
21->10 [style = bold, label=""];
20->17 [style = bold, label=""];
16->20 [style = solid, label="s"];
0->5 [style = dotted, label="true"];
0->26 [style = bold, label=""];
27->0 [style = bold, label=""];
3->24 [style = bold, label=""];
28->20 [style = bold, label=""];
26->29 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
7->21 [style = solid, label="files"];
1->27 [style = bold, label=""];
18->12 [style = bold, label=""];
5->6 [style = dotted, label="true"];
27->31 [style = bold, label=""];
13->25 [style = solid, label="files"];
27->13 [style = dotted, label="true"];
7->3 [style = solid, label="files"];
12->28 [style = solid, label="cfs"];
12->9 [style = bold, label=""];
16->17 [style = solid, label="s"];
30->18 [style = bold, label=""];
15->18 [style = bold, label=""];
28->17 [style = solid, label="s"];
7->6 [style = solid, label="files"];
31->11 [style = bold, label=""];
4->28 [style = bold, label=""];
5->25 [style = bold, label=""];
19->0 [style = bold, label=""];
13->3 [style = solid, label="files"];
14->7 [style = bold, label=""];
12->19 [style = solid, label="cfs"];
12->22 [style = solid, label="cfs"];
27->11 [style = dotted, label="true"];
22->8 [style = bold, label=""];
5->13 [style = dotted, label="true"];
5->27 [style = dashed, label="0"];
5->11 [style = dotted, label="true"];
5->6 [style = bold, label=""];
11->13 [style = solid, label="files"];
5->0 [style = bold, label=""];
12->31 [style = solid, label="cfs"];
5->25 [style = dotted, label="true"];
17->14 [style = bold, label=""];
25->11 [style = bold, label=""];
6->25 [style = dashed, label="0"];
0->1 [style = bold, label=""];
13->21 [style = solid, label="files"];
6->11 [style = bold, label=""];
7->25 [style = solid, label="files"];
11->13 [style = bold, label=""];
12->9 [style = solid, label="cfs"];
7->24 [style = solid, label="files"];
12->16 [style = solid, label="cfs"];
28->20 [style = solid, label="s"];
7->11 [style = solid, label="files"];
7->13 [style = solid, label="files"];
0->1 [style = dotted, label="true"];
29->10 [style = bold, label=""];
3->21 [style = bold, label=""];
13->6 [style = solid, label="files"];
27->31 [style = dotted, label="true"];
12->8 [style = solid, label="cfs"];
0->27 [style = dotted, label="true"];
16->28 [style = dashed, label="0"];
16->20 [style = bold, label=""];
21->24 [style = dashed, label="0"];
7->19 [style = bold, label=""];
23->18 [style = bold, label=""];
12->11 [style = solid, label="cfs"];
4->16 [style = bold, label=""];
13->0 [style = bold, label=""];
13->24 [style = solid, label="files"];
}
