digraph {
5 [style = filled, label = "testDoNotLoadTheSameInternalListTwice['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testUnknownExternalFileWillNotLoad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ProtectedTermsLoader localLoader = new ProtectedTermsLoader(new ProtectedTermsPreferences(ProtectedTermsLoader.getInternalLists(),Collections.singletonList(\"someUnlikelyNameThatNeverWillExist\"),Collections.emptyList(),Collections.emptyList()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ProtectedTermsLoader localLoader = new ProtectedTermsLoader(new ProtectedTermsPreferences(ProtectedTermsLoader.getInternalLists(),Collections.emptyList(),ProtectedTermsLoader.getInternalLists(),Collections.emptyList()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testUnknownExternalFileWillNotLoad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(ProtectedTermsLoader.getInternalLists().size(),localLoader.getProtectedTermsLists().size())@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3->0 [style = bold, label=""];
0->4 [style = dashed, label="0"];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
5->4 [style = bold, label=""];
0->2 [style = bold, label=""];
}
