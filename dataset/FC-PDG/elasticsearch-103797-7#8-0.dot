digraph {
20 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().getBytes() > value.length())@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "loader = new Loader(reader,0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Loader loader = new Loader(reader,0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,mappingKey,reader,termBytes)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cache.clear(entity)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "randomBoolean()@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "value = cache.getOrCompute(entity,loader,mappingKey,reader,termBytes)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(1,cache.count())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,cache.count())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,cache.count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "cache.invalidate(entity,reader,termBytes)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "reader.close()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(0L,requestCacheStats.stats().getMemorySize().getBytes())@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@56@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@58@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testBasicOperationsCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,cache.count())@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testBasicOperationsCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testInvalidate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Directory dir = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cache.cleanCache()@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "indexShard.set(false)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "loader = new Loader(reader,0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "MappingLookup.CacheKey mappingKey = MappingLookupUtils.fromTypes().cacheKey()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->22 [style = bold, label=""];
12->27 [style = bold, label=""];
43->11 [style = bold, label=""];
26->38 [style = bold, label=""];
36->59 [style = solid, label="requestCacheStats"];
26->2 [style = bold, label=""];
41->11 [style = solid, label="writer"];
56->58 [style = bold, label=""];
48->44 [style = solid, label="mappingKey"];
40->4 [style = bold, label=""];
13->6 [style = bold, label=""];
51->18 [style = bold, label=""];
32->29 [style = solid, label="termQuery"];
9->44 [style = solid, label="loader"];
6->44 [style = solid, label="entity"];
10->28 [style = bold, label=""];
25->45 [style = solid, label="loader"];
44->28 [style = bold, label=""];
5->13 [style = bold, label=""];
29->10 [style = solid, label="termBytes"];
30->45 [style = solid, label="entity"];
39->24 [style = bold, label=""];
26->38 [style = dotted, label="false"];
33->23 [style = bold, label=""];
15->16 [style = bold, label=""];
36->6 [style = solid, label="requestCacheStats"];
59->62 [style = bold, label=""];
41->21 [style = bold, label=""];
7->19 [style = bold, label=""];
29->44 [style = solid, label="termBytes"];
30->33 [style = solid, label="entity"];
33->45 [style = dashed, label="0"];
36->30 [style = solid, label="requestCacheStats"];
34->41 [style = solid, label="dir"];
19->5 [style = bold, label=""];
17->10 [style = solid, label="reader"];
47->36 [style = bold, label=""];
17->25 [style = solid, label="reader"];
60->53 [style = bold, label=""];
29->60 [style = solid, label="termBytes"];
25->33 [style = bold, label=""];
3->18 [style = bold, label=""];
27->20 [style = bold, label=""];
6->10 [style = solid, label="entity"];
49->26 [style = bold, label=""];
20->51 [style = bold, label=""];
17->11 [style = solid, label="reader"];
17->32 [style = bold, label=""];
17->45 [style = solid, label="reader"];
37->34 [style = bold, label=""];
14->30 [style = bold, label=""];
25->33 [style = solid, label="loader"];
17->57 [style = solid, label="reader"];
58->61 [style = bold, label=""];
14->6 [style = solid, label="indexShard"];
25->45 [style = bold, label=""];
3->51 [style = dashed, label="0"];
35->36 [style = bold, label=""];
2->27 [style = bold, label=""];
14->59 [style = solid, label="indexShard"];
45->23 [style = bold, label=""];
46->1 [style = bold, label=""];
29->14 [style = bold, label=""];
6->12 [style = solid, label="entity"];
32->29 [style = bold, label=""];
54->50 [style = bold, label=""];
17->33 [style = solid, label="reader"];
62->60 [style = solid, label="loader"];
48->32 [style = bold, label=""];
17->9 [style = solid, label="reader"];
17->48 [style = bold, label=""];
9->10 [style = bold, label=""];
26->12 [style = dotted, label="false"];
52->36 [style = bold, label=""];
18->15 [style = bold, label=""];
24->40 [style = bold, label=""];
20->3 [style = bold, label=""];
31->11 [style = bold, label=""];
14->30 [style = solid, label="indexShard"];
41->17 [style = solid, label="writer"];
34->11 [style = solid, label="dir"];
26->2 [style = dotted, label="true"];
11->8 [style = bold, label=""];
17->44 [style = solid, label="reader"];
34->41 [style = bold, label=""];
28->42 [style = bold, label=""];
61->55 [style = bold, label=""];
18->16 [style = bold, label=""];
10->44 [style = dashed, label="0"];
17->62 [style = solid, label="reader"];
59->60 [style = solid, label="entity"];
1->26 [style = bold, label=""];
4->46 [style = bold, label=""];
57->60 [style = bold, label=""];
62->57 [style = bold, label=""];
59->12 [style = solid, label="entity"];
29->33 [style = solid, label="termBytes"];
42->39 [style = bold, label=""];
0->46 [style = dashed, label="0"];
36->37 [style = bold, label=""];
9->44 [style = bold, label=""];
9->10 [style = solid, label="loader"];
21->17 [style = bold, label=""];
53->56 [style = bold, label=""];
29->45 [style = solid, label="termBytes"];
59->57 [style = solid, label="entity"];
30->25 [style = bold, label=""];
16->43 [style = bold, label=""];
0->1 [style = bold, label=""];
38->12 [style = bold, label=""];
6->9 [style = bold, label=""];
29->57 [style = solid, label="termBytes"];
1->59 [style = bold, label=""];
37->11 [style = solid, label="cache"];
22->7 [style = bold, label=""];
50->49 [style = bold, label=""];
16->31 [style = bold, label=""];
31->43 [style = dashed, label="0"];
48->45 [style = solid, label="mappingKey"];
17->60 [style = solid, label="reader"];
4->0 [style = bold, label=""];
55->54 [style = bold, label=""];
}
