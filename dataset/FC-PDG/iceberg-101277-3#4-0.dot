digraph {
35 [style = filled, label = "Assert.assertTrue(\"Should read: id below lower bound (28 < 30, 29 < 30)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",INT_MAX_VALUE - 4,INT_MAX_VALUE - 3)).eval(FILE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"no_nulls\",\"abc\",\"def\")).eval(FILE)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int id = -400@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertFalse(\"Should skip: in on all nulls column\",shouldRead)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"some_nulls\",\"abc\",\"def\")).eval(FILE)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertFalse(\"Should not read: id below lower bound (5 < 30, 6 < 30)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(\"Should read: id above upper bound (80 > 79, 81 > 79)\",shouldRead)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(\"Should read: notIn on some nulls column\",shouldRead)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertFalse(\"Should not read: id above upper bound (85 > 79, 86 > 79)\",shouldRead)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "id++@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"id\",INT_MAX_VALUE + 6,INT_MAX_VALUE + 7)).eval(FILE)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",ids)).eval(FILE)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",INT_MAX_VALUE + 1,INT_MAX_VALUE + 2)).eval(FILE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"id\",INT_MAX_VALUE,INT_MAX_VALUE + 1)).eval(FILE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertTrue(\"Should read: id below lower bound (5 < 30, 6 < 30)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testIntegerIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"all_nulls\",\"abc\",\"def\")).eval(FILE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testIntegerIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "Assert.assertTrue(\"Should read: notIn on all nulls column\",shouldRead)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertTrue(\"Should read: id above upper bound (85 > 79, 86 > 79)\",shouldRead)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"no_nulls\",\"abc\",\"def\")).eval(FILE)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",INT_MAX_VALUE,INT_MAX_VALUE + 1)).eval(FILE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertFalse(\"Should not read: id below lower bound (28 < 30, 29 < 30)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"id\",INT_MIN_VALUE - 2,INT_MIN_VALUE - 1)).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertTrue(\"Should read: notIn on no nulls column\",shouldRead)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertTrue(\"Should read: id equal to upper bound (79 == 79)\",shouldRead)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(\"Should read: large in expression\",shouldRead)@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Should read: id equal to lower bound (30 == 30)\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",INT_MIN_VALUE - 25,INT_MIN_VALUE - 24)).eval(FILE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ids.add(id)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"all_nulls\",\"abc\",\"def\")).eval(FILE)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(\"Should read: in on no nulls column\",shouldRead)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"id\",INT_MAX_VALUE - 4,INT_MAX_VALUE - 3)).eval(FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(\"Should read: in on some nulls column\",shouldRead)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(\"Should read: id between lower and upper bounds (30 < 75 < 79, 30 < 76 < 79)\",shouldRead)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"id\",INT_MAX_VALUE + 1,INT_MAX_VALUE + 2)).eval(FILE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "id <= 0@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "testIntegerNotIn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",INT_MIN_VALUE - 1,INT_MIN_VALUE)).eval(FILE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(\"Should not read: id above upper bound (80 > 79, 81 > 79)\",shouldRead)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",INT_MAX_VALUE + 6,INT_MAX_VALUE + 7)).eval(FILE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"id\",INT_MIN_VALUE - 25,INT_MIN_VALUE - 24)).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<Integer> ids = Lists.newArrayListWithExpectedSize(400)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,in(\"id\",INT_MIN_VALUE - 2,INT_MIN_VALUE - 1)).eval(FILE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"id\",INT_MIN_VALUE - 1,INT_MIN_VALUE)).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,notIn(\"some_nulls\",\"abc\",\"def\")).eval(FILE)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->42 [style = dashed, label="0"];
28->26 [style = solid, label="id"];
20->10 [style = bold, label=""];
3->29 [style = dashed, label="0"];
35->42 [style = bold, label=""];
14->0 [style = bold, label=""];
0->8 [style = bold, label=""];
26->23 [style = solid, label="id"];
25->26 [style = dotted, label="true"];
10->3 [style = bold, label=""];
12->16 [style = bold, label=""];
26->25 [style = bold, label=""];
19->7 [style = solid, label="shouldRead"];
46->37 [style = bold, label=""];
22->28 [style = bold, label=""];
41->38 [style = bold, label=""];
16->6 [style = bold, label=""];
19->41 [style = dashed, label="0"];
17->39 [style = dashed, label="0"];
32->0 [style = bold, label=""];
17->22 [style = bold, label=""];
4->34 [style = dashed, label="0"];
19->7 [style = bold, label=""];
31->39 [style = bold, label=""];
29->35 [style = solid, label="shouldRead"];
37->40 [style = solid, label="shouldRead"];
45->12 [style = bold, label=""];
3->11 [style = solid, label="shouldRead"];
2->36 [style = dashed, label="0"];
34->30 [style = solid, label="shouldRead"];
9->2 [style = solid, label="shouldRead"];
41->38 [style = solid, label="shouldRead"];
9->44 [style = dashed, label="0"];
38->34 [style = bold, label=""];
28->23 [style = solid, label="id"];
16->6 [style = solid, label="shouldRead"];
8->45 [style = dashed, label="0"];
23->26 [style = bold, label=""];
31->39 [style = solid, label="shouldRead"];
30->31 [style = bold, label=""];
8->12 [style = solid, label="shouldRead"];
36->41 [style = bold, label=""];
25->21 [style = bold, label=""];
21->27 [style = solid, label="shouldRead"];
37->40 [style = bold, label=""];
18->31 [style = dashed, label="0"];
15->32 [style = bold, label=""];
34->30 [style = bold, label=""];
43->33 [style = bold, label=""];
13->30 [style = dashed, label="0"];
11->35 [style = dashed, label="0"];
42->15 [style = solid, label="shouldRead"];
26->25 [style = solid, label="id"];
24->20 [style = bold, label=""];
29->35 [style = bold, label=""];
14->0 [style = solid, label="shouldRead"];
0->45 [style = bold, label=""];
44->36 [style = solid, label="shouldRead"];
2->19 [style = bold, label=""];
14->32 [style = dashed, label="0"];
18->17 [style = solid, label="shouldRead"];
15->14 [style = bold, label=""];
40->29 [style = bold, label=""];
4->13 [style = bold, label=""];
20->10 [style = solid, label="shouldRead"];
11->5 [style = bold, label=""];
6->33 [style = dashed, label="0"];
25->23 [style = bold, label=""];
3->11 [style = bold, label=""];
16->43 [style = dashed, label="0"];
8->12 [style = bold, label=""];
5->15 [style = solid, label="shouldRead"];
32->0 [style = solid, label="shouldRead"];
20->37 [style = dashed, label="0"];
9->2 [style = bold, label=""];
45->12 [style = solid, label="shouldRead"];
4->13 [style = solid, label="shouldRead"];
33->44 [style = bold, label=""];
13->18 [style = bold, label=""];
10->40 [style = dashed, label="0"];
6->9 [style = bold, label=""];
7->38 [style = dashed, label="0"];
7->4 [style = bold, label=""];
21->27 [style = bold, label=""];
43->33 [style = solid, label="shouldRead"];
18->17 [style = bold, label=""];
42->15 [style = bold, label=""];
12->43 [style = bold, label=""];
44->36 [style = bold, label=""];
1->20 [style = bold, label=""];
28->25 [style = solid, label="id"];
25->23 [style = dotted, label="true"];
28->25 [style = bold, label=""];
5->15 [style = bold, label=""];
}
