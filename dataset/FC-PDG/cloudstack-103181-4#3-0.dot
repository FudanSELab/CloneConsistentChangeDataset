digraph {
11 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fail(e.getMessage())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final LibvirtException e@@@10@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(wrapper)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRebootCommandException2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final LibvirtException e@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(vmName)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testAttachIsoCommandInternalErrorException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BDDMockito.given(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).willAnswer(null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "final RebootCommand command = new RebootCommand(vmName,true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(vmName)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String vmName = \"Test\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(e.getMessage())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenReturn(conn)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "when(libvirtComputingResource.rebootVM(conn,command.getVmName())).thenThrow()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertFalse(answer.getResult())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final Connect conn = Mockito.mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "fail(e.getMessage())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testAttachIsoCommandInternalErrorException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6->26 [style = bold, label=""];
25->27 [style = solid, label="conn"];
6->26 [style = solid, label="vmName"];
6->22 [style = solid, label="vmName"];
23->27 [style = bold, label=""];
24->2 [style = bold, label=""];
4->1 [style = dotted, label="true"];
5->12 [style = solid, label="vmName"];
8->18 [style = bold, label=""];
12->22 [style = bold, label=""];
12->15 [style = bold, label=""];
11->9 [style = solid, label="wrapper"];
18->12 [style = bold, label=""];
6->0 [style = bold, label=""];
6->18 [style = solid, label="command"];
10->27 [style = dashed, label="0"];
11->9 [style = bold, label=""];
9->8 [style = bold, label=""];
15->16 [style = bold, label=""];
13->11 [style = bold, label=""];
3->0 [style = solid, label="libvirtUtilitiesHelper"];
2->13 [style = solid, label="wrapper"];
7->3 [style = bold, label=""];
19->25 [style = bold, label=""];
2->13 [style = bold, label=""];
21->12 [style = bold, label=""];
5->16 [style = solid, label="vmName"];
5->23 [style = solid, label="libvirtUtilitiesHelper"];
0->10 [style = bold, label=""];
3->5 [style = bold, label=""];
0->14 [style = bold, label=""];
5->6 [style = bold, label=""];
6->26 [style = dashed, label="0"];
9->8 [style = solid, label="wrapper"];
26->23 [style = bold, label=""];
6->11 [style = solid, label="command"];
17->3 [style = bold, label=""];
8->21 [style = bold, label=""];
26->8 [style = solid, label="command"];
25->5 [style = bold, label=""];
14->9 [style = bold, label=""];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
13->9 [style = bold, label=""];
24->2 [style = dotted, label="true"];
27->20 [style = bold, label=""];
2->11 [style = bold, label=""];
8->12 [style = bold, label=""];
2->13 [style = dotted, label="true"];
10->14 [style = dashed, label="0"];
5->6 [style = solid, label="vmName"];
20->11 [style = bold, label=""];
}
