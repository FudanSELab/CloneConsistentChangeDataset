digraph {
4 [style = filled, label = "props.setProperty(CombineRetentionPolicy.RETENTION_POLICIES_PREFIX + \"1\",.getCanonicalName())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testIntersect['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Properties props = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(deletableVersions.size(),2)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "props.setProperty(CombineRetentionPolicy.DELETE_SETS_COMBINE_OPERATION,CombineRetentionPolicy.DeletableCombineOperation.INTERSECT.name())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testUnion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Collection<DatasetVersion> deletableVersions = policy.listDeletableVersions(Lists.newArrayList(new StringDatasetVersion(\"a\",new Path(\"/\")),new StringDatasetVersion(\"abc\",new Path(\"/\")),new StringDatasetVersion(\"abcd\",new Path(\"/\")),new StringDatasetVersion(\"bc\",new Path(\"/\")),new StringDatasetVersion(\"d\",new Path(\"/\"))))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(actualDeletableVersions,Sets.newHashSet(\"abcd\",\"abc\"))@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Collection<DatasetVersion> deletableVersions = policy.listDeletableVersions(Lists.newArrayList(new StringDatasetVersion(\"a\",new Path(\"/\")),new StringDatasetVersion(\"abc\",new Path(\"/\")),new StringDatasetVersion(\"abcd\",new Path(\"/\")),new StringDatasetVersion(\"bc\",new Path(\"/\")),new StringDatasetVersion(\"d\",new Path(\"/\"))))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CombineRetentionPolicy<DatasetVersion> policy = new CombineRetentionPolicy<>(props)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "props.setProperty(CombineRetentionPolicy.DELETE_SETS_COMBINE_OPERATION,CombineRetentionPolicy.DeletableCombineOperation.UNION.name())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "props.setProperty(CombineRetentionPolicy.RETENTION_POLICIES_PREFIX + \"2\",.getCanonicalName())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CombineRetentionPolicy policy = new CombineRetentionPolicy(props)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(policy.versionClass(),)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Set<String> actualDeletableVersions = deletableVersions.stream().map(null).collect(Collectors.toSet())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testIntersect['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(policy.versionClass(),)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(deletableVersions.size(),2)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Set<String> actualDeletableVersions = Sets.newHashSet(Iterables.transform(deletableVersions,new Function<DatasetVersion,String>(){@Nullable @Override public String apply(DatasetVersion input){return ((StringDatasetVersion)input).getVersion()}}))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(deletableVersions.size(),4)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(actualDeletableVersions,Sets.newHashSet(\"abcd\",\"abc\"))@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(actualDeletableVersions,Sets.newHashSet(\"abcd\",\"abc\",\"a\",\"bc\"))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "props.setProperty(CombineRetentionPolicy.RETENTION_POLICIES_PREFIX + \"3\",.getCanonicalName())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
1->5 [style = solid, label="props"];
6->21 [style = dashed, label="0"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
16->18 [style = bold, label=""];
2->20 [style = dashed, label="0"];
11->1 [style = bold, label=""];
0->19 [style = bold, label=""];
7->17 [style = dashed, label="0"];
10->19 [style = dashed, label="0"];
8->15 [style = dashed, label="0"];
18->12 [style = bold, label=""];
8->6 [style = bold, label=""];
15->12 [style = solid, label="actualDeletableVersions"];
2->9 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
3->0 [style = bold, label=""];
14->1 [style = bold, label=""];
6->2 [style = bold, label=""];
8->20 [style = solid, label="actualDeletableVersions"];
19->5 [style = bold, label=""];
13->17 [style = bold, label=""];
0->10 [style = bold, label=""];
21->20 [style = bold, label=""];
10->5 [style = bold, label=""];
1->13 [style = solid, label="props"];
10->13 [style = bold, label=""];
8->9 [style = solid, label="actualDeletableVersions"];
17->15 [style = bold, label=""];
8->21 [style = bold, label=""];
5->7 [style = bold, label=""];
22->1 [style = bold, label=""];
7->8 [style = solid, label="deletableVersions"];
}
