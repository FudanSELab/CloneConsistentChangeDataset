digraph {
7 [style = filled, label = "Thread.sleep(100)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "waitThread.interrupt()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final ConstantTimeBackoff backoff = new ConstantTimeBackoff()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "waitBeforeRetryWithInterrupt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "backoff.waitBeforeRetry()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(backoff.getWaiters().isEmpty())@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Thread waitThread = new Thread(new Runnable(){@Override public void run(){backoff.waitBeforeRetry()}})@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Thread.sleep(100)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "waitBeforeRetryWithInterrupt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(backoff.getWaiters().isEmpty())@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "backoff.setTimeToWait(10)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "backoff.setTimeToWait(0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertFalse(backoff.getWaiters().isEmpty())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Thread.sleep(TIMEOUT_AFTER_INTERUPT)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "waitThread.start()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int TIMEOUT_AFTER_INTERUPT = 500@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "waitBeforeRetry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(backoff.getWaiters().isEmpty())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->17 [style = dashed, label="0"];
10->17 [style = bold, label=""];
0->8 [style = bold, label=""];
5->9 [style = bold, label=""];
10->3 [style = bold, label=""];
3->6 [style = bold, label=""];
6->16 [style = bold, label=""];
13->12 [style = bold, label=""];
8->2 [style = bold, label=""];
16->1 [style = bold, label=""];
17->6 [style = bold, label=""];
7->0 [style = bold, label=""];
2->1 [style = bold, label=""];
8->13 [style = bold, label=""];
6->5 [style = bold, label=""];
4->10 [style = bold, label=""];
12->11 [style = bold, label=""];
13->12 [style = solid, label="TIMEOUT_AFTER_INTERUPT"];
14->10 [style = bold, label=""];
15->10 [style = bold, label=""];
9->7 [style = bold, label=""];
}
