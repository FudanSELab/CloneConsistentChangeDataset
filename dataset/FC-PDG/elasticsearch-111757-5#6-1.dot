digraph {
27 [style = filled, label = "Consumer<Value> orderedModeCallback@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "objectParser.declareNamedObjects(queueingConsumer(consumer,parseField),namedObjectParser,parseField)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "isConstructorArg(consumer)@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "namedObjectParser == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "consumer == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "NamedObjectParser<T,Context> namedObjectParser@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "numberOfFields += 1@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new IllegalArgumentException(\"(parser( is required\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "objectParser.declareNamedObjects(queueingConsumer(consumer,parseField),namedObjectParser,wrapOrderedModeCallBack(orderedModeCallback),parseField)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "parseField == null@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "declareNamedObjects['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "NamedObjectParser<T,Context> namedObjectParser@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "throw new IllegalArgumentException(\"(orderedModeCallback( is required\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "declareNamedObjects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "BiConsumer<Value,List<T>> consumer@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ParseField parseField@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "objectParser.declareNamedObjects(null,namedObjectParser,parseField)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "BiConsumer<Value,List<T>> consumer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ParseField parseField@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "orderedModeCallback == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw new IllegalArgumentException(\"(parseField( is required\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ParseField parseField@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "throw new IllegalArgumentException(\"(consumer( is required\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "objectParser.declareNamedObjects(null,namedObjectParser,wrapOrderedModeCallBack(orderedModeCallback),parseField)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "declareNamedObjects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<RestApiCompatibleVersion,Integer> positions = addConstructorArg(consumer,parseField)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BiConsumer<Value,List<T>> consumer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Map<RestApiVersion,Integer> positions = addConstructorArg(consumer,parseField)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->5 [style = dotted, label="true"];
11->14 [style = bold, label=""];
4->7 [style = solid, label="consumer"];
10->13 [style = solid, label="namedObjectParser"];
2->23 [style = dotted, label="true"];
27->22 [style = solid, label="orderedModeCallback"];
18->8 [style = solid, label="namedObjectParser"];
10->27 [style = dashed, label="0"];
7->8 [style = bold, label=""];
16->10 [style = dotted, label="true"];
10->0 [style = solid, label="namedObjectParser"];
19->24 [style = bold, label=""];
10->17 [style = solid, label="consumer"];
19->1 [style = bold, label=""];
16->14 [style = bold, label=""];
15->13 [style = solid, label="parseField"];
2->8 [style = dotted, label="true"];
10->14 [style = solid, label="consumer"];
25->23 [style = solid, label="parseField"];
14->12 [style = dotted, label="true"];
9->2 [style = bold, label=""];
7->17 [style = dashed, label="0"];
0->19 [style = bold, label=""];
11->10 [style = dotted, label="true"];
26->14 [style = bold, label=""];
26->20 [style = dotted, label="true"];
6->8 [style = solid, label="parseField"];
21->2 [style = solid, label="consumer"];
5->1 [style = bold, label=""];
21->22 [style = solid, label="consumer"];
7->23 [style = bold, label=""];
4->14 [style = solid, label="consumer"];
10->2 [style = solid, label="consumer"];
4->13 [style = solid, label="consumer"];
16->18 [style = dotted, label="true"];
21->14 [style = solid, label="consumer"];
2->17 [style = bold, label=""];
17->8 [style = bold, label=""];
6->1 [style = solid, label="parseField"];
21->7 [style = solid, label="consumer"];
26->27 [style = dotted, label="true"];
2->3 [style = bold, label=""];
2->3 [style = dotted, label="false"];
11->4 [style = dotted, label="true"];
19->24 [style = dotted, label="true"];
6->7 [style = solid, label="parseField"];
15->8 [style = solid, label="parseField"];
1->9 [style = bold, label=""];
5->19 [style = bold, label=""];
11->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
1->9 [style = dotted, label="true"];
10->13 [style = solid, label="consumer"];
4->2 [style = solid, label="consumer"];
1->2 [style = bold, label=""];
24->1 [style = bold, label=""];
0->5 [style = bold, label=""];
16->15 [style = dotted, label="true"];
20->0 [style = solid, label="namedObjectParser"];
25->22 [style = solid, label="parseField"];
25->7 [style = solid, label="parseField"];
26->25 [style = dotted, label="true"];
10->8 [style = solid, label="namedObjectParser"];
2->17 [style = dotted, label="true"];
25->1 [style = solid, label="parseField"];
27->19 [style = solid, label="orderedModeCallback"];
3->22 [style = bold, label=""];
12->0 [style = bold, label=""];
15->1 [style = solid, label="parseField"];
20->22 [style = solid, label="namedObjectParser"];
20->23 [style = solid, label="namedObjectParser"];
27->23 [style = solid, label="orderedModeCallback"];
14->0 [style = bold, label=""];
26->21 [style = dotted, label="true"];
2->22 [style = dotted, label="false"];
2->7 [style = dotted, label="true"];
14->12 [style = bold, label=""];
18->0 [style = solid, label="namedObjectParser"];
18->13 [style = solid, label="namedObjectParser"];
3->13 [style = bold, label=""];
2->7 [style = bold, label=""];
13->22 [style = dashed, label="0"];
15->17 [style = solid, label="parseField"];
6->13 [style = solid, label="parseField"];
8->23 [style = dashed, label="0"];
2->13 [style = dotted, label="false"];
}
