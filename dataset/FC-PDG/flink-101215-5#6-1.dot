digraph {
18 [style = filled, label = "testConvergenceCriterionWithParameterForIterate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "iteration.closeWith(updatedDs).writeAsText(resultPath)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DataSet<Integer> initialSolutionSet = CollectionDataSets.getIntegerDataSet(env)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LongSumAggregatorWithParameter aggr = new LongSumAggregatorWithParameter(0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expected = \"-3\" + \"-2\" + \"-2\" + \"-1\" + \"-1\" + \"-1\" + \"0\" + \"0\" + \"0\" + \"0\" + \"1\" + \"1\" + \"1\" + \"1\" + \"1\"@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Integer> expected = Arrays.asList(-3,-2,-2,-1,-1,-1,0,0,0,0,1,1,1,1,1)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "DataSet<Integer> updatedDs = iteration.map(new SubtractOneMap())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "iteration.registerAggregationConvergenceCriterion(NEGATIVE_ELEMENTS_AGGR,aggr,new NegativeElementsConvergenceCriterion())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collections.sort(result)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "env.setParallelism(parallelism)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "iteration.registerAggregator(NEGATIVE_ELEMENTS_AGGR,aggr)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DataSet<Integer> updatedDs = iteration.map(new SubtractOneMapWithParam())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testAggregatorWithParameterForIterate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testAggregatorWithParameterForIterate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IterativeDataSet<Integer> iteration = initialSolutionSet.iterate(MAX_ITERATIONS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "iteration.registerAggregationConvergenceCriterion(NEGATIVE_ELEMENTS_AGGR,aggr,new NegativeElementsConvergenceCriterionWithParam(3))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "env.execute()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(expected,result)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "List<Integer> result = iteration.closeWith(updatedDs).collect()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "LongSumAggregator aggr = new LongSumAggregator()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
8->19 [style = dashed, label="0"];
10->20 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
7->17 [style = bold, label=""];
9->11 [style = bold, label=""];
2->3 [style = bold, label=""];
9->5 [style = solid, label="env"];
4->2 [style = bold, label=""];
0->20 [style = dashed, label="0"];
13->16 [style = bold, label=""];
17->19 [style = bold, label=""];
4->12 [style = dashed, label="0"];
0->7 [style = bold, label=""];
20->7 [style = solid, label="aggr"];
12->15 [style = solid, label="result"];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
1->17 [style = dashed, label="0"];
16->15 [style = solid, label="expected"];
12->13 [style = solid, label="result"];
10->0 [style = bold, label=""];
0->7 [style = solid, label="aggr"];
18->9 [style = bold, label=""];
14->9 [style = bold, label=""];
19->4 [style = bold, label=""];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
20->7 [style = bold, label=""];
20->17 [style = solid, label="aggr"];
8->12 [style = bold, label=""];
0->1 [style = solid, label="aggr"];
}
