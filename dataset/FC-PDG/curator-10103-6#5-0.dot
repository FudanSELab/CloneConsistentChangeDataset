digraph {
15 [style = filled, label = "client.setData().forPath(\"/test\",\"foo\".getBytes())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.create().forPath(\"/test\")@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "client.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Timing timing = new Timing()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "CuratorWatcher actualWatcher = mock()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "client.delete().forPath(\"/test\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSameWatcherPerZKDocs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Mockito.verify(actualWatcher,Mockito.timeout(TIMEOUT_MS).times(1)).process(any())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@21@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.delete().forPath(\"/test\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSameCuratorWatcherPerZKDocs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.checkExists().usingWatcher(actualWatcher).forPath(\"/test\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CountZKWatcher actualWatcher = new CountZKWatcher()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "timing.sleepABit()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CountCuratorWatcher actualWatcher = new CountCuratorWatcher()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(actualWatcher.count.get(),1)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(actualWatcher.count.getAndSet(0),1)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSameCuratorWatcherPerZKDocs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "client.create().forPath(\"/test\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "timing.sleepABit()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.checkExists().usingWatcher(actualWatcher).forPath(\"/test\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.create().forPath(\"/test\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.getData().usingWatcher(actualWatcher).forPath(\"/test\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
8->16 [style = bold, label=""];
5->10 [style = bold, label=""];
16->13 [style = bold, label=""];
4->6 [style = bold, label=""];
3->14 [style = bold, label=""];
8->20 [style = dashed, label="0"];
13->10 [style = solid, label="client"];
8->24 [style = dashed, label="0"];
7->8 [style = bold, label=""];
12->0 [style = bold, label=""];
11->15 [style = bold, label=""];
14->1 [style = bold, label=""];
1->11 [style = bold, label=""];
24->16 [style = bold, label=""];
23->24 [style = bold, label=""];
20->16 [style = bold, label=""];
13->3 [style = bold, label=""];
17->2 [style = bold, label=""];
22->20 [style = bold, label=""];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
9->19 [style = bold, label=""];
9->12 [style = bold, label=""];
13->18 [style = solid, label="client"];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
21->4 [style = bold, label=""];
19->21 [style = bold, label=""];
}
