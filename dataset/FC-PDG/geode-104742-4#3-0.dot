digraph {
16 [style = filled, label = "++i@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testIndexMaintenanceBasedOnThresholdAsZero['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "++i@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "region.put(\"\" + (i + 1),new Portfolio(i + 1))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "region.clear()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < 3@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "getProperties().put(GEMFIRE_PREFIX + \"AsynchIndexMaintenanceThreshold\",\"0\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Wait.waitForCriterion(evClear,17 * 1000,200,true)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "region.put(\"\" + (i + 1),new Portfolio(i + 1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "GeodeAwaitility.await().untilAsserted(ev)@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "System.getProperties().put(DistributionConfig.GEMFIRE_PREFIX + \"AsynchIndexMaintenanceInterval\",\"10000\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "WaitCriterion ev = new WaitCriterion(){public boolean done(){return (getIndexSize(ri) == 3)}public String description(){return \"valueToEntries map never became size 3\"}}@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "idSet.add((i + 1) + \"\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testIndexMaintenanceBasedOnTimeInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "WaitCriterion evClear = new WaitCriterion(){public boolean done(){return (getIndexSize(ri) == 0)}public String description(){return \"valueToEntriesMap never became size :\" + 0}}@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testIndexMaintenanceBasedOnThresholdAsZero['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "System.getProperties().put(DistributionConfig.GEMFIRE_PREFIX + \"AsynchIndexMaintenanceThreshold\",\"0\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getProperties().put(GEMFIRE_PREFIX + \"AsynchIndexMaintenanceInterval\",\"60000\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final Index ri = (Index)qs.createIndex(\"statusIndex\",FUNCTIONAL,\"p.getID\",\"/portfolio p\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "WaitCriterion evSize = new WaitCriterion(){public boolean done(){return (getIndexSize(ri) == size)}public String description(){return \"valueToEntriesMap never became size :\" + size}}@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Index ri = (Index)qs.createIndex(\"statusIndex\",IndexType.FUNCTIONAL,\"p.getID\",\"/portfolio p\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Wait.waitForCriterion(ev,10 * 1000,200,true)@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final int size = 5@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Wait.waitForCriterion(evSize,17 * 1000,200,true)@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "System.getProperties().put(DistributionConfig.GEMFIRE_PREFIX + \"AsynchIndexMaintenanceInterval\",\"60000\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "idSet.add((i + 1) + \"\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "System.getProperties().put(DistributionConfig.GEMFIRE_PREFIX + \"AsynchIndexMaintenanceThreshold\",\"-1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int i = 0@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "i < size@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i < size@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Wait.waitForCriterion(evSize,17 * 1000,200,true)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->0 [style = solid, label="i"];
28->29 [style = bold, label=""];
5->4 [style = solid, label="ri"];
6->21 [style = dashed, label="0"];
9->30 [style = solid, label="i"];
30->1 [style = dotted, label="true"];
24->29 [style = solid, label="size"];
9->0 [style = bold, label=""];
30->1 [style = bold, label=""];
5->9 [style = bold, label=""];
28->25 [style = solid, label="i"];
0->10 [style = dotted, label="true"];
7->10 [style = bold, label=""];
30->7 [style = dotted, label="true"];
30->10 [style = dotted, label="true"];
2->3 [style = bold, label=""];
16->29 [style = bold, label=""];
5->22 [style = solid, label="ri"];
4->31 [style = dashed, label="0"];
3->6 [style = bold, label=""];
9->30 [style = bold, label=""];
24->31 [style = solid, label="size"];
6->14 [style = dashed, label="0"];
9->1 [style = solid, label="i"];
28->29 [style = solid, label="i"];
25->16 [style = bold, label=""];
27->22 [style = bold, label=""];
1->7 [style = bold, label=""];
31->26 [style = solid, label="evSize"];
18->28 [style = bold, label=""];
3->13 [style = dashed, label="0"];
19->25 [style = bold, label=""];
24->30 [style = solid, label="size"];
22->18 [style = solid, label="evClear"];
29->26 [style = bold, label=""];
3->23 [style = dashed, label="0"];
12->13 [style = bold, label=""];
21->5 [style = bold, label=""];
6->5 [style = bold, label=""];
29->19 [style = dotted, label="true"];
22->18 [style = bold, label=""];
29->25 [style = dotted, label="true"];
29->19 [style = bold, label=""];
20->23 [style = bold, label=""];
23->21 [style = bold, label=""];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
30->31 [style = bold, label=""];
0->1 [style = bold, label=""];
5->24 [style = bold, label=""];
15->4 [style = solid, label="ri"];
10->0 [style = bold, label=""];
5->31 [style = solid, label="ri"];
28->19 [style = solid, label="i"];
0->30 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
4->8 [style = bold, label=""];
14->15 [style = bold, label=""];
4->8 [style = solid, label="ev"];
9->7 [style = solid, label="i"];
31->17 [style = bold, label=""];
17->27 [style = bold, label=""];
4->11 [style = bold, label=""];
5->15 [style = dashed, label="0"];
13->14 [style = bold, label=""];
10->30 [style = bold, label=""];
29->16 [style = dotted, label="true"];
4->11 [style = solid, label="ev"];
31->17 [style = solid, label="evSize"];
24->9 [style = bold, label=""];
0->7 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
}
