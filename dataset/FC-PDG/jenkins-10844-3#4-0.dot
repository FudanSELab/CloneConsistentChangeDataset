digraph {
0 [style = filled, label = "String contextPath = \"/jenkins\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(view.getOwnerItemGroup()).thenReturn(parent)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mockStatic()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(view.getItems()).thenReturn(Arrays.asList(i))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "View view = mock()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "createMockAncestors(req,createAncestor(view,\".\"),createAncestor(j,\"../..\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(view.getOwner()).thenReturn(j)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\",\"parent/job/i/\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(j.getItemGroup()).thenReturn(j)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"job/i/\",result)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"job/i/\",result)@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0->5 [style = solid, label="req"];
9->18 [style = dashed, label="0"];
13->21 [style = solid, label="j"];
8->9 [style = bold, label=""];
15->9 [style = bold, label=""];
23->19 [style = bold, label=""];
10->6 [style = bold, label=""];
9->4 [style = bold, label=""];
10->9 [style = solid, label="parent"];
2->21 [style = solid, label="view"];
3->2 [style = bold, label=""];
13->9 [style = solid, label="j"];
6->0 [style = solid, label="contextPath"];
7->22 [style = solid, label="result"];
13->23 [style = bold, label=""];
4->11 [style = bold, label=""];
9->11 [style = solid, label="i"];
0->1 [style = solid, label="contextPath"];
6->0 [style = bold, label=""];
14->13 [style = bold, label=""];
16->15 [style = bold, label=""];
0->9 [style = solid, label="req"];
19->0 [style = bold, label=""];
7->22 [style = bold, label=""];
1->21 [style = solid, label="req"];
4->7 [style = solid, label="i"];
0->1 [style = bold, label=""];
3->8 [style = solid, label="view"];
4->11 [style = solid, label="i"];
8->21 [style = bold, label=""];
2->8 [style = bold, label=""];
12->13 [style = bold, label=""];
11->7 [style = bold, label=""];
23->18 [style = solid, label="parent"];
9->4 [style = solid, label="i"];
8->21 [style = dashed, label="0"];
3->9 [style = solid, label="view"];
2->16 [style = dashed, label="0"];
20->13 [style = bold, label=""];
21->18 [style = bold, label=""];
18->7 [style = solid, label="i"];
13->15 [style = solid, label="j"];
13->16 [style = solid, label="j"];
10->4 [style = solid, label="parent"];
7->17 [style = bold, label=""];
18->11 [style = bold, label=""];
18->11 [style = solid, label="i"];
13->10 [style = solid, label="j"];
23->8 [style = solid, label="parent"];
5->3 [style = bold, label=""];
10->2 [style = solid, label="parent"];
13->8 [style = solid, label="j"];
11->7 [style = solid, label="result"];
1->3 [style = solid, label="req"];
13->10 [style = bold, label=""];
7->17 [style = solid, label="result"];
3->16 [style = bold, label=""];
10->23 [style = dashed, label="0"];
0->8 [style = solid, label="req"];
23->21 [style = solid, label="parent"];
1->5 [style = bold, label=""];
}
