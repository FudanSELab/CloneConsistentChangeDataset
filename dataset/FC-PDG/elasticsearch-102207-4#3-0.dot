digraph {
21 [style = filled, label = "ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx,shardId),null,true,ShardRoutingState.UNASSIGNED,RecoverySource.LocalShardsRecoverySource.INSTANCE)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\",0,null,true,ShardRoutingState.UNASSIGNED)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(\"source primary shard ((source((\" + sourceShardId + \"(( is not active\",resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation).getExplanation())@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int sourceShardId = IndexMetaData.selectSplitShard(shardId,clusterState.metaData().index(\"source\"),4).id()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSourceNotActive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "routingTableBuilder.addAsNew(metaData.index(\"target\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Decision.ALWAYS,resizeAllocationDecider.canAllocate(shardRouting,routingAllocation))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ClusterState clusterState = createInitialClusterState(false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "routingAllocation.debugDecision(true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RoutingAllocation routingAllocation = new RoutingAllocation(null,clusterState.getRoutingNodes(),clusterState,null,0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testNonResizeRouting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "MetaData metaData = metaBuilder.build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT).put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(),\"source\").put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY,IndexMetaData.INDEX_UUID_NA_VALUE)).numberOfShards(4).numberOfReplicas(0))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Index idx = clusterState.metaData().index(\"target\").getIndex()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ClusterState clusterState = createInitialClusterState(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testSourceNotActive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "clusterState = ClusterState.builder(clusterState).routingTable(routingTableBuilder.build()).metaData(metaData).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Decision.NO,resizeAllocationDecider.canAllocate(shardRouting,routingAllocation))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "RoutingAllocation routingAllocation = new RoutingAllocation(null,null,clusterState,null,0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int shardId = randomIntBetween(0,3)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"source primary shard ((source((\" + sourceShardId + \"(( is not active\",resizeAllocationDecider.canAllocate(shardRouting,routingAllocation).getExplanation())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Decision.ALWAYS,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"source primary shard ((source((\" + sourceShardId + \"(( is not active\",resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node0\"),routingAllocation).getExplanation())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Decision.NO,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx,shardId),null,true,RecoverySource.LocalShardsRecoverySource.INSTANCE,ShardRoutingState.UNASSIGNED)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Decision.NO,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node2\"),routingAllocation))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->13 [style = solid, label="shardRouting"];
29->27 [style = solid, label="routingAllocation"];
5->20 [style = solid, label="routingAllocation"];
1->8 [style = bold, label=""];
16->11 [style = bold, label=""];
23->27 [style = bold, label=""];
9->2 [style = bold, label=""];
17->9 [style = bold, label=""];
11->26 [style = dashed, label="0"];
21->8 [style = bold, label=""];
1->13 [style = solid, label="shardRouting"];
10->3 [style = bold, label=""];
28->26 [style = bold, label=""];
11->12 [style = bold, label=""];
4->1 [style = solid, label="shardId"];
0->21 [style = bold, label=""];
24->29 [style = bold, label=""];
29->23 [style = bold, label=""];
1->21 [style = dashed, label="0"];
5->29 [style = dashed, label="0"];
15->19 [style = bold, label=""];
26->24 [style = bold, label=""];
12->6 [style = bold, label=""];
29->25 [style = solid, label="routingAllocation"];
9->5 [style = solid, label="clusterState"];
4->0 [style = bold, label=""];
20->18 [style = bold, label=""];
7->5 [style = bold, label=""];
26->29 [style = solid, label="clusterState"];
1->20 [style = solid, label="shardRouting"];
2->21 [style = solid, label="idx"];
0->1 [style = bold, label=""];
5->8 [style = solid, label="routingAllocation"];
6->10 [style = bold, label=""];
23->27 [style = solid, label="shardRouting"];
5->4 [style = bold, label=""];
23->25 [style = solid, label="shardRouting"];
0->14 [style = solid, label="sourceShardId"];
0->19 [style = solid, label="sourceShardId"];
3->17 [style = bold, label=""];
14->15 [style = bold, label=""];
2->7 [style = bold, label=""];
4->21 [style = solid, label="shardId"];
21->20 [style = solid, label="shardRouting"];
2->1 [style = solid, label="idx"];
21->8 [style = solid, label="shardRouting"];
0->15 [style = solid, label="sourceShardId"];
18->14 [style = bold, label=""];
22->11 [style = bold, label=""];
27->25 [style = bold, label=""];
8->13 [style = bold, label=""];
1->8 [style = solid, label="shardRouting"];
5->13 [style = solid, label="routingAllocation"];
13->20 [style = bold, label=""];
}
