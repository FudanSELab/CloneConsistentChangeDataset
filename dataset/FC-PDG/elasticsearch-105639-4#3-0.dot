digraph {
5 [style = filled, label = "verifyZeroInteractions(transportService)@@@27@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "indexRequest.setPipeline(\"testpipeline\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "completionHandler.getValue().accept(exception)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "singleItemBulkWriteAction.execute(null,indexRequest,ActionListener.wrap(null,null))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexRequest indexRequest = new IndexRequest(\"index\",\"type\",\"id\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AtomicBoolean failureCalled = new AtomicBoolean(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(failureCalled.get())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "completionHandler.getValue().accept(null)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(responseCalled.get())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(ingestService).executeBulkRequest(bulkDocsItr.capture(),failureHandler.capture(),completionHandler.capture(),any())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(action.isExecuted)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(failureCalled.get())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "validateDefaultPipeline['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "indexRequest.source(Collections.emptyMap())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSingleItemBulkActionIngestLocal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFalse(action.isExecuted)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AtomicBoolean responseCalled = new AtomicBoolean(false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNull(indexRequest.getPipeline())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(indexRequest.getPipeline(),\"default_pipeline\")@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertFalse(responseCalled.get())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IndexRequest indexRequest@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "indexRequest.setPipeline(IngestService.NOOP_PIPELINE_NAME)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Exception exception = new Exception(\"fake exception\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "validateDefaultPipeline['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20->3 [style = dotted, label="true"];
23->15 [style = bold, label=""];
22->4 [style = solid, label="indexRequest"];
3->4 [style = solid, label="indexRequest"];
8->0 [style = bold, label=""];
2->13 [style = bold, label=""];
15->12 [style = bold, label=""];
20->15 [style = bold, label=""];
7->16 [style = bold, label=""];
12->21 [style = bold, label=""];
1->18 [style = bold, label=""];
10->11 [style = bold, label=""];
15->22 [style = bold, label=""];
11->7 [style = bold, label=""];
16->2 [style = bold, label=""];
19->16 [style = bold, label=""];
17->15 [style = bold, label=""];
4->9 [style = bold, label=""];
14->8 [style = bold, label=""];
1->4 [style = bold, label=""];
12->6 [style = bold, label=""];
15->16 [style = solid, label="exception"];
7->19 [style = bold, label=""];
0->5 [style = bold, label=""];
22->12 [style = bold, label=""];
13->14 [style = bold, label=""];
17->3 [style = dotted, label="true"];
21->6 [style = bold, label=""];
6->1 [style = bold, label=""];
18->4 [style = bold, label=""];
9->10 [style = bold, label=""];
}
