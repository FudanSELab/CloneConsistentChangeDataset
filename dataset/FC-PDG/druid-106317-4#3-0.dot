digraph {
7 [style = filled, label = "Assert.assertEquals(expected,fold2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(expected,fold1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertSerDe(fold2)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final ColumnAnalysis expected = new ColumnAnalysis(\"STRING\",false,false,-1L,null,null,null,\"error:foo\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testFoldErrorAndNoError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ColumnAnalysis analysis2 = new ColumnAnalysis(\"STRING\",false,false,2L,2,\"a\",\"z\",null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "ColumnAnalysis fold2 = analysis2.fold(analysis1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ColumnAnalysis analysis2 = new ColumnAnalysis(\"STRING\",false,2L,2,\"a\",\"z\",null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertSerDe(analysis1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ColumnAnalysis expected = new ColumnAnalysis(\"STRING\",false,-1L,null,null,null,\"error:foo\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSerDe(fold1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testFoldErrorAndNoError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final ColumnAnalysis analysis2 = ColumnAnalysis.error(\"foo\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ColumnAnalysis fold1 = analysis1.fold(analysis2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testFoldSameErrors['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final ColumnAnalysis analysis1 = ColumnAnalysis.error(\"foo\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertSerDe(analysis2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
8->10 [style = bold, label=""];
15->2 [style = bold, label=""];
4->10 [style = solid, label="fold2"];
11->8 [style = solid, label="fold1"];
0->6 [style = bold, label=""];
1->15 [style = dashed, label="0"];
6->9 [style = solid, label="expected"];
0->12 [style = bold, label=""];
11->4 [style = bold, label=""];
1->0 [style = solid, label="analysis2"];
12->11 [style = bold, label=""];
11->9 [style = solid, label="fold1"];
5->15 [style = bold, label=""];
12->7 [style = solid, label="expected"];
13->11 [style = solid, label="analysis2"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
5->4 [style = solid, label="analysis1"];
6->12 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
15->11 [style = solid, label="analysis2"];
1->11 [style = solid, label="analysis2"];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
13->0 [style = solid, label="analysis2"];
6->11 [style = bold, label=""];
5->13 [style = bold, label=""];
13->2 [style = bold, label=""];
16->5 [style = bold, label=""];
15->0 [style = solid, label="analysis2"];
5->2 [style = solid, label="analysis1"];
1->2 [style = bold, label=""];
12->9 [style = solid, label="expected"];
4->7 [style = solid, label="fold2"];
14->5 [style = bold, label=""];
6->7 [style = solid, label="expected"];
}
