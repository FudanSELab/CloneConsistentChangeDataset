digraph {
18 [style = filled, label = "assertThat(client2Versions).contains(tag)@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "client2.invoke(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(client1Versions.size()).isEqualTo(ONE_HUNDRED * 2)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client2.invoke(null)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "client1.invoke(null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "int serverPort2 = server2.invoke(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client2.invoke(null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testRAVersionsOnClientsWithNotificationsOnly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(client2RAVersions).contains(tag)@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "client1.invoke(null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int serverPort1 = server1.invoke(null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<VersionTag<?>> client1RAVersions = client1.invoke(null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client2.invoke(null)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRAVersionsOnClientsWithNotificationsOnly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client1.invoke(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<VersionTag<?>> client2Versions = client2.invoke(null)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(client1RAVersions.size()).isEqualTo(ONE_HUNDRED * 2)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<VersionTag<?>> client2RAVersions = client2.invoke(null)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testVersionsOnClientsWithNotificationsOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<VersionTag<?>> client1Versions = client1.invoke(null)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "client1.invoke(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
16->18 [style = bold, label=""];
2->20 [style = dashed, label="0"];
9->0 [style = bold, label=""];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
2->1 [style = bold, label=""];
7->16 [style = dashed, label="0"];
19->20 [style = bold, label=""];
3->18 [style = dashed, label="0"];
12->11 [style = bold, label=""];
4->19 [style = bold, label=""];
14->17 [style = bold, label=""];
20->1 [style = bold, label=""];
5->14 [style = bold, label=""];
8->14 [style = dashed, label="0"];
10->7 [style = bold, label=""];
7->3 [style = bold, label=""];
6->2 [style = bold, label=""];
6->12 [style = dashed, label="0"];
0->4 [style = bold, label=""];
15->0 [style = bold, label=""];
6->19 [style = dashed, label="0"];
10->17 [style = dashed, label="0"];
4->12 [style = bold, label=""];
2->11 [style = dashed, label="0"];
17->16 [style = bold, label=""];
13->0 [style = bold, label=""];
}
