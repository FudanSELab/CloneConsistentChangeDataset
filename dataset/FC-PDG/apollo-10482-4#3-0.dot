digraph {
11 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(someReleaseMessage)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Release shouldBeNewRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(anotherReleaseMessage.getId()).thenReturn(someNewNotificationId)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "someNotificationMessages.put(someIrrelevantKey,someNewNotificationId)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(anotherRelease)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(someReleaseMessage.getId()).thenReturn(someNotificationId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Release release = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long someNewNotificationId = someNotificationId + 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(someRelease,stillOldRelease)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Release anotherRelease = mock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(releaseMessageService,times(2)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "someNotificationMessages.put(someKey,someNewNotificationId)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Release shouldStillBeOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "String someIrrelevantKey = \"someIrrelevantKey\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ReleaseMessage anotherReleaseMessage = mock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(releaseService,times(1)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(anotherReleaseMessage)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(someRelease)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(someRelease,release)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testFindLatestActiveReleaseWithDirtyRelease['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(releaseMessageService,times(1)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(someRelease,shouldStillBeOldRelease)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(releaseService,times(2)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Release stillOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(anotherRelease,shouldBeNewRelease)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->22 [style = bold, label=""];
5->14 [style = bold, label=""];
12->26 [style = solid, label="someNewNotificationId"];
2->22 [style = dashed, label="0"];
14->7 [style = solid, label="someIrrelevantKey"];
17->6 [style = solid, label="shouldStillBeOldRelease"];
19->3 [style = solid, label="stillOldRelease"];
15->18 [style = bold, label=""];
12->14 [style = bold, label=""];
16->19 [style = bold, label=""];
12->4 [style = bold, label=""];
4->5 [style = bold, label=""];
3->21 [style = bold, label=""];
9->2 [style = bold, label=""];
12->16 [style = solid, label="someNewNotificationId"];
11->1 [style = bold, label=""];
14->11 [style = bold, label=""];
8->3 [style = bold, label=""];
10->19 [style = bold, label=""];
3->6 [style = bold, label=""];
6->9 [style = bold, label=""];
0->10 [style = bold, label=""];
26->25 [style = bold, label=""];
13->12 [style = bold, label=""];
12->7 [style = solid, label="someNewNotificationId"];
5->11 [style = bold, label=""];
18->16 [style = bold, label=""];
19->26 [style = bold, label=""];
10->8 [style = solid, label="release"];
17->8 [style = bold, label=""];
9->23 [style = dashed, label="0"];
7->17 [style = bold, label=""];
6->21 [style = dashed, label="0"];
25->8 [style = bold, label=""];
24->12 [style = bold, label=""];
5->21 [style = solid, label="anotherRelease"];
10->15 [style = bold, label=""];
19->7 [style = bold, label=""];
5->18 [style = solid, label="anotherRelease"];
21->23 [style = bold, label=""];
7->26 [style = dashed, label="0"];
25->21 [style = solid, label="shouldBeNewRelease"];
17->25 [style = dashed, label="0"];
20->12 [style = bold, label=""];
4->15 [style = solid, label="anotherReleaseMessage"];
1->0 [style = bold, label=""];
}
