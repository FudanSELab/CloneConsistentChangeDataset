digraph {
1 [style = filled, label = "ParallelExecutor executor@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "poolMock = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final RunnableWithException useBufferAndCheckAccess = null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(poolMock,times(0)).releaseBuffer(any(),any())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "executor.inParallel(useBufferAndCheckAccess)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(poolMock,times(1)).releaseBuffer(any(),any())@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ParallelExecutor executor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "executor.inParallel(useBufferAndCheckAccess)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "executor.execute()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sharing.destruct()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ByteBufferSharingImpl sharing = new ByteBufferSharingImpl(someBuffer,BufferPool.BufferType.TRACKED_SENDER,poolMock)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final AtomicBoolean inUse = new AtomicBoolean(false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "concurrentAccessToSharingShouldBeExclusive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "concurrentAccessToSharingShouldBeExclusiveWithExtraCloses['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "executor.inParallel(useBufferAndCheckAccess)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ByteBuffer someBuffer = ByteBuffer.allocate(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "concurrentAccessToSharingShouldBeExclusive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "ByteBufferVendor sharing = new ByteBufferVendor(someBuffer,BufferPool.BufferType.TRACKED_SENDER,poolMock)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->9 [style = bold, label=""];
11->8 [style = solid, label="useBufferAndCheckAccess"];
9->2 [style = bold, label=""];
16->17 [style = dotted, label="true"];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
16->7 [style = bold, label=""];
7->6 [style = solid, label="poolMock"];
3->15 [style = bold, label=""];
11->15 [style = solid, label="useBufferAndCheckAccess"];
5->14 [style = bold, label=""];
6->14 [style = dashed, label="0"];
10->7 [style = bold, label=""];
3->0 [style = bold, label=""];
13->1 [style = dotted, label="true"];
7->5 [style = bold, label=""];
1->17 [style = dashed, label="0"];
5->6 [style = bold, label=""];
7->14 [style = solid, label="poolMock"];
5->14 [style = solid, label="someBuffer"];
0->4 [style = bold, label=""];
13->7 [style = bold, label=""];
15->0 [style = bold, label=""];
14->12 [style = bold, label=""];
11->8 [style = bold, label=""];
10->1 [style = dotted, label="true"];
11->3 [style = solid, label="useBufferAndCheckAccess"];
5->6 [style = solid, label="someBuffer"];
6->12 [style = bold, label=""];
}
