digraph {
0 [style = filled, label = "testKeyCacheLoad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertKeyCacheSize(savedMap.size(),KEYSPACE1,COLUMN_FAMILY2)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "SSTableReader sstr = readerForKey(k)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "CacheService.instance.invalidateKeyCache()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ColumnFamilyStore store = Keyspace.open(KEYSPACE1).getColumnFamilyStore(COLUMN_FAMILY2)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "Map<KeyCacheKey,RowIndexEntry.IndexInfoRetriever> savedInfoMap = new HashMap<>()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertKeyCacheSize(0,KEYSPACE1,cf)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertKeyCacheSize(0,KEYSPACE1,cf)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "k.desc.ksname.equals(KEYSPACE1) && k.desc.cfname.equals(cf)@@@17@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "i++@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertKeyCacheSize(savedMap.size(),KEYSPACE1,cf)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertKeyCacheSize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "expected.isIndexed()@@@43@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "RowIndexEntry actual = CacheService.instance.keyCache.get(entry.getKey())@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "RowIndexEntry.IndexInfoRetriever expectedIir = savedInfoMap.get(entry.getKey())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "RowIndexEntry expected = entry.getValue()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "savedMap.put(k,rie)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "int size = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "int expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertKeyCacheSize(100,KEYSPACE1,cf)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "iter.hasNext()@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "Map<KeyCacheKey,RowIndexEntry> savedMap = new HashMap<>()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "i < expected.columnsIndexCount()@@@35@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "String keyspace@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "savedMap.put(k,CacheService.instance.keyCache.get(k))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "SSTableReader actualSstr = readerForKey(entry.getKey())@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "RowIndexEntry actual = CacheService.instance.keyCache.get(entry.getKey())@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertKeyCacheSize(0,KEYSPACE1,COLUMN_FAMILY2)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "String cf@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(expected.position,actual.position)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Map<KeyCacheKey,RowIndexEntry> savedMap = new HashMap<KeyCacheKey,RowIndexEntry>()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "iter.hasNext()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "store.forceBlockingFlush()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "KeyCacheKey k = iter.next()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SchemaLoader.insertData(KEYSPACE1,COLUMN_FAMILY2,0,100)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "assertEquals(expected,size)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(expected.columnsIndexCount(),actual.columnsIndexCount())@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "expected.isIndexed()@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "int i = 0@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(expected.deletionTime(),actual.deletionTime())@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "ColumnFamilyStore store = Keyspace.open(KEYSPACE1).getColumnFamilyStore(cf)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "CacheService.instance.keyCache.submitWrite(Integer.MAX_VALUE).get()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "SchemaLoader.insertData(KEYSPACE1,cf,0,100)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(expected.columnsIndex(),actual.columnsIndex())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "CacheService.instance.invalidateKeyCache()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "size++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "savedInfoMap.values().forEach(null)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "RowIndexEntry rie = CacheService.instance.keyCache.get(k)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "String columnFamily@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "KeyCacheKey k = iter.next()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertKeyCacheSize(100,KEYSPACE1,COLUMN_FAMILY2)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CacheService.instance.invalidateKeyCache()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "readData(KEYSPACE1,COLUMN_FAMILY2,0,100)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertKeyCacheSize(0,KEYSPACE1,COLUMN_FAMILY2)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "KeyCacheKey k = iter.next()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "savedInfoMap.put(k,rie.openWithIndex(sstr.getIndexFile()))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "readData(KEYSPACE1,cf,0,100)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "testKeyCacheLoad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "k.desc.ksname.equals(keyspace) && k.desc.cfname.equals(columnFamily)@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "CacheService.instance.keyCache.submitWrite(Integer.MAX_VALUE).get()@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(expectedIir.columnsIndex(i),actualIir.columnsIndex(i))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->29 [style = solid, label="k"];
54->55 [style = bold, label=""];
54->49 [style = dotted, label="true"];
57->59 [style = solid, label="size"];
36->29 [style = bold, label=""];
16->7 [style = bold, label=""];
6->51 [style = dashed, label="0"];
19->47 [style = dashed, label="0"];
5->28 [style = bold, label=""];
44->53 [style = bold, label=""];
3->4 [style = bold, label=""];
57->56 [style = solid, label="size"];
53->36 [style = bold, label=""];
65->58 [style = dotted, label="true"];
20->35 [style = dashed, label="0"];
63->61 [style = dotted, label="true"];
10->12 [style = bold, label=""];
10->20 [style = dotted, label="true"];
64->58 [style = solid, label="keyspace"];
12->18 [style = bold, label=""];
0->8 [style = bold, label=""];
8->47 [style = bold, label=""];
15->41 [style = bold, label=""];
45->42 [style = bold, label=""];
60->65 [style = bold, label=""];
25->10 [style = bold, label=""];
27->32 [style = solid, label="cf"];
49->50 [style = solid, label="i"];
65->66 [style = dotted, label="true"];
46->50 [style = bold, label=""];
19->15 [style = bold, label=""];
52->49 [style = solid, label="i"];
9->24 [style = bold, label=""];
22->13 [style = bold, label=""];
35->53 [style = dotted, label="true"];
56->65 [style = bold, label=""];
63->64 [style = dotted, label="true"];
10->11 [style = bold, label=""];
7->1 [style = bold, label=""];
9->39 [style = bold, label=""];
27->28 [style = solid, label="cf"];
35->44 [style = bold, label=""];
27->35 [style = solid, label="cf"];
40->51 [style = bold, label=""];
37->1 [style = bold, label=""];
22->9 [style = bold, label=""];
41->37 [style = bold, label=""];
34->33 [style = bold, label=""];
57->60 [style = bold, label=""];
26->20 [style = dotted, label="true"];
65->66 [style = bold, label=""];
10->26 [style = bold, label=""];
49->54 [style = solid, label="i"];
33->13 [style = bold, label=""];
50->49 [style = bold, label=""];
58->56 [style = bold, label=""];
24->5 [style = bold, label=""];
62->58 [style = solid, label="columnFamily"];
29->26 [style = bold, label=""];
35->44 [style = dotted, label="true"];
5->21 [style = bold, label=""];
16->41 [style = dashed, label="0"];
21->22 [style = bold, label=""];
22->13 [style = dotted, label="true"];
1->32 [style = bold, label=""];
56->59 [style = solid, label="size"];
49->54 [style = bold, label=""];
26->20 [style = bold, label=""];
52->54 [style = bold, label=""];
35->29 [style = dotted, label="true"];
4->9 [style = bold, label=""];
17->39 [style = dashed, label="0"];
39->5 [style = bold, label=""];
38->27 [style = dotted, label="true"];
58->56 [style = dotted, label="true"];
23->40 [style = dashed, label="0"];
42->52 [style = bold, label=""];
63->57 [style = bold, label=""];
44->53 [style = solid, label="rie"];
13->48 [style = bold, label=""];
30->9 [style = bold, label=""];
2->10 [style = bold, label=""];
27->39 [style = solid, label="cf"];
21->42 [style = dashed, label="0"];
4->28 [style = dashed, label="0"];
66->58 [style = bold, label=""];
54->50 [style = dotted, label="true"];
11->2 [style = solid, label="k"];
20->36 [style = solid, label="k"];
14->32 [style = dashed, label="0"];
14->23 [style = bold, label=""];
10->11 [style = dotted, label="true"];
63->62 [style = dotted, label="true"];
31->10 [style = bold, label=""];
23->6 [style = bold, label=""];
32->40 [style = bold, label=""];
33->43 [style = bold, label=""];
34->33 [style = dotted, label="true"];
17->3 [style = bold, label=""];
13->9 [style = bold, label=""];
38->8 [style = bold, label=""];
26->35 [style = dotted, label="true"];
20->44 [style = solid, label="k"];
34->43 [style = bold, label=""];
35->26 [style = bold, label=""];
58->65 [style = bold, label=""];
54->34 [style = bold, label=""];
11->20 [style = bold, label=""];
47->15 [style = bold, label=""];
27->41 [style = solid, label="cf"];
54->46 [style = dotted, label="true"];
27->47 [style = solid, label="cf"];
8->19 [style = bold, label=""];
52->54 [style = solid, label="i"];
35->36 [style = dotted, label="true"];
34->13 [style = bold, label=""];
61->59 [style = solid, label="expected"];
18->17 [style = bold, label=""];
28->13 [style = bold, label=""];
20->53 [style = solid, label="k"];
15->16 [style = bold, label=""];
20->10 [style = bold, label=""];
20->2 [style = bold, label=""];
26->30 [style = bold, label=""];
27->40 [style = solid, label="cf"];
48->45 [style = bold, label=""];
55->46 [style = bold, label=""];
65->59 [style = bold, label=""];
20->2 [style = dotted, label="true"];
7->37 [style = dashed, label="0"];
1->14 [style = bold, label=""];
54->55 [style = dotted, label="true"];
20->35 [style = bold, label=""];
51->31 [style = bold, label=""];
52->50 [style = solid, label="i"];
27->37 [style = solid, label="cf"];
6->25 [style = bold, label=""];
}
