digraph {
7 [style = filled, label = "List<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(expected,getClasses(searchBasedFetchers))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expected.remove()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Set<Class<? extends IdBasedFetcher>> expected = reflections.getSubTypesOf()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expected.remove()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "expected.remove()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expected.remove()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expected.remove()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expected.remove()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->10 [style = bold, label=""];
5->12 [style = dashed, label="0"];
4->6 [style = bold, label=""];
6->11 [style = dashed, label="0"];
11->12 [style = bold, label=""];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
7->3 [style = bold, label=""];
11->13 [style = solid, label="expected"];
3->0 [style = solid, label="expected"];
8->0 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
7->15 [style = dashed, label="0"];
14->15 [style = bold, label=""];
7->0 [style = solid, label="idFetchers"];
15->13 [style = solid, label="searchBasedFetchers"];
4->10 [style = dashed, label="0"];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
}
