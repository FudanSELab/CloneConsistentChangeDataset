digraph {
13 [style = filled, label = "ReadwriteSplittingRule readwriteSplittingRule = createReadwriteSplittingRule()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(readwriteSplittingRule.getSingleDataSourceRule().getReadDataSourceNames(),is(Collections.singletonList(\"read_ds_1\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "databaseDiscoveryRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"ds_0\",false))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertUpdateRuleStatusWithEnable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(readwriteSplittingRule.getSingleDataSourceRule().getReadDataSourceNames(),is(Arrays.asList(\"read_ds_0\",\"read_ds_1\")))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "readwriteSplittingRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"read_ds_0\",false))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "databaseDiscoveryRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"ds_0\",true))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertThat(databaseDiscoveryRule.getSingleDataSourceRule().getDataSourceNames(),is(Collections.singletonList(\"ds_1\")))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertUpdateRuleStatusWithEnable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "readwriteSplittingRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"read_ds_0\",true))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "DatabaseDiscoveryRule databaseDiscoveryRule = createRule()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(databaseDiscoveryRule.getSingleDataSourceRule().getDataSourceNames(),is(Arrays.asList(\"ds_0\",\"ds_1\")))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "databaseDiscoveryRule.updateStatus(new DataSourceNameDisabledEvent(\"ds_0\",true))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "databaseDiscoveryRule.updateStatus(new DataSourceNameDisabledEvent(\"ds_0\",false))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertUpdateRuleStatusWithEnable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
3->7 [style = dashed, label="0"];
5->9 [style = dashed, label="0"];
2->4 [style = bold, label=""];
4->7 [style = bold, label=""];
0->14 [style = dashed, label="0"];
8->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
7->5 [style = bold, label=""];
5->0 [style = bold, label=""];
0->1 [style = bold, label=""];
14->12 [style = bold, label=""];
11->13 [style = bold, label=""];
9->14 [style = bold, label=""];
0->8 [style = dashed, label="0"];
10->9 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
}
