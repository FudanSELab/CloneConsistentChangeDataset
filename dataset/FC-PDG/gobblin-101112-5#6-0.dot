digraph {
36 [style = filled, label = "this.node2FlowConfigClient.createFlowConfig(flowConfig2)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "master = this.node2GobblinServiceManager@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(assertSuccess,\"Flow that was created is not reflecting in FlowCatalog\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(5)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "logger.info(\"+++++++++++++++++++ testCreate START\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "master = this.node1GobblinServiceManager@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "logger.info(\"+++++++++++++++++++ testCreate END\")@@@41@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "FlowConfig flowConfig2 = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME_2).setFlowName(TEST_FLOW_NAME_2)).setTemplateUris(TEST_TEMPLATE_URI_2).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE_2).setRunImmediately(true)).setProperties(new StringMap(flowProperties))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long schedulingStartTime = System.currentTimeMillis()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "attempt++@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "this.node1GobblinServiceManager.isLeader()@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Thread.sleep(3000)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testCreate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "this.node2FlowConfigClient.createFlowConfig(flowConfig2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "RestLiResponseException e@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertSuccess = true@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "logger.info(\"#### node 2 is manager\")@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.fail(\"No leader found in service cluster\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "logger.info(\"Total scheduling time in ms: \" + (schedulingEndTime - schedulingStartTime))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testCreateAgain['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "masterJobs == 2@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "this.node2GobblinServiceManager.isLeader()@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.fail(\"Create Again should pass without complaining that the spec already exists.\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "boolean assertSuccess = false@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int masterJobs = master.flowCatalog.getSpecs().size()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int attempt = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FlowConfig flowConfig1 = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME_1).setFlowName(TEST_FLOW_NAME_1)).setTemplateUris(TEST_TEMPLATE_URI_1).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE_1).setRunImmediately(true)).setProperties(new StringMap(flowProperties))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "flowProperties.put(\"param1\",\"value1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "GobblinServiceManager master@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long schedulingEndTime = System.currentTimeMillis()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "attempt < 800@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY,TEST_SOURCE_NAME)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_DESTINATION_IDENTIFIER_KEY,TEST_SINK_NAME)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "logger.info(\"#### node 1 is manager\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "this.node1FlowConfigClient.createFlowConfig(flowConfig1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Map<String,String> flowProperties = Maps.newHashMap()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCreate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
15->17 [style = dotted, label="true"];
16->22 [style = dotted, label="true"];
25->29 [style = bold, label=""];
23->32 [style = bold, label=""];
1->3 [style = solid, label="attempt"];
22->10 [style = solid, label="assertSuccess"];
8->9 [style = bold, label=""];
23->15 [style = bold, label=""];
15->27 [style = dotted, label="true"];
35->37 [style = dotted, label="true"];
33->4 [style = bold, label=""];
4->18 [style = solid, label="flowProperties"];
4->26 [style = bold, label=""];
18->7 [style = bold, label=""];
17->16 [style = solid, label="masterJobs"];
27->3 [style = bold, label=""];
21->8 [style = dotted, label="false"];
19->24 [style = dotted, label="true"];
26->20 [style = bold, label=""];
12->4 [style = bold, label=""];
14->6 [style = solid, label="schedulingStartTime"];
14->13 [style = bold, label=""];
7->36 [style = solid, label="flowConfig2"];
0->19 [style = bold, label=""];
21->8 [style = bold, label=""];
11->18 [style = bold, label=""];
1->15 [style = solid, label="attempt"];
16->22 [style = bold, label=""];
19->24 [style = bold, label=""];
1->23 [style = bold, label=""];
24->30 [style = bold, label=""];
10->28 [style = bold, label=""];
4->7 [style = solid, label="flowProperties"];
15->2 [style = bold, label=""];
25->1 [style = bold, label=""];
18->13 [style = solid, label="flowConfig1"];
24->1 [style = bold, label=""];
7->14 [style = bold, label=""];
6->10 [style = bold, label=""];
7->13 [style = bold, label=""];
21->25 [style = bold, label=""];
19->21 [style = bold, label=""];
37->36 [style = bold, label=""];
34->4 [style = bold, label=""];
5->0 [style = bold, label=""];
23->10 [style = solid, label="assertSuccess"];
3->15 [style = solid, label="attempt"];
35->37 [style = bold, label=""];
16->27 [style = bold, label=""];
7->5 [style = solid, label="flowConfig2"];
3->15 [style = bold, label=""];
21->9 [style = dotted, label="false"];
2->6 [style = bold, label=""];
15->16 [style = dotted, label="true"];
21->29 [style = dotted, label="true"];
19->21 [style = dotted, label="false"];
2->6 [style = solid, label="schedulingEndTime"];
30->1 [style = bold, label=""];
15->3 [style = dotted, label="true"];
29->1 [style = bold, label=""];
19->30 [style = dotted, label="true"];
13->36 [style = bold, label=""];
31->33 [style = bold, label=""];
17->16 [style = bold, label=""];
9->1 [style = bold, label=""];
32->15 [style = bold, label=""];
13->5 [style = bold, label=""];
21->25 [style = dotted, label="true"];
20->11 [style = bold, label=""];
15->17 [style = bold, label=""];
}
