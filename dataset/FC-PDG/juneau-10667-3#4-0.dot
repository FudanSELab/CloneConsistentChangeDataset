digraph {
24 [style = filled, label = "t._enum(\"foo\",\"baz\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertOptional(t._enum()).isType().asJson().is(\"('foo','bar'(\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertOptional(t._enum()).isType().asJson().is(\"('foo','bar'(\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertObject(t._enum()).isType().asJson().is(\"('foo','bar','baz'(\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertOptional(t._enum()).isType().asJson().is(\"('foo','bar','baz'(\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertObject(t.getEnum()).isType().asJson().is(\"('foo','bar','baz'(\")@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "t.addEnum(ASet.of(\"baz\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertOptional(t._enum()).isType().asJson().is(\"('foo','bar','baz'(\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertObject(t._enum()).isType().asJson().is(\"('foo','baz'(\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "t._enum(ASet.of())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Items t = new Items()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "t.addEnum(null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertObject(t.getEnum()).isType().asJson().is(\"('foo','bar','baz'(\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "t._enum((Collection<Object>)null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertObject(t._enum()).isType().asJson().is(\"('foo','bar'(\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "t.addEnum(ASet.of(\"foo\",\"bar\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertObject(t._enum()).isType().asJson().is(\"('foo','bar','baz'(\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertOptional(t._enum()).isType().asJson().is(\"((\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertObject(t._enum()).isType().asJson().is(\"('foo','bar'(\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "a19_enum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertObject(t.getEnum()).isType().asJson().is(\"('foo','bar'(\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "t._enum(ASet.of(\"foo\",\"bar\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertObject(t._enum()).isType().asJson().is(\"((\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertObject(t._enum()).isNull()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertOptional(t._enum()).isNull()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "a16_enum['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SchemaInfo t = new SchemaInfo()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "a19_enum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25->0 [style = bold, label=""];
5->8 [style = bold, label=""];
4->14 [style = bold, label=""];
8->16 [style = dashed, label="0"];
12->20 [style = dashed, label="0"];
9->0 [style = bold, label=""];
3->24 [style = bold, label=""];
17->6 [style = bold, label=""];
7->12 [style = bold, label=""];
0->19 [style = bold, label=""];
0->27 [style = bold, label=""];
10->19 [style = dashed, label="0"];
1->15 [style = bold, label=""];
3->18 [style = dashed, label="0"];
11->6 [style = bold, label=""];
23->26 [style = bold, label=""];
4->2 [style = bold, label=""];
7->20 [style = bold, label=""];
10->27 [style = dashed, label="0"];
24->22 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
12->21 [style = dashed, label="0"];
26->13 [style = bold, label=""];
1->9 [style = bold, label=""];
22->4 [style = bold, label=""];
5->16 [style = bold, label=""];
8->1 [style = bold, label=""];
0->10 [style = bold, label=""];
18->4 [style = bold, label=""];
13->3 [style = bold, label=""];
2->14 [style = dashed, label="0"];
16->1 [style = bold, label=""];
9->15 [style = dashed, label="0"];
6->26 [style = dashed, label="0"];
15->0 [style = bold, label=""];
6->13 [style = bold, label=""];
27->7 [style = bold, label=""];
9->25 [style = dashed, label="0"];
7->21 [style = bold, label=""];
19->7 [style = bold, label=""];
1->25 [style = bold, label=""];
13->18 [style = bold, label=""];
2->5 [style = bold, label=""];
14->5 [style = bold, label=""];
}
