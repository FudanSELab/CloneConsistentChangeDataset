digraph {
13 [style = filled, label = "admin.enableInstance(CLUSTER_NAME,instance,false)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "checkForRebalanceError(false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "_participants.get(i).syncStop()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "admin.enableInstance(CLUSTER_NAME,instance,true)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertNotNull(maintenanceSignal.getReason())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "admin.enableMaintenanceMode(CLUSTER_NAME,false)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(result)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertTrue(result)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertNull(maintenanceSignal)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertNull(maintenanceSignal)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "_participants.get(i).syncStop()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "instance = _participants.get(i).getInstanceName()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testWithOfflineInstancesLimit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "checkForRebalanceError(true)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String instance = _participants.get(i).getInstanceName()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "admin.enableInstance(CLUSTER_NAME,instance,false)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testWithDisabledInstancesLimit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Thread.sleep(500)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "HelixAdmin admin = new ZKHelixAdmin(_gZkClient)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i = 2@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "checkForRebalanceError(true)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(clusterVerifier.verifyByPolling())@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ZkHelixClusterVerifier clusterVerifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient).setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME).build()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < 2 + _maxOfflineInstancesAllowed + 1@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < 2 + _maxOfflineInstancesAllowed@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(clusterVerifier.verifyByPolling())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "boolean result = TestHelper.verify(null,TestHelper.WAIT_DURATION)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MaintenanceSignal maintenanceSignal = _dataAccessor.getProperty(_dataAccessor.keyBuilder().maintenance())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "result = TestHelper.verify(null,TestHelper.WAIT_DURATION)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertNotNull(maintenanceSignal)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Thread.sleep(500)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testWithDisabledInstancesLimit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String instance = _participants.get(i).getInstanceName()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i = 2@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->31 [style = solid, label="maintenanceSignal"];
2->11 [style = dotted, label="true"];
13->15 [style = bold, label=""];
32->38 [style = bold, label=""];
30->34 [style = bold, label=""];
11->12 [style = bold, label=""];
14->16 [style = bold, label=""];
6->28 [style = bold, label=""];
0->29 [style = dashed, label="0"];
8->26 [style = bold, label=""];
7->9 [style = bold, label=""];
37->35 [style = bold, label=""];
9->15 [style = solid, label="i"];
12->2 [style = bold, label=""];
6->0 [style = bold, label=""];
12->2 [style = solid, label="i"];
15->6 [style = solid, label="i"];
4->8 [style = bold, label=""];
33->20 [style = bold, label=""];
25->17 [style = bold, label=""];
0->13 [style = bold, label=""];
27->20 [style = bold, label=""];
9->6 [style = solid, label="i"];
15->6 [style = bold, label=""];
20->1 [style = bold, label=""];
16->10 [style = bold, label=""];
3->20 [style = bold, label=""];
6->29 [style = dotted, label="true"];
9->6 [style = bold, label=""];
6->0 [style = dotted, label="true"];
6->13 [style = dotted, label="true"];
26->25 [style = bold, label=""];
20->1 [style = solid, label="maintenanceSignal"];
6->29 [style = bold, label=""];
2->18 [style = bold, label=""];
14->16 [style = solid, label="instance"];
18->11 [style = solid, label="instance"];
37->35 [style = solid, label="maintenanceSignal"];
5->23 [style = bold, label=""];
10->4 [style = bold, label=""];
2->18 [style = dotted, label="true"];
22->7 [style = bold, label=""];
8->25 [style = bold, label=""];
28->37 [style = bold, label=""];
35->36 [style = bold, label=""];
6->5 [style = bold, label=""];
21->7 [style = bold, label=""];
8->26 [style = solid, label="result"];
38->31 [style = bold, label=""];
23->14 [style = bold, label=""];
36->32 [style = bold, label=""];
17->2 [style = bold, label=""];
2->24 [style = bold, label=""];
29->15 [style = bold, label=""];
2->12 [style = dotted, label="true"];
24->19 [style = bold, label=""];
0->13 [style = solid, label="instance"];
22->21 [style = bold, label=""];
31->30 [style = bold, label=""];
1->22 [style = bold, label=""];
18->11 [style = bold, label=""];
17->12 [style = solid, label="i"];
6->15 [style = dotted, label="true"];
17->2 [style = solid, label="i"];
5->23 [style = solid, label="result"];
}
