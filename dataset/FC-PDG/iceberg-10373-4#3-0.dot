digraph {
8 [style = filled, label = "Table table = tables.create(SCHEMA,spec,tableLocation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Dataset<Row> secondDf = spark.createDataFrame(secondBatchRecords,)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testSnapshotSelectionByTimestamp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "secondDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Dataset<Row> previousSnapshotResult = spark.read().format(\"iceberg\").option(\"as-of-timestamp\",firstSnapshotTimestamp).load(tableLocation)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Dataset<Row> currentSnapshotResult = spark.read().format(\"iceberg\").load(tableLocation)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "firstDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<SimpleRecord> expectedRecords = Lists.newArrayList()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String tableLocation = temp.newFolder(\"iceberg-table\").toString()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PartitionSpec spec = PartitionSpec.unpartitioned()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Dataset<Row> df = spark.read().format(\"iceberg\").option(SparkReadOptions.SNAPSHOT_ID,snapshotId).option(SparkReadOptions.AS_OF_TIMESTAMP,timestamp).load(tableLocation)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testSnapshotSelectionBySnapshotIdAndTimestamp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long snapshotId = table.currentSnapshot().snapshotId()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<SimpleRecord> firstBatchRecords = Lists.newArrayList(new SimpleRecord(1,\"a\"),new SimpleRecord(2,\"b\"),new SimpleRecord(3,\"c\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long firstSnapshotTimestamp = System.currentTimeMillis()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "long timestamp = System.currentTimeMillis()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<SimpleRecord> previousSnapshotRecords = previousSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Previous snapshot rows should match\",firstBatchRecords,previousSnapshotRecords)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<SimpleRecord> currentSnapshotRecords = currentSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Dataset<Row> df = spark.read().format(\"iceberg\").option(\"snapshot-id\",snapshotId).option(\"as-of-timestamp\",timestamp).load(tableLocation)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "List<SimpleRecord> secondBatchRecords = Lists.newArrayList(new SimpleRecord(4,\"d\"),new SimpleRecord(5,\"e\"),new SimpleRecord(6,\"f\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectedRecords.addAll(firstBatchRecords)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Current snapshot rows should match\",expectedRecords,currentSnapshotRecords)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Dataset<Row> firstDf = spark.createDataFrame(firstBatchRecords,)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSnapshotSelectionBySnapshotIdAndTimestamp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "df.collectAsList()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectedRecords.addAll(secondBatchRecords)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "HadoopTables tables = new HadoopTables(CONF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Expected 2 snapshots\",2,Iterables.size(table.snapshots()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
5->14 [style = dashed, label="0"];
11->12 [style = solid, label="tableLocation"];
16->27 [style = bold, label=""];
15->25 [style = bold, label=""];
25->23 [style = bold, label=""];
9->4 [style = bold, label=""];
11->24 [style = solid, label="tableLocation"];
3->11 [style = bold, label=""];
17->27 [style = solid, label="expectedRecords"];
14->28 [style = bold, label=""];
4->2 [style = bold, label=""];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
13->11 [style = bold, label=""];
11->26 [style = solid, label="tableLocation"];
21->18 [style = bold, label=""];
11->2 [style = solid, label="tableLocation"];
0->7 [style = bold, label=""];
21->18 [style = solid, label="previousSnapshotRecords"];
9->4 [style = solid, label="firstBatchRecords"];
9->18 [style = solid, label="firstBatchRecords"];
11->1 [style = solid, label="tableLocation"];
23->27 [style = solid, label="currentSnapshotRecords"];
1->12 [style = dashed, label="0"];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
20->16 [style = bold, label=""];
24->21 [style = bold, label=""];
10->12 [style = bold, label=""];
6->26 [style = dashed, label="0"];
19->26 [style = bold, label=""];
2->14 [style = bold, label=""];
26->15 [style = bold, label=""];
7->8 [style = solid, label="spec"];
28->19 [style = bold, label=""];
8->9 [style = bold, label=""];
28->16 [style = solid, label="secondBatchRecords"];
9->20 [style = solid, label="firstBatchRecords"];
23->17 [style = bold, label=""];
28->19 [style = solid, label="secondBatchRecords"];
27->24 [style = bold, label=""];
11->8 [style = solid, label="tableLocation"];
10->1 [style = bold, label=""];
11->25 [style = solid, label="tableLocation"];
22->11 [style = bold, label=""];
2->5 [style = bold, label=""];
17->20 [style = bold, label=""];
}
