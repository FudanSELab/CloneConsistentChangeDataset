digraph {
29 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "count++@@@54@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "repository.close()@@@67@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "count = 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageBranch)}})@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "count == 1@@@51@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Git git = new Git(repository)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "count++@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessage)}})@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "commitBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(count,2)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "removeFileBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "commitBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "count == 0@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageBranch)@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "logs = git.log().call()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "repository.close()@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "int count = 0@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "count = 0@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "status = git.status().call()@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageBranch)}})@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "fileToAdd.createNewFile()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Status status = git.status().call()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "logs = git.log().call()@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(count,1)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "count == 1@@@43@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "count++@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "count == 1@@@32@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Status status = new Git(repository).status().call()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "count++@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "fileToAdd1.createNewFile()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "git.close()@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "git = new Git(repository)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(count,1)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(count,2)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageAll)}})@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->7 [style = solid, label="count"];
27->24 [style = solid, label="count"];
16->37 [style = bold, label=""];
24->25 [style = dotted, label="true"];
44->35 [style = bold, label=""];
20->53 [style = solid, label="count"];
16->7 [style = bold, label=""];
61->57 [style = bold, label=""];
59->58 [style = bold, label=""];
57->59 [style = bold, label=""];
5->38 [style = bold, label=""];
0->15 [style = bold, label=""];
1->23 [style = bold, label=""];
21->2 [style = bold, label=""];
8->0 [style = bold, label=""];
9->26 [style = bold, label=""];
43->40 [style = bold, label=""];
52->47 [style = bold, label=""];
42->44 [style = bold, label=""];
20->48 [style = solid, label="count"];
27->36 [style = solid, label="count"];
20->48 [style = bold, label=""];
1->23 [style = dotted, label="true"];
35->10 [style = bold, label=""];
27->5 [style = bold, label=""];
50->26 [style = dotted, label="true"];
10->11 [style = bold, label=""];
37->27 [style = solid, label="count"];
21->24 [style = solid, label="repository"];
51->54 [style = bold, label=""];
54->60 [style = bold, label=""];
20->50 [style = solid, label="count"];
25->36 [style = bold, label=""];
16->6 [style = bold, label=""];
26->1 [style = bold, label=""];
30->42 [style = bold, label=""];
34->33 [style = bold, label=""];
48->50 [style = bold, label=""];
45->29 [style = bold, label=""];
26->9 [style = solid, label="count"];
5->1 [style = bold, label=""];
36->46 [style = bold, label=""];
7->24 [style = bold, label=""];
12->16 [style = solid, label="count"];
29->32 [style = bold, label=""];
56->50 [style = bold, label=""];
13->5 [style = bold, label=""];
21->54 [style = solid, label="repository"];
11->8 [style = bold, label=""];
31->28 [style = bold, label=""];
14->21 [style = bold, label=""];
9->3 [style = dotted, label="true"];
26->20 [style = bold, label=""];
36->46 [style = dotted, label="true"];
4->10 [style = bold, label=""];
37->24 [style = bold, label=""];
1->48 [style = bold, label=""];
25->18 [style = bold, label=""];
3->26 [style = bold, label=""];
23->56 [style = dashed, label="0"];
48->56 [style = dotted, label="true"];
11->34 [style = solid, label="count"];
5->1 [style = solid, label="count"];
32->30 [style = bold, label=""];
17->38 [style = dashed, label="0"];
37->36 [style = solid, label="count"];
1->9 [style = bold, label=""];
15->22 [style = bold, label=""];
60->49 [style = bold, label=""];
11->41 [style = bold, label=""];
26->1 [style = solid, label="count"];
24->25 [style = bold, label=""];
1->50 [style = solid, label="count"];
9->3 [style = bold, label=""];
27->24 [style = bold, label=""];
1->48 [style = solid, label="count"];
5->26 [style = solid, label="count"];
41->34 [style = bold, label=""];
50->26 [style = bold, label=""];
21->43 [style = dashed, label="0"];
2->19 [style = bold, label=""];
20->17 [style = bold, label=""];
48->56 [style = bold, label=""];
26->20 [style = solid, label="count"];
53->51 [style = bold, label=""];
34->33 [style = solid, label="count"];
37->24 [style = solid, label="count"];
1->20 [style = solid, label="count"];
50->20 [style = bold, label=""];
39->43 [style = bold, label=""];
34->41 [style = bold, label=""];
27->5 [style = solid, label="count"];
58->55 [style = bold, label=""];
20->53 [style = bold, label=""];
12->6 [style = bold, label=""];
28->16 [style = bold, label=""];
24->36 [style = bold, label=""];
36->27 [style = bold, label=""];
49->52 [style = bold, label=""];
6->16 [style = bold, label=""];
22->12 [style = bold, label=""];
5->9 [style = solid, label="count"];
55->1 [style = bold, label=""];
46->27 [style = bold, label=""];
18->13 [style = bold, label=""];
33->31 [style = bold, label=""];
40->45 [style = bold, label=""];
19->4 [style = bold, label=""];
25->61 [style = bold, label=""];
23->9 [style = bold, label=""];
62->21 [style = bold, label=""];
}
