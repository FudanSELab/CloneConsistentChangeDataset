digraph {
12 [style = filled, label = "assertThat(doc.rootDoc().getField(\"field\"),notNullValue())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(doc.rootDoc().getField(\"field\"),nullValue())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(nullValue,equalTo(new GeoPoint(1,2)))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mapper = createDocumentMapper(fieldMapping(null))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(nullValue,equalTo(new GeoPoint(89,1)))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "doc = mapper.parse(source(null))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"field\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertThat(defaultValue,equalTo(doc.rootDoc().getBinaryValue(\"field\")))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ParsedDocument doc = mapper.parse(source(null))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testNullValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(defaultValue,not(equalTo(doc.rootDoc().getBinaryValue(\"field\"))))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doc = mapper.parse(source(null))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testNullValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "ParsedDocument doc = mapper.parse(source(null))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper)fieldMapper).nullValue@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(doc.rootDoc().getField(\"field\"),nullValue())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "mapper = createDocumentMapper(fieldMapping(null))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length,equalTo(0))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length,equalTo(0))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testNullValueWithIgnoreMalformed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "doc = mapper.parse(source(null))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "doc = mapper.parse(source(null))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->9 [style = bold, label=""];
28->29 [style = bold, label=""];
15->23 [style = bold, label=""];
3->30 [style = dashed, label="0"];
24->19 [style = bold, label=""];
9->0 [style = bold, label=""];
16->27 [style = bold, label=""];
27->14 [style = bold, label=""];
26->17 [style = bold, label=""];
0->1 [style = solid, label="fieldMapper"];
6->7 [style = solid, label="defaultValue"];
3->25 [style = bold, label=""];
2->3 [style = bold, label=""];
18->15 [style = bold, label=""];
29->0 [style = bold, label=""];
3->11 [style = bold, label=""];
11->12 [style = bold, label=""];
0->2 [style = solid, label="fieldMapper"];
23->2 [style = solid, label="fieldMapper"];
1->26 [style = bold, label=""];
12->6 [style = bold, label=""];
13->16 [style = bold, label=""];
19->0 [style = bold, label=""];
20->22 [style = bold, label=""];
21->2 [style = bold, label=""];
9->19 [style = dashed, label="0"];
6->8 [style = solid, label="defaultValue"];
22->18 [style = bold, label=""];
9->29 [style = dashed, label="0"];
10->8 [style = bold, label=""];
8->5 [style = bold, label=""];
23->21 [style = bold, label=""];
25->12 [style = bold, label=""];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
11->25 [style = dashed, label="0"];
5->7 [style = bold, label=""];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
2->30 [style = bold, label=""];
27->14 [style = solid, label="fieldMapper"];
23->21 [style = solid, label="fieldMapper"];
14->20 [style = bold, label=""];
}
