digraph {
8 [style = filled, label = "service.addHandler(new AccessLogServiceGRPCHandlerV3(handler))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "start['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "service.addHandler(handler)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "service.addHandler(new MetricServiceGRPCHandlerV3(handler))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "service.addHandler(new AccessLogServiceGRPCHandler(getManager(),config))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "start['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "service.addHandler(meshGRPCHandler)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final MetricServiceGRPCHandler handler = new MetricServiceGRPCHandler(getManager())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "getManager().find(CoreModule.NAME).provider().getService().load(EnvoyOALDefine.INSTANCE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "service.addHandler(handler)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "service.addHandler(new MeshGRPCHandlerCompat(meshGRPCHandler))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "getManager().find(CoreModule.NAME).provider().getService().load(CoreOALDefine.INSTANCE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TelemetryDataDispatcher.init(getManager())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "config.isAcceptMetricsService()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "service.addHandler(new MetricServiceGRPCHandler(getManager()))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "start['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final AccessLogServiceGRPCHandler handler = new AccessLogServiceGRPCHandler(getManager(),config)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "MeshGRPCHandler meshGRPCHandler = new MeshGRPCHandler(getManager())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "GRPCHandlerRegister service = getManager().find(SharingServerModule.NAME).provider().getService()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
4->5 [style = dotted, label="true"];
3->6 [style = dashed, label="0"];
16->18 [style = bold, label=""];
16->15 [style = solid, label="meshGRPCHandler"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
4->10 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
18->15 [style = bold, label=""];
4->11 [style = dotted, label="true"];
0->15 [style = dashed, label="0"];
16->18 [style = solid, label="meshGRPCHandler"];
6->7 [style = solid, label="handler"];
11->12 [style = bold, label=""];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
10->12 [style = solid, label="handler"];
5->0 [style = bold, label=""];
1->2 [style = bold, label=""];
14->2 [style = bold, label=""];
17->13 [style = bold, label=""];
6->8 [style = solid, label="handler"];
6->7 [style = bold, label=""];
4->12 [style = dotted, label="true"];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
10->11 [style = solid, label="handler"];
10->11 [style = bold, label=""];
2->16 [style = bold, label=""];
}
