digraph {
5 [style = filled, label = "assertNotNull(result)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(1,firstPost.getBlog().getId())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotNull(result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Post firstPost = result.getPosts().get(0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(2,result.getPosts().size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(2,secondPost.getComments().get(0).getPost().getId())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSelectBlogWithPosts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Mapper mapper = session.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(2,secondPost.getComments().get(0).getPost().getId())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{session.close()}@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"Blog without posts\",result.getTitle())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Mapper mapper = session.getMapper()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "{session.close()}@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(2,firstPost.getComments().size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SqlSession session = sqlSessionFactory.openSession()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Blog result = mapper.selectBlogByPrimaryKeyColumnPrefix(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(1,secondPost.getComments().size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSelectBlogWithPosts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSelectBlogWithoutPostsColumnPrefix['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Post secondPost = result.getPosts().get(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(0,result.getPosts().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->0 [style = solid, label="result"];
6->3 [style = bold, label=""];
0->9 [style = bold, label=""];
16->0 [style = bold, label=""];
7->11 [style = bold, label=""];
20->17 [style = bold, label=""];
12->5 [style = bold, label=""];
15->14 [style = bold, label=""];
0->19 [style = bold, label=""];
19->20 [style = bold, label=""];
18->11 [style = bold, label=""];
11->12 [style = bold, label=""];
12->5 [style = solid, label="result"];
12->16 [style = bold, label=""];
16->0 [style = solid, label="result"];
1->20 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
9->19 [style = dashed, label="0"];
3->10 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
14->12 [style = bold, label=""];
10->2 [style = bold, label=""];
9->1 [style = bold, label=""];
8->13 [style = bold, label=""];
2->8 [style = bold, label=""];
13->4 [style = bold, label=""];
}
