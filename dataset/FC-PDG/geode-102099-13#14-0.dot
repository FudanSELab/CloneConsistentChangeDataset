digraph {
11 [style = filled, label = "setEntryMap(map)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean withConcurrencyChecks@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "RegionEntry regionEntryForGetEntry@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "LocalRegion owner = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RegionEntryFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestableAbstractRegionMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "factory != null@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(owner.getScope()).thenReturn(Scope.LOCAL)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(owner.getCachePerfStats()).thenReturn(cachePerfStats)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(owner.getEvictionAttributes()).thenReturn(evictionAttributes)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "super(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestableAbstractRegionMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "createOwner['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(owner.isInitialized()).thenReturn(true)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "when(owner.getDataPolicy()).thenReturn(DataPolicy.REPLICATE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "boolean withConcurrencyChecks@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "map != null@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "CachePerfStats cachePerfStats = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "this.regionEntryForGetEntry = regionEntryForGetEntry@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "setEntryFactory(factory)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "doThrow().when(owner).checkEntryNotFound(any())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ConcurrentMapWithReusableEntries map@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "RegionEntryFactory factory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "doThrow().when(owner).checkEntryNotFound(any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "initialize(owner,new Attributes(),null,false)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boolean withConcurrencyChecks@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return owner@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(owner.getConcurrencyChecksEnabled()).thenReturn(withConcurrencyChecks)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ConcurrentMapWithReusableEntries map@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
1->8 [style = solid, label="regionEntryForGetEntry"];
20->13 [style = bold, label=""];
16->11 [style = bold, label=""];
10->15 [style = bold, label=""];
27->15 [style = solid, label="owner"];
14->11 [style = solid, label="map"];
12->7 [style = solid, label="owner"];
9->0 [style = bold, label=""];
28->10 [style = bold, label=""];
17->9 [style = bold, label=""];
18->1 [style = dotted, label="true"];
21->10 [style = solid, label="withConcurrencyChecks"];
23->11 [style = solid, label="map"];
18->19 [style = dotted, label="true"];
3->5 [style = solid, label="factory"];
20->21 [style = dotted, label="true"];
25->12 [style = solid, label="cachePerfStats"];
12->6 [style = bold, label=""];
18->14 [style = dotted, label="true"];
4->28 [style = bold, label=""];
23->16 [style = solid, label="map"];
0->7 [style = bold, label=""];
22->2 [style = solid, label="factory"];
3->2 [style = solid, label="factory"];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
5->2 [style = bold, label=""];
13->12 [style = bold, label=""];
19->23 [style = dashed, label="0"];
14->16 [style = solid, label="map"];
25->12 [style = bold, label=""];
24->26 [style = dotted, label="true"];
18->3 [style = dotted, label="true"];
7->16 [style = bold, label=""];
20->23 [style = dotted, label="true"];
22->5 [style = solid, label="factory"];
18->13 [style = bold, label=""];
16->5 [style = bold, label=""];
20->22 [style = dotted, label="true"];
26->4 [style = solid, label="withConcurrencyChecks"];
13->8 [style = bold, label=""];
16->11 [style = dotted, label="true"];
27->25 [style = bold, label=""];
19->10 [style = solid, label="withConcurrencyChecks"];
8->12 [style = bold, label=""];
24->27 [style = bold, label=""];
6->4 [style = solid, label="cachePerfStats"];
5->2 [style = dotted, label="true"];
}
