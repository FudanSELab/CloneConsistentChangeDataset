digraph {
16 [style = filled, label = "equals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "!(o instanceof HllSketchToStringPostAggregator)@@@6@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "!name.equals(that.name)@@@10@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return false@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "this == o@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return true@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "equals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return field.equals(that.field)@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Object o@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "equals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "HllSketchToStringPostAggregator that = (HllSketchToStringPostAggregator)o@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "return name.equals(that.name) && field.equals(that.field)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "!(o instanceof SketchToStringPostAggregator)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final HllSketchToStringPostAggregator that = (HllSketchToStringPostAggregator)o@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final Object o@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return false@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "o == null || getClass() != o.getClass()@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final SketchToStringPostAggregator that = (SketchToStringPostAggregator)o@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->9 [style = dotted, label="true"];
9->10 [style = dashed, label="0"];
2->0 [style = dotted, label="true"];
0->13 [style = bold, label=""];
4->17 [style = dashed, label="0"];
0->17 [style = bold, label=""];
7->14 [style = dashed, label="0"];
9->4 [style = solid, label="o"];
1->15 [style = bold, label=""];
10->11 [style = solid, label="o"];
15->0 [style = dotted, label="true"];
2->4 [style = bold, label=""];
12->1 [style = bold, label=""];
4->7 [style = bold, label=""];
7->3 [style = bold, label=""];
6->15 [style = bold, label=""];
1->11 [style = bold, label=""];
6->2 [style = bold, label=""];
9->1 [style = solid, label="o"];
17->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
8->1 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
12->10 [style = dotted, label="true"];
16->1 [style = bold, label=""];
7->3 [style = dotted, label="true"];
0->4 [style = bold, label=""];
11->0 [style = dotted, label="true"];
6->11 [style = bold, label=""];
11->13 [style = bold, label=""];
15->0 [style = bold, label=""];
1->6 [style = dotted, label="true"];
9->17 [style = solid, label="o"];
10->1 [style = solid, label="o"];
1->2 [style = bold, label=""];
8->9 [style = dotted, label="true"];
10->13 [style = solid, label="o"];
4->13 [style = dashed, label="0"];
13->14 [style = bold, label=""];
}
