digraph {
2 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int m@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final String threadTestString = testString + i@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "int numAttempts = 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(new String(data,UTF_8),testString + (m - 1))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "createNremoveMtest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "byte(( data = null@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(data)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(new String(data),testString + (m - 1))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final byte(((( takeResult = new byte((((((@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "i < numAttempts@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final int numClients = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(new String(takeResult(0(),threadTestString)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "String dir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String dir = \"/testTakeWait2\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "offerThread.start()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "takeThread.join()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "takeThread.start()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertNotNull(takeResult(0()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createNremoveMtest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "offerThread.join()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Thread offerThread = new Thread(null)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testTakeWait2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Thread.sleep(1000)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final int numClients = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes(UTF_8))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Thread takeThread = new Thread(null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < m@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->13 [style = solid, label="dir"];
8->16 [style = bold, label=""];
15->10 [style = bold, label=""];
2->26 [style = bold, label=""];
12->13 [style = solid, label="dir"];
13->47 [style = bold, label=""];
8->16 [style = solid, label="i"];
16->13 [style = dotted, label="true"];
23->45 [style = bold, label=""];
22->25 [style = solid, label="testString"];
14->0 [style = dotted, label="true"];
31->35 [style = solid, label="takeResult"];
45->38 [style = dotted, label="true"];
45->31 [style = bold, label=""];
16->10 [style = dotted, label="true"];
1->20 [style = solid, label="m"];
16->10 [style = solid, label="i"];
19->20 [style = solid, label="i"];
41->47 [style = solid, label="dir"];
10->47 [style = dotted, label="true"];
24->21 [style = bold, label=""];
1->3 [style = solid, label="m"];
23->45 [style = solid, label="i"];
27->20 [style = solid, label="m"];
34->32 [style = bold, label=""];
7->26 [style = dashed, label="0"];
45->43 [style = dotted, label="true"];
45->32 [style = dotted, label="true"];
11->25 [style = bold, label=""];
15->10 [style = solid, label="i"];
22->41 [style = dashed, label="0"];
44->2 [style = bold, label=""];
13->47 [style = solid, label="clients"];
15->13 [style = bold, label=""];
36->44 [style = solid, label="threadTestString"];
14->12 [style = dotted, label="true"];
5->23 [style = bold, label=""];
35->44 [style = bold, label=""];
20->24 [style = dotted, label="true"];
22->2 [style = solid, label="testString"];
19->20 [style = bold, label=""];
23->2 [style = solid, label="i"];
41->37 [style = bold, label=""];
14->22 [style = bold, label=""];
4->18 [style = bold, label=""];
45->44 [style = dotted, label="true"];
46->39 [style = bold, label=""];
26->6 [style = bold, label=""];
23->2 [style = dotted, label="true"];
42->40 [style = bold, label=""];
33->23 [style = bold, label=""];
6->2 [style = solid, label="i"];
10->16 [style = solid, label="i"];
45->48 [style = dotted, label="true"];
39->35 [style = bold, label=""];
7->6 [style = bold, label=""];
33->45 [style = solid, label="numAttempts"];
22->17 [style = bold, label=""];
49->41 [style = bold, label=""];
45->39 [style = dotted, label="true"];
0->23 [style = solid, label="n"];
31->44 [style = solid, label="takeResult"];
14->1 [style = dotted, label="true"];
2->45 [style = solid, label="i"];
2->36 [style = solid, label="i"];
45->31 [style = dotted, label="true"];
37->36 [style = solid, label="testString"];
5->23 [style = solid, label="i"];
13->10 [style = bold, label=""];
36->43 [style = bold, label=""];
9->25 [style = solid, label="data"];
32->46 [style = bold, label=""];
45->2 [style = dotted, label="true"];
45->46 [style = dotted, label="true"];
6->23 [style = bold, label=""];
5->2 [style = solid, label="i"];
45->34 [style = dotted, label="true"];
22->3 [style = solid, label="testString"];
31->36 [style = bold, label=""];
23->7 [style = dotted, label="true"];
9->11 [style = solid, label="data"];
13->10 [style = solid, label="i"];
27->25 [style = solid, label="m"];
10->16 [style = bold, label=""];
10->13 [style = bold, label=""];
29->28 [style = dotted, label="true"];
11->3 [style = bold, label=""];
10->13 [style = dotted, label="true"];
38->34 [style = bold, label=""];
16->5 [style = bold, label=""];
9->19 [style = bold, label=""];
2->45 [style = bold, label=""];
40->30 [style = bold, label=""];
10->33 [style = bold, label=""];
18->8 [style = bold, label=""];
23->2 [style = bold, label=""];
9->3 [style = solid, label="data"];
17->4 [style = bold, label=""];
37->42 [style = bold, label=""];
20->11 [style = bold, label=""];
16->15 [style = dotted, label="true"];
24->25 [style = solid, label="data"];
16->15 [style = bold, label=""];
47->15 [style = bold, label=""];
12->23 [style = solid, label="n"];
6->23 [style = solid, label="i"];
16->10 [style = bold, label=""];
23->6 [style = dotted, label="true"];
29->27 [style = dotted, label="true"];
47->15 [style = solid, label="i"];
43->48 [style = bold, label=""];
23->45 [style = dashed, label="0"];
15->13 [style = solid, label="clients"];
21->20 [style = solid, label="i"];
20->21 [style = dotted, label="true"];
29->12 [style = dotted, label="true"];
24->11 [style = solid, label="data"];
10->15 [style = dotted, label="true"];
24->3 [style = solid, label="data"];
23->26 [style = dotted, label="true"];
21->20 [style = bold, label=""];
48->38 [style = bold, label=""];
19->21 [style = solid, label="i"];
45->35 [style = dotted, label="true"];
4->42 [style = dashed, label="0"];
45->36 [style = dotted, label="true"];
17->37 [style = dashed, label="0"];
2->7 [style = bold, label=""];
29->22 [style = bold, label=""];
20->24 [style = bold, label=""];
30->16 [style = bold, label=""];
23->9 [style = bold, label=""];
5->6 [style = solid, label="i"];
23->36 [style = solid, label="i"];
3->25 [style = dashed, label="0"];
}
