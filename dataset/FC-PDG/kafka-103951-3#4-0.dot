digraph {
0 [style = filled, label = "assertFalse(fetcher.hasCompletedFetches())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSkippingAbortedTransactions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "currentOffset += abortTransaction(buffer,1L,currentOffset,time.milliseconds())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "subscriptions.assignFromUser(singleton(tp1))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "currentOffset += commitTransaction(buffer,1L,currentOffset,time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(fetcher.hasCompletedFetches())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "abortedTransactions.add(new FetchResponse.AbortedTransaction(1,0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MemoryRecords records = MemoryRecords.readableRecords(buffer)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(fetchedRecords.containsKey(tp1))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Fetcher<byte((,byte((> fetcher = createFetcher(subscriptions,new Metrics(),new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Set<String> actuallyCommittedKeys = new HashSet<>()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "subscriptions.seek(tp1,0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.prepareResponse(fetchResponseWithAbortedTransactions(records,abortedTransactions,Errors.NONE,100L,100L,0))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(actuallyCommittedKeys.equals(committedKeys))@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "currentOffset += appendTransactionalRecords(buffer,1L,currentOffset,new SimpleRecord(time.milliseconds(),\"commit1-1\".getBytes(),\"value\".getBytes()),new SimpleRecord(time.milliseconds(),\"commit1-2\".getBytes(),\"value\".getBytes()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(fetchedRecords.containsKey(tp1))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int currentOffset = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "currentOffset += appendTransactionalRecords(buffer,1L,currentOffset,new SimpleRecord(time.milliseconds(),\"key\".getBytes(),\"value\".getBytes()),new SimpleRecord(time.milliseconds(),\"key\".getBytes(),\"value\".getBytes()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> fetchedConsumerRecords = fetchedRecords.get(tp1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "currentOffset += appendTransactionalRecords(buffer,1L,currentOffset,new SimpleRecord(time.milliseconds(),\"abort1-1\".getBytes(),\"value\".getBytes()),new SimpleRecord(time.milliseconds(),\"abort1-2\".getBytes(),\"value\".getBytes()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "buffer.flip()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "currentOffset += abortTransaction(buffer,1L,currentOffset)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "actuallyCommittedKeys.add(new String(consumerRecord.key(),StandardCharsets.UTF_8))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Set<String> committedKeys = new HashSet<>(Arrays.asList(\"commit1-1\",\"commit1-2\"))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testSkippingAbortedTransactions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "currentOffset += abortTransaction(buffer,1L,currentOffset,time.milliseconds())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(fetchedRecords.get(tp1).size(),2)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<FetchResponse.AbortedTransaction> abortedTransactions = new ArrayList<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testMultipleAbortMarkers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<TopicPartition,List<ConsumerRecord<byte((,byte((>>> fetchedRecords = fetcher.fetchedRecords()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->11 [style = solid, label="abortedTransactions"];
12->7 [style = bold, label=""];
11->4 [style = bold, label=""];
6->22 [style = solid, label="buffer"];
6->31 [style = solid, label="buffer"];
10->2 [style = bold, label=""];
1->9 [style = bold, label=""];
15->11 [style = solid, label="records"];
9->29 [style = dashed, label="0"];
10->22 [style = solid, label="currentOffset"];
24->23 [style = bold, label=""];
25->2 [style = bold, label=""];
5->28 [style = dashed, label="0"];
9->20 [style = bold, label=""];
28->32 [style = bold, label=""];
6->29 [style = solid, label="buffer"];
18->5 [style = bold, label=""];
1->29 [style = bold, label=""];
24->27 [style = solid, label="committedKeys"];
31->25 [style = solid, label="currentOffset"];
6->15 [style = solid, label="buffer"];
4->17 [style = bold, label=""];
6->9 [style = solid, label="buffer"];
22->31 [style = bold, label=""];
9->10 [style = solid, label="currentOffset"];
0->11 [style = bold, label=""];
26->14 [style = bold, label=""];
18->28 [style = bold, label=""];
2->3 [style = bold, label=""];
23->21 [style = bold, label=""];
1->29 [style = solid, label="currentOffset"];
16->12 [style = bold, label=""];
10->22 [style = bold, label=""];
9->20 [style = solid, label="currentOffset"];
6->10 [style = solid, label="buffer"];
1->9 [style = solid, label="currentOffset"];
7->0 [style = bold, label=""];
3->8 [style = bold, label=""];
15->16 [style = bold, label=""];
6->20 [style = solid, label="buffer"];
14->6 [style = bold, label=""];
21->27 [style = bold, label=""];
29->10 [style = bold, label=""];
29->10 [style = solid, label="currentOffset"];
6->25 [style = solid, label="buffer"];
22->31 [style = solid, label="currentOffset"];
32->30 [style = bold, label=""];
19->14 [style = bold, label=""];
20->2 [style = bold, label=""];
13->14 [style = bold, label=""];
6->1 [style = bold, label=""];
10->20 [style = dashed, label="0"];
30->24 [style = bold, label=""];
31->25 [style = bold, label=""];
8->15 [style = bold, label=""];
9->10 [style = bold, label=""];
17->18 [style = bold, label=""];
}
