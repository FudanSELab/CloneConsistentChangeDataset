digraph {
24 [style = filled, label = "testAsyncCheckpointException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final AsyncCheckpointRunnable runnable = createAsyncRunnable(snapshotsInProgress,environment,isTaskRunning)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "boolean isTaskRunning@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "MockEnvironment mockEnvironment = MockEnvironment.builder().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "runnable.run()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final TestEnvironment environment = new TestEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "isTaskRunning@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final Map<OperatorID,OperatorSnapshotFutures> snapshotsInProgress = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testNotifyCheckpointAbortedDuringAsyncPhase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(1,subtaskCheckpointCoordinator.getAsyncCheckpointRunnableSize())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final BlockingRunnableFuture rawKeyedStateHandleFuture = new BlockingRunnableFuture()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rawKeyedStateHandleFuture.awaitRun()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "OperatorSnapshotFutures operatorSnapshotResult = new OperatorSnapshotFutures(DoneFuture.of(SnapshotResult.empty()),rawKeyedStateHandleFuture,DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(rawKeyedStateHandleFuture.isCancelled())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertSame(environment.getCause().getCheckpointFailureReason(),CheckpointFailureReason.CHECKPOINT_ASYNC_EXCEPTION)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "snapshotsInProgress.put(new OperatorID(),new OperatorSnapshotFutures(ExceptionallyDoneFuture.of(new RuntimeException(\"Async Checkpoint Exception\")),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty())))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "long checkpointId = 42L@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "subtaskCheckpointCoordinator.checkpointState(new CheckpointMetaData(checkpointId,System.currentTimeMillis()),CheckpointOptions.forCheckpointWithDefaultLocation(),new CheckpointMetricsBuilder(),operatorChain,null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final OperatorChain<String,AbstractStreamOperator<String>> operatorChain = operatorChain(new CheckpointOperator(operatorSnapshotResult))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(0,subtaskCheckpointCoordinator.getAsyncCheckpointRunnableSize())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNull(environment.getCause())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testNotifyCheckpointAbortedDuringAsyncPhase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "subtaskCheckpointCoordinator.getChannelStateWriter().start(checkpointId,CheckpointOptions.forCheckpointWithDefaultLocation())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "subtaskCheckpointCoordinator.notifyCheckpointAborted(checkpointId,operatorChain,null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SubtaskCheckpointCoordinatorImpl subtaskCheckpointCoordinator = (SubtaskCheckpointCoordinatorImpl)new MockSubtaskCheckpointCoordinatorBuilder().setEnvironment(mockEnvironment).setExecutor(Executors.newSingleThreadExecutor()).setUnalignedCheckpointEnabled(true).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertFalse(rawKeyedStateHandleFuture.isCancelled())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->25 [style = bold, label=""];
15->10 [style = bold, label=""];
18->23 [style = bold, label=""];
0->7 [style = solid, label="rawKeyedStateHandleFuture"];
11->6 [style = bold, label=""];
7->2 [style = solid, label="operatorSnapshotResult"];
12->11 [style = bold, label=""];
14->5 [style = solid, label="checkpointId"];
18->19 [style = bold, label=""];
22->17 [style = solid, label="snapshotsInProgress"];
20->18 [style = solid, label="isTaskRunning"];
16->17 [style = bold, label=""];
25->16 [style = bold, label=""];
24->22 [style = bold, label=""];
21->18 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
2->8 [style = solid, label="operatorChain"];
13->3 [style = bold, label=""];
5->12 [style = bold, label=""];
7->2 [style = bold, label=""];
14->9 [style = solid, label="checkpointId"];
24->20 [style = dotted, label="true"];
10->0 [style = bold, label=""];
2->14 [style = bold, label=""];
6->8 [style = bold, label=""];
18->19 [style = dotted, label="false"];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
2->5 [style = solid, label="operatorChain"];
14->9 [style = bold, label=""];
16->17 [style = solid, label="environment"];
20->17 [style = solid, label="isTaskRunning"];
1->10 [style = bold, label=""];
17->21 [style = bold, label=""];
8->13 [style = bold, label=""];
14->8 [style = solid, label="checkpointId"];
18->23 [style = dotted, label="true"];
}
