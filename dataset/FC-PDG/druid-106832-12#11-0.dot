digraph {
1 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"health\",91))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"automotive\",93))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"automotive\",91))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testSearchWithCardinality['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PARTIAL_NULL_DIMENSION,\"value\",186))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"entertainment\",91))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"entertainment\",93))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<SearchHit> expectedHits = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSearchWithCardinality['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "checkSearchQuery(searchQuery,expectedHits)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "checkSearchQuery(searchQuery,mergedRunner,expectedHits)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.ALL_GRAN).intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).query(\"a\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"mezzanine\",273))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"mezzanine\",279))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "QueryRunner mergedRunner = TOOL_CHEST.mergeResults(new QueryRunner<Result<SearchResultValue>>(){@Override public Sequence<Result<SearchResultValue>> run(QueryPlus<Result<SearchResultValue>> queryPlus,ResponseContext responseContext){final QueryPlus<Result<SearchResultValue>> queryPlus1 = queryPlus.withQuery(queryPlus.getQuery().withQuerySegmentSpec(new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(\"2011-01-12/2011-02-28\")))))final QueryPlus<Result<SearchResultValue>> queryPlus2 = queryPlus.withQuery(queryPlus.getQuery().withQuerySegmentSpec(new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(\"2011-03-01/2011-04-15\")))))return Sequences.concat(runner.run(queryPlus1,responseContext),runner.run(queryPlus2,responseContext))}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.MARKET_DIMENSION,\"total_market\",186))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.ALL_GRAN).intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).query(\"a\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.MARKET_DIMENSION,\"total_market\",182))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"travel\",91))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION,\"a\",93))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testSearch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"health\",93))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"travel\",93))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION,\"a\",91))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PARTIAL_NULL_DIMENSION,\"value\",182))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->16 [style = dashed, label="0"];
11->12 [style = bold, label=""];
23->19 [style = bold, label=""];
10->18 [style = dashed, label="0"];
11->4 [style = dashed, label="0"];
24->23 [style = bold, label=""];
4->16 [style = bold, label=""];
18->24 [style = bold, label=""];
1->22 [style = dashed, label="0"];
18->16 [style = solid, label="searchQuery"];
4->5 [style = bold, label=""];
19->15 [style = bold, label=""];
2->10 [style = bold, label=""];
0->8 [style = bold, label=""];
15->22 [style = bold, label=""];
10->12 [style = solid, label="searchQuery"];
0->20 [style = dashed, label="0"];
10->3 [style = bold, label=""];
6->9 [style = bold, label=""];
8->21 [style = dashed, label="0"];
20->21 [style = bold, label=""];
8->11 [style = bold, label=""];
22->14 [style = bold, label=""];
5->23 [style = dashed, label="0"];
9->15 [style = dashed, label="0"];
7->0 [style = bold, label=""];
7->14 [style = dashed, label="0"];
4->12 [style = solid, label="expectedHits"];
1->7 [style = bold, label=""];
6->19 [style = dashed, label="0"];
13->10 [style = bold, label=""];
21->4 [style = bold, label=""];
9->1 [style = bold, label=""];
3->12 [style = solid, label="mergedRunner"];
3->4 [style = bold, label=""];
14->20 [style = bold, label=""];
5->6 [style = bold, label=""];
24->16 [style = solid, label="expectedHits"];
17->18 [style = bold, label=""];
}
