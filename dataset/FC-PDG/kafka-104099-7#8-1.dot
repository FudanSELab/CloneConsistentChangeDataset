digraph {
38 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(r1partitions3,r3partitions3)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testAssignmentWithMultipleGenerations1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(r2partitions2.containsAll(r1partitions2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<TopicPartition> r1partitions3 = assignment.get(consumer3)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(assignor.isSticky())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<TopicPartition> r3partitions3 = assignment.get(consumer3)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(r2partitions1.containsAll(r1partitions1))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithGeneration(topics(topic),r1partitions2,1))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(assignor.isSticky())@@@41@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "subscriptions.put(consumer3,buildSubscriptionWithGeneration(topics(topic),r1partitions3,1))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(6,r2partitions2.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(r1partitions2,r3partitions2)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "List<TopicPartition> r3partitions1 = assignment.get(consumer1)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<TopicPartition> r1partitions2 = assignment.get(consumer2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(r1partitions1.size() == 2 && r1partitions2.size() == 2 && r1partitions3.size() == 2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String consumer1 = \"consumer1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(r2partitions1.size() == 3 && r2partitions2.size() == 3)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testAssignmentWithMultipleGenerations1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(Collections.disjoint(r2partitions2,r1partitions3))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<TopicPartition> r3partitions2 = assignment.get(consumer2)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(r3partitions1.size() == 2 && r3partitions2.size() == 2 && r3partitions3.size() == 2)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithGeneration(topics(topic),r2partitions2,2))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "subscriptions.put(consumer1,buildSubscriptionWithGeneration(topics(topic),r1partitions1,1))@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<TopicPartition> r2partitions1 = assignment.get(consumer1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "subscriptions.put(consumer1,buildSubscription(topics(topic),r1partitions1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<TopicPartition> r1partitions1 = assignment.get(consumer1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "subscriptions.remove(consumer1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "subscriptions.remove(consumer1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(r1partitions1,r3partitions1)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String consumer3 = \"consumer3\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String consumer2 = \"consumer2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<TopicPartition> r2partitions2 = assignment.get(consumer2)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testAssignmentWithMultipleGenerations2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "subscriptions.put(consumer2,buildSubscription(topics(topic),r1partitions2))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(Collections.disjoint(r3partitions2,r3partitions3))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "subscriptions.remove(consumer3)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(r3partitions2.size() == 3 && r3partitions3.size() == 3)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->6 [style = bold, label=""];
14->25 [style = bold, label=""];
13->49 [style = solid, label="r1partitions2"];
50->44 [style = bold, label=""];
27->9 [style = bold, label=""];
10->35 [style = bold, label=""];
20->6 [style = solid, label="consumer2"];
17->9 [style = solid, label="consumer1"];
20->46 [style = solid, label="consumer2"];
21->28 [style = bold, label=""];
24->30 [style = bold, label=""];
9->26 [style = bold, label=""];
22->41 [style = solid, label="consumer3"];
15->30 [style = solid, label="r1partitions1"];
49->39 [style = bold, label=""];
17->0 [style = solid, label="consumer1"];
37->31 [style = bold, label=""];
51->17 [style = bold, label=""];
29->14 [style = bold, label=""];
21->25 [style = dashed, label="0"];
23->12 [style = bold, label=""];
4->36 [style = bold, label=""];
17->34 [style = solid, label="consumer1"];
2->39 [style = solid, label="partitionsPerTopic"];
22->42 [style = solid, label="consumer3"];
2->33 [style = solid, label="partitionsPerTopic"];
25->21 [style = bold, label=""];
39->29 [style = bold, label=""];
17->20 [style = bold, label=""];
25->47 [style = bold, label=""];
15->13 [style = bold, label=""];
48->49 [style = bold, label=""];
8->23 [style = bold, label=""];
33->15 [style = bold, label=""];
24->48 [style = dashed, label="0"];
42->44 [style = solid, label="r3partitions3"];
12->48 [style = bold, label=""];
41->6 [style = bold, label=""];
43->46 [style = bold, label=""];
20->5 [style = solid, label="consumer2"];
1->17 [style = bold, label=""];
19->36 [style = solid, label="r3partitions3"];
33->31 [style = solid, label="assignment"];
7->33 [style = bold, label=""];
15->9 [style = solid, label="r1partitions1"];
20->35 [style = solid, label="consumer2"];
2->6 [style = solid, label="partitionsPerTopic"];
31->27 [style = bold, label=""];
17->28 [style = solid, label="consumer1"];
40->17 [style = bold, label=""];
6->45 [style = solid, label="assignment"];
47->41 [style = bold, label=""];
5->7 [style = bold, label=""];
26->46 [style = dashed, label="0"];
13->26 [style = solid, label="r1partitions2"];
12->47 [style = solid, label="r2partitions2"];
36->19 [style = dashed, label="0"];
44->45 [style = bold, label=""];
45->52 [style = bold, label=""];
14->21 [style = bold, label=""];
20->12 [style = solid, label="consumer2"];
13->18 [style = bold, label=""];
4->35 [style = dashed, label="0"];
18->37 [style = bold, label=""];
20->10 [style = solid, label="consumer2"];
22->2 [style = bold, label=""];
27->43 [style = bold, label=""];
6->34 [style = bold, label=""];
18->21 [style = solid, label="r1partitions3"];
22->18 [style = solid, label="consumer3"];
22->34 [style = solid, label="consumer3"];
26->8 [style = bold, label=""];
19->50 [style = bold, label=""];
2->38 [style = solid, label="partitionsPerTopic"];
12->24 [style = bold, label=""];
2->29 [style = solid, label="partitionsPerTopic"];
10->3 [style = solid, label="assignment"];
2->23 [style = solid, label="partitionsPerTopic"];
38->3 [style = bold, label=""];
34->19 [style = solid, label="r3partitions1"];
17->15 [style = solid, label="consumer1"];
13->39 [style = solid, label="r1partitions2"];
20->13 [style = solid, label="consumer2"];
46->8 [style = bold, label=""];
2->31 [style = solid, label="partitionsPerTopic"];
2->10 [style = solid, label="partitionsPerTopic"];
6->52 [style = solid, label="assignment"];
2->11 [style = bold, label=""];
18->34 [style = solid, label="r1partitions3"];
13->46 [style = solid, label="r1partitions2"];
23->29 [style = solid, label="assignment"];
0->5 [style = bold, label=""];
20->47 [style = solid, label="consumer2"];
10->50 [style = solid, label="r3partitions2"];
20->26 [style = solid, label="consumer2"];
23->16 [style = bold, label=""];
18->41 [style = solid, label="r1partitions3"];
35->36 [style = solid, label="r3partitions2"];
17->16 [style = solid, label="consumer1"];
35->19 [style = bold, label=""];
12->21 [style = solid, label="r2partitions2"];
22->8 [style = solid, label="consumer3"];
15->25 [style = solid, label="r1partitions1"];
22->19 [style = solid, label="consumer3"];
34->10 [style = bold, label=""];
20->22 [style = bold, label=""];
42->35 [style = bold, label=""];
33->27 [style = solid, label="assignment"];
17->43 [style = solid, label="consumer1"];
18->44 [style = solid, label="r1partitions3"];
17->25 [style = solid, label="consumer1"];
22->7 [style = solid, label="consumer3"];
11->0 [style = bold, label=""];
10->38 [style = solid, label="assignment"];
10->42 [style = bold, label=""];
52->32 [style = bold, label=""];
15->19 [style = solid, label="r1partitions1"];
12->6 [style = solid, label="r2partitions2"];
30->39 [style = bold, label=""];
19->4 [style = bold, label=""];
36->38 [style = bold, label=""];
23->39 [style = solid, label="assignment"];
3->32 [style = bold, label=""];
16->12 [style = bold, label=""];
23->14 [style = solid, label="assignment"];
2->45 [style = solid, label="partitionsPerTopic"];
13->50 [style = solid, label="r1partitions2"];
}
