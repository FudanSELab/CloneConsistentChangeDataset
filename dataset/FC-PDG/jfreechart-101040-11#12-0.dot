digraph {
15 [style = filled, label = "KeyedObject<String> ko2 = CloneUtils.clone(ko1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertTrue(ko1 != ko2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "obj1 = new DefaultPieDataset()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(ko2.getObject(\"K1\") != obj1)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(ko1 != ko2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "KeyedObject<String> ko1 = new KeyedObject<>(\"Test\",obj1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(ko2.getObject(\"K1\") == obj1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "KeyedObject<String> ko2 = (KeyedObject)ko1.clone()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "ko2 = (KeyedObjects)ko1.clone()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Object obj1 = new ArrayList<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ko1 = new KeyedObjects()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testCloning2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Object obj1 = new ArrayList<String>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)ko1.clone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ko1 = new KeyedObject<>(\"Test\",obj1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ko2 = CloneUtils.clone(ko1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(ko1 != ko2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->14 [style = solid, label="ko2"];
23->25 [style = bold, label=""];
21->1 [style = solid, label="ko2"];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
7->23 [style = dashed, label="0"];
15->14 [style = bold, label=""];
28->25 [style = solid, label="obj1"];
29->2 [style = solid, label="ko2"];
23->2 [style = solid, label="ko1"];
26->11 [style = solid, label="ko1"];
2->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
18->19 [style = bold, label=""];
13->5 [style = solid, label="ko2"];
21->11 [style = solid, label="ko2"];
7->0 [style = bold, label=""];
22->28 [style = bold, label=""];
24->22 [style = solid, label="obj1"];
25->29 [style = bold, label=""];
28->19 [style = solid, label="obj1"];
9->8 [style = bold, label=""];
12->6 [style = bold, label=""];
13->15 [style = dashed, label="0"];
0->9 [style = solid, label="ko2"];
4->7 [style = bold, label=""];
6->15 [style = bold, label=""];
24->27 [style = solid, label="obj1"];
12->1 [style = solid, label="obj1"];
1->22 [style = dashed, label="0"];
1->22 [style = bold, label=""];
3->18 [style = bold, label=""];
4->28 [style = dashed, label="0"];
16->9 [style = solid, label="ko2"];
3->19 [style = dashed, label="0"];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
24->26 [style = bold, label=""];
4->7 [style = solid, label="obj1"];
17->12 [style = bold, label=""];
26->27 [style = bold, label=""];
29->2 [style = bold, label=""];
29->18 [style = solid, label="ko2"];
0->25 [style = dashed, label="0"];
8->2 [style = bold, label=""];
21->11 [style = bold, label=""];
10->12 [style = bold, label=""];
28->23 [style = bold, label=""];
6->26 [style = dashed, label="0"];
6->13 [style = bold, label=""];
0->2 [style = solid, label="ko2"];
12->24 [style = dashed, label="0"];
6->15 [style = solid, label="ko1"];
15->5 [style = solid, label="ko2"];
7->16 [style = bold, label=""];
12->6 [style = solid, label="obj1"];
16->2 [style = solid, label="ko2"];
6->14 [style = solid, label="ko1"];
15->14 [style = solid, label="ko2"];
20->24 [style = bold, label=""];
27->21 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
16->9 [style = bold, label=""];
7->9 [style = solid, label="ko1"];
4->3 [style = solid, label="obj1"];
7->16 [style = solid, label="ko1"];
}
