digraph {
20 [style = filled, label = "List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList(PathChildrenCacheEvent.Type.CHILD_REMOVED,PathChildrenCacheEvent.Type.CHILD_ADDED)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client.create().forPath(\"/base\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.create().forPath(\"/base/a\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cache.start()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testIssue27['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assert.assertTrue(semaphore.tryAcquire(1,10,TimeUnit.SECONDS))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "client.start()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(semaphore.tryAcquire(1,10,TimeUnit.SECONDS))@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.create().forPath(\"/base/b\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.create().forPath(\"/base/a\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.getChildren().forPath(\"/base\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "client.delete().forPath(\"/base/a\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testIssue27Alt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.create().forPath(\"/base/c\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList(PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_REMOVED,PathChildrenCacheEvent.Type.CHILD_ADDED)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache.getListenable().addListener(new PathChildrenCacheListener(){@Override public void childEvent(CuratorFramework client,PathChildrenCacheEvent event){events.add(event.getType())semaphore.release()}})@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(expected,events)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "Assert.assertEquals(expected,events)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "{client.close()}@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "{client.close()}@@@31@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testIssue27['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.start()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cache.getListenable().addListener(new PathChildrenCacheListener(){@Override public void childEvent(CuratorFramework client,PathChildrenCacheEvent event){events.add(event.getType())semaphore.release()}})@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList(PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_REMOVED,PathChildrenCacheEvent.Type.CHILD_ADDED)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Timing timing = new Timing()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "cache.start()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,3))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "PathChildrenCache cache = new PathChildrenCache(client,\"/base\",true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{client.close()}@@@30@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
6->3 [style = bold, label=""];
9->6 [style = solid, label="client"];
15->20 [style = dashed, label="0"];
18->24 [style = bold, label=""];
34->9 [style = bold, label=""];
16->11 [style = bold, label=""];
28->18 [style = bold, label=""];
9->2 [style = bold, label=""];
7->12 [style = bold, label=""];
11->1 [style = bold, label=""];
3->14 [style = bold, label=""];
20->28 [style = bold, label=""];
20->28 [style = dashed, label="0"];
23->26 [style = bold, label=""];
14->10 [style = bold, label=""];
1->20 [style = bold, label=""];
35->32 [style = bold, label=""];
20->33 [style = solid, label="expected"];
32->16 [style = bold, label=""];
19->6 [style = bold, label=""];
26->4 [style = bold, label=""];
15->18 [style = bold, label=""];
22->23 [style = bold, label=""];
4->7 [style = bold, label=""];
20->33 [style = bold, label=""];
18->24 [style = solid, label="expected"];
3->35 [style = bold, label=""];
6->28 [style = solid, label="semaphore"];
5->19 [style = bold, label=""];
12->13 [style = bold, label=""];
30->11 [style = bold, label=""];
10->30 [style = dashed, label="0"];
10->16 [style = bold, label=""];
21->22 [style = bold, label=""];
24->25 [style = bold, label=""];
8->9 [style = bold, label=""];
5->18 [style = solid, label="events"];
13->5 [style = bold, label=""];
19->24 [style = solid, label="events"];
33->31 [style = bold, label=""];
6->30 [style = solid, label="semaphore"];
29->10 [style = bold, label=""];
14->35 [style = dashed, label="0"];
23->3 [style = solid, label="client"];
11->27 [style = dashed, label="0"];
20->15 [style = bold, label=""];
6->27 [style = solid, label="semaphore"];
27->20 [style = bold, label=""];
10->30 [style = bold, label=""];
18->0 [style = bold, label=""];
17->4 [style = bold, label=""];
3->29 [style = bold, label=""];
5->33 [style = solid, label="events"];
11->27 [style = bold, label=""];
15->18 [style = solid, label="expected"];
}
