digraph {
5 [style = filled, label = "assertFalse(ProxyContext.getInstance().schemaExists(\"schema_2\"))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "metaDataContexts.setAccessible(true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertNull(ProxyContext.getInstance().getMetaData(\"schema1\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertGetSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(metaDataMap,mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "metaDataContexts.set(ProxyContext.getInstance(),new StandardMetaDataContexts(metaDataMap,mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertNull(ProxyContext.getInstance().getMetaData(null))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(metaDataMap.get(\"schema\"),is(ProxyContext.getInstance().getMetaData(\"schema\")))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertNull(ProxyContext.getInstance().getMetaData(\"\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertSchemaExists['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(ProxyContext.getInstance().schemaExists(\"schema\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertSchemaExists['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
5->13 [style = dashed, label="0"];
6->8 [style = dashed, label="0"];
15->13 [style = bold, label=""];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
2->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
3->6 [style = bold, label=""];
4->2 [style = bold, label=""];
13->11 [style = bold, label=""];
8->7 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->4 [style = bold, label=""];
4->7 [style = dashed, label="0"];
3->8 [style = bold, label=""];
2->15 [style = bold, label=""];
9->3 [style = bold, label=""];
12->3 [style = bold, label=""];
10->1 [style = bold, label=""];
3->10 [style = solid, label="metaDataMap"];
3->2 [style = solid, label="metaDataMap"];
}
