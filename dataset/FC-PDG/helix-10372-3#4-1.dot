digraph {
7 [style = filled, label = "int numberOfPartitions = accessor.getProperty(keyBuilder.idealStates(_resourceName)).getRecord().getListFields().size()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String instanceGroupTag = cache.getIdealState(_resourceName).getInstanceGroupTag()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cache.getInstanceConfigMap().get(liveInstanceName).containsTag(instanceGroupTag)@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String masterValue = cache.getStateModelDef(cache.getIdealState(_resourceName).getStateModelDefRef()).getStatesPriorityList().get(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "instances++@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "HelixDataAccessor accessor = new ZKHelixDataAccessor(_clusterName,new ZkBaseDataAccessor<ZNRecord>(_gZkClient))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return verifyBalanceExternalView(accessor.getProperty(keyBuilder.externalView(_resourceName)).getRecord(),numberOfPartitions,masterValue,replicas,instances)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "instances = cache.getLiveInstances().size()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "cache.refresh(accessor)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int replicas = Integer.parseInt(cache.getIdealState(_resourceName).getReplicas())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "int instances = 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "HelixDataAccessor accessor = new ZKHelixDataAccessor(_clusterName,new ZkBaseDataAccessor<ZNRecord>(_client))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "instances == 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ClusterDataCache cache = new ClusterDataCache()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->17 [style = solid, label="masterValue"];
14->13 [style = solid, label="instances"];
19->18 [style = bold, label=""];
7->17 [style = solid, label="numberOfPartitions"];
8->5 [style = solid, label="masterValue"];
9->0 [style = bold, label=""];
11->14 [style = bold, label=""];
2->6 [style = bold, label=""];
4->5 [style = solid, label="replicas"];
16->8 [style = solid, label="accessor"];
13->17 [style = solid, label="instances"];
16->6 [style = bold, label=""];
0->2 [style = bold, label=""];
0->3 [style = solid, label="accessor"];
19->18 [style = dotted, label="true"];
5->17 [style = solid, label="replicas"];
18->17 [style = bold, label=""];
10->3 [style = bold, label=""];
13->19 [style = solid, label="instances"];
1->0 [style = bold, label=""];
19->17 [style = bold, label=""];
15->16 [style = bold, label=""];
14->17 [style = solid, label="instances"];
7->3 [style = bold, label=""];
12->13 [style = bold, label=""];
18->17 [style = solid, label="instances"];
13->19 [style = bold, label=""];
12->13 [style = dotted, label="true"];
11->12 [style = solid, label="instanceGroupTag"];
13->12 [style = bold, label=""];
14->19 [style = solid, label="instances"];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
14->12 [style = bold, label=""];
6->5 [style = solid, label="numberOfPartitions"];
7->10 [style = dashed, label="0"];
5->11 [style = bold, label=""];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
12->19 [style = bold, label=""];
4->5 [style = bold, label=""];
}
