digraph {
6 [style = filled, label = "String(( parameters = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b3feb4@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testShowExecutionPlan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testShowExecutionPlan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testFrontend.info(parameters)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CliFrontend testFrontend = new CliFrontend(configuration,Collections.singletonList(getCli()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertTrue(buffer.toString().contains(\"\"parallelism\" : 17\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testShowExecutionPlanWithParallelism['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "{restoreStdOut()}@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CliFrontend testFrontend = new CliFrontend(configuration,Collections.singletonList(getCli(configuration)))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fail(\"Program caused an exception: \" + e.getMessage())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Configuration configuration = getConfiguration()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "e.printStackTrace()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Exception e@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(buffer.toString().contains(\"\"parallelism\" : 4\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "replaceStdOut()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String(( parameters = {\"-p\",\"17\",CliFrontendTestUtils.getTestJarPath(),\"--arg\",\"suffix\"}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
5->8 [style = solid, label="configuration"];
11->12 [style = dotted, label="true"];
8->3 [style = bold, label=""];
7->8 [style = dashed, label="0"];
0->15 [style = dashed, label="0"];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
4->2 [style = bold, label=""];
11->13 [style = dotted, label="true"];
2->10 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
13->1 [style = bold, label=""];
6->10 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
10->3 [style = solid, label="parameters"];
10->5 [style = bold, label=""];
5->7 [style = solid, label="configuration"];
0->1 [style = bold, label=""];
5->7 [style = bold, label=""];
14->2 [style = bold, label=""];
15->1 [style = bold, label=""];
6->3 [style = solid, label="parameters"];
}
