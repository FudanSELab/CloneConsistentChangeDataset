digraph {
29 [style = filled, label = "Double longTest = (Double)calculateNumberStat(longTestStart,\"median\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Double intResult = (Double)getStatResult(\"medr\",\"int_id\",VAL_TYPE.DOUBLE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Double doubleTest = (Double)calculateNumberStat(doubleTestStart,\"median\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Integer intResult = ((Integer)getStatResult(\"mar\",\"int_id\",VAL_TYPE.INTEGER))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(getRawResponse(),stringResult,stringTest)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Long longResult = ((Long)getStatResult(\"mar\",\"long_ld\",VAL_TYPE.LONG))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "maxTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(getRawResponse(),intResult,intTest)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Long longResult = (Long)getStatResult(\"mar\",\"long_ld\",VAL_TYPE.LONG)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(getRawResponse(),dateResult,dateTest)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(getRawResponse(),floatResult,floatTest)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Double doubleResult = (Double)getStatResult(\"medr\",\"double_dd\",VAL_TYPE.DOUBLE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Double doubleTest = (Double)calculateStat(doubleTestStart,\"max\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(getRawResponse(),doubleResult,doubleTest)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String dateResult = (String)getStatResult(\"mar\",\"date_dtd\",VAL_TYPE.DATE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Integer intResult = (Integer)getStatResult(\"mar\",\"int_id\",VAL_TYPE.INTEGER)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "Double intTest = (Double)calculateNumberStat(intTestStart,\"median\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String stringTest = (String)calculateStat(stringTestStart,\"max\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String dateTest = (String)calculateStat(dateTestStart,\"max\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Double longResult = (Double)getStatResult(\"medr\",\"long_ld\",VAL_TYPE.DOUBLE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Double doubleResult = (Double)getStatResult(\"mar\",\"double_dd\",VAL_TYPE.DOUBLE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "maxTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Integer intTest = (Integer)calculateStat(intTestStart,\"max\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Float floatResult = (Float)getStatResult(\"mar\",\"float_fd\",VAL_TYPE.FLOAT)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "medianTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Double floatTest = (Double)calculateNumberStat(floatTestStart,\"median\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Long longTest = (Long)calculateStat(longTestStart,\"max\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String stringResult = (String)getStatResult(\"mar\",\"string_sd\",VAL_TYPE.STRING)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Double floatResult = (Double)getStatResult(\"medr\",\"float_fd\",VAL_TYPE.DOUBLE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(getRawResponse(),longResult,longTest)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Float floatResult = ((Float)getStatResult(\"mar\",\"float_fd\",VAL_TYPE.FLOAT))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Float floatTest = (Float)calculateStat(floatTestStart,\"max\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
23->31 [style = bold, label=""];
29->9 [style = solid, label="longTest"];
0->9 [style = bold, label=""];
28->6 [style = bold, label=""];
16->18 [style = bold, label=""];
10->21 [style = dashed, label="0"];
16->18 [style = solid, label="doubleTest"];
2->19 [style = dashed, label="0"];
4->17 [style = bold, label=""];
30->18 [style = solid, label="doubleResult"];
3->1 [style = bold, label=""];
21->0 [style = bold, label=""];
9->2 [style = bold, label=""];
3->31 [style = dashed, label="0"];
6->21 [style = bold, label=""];
22->6 [style = solid, label="intResult"];
24->9 [style = solid, label="longResult"];
26->18 [style = solid, label="doubleTest"];
29->9 [style = bold, label=""];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
18->15 [style = bold, label=""];
30->26 [style = bold, label=""];
4->27 [style = dashed, label="0"];
6->24 [style = bold, label=""];
17->30 [style = bold, label=""];
15->12 [style = solid, label="dateResult"];
24->29 [style = bold, label=""];
3->22 [style = dashed, label="0"];
27->17 [style = solid, label="floatTest"];
1->28 [style = dashed, label="0"];
2->4 [style = bold, label=""];
14->18 [style = solid, label="doubleResult"];
15->5 [style = bold, label=""];
20->22 [style = bold, label=""];
13->7 [style = solid, label="stringTest"];
16->26 [style = dashed, label="0"];
25->27 [style = bold, label=""];
3->6 [style = solid, label="intResult"];
21->9 [style = solid, label="longResult"];
1->6 [style = bold, label=""];
2->17 [style = solid, label="floatResult"];
10->9 [style = solid, label="longResult"];
5->12 [style = solid, label="dateTest"];
5->12 [style = bold, label=""];
17->14 [style = bold, label=""];
13->7 [style = bold, label=""];
14->30 [style = dashed, label="0"];
6->10 [style = bold, label=""];
9->25 [style = bold, label=""];
11->13 [style = bold, label=""];
10->0 [style = bold, label=""];
1->6 [style = solid, label="intTest"];
19->17 [style = solid, label="floatResult"];
27->17 [style = bold, label=""];
28->6 [style = solid, label="intTest"];
0->29 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
9->19 [style = bold, label=""];
25->17 [style = solid, label="floatResult"];
19->4 [style = bold, label=""];
22->1 [style = bold, label=""];
31->28 [style = bold, label=""];
4->17 [style = solid, label="floatTest"];
31->6 [style = solid, label="intResult"];
10->24 [style = dashed, label="0"];
11->7 [style = solid, label="stringResult"];
0->9 [style = solid, label="longTest"];
26->18 [style = bold, label=""];
}
