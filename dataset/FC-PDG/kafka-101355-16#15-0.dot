digraph {
49 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "{Utils.delete(baseDir)}@@@81@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{store.close()}@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer,\"RocksDBWindowStoreTest-TestRestore\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "store.flush()@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertEquals(Utils.mkSet(2L),inner.segmentIds())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "long incr = segmentSize / 2@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector,new ThreadCache(DEFAULT_CACHE_SIZE_BYTES))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 4))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "context.setRecordContext(createRecordContext(startTime))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "store.put(1,\"one\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "File baseDir2 = Files.createTempDirectory(\"test\").toFile()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 6))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "store.put(6,\"six\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(Utils.mkSet(2L),inner.segmentIds())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "long incr = segmentSize / 2@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "store.put(5,\"five\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(Utils.mkSet(3L,4L,5L),inner.segmentIds())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "store.put(7,\"seven\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "store.put(8,\"eight\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "store.put(2,\"two\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 3))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Utils.mkSet(inner.segmentName(4L),inner.segmentName(5L),inner.segmentName(6L)),segmentDirs(baseDir))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "long startTime = segmentSize * 2@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 8))@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "{store.close()}@@@77@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 5))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Utils.mkSet(4L,5L,6L),inner.segmentIds())@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,false,true)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RocksDBWindowStore<Integer,String> inner = (RocksDBWindowStore<Integer,String>)((MeteredWindowStore<Integer,String>)store).inner()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "store.put(0,\"zero\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "store.put(4,\"four\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "context.restore(windowName,changeLog)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer,\"RocksDBWindowStoreTest-TestRestoreII\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector,new ThreadCache(DEFAULT_CACHE_SIZE_BYTES))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRestore\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{store.close()}@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer,\"RocksDBWindowStoreTest-TestRolling\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L),inner.segmentIds())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{Utils.delete(baseDir)}@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@73@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L,4L),inner.segmentIds())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "long startTime = segmentSize * 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRestoreII\"){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 2))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "store.flush()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "store.put(3,\"three\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L,4L),inner.segmentIds())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(Utils.mkSet(inner.segmentName(4L),inner.segmentName(5L),inner.segmentName(6L)),segmentDirs(baseDir))@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{Utils.delete(baseDir2)}@@@76@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,false,true)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L),inner.segmentIds())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector,new ThreadCache(DEFAULT_CACHE_SIZE_BYTES))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(Utils.mkSet(3L,4L,5L),inner.segmentIds())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "RocksDBWindowStore<Integer,String> inner = (RocksDBWindowStore<Integer,String>)((MeteredWindowStore<Integer,String>)store).inner()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 7))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40->4 [style = bold, label=""];
48->21 [style = solid, label="incr"];
8->45 [style = solid, label="startTime"];
61->66 [style = bold, label=""];
8->64 [style = solid, label="startTime"];
16->52 [style = bold, label=""];
9->11 [style = bold, label=""];
8->21 [style = solid, label="startTime"];
48->39 [style = solid, label="incr"];
76->64 [style = bold, label=""];
20->9 [style = bold, label=""];
46->2 [style = bold, label=""];
8->2 [style = solid, label="startTime"];
5->15 [style = bold, label=""];
56->46 [style = solid, label="incr"];
8->92 [style = solid, label="startTime"];
64->77 [style = bold, label=""];
45->24 [style = bold, label=""];
23->76 [style = bold, label=""];
56->33 [style = solid, label="incr"];
54->65 [style = bold, label=""];
62->67 [style = bold, label=""];
48->29 [style = solid, label="incr"];
56->37 [style = solid, label="incr"];
75->42 [style = bold, label=""];
48->20 [style = solid, label="incr"];
63->81 [style = bold, label=""];
1->28 [style = bold, label=""];
17->63 [style = bold, label=""];
48->3 [style = solid, label="incr"];
42->14 [style = solid, label="baseDir"];
56->73 [style = solid, label="incr"];
77->61 [style = bold, label=""];
31->35 [style = bold, label=""];
10->8 [style = bold, label=""];
78->20 [style = bold, label=""];
38->41 [style = solid, label="startTime"];
38->40 [style = solid, label="startTime"];
48->11 [style = solid, label="incr"];
8->39 [style = solid, label="startTime"];
56->76 [style = solid, label="incr"];
56->54 [style = solid, label="incr"];
8->47 [style = bold, label=""];
51->26 [style = bold, label=""];
29->43 [style = bold, label=""];
18->35 [style = bold, label=""];
89->91 [style = bold, label=""];
38->24 [style = solid, label="startTime"];
71->85 [style = bold, label=""];
8->76 [style = solid, label="startTime"];
8->61 [style = solid, label="startTime"];
38->39 [style = solid, label="startTime"];
38->11 [style = solid, label="startTime"];
56->71 [style = solid, label="incr"];
32->20 [style = bold, label=""];
8->88 [style = solid, label="startTime"];
26->0 [style = solid, label="context"];
8->70 [style = solid, label="startTime"];
56->24 [style = solid, label="incr"];
4->46 [style = bold, label=""];
38->18 [style = solid, label="startTime"];
56->61 [style = solid, label="incr"];
90->47 [style = bold, label=""];
79->69 [style = bold, label=""];
6->68 [style = dashed, label="0"];
48->12 [style = solid, label="incr"];
14->30 [style = bold, label=""];
56->40 [style = solid, label="incr"];
8->44 [style = solid, label="startTime"];
36->44 [style = bold, label=""];
16->6 [style = bold, label=""];
72->8 [style = bold, label=""];
42->68 [style = bold, label=""];
48->28 [style = solid, label="incr"];
38->29 [style = solid, label="startTime"];
56->44 [style = solid, label="incr"];
56->79 [style = solid, label="incr"];
24->40 [style = bold, label=""];
38->45 [style = solid, label="startTime"];
8->4 [style = solid, label="startTime"];
48->41 [style = solid, label="incr"];
19->25 [style = solid, label="producer"];
94->62 [style = bold, label=""];
84->72 [style = bold, label=""];
74->12 [style = bold, label=""];
19->25 [style = bold, label=""];
85->73 [style = bold, label=""];
48->18 [style = solid, label="incr"];
93->87 [style = solid, label="baseDir"];
0->7 [style = bold, label=""];
30->19 [style = bold, label=""];
8->20 [style = solid, label="startTime"];
26->0 [style = bold, label=""];
21->37 [style = bold, label=""];
59->11 [style = bold, label=""];
56->89 [style = solid, label="incr"];
56->94 [style = solid, label="incr"];
56->36 [style = solid, label="incr"];
48->40 [style = solid, label="incr"];
93->58 [style = solid, label="baseDir"];
48->2 [style = solid, label="incr"];
25->26 [style = bold, label=""];
56->23 [style = solid, label="incr"];
56->65 [style = solid, label="incr"];
56->45 [style = solid, label="incr"];
55->90 [style = bold, label=""];
11->17 [style = bold, label=""];
8->12 [style = solid, label="startTime"];
8->66 [style = solid, label="startTime"];
35->34 [style = bold, label=""];
44->45 [style = bold, label=""];
8->86 [style = solid, label="startTime"];
8->37 [style = solid, label="startTime"];
16->52 [style = solid, label="producer"];
8->69 [style = solid, label="startTime"];
57->93 [style = bold, label=""];
81->39 [style = bold, label=""];
19->51 [style = solid, label="producer"];
27->14 [style = bold, label=""];
87->84 [style = bold, label=""];
42->10 [style = solid, label="baseDir"];
38->20 [style = solid, label="startTime"];
38->4 [style = solid, label="startTime"];
56->39 [style = solid, label="incr"];
2->3 [style = bold, label=""];
68->87 [style = bold, label=""];
8->23 [style = solid, label="startTime"];
25->51 [style = dashed, label="0"];
56->2 [style = solid, label="incr"];
93->31 [style = solid, label="baseDir"];
8->46 [style = solid, label="startTime"];
42->16 [style = bold, label=""];
51->26 [style = solid, label="recordCollector"];
56->69 [style = solid, label="incr"];
38->31 [style = solid, label="startTime"];
25->26 [style = solid, label="recordCollector"];
23->41 [style = bold, label=""];
8->77 [style = solid, label="startTime"];
38->48 [style = bold, label=""];
38->21 [style = solid, label="startTime"];
48->31 [style = solid, label="incr"];
8->80 [style = solid, label="startTime"];
49->50 [style = bold, label=""];
37->12 [style = bold, label=""];
82->83 [style = bold, label=""];
6->52 [style = dashed, label="0"];
8->71 [style = solid, label="startTime"];
53->50 [style = bold, label=""];
33->79 [style = bold, label=""];
8->85 [style = solid, label="startTime"];
8->73 [style = solid, label="startTime"];
41->36 [style = bold, label=""];
47->32 [style = bold, label=""];
80->55 [style = bold, label=""];
56->20 [style = solid, label="incr"];
48->24 [style = solid, label="incr"];
8->47 [style = solid, label="startTime"];
8->36 [style = solid, label="startTime"];
8->24 [style = solid, label="startTime"];
56->86 [style = solid, label="incr"];
9->59 [style = bold, label=""];
38->47 [style = solid, label="startTime"];
6->10 [style = bold, label=""];
56->77 [style = solid, label="incr"];
60->28 [style = bold, label=""];
86->70 [style = bold, label=""];
37->71 [style = bold, label=""];
8->17 [style = solid, label="startTime"];
35->58 [style = bold, label=""];
56->80 [style = bold, label=""];
38->3 [style = solid, label="startTime"];
50->13 [style = solid, label="changeLog"];
39->1 [style = bold, label=""];
83->21 [style = bold, label=""];
8->33 [style = solid, label="startTime"];
87->84 [style = solid, label="context"];
48->46 [style = solid, label="incr"];
42->26 [style = solid, label="baseDir"];
16->6 [style = solid, label="producer"];
8->40 [style = solid, label="startTime"];
19->51 [style = bold, label=""];
56->92 [style = solid, label="incr"];
43->39 [style = bold, label=""];
52->10 [style = solid, label="recordCollector"];
10->8 [style = solid, label="context"];
1->60 [style = bold, label=""];
38->2 [style = solid, label="startTime"];
7->13 [style = bold, label=""];
56->88 [style = solid, label="incr"];
8->56 [style = bold, label=""];
42->68 [style = solid, label="producer"];
65->88 [style = bold, label=""];
70->89 [style = bold, label=""];
8->79 [style = solid, label="startTime"];
38->46 [style = solid, label="startTime"];
8->89 [style = solid, label="startTime"];
3->31 [style = bold, label=""];
34->5 [style = bold, label=""];
8->28 [style = solid, label="startTime"];
13->44 [style = bold, label=""];
66->92 [style = bold, label=""];
69->54 [style = bold, label=""];
8->94 [style = solid, label="startTime"];
56->66 [style = solid, label="incr"];
31->18 [style = bold, label=""];
52->10 [style = bold, label=""];
8->54 [style = solid, label="startTime"];
48->42 [style = bold, label=""];
56->85 [style = solid, label="incr"];
56->17 [style = solid, label="incr"];
56->64 [style = solid, label="incr"];
48->4 [style = solid, label="incr"];
38->12 [style = solid, label="startTime"];
8->41 [style = solid, label="startTime"];
38->28 [style = solid, label="startTime"];
6->10 [style = solid, label="recordCollector"];
68->87 [style = solid, label="recordCollector"];
56->70 [style = solid, label="incr"];
73->86 [style = bold, label=""];
67->41 [style = bold, label=""];
56->47 [style = solid, label="incr"];
32->78 [style = bold, label=""];
50->38 [style = bold, label=""];
28->33 [style = bold, label=""];
22->27 [style = bold, label=""];
8->65 [style = solid, label="startTime"];
56->4 [style = solid, label="incr"];
92->94 [style = bold, label=""];
12->23 [style = bold, label=""];
88->82 [style = bold, label=""];
33->21 [style = bold, label=""];
93->75 [style = bold, label=""];
17->29 [style = bold, label=""];
42->34 [style = solid, label="baseDir"];
30->15 [style = solid, label="baseDir2"];
91->74 [style = bold, label=""];
36->22 [style = bold, label=""];
}
