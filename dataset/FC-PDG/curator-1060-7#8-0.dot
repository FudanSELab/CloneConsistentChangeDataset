digraph {
12 [style = filled, label = "newCurator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "curatorInstances.add(client)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(latch.await(10,TimeUnit.SECONDS))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertTrue(latch.await(10,TimeUnit.SECONDS))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.getCuratorListenable().addListener(new CuratorListener(){@Override public void eventReceived(CuratorFramework client,CuratorEvent event){if (event.getType() == CuratorEventType.EXISTS) {Stat stat = client.checkExists().forPath(\"/yo/yo/yo\")assertNull(stat)client.create().inBackground(event.getContext()).forPath(\"/what\")}if (event.getType() == CuratorEventType.CREATE) {((CountDownLatch)event.getContext()).countDown()}}})@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return client@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testNestedCalls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testNestedCalls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "client.checkExists().inBackground(latch).forPath(\"/hey\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
10->11 [style = bold, label=""];
2->7 [style = bold, label=""];
8->4 [style = bold, label=""];
5->6 [style = bold, label=""];
6->9 [style = bold, label=""];
12->4 [style = bold, label=""];
9->7 [style = bold, label=""];
2->9 [style = dashed, label="0"];
4->11 [style = solid, label="client"];
4->10 [style = solid, label="client"];
4->0 [style = bold, label=""];
4->7 [style = solid, label="client"];
6->2 [style = bold, label=""];
}
