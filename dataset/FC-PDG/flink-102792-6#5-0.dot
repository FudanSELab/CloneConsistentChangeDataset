digraph {
30 [style = filled, label = "when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(0,2)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,2)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "timeAdaptor.shouldDeleteTimerOnElement(mockTrigger,1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Trigger<Integer,TimeWindow> mockTrigger = mockTrigger()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testHarness.open()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "timeAdaptor.advanceTime(testHarness,50L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "timeAdaptor.shouldDeleteTimerOnElement(mockTrigger,17)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "timeAdaptor.setIsEventTime(mockAssigner)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Integer,Void> testHarness = createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),null,null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "timeAdaptor.shouldDeleteTimerOnElement(mockTrigger,42)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(2,timeAdaptor.numTimers(testHarness))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,42)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),2L,new TimeWindow(0,100))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(0),1L,null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testDeletedTimerDoesNotFire['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction = mockWindowFunction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(0,100)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,17)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testDeletedTimerDoesNotFire['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(0,timeAdaptor.numTimers(testHarness))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(3,timeAdaptor.numTimers(testHarness))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(2,timeAdaptor.numTimers(testHarness))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "WindowAssigner<Integer,TimeWindow> mockAssigner = mockTimeWindowAssigner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testTimerCreationAndDeletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->17 [style = bold, label=""];
16->3 [style = bold, label=""];
4->14 [style = bold, label=""];
15->16 [style = solid, label="mockWindowFunction"];
2->26 [style = bold, label=""];
29->4 [style = bold, label=""];
32->23 [style = bold, label=""];
35->29 [style = bold, label=""];
13->22 [style = solid, label="mockTrigger"];
32->34 [style = dotted, label="true"];
12->33 [style = dashed, label="0"];
28->20 [style = bold, label=""];
25->23 [style = bold, label=""];
12->22 [style = bold, label=""];
25->24 [style = dotted, label="true"];
10->29 [style = dashed, label="0"];
16->18 [style = solid, label="testHarness"];
15->16 [style = bold, label=""];
30->6 [style = bold, label=""];
13->8 [style = solid, label="mockTrigger"];
16->12 [style = solid, label="testHarness"];
16->0 [style = solid, label="testHarness"];
16->27 [style = solid, label="testHarness"];
16->35 [style = solid, label="testHarness"];
11->18 [style = bold, label=""];
26->11 [style = bold, label=""];
16->2 [style = solid, label="testHarness"];
11->35 [style = bold, label=""];
33->27 [style = bold, label=""];
18->35 [style = dashed, label="0"];
20->2 [style = bold, label=""];
13->17 [style = solid, label="mockTrigger"];
17->28 [style = dashed, label="0"];
4->31 [style = bold, label=""];
19->34 [style = dashed, label="0"];
23->16 [style = solid, label="mockAssigner"];
13->26 [style = solid, label="mockTrigger"];
13->5 [style = solid, label="mockTrigger"];
18->10 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
13->28 [style = solid, label="mockTrigger"];
31->33 [style = bold, label=""];
14->12 [style = bold, label=""];
21->19 [style = dotted, label="true"];
13->29 [style = solid, label="mockTrigger"];
13->10 [style = solid, label="mockTrigger"];
13->16 [style = solid, label="mockTrigger"];
7->6 [style = bold, label=""];
7->30 [style = dashed, label="0"];
10->4 [style = bold, label=""];
17->20 [style = bold, label=""];
19->24 [style = dashed, label="0"];
13->15 [style = bold, label=""];
22->1 [style = bold, label=""];
16->14 [style = solid, label="testHarness"];
23->9 [style = bold, label=""];
13->31 [style = solid, label="mockTrigger"];
13->1 [style = solid, label="mockTrigger"];
16->6 [style = solid, label="testHarness"];
23->9 [style = solid, label="mockAssigner"];
8->11 [style = bold, label=""];
3->30 [style = bold, label=""];
8->26 [style = dashed, label="0"];
2->8 [style = bold, label=""];
6->28 [style = bold, label=""];
9->13 [style = bold, label=""];
21->23 [style = bold, label=""];
14->31 [style = dashed, label="0"];
}
