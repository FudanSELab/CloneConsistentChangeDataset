digraph {
5 [style = filled, label = "assume().that(graph.allowsSelfLoops()).isTrue()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(graph.adjacentNodes(N1)).isEmpty()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "putEdge(N1,N1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assume().that(allowsSelfLoops()).isTrue()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(graphAsMutableGraph.putEdge(N1,N1)).isFalse()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "removeEdge_existingSelfLoopEdge['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(graphAsMutableGraph.removeEdge(N1,N1)).isTrue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(graph.nodes()).containsExactly(N1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "putEdge_existingSelfLoopEdgeBetweenSameNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assume().that(graphIsMutable()).isTrue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "putEdge_existingSelfLoopEdgeBetweenSameNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3->5 [style = dashed, label="0"];
4->3 [style = bold, label=""];
6->4 [style = bold, label=""];
8->10 [style = bold, label=""];
10->9 [style = bold, label=""];
1->8 [style = dashed, label="0"];
7->4 [style = bold, label=""];
5->0 [style = bold, label=""];
2->4 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
3->0 [style = bold, label=""];
0->8 [style = bold, label=""];
}
