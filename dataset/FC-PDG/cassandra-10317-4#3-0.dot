digraph {
17 [style = filled, label = "AtomicBoolean repairSubmitted = new AtomicBoolean(false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(proposeFailed.get())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "fail(\"Completed session without failure after prepare failed\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ListenableFuture<Boolean> sessionResult = coordinator.execute(sessionSupplier,hasFailures)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Supplier<ListenableFuture<List<RepairSessionResult>>> sessionSupplier = null@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(ConsistentSession.State.PREPARING,coordinator.getState())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MockMessagingSpy spyPrepare = createPrepareSpy(Collections.emptySet(),Collections.singleton(PARTICIPANT3))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ListenableFuture<Boolean> sessionResult = coordinator.execute(sessionSupplier,proposeFailed)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AtomicBoolean proposeFailed = new AtomicBoolean(false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertFalse(ActiveRepairService.instance.consistent.local.isSessionInProgress(uuid))@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "MockMessagingSpy spyPrepare = createPrepareSpy(Collections.emptySet(),Collections.singleton(PARTICIPANT3),new CountDownLatch(0))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "TimeoutException e@@@24@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Assert.assertFalse(proposeFailed.get())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testMockedMessagingPrepareFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testMockedMessagingPrepareTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "fail(\"Failed session in prepare failed during timeout from participant\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AtomicBoolean hasFailures = new AtomicBoolean(false)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{}@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertFalse(ActiveRepairService.instance.consistent.local.isSessionInProgress(uuid))@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MockMessagingSpy sendFailSessionUnexpectedSpy = createFailSessionSpy(Lists.newArrayList(PARTICIPANT1,PARTICIPANT2,PARTICIPANT3))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sendFailSessionExpectedSpy.interceptMessageOut(3).get(1,TimeUnit.SECONDS)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertFalse(repairSubmitted.get())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "UUID uuid = registerSession(cfs,true,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "spyPrepare.expectMockedMessage(2).get(100,TimeUnit.MILLISECONDS)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(repairSubmitted.get())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CoordinatorSession coordinator = ActiveRepairService.instance.consistent.coordinated.registerSession(uuid,PARTICIPANTS,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(ConsistentSession.State.FAILED,coordinator.getState())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "MockMessagingSpy sendFailSessionExpectedSpy = createFailSessionSpy(Lists.newArrayList(PARTICIPANT1,PARTICIPANT2,PARTICIPANT3))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SettableFuture<List<RepairSessionResult>> repairFuture = SettableFuture.create()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertFalse(hasFailures.get())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sendFailSessionUnexpectedSpy.interceptNoMsg(100,TimeUnit.MILLISECONDS)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sessionResult.get(1,TimeUnit.SECONDS)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Supplier<ListenableFuture<List<RepairSessionResult>>> sessionSupplier = null@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testMockedMessagingPrepareTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ExecutionException e@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertFalse(repairSubmitted.get())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35->27 [style = bold, label=""];
28->18 [style = bold, label=""];
22->2 [style = bold, label=""];
25->22 [style = bold, label=""];
5->20 [style = bold, label=""];
9->24 [style = dashed, label="0"];
0->17 [style = bold, label=""];
8->18 [style = bold, label=""];
2->1 [style = bold, label=""];
16->6 [style = bold, label=""];
36->29 [style = bold, label=""];
29->31 [style = bold, label=""];
15->18 [style = dashed, label="0"];
18->15 [style = bold, label=""];
4->19 [style = bold, label=""];
8->32 [style = dashed, label="0"];
5->26 [style = bold, label=""];
18->30 [style = bold, label=""];
7->0 [style = bold, label=""];
20->1 [style = bold, label=""];
10->29 [style = dashed, label="0"];
9->7 [style = bold, label=""];
15->3 [style = bold, label=""];
19->8 [style = bold, label=""];
26->22 [style = bold, label=""];
31->34 [style = bold, label=""];
0->17 [style = solid, label="uuid"];
32->18 [style = solid, label="proposeFailed"];
8->15 [style = solid, label="hasFailures"];
33->0 [style = bold, label=""];
19->15 [style = solid, label="sessionSupplier"];
23->24 [style = bold, label=""];
17->12 [style = bold, label=""];
0->13 [style = solid, label="uuid"];
4->18 [style = solid, label="sessionSupplier"];
12->4 [style = bold, label=""];
30->3 [style = bold, label=""];
11->31 [style = dashed, label="0"];
21->22 [style = bold, label=""];
1->16 [style = bold, label=""];
6->10 [style = bold, label=""];
22->36 [style = bold, label=""];
11->13 [style = bold, label=""];
21->1 [style = bold, label=""];
33->34 [style = solid, label="uuid"];
5->20 [style = dotted, label="true"];
3->21 [style = bold, label=""];
14->9 [style = bold, label=""];
33->0 [style = solid, label="uuid"];
27->33 [style = bold, label=""];
22->1 [style = bold, label=""];
24->7 [style = bold, label=""];
32->28 [style = bold, label=""];
4->32 [style = bold, label=""];
10->11 [style = bold, label=""];
}
