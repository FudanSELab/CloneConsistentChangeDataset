digraph {
17 [style = filled, label = "Range r = DatasetUtils.iterateToFindRangeBounds(dataset,Arrays.asList(\"S1\"),new Range(0.0,4.0),true)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testFindDomainBounds4['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "double(( y1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d4e7d@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0.8,r.getLowerBound(),EPSILON)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "double(( x1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d4e5d@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "double(( y1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d4e73@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "dataset.addSeries(\"S1\",data1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Range r = DatasetUtils.findDomainBounds(dataset)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d4e67@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(3.2,r.getUpperBound(),EPSILON)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testFindDomainBounds4['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d4e49@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(6.0,r.getUpperBound(),EPSILON)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testIterateToFindRangeBounds_IntervalXYDataset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d4e87@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "double(( x1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d4e53@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultIntervalXYDataset<String> dataset = new DefaultIntervalXYDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(-5.0,r.getLowerBound(),EPSILON)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->0 [style = solid, label="x1Start"];
0->12 [style = solid, label="data1"];
7->9 [style = solid, label="dataset"];
8->0 [style = solid, label="x1"];
7->14 [style = dashed, label="0"];
0->12 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
8->3 [style = bold, label=""];
16->7 [style = bold, label=""];
11->0 [style = solid, label="y1End"];
14->9 [style = solid, label="dataset"];
10->0 [style = solid, label="y1Start"];
5->0 [style = solid, label="x1End"];
2->10 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
1->7 [style = bold, label=""];
9->6 [style = bold, label=""];
6->18 [style = dashed, label="0"];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
4->15 [style = dashed, label="0"];
9->17 [style = dashed, label="0"];
14->8 [style = bold, label=""];
7->17 [style = solid, label="dataset"];
2->0 [style = solid, label="y1"];
13->14 [style = bold, label=""];
17->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
