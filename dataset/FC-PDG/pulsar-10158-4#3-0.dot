digraph {
35 [style = filled, label = "gSet.add(Range.openClosed(new LongPair(3,11),new LongPair(3,20)))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "gSet.add(Range.closed(new LongPair(1,20),new LongPair(2,10)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "set.add(Range.openClosed(new LongPair(0,99),new LongPair(1,5)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "gSet.add(Range.closed(new LongPair(2,25),new LongPair(2,28)))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "gSet.add(Range.closed(new LongPair(0,98),new LongPair(0,100)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "set.add(Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "set.add(Range.closed(new LongPair(4,12),new LongPair(4,20)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "position = new LongPair(3,22)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "gSet.add(Range.openClosed(new LongPair(1,19),new LongPair(2,10)))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "com.google.common.collect.RangeSet<LongPair> gSet = TreeRangeSet.create()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "gSet.add(Range.closed(new LongPair(1,10),new LongPair(1,15)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(set.span(),Range.openClosed(new LongPair(0,97),new LongPair(1,5)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "set.add(Range.closed(new LongPair(0,98),new LongPair(0,99)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "set.add(Range.closed(new LongPair(0,100),new LongPair(1,5)))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "gSet.add(Range.openClosed(new LongPair(0,97),new LongPair(0,99)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "gSet.add(Range.openClosed(new LongPair(0,99),new LongPair(1,5)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(set.span(),gSet.span())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "set.add(Range.openClosed(new LongPair(1,19),new LongPair(2,10)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),null)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "set.add(Range.closed(new LongPair(1,20),new LongPair(2,10)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "gSet.add(Range.closed(new LongPair(4,12),new LongPair(4,20)))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "set.add(Range.closed(new LongPair(2,25),new LongPair(2,28)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "gSet.add(Range.closed(new LongPair(0,101),new LongPair(1,5)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testRangeContaining['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "gSet.add(Range.openClosed(new LongPair(1,9),new LongPair(1,15)))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testSpanWithGuava['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertNull(set.rangeContaining(position.getKey(),position.getValue()))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "gSet.add(Range.openClosed(new LongPair(4,11),new LongPair(4,20)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),Range.closed(new LongPair(0,98),new LongPair(0,100)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "set.add(Range.openClosed(new LongPair(2,24),new LongPair(2,28)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertNull(set.rangeContaining(position.getKey(),position.getValue()))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "set.add(Range.closed(new LongPair(1,10),new LongPair(1,15)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(set.span(),gSet.span())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "gSet.add(Range.openClosed(new LongPair(2,24),new LongPair(2,28)))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),null)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "LongPair position = new LongPair(0,99)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "position = new LongPair(3,13)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "set.add(Range.openClosed(new LongPair(0,97),new LongPair(0,99)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "set.add(Range.openClosed(new LongPair(1,9),new LongPair(1,15)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(set.span(),Range.openClosed(new LongPair(0,97),new LongPair(4,20)))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "set.add(Range.openClosed(new LongPair(3,11),new LongPair(3,20)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "gSet.add(Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testRangeContaining['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "position = new LongPair(2,30)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "set.add(Range.openClosed(new LongPair(4,11),new LongPair(4,20)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->18 [style = bold, label=""];
46->42 [style = bold, label=""];
8->37 [style = dashed, label="0"];
28->33 [style = dashed, label="0"];
3->30 [style = dashed, label="0"];
42->37 [style = bold, label=""];
37->49 [style = bold, label=""];
21->6 [style = bold, label=""];
11->14 [style = bold, label=""];
31->9 [style = bold, label=""];
20->26 [style = bold, label=""];
3->25 [style = bold, label=""];
24->25 [style = solid, label="position"];
44->35 [style = bold, label=""];
15->23 [style = solid, label="position"];
28->31 [style = bold, label=""];
20->45 [style = dashed, label="0"];
45->36 [style = bold, label=""];
35->33 [style = bold, label=""];
22->21 [style = bold, label=""];
49->48 [style = bold, label=""];
30->25 [style = bold, label=""];
47->46 [style = bold, label=""];
4->47 [style = dashed, label="0"];
6->0 [style = bold, label=""];
12->16 [style = bold, label=""];
7->20 [style = bold, label=""];
17->22 [style = bold, label=""];
2->10 [style = bold, label=""];
34->50 [style = bold, label=""];
18->38 [style = dashed, label="0"];
36->39 [style = bold, label=""];
26->13 [style = bold, label=""];
1->23 [style = bold, label=""];
24->30 [style = bold, label=""];
0->7 [style = bold, label=""];
38->32 [style = bold, label=""];
0->41 [style = bold, label=""];
13->39 [style = dashed, label="0"];
28->9 [style = solid, label="position"];
5->32 [style = dashed, label="0"];
27->4 [style = bold, label=""];
19->34 [style = dashed, label="0"];
23->24 [style = bold, label=""];
13->27 [style = bold, label=""];
22->0 [style = bold, label=""];
16->28 [style = bold, label=""];
48->38 [style = bold, label=""];
8->2 [style = bold, label=""];
5->12 [style = bold, label=""];
19->9 [style = bold, label=""];
9->15 [style = bold, label=""];
39->40 [style = bold, label=""];
18->5 [style = bold, label=""];
43->22 [style = bold, label=""];
40->47 [style = bold, label=""];
14->42 [style = dashed, label="0"];
28->19 [style = bold, label=""];
2->49 [style = dashed, label="0"];
32->44 [style = bold, label=""];
10->48 [style = dashed, label="0"];
41->45 [style = bold, label=""];
7->41 [style = dashed, label="0"];
14->8 [style = bold, label=""];
26->36 [style = dashed, label="0"];
5->16 [style = solid, label="position"];
11->46 [style = dashed, label="0"];
29->22 [style = bold, label=""];
4->11 [style = bold, label=""];
33->34 [style = bold, label=""];
24->3 [style = bold, label=""];
15->1 [style = bold, label=""];
19->31 [style = dashed, label="0"];
}
