digraph {
4 [style = filled, label = "testReadArticleDublinCoreReadXmp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "entryFromBibFile.get().setFiles(Arrays.asList(new LinkedFile(\"\",\"paper.pdf\",\"PDF\"),new LinkedFile(\"\",pathPdf.toAbsolutePath().toString(),\"PDF\")))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String bibString = Resources.toString(.getResource(\"article_dublinCore.bib\"),StandardCharsets.UTF_8)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<BibEntry> entries = XmpUtilReader.readXmp(pathPdf,xmpPreferences)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(entryFromBibFile.get(),entry)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testReadArticleDublinCoreReadXmp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "entryFromBibFile.get().setFiles(Collections.singletonList(new LinkedFile(\"\",pathPdf.toAbsolutePath().toString(),\"PDF\")))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Path pathPdf = Paths.get(.getResource(\"PD_metadata.pdf\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testReadPDMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String bibString = Resources.toString(.getResource(\"PD_metadata.bib\"),StandardCharsets.UTF_8)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Path pathPdf = Path.of(.getResource(\"article_dublinCore.pdf\").toURI())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "BibEntry entry = entries.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(entryFromBibFile.get(),entries.get(0))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Optional<BibEntry> entryFromBibFile = parser.parseSingleEntry(bibString)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Path pathPdf = Paths.get(.getResource(\"article_dublinCore.pdf\").toURI())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->6 [style = solid, label="pathPdf"];
3->2 [style = dashed, label="0"];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
0->6 [style = bold, label=""];
11->6 [style = solid, label="pathPdf"];
2->3 [style = bold, label=""];
11->6 [style = bold, label=""];
0->11 [style = dashed, label="0"];
13->11 [style = bold, label=""];
7->5 [style = solid, label="entry"];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
12->10 [style = solid, label="bibString"];
9->6 [style = solid, label="pathPdf"];
2->14 [style = bold, label=""];
8->9 [style = bold, label=""];
10->2 [style = bold, label=""];
1->2 [style = bold, label=""];
1->2 [style = solid, label="bibString"];
0->9 [style = dashed, label="0"];
6->7 [style = bold, label=""];
6->12 [style = bold, label=""];
}
