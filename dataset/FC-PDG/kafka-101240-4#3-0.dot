digraph {
32 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,STORE_LEVEL_GROUP,storeTagMap,latencyMetricName(metricName),descriptionOfAvg,descriptionOfMax)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "StreamsMetricsImpl.addInvocationRateToSensor(expectedSensor,STORE_LEVEL_GROUP,storeTagMap,metricName,descriptionOfRate)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "final String descriptionOfRate@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "expect(streamsMetrics.storeLevelSensor(TASK_ID,STORE_NAME,metricName,RecordingLevel.DEBUG,parentSensor)).andReturn(expectedSensor)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "final Supplier<Sensor> sensorSupplier@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "verify(,streamsMetrics)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String descriptionOfMax = \"The maximum latency of calls to prefix-scan\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "expect(streamsMetrics.storeLevelSensor(TASK_ID,STORE_NAME,metricName,RecordingLevel.DEBUG)).andReturn(expectedSensor)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final String metricName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,STORE_LEVEL_GROUP,storeTagMap,latencyMetricName(metricName),descriptionOfAvg,descriptionOfMax)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,storeLevelGroup,storeTagMap,metricName,descriptionOfRate,descriptionOfCount)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final Sensor sensor = sensorSupplier.get()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamsMetricsImpl.addInvocationRateToSensor(expectedSensor,storeLevelGroup,storeTagMap,metricName,descriptionOfRate)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final String descriptionOfRate@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String descriptionOfMax@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "shouldGetSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,storeLevelGroup,storeTagMap,latencyMetricName(metricName),descriptionOfAvg,descriptionOfMax)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "expect(streamsMetrics.storeLevelTagMap(TASK_ID,STORE_TYPE,STORE_NAME)).andReturn(storeTagMap)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final String metricName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "expect(streamsMetrics.storeLevelSensor(TASK_ID,STORE_NAME,metricName,RecordingLevel.DEBUG)).andReturn(expectedSensor)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "expect(streamsMetrics.storeLevelTagMap(TASK_ID,STORE_TYPE,STORE_NAME)).andReturn(storeTagMap)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final String descriptionOfRate = \"The average number of calls to prefix-scan per second\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "shouldGetSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final Sensor sensor = StateStoreMetrics.prefixScanSensor(TASK_ID,STORE_TYPE,STORE_NAME,streamsMetrics)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Supplier<Sensor> sensorSupplier@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String descriptionOfMax@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final String descriptionOfAvg@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "final String descriptionOfAvg = \"The average latency of calls to prefix-scan\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final String metricName = \"prefix-scan\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verify(,streamsMetrics)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "builtInMetricsVersion == Version.FROM_0100_TO_24@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final Sensor sensor = sensorSupplier.get()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final String descriptionOfCount@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "replay(,streamsMetrics)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "StreamsMetricsImpl.addInvocationRateToSensor(expectedSensor,STORE_LEVEL_GROUP,storeTagMap,metricName,descriptionOfRate)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "replay(,streamsMetrics)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "replay(,streamsMetrics)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "verify(,streamsMetrics)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "shouldGetPrefixScanSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "setUpParentSensor(metricName,descriptionOfRate,descriptionOfCount,descriptionOfAvg,descriptionOfMax)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String descriptionOfAvg@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21->26 [style = solid, label="descriptionOfMax"];
10->2 [style = solid, label="metricName"];
31->25 [style = dotted, label="true"];
8->16 [style = bold, label=""];
16->3 [style = bold, label=""];
10->16 [style = solid, label="metricName"];
22->26 [style = bold, label=""];
8->28 [style = bold, label=""];
1->0 [style = solid, label="descriptionOfCount"];
31->19 [style = dotted, label="true"];
30->22 [style = bold, label=""];
5->0 [style = solid, label="descriptionOfRate"];
0->6 [style = bold, label=""];
17->1 [style = dotted, label="true"];
26->29 [style = bold, label=""];
31->24 [style = bold, label=""];
11->12 [style = dotted, label="true"];
4->15 [style = bold, label=""];
10->0 [style = solid, label="metricName"];
39->32 [style = solid, label="metricName"];
39->36 [style = solid, label="metricName"];
36->32 [style = bold, label=""];
5->12 [style = solid, label="descriptionOfRate"];
5->16 [style = solid, label="descriptionOfRate"];
13->2 [style = solid, label="descriptionOfMax"];
34->41 [style = bold, label=""];
43->37 [style = bold, label=""];
3->37 [style = solid, label="sensor"];
13->25 [style = dashed, label="0"];
38->36 [style = solid, label="descriptionOfRate"];
34->32 [style = solid, label="descriptionOfMax"];
31->20 [style = dotted, label="true"];
19->26 [style = solid, label="descriptionOfAvg"];
23->30 [style = solid, label="metricName"];
17->11 [style = bold, label=""];
41->35 [style = bold, label=""];
13->0 [style = solid, label="descriptionOfMax"];
24->30 [style = bold, label=""];
10->12 [style = solid, label="metricName"];
27->28 [style = solid, label="sensor"];
7->2 [style = solid, label="descriptionOfAvg"];
20->30 [style = solid, label="descriptionOfRate"];
23->26 [style = solid, label="metricName"];
17->10 [style = dotted, label="true"];
11->16 [style = dotted, label="false"];
31->21 [style = dotted, label="true"];
29->27 [style = bold, label=""];
11->0 [style = bold, label=""];
40->39 [style = bold, label=""];
18->4 [style = bold, label=""];
33->32 [style = solid, label="descriptionOfAvg"];
3->2 [style = bold, label=""];
16->30 [style = dashed, label="0"];
11->6 [style = dotted, label="true"];
7->0 [style = solid, label="descriptionOfAvg"];
31->23 [style = dotted, label="true"];
11->0 [style = dotted, label="true"];
17->9 [style = dotted, label="true"];
2->14 [style = bold, label=""];
39->38 [style = bold, label=""];
42->3 [style = bold, label=""];
11->8 [style = bold, label=""];
14->18 [style = bold, label=""];
17->7 [style = dotted, label="true"];
3->43 [style = bold, label=""];
12->3 [style = bold, label=""];
11->8 [style = dotted, label="false"];
18->3 [style = dashed, label="0"];
18->15 [style = solid, label="sensor"];
35->36 [style = bold, label=""];
1->12 [style = solid, label="descriptionOfCount"];
38->33 [style = bold, label=""];
17->13 [style = dotted, label="true"];
32->42 [style = bold, label=""];
2->26 [style = dashed, label="0"];
33->34 [style = bold, label=""];
27->8 [style = bold, label=""];
17->5 [style = dotted, label="true"];
6->12 [style = bold, label=""];
}
