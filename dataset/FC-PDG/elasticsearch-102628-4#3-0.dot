digraph {
9 [style = filled, label = "long initialTotalTime = shard.refreshStats().getExternalTotalTimeInMillis()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "indexDoc(shard,\"_doc\",\"test\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotalTimeInMillis(),greaterThanOrEqualTo(initialTotalTime))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(shard.refreshStats().getTotal(),equalTo(refreshCount + 1))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "closeShards(shard)@@@25@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(externalRefreshCount))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shard.writeIndexingBuffer()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testExternalRefreshMetric['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "IndexShard shard = newStartedShard()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(shard.refreshStats().getTotal() - 2 - extraInternalRefreshes))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(externalRefreshCount))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shard.writeIndexingBuffer()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(externalRefreshCount))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shard.refreshStats().getExternalTotalTimeInMillis() == initialTotalTime@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "indexDoc(shard,\"_doc\",\"test\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(2L))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(2L + i))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "indexDoc(shard,\"_doc\",\"test\")@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(shard.refreshStats().getTotal(),equalTo(2L + i - 1))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "long refreshCount = shard.refreshStats().getTotal()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long externalRefreshCount = shard.refreshStats().getExternalTotal()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertThat(shard.refreshStats().getTotal(),equalTo(refreshCount + 2))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "shard.refreshStats().getTotalTimeInMillis() == initialTotalTime@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "long initialTotalTime = shard.refreshStats().getTotalTimeInMillis()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "indexDoc(shard,\"_doc\",\"test\")@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertThat(shard.refreshStats().getTotal(),equalTo(2L))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final long extraInternalRefreshes = shard.routingEntry().primary() || shard.indexSettings().isSoftDeleteEnabled() == false? 0: 1@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertThat(shard.refreshStats().getTotalTimeInMillis(),greaterThanOrEqualTo(initialTotalTime))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testRefreshMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "closeShards(shard)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "shard.refresh(\"test\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final long externalRefreshCount = shard.refreshStats().getExternalTotal()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "int i = 1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(shard.refreshStats().getTotal() - 1 - extraInternalRefreshes))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "closeShards(shard)@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertThat(shard.refreshStats().getTotal(),equalTo(2L + i))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testExternalRefreshMetric['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(shard.refreshStats().getExternalTotal(),equalTo(2L + i - 1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->22 [style = solid, label="extraInternalRefreshes"];
1->37 [style = solid, label="i"];
16->7 [style = bold, label=""];
38->30 [style = solid, label="refreshCount"];
6->34 [style = dashed, label="0"];
38->0 [style = solid, label="refreshCount"];
8->36 [style = bold, label=""];
30->28 [style = bold, label=""];
12->14 [style = solid, label="shard"];
1->2 [style = solid, label="i"];
24->17 [style = bold, label=""];
35->8 [style = bold, label=""];
17->27 [style = bold, label=""];
29->1 [style = bold, label=""];
36->13 [style = dotted, label="true"];
3->10 [style = solid, label="externalRefreshCount"];
8->2 [style = solid, label="i"];
18->33 [style = dashed, label="0"];
14->20 [style = bold, label=""];
17->27 [style = dashed, label="0"];
23->25 [style = bold, label=""];
15->13 [style = bold, label=""];
14->30 [style = bold, label=""];
27->0 [style = bold, label=""];
3->20 [style = solid, label="externalRefreshCount"];
12->7 [style = solid, label="shard"];
15->2 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
3->38 [style = dashed, label="0"];
18->19 [style = bold, label=""];
37->29 [style = bold, label=""];
19->2 [style = bold, label=""];
9->8 [style = bold, label=""];
15->36 [style = dashed, label="0"];
2->4 [style = bold, label=""];
19->37 [style = bold, label=""];
15->13 [style = dotted, label="true"];
1->18 [style = solid, label="i"];
25->24 [style = bold, label=""];
35->29 [style = solid, label="initialTotalTime"];
12->32 [style = solid, label="shard"];
2->37 [style = dashed, label="0"];
36->29 [style = dotted, label="true"];
34->35 [style = bold, label=""];
13->18 [style = bold, label=""];
16->22 [style = dashed, label="0"];
22->26 [style = bold, label=""];
23->16 [style = solid, label="externalRefreshCount"];
25->27 [style = solid, label="extraInternalRefreshes"];
8->15 [style = bold, label=""];
8->33 [style = solid, label="i"];
36->19 [style = dotted, label="true"];
15->3 [style = bold, label=""];
31->12 [style = bold, label=""];
36->37 [style = dotted, label="true"];
9->35 [style = dashed, label="0"];
21->12 [style = bold, label=""];
3->23 [style = dashed, label="0"];
36->13 [style = bold, label=""];
10->0 [style = dashed, label="0"];
10->16 [style = bold, label=""];
35->36 [style = solid, label="initialTotalTime"];
12->28 [style = solid, label="shard"];
20->30 [style = dashed, label="0"];
4->1 [style = bold, label=""];
33->19 [style = bold, label=""];
0->32 [style = bold, label=""];
9->4 [style = solid, label="initialTotalTime"];
36->33 [style = dotted, label="true"];
12->13 [style = solid, label="shard"];
15->23 [style = bold, label=""];
36->1 [style = dotted, label="true"];
20->17 [style = bold, label=""];
8->18 [style = solid, label="i"];
1->15 [style = bold, label=""];
28->11 [style = bold, label=""];
3->14 [style = bold, label=""];
12->0 [style = solid, label="shard"];
12->34 [style = bold, label=""];
16->22 [style = bold, label=""];
12->6 [style = bold, label=""];
1->36 [style = bold, label=""];
9->15 [style = solid, label="initialTotalTime"];
15->4 [style = dotted, label="true"];
38->14 [style = bold, label=""];
1->33 [style = solid, label="i"];
0->10 [style = bold, label=""];
11->0 [style = bold, label=""];
5->12 [style = bold, label=""];
23->17 [style = solid, label="externalRefreshCount"];
15->19 [style = dotted, label="true"];
15->1 [style = dotted, label="true"];
8->1 [style = solid, label="i"];
12->26 [style = solid, label="shard"];
12->11 [style = solid, label="shard"];
36->38 [style = bold, label=""];
4->29 [style = dashed, label="0"];
6->9 [style = bold, label=""];
13->33 [style = bold, label=""];
8->37 [style = solid, label="i"];
12->24 [style = solid, label="shard"];
17->11 [style = bold, label=""];
}
