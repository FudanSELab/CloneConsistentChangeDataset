digraph {
22 [style = filled, label = "System.out.format(\"Class %f F1 score = %f\",metrics.labels()(i(,metrics.fMeasure(metrics.labels()(i())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "model.clearThreshold()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "BinaryClassificationMetrics metrics = new BinaryClassificationMetrics(predictionAndLabels.rdd())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "System.out.format(\"Weighted F1 score = %f\",metrics.weightedFMeasure())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "JavaRDD<LabeledPoint> training = splits(0(.cache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "JavaRDD<Double> thresholds = precision.map(new Function<Tuple2<Object,Object>,Double>(){@Override public Double call(Tuple2<Object,Object> t){return new Double(t._1().toString())}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i++@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int i = 0@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sc.stop()@@@37@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> precision = metrics.precisionByThreshold().toJavaRDD()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SparkContext sc = new SparkContext(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sc.stop()@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(3).run(training.rdd())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "System.out.println(\"Precision by threshold: \" + precision.collect())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "System.out.format(\"Weighted false positive rate = %f\",metrics.weightedFalsePositiveRate())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "System.out.println(\"Area under precision-recall curve = \" + metrics.areaUnderPR())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){@Override public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Multi class Classification Metrics Example\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.out.format(\"Class %f precision = %f\",metrics.labels()(i(,metrics.precision(metrics.labels()(i())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "JavaRDD<LabeledPoint> test = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "System.out.format(\"Weighted precision = %f\",metrics.weightedPrecision())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "System.out.println(\"Recall by threshold: \" + recall.collect())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Matrix confusion = metrics.confusionMatrix()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "MulticlassMetrics metrics = new MulticlassMetrics(predictionAndLabels.rdd())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Java Binary Classification Metrics Example\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "System.out.println(\"Precision-recall curve: \" + prc.collect())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "String path = \"data/mllib/sample_binary_classification_data.txt\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7fa5d,11L)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "System.out.println(\"Confusion matrix: \" + confusion)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "System.out.format(\"Weighted false positive rate = %f\",metrics.weightedFalsePositiveRate())@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "System.out.format(\"Weighted F1 score = %f\",metrics.weightedFMeasure())@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < metrics.labels().length@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "System.out.println(\"Accuracy = \" + metrics.accuracy())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> prc = metrics.pr().toJavaRDD()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f2Score = metrics.fMeasureByThreshold(2.0).toJavaRDD()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "System.out.println(\"F2 Score by threshold: \" + f2Score.collect())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "System.out.println(\"Area under ROC = \" + metrics.areaUnderROC())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String path = \"data/mllib/sample_multiclass_classification_data.txt\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "System.out.format(\"Weighted recall = %f\",metrics.weightedRecall())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "System.out.println(\"ROC curve: \" + roc.collect())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "JavaPairRDD<Object,Object> predictionAndLabels = test.mapToPair(null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "JavaRDD<LabeledPoint> data = MLUtils.loadLibSVMFile(sc,path).toJavaRDD()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> roc = metrics.roc().toJavaRDD()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training.rdd())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> recall = metrics.recallByThreshold().toJavaRDD()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "System.out.println(\"F1 Score by threshold: \" + f1Score.collect())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f1Score = metrics.fMeasureByThreshold().toJavaRDD()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "sc.stop()@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "System.out.format(\"Weighted recall = %f\",metrics.weightedRecall())@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "System.out.format(\"Class %f recall = %f\",metrics.labels()(i(,metrics.recall(metrics.labels()(i())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(3).run(training.rdd())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27->13 [style = bold, label=""];
36->8 [style = dotted, label="true"];
13->47 [style = bold, label=""];
39->62 [style = bold, label=""];
22->15 [style = bold, label=""];
32->37 [style = bold, label=""];
29->2 [style = dotted, label="true"];
26->10 [style = bold, label=""];
38->52 [style = bold, label=""];
20->26 [style = bold, label=""];
5->62 [style = solid, label="sc"];
30->36 [style = bold, label=""];
21->24 [style = bold, label=""];
42->48 [style = bold, label=""];
0->47 [style = dashed, label="0"];
11->9 [style = bold, label=""];
36->20 [style = bold, label=""];
22->8 [style = bold, label=""];
8->36 [style = bold, label=""];
15->26 [style = solid, label="i"];
51->61 [style = bold, label=""];
3->19 [style = bold, label=""];
37->31 [style = bold, label=""];
15->20 [style = bold, label=""];
9->21 [style = bold, label=""];
34->32 [style = bold, label=""];
17->27 [style = bold, label=""];
43->44 [style = bold, label=""];
5->39 [style = solid, label="sc"];
15->10 [style = solid, label="i"];
20->26 [style = dotted, label="true"];
8->36 [style = solid, label="i"];
12->2 [style = dotted, label="true"];
20->14 [style = bold, label=""];
41->49 [style = bold, label=""];
55->38 [style = bold, label=""];
60->41 [style = bold, label=""];
57->25 [style = bold, label=""];
0->28 [style = dashed, label="0"];
15->6 [style = solid, label="i"];
46->60 [style = bold, label=""];
23->35 [style = bold, label=""];
5->57 [style = bold, label=""];
26->23 [style = solid, label="i"];
7->57 [style = dashed, label="0"];
20->49 [style = dashed, label="0"];
1->16 [style = bold, label=""];
30->36 [style = solid, label="i"];
36->3 [style = dotted, label="true"];
31->33 [style = bold, label=""];
48->55 [style = bold, label=""];
19->46 [style = dashed, label="0"];
20->10 [style = dotted, label="true"];
8->19 [style = solid, label="i"];
33->30 [style = bold, label=""];
5->35 [style = solid, label="sc"];
45->56 [style = bold, label=""];
5->7 [style = bold, label=""];
30->8 [style = solid, label="i"];
44->45 [style = bold, label=""];
19->22 [style = bold, label=""];
26->20 [style = bold, label=""];
20->6 [style = dotted, label="true"];
52->54 [style = bold, label=""];
13->0 [style = bold, label=""];
5->21 [style = solid, label="sc"];
36->22 [style = dotted, label="true"];
5->23 [style = solid, label="sc"];
47->40 [style = bold, label=""];
54->43 [style = bold, label=""];
6->23 [style = bold, label=""];
4->5 [style = solid, label="conf"];
26->20 [style = solid, label="i"];
8->3 [style = bold, label=""];
36->19 [style = dotted, label="true"];
40->59 [style = bold, label=""];
30->22 [style = solid, label="i"];
25->17 [style = bold, label=""];
10->6 [style = bold, label=""];
35->14 [style = bold, label=""];
59->53 [style = bold, label=""];
53->50 [style = bold, label=""];
18->34 [style = dashed, label="0"];
26->6 [style = solid, label="i"];
51->2 [style = dotted, label="true"];
26->10 [style = solid, label="i"];
20->23 [style = dotted, label="true"];
56->39 [style = bold, label=""];
37->31 [style = solid, label="confusion"];
0->18 [style = bold, label=""];
18->8 [style = bold, label=""];
15->20 [style = solid, label="i"];
30->19 [style = solid, label="i"];
3->19 [style = solid, label="confusion"];
4->5 [style = bold, label=""];
5->9 [style = solid, label="sc"];
49->42 [style = bold, label=""];
21->62 [style = dashed, label="0"];
29->4 [style = bold, label=""];
4->61 [style = dashed, label="0"];
16->11 [style = bold, label=""];
8->3 [style = solid, label="i"];
28->34 [style = bold, label=""];
61->5 [style = bold, label=""];
50->46 [style = bold, label=""];
8->22 [style = solid, label="i"];
62->58 [style = bold, label=""];
23->26 [style = bold, label=""];
8->53 [style = dashed, label="0"];
61->5 [style = solid, label="conf"];
14->1 [style = bold, label=""];
20->10 [style = bold, label=""];
3->50 [style = dashed, label="0"];
12->4 [style = bold, label=""];
17->13 [style = solid, label="splits"];
7->25 [style = bold, label=""];
30->3 [style = solid, label="i"];
15->23 [style = solid, label="i"];
13->28 [style = bold, label=""];
36->3 [style = bold, label=""];
}
