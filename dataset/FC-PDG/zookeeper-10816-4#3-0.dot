digraph {
35 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "takeThread.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int n@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "offerThread.start()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int i = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final byte(( takeResult = new byte((((((@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testTakeWait1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(testString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Thread.sleep(1000)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "offerThread.join()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i++@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testTakeWait1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final int num_clients = 2@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final int num_clients = 1@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),testString)@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i < n@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "byte data = null@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "takeThread.join()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "int m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "String dir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final ZooKeeper clients = new ZooKeeper((((@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "String offerString = testString + i@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "i < m@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "createNremoveMtest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20->11 [style = solid, label="i"];
8->16 [style = bold, label=""];
11->14 [style = bold, label=""];
38->41 [style = dotted, label="true"];
27->28 [style = bold, label=""];
11->12 [style = dotted, label="true"];
14->11 [style = solid, label="i"];
38->39 [style = dotted, label="true"];
21->8 [style = bold, label=""];
37->33 [style = solid, label="m"];
38->41 [style = bold, label=""];
32->34 [style = bold, label=""];
25->29 [style = dotted, label="true"];
42->29 [style = bold, label=""];
4->0 [style = solid, label="takeResult"];
6->12 [style = solid, label="clients"];
30->25 [style = solid, label="i"];
28->43 [style = bold, label=""];
43->35 [style = bold, label=""];
6->11 [style = bold, label=""];
39->38 [style = bold, label=""];
14->11 [style = dotted, label="true"];
14->11 [style = bold, label=""];
14->20 [style = bold, label=""];
31->14 [style = bold, label=""];
26->42 [style = bold, label=""];
40->6 [style = solid, label="dir"];
14->30 [style = bold, label=""];
12->20 [style = solid, label="i"];
10->14 [style = bold, label=""];
0->17 [style = bold, label=""];
3->36 [style = dashed, label="0"];
36->31 [style = bold, label=""];
18->19 [style = bold, label=""];
3->22 [style = dashed, label="0"];
27->24 [style = dotted, label="true"];
8->28 [style = dashed, label="0"];
9->8 [style = bold, label=""];
22->23 [style = bold, label=""];
23->14 [style = bold, label=""];
3->10 [style = bold, label=""];
25->42 [style = dotted, label="true"];
25->26 [style = bold, label=""];
34->39 [style = solid, label="i"];
13->15 [style = bold, label=""];
34->38 [style = bold, label=""];
38->33 [style = bold, label=""];
25->26 [style = dotted, label="true"];
27->40 [style = dotted, label="true"];
20->6 [style = solid, label="clients"];
2->35 [style = dashed, label="0"];
37->38 [style = solid, label="m"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
12->20 [style = bold, label=""];
5->18 [style = bold, label=""];
31->14 [style = solid, label="i"];
27->37 [style = dotted, label="true"];
1->7 [style = bold, label=""];
41->33 [style = solid, label="data"];
19->0 [style = bold, label=""];
4->17 [style = solid, label="takeResult"];
11->20 [style = dotted, label="true"];
11->6 [style = dotted, label="true"];
11->14 [style = solid, label="i"];
28->26 [style = solid, label="testString"];
4->1 [style = bold, label=""];
10->23 [style = dashed, label="0"];
20->11 [style = bold, label=""];
14->6 [style = dotted, label="true"];
7->13 [style = bold, label=""];
30->29 [style = solid, label="i"];
6->12 [style = bold, label=""];
32->33 [style = solid, label="data"];
24->25 [style = solid, label="n"];
11->6 [style = bold, label=""];
29->25 [style = solid, label="i"];
30->26 [style = solid, label="i"];
25->32 [style = bold, label=""];
29->25 [style = bold, label=""];
30->25 [style = bold, label=""];
39->38 [style = solid, label="i"];
20->6 [style = bold, label=""];
29->26 [style = solid, label="i"];
16->2 [style = bold, label=""];
15->5 [style = bold, label=""];
14->20 [style = dotted, label="true"];
28->33 [style = solid, label="testString"];
8->12 [style = solid, label="dir"];
16->17 [style = solid, label="testString"];
6->11 [style = solid, label="i"];
35->36 [style = bold, label=""];
41->39 [style = bold, label=""];
2->22 [style = bold, label=""];
34->38 [style = solid, label="i"];
}
