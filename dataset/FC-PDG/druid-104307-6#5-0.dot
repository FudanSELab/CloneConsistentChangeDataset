digraph {
11 [style = filled, label = "Assert.assertTrue(taskAnnounced(task3.getId()))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(taskAnnounced(task1.getId()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "remoteTaskRunner.checkBlackListedNodes()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.findWorkerRunningTask(task3.getId()).getContinuouslyFailedTasksCount())@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.getBlackListedWorkers().size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.getBlackListedWorkers().size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestRealtimeTask task3 = new TestRealtimeTask(\"realtime3\",new TaskResource(\"realtime3\",1),\"foo\",TaskStatus.success(\"realtime3\"),jsonMapper)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.getBlacklistedTaskSlotCount())@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.getBlackListedWorkers().size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "makeRemoteTaskRunner(rtrConfig)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Period timeoutPeriod = Period.millis(1000)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mockWorkerRunningTask(task3)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testBlacklistZKWorkers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.getBlacklistedTaskSlotCount())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testSuccessfulTaskOnBlacklistedWorker['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "Assert.assertEquals(1,remoteTaskRunner.getBlackListedWorkers().size())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertTrue(taskFuture2.get().isSuccess())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "TestRealtimeTask task2 = new TestRealtimeTask(\"realtime2\",new TaskResource(\"realtime2\",1),\"foo\",TaskStatus.running(\"realtime2\"),jsonMapper)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "mockWorkerRunningTask(task1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(taskFuture3.get().isFailure())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "TestRealtimeTask task3 = new TestRealtimeTask(\"realtime3\",new TaskResource(\"realtime3\",1),\"foo\",TaskStatus.running(\"realtime3\"),jsonMapper)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "mockWorkerCompleteSuccessfulTask(task3)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "((RemoteTaskRunnerTestUtils.TestableRemoteTaskRunner)remoteTaskRunner).setCurrentTimeMillis(System.currentTimeMillis())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "remoteTaskRunner.checkBlackListedNodes()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "mockWorkerCompleteFailedTask(task3)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rtrConfig.setMaxPercentageBlacklistWorkers(100)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TestRealtimeTask task1 = new TestRealtimeTask(\"realtime1\",new TaskResource(\"realtime1\",1),\"foo\",TaskStatus.success(\"realtime1\"),jsonMapper)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.getBlacklistedTaskSlotCount())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testSuccessfulTaskOnBlacklistedWorker['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(1,remoteTaskRunner.getBlackListedWorkers().size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(taskFuture1.get().isFailure())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mockWorkerCompleteSuccessfulTask(task2)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(taskAnnounced(task2.getId()))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(taskFuture3.get().isSuccess())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.getBlackListedWorkers().size())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "mockWorkerCompleteFailedTask(task1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Future<TaskStatus> taskFuture1 = remoteTaskRunner.run(task1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(1,remoteTaskRunner.getBlackListedWorkers().size())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TestRealtimeTask task2 = new TestRealtimeTask(\"realtime2\",new TaskResource(\"realtime2\",1),\"foo\",TaskStatus.success(\"realtime2\"),jsonMapper)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "makeWorker()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(3,remoteTaskRunner.getBlacklistedTaskSlotCount())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Assert.assertEquals(0,remoteTaskRunner.findWorkerRunningTask(task2.getId()).getContinuouslyFailedTasksCount())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Future<TaskStatus> taskFuture3 = remoteTaskRunner.run(task3)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(1,remoteTaskRunner.findWorkerRunningTask(task1.getId()).getContinuouslyFailedTasksCount())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(2,remoteTaskRunner.findWorkerRunningTask(task2.getId()).getContinuouslyFailedTasksCount())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "((RemoteTaskRunnerTestUtils.TestableRemoteTaskRunner)remoteTaskRunner).setCurrentTimeMillis(System.currentTimeMillis() + 2 * timeoutPeriod.toStandardDuration().getMillis())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Future<TaskStatus> taskFuture2 = remoteTaskRunner.run(task2)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "mockWorkerCompleteFailedTask(task2)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertTrue(taskFuture2.get().isFailure())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mockWorkerRunningTask(task2)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RemoteTaskRunnerConfig rtrConfig = new TestRemoteTaskRunnerConfig(timeoutPeriod)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->21 [style = bold, label=""];
14->5 [style = bold, label=""];
3->29 [style = bold, label=""];
33->42 [style = solid, label="task2"];
40->50 [style = bold, label=""];
44->43 [style = bold, label=""];
46->47 [style = bold, label=""];
43->49 [style = bold, label=""];
19->9 [style = bold, label=""];
12->46 [style = dashed, label="0"];
29->8 [style = bold, label=""];
31->10 [style = bold, label=""];
41->33 [style = bold, label=""];
45->44 [style = bold, label=""];
33->3 [style = solid, label="task2"];
22->24 [style = bold, label=""];
49->19 [style = solid, label="task3"];
13->26 [style = solid, label="task1"];
3->42 [style = bold, label=""];
1->21 [style = solid, label="task2"];
21->16 [style = bold, label=""];
22->27 [style = bold, label=""];
14->4 [style = solid, label="rtrConfig"];
13->6 [style = bold, label=""];
36->10 [style = bold, label=""];
47->39 [style = bold, label=""];
19->32 [style = bold, label=""];
15->21 [style = bold, label=""];
49->8 [style = solid, label="task3"];
49->8 [style = bold, label=""];
1->23 [style = bold, label=""];
6->20 [style = bold, label=""];
25->17 [style = bold, label=""];
34->48 [style = bold, label=""];
23->8 [style = solid, label="task3"];
5->4 [style = bold, label=""];
12->22 [style = bold, label=""];
35->45 [style = bold, label=""];
33->21 [style = bold, label=""];
15->28 [style = bold, label=""];
8->11 [style = bold, label=""];
27->24 [style = bold, label=""];
48->37 [style = bold, label=""];
37->38 [style = bold, label=""];
23->6 [style = bold, label=""];
32->46 [style = bold, label=""];
23->9 [style = solid, label="task3"];
9->32 [style = dashed, label="0"];
42->40 [style = bold, label=""];
16->3 [style = bold, label=""];
11->19 [style = bold, label=""];
18->10 [style = bold, label=""];
15->41 [style = bold, label=""];
3->8 [style = bold, label=""];
38->35 [style = bold, label=""];
23->19 [style = solid, label="task3"];
13->7 [style = solid, label="task1"];
10->14 [style = solid, label="timeoutPeriod"];
13->1 [style = bold, label=""];
26->7 [style = bold, label=""];
4->13 [style = bold, label=""];
50->34 [style = bold, label=""];
24->25 [style = bold, label=""];
13->6 [style = solid, label="task1"];
49->32 [style = solid, label="task3"];
0->14 [style = bold, label=""];
17->30 [style = bold, label=""];
1->3 [style = solid, label="task2"];
20->26 [style = bold, label=""];
2->15 [style = bold, label=""];
10->0 [style = bold, label=""];
9->12 [style = bold, label=""];
1->24 [style = solid, label="task2"];
33->21 [style = solid, label="task2"];
7->2 [style = bold, label=""];
}
