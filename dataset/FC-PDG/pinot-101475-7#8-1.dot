digraph {
39 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final int startTimeSecs = 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "segmentCompletionMgr._seconds += SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "testCommitterFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testDeadServers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset.toString()).withSegmentName(segmentNameStr)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertTrue(fsmMap.containsKey(segmentNameStr))@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(fsmMap.containsKey(segmentNameStr))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "verifyOffset(response,s2Offset)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "segmentCompletionMgr._seconds += 5@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset).withSegmentName(segmentNameStr)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testDeadServers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "segmentCompletionMgr._seconds = startTimeSecs@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "segmentCompletionMgr._seconds += 3600@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "segmentCompletionMgr._seconds += 4@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset.toString()).withSegmentName(segmentNameStr)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "segmentCompletionMgr._seconds += SegmentCompletionProtocol.getMaxSegmentCommitTimeMs() * SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->35 [style = bold, label=""];
40->9 [style = solid, label="params"];
6->3 [style = bold, label=""];
32->13 [style = solid, label="params"];
33->9 [style = solid, label="params"];
52->27 [style = bold, label=""];
39->20 [style = solid, label="params"];
24->32 [style = bold, label=""];
25->48 [style = dashed, label="0"];
46->59 [style = solid, label="params"];
5->45 [style = bold, label=""];
22->34 [style = dashed, label="0"];
36->11 [style = bold, label=""];
1->23 [style = bold, label=""];
48->54 [style = bold, label=""];
18->39 [style = dashed, label="0"];
29->6 [style = bold, label=""];
12->40 [style = bold, label=""];
47->56 [style = solid, label="params"];
36->11 [style = solid, label="params"];
34->17 [style = bold, label=""];
9->5 [style = bold, label=""];
14->1 [style = solid, label="params"];
19->16 [style = solid, label="params"];
46->59 [style = bold, label=""];
25->21 [style = bold, label=""];
56->43 [style = bold, label=""];
57->5 [style = solid, label="params"];
28->18 [style = bold, label=""];
27->12 [style = bold, label=""];
25->36 [style = bold, label=""];
11->44 [style = bold, label=""];
37->13 [style = solid, label="params"];
26->4 [style = bold, label=""];
21->36 [style = dashed, label="0"];
38->6 [style = bold, label=""];
12->51 [style = bold, label=""];
0->34 [style = bold, label=""];
18->20 [style = bold, label=""];
20->8 [style = bold, label=""];
21->11 [style = bold, label=""];
5->45 [style = dashed, label="0"];
10->0 [style = bold, label=""];
57->5 [style = bold, label=""];
12->33 [style = bold, label=""];
22->17 [style = bold, label=""];
5->7 [style = bold, label=""];
41->1 [style = solid, label="params"];
19->35 [style = dashed, label="0"];
37->13 [style = bold, label=""];
39->20 [style = bold, label=""];
21->11 [style = solid, label="params"];
23->31 [style = bold, label=""];
21->54 [style = dashed, label="0"];
4->14 [style = bold, label=""];
54->11 [style = bold, label=""];
47->56 [style = bold, label=""];
32->37 [style = dashed, label="0"];
28->39 [style = bold, label=""];
31->24 [style = bold, label=""];
42->47 [style = bold, label=""];
40->9 [style = bold, label=""];
45->53 [style = bold, label=""];
59->8 [style = bold, label=""];
34->17 [style = solid, label="params"];
4->41 [style = bold, label=""];
19->16 [style = bold, label=""];
53->46 [style = bold, label=""];
22->17 [style = solid, label="params"];
7->28 [style = bold, label=""];
54->11 [style = solid, label="params"];
55->52 [style = solid, label="params"];
51->57 [style = bold, label=""];
55->52 [style = bold, label=""];
14->41 [style = dashed, label="0"];
1->31 [style = solid, label="response"];
18->20 [style = solid, label="params"];
15->2 [style = bold, label=""];
17->26 [style = bold, label=""];
2->19 [style = bold, label=""];
35->16 [style = bold, label=""];
50->6 [style = bold, label=""];
33->40 [style = dashed, label="0"];
16->10 [style = bold, label=""];
30->25 [style = bold, label=""];
3->15 [style = bold, label=""];
13->30 [style = bold, label=""];
41->1 [style = bold, label=""];
58->55 [style = bold, label=""];
33->9 [style = bold, label=""];
14->1 [style = bold, label=""];
8->42 [style = bold, label=""];
0->22 [style = bold, label=""];
24->37 [style = bold, label=""];
43->49 [style = bold, label=""];
44->58 [style = bold, label=""];
15->2 [style = solid, label="startTimeSecs"];
30->48 [style = bold, label=""];
32->13 [style = bold, label=""];
11->27 [style = bold, label=""];
35->16 [style = solid, label="params"];
}
