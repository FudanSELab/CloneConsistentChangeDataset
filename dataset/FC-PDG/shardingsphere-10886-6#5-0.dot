digraph {
8 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"\")))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "schemaContexts.setAccessible(true)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(null))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = mockSchemaContextMap(Collections.emptyMap())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "boolean exists1 = ProxyContext.getInstance().schemaExists(\"schema\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertGetSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RuntimeContext runtimeContext = mock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ShardingSphereSchema shardingSphereSchema = mock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boolean exists2 = ProxyContext.getInstance().schemaExists(\"schema_2\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(schemaContextsMap.get(\"schema\"),is(ProxyContext.getInstance().getSchema(\"schema\")))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertGetSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertThat(false,is(exists2))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = Collections.singletonMap(\"schema\",schemaContext)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "when(schemaContext.getSchema()).thenReturn(shardingSphereSchema)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(shardingSphereSchema.getDataSources()).thenReturn(Collections.emptyMap())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(schemaContext.getRuntimeContext()).thenReturn(runtimeContext)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"schema1\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertThat(true,is(exists1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(schemaContext,is(ProxyContext.getInstance().getSchema(\"schema\")))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "when(schemaContext.getName()).thenReturn(\"schema\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertSchemaExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "SchemaContext schemaContext = mock()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"schema1\")))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(null)))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
0->9 [style = bold, label=""];
10->21 [style = dashed, label="0"];
7->23 [style = dashed, label="0"];
8->15 [style = bold, label=""];
2->0 [style = solid, label="schemaContext"];
15->7 [style = bold, label=""];
3->1 [style = bold, label=""];
26->29 [style = bold, label=""];
2->3 [style = bold, label=""];
28->25 [style = solid, label="exists1"];
18->19 [style = bold, label=""];
14->10 [style = bold, label=""];
10->28 [style = dashed, label="0"];
14->28 [style = bold, label=""];
21->24 [style = bold, label=""];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
8->24 [style = dashed, label="0"];
24->22 [style = bold, label=""];
22->23 [style = bold, label=""];
15->22 [style = dashed, label="0"];
11->0 [style = bold, label=""];
20->16 [style = bold, label=""];
10->8 [style = bold, label=""];
2->7 [style = solid, label="schemaContext"];
2->16 [style = dashed, label="0"];
6->11 [style = bold, label=""];
5->13 [style = bold, label=""];
26->29 [style = solid, label="exists2"];
25->26 [style = bold, label=""];
12->14 [style = bold, label=""];
15->26 [style = dashed, label="0"];
28->25 [style = bold, label=""];
16->19 [style = solid, label="schemaContextsMap"];
9->12 [style = bold, label=""];
13->6 [style = bold, label=""];
0->14 [style = solid, label="schemaContextsMap"];
1->11 [style = solid, label="runtimeContext"];
3->6 [style = solid, label="shardingSphereSchema"];
27->2 [style = bold, label=""];
17->18 [style = bold, label=""];
19->21 [style = bold, label=""];
}
