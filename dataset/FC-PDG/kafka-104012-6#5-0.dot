digraph {
10 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,Arrays.asList(topicName))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(ClientRequest request){JoinGroupRequest join = new JoinGroupRequest(request.request().body())ProtocolMetadata protocolMetadata = join.groupProtocols().iterator().next()PartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(protocolMetadata.metadata())protocolMetadata.metadata().rewind()return subscription.topics().containsAll(updatedSubscriptionSet)}},joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE.code()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<TopicPartition> newAssignment = Arrays.asList(tp,otherPartition)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertFalse(coordinator.needRejoin())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(ClientRequest request){final Map<String,Integer> updatedPartitions = new HashMap<>()for (String topic : updatedSubscription)updatedPartitions.put(topic,1)metadata.update(TestUtils.clusterWith(1,updatedPartitions),time.milliseconds())return true}},syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.prepareResponse(syncGroupResponse(newAssignment,Errors.NONE.code()))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "subscriptions.subscribe(singleton(topicName),rebalanceListener)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "TopicPartition otherPartition = new TopicPartition(otherTopicName,0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "metadata.needMetadataForAllTopics(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssignment))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Set<TopicPartition> newAssignmentSet = new HashSet<>(newAssignment)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "metadata.update(cluster,time.milliseconds())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,singletonList(tp)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(newAssignmentSet,subscriptions.assignedPartitions())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE.code()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testRejoinGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testRejoinGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE.code()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final Set<String> updatedSubscriptionSet = new HashSet<>(updatedSubscription)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(newAssignmentSet,rebalanceListener.assigned)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "coordinator.poll(time.milliseconds())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "coordinator.doJoinGroup()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(updatedSubscriptionSet,subscriptions.subscription())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,\"consumer\",\"leader\",Errors.NONE.code()))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topicName,otherTopicName)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topicName,otherTopicName))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(singleton(topicName),subscriptions.subscription())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final String otherTopicName = \"otherTopic\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topicName,otherTopic)),rebalanceListener)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "coordinator.doJoinGroup()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44->30 [style = bold, label=""];
23->49 [style = bold, label=""];
5->8 [style = bold, label=""];
39->43 [style = solid, label="newAssignmentSet"];
33->35 [style = bold, label=""];
15->13 [style = bold, label=""];
48->24 [style = solid, label="otherPartition"];
32->47 [style = solid, label="otherTopicName"];
45->23 [style = bold, label=""];
21->19 [style = bold, label=""];
39->26 [style = solid, label="newAssignmentSet"];
37->25 [style = solid, label="subscription"];
7->12 [style = bold, label=""];
15->6 [style = solid, label="otherTopic"];
32->33 [style = solid, label="otherTopicName"];
28->47 [style = bold, label=""];
34->37 [style = solid, label="updatedSubscriptionSet"];
50->38 [style = solid, label="initialSubscription"];
4->15 [style = bold, label=""];
8->3 [style = bold, label=""];
16->7 [style = bold, label=""];
18->19 [style = bold, label=""];
24->39 [style = bold, label=""];
30->26 [style = bold, label=""];
32->48 [style = solid, label="otherTopicName"];
3->6 [style = bold, label=""];
9->17 [style = bold, label=""];
25->43 [style = bold, label=""];
15->29 [style = dashed, label="0"];
0->21 [style = bold, label=""];
2->9 [style = bold, label=""];
49->27 [style = bold, label=""];
42->24 [style = bold, label=""];
38->42 [style = bold, label=""];
0->28 [style = dashed, label="0"];
13->1 [style = bold, label=""];
50->28 [style = bold, label=""];
39->33 [style = bold, label=""];
46->29 [style = bold, label=""];
47->34 [style = solid, label="updatedSubscription"];
43->40 [style = bold, label=""];
19->5 [style = bold, label=""];
24->31 [style = solid, label="newAssignment"];
7->22 [style = bold, label=""];
11->0 [style = bold, label=""];
12->10 [style = bold, label=""];
48->45 [style = bold, label=""];
41->36 [style = bold, label=""];
36->25 [style = bold, label=""];
29->35 [style = solid, label="consumerId"];
47->42 [style = solid, label="updatedSubscription"];
33->37 [style = solid, label="updatedSubscriptions"];
29->33 [style = solid, label="consumerId"];
35->37 [style = bold, label=""];
37->31 [style = bold, label=""];
6->16 [style = bold, label=""];
18->21 [style = dashed, label="0"];
29->32 [style = bold, label=""];
24->39 [style = solid, label="newAssignment"];
24->35 [style = solid, label="newAssignment"];
12->22 [style = dashed, label="0"];
22->10 [style = bold, label=""];
31->41 [style = bold, label=""];
0->18 [style = bold, label=""];
32->48 [style = bold, label=""];
1->14 [style = bold, label=""];
10->2 [style = bold, label=""];
27->19 [style = bold, label=""];
29->50 [style = solid, label="consumerId"];
17->26 [style = dashed, label="0"];
34->38 [style = bold, label=""];
47->34 [style = bold, label=""];
5->50 [style = bold, label=""];
29->38 [style = solid, label="consumerId"];
20->15 [style = bold, label=""];
14->11 [style = bold, label=""];
29->28 [style = solid, label="consumerId"];
29->37 [style = solid, label="consumerId"];
40->44 [style = bold, label=""];
34->25 [style = solid, label="updatedSubscriptionSet"];
}
