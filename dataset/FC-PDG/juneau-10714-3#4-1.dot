digraph {
10 [style = filled, label = "assertOptional(t.wrapped()).isType().is(true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "t.deprecated(true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "t.wrapped(\"true\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertObject(t.deprecated()).isType().is(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertObject(t.wrapped()).isType().is(true)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Operation t = new Operation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertObject(t.wrapped()).isType().is(true)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertObject(t.deprecated()).isNull()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "t.wrapped((String)null)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertObject(t.deprecated()).isType().is(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "t.deprecated((String)null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertOptional(t.wrapped()).isType().is(true)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "a05_wrapped['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "t.deprecated(\"true\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "a12_deprecated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Xml t = new Xml()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "a05_wrapped['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertObject(t.wrapped()).isNull()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertOptional(t.wrapped()).isNull()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "t.wrapped(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
14->16 [style = bold, label=""];
16->18 [style = bold, label=""];
5->14 [style = dashed, label="0"];
19->12 [style = bold, label=""];
8->3 [style = bold, label=""];
3->11 [style = bold, label=""];
0->11 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
3->0 [style = bold, label=""];
12->13 [style = bold, label=""];
1->12 [style = dashed, label="0"];
15->17 [style = bold, label=""];
1->6 [style = bold, label=""];
6->13 [style = dashed, label="0"];
17->14 [style = bold, label=""];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
7->15 [style = dashed, label="0"];
5->8 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
7->10 [style = dashed, label="0"];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
3->16 [style = dashed, label="0"];
2->8 [style = bold, label=""];
2->5 [style = bold, label=""];
}
