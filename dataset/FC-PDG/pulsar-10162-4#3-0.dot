digraph {
40 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(2,27),new LongPair(2,28))))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),Range.closed(new LongPair(0,98),new LongPair(0,100)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "position = new LongPair(3,13)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(1,9),new LongPair(1,15))))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "set.add(Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(2,-1),new LongPair(2,10))))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "LongPair position = new LongPair(0,99)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "gSet.add(Range.closed(new LongPair(2,25),new LongPair(2,28)))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "set.addOpenClosed(3,11,3,20)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "position = new LongPair(2,30)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "set.addOpenClosed(0,99,1,5)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(1,-1),new LongPair(1,5))))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "set.addOpenClosed(4,11,4,20)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(4,15),new LongPair(4,20))))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "gSet.add(Range.closed(new LongPair(0,101),new LongPair(1,5)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "com.google.common.collect.RangeSet<LongPair> gSet = TreeRangeSet.create()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "set.remove(Range.open(new LongPair(0,99),new LongPair(0,105)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "set.add(Range.closed(new LongPair(0,100),new LongPair(1,5)))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertNull(set.rangeContaining(position.getKey(),position.getValue()))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "set.add(Range.closed(new LongPair(2,25),new LongPair(2,28)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "set.remove(Range.closed(new LongPair(2,27),new LongPair(4,15)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testDeleteForDifferentKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int count = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "gSet.add(Range.closed(new LongPair(1,10),new LongPair(1,15)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "position = new LongPair(3,22)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "gSet.add(Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),null)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "List<Range<LongPair>> ranges = set.asRanges()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "set.addOpenClosed(2,24,2,28)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testRangeContaining['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(0,97),new LongPair(0,99))))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "set.add(Range.closed(new LongPair(1,10),new LongPair(1,15)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "set.addOpenClosed(0,97,0,99)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "set.addOpenClosed(1,9,1,15)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "gSet.add(Range.closed(new LongPair(0,98),new LongPair(0,100)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertNull(set.rangeContaining(position.getKey(),position.getValue()))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "set.add(Range.closed(new LongPair(4,12),new LongPair(4,20)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "set.addOpenClosed(1,19,2,10)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "gSet.add(Range.closed(new LongPair(1,20),new LongPair(2,10)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "set.add(Range.closed(new LongPair(0,98),new LongPair(0,99)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testRangeContaining['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "gSet.add(Range.closed(new LongPair(4,12),new LongPair(4,20)))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(2,24),new LongPair(2,26))))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),null)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "set.add(Range.closed(new LongPair(1,20),new LongPair(2,10)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
14->3 [style = bold, label=""];
11->28 [style = bold, label=""];
21->10 [style = bold, label=""];
22->36 [style = dashed, label="0"];
41->32 [style = bold, label=""];
22->15 [style = bold, label=""];
40->47 [style = solid, label="count"];
0->26 [style = bold, label=""];
39->44 [style = solid, label="count"];
17->1 [style = bold, label=""];
34->48 [style = bold, label=""];
39->44 [style = bold, label=""];
18->30 [style = dashed, label="0"];
15->25 [style = bold, label=""];
3->31 [style = bold, label=""];
20->0 [style = bold, label=""];
30->27 [style = bold, label=""];
3->11 [style = bold, label=""];
44->40 [style = bold, label=""];
8->14 [style = solid, label="position"];
38->36 [style = bold, label=""];
32->38 [style = solid, label="count"];
24->44 [style = dashed, label="0"];
12->16 [style = bold, label=""];
48->35 [style = bold, label=""];
46->39 [style = bold, label=""];
16->2 [style = bold, label=""];
37->6 [style = bold, label=""];
2->38 [style = dashed, label="0"];
24->0 [style = solid, label="position"];
49->43 [style = bold, label=""];
26->30 [style = bold, label=""];
26->27 [style = solid, label="position"];
24->20 [style = bold, label=""];
32->38 [style = bold, label=""];
38->36 [style = solid, label="count"];
25->24 [style = bold, label=""];
29->6 [style = bold, label=""];
36->46 [style = bold, label=""];
46->39 [style = solid, label="count"];
4->43 [style = dashed, label="0"];
19->13 [style = bold, label=""];
35->50 [style = bold, label=""];
18->27 [style = bold, label=""];
11->31 [style = dashed, label="0"];
15->46 [style = dashed, label="0"];
33->42 [style = bold, label=""];
23->6 [style = bold, label=""];
40->47 [style = bold, label=""];
3->28 [style = solid, label="position"];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
13->5 [style = bold, label=""];
7->21 [style = bold, label=""];
4->12 [style = bold, label=""];
5->7 [style = bold, label=""];
42->49 [style = bold, label=""];
43->41 [style = bold, label=""];
44->40 [style = solid, label="count"];
10->49 [style = dashed, label="0"];
50->33 [style = bold, label=""];
31->28 [style = bold, label=""];
1->19 [style = bold, label=""];
2->22 [style = bold, label=""];
6->45 [style = bold, label=""];
36->46 [style = solid, label="count"];
27->8 [style = bold, label=""];
45->34 [style = bold, label=""];
25->39 [style = dashed, label="0"];
26->18 [style = bold, label=""];
}
