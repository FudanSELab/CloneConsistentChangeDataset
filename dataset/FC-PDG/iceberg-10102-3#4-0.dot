digraph {
8 [style = filled, label = "return ROWS_CANNOT_MATCH@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Statistics<?> colStats = stats.get(id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return ROWS_CANNOT_MATCH@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "colStats != null && !colStats.isEmpty()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Preconditions.checkNotNull(struct.field(id),\"Cannot filter by nested column: %s\",schema.findField(id))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "return ROWS_MIGHT_MATCH@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return ROWS_CANNOT_MATCH@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "T upper = max(colStats,id)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "valueCount == null@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "notNull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "cmp < 0@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "valueCount == null@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "schema.findType(id) instanceof Type.NestedType@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return ROWS_CANNOT_MATCH@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "colStats != null && valueCount - colStats.getNumNulls() == 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!colStats.hasNonNullValue()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "notNull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return ROWS_MIGHT_MATCH@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "gtEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6->9 [style = solid, label="colStats"];
1->5 [style = bold, label=""];
13->10 [style = bold, label=""];
12->9 [style = solid, label="valueCount"];
7->11 [style = bold, label=""];
16->12 [style = dotted, label="true"];
5->22 [style = solid, label="colStats"];
12->5 [style = bold, label=""];
17->6 [style = bold, label=""];
10->5 [style = solid, label="id"];
7->12 [style = bold, label=""];
20->26 [style = bold, label=""];
6->22 [style = bold, label=""];
6->21 [style = bold, label=""];
3->25 [style = bold, label=""];
10->19 [style = bold, label=""];
3->25 [style = solid, label="cmp"];
10->6 [style = solid, label="id"];
19->20 [style = bold, label=""];
8->3 [style = bold, label=""];
5->17 [style = solid, label="colStats"];
25->18 [style = bold, label=""];
17->6 [style = dotted, label="true"];
7->20 [style = dashed, label="0"];
11->12 [style = bold, label=""];
25->14 [style = dotted, label="true"];
25->14 [style = bold, label=""];
10->26 [style = solid, label="id"];
10->20 [style = solid, label="id"];
12->1 [style = bold, label=""];
9->8 [style = bold, label=""];
2->10 [style = bold, label=""];
10->7 [style = bold, label=""];
5->17 [style = bold, label=""];
17->3 [style = dotted, label="true"];
22->3 [style = solid, label="upper"];
0->7 [style = bold, label=""];
9->8 [style = dotted, label="true"];
10->22 [style = solid, label="id"];
22->3 [style = bold, label=""];
26->16 [style = bold, label=""];
10->7 [style = solid, label="id"];
1->6 [style = bold, label=""];
17->25 [style = dotted, label="true"];
5->6 [style = bold, label=""];
7->11 [style = dotted, label="true"];
19->20 [style = solid, label="field"];
10->0 [style = solid, label="id"];
10->12 [style = solid, label="id"];
10->19 [style = solid, label="id"];
21->22 [style = bold, label=""];
9->17 [style = dashed, label="0"];
12->1 [style = solid, label="valueCount"];
10->0 [style = bold, label=""];
2->4 [style = dotted, label="true"];
23->10 [style = bold, label=""];
16->5 [style = bold, label=""];
9->3 [style = bold, label=""];
17->22 [style = dotted, label="true"];
14->18 [style = bold, label=""];
23->15 [style = dotted, label="true"];
6->21 [style = dotted, label="true"];
6->9 [style = bold, label=""];
4->24 [style = dashed, label="0"];
16->12 [style = bold, label=""];
23->24 [style = dotted, label="true"];
1->5 [style = dotted, label="true"];
17->18 [style = bold, label=""];
13->4 [style = dotted, label="true"];
26->16 [style = solid, label="valueCount"];
}
