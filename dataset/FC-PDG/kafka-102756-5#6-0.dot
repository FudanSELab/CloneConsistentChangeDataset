digraph {
3 [style = filled, label = "runTest(expectedResult,storeName)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "leftTable.outerJoin(rightTable,valueJoiner).leftJoin(rightTable,valueJoiner,materialized).toStream().peek(new CountingPeek(true)).to(OUTPUT_TOPIC)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final List<List<KeyValueTimestamp<Long,String>>> expectedResult = Arrays.asList(null,null,null,Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"A-null-null\",3L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"A-a-a\",4L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"A-a-a\",4L)),Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"B-a-a\",5L)),Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"B-b-b\",6L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"B-b-b\",6L)),Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,null,7L)),null,null,Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-null-null\",9L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-c-c\",10L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-c-c\",10L)),Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-null-null\",11L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-null-null\",11L)),Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,null,12L)),null,null,Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"D-d-d\",15L)))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "leftTable.outerJoin(rightTable,valueJoiner).leftJoin(rightTable,valueJoiner,materialized).toStream().to(OUTPUT_TOPIC)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final List<List<String>> expectedResult = Arrays.asList(null,null,null,Arrays.asList(\"A-null-null\",\"A-a-a\",\"A-a-a\"),Collections.singletonList(\"B-a-a\"),Arrays.asList(\"B-b-b\",\"B-b-b\"),Collections.singletonList((String)null),null,null,Arrays.asList(\"C-null-null\",\"C-c-c\",\"C-c-c\"),Arrays.asList(\"C-null-null\",\"C-null-null\"),Collections.singletonList((String)null),null,null,Collections.singletonList(\"D-d-d\"))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testOuterLeft['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "leftTable.leftJoin(rightTable,valueJoiner).leftJoin(rightTable,valueJoiner,materialized).toStream().peek(new CountingPeek(true)).to(OUTPUT_TOPIC)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final List<List<String>> expectedResult = Arrays.asList(null,null,null,Arrays.asList(\"A-null-null\",\"A-a-a\",\"A-a-a\"),Collections.singletonList(\"B-a-a\"),Arrays.asList(\"B-b-b\",\"B-b-b\"),Collections.singletonList(\"null-b-b\"),Collections.singletonList((String)null),null,Arrays.asList(\"C-null-null\",\"C-c-c\",\"C-c-c\"),Arrays.asList(\"C-null-null\",\"C-null-null\"),Collections.singletonList((String)null),null,Arrays.asList(\"null-d-d\",\"null-d-d\"),Collections.singletonList(\"D-d-d\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "runTest(expectedFinalMultiJoinResult,storeName)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + \"-inner-left\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testLeftLeft['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testLeftLeft['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "leftTable.leftJoin(rightTable,valueJoiner).leftJoin(rightTable,valueJoiner,materialized).toStream().to(OUTPUT_TOPIC)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cacheEnabled@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
5->2 [style = bold, label=""];
0->2 [style = dotted, label="true"];
0->10 [style = dotted, label="true"];
11->3 [style = bold, label=""];
10->2 [style = bold, label=""];
9->4 [style = bold, label=""];
8->3 [style = solid, label="expectedResult"];
12->4 [style = bold, label=""];
7->11 [style = dashed, label="0"];
0->11 [style = dotted, label="false"];
6->13 [style = dashed, label="0"];
0->6 [style = dotted, label="false"];
0->8 [style = bold, label=""];
0->13 [style = bold, label=""];
6->3 [style = solid, label="expectedResult"];
0->5 [style = dotted, label="true"];
7->3 [style = bold, label=""];
0->10 [style = bold, label=""];
0->7 [style = dotted, label="false"];
13->11 [style = bold, label=""];
0->3 [style = dotted, label="false"];
0->13 [style = dotted, label="false"];
1->4 [style = bold, label=""];
0->8 [style = dotted, label="false"];
5->10 [style = dashed, label="0"];
8->7 [style = bold, label=""];
13->3 [style = solid, label="expectedResult"];
0->5 [style = bold, label=""];
6->7 [style = bold, label=""];
4->0 [style = bold, label=""];
}
