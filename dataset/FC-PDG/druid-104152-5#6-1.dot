digraph {
6 [style = filled, label = "Assert.assertEquals(taskLocation,status.getLocation())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final Task task = new AbstractFixedIntervalTask(\"id1\",\"id1\",\"ds\",Intervals.of(\"2012-01-01/P1D\"),null){@Override public String getType(){return \"test\"}@Override public void stopGracefully(TaskConfig taskConfig){}@Override public TaskStatus run(TaskToolbox toolbox){final TaskLock myLock = Iterables.getOnlyElement(toolbox.getTaskActionClient().submit(new LockListAction()))final DataSegment segment = DataSegment.builder().dataSource(\"ds\").interval(Intervals.of(\"2012-01-01/P2D\")).version(myLock.getVersion()).build()toolbox.getTaskActionClient().submit(new SegmentInsertAction(ImmutableSet.of(segment)))return TaskStatus.success(getId())}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testBadInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(\"segments published\",0,mdc.getPublished().size())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(\"num segments published\",2,mdc.getPublished().size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Task rtishTask = new RealtimeishTask()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"segments nuked\",0,mdc.getNuked().size())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(\"statusCode\",TaskState.SUCCESS,status.getStatusCode())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final TaskStatus status = runTask(rtishTask)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"statusCode\",TaskState.FAILED,status.getStatusCode())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testRealtimeishTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final TaskStatus status = runTask(task)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testRealtimeishTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"num segments nuked\",0,mdc.getNuked().size())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
5->9 [style = dashed, label="0"];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
6->0 [style = bold, label=""];
1->0 [style = bold, label=""];
5->3 [style = solid, label="rtishTask"];
3->1 [style = bold, label=""];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
12->9 [style = bold, label=""];
11->13 [style = bold, label=""];
9->8 [style = solid, label="task"];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
