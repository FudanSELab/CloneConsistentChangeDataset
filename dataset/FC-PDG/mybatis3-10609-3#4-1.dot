digraph {
4 [style = filled, label = "testGetNamesWithArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testGetNamesWithArray_a2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Array array = sqlSession.getConnection().createArrayOf(\"int\",new Integer((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@19837e4)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SPMapper spMapper = sqlSession.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Object(( returnedIds = (Object(()parms.get(\"returnedIds\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SPMapper spMapper = sqlSession.getMapper()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testGetNamesWithArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(4,returnedIds.length)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(2,names.size())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{sqlSession.close()}@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Name> names = spMapper.getNamesWithArrayAnnotatedWithXMLResultMap(parms)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Object(( returnedIds = (Object(()parms.get(\"returnedIds\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(3,parms.get(\"requestedRows\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<String,Object> parms = new HashMap<String,Object>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "parms.put(\"ids\",array)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map<String,Object> parms = new HashMap<String,Object>()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
15->7 [style = bold, label=""];
11->16 [style = dashed, label="0"];
3->6 [style = bold, label=""];
6->0 [style = bold, label=""];
9->10 [style = solid, label="array"];
9->8 [style = bold, label=""];
8->2 [style = solid, label="array"];
4->7 [style = bold, label=""];
7->9 [style = bold, label=""];
11->5 [style = bold, label=""];
12->10 [style = bold, label=""];
12->2 [style = solid, label="parms"];
0->1 [style = bold, label=""];
10->16 [style = solid, label="parms"];
16->5 [style = bold, label=""];
10->2 [style = bold, label=""];
13->9 [style = bold, label=""];
9->12 [style = bold, label=""];
14->13 [style = bold, label=""];
10->11 [style = solid, label="parms"];
2->11 [style = bold, label=""];
2->16 [style = bold, label=""];
}
