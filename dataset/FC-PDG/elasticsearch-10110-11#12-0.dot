digraph {
4 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"geoip\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(processor.isIgnoreMissing())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCountryBuildDefaults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(GeoIpProcessor.Factory.DEFAULT_COUNTRY_PROPERTIES))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(processor.isIgnoreMissing())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(processor.getDatabaseType(),equalTo(\"GeoLite2-Country\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(localDatabases)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(processor.getTag(),equalTo(processorTag))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCountryBuildDefaults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"attachment\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String processorTag = randomAlphaOfLength(10)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "GeoIpProcessor processor = factory.create(null,processorTag,null,config)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(AttachmentProcessor.Factory.DEFAULT_PROPERTIES))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "config.put(\"ignore_missing\",true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(databaseRegistry)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "config.put(\"field\",\"_field\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "config.put(\"database_file\",\"GeoLite2-Country.mmdb\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AttachmentProcessor processor = factory.create(null,processorTag,null,config)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testIgnoreMissing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(processor.getField(),equalTo(\"_field\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
14->3 [style = bold, label=""];
16->15 [style = bold, label=""];
2->19 [style = bold, label=""];
1->8 [style = bold, label=""];
12->17 [style = dashed, label="0"];
11->2 [style = dashed, label="0"];
15->2 [style = solid, label="config"];
3->11 [style = solid, label="config"];
18->19 [style = solid, label="processorTag"];
18->2 [style = bold, label=""];
4->6 [style = dashed, label="0"];
15->3 [style = bold, label=""];
12->1 [style = bold, label=""];
3->0 [style = bold, label=""];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
18->2 [style = solid, label="processorTag"];
9->14 [style = dashed, label="0"];
2->7 [style = solid, label="processorTag"];
2->11 [style = solid, label="processorTag"];
7->6 [style = bold, label=""];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
0->18 [style = bold, label=""];
5->0 [style = dashed, label="0"];
10->9 [style = bold, label=""];
13->14 [style = bold, label=""];
19->7 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
0->5 [style = bold, label=""];
17->20 [style = bold, label=""];
}
