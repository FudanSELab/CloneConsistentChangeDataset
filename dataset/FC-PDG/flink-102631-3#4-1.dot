digraph {
20 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(mergeFunction.hasMerged())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testLateMerging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "mergeFunction.reset()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(new TimeWindow(1,3),windowSet.getStateWindow(new TimeWindow(1,3)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(new TimeWindow(5,13),windowSet.addWindow(new TimeWindow(10,13),mergeFunction))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(new TimeWindow(5,13),windowSet.addWindow(new TimeWindow(5,8),mergeFunction))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),not(hasItem(mergeFunction.mergeTarget())))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(new TimeWindow(5,8),windowSet.addWindow(new TimeWindow(5,8),mergeFunction))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(new TimeWindow(0,13),windowSet.addWindow(new TimeWindow(3,5),mergeFunction))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "@SuppressWarnings(\"unchecked\") ListState<Tuple2<TimeWindow,TimeWindow>> mockState = mock()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),anyOf(containsInAnyOrder(new TimeWindow(0,3),new TimeWindow(5,8)),containsInAnyOrder(new TimeWindow(0,3),new TimeWindow(10,13)),containsInAnyOrder(new TimeWindow(5,8),new TimeWindow(10,13))))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(mergeFunction.stateWindow(),anyOf(is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(new TimeWindow(1,3),windowSet.addWindow(new TimeWindow(1,3),mergeFunction))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testMergeLargeWindowCoveringMultipleWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "mergeFunction.reset()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(windowSet.getStateWindow(new TimeWindow(0,13)),anyOf(is(new TimeWindow(0,3)),is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@45@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "mergeFunction.reset()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(new TimeWindow(0,13),mergeFunction.mergeTarget())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),not(hasItem(mergeFunction.mergeTarget())))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(new TimeWindow(0,13),windowSet.addWindow(new TimeWindow(0,13),mergeFunction))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "mergeFunction.reset()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(new TimeWindow(0,3),windowSet.getStateWindow(new TimeWindow(0,3)))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(mergeFunction.stateWindow(),anyOf(is(new TimeWindow(0,3)),is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "mergeFunction.reset()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(mergeFunction.hasMerged())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),anyOf(containsInAnyOrder(new TimeWindow(0,3)),containsInAnyOrder(new TimeWindow(5,8)),containsInAnyOrder(new TimeWindow(10,13))))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mergeFunction.reset()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "mergeFunction.reset()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(new TimeWindow(5,13),mergeFunction.mergeTarget())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(new TimeWindow(10,13),windowSet.addWindow(new TimeWindow(10,13),mergeFunction))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(0,3),new TimeWindow(5,13)))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(mergeFunction.hasMerged())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MergingWindowSet<TimeWindow> windowSet = new MergingWindowSet<>(EventTimeSessionWindows.withGap(Time.milliseconds(3)))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mergeFunction.reset()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(new TimeWindow(10,13),windowSet.getStateWindow(new TimeWindow(10,13)))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(new TimeWindow(5,13),windowSet.addWindow(new TimeWindow(8,10),mergeFunction))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(windowSet.getStateWindow(new TimeWindow(0,13)),anyOf(is(new TimeWindow(1,3)),is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "MergingWindowSet<TimeWindow> windowSet = new MergingWindowSet<>(EventTimeSessionWindows.withGap(Time.milliseconds(3)),mockState)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(5,8),new TimeWindow(10,13)))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),anyOf(containsInAnyOrder(new TimeWindow(10,13)),containsInAnyOrder(new TimeWindow(5,8))))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testLateMerging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TestingMergeFunction mergeFunction = new TestingMergeFunction()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(windowSet.getStateWindow(new TimeWindow(5,13)),anyOf(is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mergeFunction.reset()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mergeFunction.reset()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(new TimeWindow(5,8),windowSet.getStateWindow(new TimeWindow(5,8)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51->5 [style = bold, label=""];
40->47 [style = dashed, label="0"];
15->10 [style = bold, label=""];
2->20 [style = bold, label=""];
34->46 [style = bold, label=""];
50->6 [style = bold, label=""];
25->47 [style = bold, label=""];
44->43 [style = solid, label="mockState"];
47->48 [style = bold, label=""];
11->14 [style = bold, label=""];
31->16 [style = bold, label=""];
0->27 [style = bold, label=""];
29->3 [style = bold, label=""];
13->49 [style = solid, label="mergeFunction"];
41->37 [style = bold, label=""];
37->29 [style = bold, label=""];
19->11 [style = solid, label="mergeFunction"];
13->52 [style = solid, label="mergeFunction"];
12->26 [style = bold, label=""];
7->31 [style = bold, label=""];
17->32 [style = bold, label=""];
23->41 [style = bold, label=""];
33->5 [style = bold, label=""];
28->49 [style = dashed, label="0"];
19->37 [style = solid, label="mergeFunction"];
45->44 [style = bold, label=""];
6->36 [style = bold, label=""];
36->11 [style = bold, label=""];
27->15 [style = bold, label=""];
22->50 [style = dashed, label="0"];
1->23 [style = bold, label=""];
44->43 [style = bold, label=""];
8->22 [style = bold, label=""];
21->38 [style = bold, label=""];
26->21 [style = bold, label=""];
43->19 [style = bold, label=""];
39->18 [style = bold, label=""];
49->8 [style = bold, label=""];
13->4 [style = solid, label="mergeFunction"];
13->41 [style = solid, label="mergeFunction"];
13->27 [style = solid, label="mergeFunction"];
40->12 [style = bold, label=""];
13->24 [style = solid, label="mergeFunction"];
19->2 [style = solid, label="mergeFunction"];
13->19 [style = bold, label=""];
13->36 [style = solid, label="mergeFunction"];
52->25 [style = bold, label=""];
14->0 [style = bold, label=""];
3->2 [style = bold, label=""];
42->30 [style = bold, label=""];
19->49 [style = bold, label=""];
24->25 [style = bold, label=""];
30->7 [style = bold, label=""];
5->13 [style = bold, label=""];
28->8 [style = bold, label=""];
19->25 [style = solid, label="mergeFunction"];
19->1 [style = solid, label="mergeFunction"];
24->52 [style = dashed, label="0"];
13->18 [style = solid, label="mergeFunction"];
20->39 [style = bold, label=""];
8->50 [style = bold, label=""];
13->28 [style = solid, label="mergeFunction"];
10->9 [style = bold, label=""];
32->4 [style = bold, label=""];
4->1 [style = bold, label=""];
19->28 [style = bold, label=""];
13->3 [style = solid, label="mergeFunction"];
16->35 [style = bold, label=""];
19->8 [style = solid, label="mergeFunction"];
35->34 [style = bold, label=""];
9->52 [style = bold, label=""];
19->15 [style = solid, label="mergeFunction"];
38->17 [style = bold, label=""];
19->42 [style = solid, label="mergeFunction"];
12->48 [style = dashed, label="0"];
9->24 [style = bold, label=""];
25->40 [style = bold, label=""];
22->6 [style = bold, label=""];
18->42 [style = bold, label=""];
}
