digraph {
0 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToCountryOnNumber(JoinType.INNER))).makeCursors(new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter(),Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51c6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51ce,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51d6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51de,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51e6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51ee,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51f6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f51fe,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5206,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f520e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5216): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5221,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5229,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5231,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5239,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5241,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5249,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5251,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5259,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5261,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5269,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5271,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f5279))@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToCountryOnIsoCode(JoinType.LEFT))).makeCursors(new OrDimFilter(new SelectorDimFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",\"DE\",null),new SelectorDimFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"Norway\",null),new SelectorDimFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\",\"10\",null)).toFilter(),Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f52d3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f52db,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9f52e3))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "test_makeCursors_factToCountryLeftWithFilterOnJoinable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->0 [style = bold, label=""];
0->4 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->4 [style = bold, label=""];
}
