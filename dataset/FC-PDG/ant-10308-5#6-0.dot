digraph {
7 [style = filled, label = "testTrimFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertNotContains(\" This is the second\",contents)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testTrimFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/trimfile\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/trimfilebyline\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testTrimFileByLine['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertContains(\" This is the second\",contents)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertContains(\"file.This is the second\",contents)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(contents,containsString(\" This is the second\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "buildRule.executeTarget(\"trimfile\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "buildRule.executeTarget(\"trimfilebyline\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(\"no ws at end\",contents.endsWith(\"second line.\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(\"no ws at start\",contents.startsWith(\"This is th\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(\"no ws at start\",contents.startsWith(\"This is th\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(\"no ws at end\",contents.endsWith(\"second line.\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->8 [style = solid, label="contents"];
2->6 [style = bold, label=""];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
5->6 [style = solid, label="contents"];
7->4 [style = bold, label=""];
3->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
11->12 [style = solid, label="contents"];
1->12 [style = dashed, label="0"];
13->12 [style = bold, label=""];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
5->11 [style = dashed, label="0"];
11->10 [style = bold, label=""];
12->8 [style = bold, label=""];
1->6 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
9->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
5->1 [style = solid, label="contents"];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
}
