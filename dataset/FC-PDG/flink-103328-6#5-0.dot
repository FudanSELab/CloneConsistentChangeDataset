digraph {
8 [style = filled, label = "RuntimeContext rCtx = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "InternalSingleValueProcessWindowFunction<Long,String,Long,TimeWindow> windowFunction = new InternalSingleValueProcessWindowFunction<>(mock)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TypeInformation<String> stringType = BasicTypeInfo.STRING_TYPE_INFO@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ProcessWindowFunctionMock mock = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "verify(ctx).windowState()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "verify(ctx).globalState()@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "verify(mock).setOutputType(stringType,execConf)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testInternalSingleValueAllWindowFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "windowFunction.process(((byte)0),w,ctx,23L,c)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "doAnswer(new Answer(){@Override public Object answer(InvocationOnMock invocationOnMock){ProcessWindowFunctionMock.Context c = (ProcessWindowFunction.Context)invocationOnMock.getArguments()(1(c.currentProcessingTime()c.currentWatermark()c.windowState()c.globalState()return null}}).when(mock).process(eq(42L),(ProcessWindowFunctionMock.Context)anyObject(),(Iterable<Long>)argThat(IsIterableContainingInOrder.contains(23L)),eq(c))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "windowFunction.open(config)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "windowFunction.process(42L,w,ctx,23L,c)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "AllWindowFunctionMock mock = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Configuration config = new Configuration()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "windowFunction.setRuntimeContext(rCtx)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Collector<String> c = (Collector<String>)mock()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(mock).open(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "InternalWindowFunction.InternalWindowContext ctx = mock()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testInternalSingleValueProcessWindowFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "windowFunction.close()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(ctx).currentWatermark()@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ExecutionConfig execConf = new ExecutionConfig()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "verify(mock).close()@@@36@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "execConf.setParallelism(42)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "InternalSingleValueAllWindowFunction<Long,String,TimeWindow> windowFunction = new InternalSingleValueAllWindowFunction<>(mock)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "verify(mock).apply(eq(w),(Iterable<Long>)argThat(IsIterableContainingInOrder.contains(23L)),eq(c))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "StreamingFunctionUtils.setOutputType(windowFunction,stringType,execConf)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TimeWindow w = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verify(mock).setRuntimeContext(rCtx)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "windowFunction.close()@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "verify(ctx).currentProcessingTime()@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "verify(mock).close()@@@22@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testInternalSingleValueProcessWindowFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(mock).process(eq(42L),(ProcessWindowFunctionMock.Context)anyObject(),(Iterable<Long>)argThat(IsIterableContainingInOrder.contains(23L)),eq(c))@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->9 [style = bold, label=""];
12->0 [style = bold, label=""];
3->1 [style = solid, label="config"];
14->7 [style = bold, label=""];
12->0 [style = solid, label="mock"];
2->30 [style = solid, label="ctx"];
23->25 [style = bold, label=""];
2->20 [style = solid, label="ctx"];
19->10 [style = bold, label=""];
9->11 [style = bold, label=""];
12->33 [style = dashed, label="0"];
20->16 [style = bold, label=""];
27->28 [style = bold, label=""];
32->18 [style = solid, label="windowFunction"];
17->18 [style = bold, label=""];
25->24 [style = bold, label=""];
14->30 [style = solid, label="w"];
1->8 [style = bold, label=""];
20->22 [style = bold, label=""];
0->32 [style = dashed, label="0"];
33->32 [style = solid, label="mock"];
33->14 [style = solid, label="mock"];
0->18 [style = solid, label="windowFunction"];
33->32 [style = bold, label=""];
7->2 [style = bold, label=""];
7->30 [style = solid, label="c"];
12->7 [style = solid, label="mock"];
30->29 [style = bold, label=""];
4->1 [style = bold, label=""];
14->29 [style = solid, label="w"];
5->17 [style = bold, label=""];
15->6 [style = solid, label="stringType"];
13->12 [style = bold, label=""];
3->4 [style = solid, label="config"];
0->15 [style = bold, label=""];
7->29 [style = solid, label="c"];
5->18 [style = solid, label="execConf"];
7->21 [style = solid, label="c"];
8->10 [style = solid, label="rCtx"];
5->6 [style = solid, label="execConf"];
21->20 [style = bold, label=""];
33->8 [style = solid, label="mock"];
2->20 [style = bold, label=""];
20->30 [style = dashed, label="0"];
6->3 [style = bold, label=""];
14->20 [style = solid, label="w"];
12->2 [style = solid, label="mock"];
15->5 [style = bold, label=""];
2->30 [style = bold, label=""];
26->12 [style = bold, label=""];
7->16 [style = solid, label="c"];
33->2 [style = solid, label="mock"];
16->9 [style = bold, label=""];
24->27 [style = bold, label=""];
22->23 [style = bold, label=""];
12->8 [style = solid, label="mock"];
16->29 [style = dashed, label="0"];
31->33 [style = bold, label=""];
12->14 [style = solid, label="mock"];
32->15 [style = bold, label=""];
8->19 [style = solid, label="rCtx"];
10->14 [style = bold, label=""];
3->4 [style = bold, label=""];
2->21 [style = bold, label=""];
18->6 [style = bold, label=""];
8->19 [style = bold, label=""];
33->7 [style = solid, label="mock"];
7->20 [style = solid, label="c"];
15->18 [style = solid, label="stringType"];
}
