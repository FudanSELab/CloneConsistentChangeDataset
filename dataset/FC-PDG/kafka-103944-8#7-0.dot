digraph {
3 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,150L,0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "v < 3@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.unsubscribe()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(100,partitionLag.value(),EPSILON)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testReadCommittedLagMetric['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testReadCommittedLagMetric['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetricDeprecated))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "subscriptions.unsubscribe()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testFetcherMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,50L,0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MetricName partitionLagMetricDeprecated = metrics.metricName(tp0 + \".records-lag\",metricGroup)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "int v = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,0)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fetcher = createFetcher(subscriptions,metrics,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(50,partitionLagDeprecated.value(),EPSILON)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(147,partitionLag.value(),EPSILON)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(50,partitionLag.value(),EPSILON)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "v++@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(\"records-lag\",metricGroup,tags)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MetricName maxLagMetric = metrics.metricInstance(metricsRegistry.recordsLagMax)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,String> tags = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(100,recordsFetchLagMax.value(),EPSILON)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Double.NEGATIVE_INFINITY,recordsFetchLagMax.value(),EPSILON)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tags.put(\"topic\",tp0.topic())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(197,partitionLag.value(),EPSILON)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KafkaMetric partitionLagDeprecated = allMetrics.get(partitionLagMetricDeprecated)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(197,recordsFetchLagMax.value(),EPSILON)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(50,recordsFetchLagMax.value(),EPSILON)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "v++@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Metrics metrics = new Metrics()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "KafkaMetric recordsFetchLagMax = allMetrics.get(maxLagMetric)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(147,recordsFetchLagMax.value(),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tags.put(\"partition\",String.valueOf(tp0.partition()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30->11 [style = solid, label="v"];
38->34 [style = dotted, label="true"];
7->1 [style = solid, label="metrics"];
18->30 [style = bold, label=""];
33->38 [style = solid, label="v"];
14->7 [style = bold, label=""];
8->0 [style = bold, label=""];
30->11 [style = bold, label=""];
20->5 [style = solid, label="partitionLagMetric"];
11->31 [style = dotted, label="true"];
20->16 [style = bold, label=""];
35->8 [style = bold, label=""];
34->40 [style = solid, label="v"];
26->28 [style = bold, label=""];
29->18 [style = solid, label="v"];
33->40 [style = solid, label="v"];
20->15 [style = bold, label=""];
29->30 [style = solid, label="v"];
38->40 [style = dotted, label="true"];
24->28 [style = bold, label=""];
7->1 [style = bold, label=""];
8->20 [style = solid, label="maxLagMetric"];
36->41 [style = bold, label=""];
19->12 [style = bold, label=""];
38->28 [style = bold, label=""];
0->19 [style = bold, label=""];
30->42 [style = bold, label=""];
7->16 [style = solid, label="metrics"];
20->4 [style = solid, label="partitionLagMetric"];
2->27 [style = dashed, label="0"];
41->4 [style = bold, label=""];
32->7 [style = bold, label=""];
40->34 [style = bold, label=""];
2->4 [style = bold, label=""];
0->6 [style = solid, label="tags"];
31->11 [style = bold, label=""];
11->18 [style = bold, label=""];
17->11 [style = dashed, label="0"];
15->22 [style = solid, label="partitionLagMetricDeprecated"];
12->20 [style = solid, label="tags"];
39->35 [style = bold, label=""];
31->11 [style = solid, label="v"];
13->5 [style = bold, label=""];
10->2 [style = bold, label=""];
34->38 [style = bold, label=""];
5->22 [style = bold, label=""];
11->30 [style = bold, label=""];
29->11 [style = bold, label=""];
6->36 [style = solid, label="partitionLagMetric"];
28->29 [style = bold, label=""];
29->11 [style = solid, label="v"];
3->28 [style = dashed, label="0"];
30->18 [style = solid, label="v"];
1->8 [style = bold, label=""];
11->30 [style = dotted, label="true"];
34->38 [style = solid, label="v"];
21->27 [style = bold, label=""];
9->20 [style = bold, label=""];
4->33 [style = bold, label=""];
25->17 [style = bold, label=""];
26->41 [style = dashed, label="0"];
15->23 [style = solid, label="partitionLagMetricDeprecated"];
19->21 [style = solid, label="maxLagMetric"];
29->31 [style = solid, label="v"];
11->3 [style = bold, label=""];
30->31 [style = bold, label=""];
27->10 [style = bold, label=""];
17->13 [style = bold, label=""];
38->40 [style = bold, label=""];
37->39 [style = bold, label=""];
27->36 [style = bold, label=""];
10->21 [style = dashed, label="0"];
3->25 [style = bold, label=""];
4->26 [style = bold, label=""];
11->18 [style = dotted, label="true"];
6->42 [style = solid, label="partitionLagMetric"];
15->16 [style = bold, label=""];
12->6 [style = bold, label=""];
23->24 [style = bold, label=""];
31->30 [style = solid, label="v"];
16->21 [style = bold, label=""];
26->23 [style = bold, label=""];
25->29 [style = dashed, label="0"];
33->38 [style = bold, label=""];
6->9 [style = bold, label=""];
33->34 [style = solid, label="v"];
}
