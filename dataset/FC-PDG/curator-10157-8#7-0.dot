digraph {
1 [style = filled, label = "OperationAndData.ErrorCallback<String> errorCallback = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String path@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),!local),null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "guaranteed@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client.getSchemaSet().getSchema(path).validateDelete()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),null),null)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "errorCallback = new OperationAndData.ErrorCallback<String>(){@Override public void retriesExhausted(OperationAndData<String> operationAndData){client.getFailedDeleteManager().addFailedOperation(unfixedPath)}}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "path = client.fixForNamespace(path)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "pathInForeground(path,unfixedPath)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "forPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),!local,null),null)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "pathInBackground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "guaranteed@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "pathInBackground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return null@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final String unfixedPath = path@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "OperationAndData.ErrorCallback<String> errorCallback = null@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "errorCallback = new OperationAndData.ErrorCallback<String>(){@Override public void retriesExhausted(OperationAndData<String> operationAndData){client.getFailedRemoveWatcherManager().addFailedOperation(new FailedRemoveWatchManager.FailedRemoveWatchDetails(path,watcher))}}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "backgrounding.inBackground()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17->14 [style = solid, label="errorCallback"];
16->19 [style = solid, label="path"];
1->4 [style = bold, label=""];
3->2 [style = solid, label="path"];
15->14 [style = bold, label=""];
13->15 [style = solid, label="unfixedPath"];
16->10 [style = bold, label=""];
18->13 [style = solid, label="path"];
13->19 [style = solid, label="unfixedPath"];
10->19 [style = bold, label=""];
18->16 [style = solid, label="path"];
17->9 [style = bold, label=""];
0->2 [style = bold, label=""];
4->0 [style = dotted, label="true"];
3->18 [style = dashed, label="0"];
1->7 [style = solid, label="errorCallback"];
19->11 [style = bold, label=""];
1->2 [style = solid, label="errorCallback"];
10->17 [style = bold, label=""];
10->19 [style = dotted, label="false"];
4->2 [style = bold, label=""];
12->18 [style = dotted, label="true"];
5->3 [style = dotted, label="true"];
15->14 [style = solid, label="errorCallback"];
2->7 [style = dashed, label="0"];
0->7 [style = solid, label="errorCallback"];
10->9 [style = dotted, label="true"];
13->16 [style = bold, label=""];
4->7 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
10->17 [style = dotted, label="true"];
10->14 [style = dotted, label="true"];
6->1 [style = bold, label=""];
0->2 [style = solid, label="errorCallback"];
5->1 [style = bold, label=""];
4->9 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
3->0 [style = solid, label="path"];
9->15 [style = bold, label=""];
12->8 [style = bold, label=""];
9->14 [style = bold, label=""];
3->7 [style = solid, label="path"];
9->15 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
14->11 [style = bold, label=""];
16->14 [style = solid, label="path"];
8->13 [style = bold, label=""];
}
