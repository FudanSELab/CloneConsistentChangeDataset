digraph {
5 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,null,false,false,new Duration(\"PT0s\"),Duration.millis(10))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "pathChildrenCache = new PathChildrenCache(curator,LOADPATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache-%d\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "scheduledExecutorFactory = null@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "setupServerAndCurator()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SEGPATH)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,databaseSegmentManager,baseView,metadataRuleManager,curator,new NoopServiceEmitter(),scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "databaseSegmentManager = EasyMock.createNiceMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sourceLoadQueuePeon = new CuratorLoadQueuePeon(curator,SOURCE_LOAD_PATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_src_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon_src-%d\"),druidCoordinatorConfig)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "metadataRuleManager = EasyMock.createNiceMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "loadQueuePeon.start()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,databaseSegmentManager,serverInventoryView,metadataRuleManager,curator,serviceEmitter,scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "destinationLoadQueuePeon = new CuratorLoadQueuePeon(curator,DESTINATION_LOAD_PATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_dest_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon_dest-%d\"),druidCoordinatorConfig)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(DESTINATION_LOAD_PATH)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SOURCE_LOAD_PATH)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "druidServer = EasyMock.createMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "serverInventoryView = EasyMock.createMock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "configManager = EasyMock.createNiceMock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "destinationLoadQueueChildrenCache = new PathChildrenCache(curator,DESTINATION_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_dest-%d\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sourceLoadQueueChildrenCache = new PathChildrenCache(curator,SOURCE_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_src-%d\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "curator.start()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(LOADPATH)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "curator.blockUntilConnected()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorCompactionConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorCompactionConfig.empty())).anyTimes()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "scheduledExecutorFactory = new ScheduledExecutorFactory(){@Override public ScheduledExecutorService create(int corePoolSize,final String nameFormat){return Executors.newSingleThreadScheduledExecutor()}}@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EasyMock.replay(configManager)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "JacksonConfigManager configManager = EasyMock.createNiceMock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,null,new Duration(\"PT0s\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "loadQueuePeon = new CuratorLoadQueuePeon(curator,LOADPATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon-%d\"),druidCoordinatorConfig)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
5->8 [style = bold, label=""];
4->3 [style = bold, label=""];
27->38 [style = bold, label=""];
16->1 [style = dashed, label="0"];
36->9 [style = bold, label=""];
15->21 [style = solid, label="configManager"];
8->13 [style = solid, label="scheduledExecutorFactory"];
23->34 [style = dashed, label="0"];
37->17 [style = solid, label="druidCoordinatorConfig"];
21->6 [style = bold, label=""];
10->14 [style = bold, label=""];
9->2 [style = bold, label=""];
17->0 [style = solid, label="druidCoordinatorConfig"];
28->39 [style = bold, label=""];
17->31 [style = bold, label=""];
37->1 [style = bold, label=""];
26->14 [style = bold, label=""];
37->40 [style = solid, label="druidCoordinatorConfig"];
18->13 [style = solid, label="druidNode"];
15->36 [style = dashed, label="0"];
25->16 [style = bold, label=""];
33->27 [style = bold, label=""];
1->11 [style = solid, label="objectMapper"];
30->29 [style = bold, label=""];
12->7 [style = bold, label=""];
5->13 [style = solid, label="loadManagementPeons"];
25->0 [style = solid, label="druidCoordinatorConfig"];
38->14 [style = bold, label=""];
1->17 [style = bold, label=""];
17->25 [style = dashed, label="0"];
24->13 [style = solid, label="metadataRuleManager"];
39->30 [style = bold, label=""];
14->13 [style = solid, label="databaseSegmentManager"];
24->36 [style = bold, label=""];
39->40 [style = solid, label="loadManagementPeons"];
11->0 [style = bold, label=""];
7->34 [style = bold, label=""];
35->37 [style = bold, label=""];
15->9 [style = bold, label=""];
2->21 [style = bold, label=""];
25->13 [style = solid, label="druidCoordinatorConfig"];
18->5 [style = bold, label=""];
23->19 [style = bold, label=""];
7->23 [style = bold, label=""];
29->32 [style = bold, label=""];
32->40 [style = bold, label=""];
24->40 [style = solid, label="metadataRuleManager"];
17->13 [style = solid, label="druidCoordinatorConfig"];
15->13 [style = solid, label="configManager"];
36->40 [style = solid, label="configManager"];
35->17 [style = solid, label="objectMapper"];
3->13 [style = bold, label=""];
1->0 [style = solid, label="objectMapper"];
36->21 [style = solid, label="configManager"];
20->17 [style = dashed, label="0"];
0->18 [style = bold, label=""];
25->11 [style = solid, label="druidCoordinatorConfig"];
8->30 [style = dashed, label="0"];
30->40 [style = solid, label="scheduledExecutorFactory"];
22->1 [style = bold, label=""];
8->4 [style = bold, label=""];
34->35 [style = bold, label=""];
31->28 [style = bold, label=""];
38->40 [style = solid, label="serverInventoryView"];
28->40 [style = solid, label="druidNode"];
16->20 [style = bold, label=""];
17->11 [style = solid, label="druidCoordinatorConfig"];
19->22 [style = bold, label=""];
1->25 [style = bold, label=""];
14->40 [style = solid, label="databaseSegmentManager"];
17->16 [style = bold, label=""];
20->11 [style = bold, label=""];
24->15 [style = bold, label=""];
6->12 [style = bold, label=""];
}
