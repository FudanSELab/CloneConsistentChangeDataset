digraph {
1 [style = filled, label = "newbits.set(iter.nextDoc())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "iter.hasNext()@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "andNot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return new BitDocSet(newbits)@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BitDocSet otherDocSet = (BitDocSet)other@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "newbits.clear(iter.nextDoc())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return new BitDocSet(newbits)@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "newbits.or(otherDocSet.bits)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "iter.hasNext()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "newbits.union(((BitDocSet)other).bits)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "newbits.andNot(((BitDocSet)other).bits)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "union['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DocSet other@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DocSet other@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "newbits = FixedBitSet.ensureCapacity(newbits,otherDocSet.bits.length())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "other instanceof BitDocSet@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "union['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "DocIterator iter = other.iterator()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "newbits.set(doc)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "iter.hasNext()@@@11@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "int doc = iter.nextDoc()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "DocIterator iter = other.iterator()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "FixedBitSet newbits = bits.clone()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "OpenBitSet newbits = (OpenBitSet)(bits.clone())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "newbits = FixedBitSet.ensureCapacity(newbits,doc)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
18->17 [style = solid, label="doc"];
6->3 [style = bold, label=""];
22->24 [style = solid, label="other"];
0->16 [style = bold, label=""];
0->12 [style = dotted, label="true"];
0->13 [style = dotted, label="true"];
8->13 [style = solid, label="other"];
0->13 [style = bold, label=""];
24->2 [style = bold, label=""];
3->2 [style = solid, label="newbits"];
0->20 [style = dotted, label="false"];
23->22 [style = dotted, label="true"];
0->19 [style = dotted, label="true"];
18->10 [style = solid, label="doc"];
8->0 [style = solid, label="other"];
17->9 [style = bold, label=""];
0->4 [style = dotted, label="true"];
5->1 [style = dotted, label="true"];
9->17 [style = dotted, label="true"];
5->9 [style = dashed, label="0"];
10->17 [style = bold, label=""];
23->3 [style = bold, label=""];
4->2 [style = bold, label=""];
7->20 [style = bold, label=""];
20->21 [style = dotted, label="true"];
15->12 [style = solid, label="newbits"];
12->14 [style = solid, label="newbits"];
3->0 [style = bold, label=""];
11->15 [style = bold, label=""];
15->10 [style = solid, label="newbits"];
0->7 [style = bold, label=""];
22->0 [style = solid, label="other"];
20->21 [style = bold, label=""];
20->2 [style = bold, label=""];
0->9 [style = dotted, label="false"];
8->22 [style = dashed, label="0"];
5->1 [style = bold, label=""];
0->16 [style = dotted, label="false"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
15->14 [style = solid, label="newbits"];
13->12 [style = bold, label=""];
9->18 [style = bold, label=""];
19->14 [style = bold, label=""];
21->20 [style = bold, label=""];
18->10 [style = bold, label=""];
0->4 [style = bold, label=""];
6->8 [style = dotted, label="true"];
0->7 [style = dotted, label="false"];
15->0 [style = bold, label=""];
0->24 [style = bold, label=""];
0->24 [style = dotted, label="true"];
9->14 [style = bold, label=""];
0->5 [style = dotted, label="false"];
5->21 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
9->18 [style = dotted, label="true"];
10->14 [style = solid, label="newbits"];
11->8 [style = dotted, label="true"];
4->24 [style = dashed, label="0"];
12->19 [style = bold, label=""];
4->13 [style = dashed, label="0"];
9->10 [style = dotted, label="true"];
8->4 [style = solid, label="other"];
16->9 [style = bold, label=""];
}
