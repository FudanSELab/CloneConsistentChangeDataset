digraph {
2 [style = filled, label = "final ClassNotFoundException e@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ClassLoader loader@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw new BuildException(\"The <classpath> for <ftp> must include\" + \" commons-net.jar if not in Ant's own \" + \" classpath\",e,task.getLocation())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "loader.loadClass(\"org.apache.commons.net.ftp.FTP\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "throw new BuildException(\"The <classpath> or <modulepath> for <junit> must include junit.jar \" + \"if not in Ant's own classpath\",e,task.getLocation())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "ClassNotFoundException e@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "return (FTPTaskMirror)cons.newInstance(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d399c1)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final ClassLoader loader@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final Constructor cons = c.getConstructor(new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d39957)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ClassLoader loader@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "FTPTask task@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "createMirror['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final JUnitTask task@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new BuildException(\"Overdelegating loader\",task.getLocation())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createMirror['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "loader.loadClass(\"junit.framework.Test\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "createMirror['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Class c = loader.loadClass(.getName() + \"Impl\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "c.getClassLoader() != loader@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Constructor cons = c.getConstructor(new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d399b7)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new BuildException(\"The <classpath> for <junit> must include junit.jar \" + \"if not in Ant's own classpath\",e,task.getLocation())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "return (JUnitTaskMirror)cons.newInstance(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d39961)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Class c = loader.loadClass(.getName() + \"Impl\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
2->0 [style = dotted, label="true"];
1->14 [style = dashed, label="0"];
6->3 [style = solid, label="loader"];
11->1 [style = bold, label=""];
22->16 [style = bold, label=""];
11->10 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
0->16 [style = dashed, label="0"];
18->15 [style = dotted, label="true"];
7->20 [style = dashed, label="0"];
14->19 [style = bold, label=""];
16->19 [style = bold, label=""];
9->6 [style = dotted, label="true"];
2->13 [style = bold, label=""];
10->7 [style = solid, label="task"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
17->20 [style = solid, label="task"];
21->20 [style = bold, label=""];
8->5 [style = bold, label=""];
0->4 [style = bold, label=""];
3->8 [style = bold, label=""];
22->16 [style = dotted, label="true"];
0->13 [style = dashed, label="0"];
12->3 [style = solid, label="loader"];
10->17 [style = dashed, label="0"];
5->21 [style = dashed, label="0"];
15->3 [style = solid, label="loader"];
8->21 [style = bold, label=""];
5->7 [style = bold, label=""];
3->21 [style = bold, label=""];
4->19 [style = dashed, label="0"];
18->17 [style = dotted, label="true"];
9->1 [style = bold, label=""];
3->8 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
2->22 [style = dashed, label="0"];
19->3 [style = bold, label=""];
18->14 [style = bold, label=""];
2->13 [style = dotted, label="true"];
13->4 [style = bold, label=""];
}
