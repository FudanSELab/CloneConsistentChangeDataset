digraph {
0 [style = filled, label = "DatasetDescriptor destinationDataset = new DatasetDescriptor(\"file\",outputPath)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "publisher.publish(ImmutableList.of(state))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(events.size() == 4)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < numBranches@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "BaseDataPublisher publisher = new BaseDataPublisher(state)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "partitions.add(new PartitionDescriptor(\"partition\" + i + j,datasetAtWriter))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String partitionsKey = \"writer.\" + i + \".partitions\"@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "j < numPartitionsPerBranch@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "DatasetDescriptor datasetAtWriter = new DatasetDescriptor(\"dummy\",\"dummy\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "DatasetDescriptor destinationDataset = new DatasetDescriptor(\"file\",URI.create(\"file:///\"),outputPath)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "publisher.publishData(state)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "j < numPartitionsPerBranch@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(event.getDestination(),new PartitionDescriptor(\"partition\" + i + j,destinationDataset))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "LineageInfo lineageInfo = LineageInfo.getLineageInfo(state.getTaskBroker()).get()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String outputPath = String.format(\"/data/output/branch%d/namespace/table\",i)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "destinationDataset.addMetadata(\"fsUri\",\"file:///\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "DatasetDescriptor source = new DatasetDescriptor(\"kafka\",\"testTopic\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(null != event)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<PartitionDescriptor> partitions = new ArrayList<>()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "j++@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int numPartitionsPerBranch = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "destinationDataset.addMetadata(\"branch\",\"\" + i)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int j = 0@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(event.getSource(),source)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int j = 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(state.contains(\"gobblin.event.lineage.branch.0.destination\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Collection<LineageEventBuilder> events = LineageInfo.load(ImmutableList.of(state))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "j++@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int numBranches = 2@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testPublishedPartitionsLineage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "state.setProp(partitionsKey,GSON.toJson(partitions,PARTITION_LIST_TYPE))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(state.contains(\"gobblin.event.lineage.branch.1.destination\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testPublishSingleTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "lineageInfo.setSource(source,state)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "WorkUnitState state = buildTaskState(1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertFalse(state.contains(\"gobblin.event.lineage.branch.1.destination\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i < numBranches@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LineageEventBuilder event = find(events,\"partition\" + i + j)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testPublishedPartitionsLineage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(state.contains(\"gobblin.event.lineage.branch.0.destination\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "WorkUnitState state = buildTaskState(numBranches)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->23 [style = solid, label="j"];
5->3 [style = bold, label=""];
35->26 [style = solid, label="j"];
18->35 [style = dotted, label="true"];
36->18 [style = solid, label="numPartitionsPerBranch"];
15->31 [style = dotted, label="true"];
4->15 [style = bold, label=""];
1->27 [style = bold, label=""];
4->37 [style = solid, label="i"];
15->9 [style = dotted, label="true"];
37->9 [style = bold, label=""];
4->2 [style = solid, label="i"];
24->15 [style = solid, label="numBranches"];
43->40 [style = bold, label=""];
9->26 [style = solid, label="j"];
1->28 [style = bold, label=""];
14->27 [style = solid, label="i"];
2->31 [style = solid, label="i"];
4->15 [style = solid, label="i"];
0->22 [style = solid, label="destinationDataset"];
18->3 [style = dotted, label="true"];
2->15 [style = bold, label=""];
12->1 [style = solid, label="j"];
20->3 [style = solid, label="source"];
1->23 [style = dotted, label="true"];
9->18 [style = solid, label="j"];
36->17 [style = bold, label=""];
9->22 [style = solid, label="j"];
8->28 [style = solid, label="i"];
33->26 [style = solid, label="events"];
17->33 [style = solid, label="state"];
35->18 [style = bold, label=""];
15->2 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
17->21 [style = solid, label="state"];
21->41 [style = bold, label=""];
11->37 [style = bold, label=""];
8->27 [style = solid, label="i"];
19->27 [style = dotted, label="true"];
32->7 [style = bold, label=""];
16->34 [style = solid, label="partitions"];
12->1 [style = bold, label=""];
27->34 [style = solid, label="partitionsKey"];
19->25 [style = bold, label=""];
7->33 [style = bold, label=""];
6->4 [style = bold, label=""];
2->37 [style = solid, label="i"];
9->35 [style = solid, label="j"];
21->29 [style = bold, label=""];
36->1 [style = solid, label="numPartitionsPerBranch"];
15->31 [style = bold, label=""];
18->26 [style = dotted, label="true"];
17->30 [style = solid, label="state"];
8->19 [style = solid, label="i"];
18->5 [style = dotted, label="true"];
34->14 [style = bold, label=""];
1->28 [style = dotted, label="true"];
17->10 [style = bold, label=""];
19->1 [style = dotted, label="true"];
19->34 [style = dotted, label="true"];
43->10 [style = solid, label="state"];
13->24 [style = bold, label=""];
38->24 [style = bold, label=""];
31->0 [style = bold, label=""];
18->26 [style = bold, label=""];
43->30 [style = solid, label="state"];
19->12 [style = dotted, label="true"];
0->11 [style = bold, label=""];
14->19 [style = bold, label=""];
2->22 [style = solid, label="i"];
15->0 [style = dotted, label="true"];
19->16 [style = bold, label=""];
30->21 [style = bold, label=""];
27->34 [style = bold, label=""];
9->18 [style = bold, label=""];
31->39 [style = solid, label="outputPath"];
28->23 [style = bold, label=""];
2->26 [style = solid, label="i"];
24->17 [style = solid, label="numBranches"];
35->22 [style = solid, label="j"];
31->0 [style = solid, label="outputPath"];
29->28 [style = solid, label="datasetAtWriter"];
15->11 [style = dotted, label="true"];
4->31 [style = solid, label="i"];
15->37 [style = dotted, label="true"];
39->22 [style = solid, label="destinationDataset"];
7->41 [style = dashed, label="0"];
31->39 [style = bold, label=""];
4->26 [style = solid, label="i"];
43->20 [style = solid, label="state"];
22->35 [style = bold, label=""];
4->22 [style = solid, label="i"];
18->22 [style = dotted, label="true"];
29->8 [style = bold, label=""];
19->14 [style = dotted, label="true"];
10->20 [style = bold, label=""];
20->30 [style = solid, label="source"];
42->10 [style = solid, label="source"];
15->39 [style = dotted, label="true"];
26->5 [style = bold, label=""];
8->19 [style = bold, label=""];
33->6 [style = bold, label=""];
17->25 [style = solid, label="state"];
25->32 [style = bold, label=""];
23->1 [style = solid, label="j"];
35->18 [style = solid, label="j"];
0->39 [style = dashed, label="0"];
18->2 [style = bold, label=""];
3->22 [style = bold, label=""];
39->11 [style = bold, label=""];
2->15 [style = solid, label="i"];
44->43 [style = bold, label=""];
24->36 [style = bold, label=""];
26->5 [style = solid, label="event"];
12->28 [style = solid, label="j"];
8->14 [style = solid, label="i"];
14->19 [style = solid, label="i"];
42->10 [style = bold, label=""];
19->16 [style = dotted, label="true"];
23->1 [style = bold, label=""];
23->28 [style = solid, label="j"];
20->30 [style = bold, label=""];
16->12 [style = bold, label=""];
40->42 [style = bold, label=""];
14->28 [style = solid, label="i"];
24->19 [style = solid, label="numBranches"];
}
