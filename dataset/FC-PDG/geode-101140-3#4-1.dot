digraph {
4 [style = filled, label = "when(partitionedRegion.putRemotely((InternalDistributedMember)remoteTransactionHost,event,true,false,expectedObject,true)).thenThrow(forceReattemptException)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "doNothing().when(stub).waitToRetry()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(caughtException).isInstanceOf()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "doReturn(true).when(stub).isBucketNotFoundException(forceReattemptException)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "putEntryThrowsTransactionExceptionIfIsNotBucketNotFoundException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "doReturn(expectedException).when(stub).getTransactionException(keyInfo,forceReattemptException)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ForceReattemptException forceReattemptException = new ForceReattemptException(\"Test FRE\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "when(event.getRegion()).thenReturn(partitionedRegion)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ForceReattemptException forceReattemptException = mock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Throwable caughtException = catchThrowable(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "putEntryThrowsTransactionExceptionIfIsBucketNotFoundException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "doReturn(expectedException).when(stub).getTransactionException(keyInfo,forceReattemptException)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PartitionedTXRegionStub stub = spy(new PartitionedTXRegionStub(txStateStub,partitionedRegion))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "putEntryThrowsTransactionExceptionIfIsBucketNotFoundException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "verify(stub,never()).trackBucketForTx(keyInfo)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "doReturn(false).when(stub).isBucketNotFoundException(forceReattemptException)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
9->4 [style = solid, label="forceReattemptException"];
4->6 [style = bold, label=""];
9->13 [style = solid, label="forceReattemptException"];
7->0 [style = bold, label=""];
1->9 [style = bold, label=""];
1->11 [style = bold, label=""];
6->2 [style = bold, label=""];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
9->5 [style = solid, label="forceReattemptException"];
14->0 [style = bold, label=""];
11->8 [style = solid, label="forceReattemptException"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
11->5 [style = solid, label="forceReattemptException"];
10->0 [style = bold, label=""];
9->8 [style = solid, label="forceReattemptException"];
2->15 [style = bold, label=""];
9->5 [style = bold, label=""];
9->11 [style = dashed, label="0"];
9->12 [style = bold, label=""];
8->4 [style = bold, label=""];
9->3 [style = solid, label="forceReattemptException"];
13->8 [style = bold, label=""];
11->3 [style = solid, label="forceReattemptException"];
}
