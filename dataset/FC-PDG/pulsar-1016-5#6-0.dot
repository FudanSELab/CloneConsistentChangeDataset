digraph {
0 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadDeletionLagInMillis(),offloadDeletionLagInMillis)@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String endPoint = \"test-endpoint\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testS3Configuration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testS3Configuration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final String credentialSecret = \"test-credential-secret\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadReadBufferSizeInBytes(),readBufferSizeInBytes)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadDeletionLagInMillis(),new Long(offloadDeletionLagInMillis))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadBucket(),bucket)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testGcsConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final Long offloadDeletionLagInMillis = 5 * MIN@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadDriver(),driver)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadRegion(),region)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Integer maxBlockSizeInBytes = 5 * M@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadServiceEndpoint(),endPoint)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String credentialId = \"test-credential-id\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadMaxBlockSizeInBytes(),maxBlockSizeInBytes)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Long offloadDeletionLagInMillis = 5L * MIN@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "OffloadPolicies offloadPolicies = OffloadPolicies.create(driver,region,bucket,endPoint,credentialId,credentialSecret,maxBlockSizeInBytes,readBufferSizeInBytes,offloadThresholdInBytes,offloadDeletionLagInMillis,OffloadedReadPriority.TIERED_STORAGE_FIRST)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadThresholdInBytes(),offloadThresholdInBytes)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadMaxBlockSizeInBytes(),maxBlockSizeInBytes)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final String driver = \"google-cloud-storage\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Long offloadThresholdInBytes = 10L * M@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadReadBufferSizeInBytes(),readBufferSizeInBytes)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Integer readBufferSizeInBytes = 2 * M@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OffloadPolicies offloadPolicies = OffloadPolicies.create(driver,region,bucket,endPoint,credentialId,credentialSecret,maxBlockSizeInBytes,readBufferSizeInBytes,offloadThresholdInBytes,offloadDeletionLagInMillis)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadBucket(),bucket)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String region = \"test-region\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String driver = \"aws-s3\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadRegion(),region)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Long offloadThresholdInBytes = 0L@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final String endPoint = \"test-endpoint\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String bucket = \"test-bucket\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
2->9 [style = solid, label="offloadDeletionLagInMillis"];
2->20 [style = solid, label="offloadDeletionLagInMillis"];
1->3 [style = solid, label="region"];
24->25 [style = solid, label="offloadThresholdInBytes"];
8->28 [style = dashed, label="0"];
12->26 [style = dashed, label="0"];
3->20 [style = dashed, label="0"];
7->29 [style = dashed, label="0"];
17->3 [style = solid, label="readBufferSizeInBytes"];
31->0 [style = solid, label="offloadDeletionLagInMillis"];
7->8 [style = bold, label=""];
13->7 [style = solid, label="bucket"];
5->24 [style = dashed, label="0"];
17->26 [style = solid, label="readBufferSizeInBytes"];
8->12 [style = bold, label=""];
20->6 [style = bold, label=""];
14->16 [style = bold, label=""];
5->20 [style = solid, label="offloadThresholdInBytes"];
5->0 [style = solid, label="offloadThresholdInBytes"];
16->3 [style = solid, label="maxBlockSizeInBytes"];
12->15 [style = bold, label=""];
13->23 [style = bold, label=""];
6->11 [style = bold, label=""];
23->3 [style = solid, label="endPoint"];
29->28 [style = bold, label=""];
28->26 [style = bold, label=""];
0->9 [style = bold, label=""];
22->27 [style = bold, label=""];
11->30 [style = dashed, label="0"];
19->3 [style = solid, label="endPoint"];
10->6 [style = solid, label="driver"];
14->19 [style = bold, label=""];
19->20 [style = solid, label="endPoint"];
10->3 [style = solid, label="driver"];
13->18 [style = bold, label=""];
21->10 [style = bold, label=""];
10->20 [style = solid, label="driver"];
11->7 [style = bold, label=""];
3->6 [style = bold, label=""];
2->3 [style = bold, label=""];
19->16 [style = bold, label=""];
19->8 [style = solid, label="endPoint"];
10->1 [style = bold, label=""];
26->25 [style = bold, label=""];
16->28 [style = solid, label="maxBlockSizeInBytes"];
2->31 [style = dashed, label="0"];
15->0 [style = bold, label=""];
2->3 [style = solid, label="offloadDeletionLagInMillis"];
27->1 [style = bold, label=""];
24->31 [style = bold, label=""];
13->20 [style = solid, label="bucket"];
17->24 [style = bold, label=""];
16->20 [style = solid, label="maxBlockSizeInBytes"];
2->20 [style = bold, label=""];
10->27 [style = dashed, label="0"];
17->20 [style = solid, label="readBufferSizeInBytes"];
17->15 [style = solid, label="readBufferSizeInBytes"];
27->6 [style = solid, label="driver"];
9->0 [style = dashed, label="0"];
23->18 [style = bold, label=""];
4->10 [style = bold, label=""];
6->30 [style = bold, label=""];
25->0 [style = bold, label=""];
13->3 [style = solid, label="bucket"];
18->3 [style = solid, label="credentialId"];
5->3 [style = solid, label="offloadThresholdInBytes"];
16->17 [style = bold, label=""];
1->20 [style = solid, label="region"];
18->20 [style = solid, label="credentialId"];
27->3 [style = solid, label="driver"];
1->30 [style = solid, label="region"];
13->29 [style = solid, label="bucket"];
18->14 [style = bold, label=""];
14->3 [style = solid, label="credentialSecret"];
31->3 [style = solid, label="offloadDeletionLagInMillis"];
17->5 [style = bold, label=""];
31->3 [style = bold, label=""];
1->11 [style = solid, label="region"];
14->20 [style = solid, label="credentialSecret"];
30->29 [style = bold, label=""];
1->13 [style = bold, label=""];
16->12 [style = solid, label="maxBlockSizeInBytes"];
24->3 [style = solid, label="offloadThresholdInBytes"];
}
