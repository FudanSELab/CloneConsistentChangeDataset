digraph {
7 [style = filled, label = "multicastEvent(new ApplicationStartingEvent(this.bootstrapContext,this.springApplication,new String(((())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "multicastEvent(new ApplicationStartingEvent(this.springApplication,new String(((())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem)ReflectionTestUtils.getField(this.initializer,\"loggingSystem\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.setProperty(LoggingSystem.SYSTEM_PROPERTY,.getName())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "closingContextCleansUpLoggingSystem['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "multicastEvent(new ApplicationFailedEvent(this.springApplication,new String((((,new GenericApplicationContext(),new Exception()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(loggingSystem.cleanedUp).isFalse()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "multicastEvent(new ContextClosedEvent(this.context))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "closingContextCleansUpLoggingSystem['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "applicationFailedEventCleansUpLoggingSystem['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(loggingSystem.cleanedUp).isTrue()@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
5->9 [style = dashed, label="0"];
1->4 [style = bold, label=""];
2->0 [style = bold, label=""];
7->1 [style = bold, label=""];
5->6 [style = bold, label=""];
3->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
10->0 [style = bold, label=""];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
}
