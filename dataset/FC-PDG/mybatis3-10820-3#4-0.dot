digraph {
6 [style = filled, label = "List<Blog> blogs = mapper.selectBlogsWithAutorAndPosts()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(blogs.get(1) instanceof Factory)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(2,blogs.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{session.close()}@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "shouldGetBlogsWithAuthorsAndPostsEagerly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(101,blogs.get(0).getAuthor().getId())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldGetBlogsWithAuthorsAndPosts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(1,blogs.get(1).getPosts().size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(2,blogs.get(1).getPosts().get(0).getId())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SqlSession session = sqlSessionFactory.openSession()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(blogs.get(0) instanceof Factory)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertTrue(blogs.get(1) instanceof Factory)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "List<Blog> blogs = mapper.selectBlogsWithAutorAndPostsEagerly()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(blogs.get(0) instanceof Proxy)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(1,blogs.get(0).getPosts().size())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(102,blogs.get(1).getAuthor().getId())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(blogs.get(0) instanceof Factory)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(1,blogs.get(0).getPosts().get(0).getId())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BoundBlogMapper mapper = session.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldGetBlogsWithAuthorsAndPosts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(blogs.get(1) instanceof Proxy)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->9 [style = bold, label=""];
5->10 [style = bold, label=""];
14->3 [style = bold, label=""];
7->1 [style = bold, label=""];
9->11 [style = bold, label=""];
16->10 [style = bold, label=""];
6->20 [style = dashed, label="0"];
12->15 [style = bold, label=""];
9->17 [style = bold, label=""];
19->10 [style = bold, label=""];
11->17 [style = dashed, label="0"];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
12->2 [style = bold, label=""];
10->13 [style = bold, label=""];
11->3 [style = bold, label=""];
11->14 [style = dashed, label="0"];
20->12 [style = bold, label=""];
12->18 [style = bold, label=""];
9->14 [style = bold, label=""];
17->3 [style = bold, label=""];
2->18 [style = dashed, label="0"];
18->8 [style = bold, label=""];
8->4 [style = bold, label=""];
13->6 [style = bold, label=""];
15->8 [style = bold, label=""];
2->8 [style = bold, label=""];
13->20 [style = bold, label=""];
6->12 [style = bold, label=""];
}
