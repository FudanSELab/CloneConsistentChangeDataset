digraph {
7 [style = filled, label = "readMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Parser<T> parser@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "readMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "popLimit(oldLimit)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "checkLastTagWas(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "recursionDepth >= recursionLimit@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return result@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final int oldLimit = pushLimit(length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Parser<T> parser@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "throw InvalidProtocolBufferException.truncatedMessage()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return result@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final int oldLimit = pushLimit(length)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "++recursionDepth@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "int length = readRawVarint32()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "throw InvalidProtocolBufferException.recursionLimitExceeded()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "getBytesUntilLimit() != 0@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkRecursionLimit()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "--recursionDepth@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "++recursionDepth@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "readMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "T result = parser.parsePartialFrom(this,extensionRegistry)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->11 [style = solid, label="extensionRegistry"];
22->21 [style = dotted, label="true"];
16->8 [style = dotted, label="true"];
12->3 [style = dotted, label="true"];
1->4 [style = bold, label=""];
19->18 [style = bold, label=""];
8->0 [style = solid, label="extensionRegistry"];
9->11 [style = bold, label=""];
10->14 [style = bold, label=""];
16->6 [style = bold, label=""];
0->12 [style = bold, label=""];
16->17 [style = dotted, label="true"];
18->11 [style = bold, label=""];
3->14 [style = bold, label=""];
19->14 [style = solid, label="oldLimit"];
15->19 [style = bold, label=""];
13->11 [style = bold, label=""];
13->15 [style = dashed, label="0"];
11->2 [style = bold, label=""];
14->1 [style = bold, label=""];
6->15 [style = bold, label=""];
7->5 [style = dotted, label="true"];
10->14 [style = dotted, label="true"];
3->10 [style = bold, label=""];
2->0 [style = bold, label=""];
21->0 [style = solid, label="extensionRegistry"];
22->8 [style = dotted, label="true"];
6->11 [style = solid, label="length"];
6->13 [style = bold, label=""];
7->6 [style = bold, label=""];
12->14 [style = bold, label=""];
11->20 [style = solid, label="result"];
11->1 [style = solid, label="oldLimit"];
0->4 [style = solid, label="result"];
12->3 [style = bold, label=""];
13->9 [style = bold, label=""];
10->1 [style = bold, label=""];
7->8 [style = dotted, label="true"];
14->20 [style = bold, label=""];
22->6 [style = bold, label=""];
6->19 [style = solid, label="length"];
13->9 [style = dotted, label="true"];
}
