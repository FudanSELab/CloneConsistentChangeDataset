digraph {
4 [style = filled, label = "deltaStreamer.sync()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "prepareJsonKafkaDFSSource(PROPS_FILENAME_TEST_JSON_KAFKA,autoResetToLatest? \"latest\": \"earliest\",topicName)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "prepareJsonKafkaDFSSource(PROPS_FILENAME_TEST_JSON_KAFKA,\"earliest\",topicName)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "prepareJsonKafkaDFSFiles(JSON_KAFKA_NUM_RECORDS,true,topicName)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "deltaStreamer.sync()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "prepareParquetDFSSource(true,false,\"source_uber.avsc\",\"target_uber.avsc\",PROPS_FILENAME_TEST_PARQUET,PARQUET_SOURCE_ROOT,false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_dfs_to_kakfa\" + testNum@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "deltaStreamer.sync()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestHelpers.assertRecordCount(parquetRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "deltaStreamer.sync()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\",null),jsc)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "prepareJsonKafkaDFSFiles(20,false,topicName)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\"),jsc)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "topicName = \"topic\" + testNum@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "topicName = \"topic\" + testNum@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int parquetRecords = 10@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_json_kafka_table\" + testNum@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int totalRecords = JSON_KAFKA_NUM_RECORDS@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "deltaStreamer.shutdownGracefully()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "deltaStreamer.sync()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "boolean autoResetToLatest@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestHelpers.assertRecordCount(totalRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_PARQUET,false,false,100000,false,null,null,\"timestamp\"),jsc)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\"),jsc)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "prepareJsonKafkaDFSSource(PROPS_FILENAME_TEST_JSON_KAFKA,\"earliest\",topicName)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "testNum++@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TestHelpers.assertRecordCount(JSON_KAFKA_NUM_RECORDS,tableBasePath + \"/*/*.parquet\",sqlContext)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "totalExpectedRecords += 20@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "prepareJsonKafkaDFSFiles(JSON_KAFKA_NUM_RECORDS,true,topicName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int records = 10@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testJsonKafkaDFSSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "PARQUET_SOURCE_ROOT = dfsBasePath + \"/parquetFilesDfsToKafka\" + testNum@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int totalExpectedRecords = parquetRecords + ((autoResetToLatest)? 0: JSON_KAFKA_NUM_RECORDS)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testDeltaStreamerTransitionFromParquetToKafkaSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "prepareParquetDFSFiles(parquetRecords,PARQUET_SOURCE_ROOT,FIRST_PARQUET_FILE_NAME,true,HoodieTestDataGenerator.TRIP_SCHEMA,HoodieTestDataGenerator.AVRO_TRIP_SCHEMA)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testJsonKafkaDFSSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
25->26 [style = solid, label="tableBasePath"];
15->10 [style = bold, label=""];
30->22 [style = bold, label=""];
20->17 [style = bold, label=""];
10->9 [style = solid, label="tableBasePath"];
23->22 [style = solid, label="parquetRecords"];
25->34 [style = bold, label=""];
12->15 [style = solid, label="topicName"];
6->19 [style = solid, label="topicName"];
11->1 [style = bold, label=""];
3->33 [style = dashed, label="0"];
25->34 [style = solid, label="tableBasePath"];
6->9 [style = solid, label="totalRecords"];
17->29 [style = solid, label="PARQUET_SOURCE_ROOT"];
5->6 [style = solid, label="records"];
25->35 [style = solid, label="tableBasePath"];
11->22 [style = dashed, label="0"];
10->11 [style = solid, label="tableBasePath"];
36->28 [style = bold, label=""];
25->27 [style = solid, label="tableBasePath"];
10->16 [style = solid, label="tableBasePath"];
19->36 [style = bold, label=""];
31->22 [style = solid, label="autoResetToLatest"];
12->0 [style = bold, label=""];
17->18 [style = solid, label="PARQUET_SOURCE_ROOT"];
23->21 [style = solid, label="parquetRecords"];
2->4 [style = bold, label=""];
0->15 [style = bold, label=""];
17->23 [style = bold, label=""];
32->6 [style = bold, label=""];
29->18 [style = bold, label=""];
33->26 [style = bold, label=""];
26->30 [style = bold, label=""];
9->35 [style = dashed, label="0"];
23->29 [style = bold, label=""];
7->9 [style = bold, label=""];
3->10 [style = bold, label=""];
28->35 [style = bold, label=""];
36->35 [style = solid, label="totalExpectedRecords"];
34->24 [style = bold, label=""];
5->6 [style = bold, label=""];
10->16 [style = bold, label=""];
22->27 [style = bold, label=""];
24->21 [style = bold, label=""];
35->37 [style = bold, label=""];
22->27 [style = solid, label="totalExpectedRecords"];
25->21 [style = solid, label="tableBasePath"];
13->7 [style = bold, label=""];
20->31 [style = dotted, label="true"];
2->16 [style = dashed, label="0"];
6->13 [style = bold, label=""];
14->12 [style = bold, label=""];
23->29 [style = solid, label="parquetRecords"];
5->13 [style = solid, label="records"];
21->32 [style = bold, label=""];
6->36 [style = dashed, label="0"];
10->2 [style = solid, label="tableBasePath"];
18->25 [style = bold, label=""];
3->15 [style = dashed, label="0"];
12->0 [style = solid, label="topicName"];
6->13 [style = solid, label="topicName"];
10->2 [style = bold, label=""];
27->19 [style = bold, label=""];
12->3 [style = solid, label="topicName"];
16->4 [style = bold, label=""];
4->11 [style = bold, label=""];
13->33 [style = bold, label=""];
31->33 [style = solid, label="autoResetToLatest"];
8->12 [style = bold, label=""];
6->33 [style = solid, label="topicName"];
12->13 [style = solid, label="topicName"];
}
