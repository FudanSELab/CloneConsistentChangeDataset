digraph {
5 [style = filled, label = "getAccessLevelWhenCloudControllerIsNotReachableThrowsException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.server.expect(requestTo(CLOUD_CONTROLLER_PERMISSIONS)).andExpect(header(\"Authorization\",\"bearer my-access-token\")).andRespond(withStatus(HttpStatus.FORBIDDEN))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.server.expect(requestTo(CLOUD_CONTROLLER_PERMISSIONS)).andExpect(header(\"Authorization\",\"bearer my-access-token\")).andRespond(withServerError())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "getAccessLevelWhenForbiddenShouldThrowException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThatExceptionOfType().isThrownBy(null).satisfies(reasonRequirement(Reason.SERVICE_UNAVAILABLE))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "getAccessLevelWhenForbiddenShouldThrowException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThatExceptionOfType().isThrownBy(null).satisfies(reasonRequirement(Reason.ACCESS_DENIED))@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
0->6 [style = dashed, label="0"];
3->2 [style = bold, label=""];
4->6 [style = bold, label=""];
5->4 [style = bold, label=""];
2->4 [style = dashed, label="0"];
}
