digraph {
21 [style = filled, label = "res = en.nextElement().toString()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testDependencyClassLoader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "res = p.classLoader.getResource(\"index.jelly\").toString()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "en.hasMoreElements()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fail(\"disabled dependency should not be included\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testDisabledDependencyClassLoader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertTrue(\"expected foo4, found \" + res,res.contains(\"/foo4/\"))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",res.contains(\"/foo1/\") || res.contains(\"/foo2/\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(res + \"should be foo3\",res.contains(\"/foo3/\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testDisabledDependencyClassLoader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fail(\"disabled dependency should be included\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "i == 0@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "i < 2@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(\"In current impl, \" + res + \"should be foo3\",res.contains(\"/foo3/\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",res.contains(\"/foo1/\") || res.contains(\"/foo2/\"))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String res = p.getIndexPage().toString()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->10 [style = dotted, label="true"];
0->3 [style = bold, label=""];
16->15 [style = bold, label=""];
8->10 [style = bold, label=""];
7->6 [style = dotted, label="true"];
13->18 [style = dotted, label="true"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
7->18 [style = dashed, label="0"];
17->14 [style = solid, label="res"];
8->21 [style = dotted, label="true"];
2->8 [style = dotted, label="true"];
21->19 [style = solid, label="res"];
11->1 [style = bold, label=""];
22->16 [style = bold, label=""];
2->1 [style = bold, label=""];
3->16 [style = dashed, label="0"];
8->7 [style = dotted, label="true"];
5->7 [style = solid, label="i"];
15->20 [style = solid, label="res"];
5->1 [style = solid, label="i"];
7->9 [style = dotted, label="false"];
7->8 [style = bold, label=""];
8->21 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
8->7 [style = bold, label=""];
7->13 [style = solid, label="i"];
20->2 [style = bold, label=""];
8->6 [style = solid, label="res"];
7->9 [style = bold, label=""];
8->17 [style = bold, label=""];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
13->19 [style = bold, label=""];
10->11 [style = dotted, label="false"];
13->19 [style = dotted, label="false"];
8->7 [style = solid, label="res"];
21->18 [style = solid, label="res"];
17->14 [style = bold, label=""];
2->1 [style = dotted, label="true"];
15->20 [style = bold, label=""];
2->7 [style = dotted, label="true"];
7->6 [style = bold, label=""];
1->10 [style = solid, label="i"];
8->21 [style = bold, label=""];
9->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
8->13 [style = dotted, label="true"];
9->1 [style = bold, label=""];
18->7 [style = bold, label=""];
5->10 [style = solid, label="i"];
4->5 [style = bold, label=""];
19->7 [style = bold, label=""];
1->13 [style = solid, label="i"];
10->7 [style = dotted, label="true"];
1->7 [style = solid, label="i"];
13->18 [style = bold, label=""];
2->8 [style = bold, label=""];
21->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
