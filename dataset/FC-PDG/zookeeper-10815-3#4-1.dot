digraph {
8 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final int num_clients = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "createNremoveMelementTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "byte data = null@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "byte(( data = null@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int n@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createNremoveMtest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int n@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(new String(queueHandles(1(.element()),testString + m)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int m@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String dir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createNremoveMtest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "i < m@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String dir@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
9->22 [style = bold, label=""];
4->6 [style = dotted, label="true"];
13->3 [style = solid, label="i"];
4->14 [style = bold, label=""];
29->17 [style = bold, label=""];
23->30 [style = bold, label=""];
32->34 [style = dotted, label="true"];
24->2 [style = bold, label=""];
23->22 [style = dotted, label="true"];
34->30 [style = solid, label="m"];
4->6 [style = bold, label=""];
18->30 [style = dashed, label="0"];
8->19 [style = bold, label=""];
21->19 [style = solid, label="i"];
29->20 [style = dotted, label="true"];
21->4 [style = solid, label="i"];
4->8 [style = dotted, label="true"];
10->3 [style = dotted, label="true"];
11->22 [style = solid, label="i"];
15->20 [style = dotted, label="true"];
14->27 [style = dashed, label="0"];
33->13 [style = solid, label="dir"];
5->25 [style = dashed, label="0"];
10->21 [style = bold, label=""];
19->6 [style = solid, label="i"];
17->30 [style = solid, label="testString"];
2->10 [style = solid, label="i"];
15->16 [style = dotted, label="true"];
2->10 [style = bold, label=""];
9->18 [style = solid, label="data"];
34->23 [style = solid, label="m"];
10->7 [style = bold, label=""];
11->23 [style = solid, label="i"];
22->23 [style = bold, label=""];
12->18 [style = solid, label="m"];
4->19 [style = dotted, label="true"];
7->13 [style = solid, label="clients"];
22->23 [style = solid, label="i"];
12->23 [style = solid, label="m"];
23->9 [style = dotted, label="true"];
17->18 [style = solid, label="testString"];
32->33 [style = dotted, label="true"];
21->6 [style = solid, label="i"];
3->10 [style = solid, label="i"];
5->1 [style = bold, label=""];
3->10 [style = bold, label=""];
15->17 [style = bold, label=""];
25->24 [style = bold, label=""];
17->6 [style = solid, label="testString"];
14->18 [style = solid, label="data"];
27->18 [style = solid, label="data"];
17->0 [style = bold, label=""];
13->3 [style = bold, label=""];
27->11 [style = bold, label=""];
31->4 [style = solid, label="n"];
10->13 [style = dotted, label="true"];
20->13 [style = solid, label="dir"];
0->25 [style = bold, label=""];
29->28 [style = dotted, label="true"];
1->24 [style = dashed, label="0"];
20->34 [style = dashed, label="0"];
4->27 [style = bold, label=""];
6->8 [style = bold, label=""];
19->4 [style = solid, label="i"];
29->26 [style = dotted, label="true"];
28->23 [style = solid, label="m"];
15->12 [style = dotted, label="true"];
26->4 [style = solid, label="n"];
28->18 [style = solid, label="m"];
1->2 [style = bold, label=""];
16->4 [style = solid, label="n"];
19->4 [style = bold, label=""];
23->9 [style = bold, label=""];
14->11 [style = bold, label=""];
11->23 [style = bold, label=""];
32->17 [style = bold, label=""];
23->18 [style = bold, label=""];
10->7 [style = dotted, label="true"];
32->31 [style = dotted, label="true"];
0->5 [style = bold, label=""];
21->4 [style = bold, label=""];
}
