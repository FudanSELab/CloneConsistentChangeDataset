digraph {
69 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "Namespaces mockNamespaces = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "verify(mockNamespaces).getMaxConsumersPerTopic(\"myprop/clust/ns1\")@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "namespaces.run(split(\"set-offload-deletion-lag myprop/clust/ns1 -l 1d\"))@@@145@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10l * 1024 * 1024 * 1024,RetentionPolicy.producer_exception))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "namespaces['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "namespaces.run(split(\"delete myprop/clust/ns1\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "namespaces.run(split(\"topics myprop/clust/ns1\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "namespaces.run(split(\"get-max-consumers-per-topic myprop/clust/ns1\"))@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "verify(mockNamespaces).clearNamespaceBacklog(\"myprop/clust/ns1\")@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "namespaces.run(split(\"get-message-ttl myprop/clust/ns1\"))@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "verify(mockNamespaces).setPersistence(\"myprop/clust/ns1\",new PersistencePolicies(2,1,1,100.0d))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "verify(mockNamespaces).clearNamespaceBundleBacklog(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\")@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "verify(mockNamespaces).getTopics(\"myprop/clust/ns1\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(mockNamespaces).unload(\"myprop/clust/ns1\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "namespaces.run(split(\"create my-prop/my-namespace --bundles 5 --clusters a,b,c\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "namespaces.run(split(\"set-max-producers-per-topic myprop/clust/ns1 -p 1\"))@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10M\"))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "namespaces.run(split(\"get-subscribe-rate myprop/clust/ns1\"))@@@129@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "namespaces.run(split(\"policies myprop/clust/ns1\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "verify(mockNamespaces).unsubscribeNamespace(\"myprop/clust/ns1\",\"my-sub\")@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10G\"))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10 * 1024,RetentionPolicy.producer_exception))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "namespaces.run(split(\"clear-backlog -b 0x80000000_0xffffffff -s my-sub myprop/clust/ns1 -force\"))@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "namespaces.run(split(\"set-deduplication myprop/clust/ns1 --enable\"))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "Policies policies = new Policies()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
135 [style = filled, label = "namespaces.run(split(\"get-offload-threshold myprop/clust/ns1\"))@@@139@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "namespaces.run(split(\"list myprop\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "verify(mockNamespaces).getSubscriptionDispatchRate(\"myprop/clust/ns1\")@@@134@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "mockNamespaces = mock()@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(mockNamespaces).setMaxConsumersPerTopic(\"myprop/clust/ns1\",2)@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "namespaces.run(split(\"clear-backlog -s my-sub myprop/clust/ns1 -force\"))@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "mockNamespaces = mock()@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "namespaces.run(split(\"set-message-ttl myprop/clust/ns1 -ttl 300\"))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "namespaces.run(split(\"set-max-consumers-per-topic myprop/clust/ns1 -c 2\"))@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "verify(mockNamespaces).getCompactionThreshold(\"myprop/clust/ns1\")@@@136@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "verify(mockNamespaces).getMaxConsumersPerSubscription(\"myprop/clust/ns1\")@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "mockNamespaces = mock()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "namespaces.run(split(\"unsubscribe -b 0x80000000_0xffffffff -s my-sub myprop/clust/ns1\"))@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "namespaces.run(split(\"permissions myprop/clust/ns1\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "namespaces.run(split(\"get-subscription-dispatch-rate myprop/clust/ns1\"))@@@133@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "namespaces.run(split(\"set-anti-affinity-group myprop/clust/ns1 -g group\"))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "verify(mockNamespaces).clearOffloadDeleteLag(\"myprop/clust/ns1\")@@@148@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "namespaces.run(split(\"clear-backlog myprop/clust/ns1 -force\"))@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CmdNamespaces namespaces = new CmdNamespaces(admin)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "when(admin.lookups()).thenReturn(mockLookup)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "verify(mockNamespaces).setSubscribeRate(\"myprop/clust/ns1\",new SubscribeRate(2,60))@@@128@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "namespaces.run(split(\"set-max-consumers-per-subscription myprop/clust/ns1 -c 3\"))@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "namespaces.run(split(\"clear-backlog -b 0x80000000_0xffffffff myprop/clust/ns1 -force\"))@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "verify(mockNamespaces).createNamespace(\"my-prop/my-namespace\",policies)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "namespaces.run(split(\"set-persistence myprop/clust/ns1 -e 2 -w 1 -a 1 -r 100.0\"))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(mockNamespaces).deleteNamespaceAntiAffinityGroup(\"myprop/clust/ns1\")@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "namespaces.run(split(\"get-persistence myprop/clust/ns1\"))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "namespaces.run(split(\"get-anti-affinity-namespaces -p dummy -c cluster -g group\"))@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "namespaces.run(split(\"split-bundle myprop/clust/ns1 -b 0x00000000_0xffffffff\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "verify(mockNamespaces).getNamespaceAntiAffinityGroup(\"myprop/clust/ns1\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "verify(mockNamespaces).grantPermissionOnNamespace(\"myprop/clust/ns1\",\"role1\",EnumSet.of(AuthAction.produce,AuthAction.consume))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "namespaces.run(split(\"set-clusters myprop/clust/ns1 -c use,usw,usc\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "namespaces.run(split(\"get-compaction-threshold myprop/clust/ns1\"))@@@135@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "mockNamespaces = mock()@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mockNamespaces = mock()@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "verify(mockNamespaces).createNamespace(\"myprop/clust/ns1\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "verify(mockNamespaces).clearNamespaceBundleBacklogForSubscription(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\",\"my-sub\")@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "verify(mockNamespaces).setDispatchRate(\"myprop/clust/ns1\",new DispatchRate(-1,-1,2))@@@124@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
131 [style = filled, label = "verify(mockNamespaces).getOffloadThreshold(\"myprop/clust/ns1\")@@@140@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "verify(mockNamespaces).unloadNamespaceBundle(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_request_hold -l 10\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "verify(mockNamespaces).deleteNamespace(\"myprop/clust/ns1\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "verify(mockNamespaces).getNamespaces(\"myprop\",\"clust\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "verify(mockNamespaces).getNamespaceReplicationClusters(\"myprop/clust/ns1\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "policies.bundles = new BundlesData(5)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "namespaces.run(split(\"set-retention myprop/clust/ns1 -t 1h -s 1M\"))@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "namespaces.run(split(\"get-max-producers-per-topic myprop/clust/ns1\"))@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10,RetentionPolicy.producer_request_hold))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "verify(mockNamespaces).setCompactionThreshold(\"myprop/clust/ns1\",1024 * 1024 * 1024)@@@138@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "verify(mockNamespaces).splitNamespaceBundle(\"myprop/clust/ns1\",\"0x00000000_0xffffffff\",false)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "namespacesCreateWithBundlesAndClusters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(mockNamespaces).getBacklogQuotaMap(\"myprop/clust/ns1\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "namespaces.run(split(\"get-dispatch-rate myprop/clust/ns1\"))@@@125@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "namespaces.run(split(\"get-anti-affinity-group myprop/clust/ns1\"))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "namespaces.run(split(\"unload myprop/clust/ns1\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "mockNamespaces = mock()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "verify(mockNamespaces).setSubscriptionDispatchRate(\"myprop/clust/ns1\",new DispatchRate(-1,-1,2))@@@132@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "verify(mockNamespaces).getPolicies(\"myprop/clust/ns1\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10K\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "namespaces.run(split(\"get-offload-deletion-lag myprop/clust/ns1\"))@@@143@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
130 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@122@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "verify(mockNamespaces).getMaxProducersPerTopic(\"myprop/clust/ns1\")@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "verify(mockNamespaces).getNamespaceMessageTTL(\"myprop/clust/ns1\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@121@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "verify(mockNamespaces).setNamespaceAntiAffinityGroup(\"myprop/clust/ns1\",\"group\")@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "namespaces.run(split(\"delete-anti-affinity-group myprop/clust/ns1 \"))@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "namespaces.run(split(\"get-retention myprop/clust/ns1\"))@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "namespaces.run(split(\"list-cluster myprop/clust\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "verify(mockNamespaces).setDeduplicationStatus(\"myprop/clust/ns1\",true)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PulsarAdmin admin = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "verify(mockNamespaces).revokePermissionsOnNamespace(\"myprop/clust/ns1\",\"role1\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "namespaces.run(split(\"get-max-consumers-per-subscription myprop/clust/ns1\"))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "namespaces['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
104 [style = filled, label = "mockNamespaces = mock()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(mockNamespaces).clearNamespaceBacklogForSubscription(\"myprop/clust/ns1\",\"my-sub\")@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "mockNamespaces = mock()@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "Lookup mockLookup = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "verify(mockNamespaces).getSubscribeRate(\"myprop/clust/ns1\")@@@130@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
105 [style = filled, label = "verify(mockNamespaces).unsubscribeNamespaceBundle(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\",\"my-sub\")@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "namespaces.run(split(\"set-subscription-dispatch-rate myprop/clust/ns1 -md -1 -bd -1 -dt 2\"))@@@131@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "namespaces.run(split(\"revoke-permission myprop/clust/ns1 --role role1\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "namespaces.run(split(\"get-clusters myprop/clust/ns1\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "verify(mockNamespaces).setNamespaceReplicationClusters(\"myprop/clust/ns1\",Sets.newHashSet(\"use\",\"usw\",\"usc\"))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "mockNamespaces = mock()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "mockNamespaces = mock()@@@120@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "namespaces.run(split(\"unsubscribe -s my-sub myprop/clust/ns1\"))@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "namespaces.run(split(\"unload myprop/clust/ns1 -b 0x80000000_0xffffffff\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "namespaces = new CmdNamespaces(admin)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(mockNamespaces).getNamespaces(\"myprop\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "namespaces.run(split(\"get-backlog-quotas myprop/clust/ns1\"))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10 * 1024 * 1024,RetentionPolicy.producer_exception))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "namespaces.run(split(\"set-offload-threshold myprop/clust/ns1 -s 1G\"))@@@141@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
147 [style = filled, label = "verify(mockNamespaces).setOffloadDeleteLag(\"myprop/clust/ns1\",24 * 60 * 60,TimeUnit.SECONDS)@@@146@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "verify(mockNamespaces).getAntiAffinityNamespaces(\"dummy\",\"cluster\",\"group\")@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "namespaces.run(split(\"grant-permission myprop/clust/ns1 --role role1 --actions produce,consume\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "namespaces.run(split(\"clear-offload-deletion-lag myprop/clust/ns1\"))@@@147@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
143 [style = filled, label = "verify(mockNamespaces).getOffloadDeleteLagMs(\"myprop/clust/ns1\")@@@144@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "verify(mockNamespaces).setMaxConsumersPerSubscription(\"myprop/clust/ns1\",3)@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "namespaces.run(split(\"create myprop/clust/ns1\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "namespaces.run(split(\"set-compaction-threshold myprop/clust/ns1 -t 1G\"))@@@137@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "verify(mockNamespaces).setMaxProducersPerTopic(\"myprop/clust/ns1\",1)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "verify(mockNamespaces).getDispatchRate(\"myprop/clust/ns1\")@@@126@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
136 [style = filled, label = "namespaces.run(split(\"set-dispatch-rate myprop/clust/ns1 -md -1 -bd -1 -dt 2\"))@@@123@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "verify(mockNamespaces).setOffloadThreshold(\"myprop/clust/ns1\",1024 * 1024 * 1024)@@@142@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "verify(mockNamespaces).getRetention(\"myprop/clust/ns1\")@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "policies.replication_clusters = Sets.newHashSet(\"a\",\"b\",\"c\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "verify(mockNamespaces).getPersistence(\"myprop/clust/ns1\")@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "namespaces.run(split(\"set-subscribe-rate myprop/clust/ns1 -sr 2 -st 60\"))@@@127@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "verify(mockNamespaces).setRetention(\"myprop/clust/ns1\",new RetentionPolicies(60,1))@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "verify(mockNamespaces).getPermissions(\"myprop/clust/ns1\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "verify(mockNamespaces).setNamespaceMessageTTL(\"myprop/clust/ns1\",300)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135->131 [style = bold, label=""];
4->77 [style = solid, label="admin"];
84->17 [style = bold, label=""];
27->105 [style = bold, label=""];
19->8 [style = bold, label=""];
69->22 [style = bold, label=""];
108->45 [style = bold, label=""];
86->107 [style = bold, label=""];
150->148 [style = bold, label=""];
123->130 [style = bold, label=""];
81->83 [style = bold, label=""];
4->42 [style = solid, label="admin"];
92->47 [style = bold, label=""];
4->85 [style = solid, label="admin"];
107->30 [style = bold, label=""];
61->33 [style = bold, label=""];
104->41 [style = solid, label="mockNamespaces"];
79->44 [style = bold, label=""];
53->65 [style = bold, label=""];
77->61 [style = bold, label=""];
99->84 [style = bold, label=""];
28->39 [style = bold, label=""];
4->49 [style = solid, label="admin"];
4->91 [style = solid, label="admin"];
101->96 [style = bold, label=""];
16->6 [style = bold, label=""];
148->151 [style = bold, label=""];
57->124 [style = bold, label=""];
21->67 [style = bold, label=""];
4->34 [style = solid, label="admin"];
11->36 [style = bold, label=""];
47->3 [style = bold, label=""];
58->86 [style = bold, label=""];
51->58 [style = bold, label=""];
149->4 [style = bold, label=""];
13->10 [style = bold, label=""];
127->122 [style = bold, label=""];
132->147 [style = bold, label=""];
152->151 [style = solid, label="policies"];
18->92 [style = bold, label=""];
4->113 [style = bold, label=""];
109->102 [style = bold, label=""];
54->14 [style = bold, label=""];
95->2 [style = bold, label=""];
124->123 [style = solid, label="mockNamespaces"];
52->59 [style = bold, label=""];
4->130 [style = solid, label="admin"];
24->37 [style = bold, label=""];
111->90 [style = bold, label=""];
112->98 [style = bold, label=""];
3->43 [style = bold, label=""];
29->101 [style = bold, label=""];
133->119 [style = bold, label=""];
140->145 [style = bold, label=""];
15->31 [style = bold, label=""];
12->73 [style = bold, label=""];
74->87 [style = bold, label=""];
131->142 [style = bold, label=""];
63->77 [style = bold, label=""];
76->55 [style = bold, label=""];
49->35 [style = bold, label=""];
103->20 [style = bold, label=""];
134->141 [style = bold, label=""];
4->109 [style = solid, label="admin"];
46->106 [style = bold, label=""];
102->11 [style = bold, label=""];
7->12 [style = bold, label=""];
66->71 [style = bold, label=""];
44->108 [style = bold, label=""];
26->1 [style = bold, label=""];
41->69 [style = bold, label=""];
4->3 [style = solid, label="admin"];
2->32 [style = bold, label=""];
54->14 [style = solid, label="mockNamespaces"];
88->116 [style = bold, label=""];
60->74 [style = bold, label=""];
3->153 [style = bold, label=""];
122->121 [style = bold, label=""];
105->54 [style = bold, label=""];
39->15 [style = bold, label=""];
43->153 [style = dashed, label="0"];
96->78 [style = bold, label=""];
125->133 [style = bold, label=""];
38->117 [style = bold, label=""];
80->4 [style = bold, label=""];
113->18 [style = solid, label="mockNamespaces"];
104->41 [style = bold, label=""];
43->23 [style = bold, label=""];
70->52 [style = bold, label=""];
35->64 [style = bold, label=""];
33->5 [style = bold, label=""];
113->18 [style = bold, label=""];
73->9 [style = bold, label=""];
126->135 [style = bold, label=""];
56->51 [style = bold, label=""];
66->71 [style = solid, label="mockNamespaces"];
152->150 [style = bold, label=""];
78->21 [style = bold, label=""];
68->97 [style = solid, label="mockNamespaces"];
67->0 [style = bold, label=""];
9->60 [style = bold, label=""];
115->88 [style = bold, label=""];
48->110 [style = bold, label=""];
6->26 [style = bold, label=""];
144->146 [style = bold, label=""];
153->152 [style = bold, label=""];
1->57 [style = bold, label=""];
106->75 [style = solid, label="mockNamespaces"];
137->4 [style = bold, label=""];
110->112 [style = bold, label=""];
42->13 [style = bold, label=""];
85->50 [style = bold, label=""];
138->118 [style = bold, label=""];
4->55 [style = solid, label="admin"];
38->117 [style = solid, label="mockNamespaces"];
36->103 [style = bold, label=""];
0->24 [style = bold, label=""];
141->143 [style = bold, label=""];
128->144 [style = bold, label=""];
136->127 [style = bold, label=""];
94->16 [style = bold, label=""];
32->63 [style = solid, label="mockNamespaces"];
40->104 [style = bold, label=""];
130->136 [style = bold, label=""];
34->95 [style = bold, label=""];
121->128 [style = bold, label=""];
98->72 [style = bold, label=""];
93->115 [style = bold, label=""];
97->109 [style = bold, label=""];
62->29 [style = bold, label=""];
5->89 [style = bold, label=""];
117->49 [style = bold, label=""];
146->139 [style = bold, label=""];
20->82 [style = bold, label=""];
45->94 [style = bold, label=""];
65->93 [style = bold, label=""];
37->76 [style = bold, label=""];
18->3 [style = bold, label=""];
143->132 [style = bold, label=""];
116->81 [style = bold, label=""];
100->56 [style = bold, label=""];
106->75 [style = bold, label=""];
92->47 [style = solid, label="mockLookup"];
119->120 [style = bold, label=""];
31->40 [style = bold, label=""];
14->42 [style = bold, label=""];
145->126 [style = bold, label=""];
75->85 [style = bold, label=""];
87->38 [style = bold, label=""];
142->134 [style = bold, label=""];
25->7 [style = bold, label=""];
129->125 [style = bold, label=""];
114->68 [style = bold, label=""];
64->19 [style = bold, label=""];
22->46 [style = bold, label=""];
30->25 [style = bold, label=""];
139->129 [style = bold, label=""];
68->97 [style = bold, label=""];
89->66 [style = bold, label=""];
8->34 [style = bold, label=""];
120->140 [style = bold, label=""];
4->69 [style = solid, label="admin"];
32->63 [style = bold, label=""];
19->8 [style = solid, label="mockNamespaces"];
37->76 [style = solid, label="mockNamespaces"];
124->123 [style = bold, label=""];
23->111 [style = bold, label=""];
50->114 [style = bold, label=""];
59->53 [style = bold, label=""];
83->62 [style = bold, label=""];
17->28 [style = bold, label=""];
55->99 [style = bold, label=""];
10->79 [style = bold, label=""];
72->100 [style = bold, label=""];
82->48 [style = bold, label=""];
71->91 [style = bold, label=""];
147->138 [style = bold, label=""];
91->27 [style = bold, label=""];
90->70 [style = bold, label=""];
}
