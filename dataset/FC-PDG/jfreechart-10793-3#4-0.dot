digraph {
14 [style = filled, label = "double(( ends_S1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@24503d@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "double(((( starts = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245051@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(d1.equals(d2))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "d2.setStartValue(0,\"Category 1\",new Double(0.99))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "double(( ends_S2 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245047@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "DefaultIntervalCategoryDataset d1 = new DefaultIntervalCategoryDataset(new Comparable((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245065,new Comparable((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@24506a,DataUtils.createNumberArray2D(starts),DataUtils.createNumberArray2D(ends))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "double(( starts_S2 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245033@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DefaultKeyedValueDataset d1 = new DefaultKeyedValueDataset(\"Test\",new Double(45.5))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "DefaultKeyedValueDataset d2 = (DefaultKeyedValueDataset)d1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "double(((( ends = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@24505a@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(d1.equals(d2))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "d2 = (DefaultIntervalCategoryDataset)d1.clone()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(d1 != d2)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "double(( starts_S1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@245029@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(d1.equals(d2))@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(d1 != d2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(d1.equals(d2))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DefaultIntervalCategoryDataset d2 = null@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "d1.setStartValue(0,\"Category 1\",new Double(0.99))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->7 [style = bold, label=""];
7->8 [style = bold, label=""];
15->9 [style = bold, label=""];
22->23 [style = solid, label="d2"];
8->0 [style = bold, label=""];
3->2 [style = bold, label=""];
12->14 [style = bold, label=""];
19->20 [style = bold, label=""];
6->11 [style = bold, label=""];
20->22 [style = bold, label=""];
14->13 [style = bold, label=""];
22->18 [style = solid, label="d2"];
4->1 [style = solid, label="d2"];
11->16 [style = bold, label=""];
0->1 [style = solid, label="d1"];
7->0 [style = solid, label="starts"];
13->8 [style = solid, label="ends_S2"];
4->1 [style = bold, label=""];
8->0 [style = solid, label="ends"];
12->7 [style = solid, label="starts_S2"];
0->10 [style = bold, label=""];
10->4 [style = bold, label=""];
16->3 [style = bold, label=""];
17->9 [style = bold, label=""];
22->18 [style = bold, label=""];
14->8 [style = solid, label="ends_S1"];
9->20 [style = dashed, label="0"];
4->16 [style = solid, label="d2"];
9->7 [style = solid, label="starts_S1"];
18->21 [style = bold, label=""];
4->6 [style = solid, label="d2"];
4->2 [style = solid, label="d2"];
21->23 [style = bold, label=""];
20->18 [style = solid, label="d1"];
5->6 [style = bold, label=""];
9->12 [style = bold, label=""];
1->5 [style = bold, label=""];
}
