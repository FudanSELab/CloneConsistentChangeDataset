digraph {
31 [style = filled, label = "DocumentMapper docMapper = createDocumentMapper(mapping(null))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testMultiObjectAndNested1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(doc.docs().get(1).get(\"nested1.field1\"),nullValue())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(nested1Mapper.nested().isIncludeInRoot(),equalTo(false))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(doc.docs().get(5).get(\"nested1.field1\"),equalTo(\"4\"))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ObjectMapper nested1Mapper = docMapper.mappers().objectMappers().get(\"nested1\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(nested2Mapper.nested().isIncludeInParent(),equalTo(false))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(doc.docs().get(1).get(\"nested1.nested2.field2\"),equalTo(\"3\"))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ParsedDocument doc = docMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"field\",\"value\").startArray(\"nested1\").startObject().field(\"field1\",\"1\").startArray(\"nested2\").startObject().field(\"field2\",\"2\").endObject().startObject().field(\"field2\",\"3\").endObject().endArray().endObject().startObject().field(\"field1\",\"4\").startArray(\"nested2\").startObject().field(\"field2\",\"5\").endObject().startObject().field(\"field2\",\"6\").endObject().endArray().endObject().endArray().endObject()),XContentType.JSON))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(doc.docs().get(1).get(\"field\"),nullValue())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(doc.docs().size(),equalTo(7))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(doc.docs().get(0).get(\"nested1.nested2.field2\"),equalTo(\"2\"))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(nested2Mapper.nested().isNested(),equalTo(true))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(docMapper.hasNestedObjects(),equalTo(true))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(nested2Mapper.nested().isIncludeInRoot(),equalTo(false))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(doc.docs().get(3).get(\"field\"),nullValue())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(doc.docs().get(2).get(\"nested1.nested2.field2\"),nullValue())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testMultiRootAndNested1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(doc.docs().get(2).get(\"field\"),nullValue())@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(doc.docs().get(0).get(\"nested1.field1\"),nullValue())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(nested2Mapper.nested().isIncludeInParent(),equalTo(true))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNull(docMapper.getNestedParent(\"nonexistent\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(doc.docs().get(6).get(\"nested1.field1\"),nullValue())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(doc.docs().get(3).get(\"nested1.nested2.field2\"),equalTo(\"5\"))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(doc.docs().get(5).get(\"field\"),nullValue())@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(nested2Mapper.nested().isIncludeInRoot(),equalTo(true))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertThat(doc.docs().get(6).getFields(\"nested1.nested2.field2\").length,equalTo(4))@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(doc.docs().get(6).get(\"field\"),equalTo(\"value\"))@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(doc.docs().get(0).get(\"field\"),nullValue())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testMultiObjectAndNested1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(doc.docs().get(4).get(\"field\"),nullValue())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(doc.docs().get(2).get(\"nested1.nested2.field2\"),equalTo(\"2\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertNull(docMapper.getNestedParent(\"nested1\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(doc.docs().get(5).get(\"nested1.nested2.field2\"),nullValue())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ObjectMapper nested2Mapper = docMapper.mappers().objectMappers().get(\"nested1.nested2\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(\"nested1\",docMapper.getNestedParent(\"nested1.nested2\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(nested1Mapper.nested().isNested(),equalTo(true))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(doc.docs().get(2).get(\"nested1.field1\"),equalTo(\"1\"))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(nested1Mapper.nested().isIncludeInParent(),equalTo(false))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(doc.docs().get(6).get(\"nested1.nested2.field2\"),nullValue())@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(doc.docs().get(5).get(\"nested1.nested2.field2\"),equalTo(\"5\"))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(docMapper.mappers().hasNested(),equalTo(true))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertThat(doc.docs().get(4).get(\"nested1.nested2.field2\"),equalTo(\"6\"))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->21 [style = bold, label=""];
28->39 [style = dashed, label="0"];
14->40 [style = dashed, label="0"];
7->8 [style = bold, label=""];
33->31 [style = bold, label=""];
42->31 [style = bold, label=""];
24->23 [style = bold, label=""];
16->25 [style = bold, label=""];
31->9 [style = bold, label=""];
2->11 [style = bold, label=""];
18->24 [style = bold, label=""];
0->39 [style = bold, label=""];
22->27 [style = bold, label=""];
9->3 [style = bold, label=""];
15->31 [style = bold, label=""];
14->19 [style = bold, label=""];
11->6 [style = bold, label=""];
6->22 [style = bold, label=""];
3->13 [style = bold, label=""];
25->12 [style = bold, label=""];
31->32 [style = bold, label=""];
27->16 [style = bold, label=""];
38->9 [style = bold, label=""];
27->35 [style = bold, label=""];
34->38 [style = bold, label=""];
8->1 [style = bold, label=""];
17->4 [style = bold, label=""];
5->0 [style = bold, label=""];
17->37 [style = bold, label=""];
26->5 [style = bold, label=""];
21->20 [style = bold, label=""];
37->30 [style = bold, label=""];
9->32 [style = dashed, label="0"];
36->34 [style = bold, label=""];
32->3 [style = bold, label=""];
12->18 [style = bold, label=""];
4->37 [style = dashed, label="0"];
40->19 [style = bold, label=""];
35->25 [style = bold, label=""];
39->40 [style = bold, label=""];
0->28 [style = bold, label=""];
31->36 [style = bold, label=""];
19->7 [style = bold, label=""];
13->10 [style = bold, label=""];
28->14 [style = bold, label=""];
23->17 [style = bold, label=""];
16->35 [style = dashed, label="0"];
4->30 [style = bold, label=""];
1->2 [style = bold, label=""];
20->41 [style = dashed, label="0"];
10->26 [style = bold, label=""];
21->41 [style = bold, label=""];
30->29 [style = bold, label=""];
}
