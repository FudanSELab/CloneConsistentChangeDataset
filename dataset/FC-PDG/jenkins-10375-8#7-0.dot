digraph {
7 [style = filled, label = "checkAnyPermissionThrowsIfPermissionIsMissing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "jenkins.getACL().checkAnyPermission(Jenkins.ADMINISTER)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "jenkins.setSecurityRealm(r.createDummySecurityRealm())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkAnyPermissionThrowsIfPermissionIsMissing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "checkAnyPermissionPassedIfOneIsValid['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectedException.expectMessage(\"manager is missing the Overall/Administer permission\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final User manager = User.getOrCreateByIdOrFullName(\"manager\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedException.expect()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.MANAGE).everywhere().to(\"manager\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "jenkins.getACL().checkAnyPermission(Jenkins.MANAGE)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(\"manager is missing the Overall/Administer permission\",e.getMessage())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Jenkins jenkins = r.jenkins@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Exception e = Assert.assertThrows(,null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
4->12 [style = bold, label=""];
6->10 [style = dashed, label="0"];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
1->0 [style = bold, label=""];
8->2 [style = bold, label=""];
0->6 [style = bold, label=""];
3->4 [style = bold, label=""];
7->2 [style = bold, label=""];
11->2 [style = bold, label=""];
2->5 [style = bold, label=""];
6->12 [style = dashed, label="0"];
}
