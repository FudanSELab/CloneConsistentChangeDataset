digraph {
113 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"destinationCollection\",cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "sParams = new ModifiableSolrParams()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "stopTime > 0@@@80@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"parallelDestinationCollection1\",cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
152 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "assertEquals(5,tuples.size())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "tuple = tuples.get(4)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "testParallelDaemonUpdateStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
73 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "long stopTime = 0@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "tuple = tuples.get(3)@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
141 [style = filled, label = "testCommitStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Exception e@@@87@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection1\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"parallel\",).withFunctionName(\"daemon\",)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "assert(t.EOF == false)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "{}@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "tuple = tuples.get(1)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "iterations = (int)l@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int workersComplete = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
163 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT,\"/stream\",\"action\",\"list\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "TupleStream stream@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "solrStream.open()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "long l = tupleResponse.getLong(\"iterations\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Exception e@@@87@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "stream.setStreamContext(streamContext)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Thread.sleep(1000)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
161 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(destinationCollection, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "++workersComplete@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(1000)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "solrStream.close()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "{}@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "tuple = tuples.get(2)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "workersComplete = 0@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "{}@@@87@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
151 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "solrStream.open()@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "List<Tuple> tuples = getTuples(parallelUpdateStream)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "assertEquals(5,t.get(\"batchIndexed\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "stopTime = tupleResponse.getLong(\"stopTime\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
162 [style = filled, label = "tuple = tuples.get(3)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "Exception e@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TupleStream parallelUpdateStream = factory.constructStream(\"parallel(collection1, \" + updateExpression + \", workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"batchNumber asc\")\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "l > 0@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"destinationCollection\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"commit\",)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "solrStream.open()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "tupleResponse.EOF@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "CollectionAdminRequest.createCollection(\"destinationCollection\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "tupleResponse.EOF@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection1\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "expression = StreamExpressionParser.parse(\"commit(destinationCollection, batchSize=2, update(destinationCollection, batchSize=5, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\")))\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cluster.getSolrClient().commit(\"parallelDestinationCollection1\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "++workersComplete@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\",sParams)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "solrStream.close()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int iterations = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "tuple = tuples.get(4)@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "solrStream.close()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "tuples = getTuples(stream)@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Tuple t@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection1\").process(cluster.getSolrClient())solrClientCache.close()}@@@136@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "stream = factory.constructStream(expression)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
157 [style = filled, label = "tuples = getTuples(stream)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "sParams = new ModifiableSolrParams()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "tuple = tuples.get(2)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "testParallelDaemonUpdateStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
159 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "parallelUpdateStream.setStreamContext(streamContext)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sParams.set(\"action\",\"list\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "solrStream.close()@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "tuple = tuples.get(1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "stopTime == 0@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "StreamExpression expression@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertEquals(5,tuples.size())@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "iterations == 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Tuple tuple = tuples.get(0)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "solrStream.close()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "t = tuples.get(0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "String updateExpression = \"daemon(update(parallelDestinationCollection1, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\")), runInterval=\"1000\", id=\"test\")\"@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
150 [style = filled, label = "stream.setStreamContext(streamContext)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "stream.setStreamContext(streamContext)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
144 [style = filled, label = "Tuple tuple = tuples.get(0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
155 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "sParams.set(\"id\",\"test\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assert(tuples.size() == 2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"destinationCollection\").process(cluster.getSolrClient())solrClientCache.close()}@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "cluster.waitForActiveCollection(\"parallelDestinationCollection1\",2,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
139 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
149 [style = filled, label = "assert(tuples.size() == 1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\",\"s_multi\",\"aaaa\",\"s_multi\",\"bbbb\",\"i_multi\",\"4\",\"i_multi\",\"7\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\",\"s_multi\",\"aaaa1\",\"s_multi\",\"bbbb1\",\"i_multi\",\"44\",\"i_multi\",\"77\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\",\"s_multi\",\"aaaa2\",\"s_multi\",\"bbbb2\",\"i_multi\",\"444\",\"i_multi\",\"777\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\",\"s_multi\",\"aaaa3\",\"s_multi\",\"bbbb3\",\"i_multi\",\"4444\",\"i_multi\",\"7777\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\",\"s_multi\",\"aaaa4\",\"s_multi\",\"bbbb4\",\"i_multi\",\"44444\",\"i_multi\",\"77777\").commit(cluster.getSolrClient(),\"collection1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sParams.set(\"action\",\"stop\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->76 [style = bold, label=""];
11->99 [style = bold, label=""];
36->104 [style = bold, label=""];
48->3 [style = bold, label=""];
31->0 [style = solid, label="stopTime"];
73->65 [style = bold, label=""];
84->101 [style = bold, label=""];
32->109 [style = dashed, label="0"];
102->32 [style = bold, label=""];
4->63 [style = bold, label=""];
57->75 [style = solid, label="sParams"];
63->80 [style = dotted, label="true"];
120->149 [style = bold, label=""];
68->67 [style = solid, label="stream"];
80->7 [style = bold, label=""];
0->75 [style = bold, label=""];
24->105 [style = bold, label=""];
104->86 [style = bold, label=""];
137->144 [style = bold, label=""];
61->22 [style = solid, label="sParams"];
44->53 [style = bold, label=""];
58->12 [style = bold, label=""];
53->39 [style = bold, label=""];
135->146 [style = bold, label=""];
8->0 [style = bold, label=""];
38->50 [style = bold, label=""];
135->146 [style = solid, label="expression"];
107->7 [style = bold, label=""];
0->75 [style = dotted, label="true"];
1->78 [style = bold, label=""];
93->107 [style = bold, label=""];
131->111 [style = bold, label=""];
138->134 [style = bold, label=""];
71->40 [style = solid, label="streamContext"];
37->62 [style = bold, label=""];
49->13 [style = bold, label=""];
150->157 [style = bold, label=""];
27->7 [style = bold, label=""];
93->79 [style = bold, label=""];
56->8 [style = bold, label=""];
147->130 [style = bold, label=""];
159->162 [style = bold, label=""];
94->14 [style = bold, label=""];
91->95 [style = bold, label=""];
55->11 [style = bold, label=""];
25->10 [style = bold, label=""];
88->106 [style = bold, label=""];
19->61 [style = bold, label=""];
55->18 [style = dotted, label="false"];
18->56 [style = dotted, label="true"];
47->7 [style = dotted, label="false"];
55->31 [style = bold, label=""];
0->55 [style = dotted, label="true"];
112->131 [style = bold, label=""];
54->71 [style = bold, label=""];
3->30 [style = bold, label=""];
71->64 [style = solid, label="streamContext"];
17->21 [style = bold, label=""];
101->87 [style = bold, label=""];
71->44 [style = solid, label="streamContext"];
95->57 [style = bold, label=""];
144->158 [style = bold, label=""];
146->120 [style = solid, label="stream"];
0->44 [style = dotted, label="true"];
61->26 [style = bold, label=""];
109->88 [style = bold, label=""];
111->150 [style = bold, label=""];
71->123 [style = solid, label="streamContext"];
42->70 [style = bold, label=""];
71->150 [style = solid, label="streamContext"];
105->83 [style = bold, label=""];
46->102 [style = bold, label=""];
63->27 [style = bold, label=""];
96->37 [style = bold, label=""];
67->103 [style = bold, label=""];
81->100 [style = bold, label=""];
14->90 [style = solid, label="parallelUpdateStream"];
10->136 [style = dashed, label="0"];
18->56 [style = bold, label=""];
43->25 [style = solid, label="solrClientCache"];
122->129 [style = bold, label=""];
23->94 [style = bold, label=""];
75->44 [style = bold, label=""];
143->152 [style = bold, label=""];
102->148 [style = dashed, label="0"];
45->87 [style = bold, label=""];
13->16 [style = bold, label=""];
66->35 [style = bold, label=""];
85->0 [style = bold, label=""];
146->123 [style = bold, label=""];
16->99 [style = solid, label="workersComplete"];
47->4 [style = dotted, label="false"];
0->99 [style = bold, label=""];
21->81 [style = bold, label=""];
0->39 [style = dotted, label="true"];
2->101 [style = solid, label="iterations"];
55->31 [style = dotted, label="false"];
70->5 [style = bold, label=""];
16->85 [style = bold, label=""];
101->47 [style = dotted, label="true"];
92->33 [style = bold, label=""];
94->14 [style = solid, label="updateExpression"];
69->98 [style = bold, label=""];
18->51 [style = bold, label=""];
118->140 [style = bold, label=""];
89->123 [style = dashed, label="0"];
34->82 [style = bold, label=""];
15->64 [style = bold, label=""];
31->18 [style = solid, label="stopTime"];
32->88 [style = bold, label=""];
64->41 [style = bold, label=""];
99->28 [style = bold, label=""];
65->29 [style = bold, label=""];
119->126 [style = bold, label=""];
0->53 [style = dotted, label="true"];
108->102 [style = bold, label=""];
30->15 [style = bold, label=""];
148->113 [style = bold, label=""];
101->37 [style = dotted, label="true"];
160->122 [style = bold, label=""];
86->9 [style = bold, label=""];
101->2 [style = bold, label=""];
145->156 [style = bold, label=""];
95->15 [style = bold, label=""];
82->110 [style = bold, label=""];
23->68 [style = solid, label="factory"];
101->96 [style = dotted, label="true"];
63->27 [style = dotted, label="true"];
55->8 [style = dotted, label="false"];
79->7 [style = bold, label=""];
47->63 [style = dotted, label="false"];
83->36 [style = bold, label=""];
116->133 [style = bold, label=""];
162->143 [style = bold, label=""];
126->151 [style = bold, label=""];
12->24 [style = bold, label=""];
68->40 [style = bold, label=""];
157->137 [style = bold, label=""];
123->120 [style = bold, label=""];
87->6 [style = bold, label=""];
4->7 [style = solid, label="l"];
90->19 [style = bold, label=""];
115->161 [style = bold, label=""];
111->157 [style = solid, label="stream"];
149->154 [style = bold, label=""];
117->127 [style = bold, label=""];
106->74 [style = bold, label=""];
158->118 [style = bold, label=""];
28->68 [style = solid, label="expression"];
26->87 [style = solid, label="workersComplete"];
127->147 [style = bold, label=""];
35->1 [style = bold, label=""];
25->136 [style = bold, label=""];
55->11 [style = dotted, label="true"];
10->23 [style = bold, label=""];
19->149 [style = dashed, label="0"];
7->84 [style = bold, label=""];
5->92 [style = bold, label=""];
151->155 [style = bold, label=""];
130->159 [style = bold, label=""];
47->45 [style = bold, label=""];
41->91 [style = bold, label=""];
7->101 [style = solid, label="iterations"];
62->47 [style = bold, label=""];
2->131 [style = dashed, label="0"];
63->80 [style = bold, label=""];
51->8 [style = bold, label=""];
20->69 [style = bold, label=""];
139->119 [style = bold, label=""];
72->48 [style = bold, label=""];
98->42 [style = bold, label=""];
72->15 [style = solid, label="sParams"];
136->111 [style = solid, label="factory"];
154->124 [style = bold, label=""];
71->89 [style = solid, label="streamContext"];
32->113 [style = dashed, label="0"];
33->66 [style = bold, label=""];
60->97 [style = bold, label=""];
22->96 [style = bold, label=""];
140->138 [style = bold, label=""];
85->0 [style = solid, label="stopTime"];
97->59 [style = bold, label=""];
39->55 [style = bold, label=""];
47->84 [style = dotted, label="false"];
110->8 [style = bold, label=""];
155->153 [style = bold, label=""];
156->132 [style = bold, label=""];
134->116 [style = bold, label=""];
14->89 [style = bold, label=""];
9->73 [style = bold, label=""];
28->68 [style = bold, label=""];
59->52 [style = bold, label=""];
47->45 [style = dotted, label="true"];
52->38 [style = bold, label=""];
153->128 [style = bold, label=""];
31->18 [style = bold, label=""];
94->135 [style = dashed, label="0"];
10->14 [style = solid, label="zkHost"];
40->67 [style = bold, label=""];
124->112 [style = bold, label=""];
103->77 [style = bold, label=""];
78->17 [style = bold, label=""];
141->148 [style = bold, label=""];
133->145 [style = bold, label=""];
76->20 [style = bold, label=""];
136->135 [style = bold, label=""];
26->2 [style = bold, label=""];
90->120 [style = dashed, label="0"];
101->22 [style = bold, label=""];
6->72 [style = bold, label=""];
71->96 [style = solid, label="streamContext"];
102->109 [style = bold, label=""];
142->139 [style = bold, label=""];
71->43 [style = bold, label=""];
125->142 [style = bold, label=""];
77->58 [style = bold, label=""];
101->22 [style = dotted, label="true"];
128->115 [style = bold, label=""];
101->62 [style = dotted, label="true"];
0->85 [style = bold, label=""];
161->114 [style = bold, label=""];
89->90 [style = bold, label=""];
57->49 [style = bold, label=""];
121->160 [style = bold, label=""];
2->101 [style = bold, label=""];
43->25 [style = bold, label=""];
74->54 [style = bold, label=""];
132->121 [style = bold, label=""];
82->8 [style = bold, label=""];
129->163 [style = bold, label=""];
152->125 [style = bold, label=""];
4->63 [style = solid, label="l"];
131->111 [style = solid, label="expression"];
18->51 [style = dotted, label="true"];
113->88 [style = bold, label=""];
100->60 [style = bold, label=""];
47->4 [style = bold, label=""];
163->117 [style = bold, label=""];
}
