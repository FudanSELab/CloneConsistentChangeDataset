digraph {
44 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1998))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "expectedOutput.add(new Watermark(4000))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",5),Long.MAX_VALUE))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 999))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7999))@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3000))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1000))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final int WINDOW_SIZE = 3@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5999))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testTumblingEventTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3999))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testHarness.open()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7999))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expectedOutput.add(new Watermark(7999))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "expectedOutput.add(new Watermark(8000))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,GlobalWindow> operator = new WindowOperator<>(GlobalWindows.create(),new GlobalWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,GlobalWindow,Tuple2<String,Integer>>(new SumReducer()),ContinuousEventTimeTrigger.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "closeCalled.set(0)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "expectedOutput.add(new Watermark(2000))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness = new OneInputStreamOperatorTestHarness<>(operator)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "windowBufferFactory instanceof PreAggregatingHeapWindowBuffer.Factory@@@46@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "expectedOutput.add(new Watermark(3000))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "expectedOutput.add(new Watermark(5000))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "operator.setInputType(TypeInfoParser.parse(\"Tuple2<String, Integer>\"),new ExecutionConfig())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "long initialTime = 0L@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "expectedOutput.add(new Watermark(6000))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@47@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHarness.open()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4999))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 8000))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4000))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "testContinuousWatermarkTrigger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 999))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectedOutput.add(new Watermark(7999))@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "expectedOutput.add(new Watermark(5999))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "expectedOutput.add(new Watermark(7000))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 1000))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testTumblingEventTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6000))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2000))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "expectedOutput.add(new Watermark(1000))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testHarness.close()@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2999))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7000))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingTimeWindows.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,TimeWindow,Tuple2<String,Integer>>(new SumReducer()),EventTimeTrigger.create())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1998))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5000))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",1,closeCalled.get())@@@50@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "expectedOutput.add(new Watermark(3999))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "long initialTime = 0L@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->12 [style = solid, label="initialTime"];
1->69 [style = bold, label=""];
4->71 [style = solid, label="initialTime"];
61->6 [style = bold, label=""];
49->4 [style = solid, label="initialTime"];
24->77 [style = bold, label=""];
4->62 [style = solid, label="initialTime"];
48->4 [style = bold, label=""];
31->36 [style = solid, label="WINDOW_SIZE"];
31->57 [style = solid, label="WINDOW_SIZE"];
27->54 [style = dashed, label="0"];
49->32 [style = solid, label="initialTime"];
24->43 [style = bold, label=""];
4->3 [style = solid, label="initialTime"];
38->58 [style = solid, label="expectedOutput"];
4->33 [style = solid, label="initialTime"];
54->65 [style = bold, label=""];
74->40 [style = bold, label=""];
41->28 [style = bold, label=""];
4->34 [style = solid, label="initialTime"];
52->47 [style = bold, label=""];
4->43 [style = solid, label="initialTime"];
4->11 [style = solid, label="initialTime"];
5->0 [style = bold, label=""];
58->20 [style = bold, label=""];
63->28 [style = bold, label=""];
32->72 [style = bold, label=""];
72->73 [style = bold, label=""];
4->42 [style = solid, label="initialTime"];
27->45 [style = bold, label=""];
46->7 [style = bold, label=""];
38->61 [style = solid, label="expectedOutput"];
4->13 [style = solid, label="initialTime"];
20->62 [style = bold, label=""];
4->26 [style = solid, label="initialTime"];
38->32 [style = solid, label="expectedOutput"];
51->53 [style = dotted, label="true"];
14->76 [style = dashed, label="0"];
38->1 [style = solid, label="expectedOutput"];
37->77 [style = dashed, label="0"];
13->14 [style = bold, label=""];
59->54 [style = bold, label=""];
38->68 [style = solid, label="expectedOutput"];
4->24 [style = solid, label="initialTime"];
30->67 [style = bold, label=""];
4->38 [style = bold, label=""];
4->29 [style = solid, label="initialTime"];
52->35 [style = solid, label="expectedOutput"];
46->7 [style = dotted, label="false"];
37->1 [style = bold, label=""];
62->60 [style = bold, label=""];
73->30 [style = bold, label=""];
36->57 [style = dashed, label="0"];
64->76 [style = bold, label=""];
40->0 [style = bold, label=""];
49->33 [style = solid, label="initialTime"];
76->32 [style = bold, label=""];
4->39 [style = solid, label="initialTime"];
49->11 [style = solid, label="initialTime"];
52->30 [style = solid, label="expectedOutput"];
3->67 [style = dashed, label="0"];
19->2 [style = bold, label=""];
46->10 [style = dotted, label="true"];
21->25 [style = bold, label=""];
4->6 [style = solid, label="initialTime"];
12->66 [style = dashed, label="0"];
49->48 [style = solid, label="initialTime"];
34->74 [style = bold, label=""];
4->64 [style = solid, label="initialTime"];
67->56 [style = bold, label=""];
49->5 [style = solid, label="initialTime"];
19->60 [style = dashed, label="0"];
68->1 [style = bold, label=""];
60->55 [style = bold, label=""];
11->71 [style = dashed, label="0"];
71->34 [style = bold, label=""];
40->5 [style = bold, label=""];
31->57 [style = bold, label=""];
2->21 [style = bold, label=""];
39->35 [style = bold, label=""];
49->8 [style = solid, label="initialTime"];
49->1 [style = solid, label="initialTime"];
55->75 [style = bold, label=""];
16->71 [style = bold, label=""];
22->17 [style = bold, label=""];
42->56 [style = dashed, label="0"];
35->69 [style = dashed, label="0"];
0->44 [style = bold, label=""];
44->22 [style = bold, label=""];
70->24 [style = bold, label=""];
17->64 [style = bold, label=""];
49->37 [style = solid, label="initialTime"];
13->64 [style = dashed, label="0"];
38->45 [style = solid, label="expectedOutput"];
49->26 [style = solid, label="initialTime"];
52->44 [style = solid, label="expectedOutput"];
8->24 [style = bold, label=""];
1->39 [style = bold, label=""];
49->14 [style = solid, label="initialTime"];
49->3 [style = solid, label="initialTime"];
9->73 [style = dashed, label="0"];
66->70 [style = bold, label=""];
6->26 [style = bold, label=""];
49->16 [style = solid, label="initialTime"];
34->40 [style = bold, label=""];
4->44 [style = solid, label="initialTime"];
28->31 [style = bold, label=""];
4->18 [style = solid, label="initialTime"];
52->13 [style = solid, label="expectedOutput"];
38->16 [style = bold, label=""];
46->10 [style = bold, label=""];
31->36 [style = bold, label=""];
45->20 [style = bold, label=""];
50->48 [style = bold, label=""];
56->66 [style = bold, label=""];
49->38 [style = solid, label="initialTime"];
4->1 [style = solid, label="initialTime"];
38->75 [style = solid, label="expectedOutput"];
39->1 [style = dashed, label="0"];
77->68 [style = bold, label=""];
2->55 [style = dashed, label="0"];
32->33 [style = bold, label=""];
3->42 [style = bold, label=""];
47->50 [style = bold, label=""];
33->72 [style = dashed, label="0"];
29->19 [style = bold, label=""];
52->43 [style = solid, label="expectedOutput"];
30->3 [style = bold, label=""];
12->8 [style = bold, label=""];
38->6 [style = solid, label="expectedOutput"];
57->15 [style = bold, label=""];
4->67 [style = solid, label="initialTime"];
49->6 [style = solid, label="initialTime"];
17->13 [style = bold, label=""];
75->25 [style = bold, label=""];
38->24 [style = solid, label="expectedOutput"];
14->32 [style = bold, label=""];
6->59 [style = bold, label=""];
49->50 [style = solid, label="initialTime"];
36->23 [style = solid, label="operator"];
4->20 [style = solid, label="initialTime"];
15->23 [style = bold, label=""];
4->17 [style = solid, label="initialTime"];
4->40 [style = solid, label="initialTime"];
38->21 [style = solid, label="expectedOutput"];
16->11 [style = bold, label=""];
4->22 [style = solid, label="initialTime"];
38->70 [style = solid, label="expectedOutput"];
35->6 [style = bold, label=""];
20->29 [style = bold, label=""];
38->30 [style = solid, label="expectedOutput"];
49->22 [style = solid, label="initialTime"];
18->59 [style = dashed, label="0"];
36->15 [style = bold, label=""];
29->62 [style = dashed, label="0"];
23->4 [style = bold, label=""];
9->30 [style = bold, label=""];
4->0 [style = solid, label="initialTime"];
43->37 [style = bold, label=""];
42->12 [style = bold, label=""];
25->46 [style = bold, label=""];
51->49 [style = bold, label=""];
33->9 [style = bold, label=""];
49->40 [style = solid, label="initialTime"];
69->61 [style = bold, label=""];
4->74 [style = solid, label="initialTime"];
26->6 [style = dashed, label="0"];
57->23 [style = solid, label="operator"];
65->58 [style = bold, label=""];
11->34 [style = bold, label=""];
49->52 [style = bold, label=""];
18->27 [style = bold, label=""];
52->45 [style = solid, label="expectedOutput"];
52->12 [style = solid, label="expectedOutput"];
4->72 [style = solid, label="initialTime"];
4->5 [style = solid, label="initialTime"];
49->34 [style = solid, label="initialTime"];
43->24 [style = dashed, label="0"];
26->18 [style = bold, label=""];
}
