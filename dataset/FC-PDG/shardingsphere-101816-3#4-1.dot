digraph {
13 [style = filled, label = "PostgreSQLAlterIndexStatement alterIndexStatement = new PostgreSQLAlterIndexStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createIndexStatement.setTable(new SimpleTableSegment(new TableNameSegment(1,3,new IdentifierValue(\"t_order\"))))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "schemaRefresher.refresh(metaData,Collections.emptyList(),createIndexStatement,new ConfigurationProperties(new Properties()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "refreshAlterIndexStatementWithRenameIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SchemaRefresher<AlterIndexStatement> schemaRefresher = new AlterIndexStatementSchemaRefresher()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(schema.get(\"t_order\").getIndexes().containsKey(\"index_new\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "refreshIfIndexIsNull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "alterIndexStatement.setIndex(new IndexSegment(1,2,new IdentifierValue(\"index\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "schemaRefresher.refresh(schema,Collections.emptyList(),alterIndexStatement,mock())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"))@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "refreshIfIndexIsNull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "alterIndexStatement.setRenameIndex(new IndexSegment(1,2,new IdentifierValue(\"index_new\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"))@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "schemaRefresher.refresh(schema,Collections.emptyList(),createIndexStatement,mock())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\",mock(),mock(),ShardingSphereSchemaBuildUtil.buildSchema())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final CreateIndexStatement createIndexStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
3->4 [style = solid, label="createIndexStatement"];
2->3 [style = dotted, label="true"];
16->13 [style = bold, label=""];
5->14 [style = dashed, label="0"];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
0->4 [style = solid, label="schema"];
18->12 [style = bold, label=""];
1->15 [style = solid, label="schema"];
10->3 [style = dotted, label="true"];
14->17 [style = bold, label=""];
3->8 [style = solid, label="createIndexStatement"];
7->8 [style = bold, label=""];
15->18 [style = bold, label=""];
13->1 [style = bold, label=""];
1->11 [style = bold, label=""];
2->0 [style = bold, label=""];
7->8 [style = solid, label="metaData"];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
17->15 [style = bold, label=""];
8->9 [style = bold, label=""];
13->15 [style = solid, label="alterIndexStatement"];
5->7 [style = bold, label=""];
}
