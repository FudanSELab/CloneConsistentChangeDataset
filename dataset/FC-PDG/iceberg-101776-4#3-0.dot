digraph {
10 [style = filled, label = "List<List<Long>> offsetLenPairs@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "long length = split.get(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<List<Long>> offsetLenPairs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "List<FileScanTask> tasks = Lists.newArrayList(new FixedSizeSplitScanTaskIterator(splitSize,new MockFileScanTask(fileLen)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<List<Long>> offsetLenPairs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "long splitSize@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long fileLen@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Long> offsetRanges@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "long offset = split.get(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "long targetSplitSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "FileScanTask task = tasks.get(i)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(offset,task.start())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long fileLen@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Number of tasks don't match\",offsetLenPairs.size(),tasks.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "long fileLen@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<FileScanTask> tasks = Lists.newArrayList(new BaseFileScanTask.OffsetsBasedSplitScanTaskIterator(offsetRanges,new MockFileScanTask(fileLen)))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(length,task.length())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Long> split = offsetLenPairs.get(i)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<Long> offsetRanges@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "List<FileScanTask> tasks = Lists.newArrayList(new BaseFileScanTask.OffsetsAwareTargetSplitSizeScanTaskIterator(offsetRanges,new MockFileScanTask(fileLen),targetSplitSize))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "i < tasks.size()@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(length,task.length())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->2 [style = dotted, label="true"];
17->5 [style = bold, label=""];
23->6 [style = solid, label="i"];
7->11 [style = bold, label=""];
12->5 [style = bold, label=""];
1->6 [style = solid, label="i"];
13->3 [style = dotted, label="true"];
9->2 [style = bold, label=""];
11->1 [style = bold, label=""];
23->1 [style = solid, label="i"];
20->17 [style = solid, label="fileLen"];
19->20 [style = dotted, label="true"];
1->11 [style = dotted, label="true"];
22->25 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
1->14 [style = solid, label="i"];
22->21 [style = bold, label=""];
12->17 [style = dashed, label="0"];
1->8 [style = solid, label="i"];
8->6 [style = bold, label=""];
19->17 [style = bold, label=""];
22->24 [style = dotted, label="true"];
23->14 [style = solid, label="i"];
5->14 [style = bold, label=""];
19->15 [style = dotted, label="true"];
8->9 [style = solid, label="i"];
13->10 [style = dotted, label="true"];
14->8 [style = solid, label="i"];
12->21 [style = dashed, label="0"];
14->1 [style = bold, label=""];
14->9 [style = solid, label="i"];
23->14 [style = bold, label=""];
1->7 [style = dotted, label="true"];
8->1 [style = bold, label=""];
24->21 [style = solid, label="splitSize"];
13->4 [style = dotted, label="true"];
14->6 [style = solid, label="i"];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
10->26 [style = dashed, label="0"];
22->26 [style = dotted, label="true"];
4->12 [style = solid, label="offsetRanges"];
15->17 [style = solid, label="offsetRanges"];
8->1 [style = solid, label="i"];
1->9 [style = dotted, label="true"];
10->20 [style = dashed, label="0"];
14->1 [style = solid, label="i"];
14->7 [style = dotted, label="true"];
0->8 [style = bold, label=""];
1->8 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
14->8 [style = dotted, label="true"];
14->11 [style = dotted, label="true"];
2->11 [style = solid, label="offset"];
1->6 [style = dotted, label="true"];
1->14 [style = bold, label=""];
18->17 [style = solid, label="targetSplitSize"];
14->8 [style = bold, label=""];
1->0 [style = dotted, label="true"];
14->1 [style = dotted, label="true"];
2->7 [style = bold, label=""];
2->11 [style = solid, label="length"];
6->9 [style = bold, label=""];
1->2 [style = dotted, label="true"];
14->9 [style = dotted, label="true"];
3->12 [style = solid, label="fileLen"];
23->8 [style = solid, label="i"];
9->7 [style = solid, label="offset"];
8->6 [style = solid, label="i"];
26->21 [style = solid, label="fileLen"];
7->0 [style = solid, label="length"];
21->23 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
