digraph {
23 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "peerZxid = getZxid(1,0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "peerZxid = getZxid(0,0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,leader))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "peerZxid = getZxid(3,1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3d32fd)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "long peerZxid@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,2)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "db.txnLog.add(createProposal(getZxid(4,1)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "reset()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "peerZxid = getZxid(2,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testNewEpochZxid['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,db,leader))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "db.txnLog.add(createProposal(getZxid(2,1)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testNewEpochZxid['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(1,2),getZxid(1,2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "reset()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1,learnerHandler.getQueuedPackets().size())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "db.lastProcessedZxid = getZxid(6,0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,1)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(2,0),getZxid(2,0))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,1)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testCrossEpochTrunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "reset()@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "db.txnLog.add(createProposal(getZxid(2,2)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(0,learnerHandler.getQueuedPackets().size())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,2)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "db.lastProcessedZxid = getZxid(2,0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "db.txnLog.add(createProposal(getZxid(0,1)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(5,learnerHandler.getQueuedPackets().size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
7->1 [style = bold, label=""];
19->12 [style = bold, label=""];
4->22 [style = solid, label="peerZxid"];
4->23 [style = solid, label="peerZxid"];
25->13 [style = bold, label=""];
2->6 [style = bold, label=""];
8->18 [style = bold, label=""];
15->25 [style = bold, label=""];
2->32 [style = dashed, label="0"];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
12->32 [style = bold, label=""];
15->30 [style = dashed, label="0"];
27->31 [style = bold, label=""];
22->23 [style = dashed, label="0"];
30->9 [style = bold, label=""];
16->19 [style = bold, label=""];
28->16 [style = bold, label=""];
20->4 [style = bold, label=""];
7->24 [style = solid, label="peerZxid"];
32->29 [style = bold, label=""];
5->21 [style = bold, label=""];
3->10 [style = bold, label=""];
26->16 [style = bold, label=""];
29->27 [style = bold, label=""];
12->2 [style = bold, label=""];
7->24 [style = bold, label=""];
15->25 [style = solid, label="peerZxid"];
17->0 [style = bold, label=""];
10->11 [style = bold, label=""];
6->29 [style = dashed, label="0"];
7->1 [style = solid, label="peerZxid"];
15->9 [style = bold, label=""];
1->24 [style = dashed, label="0"];
6->8 [style = bold, label=""];
31->30 [style = bold, label=""];
9->25 [style = dashed, label="0"];
22->17 [style = bold, label=""];
21->7 [style = bold, label=""];
8->27 [style = dashed, label="0"];
23->17 [style = bold, label=""];
30->9 [style = solid, label="peerZxid"];
15->9 [style = solid, label="peerZxid"];
16->12 [style = bold, label=""];
4->22 [style = bold, label=""];
24->3 [style = bold, label=""];
4->23 [style = bold, label=""];
0->5 [style = bold, label=""];
9->13 [style = bold, label=""];
13->20 [style = bold, label=""];
}
