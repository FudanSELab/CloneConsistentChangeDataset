digraph {
38 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"345612\",null,\"word\",4,11,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17d05,null,false))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(6,tokenList.size())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"a\",null,\"word\",12,13,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17cae,null,false))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"12\",null,\"word\",9,11,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17c98,null,false))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"3456\",null,\"word\",4,8,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17d1c,null,false))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"hi\",null,\"word\",0,2,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17c56,null,false))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertNotNull(\"Expcting WordDelimiterGraphFilter analysis breakdown\",tokenList)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"wh鐃緒申鐃緒申鐃緒申t鐃緒申鐃緒申鐃緒申v鐃緒申鐃緒申鐃緒申r\",indexPart.get(\"org.apache.lucene.analysis.charfilter.HTMLStripCharFilter\"))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "request.addFieldType(\"skutype1\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(tokenList.size(),1)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testCharFilterAnalysis['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertToken(tokenList.get(4),new TokenInfo(\"a\",null,\"word\",12,13,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17d4a,null,false))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "NamedList indexPart = textType.get(\"index\")@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNotNull(\"field_types should never be null\",fieldTypes)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertNotNull(\"Expcting MockTokenizer analysis breakdown\",tokenList)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "request.setFieldValue(\"hi, 3456-12 a Test\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(\"result is null and it shouldn't be\",result != null)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNotNull(\"field_types should never be null\",fieldTypes)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "@SuppressWarnings({\"unchecked\",\"rawtypes\"}) NamedList<NamedList> textType = fieldTypes.get(\"charfilthtmlmap\")@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"whatever\",null,\"word\",12,20,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17b6e,null,false))@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "NamedList<List<NamedList>> indexPart = textType.get(\"index\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNotNull(\"Expecting MockTokenizer analysis breakdown\",tokenList)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.miscellaneous.WordDelimiterGraphFilter\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "request.setShowMatch(false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(6,tokenList.size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"whatever\",null,\"word\",12,20,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17adc,null,false))@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<NamedList> tokenList = (List<NamedList>)indexPart.get(.getName())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"3456-12\",null,\"word\",4,11,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17c03,null,false))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "testPositionHistoryWithWDGF['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(tokenList.size(),1)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertToken(tokenList.get(1),new TokenInfo(\"345612\",null,\"word\",4,11,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17c6c,null,false))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"whatever\",indexPart.get(\"org.apache.lucene.analysis.charfilter.MappingCharFilter\"))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"whatever\",indexPart.get(\"org.apache.lucene.analysis.charfilter.MappingCharFilter\"))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertNotNull(\"expecting an index token analysis for field type 'charfilthtmlmap'\",indexPart)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "List<NamedList> tokenList = indexPart.get(.getName())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"Test\",null,\"word\",14,18,4,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17c2d,null,false))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"a\",null,\"word\",12,13,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17c18,null,false))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertToken(tokenList.get(2),new TokenInfo(\"3456\",null,\"word\",4,8,2,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17c82,null,false))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "NamedList<NamedList> textType = fieldTypes.get(\"skutype1\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertNotNull(\"expecting an index token analysis for field type 'skutype1'\",indexPart)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testCharFilterAnalysis['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertEquals(4,tokenList.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList indexPart = textType.get(\"index\")@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "request.addFieldType(\"charfilthtmlmap\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(\"expecting result for field type 'charfilthtmlmap'\",textType)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "@SuppressWarnings({\"unchecked\",\"rawtypes\"}) NamedList<NamedList> fieldTypes = result.get(\"field_types\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "@SuppressWarnings({\"unchecked\",\"rawtypes\"}) List<NamedList> tokenList = (List<NamedList>)indexPart.get(.getName())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"Test\",null,\"word\",14,18,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17cc4,null,false))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"hi\",null,\"word\",0,2,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17cee,null,false))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertNotNull(\"expecting result for field type 'charfilthtmlmap'\",textType)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "NamedList<NamedList> textType = fieldTypes.get(\"charfilthtmlmap\")@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) NamedList<NamedList> result = handler.handleAnalysisRequest(request,h.getCore().getLatestSchema())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertEquals(\"wh鐃緒申鐃緒申鐃緒申t鐃緒申鐃緒申鐃緒申v鐃緒申鐃緒申鐃緒申r\",indexPart.get(\"org.apache.lucene.analysis.charfilter.HTMLStripCharFilter\"))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "assertToken(tokenList.get(0),new TokenInfo(\"hi,\",null,\"word\",0,3,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17bee,null,false))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertNotNull(\"Expcting LowerCaseFilter analysis breakdown\",tokenList)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "FieldAnalysisRequest request = new FieldAnalysisRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "request.setFieldValue(\"<html><body>wh鐃緒申鐃緒申鐃緒申t鐃緒申鐃緒申鐃緒申v鐃緒申鐃緒申鐃緒申r</body></html>\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertToken(tokenList.get(3),new TokenInfo(\"12\",null,\"word\",9,11,3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17d33,null,false))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "NamedList<NamedList> fieldTypes = result.get(\"field_types\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "tokenList = indexPart.get(\"org.apache.lucene.analysis.core.LowerCaseFilter\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertNotNull(\"expecting result for field type 'skutype1'\",textType)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "NamedList<NamedList> result = handler.handleAnalysisRequest(request,h.getCore().getLatestSchema())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertToken(tokenList.get(5),new TokenInfo(\"test\",null,\"word\",14,18,5,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e17d61,null,false))@@@69@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
61->43 [style = bold, label=""];
11->14 [style = bold, label=""];
28->20 [style = bold, label=""];
39->54 [style = bold, label=""];
20->27 [style = bold, label=""];
31->50 [style = bold, label=""];
48->51 [style = bold, label=""];
23->22 [style = bold, label=""];
15->0 [style = bold, label=""];
62->49 [style = bold, label=""];
0->3 [style = solid, label="result"];
9->5 [style = bold, label=""];
54->53 [style = bold, label=""];
40->31 [style = bold, label=""];
26->28 [style = bold, label=""];
0->3 [style = bold, label=""];
46->38 [style = bold, label=""];
56->32 [style = bold, label=""];
16->45 [style = bold, label=""];
19->25 [style = solid, label="indexPart"];
7->55 [style = dashed, label="0"];
60->41 [style = bold, label=""];
26->28 [style = solid, label="tokenList"];
19->25 [style = bold, label=""];
35->52 [style = bold, label=""];
1->17 [style = bold, label=""];
37->46 [style = bold, label=""];
21->11 [style = bold, label=""];
18->54 [style = dashed, label="0"];
61->43 [style = solid, label="tokenList"];
52->36 [style = bold, label=""];
24->8 [style = bold, label=""];
29->16 [style = bold, label=""];
21->11 [style = solid, label="textType"];
17->18 [style = solid, label="textType"];
1->39 [style = bold, label=""];
22->26 [style = bold, label=""];
17->39 [style = dashed, label="0"];
8->40 [style = dashed, label="0"];
13->8 [style = solid, label="indexPart"];
45->55 [style = bold, label=""];
47->56 [style = bold, label=""];
16->0 [style = solid, label="request"];
58->57 [style = bold, label=""];
53->40 [style = bold, label=""];
3->6 [style = bold, label=""];
38->48 [style = bold, label=""];
31->50 [style = solid, label="tokenList"];
6->1 [style = bold, label=""];
32->60 [style = bold, label=""];
42->58 [style = bold, label=""];
10->16 [style = bold, label=""];
50->42 [style = bold, label=""];
6->1 [style = solid, label="fieldTypes"];
2->45 [style = dashed, label="0"];
13->53 [style = dashed, label="0"];
5->4 [style = bold, label=""];
34->44 [style = bold, label=""];
55->15 [style = bold, label=""];
7->15 [style = bold, label=""];
32->60 [style = solid, label="tokenList"];
57->47 [style = bold, label=""];
41->62 [style = bold, label=""];
33->35 [style = bold, label=""];
30->1 [style = bold, label=""];
25->23 [style = bold, label=""];
39->54 [style = solid, label="textType"];
30->1 [style = solid, label="result"];
16->30 [style = solid, label="request"];
15->30 [style = bold, label=""];
43->37 [style = bold, label=""];
59->16 [style = bold, label=""];
16->2 [style = bold, label=""];
11->19 [style = bold, label=""];
53->40 [style = solid, label="indexPart"];
1->24 [style = bold, label=""];
24->8 [style = solid, label="fieldTypes"];
14->12 [style = bold, label=""];
49->33 [style = bold, label=""];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
4->11 [style = solid, label="tokenList"];
8->21 [style = bold, label=""];
36->61 [style = bold, label=""];
2->7 [style = bold, label=""];
51->34 [style = bold, label=""];
13->8 [style = bold, label=""];
4->11 [style = bold, label=""];
17->18 [style = bold, label=""];
}
