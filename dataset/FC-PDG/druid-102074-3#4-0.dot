digraph {
16 [style = filled, label = "druidExpression == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final RowSignature rowSignature@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final DruidExpression druidExpression = Expressions.toDruidExpression(plannerContext,rowSignature,arg)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "toDruidExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final RexNode rexNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return druidExpression.map(null,null)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "call.getOperands().size() == 2@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "toDruidExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final RexCall call = (RexCall)rexNode@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return DruidExpression.fromFunctionCall(\"timestamp_ceil\",Arrays.asList(druidExpression.getExpression(),DruidExpression.stringLiteral(granularity.getPeriod().toString()),DruidExpression.numberLiteral(granularity.getOrigin() == null? null: granularity.getOrigin().getMillis()),DruidExpression.stringLiteral(granularity.getTimeZone().toString())).stream().map(null).collect(Collectors.toList()))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "return druidExpression.map(null,null)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final RowSignature rowSignature@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final TimeUnitRange timeUnit = (TimeUnitRange)flag.getValue()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final RowSignature rowSignature@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "call.getOperands().size() == 1@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexNode arg = call.getOperands().get(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final RexNode rexNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return null@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final RexLiteral flag = (RexLiteral)call.getOperands().get(1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final PeriodGranularity granularity = TimeUnits.toQueryGranularity(timeUnit,plannerContext.getTimeZone())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return null@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "granularity == null@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "toDruidExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return TimeFloorOperatorConversion.applyTimestampFloor(druidExpression,granularity,plannerContext.getExprMacroTable())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return null@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return DruidExpression.fromFunctionCall(\"timestamp_ceil\",Stream.of(druidExpression.getExpression(),DruidExpression.stringLiteral(granularity.getPeriod().toString()),DruidExpression.numberLiteral(granularity.getOrigin() == null? null: granularity.getOrigin().getMillis()),DruidExpression.stringLiteral(granularity.getTimeZone().toString())).map(null).collect(Collectors.toList()))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22->21 [style = dotted, label="true"];
4->10 [style = bold, label=""];
4->3 [style = bold, label=""];
13->18 [style = dotted, label="true"];
9->12 [style = dotted, label="true"];
7->1 [style = bold, label=""];
7->10 [style = dotted, label="true"];
8->15 [style = bold, label=""];
22->19 [style = dotted, label="true"];
22->18 [style = dotted, label="true"];
16->9 [style = dotted, label="false"];
11->15 [style = solid, label="rowSignature"];
18->15 [style = solid, label="rowSignature"];
16->6 [style = bold, label=""];
17->4 [style = bold, label=""];
7->26 [style = dotted, label="true"];
4->26 [style = bold, label=""];
3->26 [style = bold, label=""];
17->26 [style = solid, label="granularity"];
9->7 [style = bold, label=""];
15->16 [style = bold, label=""];
5->17 [style = bold, label=""];
23->0 [style = bold, label=""];
15->16 [style = solid, label="druidExpression"];
15->26 [style = solid, label="druidExpression"];
7->5 [style = dotted, label="true"];
7->14 [style = bold, label=""];
7->20 [style = dotted, label="true"];
13->2 [style = dotted, label="true"];
9->7 [style = dotted, label="false"];
8->15 [style = solid, label="arg"];
3->10 [style = bold, label=""];
9->24 [style = dotted, label="true"];
3->20 [style = bold, label=""];
4->3 [style = dotted, label="true"];
22->0 [style = bold, label=""];
23->18 [style = dotted, label="true"];
5->17 [style = solid, label="timeUnit"];
17->4 [style = solid, label="granularity"];
16->6 [style = dotted, label="true"];
12->24 [style = dashed, label="0"];
2->0 [style = solid, label="rexNode"];
7->4 [style = dotted, label="true"];
0->8 [style = bold, label=""];
4->20 [style = bold, label=""];
23->27 [style = dotted, label="true"];
18->0 [style = solid, label="rexNode"];
25->0 [style = solid, label="rexNode"];
13->11 [style = dotted, label="true"];
10->20 [style = dashed, label="0"];
9->12 [style = bold, label=""];
7->1 [style = dotted, label="false"];
18->15 [style = solid, label="plannerContext"];
19->15 [style = solid, label="rowSignature"];
7->17 [style = dotted, label="true"];
23->25 [style = dotted, label="true"];
9->24 [style = bold, label=""];
16->9 [style = bold, label=""];
21->15 [style = solid, label="plannerContext"];
27->15 [style = solid, label="plannerContext"];
13->0 [style = bold, label=""];
14->5 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
