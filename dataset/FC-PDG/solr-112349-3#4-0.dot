digraph {
29 [style = filled, label = "return null@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "lhs.getKind() == SqlKind.GREATER_THAN_OR_EQUAL && rhs.getKind() == SqlKind.LESS_THAN_OR_EQUAL@@@14@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "operands.size() == 2@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "kind.belongsTo(SqlKind.COMPARISON) || kind == SqlKind.NOT@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "condition.getKind().belongsTo(SqlKind.COMPARISON)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return \"(\" + translateOr(condition) + \")\"@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RexNode lhs = operands.get(0)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final SqlKind kind = condition.getKind()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "kind == SqlKind.LIKE@@@26@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String query = null@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "translateMatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "condition.isA(SqlKind.OR)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "condition.isA(SqlKind.OR)@@@23@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return translateLike(condition,false)@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return translateComparison(condition)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<RexNode> operands = call.getOperands()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "query = translateBetween(rhs,lhs)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "translateMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "RexNode condition@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RexNode rhs = operands.get(1)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return translateIsNullOrIsNotNull(condition)@@@30@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return translateAnd(condition)@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return null@@@33@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "kind == SqlKind.IS_NOT_NULL || kind == SqlKind.IS_NULL@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return translateComparison(condition)@@@5@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "translateMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "condition.isA(SqlKind.AND)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "lhs.getKind() == SqlKind.LESS_THAN_OR_EQUAL && rhs.getKind() == SqlKind.GREATER_THAN_OR_EQUAL@@@17@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "query = translateBetween(lhs,rhs)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return translateOr(condition)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return query != null? query: \"(\" + translateAnd(condition) + \")\"@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "RexCall call = (RexCall)condition@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->13 [style = dotted, label="false"];
27->18 [style = bold, label=""];
2->4 [style = solid, label="lhs"];
18->7 [style = dotted, label="true"];
17->13 [style = solid, label="kind"];
8->12 [style = dotted, label="false"];
5->23 [style = bold, label=""];
18->16 [style = dotted, label="true"];
26->25 [style = dotted, label="true"];
26->29 [style = bold, label=""];
17->9 [style = bold, label=""];
26->25 [style = bold, label=""];
18->1 [style = dotted, label="true"];
15->16 [style = solid, label="condition"];
8->3 [style = bold, label=""];
15->28 [style = solid, label="condition"];
21->8 [style = bold, label=""];
17->9 [style = solid, label="kind"];
2->3 [style = solid, label="lhs"];
18->19 [style = dotted, label="true"];
15->18 [style = solid, label="condition"];
14->17 [style = bold, label=""];
9->20 [style = bold, label=""];
21->4 [style = solid, label="rhs"];
13->5 [style = dotted, label="false"];
5->0 [style = dotted, label="true"];
4->7 [style = solid, label="query"];
16->18 [style = dashed, label="0"];
16->19 [style = bold, label=""];
17->31 [style = dashed, label="0"];
31->28 [style = dotted, label="true"];
11->2 [style = bold, label=""];
12->7 [style = bold, label=""];
4->7 [style = bold, label=""];
8->3 [style = dotted, label="true"];
15->25 [style = solid, label="condition"];
15->20 [style = solid, label="condition"];
1->11 [style = bold, label=""];
15->22 [style = solid, label="condition"];
18->6 [style = dotted, label="false"];
6->10 [style = dotted, label="true"];
21->3 [style = solid, label="rhs"];
19->1 [style = bold, label=""];
18->11 [style = dotted, label="true"];
11->2 [style = dotted, label="true"];
5->23 [style = dotted, label="false"];
14->15 [style = dotted, label="true"];
9->18 [style = bold, label=""];
27->26 [style = dotted, label="false"];
13->22 [style = dotted, label="true"];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
18->6 [style = bold, label=""];
5->0 [style = bold, label=""];
15->7 [style = solid, label="condition"];
15->10 [style = solid, label="condition"];
2->21 [style = bold, label=""];
17->5 [style = solid, label="kind"];
6->10 [style = bold, label=""];
6->13 [style = bold, label=""];
30->31 [style = bold, label=""];
24->15 [style = dotted, label="true"];
9->20 [style = dotted, label="true"];
13->5 [style = bold, label=""];
31->27 [style = bold, label=""];
1->7 [style = solid, label="query"];
9->18 [style = dotted, label="false"];
11->8 [style = dotted, label="true"];
12->4 [style = dotted, label="true"];
13->22 [style = bold, label=""];
31->28 [style = bold, label=""];
11->21 [style = dotted, label="true"];
31->27 [style = dotted, label="false"];
26->29 [style = dotted, label="false"];
30->15 [style = dotted, label="true"];
27->18 [style = dotted, label="true"];
10->25 [style = dashed, label="0"];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
3->7 [style = solid, label="query"];
15->0 [style = solid, label="condition"];
27->26 [style = bold, label=""];
18->16 [style = bold, label=""];
}
