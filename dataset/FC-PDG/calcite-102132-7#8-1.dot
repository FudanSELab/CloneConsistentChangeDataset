digraph {
10 [style = filled, label = "RexNode offset@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "RexNode condition@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final RelMetadataQuery mq = RelMetadataQuery.instance()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.limit(mq,input)}}).replaceIf(RelDistributionTraitDef.INSTANCE,new Supplier<RelDistribution>(){public RelDistribution get(){return RelMdDistribution.limit(mq,input)}})@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RelNode input@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final RelOptCluster cluster = input.getCluster()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RexNode fetch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final RelMetadataQuery mq = cluster.getMetadataQuery()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "return new EnumerableLimit(cluster,traitSet,input,offset,fetch)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final RelNode input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return new EnumerableFilter(cluster,traitSet,input,condition)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RexNode condition@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
13->14 [style = solid, label="fetch"];
0->3 [style = solid, label="condition"];
12->14 [style = solid, label="input"];
4->3 [style = solid, label="input"];
2->1 [style = bold, label=""];
11->10 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
9->3 [style = solid, label="input"];
11->13 [style = dotted, label="true"];
5->14 [style = bold, label=""];
9->5 [style = solid, label="input"];
8->4 [style = dotted, label="true"];
11->2 [style = bold, label=""];
10->14 [style = solid, label="offset"];
6->2 [style = bold, label=""];
7->5 [style = bold, label=""];
6->4 [style = dotted, label="true"];
12->5 [style = solid, label="input"];
8->2 [style = bold, label=""];
2->3 [style = solid, label="cluster"];
1->5 [style = solid, label="mq"];
5->3 [style = solid, label="traitSet"];
2->7 [style = bold, label=""];
6->0 [style = dotted, label="true"];
4->3 [style = solid, label="condition"];
8->9 [style = dotted, label="true"];
1->7 [style = dashed, label="0"];
7->5 [style = solid, label="mq"];
4->13 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
5->14 [style = solid, label="traitSet"];
2->14 [style = solid, label="cluster"];
4->5 [style = solid, label="input"];
}
