digraph {
11 [style = filled, label = "when(preparedStatement1.executeBatch()).thenThrow(ex)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "when(preparedStatement2.executeBatch()).thenThrow(ex)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "verify(preparedStatement).executeBatch()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "PreparedStatement preparedStatement = getPreparedStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(preparedStatement2.executeBatch()).thenThrow(exp)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16e9117))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16e9152))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SQLException exp = new SQLException(\"\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertExecuteBatchForSinglePreparedStatementFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(preparedStatement1).executeBatch()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SQLException ex = new SQLException(\"\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(preparedStatement.executeBatch()).thenThrow(exp)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "setExecuteGroups(Collections.singletonList(preparedStatement))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PreparedStatement preparedStatement2 = getPreparedStatement()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "PreparedStatement preparedStatement1 = getPreparedStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setExecuteGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(preparedStatement2).executeBatch()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(preparedStatement1.executeBatch()).thenThrow(exp)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17->6 [style = solid, label="exp"];
4->18 [style = dashed, label="0"];
5->8 [style = bold, label=""];
4->3 [style = bold, label=""];
16->15 [style = solid, label="preparedStatement"];
15->14 [style = bold, label=""];
2->5 [style = solid, label="preparedStatement1"];
17->6 [style = bold, label=""];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
1->5 [style = solid, label="preparedStatement2"];
6->7 [style = solid, label="exp"];
16->17 [style = bold, label=""];
9->7 [style = bold, label=""];
6->15 [style = bold, label=""];
19->16 [style = bold, label=""];
6->10 [style = dashed, label="0"];
9->6 [style = dashed, label="0"];
12->2 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
10->11 [style = solid, label="ex"];
10->13 [style = solid, label="ex"];
2->16 [style = dashed, label="0"];
11->13 [style = bold, label=""];
7->13 [style = dashed, label="0"];
13->5 [style = bold, label=""];
7->15 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
14->18 [style = bold, label=""];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
1->10 [style = bold, label=""];
6->9 [style = solid, label="exp"];
10->11 [style = bold, label=""];
}
