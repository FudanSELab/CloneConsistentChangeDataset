digraph {
21 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"someTitle\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(title,is(\"titleElement1. titleElement3,titleElement2\"))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testTitleAnnotatedMethodsPickedUpOnClass['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "context.checking(new Expectations(){})@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Facet facet = facetedMethod.getFacet()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Annotations.MethodEvaluator<Title> titleEvaluator = (Annotations.MethodEvaluator<Title>)titleFacetViaTitleAnnotation.getComponents().get(i).getTitleEvaluator()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(facet instanceof TitleFacetViaTitleAnnotation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testTitleAnnotatedMethodsPickedUpOnClass['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<TitleComponent> components = titleFacetViaTitleAnnotation.getComponents()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),titleEvaluator.getMethod())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < titleMethods.size()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),titleEvaluator.getMethod())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final TitleFacetViaTitleAnnotation titleFacetViaTitleAnnotation = (TitleFacetViaTitleAnnotation)facet@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"titleElement1\"),.getMethod(\"titleElement3\"),.getMethod(\"titleElement2\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertNotNull(facet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Customer2 customer = new Customer2()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String title = titleFacetViaTitleAnnotation.title(mockObjectAdapter,mockLocalizationProviderInternal.getLocalization())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testTitleAnnotatedMethodPickedUpOnClassRemoved['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final String title = titleFacetViaTitleAnnotation.title(mockObjectAdapter)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->3 [style = bold, label=""];
11->10 [style = solid, label="i"];
8->10 [style = bold, label=""];
10->8 [style = dotted, label="true"];
20->8 [style = solid, label="i"];
10->6 [style = dotted, label="true"];
7->11 [style = bold, label=""];
20->7 [style = solid, label="i"];
7->10 [style = dotted, label="true"];
7->10 [style = bold, label=""];
10->8 [style = solid, label="i"];
20->10 [style = solid, label="i"];
3->14 [style = bold, label=""];
4->16 [style = solid, label="facet"];
5->15 [style = bold, label=""];
9->17 [style = bold, label=""];
8->6 [style = bold, label=""];
7->11 [style = solid, label="i"];
18->2 [style = bold, label=""];
7->10 [style = solid, label="i"];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
1->9 [style = bold, label=""];
4->3 [style = solid, label="facet"];
22->4 [style = bold, label=""];
0->7 [style = bold, label=""];
12->2 [style = bold, label=""];
11->6 [style = solid, label="i"];
21->20 [style = bold, label=""];
5->17 [style = dashed, label="0"];
7->11 [style = dotted, label="true"];
10->8 [style = bold, label=""];
13->21 [style = dashed, label="0"];
10->11 [style = dotted, label="true"];
11->10 [style = bold, label=""];
6->11 [style = bold, label=""];
5->15 [style = solid, label="title"];
17->15 [style = bold, label=""];
9->5 [style = bold, label=""];
11->8 [style = bold, label=""];
7->6 [style = solid, label="i"];
14->13 [style = bold, label=""];
4->14 [style = solid, label="facet"];
20->7 [style = bold, label=""];
17->15 [style = solid, label="title"];
10->1 [style = bold, label=""];
10->7 [style = solid, label="i"];
7->8 [style = dotted, label="true"];
19->22 [style = bold, label=""];
2->22 [style = dashed, label="0"];
14->21 [style = bold, label=""];
4->16 [style = bold, label=""];
13->0 [style = bold, label=""];
}
