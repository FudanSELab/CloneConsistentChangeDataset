digraph {
4 [style = filled, label = "region.put(\"Key\",\"Value1\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"Value1\",getValueOnDisk(region))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "region.wait(10000)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"Value1\",getValueInHTree(region))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "InterruptedException e@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Region region@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "region.get(\"Key\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "getAfterRoll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "throw new AssertionError(\"exception not expected here\",e)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "putBeforeRoll['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "switchOplog(region)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "region@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CacheObserverHolder.setInstance(new CacheObserverAdapter(){public void afterHavingCompacted(){synchronized (region) {region.notify()hasBeenNotified = true}}})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!hasBeenNotified@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(hasBeenNotified)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Region region@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "putBeforeRoll['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"Value2\",getValueOnDisk(region))@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16->8 [style = solid, label="region"];
11->1 [style = solid, label="region"];
16->17 [style = solid, label="region"];
11->8 [style = solid, label="region"];
1->10 [style = bold, label=""];
8->4 [style = bold, label=""];
10->9 [style = bold, label=""];
13->17 [style = bold, label=""];
5->3 [style = dotted, label="true"];
12->11 [style = dotted, label="true"];
0->9 [style = bold, label=""];
14->16 [style = dotted, label="true"];
10->0 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
16->13 [style = solid, label="region"];
6->8 [style = bold, label=""];
4->2 [style = bold, label=""];
8->0 [style = solid, label="hasBeenNotified"];
9->13 [style = dashed, label="0"];
10->7 [style = bold, label=""];
0->15 [style = bold, label=""];
11->9 [style = solid, label="region"];
11->16 [style = dashed, label="0"];
3->9 [style = bold, label=""];
2->1 [style = bold, label=""];
7->0 [style = bold, label=""];
14->8 [style = bold, label=""];
15->13 [style = bold, label=""];
11->2 [style = solid, label="region"];
3->15 [style = bold, label=""];
16->1 [style = solid, label="region"];
10->15 [style = bold, label=""];
5->3 [style = bold, label=""];
12->8 [style = bold, label=""];
16->2 [style = solid, label="region"];
1->10 [style = dotted, label="true"];
6->11 [style = dotted, label="true"];
}
