digraph {
27 [style = filled, label = "testOrderByEmptyAggregation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Terms terms = (Terms)aggregator.buildTopLevel()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Terms.Bucket bucket = buckets.get(i)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Directory directory = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "aggregator.postCollection()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"value\",i + 1)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "indexSearcher.search(new MatchAllDocsQuery(),aggregator)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "indexReader.close()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals((long)i + 1,bucket.getKeyAsNumber())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IndexReader indexReader = DirectoryReader.open(directory)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(filter)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"terms\").userValueTypeHint(ValueType.NUMERIC).field(\"value\").order(BucketOrder.compound(BucketOrder.aggregation(\"filter>max\",true))).subAggregation(AggregationBuilders.filter(\"filter\",termQuery(\"value\",100)).subAggregation(AggregationBuilders.max(\"max\").field(\"value\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "i < numDocs@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1L,bucket.getDocCount())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(Double.NaN,avg.getValue(),0)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "directory.close()@@@39@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"value\",NumberFieldMapper.NumberType.INTEGER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TermsAggregator aggregator = createAggregator(aggregationBuilder,indexSearcher,fieldType)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0L,filter.getDocCount())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(terms)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Filter filter = bucket.getAggregations().get(\"filter\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RandomIndexWriter indexWriter = new RandomIndexWriter(random(),directory)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(10,buckets.size())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < 10@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Avg avg = filter.getAggregations().get(\"avg\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "IndexSearcher indexSearcher = newSearcher(indexReader,true,true)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "AggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"terms\").userValueTypeHint(ValueType.NUMERIC).field(\"value\").order(BucketOrder.compound(BucketOrder.aggregation(\"filter>avg\",true))).subAggregation(AggregationBuilders.filter(\"filter\",termQuery(\"value\",100)).subAggregation(AggregationBuilders.avg(\"avg\").field(\"value\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertNotNull(bucket)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(buckets)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "aggregator.preCollection()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<? extends Terms.Bucket> buckets = terms.getBuckets()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNotNull(avg)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Max max = filter.getAggregations().get(\"max\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testOrderByEmptyAggregation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final int numDocs = 10@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertNotNull(max)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(Double.NEGATIVE_INFINITY,max.getValue(),0)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "indexWriter.close()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testOrderByEmptyAggregation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->42 [style = dashed, label="0"];
9->30 [style = solid, label="i"];
25->33 [style = bold, label=""];
12->19 [style = solid, label="fieldType"];
15->14 [style = solid, label="filter"];
24->23 [style = solid, label="directory"];
36->12 [style = bold, label=""];
10->41 [style = bold, label=""];
37->3 [style = bold, label=""];
20->17 [style = solid, label="i"];
6->38 [style = dotted, label="true"];
12->40 [style = bold, label=""];
7->17 [style = solid, label="i"];
30->28 [style = bold, label=""];
31->35 [style = bold, label=""];
38->7 [style = bold, label=""];
12->18 [style = bold, label=""];
40->24 [style = bold, label=""];
7->6 [style = solid, label="i"];
6->0 [style = dotted, label="true"];
3->13 [style = solid, label="terms"];
6->15 [style = dotted, label="true"];
35->30 [style = solid, label="i"];
27->12 [style = bold, label=""];
35->31 [style = solid, label="i"];
26->19 [style = solid, label="indexSearcher"];
22->9 [style = bold, label=""];
14->10 [style = bold, label=""];
40->19 [style = solid, label="aggregationBuilder"];
6->14 [style = dotted, label="true"];
0->41 [style = dashed, label="0"];
6->29 [style = dotted, label="true"];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
6->25 [style = dotted, label="true"];
39->12 [style = bold, label=""];
6->7 [style = dotted, label="true"];
20->25 [style = solid, label="i"];
29->38 [style = dashed, label="0"];
6->42 [style = dotted, label="true"];
6->33 [style = dotted, label="true"];
16->20 [style = bold, label=""];
4->22 [style = bold, label=""];
42->38 [style = bold, label=""];
24->4 [style = solid, label="directory"];
22->30 [style = solid, label="numDocs"];
17->8 [style = bold, label=""];
18->40 [style = dashed, label="0"];
18->24 [style = bold, label=""];
20->7 [style = solid, label="i"];
8->15 [style = bold, label=""];
6->34 [style = bold, label=""];
15->14 [style = bold, label=""];
1->3 [style = bold, label=""];
26->19 [style = bold, label=""];
5->16 [style = bold, label=""];
6->10 [style = dotted, label="true"];
21->5 [style = bold, label=""];
21->5 [style = solid, label="buckets"];
6->2 [style = dotted, label="true"];
19->32 [style = bold, label=""];
30->31 [style = bold, label=""];
28->23 [style = bold, label=""];
6->8 [style = dotted, label="true"];
32->1 [style = bold, label=""];
18->19 [style = solid, label="aggregationBuilder"];
41->42 [style = solid, label="max"];
35->30 [style = bold, label=""];
30->31 [style = dotted, label="true"];
20->6 [style = solid, label="i"];
1->37 [style = bold, label=""];
33->17 [style = bold, label=""];
23->26 [style = solid, label="indexReader"];
0->2 [style = bold, label=""];
23->26 [style = bold, label=""];
9->30 [style = bold, label=""];
6->41 [style = dotted, label="true"];
20->6 [style = bold, label=""];
7->25 [style = solid, label="i"];
34->11 [style = bold, label=""];
0->2 [style = solid, label="avg"];
6->17 [style = dotted, label="true"];
19->1 [style = solid, label="aggregator"];
24->4 [style = bold, label=""];
30->35 [style = dotted, label="true"];
9->35 [style = solid, label="i"];
3->13 [style = bold, label=""];
29->7 [style = bold, label=""];
25->33 [style = solid, label="bucket"];
13->21 [style = bold, label=""];
2->29 [style = bold, label=""];
6->25 [style = bold, label=""];
41->42 [style = bold, label=""];
9->31 [style = solid, label="i"];
}
