digraph {
2 [style = filled, label = "testFullPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tEnv.executeSql(String.format(\"insert into %s select * from `%s`\",TABLE4,TABLE1)).await()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"(1(\",results.toString())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testInsert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"(+I(1((\",results.toString())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(tEnv.sqlQuery(String.format(\"select * from %s.%s.`%s`\",TEST_CATALOG_NAME,DEFAULT_DATABASE,PostgresTablePath.fromFlinkTableName(TABLE1))).execute().collect())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(tEnv.sqlQuery(String.format(\"select * from %s\",TABLE4)).execute().collect())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"(1(\",results.toString())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testFullPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
5->8 [style = bold, label=""];
7->5 [style = bold, label=""];
4->1 [style = bold, label=""];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
6->7 [style = bold, label=""];
2->1 [style = bold, label=""];
}
