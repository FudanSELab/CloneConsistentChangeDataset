digraph {
21 [style = filled, label = "List<SSTableReader.PartitionPositionBounds> compactingPositions = c.getPositionsForRanges(r)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cfs.addSSTable(s)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(checked)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "SSTableReader c = txn.current(sstables.iterator().next())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "!checked && writer.currentWriter().getFilePointer() > 1500000@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int nowInSec = FBUtilities.nowInSeconds()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "truncate(cfs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "validateCFS(cfs)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1,tmplinkPositions.size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1,assertFileCounts(sstables.iterator().next().descriptor.directory.list()))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ci.hasNext()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "boolean checked = false@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Collection<Range<Token>> r = Arrays.asList(new Range<>(cfs.getPartitioner().getMinimumToken(),cfs.getPartitioner().getMinimumToken()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "writer.finish()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(1,compactingPositions.size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Set<SSTableReader> sstables = new HashSet<>(cfs.getLiveSSTables())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "cfs.getLiveSSTables()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "UnfilteredRowIterator row = ci.next()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "List<SSTableReader.PartitionPositionBounds> tmplinkPositions = sstable.getPositionsForRanges(r)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "basicTest2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "writer.finish()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SSTableReader sstable@@@23@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "writer.append(row)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,assertFileCounts(sstables.iterator().next().descriptor.directory.list()))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,sstables.size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "truncate(cfs)@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "sstable.openReason == SSTableReader.OpenReason.EARLY@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(c.uncompressedLength(),compactingPositions.get(0).upperPosition)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "getPositionsTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "LifecycleTransaction.waitForDeletions()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "writer.append(ci.next())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "writer.switchWriter(getWriter(cfs,sstables.iterator().next().descriptor.directory,txn))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checked = true@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(0,tmplinkPositions.get(0).lowerPosition)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "validateCFS(cfs)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(tmplinkPositions.get(0).upperPosition,compactingPositions.get(0).lowerPosition)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "LifecycleTransaction.waitForDeletions()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "basicTest2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->13 [style = bold, label=""];
36->6 [style = bold, label=""];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
6->24 [style = dotted, label="true"];
17->26 [style = bold, label=""];
25->28 [style = bold, label=""];
11->38 [style = bold, label=""];
0->12 [style = solid, label="s"];
12->5 [style = bold, label=""];
15->7 [style = bold, label=""];
6->36 [style = dotted, label="true"];
31->37 [style = dotted, label="true"];
16->10 [style = bold, label=""];
31->40 [style = dotted, label="true"];
31->32 [style = bold, label=""];
0->12 [style = bold, label=""];
38->9 [style = bold, label=""];
6->23 [style = dotted, label="true"];
6->24 [style = bold, label=""];
8->6 [style = bold, label=""];
3->15 [style = bold, label=""];
20->31 [style = bold, label=""];
24->23 [style = solid, label="row"];
20->33 [style = solid, label="checked"];
5->14 [style = bold, label=""];
8->24 [style = dashed, label="0"];
37->6 [style = bold, label=""];
11->9 [style = bold, label=""];
18->29 [style = solid, label="r"];
36->19 [style = dotted, label="true"];
31->18 [style = dotted, label="true"];
36->20 [style = bold, label=""];
29->21 [style = bold, label=""];
18->21 [style = solid, label="r"];
36->31 [style = dotted, label="true"];
9->6 [style = bold, label=""];
34->22 [style = bold, label=""];
26->30 [style = bold, label=""];
31->32 [style = dotted, label="true"];
1->9 [style = solid, label="cfs"];
36->20 [style = dotted, label="true"];
31->30 [style = dotted, label="true"];
31->21 [style = dotted, label="true"];
18->29 [style = bold, label=""];
2->0 [style = bold, label=""];
27->34 [style = bold, label=""];
31->6 [style = bold, label=""];
1->2 [style = solid, label="cfs"];
1->34 [style = solid, label="cfs"];
1->13 [style = solid, label="cfs"];
37->31 [style = bold, label=""];
33->25 [style = bold, label=""];
6->8 [style = dotted, label="true"];
31->26 [style = dotted, label="true"];
6->33 [style = bold, label=""];
6->8 [style = bold, label=""];
39->10 [style = bold, label=""];
31->17 [style = dotted, label="true"];
30->40 [style = bold, label=""];
23->36 [style = bold, label=""];
1->2 [style = bold, label=""];
28->27 [style = bold, label=""];
32->18 [style = bold, label=""];
36->35 [style = dotted, label="true"];
31->29 [style = dotted, label="true"];
10->1 [style = bold, label=""];
14->11 [style = bold, label=""];
21->17 [style = bold, label=""];
1->22 [style = solid, label="cfs"];
38->33 [style = solid, label="checked"];
1->0 [style = solid, label="cfs"];
40->37 [style = bold, label=""];
24->23 [style = bold, label=""];
}
