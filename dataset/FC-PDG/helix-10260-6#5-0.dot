digraph {
0 [style = filled, label = "setupStateModel()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "preSetup()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ClusterDataCache cache = new ClusterDataCache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "_messagePipeline = new Pipeline(\"MessagePipeline\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "pipeline.handle(event)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "pipeline.handle(event)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "_fullPipeline.addStage(new ResourceMessageGenerationPhase())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@90@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "pipeline.handle(event)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_fullPipeline.addStage(new IntermediateStateCalcStage())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "_messagePipeline.addStage(new MessageSelectionStage())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "Message relayMessage = toSlaveMessage.getRelayMessage(newMasterInstance)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "_dataCache = new ClusterDataCache()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "_messagePipeline.addStage(new MessageThrottleStage())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "_fullPipeline = new Pipeline(\"FullPipeline\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "_fullPipeline.addStage(new MessageThrottleStage())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68be30,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "_fullPipeline.handle(event)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "setupIdealState(3,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68bd41,_numPartition,_numReplica,IdealState.RebalanceMode.SEMI_AUTO,BuiltInStateModelDefinitions.MasterSlave.name())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "pipeline.handle(event)@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
118 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "_bestpossibleState = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setupInstances(3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "pipeline.handle(event)@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "_fullPipeline.addStage(new BestPossibleStateCalcStage())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "_fullPipeline.addStage(new MessageSelectionStage())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "_fullPipeline.addStage(new MessageGenerationPhase())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),_dataCache)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "cache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Pipeline pipeline = createPipeline()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "preSetup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),cache)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "_fullPipeline.addStage(new ReadClusterDataStage())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CurrentStateOutput currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "_messagePipeline.addStage(new ResourceMessageGenerationPhase())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
125 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "preSetup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "_messagePipeline.addStage(new MessageGenerationPhase())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
121 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "pipeline.handle(event)@@@93@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "_dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "pipeline = createPipeline()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "BestPossibleStateOutput bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "setupLiveInstances(3)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "pipeline.handle(event)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84->77 [style = bold, label=""];
67->28 [style = bold, label=""];
55->36 [style = bold, label=""];
109->133 [style = bold, label=""];
64->83 [style = solid, label="p"];
64->115 [style = solid, label="p"];
38->54 [style = solid, label="newMasterInstance"];
64->80 [style = solid, label="p"];
38->108 [style = solid, label="newMasterInstance"];
6->22 [style = bold, label=""];
97->68 [style = bold, label=""];
1->20 [style = bold, label=""];
88->102 [style = bold, label=""];
114->67 [style = bold, label=""];
122->86 [style = bold, label=""];
64->106 [style = solid, label="p"];
31->21 [style = bold, label=""];
82->85 [style = bold, label=""];
5->28 [style = bold, label=""];
113->126 [style = bold, label=""];
82->113 [style = solid, label="masterInstance"];
64->128 [style = solid, label="p"];
13->1 [style = bold, label=""];
53->122 [style = bold, label=""];
108->110 [style = solid, label="relayMessage"];
82->70 [style = solid, label="masterInstance"];
7->14 [style = bold, label=""];
64->122 [style = solid, label="p"];
77->119 [style = bold, label=""];
22->5 [style = solid, label="_dataCache"];
101->132 [style = bold, label=""];
70->73 [style = bold, label=""];
12->2 [style = bold, label=""];
82->74 [style = solid, label="masterInstance"];
106->78 [style = bold, label=""];
5->6 [style = dashed, label="0"];
41->89 [style = bold, label=""];
111->130 [style = bold, label=""];
64->45 [style = solid, label="p"];
23->13 [style = bold, label=""];
93->94 [style = bold, label=""];
58->120 [style = bold, label=""];
132->55 [style = bold, label=""];
83->127 [style = bold, label=""];
38->120 [style = solid, label="newMasterInstance"];
38->53 [style = solid, label="newMasterInstance"];
39->49 [style = bold, label=""];
2->15 [style = bold, label=""];
104->118 [style = bold, label=""];
36->105 [style = solid, label="bestPossibleStateOutput"];
108->80 [style = solid, label="relayMessage"];
11->8 [style = solid, label="currentStateOutput"];
128->81 [style = solid, label="slaveInstance"];
9->5 [style = bold, label=""];
7->132 [style = dashed, label="0"];
82->85 [style = solid, label="masterInstance"];
133->75 [style = bold, label=""];
1->31 [style = bold, label=""];
99->65 [style = bold, label=""];
54->71 [style = bold, label=""];
125->91 [style = bold, label=""];
19->3 [style = bold, label=""];
56->53 [style = bold, label=""];
64->53 [style = solid, label="p"];
100->44 [style = bold, label=""];
10->11 [style = bold, label=""];
131->104 [style = bold, label=""];
42->106 [style = bold, label=""];
27->0 [style = bold, label=""];
107->40 [style = bold, label=""];
98->54 [style = bold, label=""];
108->110 [style = bold, label=""];
8->64 [style = bold, label=""];
120->35 [style = bold, label=""];
69->123 [style = bold, label=""];
22->9 [style = bold, label=""];
85->90 [style = bold, label=""];
71->96 [style = bold, label=""];
118->97 [style = bold, label=""];
15->30 [style = dashed, label="0"];
64->61 [style = solid, label="p"];
47->43 [style = bold, label=""];
65->57 [style = solid, label="clusterConfig"];
64->41 [style = solid, label="p"];
49->62 [style = bold, label=""];
75->61 [style = bold, label=""];
82->49 [style = solid, label="masterInstance"];
79->117 [style = bold, label=""];
36->125 [style = solid, label="bestPossibleStateOutput"];
22->18 [style = dashed, label="0"];
65->112 [style = bold, label=""];
66->34 [style = bold, label=""];
30->19 [style = bold, label=""];
29->27 [style = bold, label=""];
91->60 [style = bold, label=""];
65->50 [style = solid, label="clusterConfig"];
89->81 [style = bold, label=""];
3->7 [style = bold, label=""];
6->28 [style = solid, label="resourceMap"];
87->69 [style = bold, label=""];
102->84 [style = bold, label=""];
64->40 [style = solid, label="p"];
11->8 [style = bold, label=""];
45->46 [style = bold, label=""];
92->33 [style = solid, label="currentStateOutput"];
129->83 [style = bold, label=""];
81->115 [style = bold, label=""];
32->88 [style = bold, label=""];
59->48 [style = bold, label=""];
62->107 [style = bold, label=""];
36->42 [style = bold, label=""];
128->41 [style = bold, label=""];
92->74 [style = bold, label=""];
64->82 [style = bold, label=""];
10->11 [style = solid, label="bestPossibleStateOutput"];
63->47 [style = bold, label=""];
95->52 [style = bold, label=""];
110->116 [style = bold, label=""];
117->103 [style = bold, label=""];
4->24 [style = bold, label=""];
33->128 [style = bold, label=""];
36->56 [style = solid, label="bestPossibleStateOutput"];
16->27 [style = bold, label=""];
108->73 [style = solid, label="relayMessage"];
17->6 [style = bold, label=""];
78->51 [style = bold, label=""];
51->113 [style = bold, label=""];
64->38 [style = solid, label="p"];
20->31 [style = dashed, label="0"];
38->89 [style = solid, label="newMasterInstance"];
94->100 [style = bold, label=""];
25->67 [style = dashed, label="0"];
13->10 [style = dashed, label="0"];
57->47 [style = solid, label="resourceMap"];
82->40 [style = solid, label="masterInstance"];
6->10 [style = solid, label="resourceMap"];
15->19 [style = bold, label=""];
38->108 [style = bold, label=""];
37->66 [style = bold, label=""];
116->39 [style = bold, label=""];
21->12 [style = bold, label=""];
26->6 [style = solid, label="clusterConfig"];
64->70 [style = solid, label="p"];
24->26 [style = bold, label=""];
92->71 [style = solid, label="currentStateOutput"];
64->54 [style = solid, label="p"];
123->79 [style = bold, label=""];
64->97 [style = solid, label="p"];
50->57 [style = bold, label=""];
51->70 [style = solid, label="toSlaveMessage"];
112->50 [style = bold, label=""];
105->37 [style = bold, label=""];
82->109 [style = solid, label="masterInstance"];
6->63 [style = bold, label=""];
64->74 [style = solid, label="p"];
57->63 [style = solid, label="resourceMap"];
82->61 [style = solid, label="masterInstance"];
34->76 [style = bold, label=""];
18->6 [style = solid, label="cache"];
40->70 [style = bold, label=""];
82->73 [style = solid, label="masterInstance"];
28->10 [style = bold, label=""];
92->87 [style = solid, label="currentStateOutput"];
96->125 [style = bold, label=""];
64->82 [style = solid, label="p"];
25->23 [style = bold, label=""];
41->115 [style = solid, label="instanceStateMap"];
18->17 [style = bold, label=""];
80->87 [style = bold, label=""];
60->111 [style = bold, label=""];
124->101 [style = bold, label=""];
46->58 [style = bold, label=""];
64->44 [style = solid, label="p"];
57->18 [style = bold, label=""];
64->73 [style = solid, label="p"];
74->80 [style = bold, label=""];
68->56 [style = bold, label=""];
43->114 [style = bold, label=""];
121->99 [style = bold, label=""];
20->21 [style = bold, label=""];
126->59 [style = bold, label=""];
52->129 [style = bold, label=""];
90->124 [style = bold, label=""];
128->122 [style = solid, label="slaveInstance"];
48->38 [style = bold, label=""];
127->92 [style = bold, label=""];
11->95 [style = solid, label="currentStateOutput"];
0->4 [style = bold, label=""];
103->109 [style = bold, label=""];
36->96 [style = solid, label="bestPossibleStateOutput"];
82->90 [style = solid, label="masterInstance"];
9->17 [style = dashed, label="0"];
56->86 [style = solid, label="currentStateOutput"];
119->45 [style = bold, label=""];
73->95 [style = bold, label=""];
35->72 [style = bold, label=""];
38->80 [style = solid, label="newMasterInstance"];
115->105 [style = bold, label=""];
64->79 [style = solid, label="p"];
130->131 [style = bold, label=""];
26->17 [style = solid, label="clusterConfig"];
2->30 [style = bold, label=""];
38->39 [style = solid, label="newMasterInstance"];
8->25 [style = bold, label=""];
61->33 [style = bold, label=""];
76->93 [style = bold, label=""];
108->54 [style = solid, label="relayMessage"];
86->32 [style = bold, label=""];
36->92 [style = solid, label="bestPossibleStateOutput"];
26->18 [style = bold, label=""];
44->98 [style = bold, label=""];
}
