digraph {
11 [style = filled, label = "VirtualFile virtualFromA = VirtualFile.forFilePath(new FilePath(a))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "VirtualFile virtualFromB = VirtualFile.forFilePath(new FilePath(b))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "VirtualFile virtualRoot = VirtualFile.forFile(root)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File b = new File(root,\"b\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "File a = new File(root,\"a\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "forFile_listOnlyDescendants_withoutIllegal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "forFile_listOnlyDescendants_withoutIllegal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "VirtualFile virtualRoot = VirtualFile.forFilePath(new FilePath(root))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "VirtualFile virtualFromA = VirtualFile.forFile(a)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "forFilePath_listOnlyDescendants_withoutIllegal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "File root = tmp.getRoot()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.prepareFileStructureForIsDescendant()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "VirtualFile virtualFromB = VirtualFile.forFile(b)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.prepareFileStructureForIsDescendant(tmp.getRoot())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "checkCommonAssertionForList(virtualRoot,virtualFromA,virtualFromB)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
5->2 [style = solid, label="virtualFromA"];
11->14 [style = bold, label=""];
11->2 [style = solid, label="virtualFromA"];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
8->5 [style = solid, label="a"];
4->7 [style = solid, label="root"];
0->2 [style = solid, label="virtualFromB"];
4->8 [style = solid, label="root"];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
1->13 [style = bold, label=""];
13->11 [style = bold, label=""];
0->14 [style = dashed, label="0"];
8->1 [style = bold, label=""];
8->11 [style = solid, label="a"];
1->14 [style = solid, label="b"];
7->5 [style = bold, label=""];
4->1 [style = solid, label="root"];
14->2 [style = solid, label="virtualFromB"];
5->0 [style = bold, label=""];
3->9 [style = dashed, label="0"];
1->0 [style = solid, label="b"];
5->11 [style = dashed, label="0"];
13->2 [style = solid, label="virtualRoot"];
7->2 [style = solid, label="virtualRoot"];
7->13 [style = dashed, label="0"];
4->8 [style = bold, label=""];
10->9 [style = bold, label=""];
14->2 [style = bold, label=""];
12->3 [style = bold, label=""];
4->13 [style = solid, label="root"];
}
