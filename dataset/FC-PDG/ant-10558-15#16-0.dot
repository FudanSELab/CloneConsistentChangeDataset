digraph {
4 [style = filled, label = "int i = 0@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "isExcluded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return true@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return false@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return true@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "excludePatterns(i(.matchPath(name,isCaseSensitive())@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String toMatch = path.toString()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final TokenizedPath path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < includePatterns.length@@@8@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "isCaseSensitive()? excludeNonPatterns.containsKey(name.toString()): excludeNonPatterns.containsKey(name.toString().toUpperCase())@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "toMatch = toMatch.toUpperCase()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "isCaseSensitive()? includeNonPatterns.containsKey(path.toString()): includeNonPatterns.containsKey(path.toString().toUpperCase())@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "includePatterns(i(.matchPath(path,isCaseSensitive())@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "isIncluded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return includeNonPatterns.containsKey(toMatch) || Stream.of(includePatterns).anyMatch(null)@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "isIncluded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "ensureNonPatternSetsReady()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < excludePatterns.length@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final TokenizedPath name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "!isCaseSensitive()@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19->10 [style = dotted, label="true"];
16->3 [style = bold, label=""];
15->13 [style = bold, label=""];
9->16 [style = dashed, label="0"];
7->1 [style = bold, label=""];
17->18 [style = dotted, label="true"];
0->10 [style = dotted, label="true"];
7->10 [style = bold, label=""];
12->8 [style = dotted, label="true"];
19->20 [style = dotted, label="true"];
13->11 [style = solid, label="toMatch"];
19->20 [style = bold, label=""];
9->4 [style = bold, label=""];
10->19 [style = bold, label=""];
0->19 [style = dashed, label="0"];
4->19 [style = bold, label=""];
10->0 [style = solid, label="i"];
7->20 [style = dashed, label="0"];
2->9 [style = bold, label=""];
20->1 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
16->3 [style = dotted, label="true"];
4->0 [style = bold, label=""];
15->13 [style = dotted, label="true"];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
20->10 [style = bold, label=""];
19->5 [style = bold, label=""];
12->2 [style = bold, label=""];
15->11 [style = bold, label=""];
17->2 [style = bold, label=""];
20->1 [style = dotted, label="true"];
6->8 [style = dotted, label="true"];
4->19 [style = solid, label="i"];
10->0 [style = bold, label=""];
2->14 [style = bold, label=""];
4->10 [style = solid, label="i"];
8->7 [style = solid, label="path"];
9->3 [style = bold, label=""];
4->0 [style = solid, label="i"];
8->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
18->20 [style = solid, label="name"];
14->11 [style = solid, label="toMatch"];
0->7 [style = dotted, label="true"];
16->4 [style = bold, label=""];
7->1 [style = dotted, label="true"];
1->10 [style = bold, label=""];
9->3 [style = dotted, label="true"];
10->19 [style = solid, label="i"];
0->5 [style = bold, label=""];
2->16 [style = bold, label=""];
}
