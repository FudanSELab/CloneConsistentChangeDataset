digraph {
31 [style = filled, label = "final Fingerprint fingerprint = getFingerprint(build,\"test.txt\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "setupProjectMatrixAuthStrategy(Jenkins.READ,Item.DISCOVER)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "project2.getPublishersList().add(new Fingerprinter(\"test.txt\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(\"Usage ref in fingerprint should be visible to user1\",1,fingerprint._getUsages().size())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(\"Only one usage should be visible to user2\",1,fp._getUsages().size())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(\"user3 should be unable to see the origin\",fp.getOriginal(),nullValue())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(\"user1 should able to see the origin\",fingerprint.getOriginal(),notNullValue())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Fingerprint.BuildPtr original = fp.getOriginal()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Fingerprint fp = getFingerprint(build,\"test.txt\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"user1 sees the wrong original name with Item.DISCOVER\",project.getFullName(),original.getName())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "User user2 = User.getOrCreateByIdOrFullName(\"user2\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "shouldBeUnableToSeeJobsIfNoPermissions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final FreeStyleBuild build2 = rule.buildAndAssertSuccess(project2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Fingerprint.BuildPtr original = fp.getOriginal()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final FreeStyleProject project = createAndRunProjectWithPublisher(\"project\",\"test.txt\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"All usages should be invisible for user3\",0,fp._getUsages().size())@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"Only project1 should be visible to user1\",project1.getFullName(),fp._getUsages().get(0).name)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "shouldBeAbleToSeeOriginalWithDiscoverPermissionOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(\"user1 sees the wrong original number with Item.DISCOVER\",build.getNumber(),original.getNumber())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "setJobPermissionsOnce(project2,\"user2\",Item.READ,Item.DISCOVER)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "User user1 = User.get(\"user1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final FreeStyleProject project1 = createAndRunProjectWithPublisher(\"fpProducer\",\"test.txt\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldBeUnableToSeeJobsIfNoPermissions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final FreeStyleBuild build = project.getLastBuild()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(\"user1 should be able to see the origin\",fp.getOriginal(),notNullValue())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final FreeStyleProject project2 = rule.createFreeStyleProject(\"project2\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Fingerprint.BuildPtr original = fingerprint.getOriginal()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "project2.getBuildersList().add(new WorkspaceCopyFileBuilder(\"test.txt\",project1.getName(),build.getNumber()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"user1 should be able to see the origin's build number\",build.getNumber(),original.getNumber())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "User user3 = User.getOrCreateByIdOrFullName(\"user3\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(\"Only one usage should be visible to user1\",1,fp._getUsages().size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "setupProjectMatrixAuthStrategy(Jenkins.READ)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "User user3 = User.get(\"user3\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "User user1 = User.getOrCreateByIdOrFullName(\"user1\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final FreeStyleBuild build = project1.getLastBuild()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "User user2 = User.get(\"user2\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"Only project2 should be visible to user2\",project2.getFullName(),fp._getUsages().get(0).name)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"user1 should be able to see the origin's project name\",project1.getName(),original.getName())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "setJobPermissionsOnce(project1,\"user1\",Item.READ,Item.DISCOVER)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(\"user2 should be unable to see the origin\",fp.getOriginal(),nullValue())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35->31 [style = bold, label=""];
31->37 [style = bold, label=""];
16->0 [style = bold, label=""];
29->17 [style = bold, label=""];
16->7 [style = solid, label="project2"];
3->26 [style = dashed, label="0"];
24->2 [style = bold, label=""];
27->14 [style = bold, label=""];
23->13 [style = dashed, label="0"];
10->39 [style = dashed, label="0"];
15->19 [style = solid, label="build"];
8->14 [style = bold, label=""];
28->26 [style = bold, label=""];
15->16 [style = bold, label=""];
11->24 [style = bold, label=""];
5->17 [style = bold, label=""];
38->39 [style = bold, label=""];
10->6 [style = bold, label=""];
22->7 [style = bold, label=""];
32->30 [style = bold, label=""];
1->11 [style = bold, label=""];
9->33 [style = dashed, label="0"];
15->35 [style = dashed, label="0"];
13->28 [style = dashed, label="0"];
26->27 [style = bold, label=""];
36->13 [style = bold, label=""];
35->31 [style = solid, label="build"];
30->35 [style = bold, label=""];
19->13 [style = bold, label=""];
13->3 [style = bold, label=""];
20->23 [style = bold, label=""];
18->1 [style = bold, label=""];
16->4 [style = solid, label="project2"];
20->36 [style = dashed, label="0"];
25->38 [style = dashed, label="0"];
3->8 [style = bold, label=""];
9->25 [style = bold, label=""];
0->22 [style = bold, label=""];
37->34 [style = bold, label=""];
34->36 [style = bold, label=""];
12->18 [style = bold, label=""];
4->20 [style = bold, label=""];
17->15 [style = bold, label=""];
8->27 [style = dashed, label="0"];
33->38 [style = bold, label=""];
25->10 [style = bold, label=""];
19->28 [style = bold, label=""];
13->33 [style = bold, label=""];
23->9 [style = bold, label=""];
7->19 [style = bold, label=""];
17->30 [style = dashed, label="0"];
14->21 [style = bold, label=""];
17->21 [style = solid, label="project1"];
21->4 [style = bold, label=""];
6->12 [style = bold, label=""];
}
