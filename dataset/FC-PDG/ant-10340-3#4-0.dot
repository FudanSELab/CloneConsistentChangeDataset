digraph {
4 [style = filled, label = "assertEquals(File.separator,getFileUtils().resolveFile(null,\"\\\").getPath())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testResolveFilePosix['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(File.separator,FILE_UTILS.resolveFile(null,\"/\").getPath())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testResolveFilePosix['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(File.separator,FILE_UTILS.normalize(\"\\\").getPath())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String driveSpec = \"C:\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testNormalizePosix['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "thrown.expect()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(File.separator,getFileUtils().resolveFile(null,\"/\").getPath())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(File.separator,FILE_UTILS.normalize(\"/\").getPath())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(File.separator,FILE_UTILS.resolveFile(null,\"\\\").getPath())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assumeTrue(\"DOS or NetWare\",!Os.isFamily(\"dos\") && !Os.isFamily(\"netware\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(driveSpec,FILE_UTILS.normalize(driveSpec).getPath())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->4 [style = dashed, label="0"];
3->0 [style = bold, label=""];
6->3 [style = bold, label=""];
3->5 [style = bold, label=""];
3->12 [style = bold, label=""];
9->10 [style = bold, label=""];
0->5 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
7->8 [style = bold, label=""];
11->3 [style = bold, label=""];
1->7 [style = dashed, label="0"];
0->1 [style = bold, label=""];
9->10 [style = solid, label="driveSpec"];
12->7 [style = bold, label=""];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
8->9 [style = bold, label=""];
}
