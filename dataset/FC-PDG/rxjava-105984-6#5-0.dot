digraph {
16 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Flowable<Integer> f = Flowable.unsafeCreate(new Publisher<Integer>(){@Override public void subscribe(final Subscriber<? super Integer> s){Worker inner = Schedulers.newThread().createWorker()final AsyncSubscription as = new AsyncSubscription()as.setSubscription(new BooleanSubscription())as.setResource(inner)s.onSubscribe(as)inner.schedule(new Runnable(){@Override public void run(){try {for (int i = 0 i < 100 i++){s.onNext(1)try {Thread.sleep(1)}catch (InterruptedException e) }}catch (Exception e) as.dispose()s.onComplete()}})}})@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(300,onNextEvents.size())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "ts.assertTerminated()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "concurrencyWithSleeping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "ts.assertComplete()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i++@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Flowable<Integer> merge = Flowable.merge(f,f,f)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ts.assertNoErrors()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(30000,onNextEvents.size())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ts.awaitDone(10,TimeUnit.SECONDS)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ts.assertComplete()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Integer> onNextEvents = ts.values()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "concurrencyWithSleeping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Integer> onNextEvents = ts.values()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "concurrency['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "merge.subscribe(ts)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "merge.subscribe(ts)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int i = 0@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < 10@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Flowable<Integer> merge = Flowable.merge(f.onBackpressureBuffer(),f.onBackpressureBuffer(),f.onBackpressureBuffer())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ts.awaitDone(3,TimeUnit.SECONDS)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Flowable<Integer> f = Flowable.range(1,10000).subscribeOn(Schedulers.newThread())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
23->20 [style = bold, label=""];
20->25 [style = dotted, label="true"];
20->24 [style = dotted, label="true"];
7->17 [style = dashed, label="0"];
15->25 [style = bold, label=""];
5->10 [style = dotted, label="true"];
9->18 [style = dashed, label="0"];
19->20 [style = bold, label=""];
21->15 [style = bold, label=""];
5->1 [style = dotted, label="true"];
16->22 [style = solid, label="ts"];
20->0 [style = dotted, label="true"];
3->24 [style = dashed, label="0"];
5->6 [style = dotted, label="true"];
14->17 [style = bold, label=""];
5->0 [style = dotted, label="true"];
7->4 [style = bold, label=""];
20->21 [style = dotted, label="true"];
4->5 [style = solid, label="i"];
5->3 [style = dotted, label="true"];
16->22 [style = bold, label=""];
2->10 [style = bold, label=""];
17->19 [style = bold, label=""];
12->7 [style = bold, label=""];
11->0 [style = dashed, label="0"];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
0->5 [style = solid, label="i"];
2->10 [style = solid, label="ts"];
20->5 [style = dotted, label="true"];
19->20 [style = solid, label="i"];
6->1 [style = bold, label=""];
24->16 [style = bold, label=""];
5->13 [style = dotted, label="true"];
23->20 [style = solid, label="i"];
11->0 [style = bold, label=""];
22->18 [style = bold, label=""];
5->11 [style = dotted, label="true"];
0->23 [style = bold, label=""];
7->3 [style = solid, label="f"];
3->2 [style = bold, label=""];
10->13 [style = bold, label=""];
5->0 [style = bold, label=""];
2->16 [style = dashed, label="0"];
20->23 [style = dotted, label="true"];
9->13 [style = dashed, label="0"];
20->18 [style = dotted, label="true"];
5->9 [style = dotted, label="true"];
4->0 [style = solid, label="i"];
25->5 [style = bold, label=""];
10->9 [style = bold, label=""];
20->22 [style = dotted, label="true"];
18->21 [style = bold, label=""];
13->6 [style = bold, label=""];
20->24 [style = bold, label=""];
4->5 [style = bold, label=""];
5->2 [style = dotted, label="true"];
20->15 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
0->5 [style = bold, label=""];
19->23 [style = solid, label="i"];
}
