digraph {
0 [style = filled, label = "buildRule.executeTarget(\"emptydircopyandremove\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(buildRule.getFullLog().contains(\"Removing orphan directory:\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testEmptyDirCopyAndRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertFileIsPresent(f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan file:\") == -1)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertContains(\"Removed 2 dangling directories from\",buildRule.getFullLog())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFileIsPresent(d)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCopyNoRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String c = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFileIsNotPresent(f)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan directory:\") > -1)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testEmptyDirCopyAndRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFileIsNotPresent(d)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFileIsPresent(c)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "buildRule.executeTarget(\"copynoremove\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertContains(\"NO dangling file to remove from\",buildRule.getFullLog())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->7 [style = solid, label="d"];
4->3 [style = bold, label=""];
3->2 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
17->1 [style = bold, label=""];
9->2 [style = bold, label=""];
7->14 [style = dashed, label="0"];
16->2 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
12->0 [style = bold, label=""];
2->4 [style = solid, label="f"];
15->16 [style = solid, label="f"];
0->17 [style = dashed, label="0"];
3->10 [style = bold, label=""];
13->17 [style = bold, label=""];
8->9 [style = solid, label="c"];
1->14 [style = solid, label="d"];
5->0 [style = bold, label=""];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
8->9 [style = bold, label=""];
1->14 [style = bold, label=""];
14->15 [style = bold, label=""];
4->11 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
