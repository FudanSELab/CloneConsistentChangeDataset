digraph {
5 [style = filled, label = "doAnswer(new Answer<Object>(){public Object answer(InvocationOnMock invocation){((Completion)invocation.getArguments()(3().onSuccess()return null}}).when(delegate).createRedundantBucket(eq(targetMember),eq(bucketId),eq(colocatedRegionBytes),any())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(details,times(1)).incCreates(eq(colocatedRegionBytes.get(PR_LEADER_REGION_NAME)),anyLong())@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "verify(details,times(1)).incTransfers(colocatedRegionBytes.get(PR_COLOCATED_REGION_NAME),0)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "details.getRegionPath().equals(PR_COLOCATED_REGION_NAME)@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "wrapper.createRedundantBucket(targetMember,bucketId,colocatedRegionBytes,completionSentToWrapper)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "details.getRegionPath().equals(PR_COLOCATED_REGION_NAME)@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "bucketWrapperShouldInvokeOnSuccessWhenCreateBucketSucceeds['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Completion completionSentToWrapper = mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME)@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(completionSentToWrapper,times(1)).onSuccess()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "details.getRegionPath().equalsIgnoreCase(PR_LEADER_REGION_NAME)@@@13@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "bucketWrapperShouldRecordNumberOfBucketsCreatedIfCreateBucketSucceeds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
4->3 [style = bold, label=""];
4->10 [style = bold, label=""];
10->6 [style = dotted, label="true"];
7->11 [style = bold, label=""];
12->5 [style = bold, label=""];
3->1 [style = bold, label=""];
9->4 [style = bold, label=""];
1->3 [style = bold, label=""];
3->4 [style = dotted, label="true"];
7->4 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
0->7 [style = bold, label=""];
6->4 [style = bold, label=""];
1->6 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
10->4 [style = bold, label=""];
1->6 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
3->1 [style = dotted, label="false"];
4->10 [style = dotted, label="false"];
0->7 [style = solid, label="completionSentToWrapper"];
2->5 [style = bold, label=""];
}
