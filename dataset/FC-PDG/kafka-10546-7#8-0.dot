digraph {
39 [style = filled, label = "final ConsumerRecordFactory<Integer,Double> source2Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "topology.addSource(sourceName2,Serdes.Integer().deserializer(),Serdes.Double().deserializer(),SOURCE_TOPIC_2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String sourceName2 = \"source-2\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer()),source1Key,source1Value)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Integer().deserializer(),Serdes.Double().deserializer()),source2Key,source2Value)@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final Long source1Key = 42L@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testDriver.pipeInput(consumerRecord2)@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldUseSourceSpecificDeserializers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final ConsumerRecordFactory<Long,String> source1Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Long source1Key = 42L@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "topology.addSink(\"sink-2\",SINK_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer(),sourceName2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "topology.addSink(\"sink\",SINK_TOPIC_1,new Serializer<Object>(){@Override public byte(( serialize(final String topic,final Object data){if (data instanceof Long) {return Serdes.Long().serializer().serialize(topic,(Long)data)}return Serdes.Integer().serializer().serialize(topic,(Integer)data)}},new Serializer<Object>(){@Override public byte(( serialize(final String topic,final Object data){if (data instanceof String) {return Serdes.String().serializer().serialize(topic,(String)data)}return Serdes.Double().serializer().serialize(topic,(Double)data)}},processor)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "testDriver.pipeInput(consumerRecord2)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "topology.addSink(\"sink-1\",SINK_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer(),sourceName1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final Double source2Value = 3.14@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String sourceName1 = \"source-1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "topology.addSink(\"sink\",SINK_TOPIC_1,null,null,processor)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer()),source1Key,source1Value)@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final ConsumerRecordFactory<Long,String> source1Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testDriver.pipeInput(consumerRecord1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord1 = source1Factory.create(source1Key,source1Value)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "shouldUseSinkSpecificSerializers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "topology.addProcessor(processor,new MockProcessorSupplier(),sourceName1,sourceName2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String processor = \"processor\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testDriver = new TopologyTestDriver(topology,config)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "testDriver = new TopologyTestDriver(topology,config)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final Integer source2Key = 73@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Integer source2Key = 73@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String source1Value = \"anyString\"@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDriver.pipeInput(consumerRecord2)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String source1Value = \"anyString\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord2 = source2Factory.create(source2Key,source2Value)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_2,Serdes.Integer().deserializer(),Serdes.Double().deserializer()),source2Key,source2Value)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer()),source1Key,source1Value)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "topology.addSource(sourceName1,Serdes.Long().deserializer(),Serdes.String().deserializer(),SOURCE_TOPIC_1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord1 = source1Factory.create(source1Key,source1Value)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testDriver.pipeInput(consumerRecord1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "shouldUseSourceSpecificDeserializers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final ConsumerRecordFactory<Integer,Double> source2Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "final Double source2Value = 3.14@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord2 = source2Factory.create(source2Key,source2Value)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Topology topology = new Topology()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Integer().deserializer(),Serdes.Double().deserializer()),source2Key,source2Value)@@@39@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19->2 [style = solid, label="source2Value"];
14->3 [style = bold, label=""];
19->3 [style = solid, label="source1Key"];
11->9 [style = solid, label="source1Value"];
29->30 [style = bold, label=""];
32->34 [style = bold, label=""];
15->1 [style = solid, label="topology"];
14->17 [style = solid, label="source2Value"];
8->0 [style = bold, label=""];
20->21 [style = solid, label="processor"];
32->27 [style = solid, label="consumerRecord1"];
19->9 [style = bold, label=""];
2->14 [style = bold, label=""];
21->1 [style = bold, label=""];
7->16 [style = bold, label=""];
26->15 [style = bold, label=""];
37->32 [style = bold, label=""];
4->8 [style = bold, label=""];
30->40 [style = bold, label=""];
15->25 [style = solid, label="topology"];
20->22 [style = solid, label="processor"];
2->17 [style = solid, label="source2Key"];
28->42 [style = bold, label=""];
9->3 [style = solid, label="source1Value"];
37->33 [style = solid, label="source2Value"];
15->38 [style = solid, label="topology"];
18->0 [style = solid, label="sourceName2"];
40->37 [style = bold, label=""];
39->29 [style = bold, label=""];
22->25 [style = bold, label=""];
8->28 [style = bold, label=""];
18->8 [style = solid, label="sourceName2"];
40->33 [style = solid, label="source2Key"];
9->2 [style = bold, label=""];
1->9 [style = solid, label="source1Key"];
27->31 [style = bold, label=""];
0->21 [style = bold, label=""];
21->22 [style = dashed, label="0"];
9->14 [style = solid, label="consumerRecord1"];
1->11 [style = bold, label=""];
25->24 [style = bold, label=""];
18->20 [style = bold, label=""];
18->4 [style = bold, label=""];
31->41 [style = bold, label=""];
42->38 [style = bold, label=""];
17->16 [style = solid, label="consumerRecord2"];
19->13 [style = solid, label="source2Value"];
2->17 [style = solid, label="consumerRecord2"];
35->15 [style = bold, label=""];
3->13 [style = solid, label="consumerRecord1"];
6->18 [style = bold, label=""];
6->0 [style = solid, label="sourceName1"];
29->31 [style = solid, label="source1Key"];
5->2 [style = solid, label="source2Key"];
5->13 [style = solid, label="source2Key"];
20->0 [style = solid, label="processor"];
37->34 [style = solid, label="source2Value"];
36->39 [style = bold, label=""];
11->3 [style = solid, label="source1Value"];
40->34 [style = solid, label="source2Key"];
21->42 [style = dashed, label="0"];
5->19 [style = bold, label=""];
11->5 [style = bold, label=""];
14->10 [style = solid, label="source2Value"];
6->4 [style = solid, label="sourceName1"];
6->28 [style = solid, label="sourceName1"];
34->41 [style = solid, label="consumerRecord2"];
3->17 [style = bold, label=""];
19->7 [style = solid, label="source1Key"];
17->13 [style = bold, label=""];
41->33 [style = bold, label=""];
24->23 [style = bold, label=""];
9->7 [style = solid, label="source1Value"];
16->10 [style = bold, label=""];
12->15 [style = bold, label=""];
38->36 [style = bold, label=""];
10->33 [style = dashed, label="0"];
15->6 [style = bold, label=""];
18->42 [style = solid, label="sourceName2"];
30->31 [style = solid, label="source1Value"];
29->32 [style = solid, label="source1Key"];
20->4 [style = bold, label=""];
2->10 [style = solid, label="source2Key"];
13->7 [style = bold, label=""];
0->22 [style = bold, label=""];
1->3 [style = solid, label="source1Key"];
23->1 [style = bold, label=""];
30->32 [style = solid, label="source1Value"];
34->27 [style = bold, label=""];
}
