digraph {
3 [style = filled, label = "rs.size() < 1@@@20@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "fail(\"testIteratorDefDouble: Query fetched zero results \")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testIteratorDefLong['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "SelectResults rs = (SelectResults)q.execute(params)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "C1.add(new Double(d2))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < queries.length@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "C1.add(new Long(lg1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long lg2 = 222@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "double d1 = 1.11@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testIteratorDefLong['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "fail(\"testIteratorDefLong: Query fetched zero results \")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "fail(q.getQueryString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Query q = null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "rs.size() < 1@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String queries = {\"SELECT DISTINCT doubleValue from (set<double>) $1\",\"SELECT DISTINCT doubleValue from $1 TYPE double\"}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "double d2 = 2.22@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "long lg1 = 111@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "fail(q.getQueryString())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "C1.add(new Long(lg2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "params(0( = C1@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "e.printStackTrace()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "q = CacheUtils.getQueryService().newQuery(queries(i()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testIteratorDefDouble['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Object params = new Object((((@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Exception e@@@22@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "rs.size() < 1@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "HashSet C1 = new HashSet()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fail(\"testIteratorDefLong: Query fetched zero results \")@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "C1.add(new Double(d1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->20 [style = dashed, label="0"];
28->29 [style = bold, label=""];
8->28 [style = bold, label=""];
2->6 [style = solid, label="queries"];
16->18 [style = bold, label=""];
7->1 [style = bold, label=""];
20->17 [style = bold, label=""];
29->17 [style = bold, label=""];
10->4 [style = solid, label="C1"];
30->26 [style = solid, label="d2"];
1->5 [style = solid, label="lg1"];
4->8 [style = solid, label="params"];
1->27 [style = dashed, label="0"];
27->30 [style = bold, label=""];
17->6 [style = solid, label="i"];
27->25 [style = solid, label="d1"];
8->3 [style = bold, label=""];
9->17 [style = bold, label=""];
5->25 [style = dashed, label="0"];
4->2 [style = bold, label=""];
19->17 [style = bold, label=""];
17->14 [style = solid, label="i"];
3->9 [style = dotted, label="true"];
11->19 [style = bold, label=""];
12->30 [style = dashed, label="0"];
11->22 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
5->16 [style = bold, label=""];
3->9 [style = bold, label=""];
14->17 [style = dotted, label="true"];
0->17 [style = solid, label="i"];
14->20 [style = dotted, label="true"];
28->29 [style = dotted, label="true"];
0->14 [style = solid, label="i"];
0->14 [style = bold, label=""];
12->10 [style = bold, label=""];
2->0 [style = bold, label=""];
16->26 [style = dashed, label="0"];
8->20 [style = bold, label=""];
10->5 [style = bold, label=""];
18->4 [style = bold, label=""];
15->11 [style = bold, label=""];
20->23 [style = bold, label=""];
9->29 [style = dashed, label="0"];
10->25 [style = bold, label=""];
17->14 [style = bold, label=""];
14->28 [style = dotted, label="true"];
15->19 [style = dotted, label="true"];
21->1 [style = bold, label=""];
6->8 [style = bold, label=""];
25->26 [style = bold, label=""];
12->16 [style = solid, label="lg2"];
15->11 [style = dotted, label="true"];
1->12 [style = bold, label=""];
30->10 [style = bold, label=""];
14->8 [style = dotted, label="true"];
22->17 [style = bold, label=""];
28->17 [style = bold, label=""];
3->17 [style = bold, label=""];
23->17 [style = bold, label=""];
14->3 [style = dotted, label="true"];
11->19 [style = dotted, label="true"];
14->13 [style = bold, label=""];
13->6 [style = bold, label=""];
20->23 [style = dotted, label="true"];
19->22 [style = bold, label=""];
24->27 [style = bold, label=""];
0->6 [style = solid, label="i"];
26->18 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
