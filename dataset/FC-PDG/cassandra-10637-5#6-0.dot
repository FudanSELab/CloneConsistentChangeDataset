digraph {
7 [style = filled, label = "testAbort['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test abort\",System.currentTimeMillis(),false,timeout,slowTimeout)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertFalse(operation.isCompleted())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test abort\",new ConstructionTime(System.currentTimeMillis()),timeout,slowTimeout)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "waitForOperationsToComplete(operation)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testAbortCrossNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test for cross node\",new ConstructionTime(System.currentTimeMillis(),true),timeout,slowTimeout)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,MonitoringTask.instance.getFailedOperations().size())@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testAbort['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(operation.isAborted())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->1 [style = solid, label="operation"];
6->1 [style = bold, label=""];
8->1 [style = bold, label=""];
0->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
8->1 [style = solid, label="operation"];
3->0 [style = bold, label=""];
7->6 [style = bold, label=""];
0->6 [style = dashed, label="0"];
0->1 [style = solid, label="operation"];
}
