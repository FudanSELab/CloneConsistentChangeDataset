digraph {
3 [style = filled, label = "String termStr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Analyzer oldAnalyzer = getAnalyzer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "forceAnalyzer != null && (analyzeWildcard || currentFieldType.getTextSearchInfo().isTokenized())@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return currentFieldType.normalizedWildcardQuery(termStr,getMultiTermRewriteMethod(),context)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "getRegexpQuerySingle['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String termStr@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "String field@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw e@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "\"*\".equals(termStr)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new ParseException(\"'*' or '?' not allowed as first character in WildcardQuery\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "forceAnalyzer != null@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RuntimeException e@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "getAllowLeadingWildcard() == false && (termStr.startsWith(\"*\") || termStr.startsWith(\"?\"))@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "currentFieldType == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "lenient@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "{setAnalyzer(oldAnalyzer)}@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "lenient@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return newLenientFieldQuery(field,e)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String termStr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1391582fieldtermStr@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "throw e@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return currentFieldType.wildcardQuery(termStr,getMultiTermRewriteMethod(),context)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "getWildcardQuerySingle['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "return existsQuery(field)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1391515currentFieldType.name()termStr@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MappedFieldType currentFieldType = queryBuilder.context.getFieldType(field)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "setAnalyzer(forceAnalyzer)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return newUnmappedFieldQuery(field)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String field@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{setAnalyzer(oldAnalyzer)}@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MappedFieldType currentFieldType = queryBuilder.context.getFieldType(field)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return currentFieldType.regexpQuery(termStr,RegExp.ALL,0,getMaxDeterminizedStates(),getMultiTermRewriteMethod(),context)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "getWildcardQuerySingle['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3->19 [style = solid, label="termStr"];
11->16 [style = bold, label=""];
5->8 [style = bold, label=""];
13->25 [style = bold, label=""];
4->10 [style = bold, label=""];
15->13 [style = bold, label=""];
9->0 [style = dotted, label="true"];
2->5 [style = bold, label=""];
19->18 [style = bold, label=""];
7->11 [style = bold, label=""];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
16->18 [style = bold, label=""];
26->32 [style = bold, label=""];
6->13 [style = solid, label="field"];
29->24 [style = solid, label="field"];
17->6 [style = dotted, label="true"];
20->9 [style = bold, label=""];
7->10 [style = bold, label=""];
11->10 [style = dotted, label="true"];
8->19 [style = bold, label=""];
29->25 [style = solid, label="field"];
23->10 [style = solid, label="oldAnalyzer"];
17->9 [style = bold, label=""];
1->15 [style = bold, label=""];
1->18 [style = solid, label="oldAnalyzer"];
14->15 [style = solid, label="currentFieldType"];
12->2 [style = dotted, label="true"];
1->31 [style = dotted, label="true"];
25->4 [style = bold, label=""];
30->4 [style = solid, label="termStr"];
32->27 [style = bold, label=""];
32->7 [style = bold, label=""];
20->21 [style = dotted, label="true"];
4->2 [style = bold, label=""];
21->2 [style = solid, label="termStr"];
30->25 [style = solid, label="termStr"];
31->15 [style = bold, label=""];
17->3 [style = dotted, label="true"];
8->22 [style = bold, label=""];
15->13 [style = dotted, label="true"];
3->9 [style = solid, label="termStr"];
28->29 [style = dotted, label="true"];
5->19 [style = bold, label=""];
28->30 [style = dotted, label="true"];
24->1 [style = solid, label="currentFieldType"];
32->27 [style = dotted, label="true"];
22->18 [style = bold, label=""];
23->24 [style = bold, label=""];
13->12 [style = bold, label=""];
7->11 [style = dotted, label="true"];
10->16 [style = bold, label=""];
12->4 [style = bold, label=""];
26->32 [style = dotted, label="true"];
11->10 [style = bold, label=""];
28->23 [style = bold, label=""];
0->1 [style = bold, label=""];
27->7 [style = bold, label=""];
15->4 [style = bold, label=""];
21->9 [style = solid, label="termStr"];
7->16 [style = dotted, label="true"];
19->22 [style = dashed, label="0"];
12->15 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
6->14 [style = solid, label="field"];
12->4 [style = dotted, label="true"];
1->14 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
24->1 [style = bold, label=""];
6->30 [style = dashed, label="0"];
5->8 [style = dotted, label="true"];
15->25 [style = dotted, label="true"];
9->1 [style = bold, label=""];
1->31 [style = bold, label=""];
5->22 [style = bold, label=""];
6->0 [style = solid, label="field"];
21->22 [style = solid, label="termStr"];
20->6 [style = dotted, label="true"];
29->31 [style = solid, label="field"];
26->7 [style = dotted, label="true"];
3->2 [style = solid, label="termStr"];
}
