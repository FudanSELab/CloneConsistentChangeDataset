digraph {
49 [style = filled, label = "assertEquals(numRows / cfs.metadata().params.minIndexInterval,sstable.getIndexSummarySize())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.minIndexInterval,sstable.getIndexSummarySize())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(cfs.metadata().params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.maxIndexInterval,sstable.getIndexSummarySize())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(originalMinIndexInterval * 2,sstable.getEffectiveIndexInterval(),0.001)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "sstables = new ArrayList<>(cfs.getLiveSSTables())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfname)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(cfs.metadata().params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "MigrationManager.announceTableUpdate(cfs.metadata().unbuild().minIndexInterval(originalMinIndexInterval).build(),true)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertEquals(cfs.metadata.params.maxIndexInterval,sstable.getEffectiveIndexInterval(),0.01)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.id,txn),(long)Math.ceil(summarySpace / 2.0))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "int numSSTables = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.id,txn),10)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(numRows / cfs.metadata().params.minIndexInterval,sstable.getIndexSummarySize())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(previousInterval * (1.0 / 1.5),sstable.getEffectiveIndexInterval(),0.001)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "long summarySpace = sstable.getIndexSummaryOffHeapSize()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.params.maxIndexInterval / 2)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 4)@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(numRows / originalMinIndexInterval,sstable.getIndexSummarySize())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace / 2.0))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "testChangeMinIndexInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sstable.overrideReadMeter(new RestorableMeter(100.0,100.0))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testChangeMaxIndexInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SSTableReader sstable = cfs.getLiveSSTables().iterator().next()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int numRows = 256@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace * 1.5))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(cfs.metadata().params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "MigrationManager.announceTableUpdate(cfs.metadata().unbuild().minIndexInterval(originalMinIndexInterval / 2).build(),true)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "Keyspace keyspace = Keyspace.open(ksname)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int previousSize = sstable.getIndexSummarySize()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "String cfname = CF_STANDARDLOWiINTERVAL@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "double previousInterval = sstable.getEffectiveIndexInterval()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cfs.metadata.maxIndexInterval(originalMinIndexInterval * 4)@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(numRows / (originalMinIndexInterval * 2),sstable.getIndexSummarySize())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "MigrationManager.announceTableUpdate(cfs.metadata().unbuild().maxIndexInterval(originalMinIndexInterval * 4).build(),true)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "testChangeMinIndexInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "MigrationManager.announceTableUpdate(cfs.metadata().unbuild().minIndexInterval(originalMinIndexInterval).build(),true)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.id,txn),summarySpace)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.params.maxIndexInterval * 2)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertEquals(cfs.metadata.params.maxIndexInterval,sstable.getEffectiveIndexInterval(),0.01)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 2)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.id,txn),(long)Math.ceil(summarySpace * 1.5))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(previousSize * 1.5,(double)sstable.getIndexSummarySize(),1)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.minIndexInterval,sstable.getIndexSummarySize())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "List<SSTableReader> sstables = new ArrayList<>(cfs.getLiveSSTables())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "createSSTables(ksname,cfname,numSSTables,numRows)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(cfs.metadata.params.maxIndexInterval,sstable.getEffectiveIndexInterval(),0.01)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10)@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(originalMinIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "MigrationManager.announceTableUpdate(cfs.metadata().unbuild().minIndexInterval(originalMinIndexInterval * 4).build(),true)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),summarySpace)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval / 2)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "MigrationManager.announceTableUpdate(cfs.metadata().unbuild().minIndexInterval(originalMinIndexInterval * 2).build(),true)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.maxIndexInterval,sstable.getIndexSummarySize())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String ksname = KEYSPACE1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "sstables = new ArrayList<>(cfs.getLiveSSTables())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(cfs.metadata().params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40->2 [style = bold, label=""];
6->43 [style = bold, label=""];
61->66 [style = bold, label=""];
37->27 [style = bold, label=""];
4->53 [style = bold, label=""];
23->48 [style = dashed, label="0"];
10->19 [style = bold, label=""];
14->17 [style = bold, label=""];
57->20 [style = bold, label=""];
45->48 [style = bold, label=""];
30->18 [style = bold, label=""];
27->15 [style = bold, label=""];
29->6 [style = bold, label=""];
28->9 [style = solid, label="numRows"];
28->49 [style = solid, label="numRows"];
34->41 [style = solid, label="previousInterval"];
28->33 [style = solid, label="numRows"];
12->1 [style = solid, label="previousSize"];
7->51 [style = solid, label="summarySpace"];
21->1 [style = bold, label=""];
60->63 [style = bold, label=""];
5->55 [style = dashed, label="0"];
8->39 [style = bold, label=""];
52->21 [style = bold, label=""];
2->25 [style = bold, label=""];
43->44 [style = bold, label=""];
17->27 [style = solid, label="cfname"];
28->47 [style = solid, label="numRows"];
7->52 [style = solid, label="summarySpace"];
9->24 [style = bold, label=""];
7->69 [style = dashed, label="0"];
28->26 [style = solid, label="numRows"];
10->11 [style = bold, label=""];
28->10 [style = solid, label="numRows"];
1->41 [style = bold, label=""];
58->16 [style = bold, label=""];
28->70 [style = solid, label="numRows"];
66->67 [style = bold, label=""];
19->20 [style = bold, label=""];
16->32 [style = bold, label=""];
17->37 [style = bold, label=""];
33->29 [style = bold, label=""];
56->51 [style = bold, label=""];
47->57 [style = bold, label=""];
3->23 [style = bold, label=""];
18->4 [style = bold, label=""];
44->4 [style = bold, label=""];
13->52 [style = dashed, label="0"];
48->55 [style = bold, label=""];
36->16 [style = bold, label=""];
51->25 [style = bold, label=""];
17->33 [style = solid, label="cfname"];
11->42 [style = dashed, label="0"];
20->7 [style = bold, label=""];
2->51 [style = dashed, label="0"];
39->46 [style = dashed, label="0"];
32->31 [style = bold, label=""];
9->22 [style = bold, label=""];
25->0 [style = bold, label=""];
4->24 [style = bold, label=""];
23->5 [style = bold, label=""];
47->42 [style = bold, label=""];
35->42 [style = bold, label=""];
26->3 [style = bold, label=""];
7->36 [style = solid, label="summarySpace"];
61->69 [style = bold, label=""];
42->47 [style = bold, label=""];
65->71 [style = bold, label=""];
49->50 [style = bold, label=""];
31->34 [style = bold, label=""];
15->33 [style = solid, label="numSSTables"];
12->13 [style = bold, label=""];
18->44 [style = dashed, label="0"];
28->61 [style = solid, label="numRows"];
15->28 [style = bold, label=""];
41->40 [style = bold, label=""];
11->10 [style = bold, label=""];
64->65 [style = bold, label=""];
3->45 [style = dashed, label="0"];
36->58 [style = dashed, label="0"];
50->35 [style = bold, label=""];
7->2 [style = solid, label="summarySpace"];
22->35 [style = bold, label=""];
7->36 [style = bold, label=""];
24->9 [style = bold, label=""];
54->14 [style = bold, label=""];
59->14 [style = bold, label=""];
68->60 [style = bold, label=""];
62->70 [style = bold, label=""];
5->8 [style = bold, label=""];
0->26 [style = bold, label=""];
7->58 [style = bold, label=""];
63->64 [style = bold, label=""];
19->57 [style = dashed, label="0"];
70->62 [style = bold, label=""];
41->56 [style = bold, label=""];
28->31 [style = solid, label="numRows"];
40->56 [style = dashed, label="0"];
18->68 [style = dashed, label="0"];
9->49 [style = dashed, label="0"];
34->12 [style = bold, label=""];
30->43 [style = dashed, label="0"];
22->50 [style = dashed, label="0"];
14->33 [style = solid, label="ksname"];
7->58 [style = solid, label="summarySpace"];
38->14 [style = bold, label=""];
71->69 [style = bold, label=""];
69->61 [style = bold, label=""];
67->62 [style = bold, label=""];
49->53 [style = bold, label=""];
53->49 [style = bold, label=""];
8->46 [style = bold, label=""];
24->53 [style = dashed, label="0"];
28->33 [style = bold, label=""];
7->13 [style = solid, label="summarySpace"];
12->52 [style = bold, label=""];
6->68 [style = bold, label=""];
26->45 [style = bold, label=""];
14->37 [style = solid, label="ksname"];
13->21 [style = bold, label=""];
10->47 [style = dashed, label="0"];
55->8 [style = bold, label=""];
35->11 [style = bold, label=""];
6->30 [style = bold, label=""];
}
