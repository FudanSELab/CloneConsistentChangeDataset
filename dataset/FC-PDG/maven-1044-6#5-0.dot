digraph {
12 [style = filled, label = "testBadRepositoryId['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertContains(result.getErrors().get(2),\"'build.plugins.plugin.version' for test:lmv must be a valid version\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertContains(result.getErrors().get(0),\"'repositories.repository.id' must not contain any of these characters\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertViolations(result,0,4,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertViolations(result,0,0,4)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertContains(result.getErrors().get(1),\"'build.plugins.plugin.version' for test:rmv must be a valid version\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertContains(result.getWarnings().get(3),\"'distributionManagement.snapshotRepository.id' must not contain any of these characters\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertContains(result.getWarnings().get(0),\"'repositories.repository.id' must not contain any of these characters\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testBadRepositoryId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertContains(result.getErrors().get(1),\"'pluginRepositories.pluginRepository.id' must not contain any of these characters\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testBadPluginVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertContains(result.getErrors().get(3),\"'distributionManagement.snapshotRepository.id' must not contain any of these characters\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "SimpleProblemCollector result = validate(\"bad-plugin-version.xml\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertContains(result.getWarnings().get(2),\"'distributionManagement.repository.id' must not contain any of these characters\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertViolations(result,0,4,0)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "SimpleProblemCollector result = validate(\"bad-repository-id.xml\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertContains(result.getWarnings().get(1),\"'pluginRepositories.pluginRepository.id' must not contain any of these characters\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertContains(result.getErrors().get(3),\"'build.plugins.plugin.version' for test:ifsc must not contain any of these characters\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertContains(result.getErrors().get(0),\"'build.plugins.plugin.version' for test:mip must be a valid version\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertContains(result.getErrors().get(2),\"'distributionManagement.repository.id' must not contain any of these characters\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
2->19 [style = dashed, label="0"];
2->4 [style = solid, label="result"];
3->1 [style = bold, label=""];
7->10 [style = bold, label=""];
2->8 [style = solid, label="result"];
0->15 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
6->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
9->7 [style = bold, label=""];
2->4 [style = bold, label=""];
17->19 [style = bold, label=""];
6->10 [style = dashed, label="0"];
19->13 [style = solid, label="result"];
5->2 [style = bold, label=""];
12->2 [style = bold, label=""];
6->16 [style = dashed, label="0"];
1->6 [style = bold, label=""];
19->13 [style = bold, label=""];
3->9 [style = dashed, label="0"];
4->8 [style = dashed, label="0"];
8->9 [style = bold, label=""];
14->18 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
