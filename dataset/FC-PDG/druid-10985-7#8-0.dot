digraph {
22 [style = filled, label = "lookupMap.put(\"testMockForAddGetRemove\",container)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(testContainer,lookupReferencesManager.get(\"test\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "EasyMock.replay(config)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(Optional.of(testContainer),lookupReferencesManager.get(\"test\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "lookupReferencesManager.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testRealModeWithMainThread['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "lookupMap.put(\"testMockForRealModeWithMainThread\",container)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testAddGetRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Thread.sleep(100)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(lookupReferencesManager.mainThread.isAlive())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createMock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "lookupReferencesManager.stop()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "!testContainer.equals(lookupReferencesManager.get(\"test\"))@@@23@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertFalse(lookupReferencesManager.mainThread.isAlive())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testAddGetRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Thread.sleep(100)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "lookupReferencesManager.get(\"test\") != null@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "LookupReferencesManager lookupReferencesManager = new LookupReferencesManager(new LookupConfig(temporaryFolder.newFolder().getAbsolutePath()),mapper,druidLeaderClient,config)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->16 [style = solid, label="responseHolder"];
8->30 [style = bold, label=""];
17->25 [style = bold, label=""];
31->37 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = solid, label="lookupExtractorFactory"];
36->40 [style = bold, label=""];
3->26 [style = dashed, label="0"];
4->18 [style = solid, label="testContainer"];
6->2 [style = solid, label="responseHolder"];
13->34 [style = solid, label="lookupExtractorFactory"];
38->29 [style = bold, label=""];
29->31 [style = bold, label=""];
8->3 [style = bold, label=""];
4->27 [style = solid, label="testContainer"];
29->37 [style = solid, label="lookupMap"];
37->21 [style = bold, label=""];
0->19 [style = solid, label="request"];
3->4 [style = dotted, label="true"];
40->32 [style = dotted, label="true"];
4->18 [style = bold, label=""];
20->3 [style = dashed, label="0"];
34->42 [style = bold, label=""];
16->19 [style = bold, label=""];
19->6 [style = bold, label=""];
5->17 [style = bold, label=""];
23->0 [style = bold, label=""];
22->23 [style = bold, label=""];
3->4 [style = bold, label=""];
26->4 [style = bold, label=""];
1->7 [style = solid, label="lookupExtractorFactory"];
39->33 [style = bold, label=""];
14->7 [style = bold, label=""];
2->13 [style = bold, label=""];
6->2 [style = bold, label=""];
20->27 [style = bold, label=""];
41->28 [style = bold, label=""];
18->20 [style = bold, label=""];
11->5 [style = bold, label=""];
0->10 [style = bold, label=""];
35->23 [style = bold, label=""];
3->36 [style = bold, label=""];
37->10 [style = solid, label="strResult"];
43->38 [style = bold, label=""];
23->6 [style = solid, label="strResult"];
34->42 [style = solid, label="testContainer"];
10->16 [style = bold, label=""];
15->25 [style = dashed, label="0"];
21->22 [style = bold, label=""];
17->40 [style = dashed, label="0"];
32->40 [style = bold, label=""];
21->23 [style = solid, label="lookupMap"];
40->41 [style = bold, label=""];
12->14 [style = bold, label=""];
17->15 [style = bold, label=""];
1->12 [style = bold, label=""];
40->32 [style = bold, label=""];
42->3 [style = bold, label=""];
7->21 [style = bold, label=""];
30->39 [style = bold, label=""];
13->39 [style = solid, label="lookupExtractorFactory"];
4->11 [style = solid, label="testContainer"];
11->27 [style = dashed, label="0"];
27->5 [style = bold, label=""];
24->1 [style = bold, label=""];
13->8 [style = bold, label=""];
9->1 [style = bold, label=""];
21->35 [style = bold, label=""];
21->0 [style = solid, label="request"];
33->34 [style = bold, label=""];
22->31 [style = dashed, label="0"];
20->11 [style = bold, label=""];
8->26 [style = bold, label=""];
}
