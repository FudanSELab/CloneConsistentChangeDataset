digraph {
14 [style = filled, label = "assertTrue(actual.next())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertNextWithoutRowCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i < 6@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFalse(actual.next())@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNextForSkipAll['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "selectStatement.setLimit(new LimitSegment(0,0,new NumberLiteralLimitValueSegment(0,0,Integer.MAX_VALUE),null))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertFalse(actual.next())@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "MySQLSelectStatement selectStatement = new MySQLSelectStatement()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "MergedResult actual = resultMerger.merge(Arrays.asList(mockQueryResult(),mockQueryResult(),mockQueryResult(),mockQueryResult()),selectStatementContext,null)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "i++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNextForSkipAll['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(new MySQLSelectStatement(),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralLimitValueSegment(0,0,Integer.MAX_VALUE),null,Collections.emptyList()))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(new MySQLSelectStatement(),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralLimitValueSegment(0,0,2),null,Collections.emptyList()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MergedResult actual = resultMerger.merge(Arrays.asList(mockQueryResult(),mockQueryResult(),mockQueryResult(),mockQueryResult()),selectStatementContext,null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->6 [style = solid, label="metaData"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
16->0 [style = bold, label=""];
5->9 [style = bold, label=""];
16->13 [style = dotted, label="true"];
4->17 [style = dashed, label="0"];
11->1 [style = bold, label=""];
2->1 [style = bold, label=""];
17->3 [style = solid, label="selectStatementContext"];
15->13 [style = solid, label="i"];
8->6 [style = bold, label=""];
3->15 [style = bold, label=""];
6->12 [style = solid, label="selectStatementContext"];
9->8 [style = bold, label=""];
15->16 [style = bold, label=""];
13->16 [style = solid, label="i"];
1->7 [style = bold, label=""];
13->16 [style = bold, label=""];
3->0 [style = bold, label=""];
1->17 [style = bold, label=""];
7->5 [style = bold, label=""];
12->10 [style = bold, label=""];
5->6 [style = solid, label="selectStatement"];
18->1 [style = bold, label=""];
15->16 [style = solid, label="i"];
16->14 [style = dotted, label="true"];
17->3 [style = bold, label=""];
16->14 [style = bold, label=""];
14->13 [style = bold, label=""];
4->3 [style = solid, label="selectStatementContext"];
6->12 [style = bold, label=""];
}
