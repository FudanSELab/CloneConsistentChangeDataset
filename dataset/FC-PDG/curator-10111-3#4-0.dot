digraph {
29 [style = filled, label = "LeaderSelector selector = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"true\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testErrorPolicies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "latch.addListener(listener)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "latch.start()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "latch = new LeaderLatch(client,\"/test\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "latch = new LeaderLatch(client,\"/test\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"release\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "states.clear()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "LeaderLatchListener listener = new LeaderLatchListener(){@Override public void isLeader(){states.add(\"true\")}@Override public void notLeader(){states.add(\"false\")}}@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testErrorPolicies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "LeaderLatch latch = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testErrorPolicies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(1000).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionErrorPolicy()).build()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "{CloseableUtils.closeQuietly(latch)CloseableUtils.closeQuietly(client)}@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "server = new TestingServer()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "changes.clear()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ConnectionStateListener stateListener = new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){states.add(newState.name())}}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "server.stop()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "client.start()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "latch.start()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "latch.addListener(listener)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "client.start()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"false\")@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "client.close()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "{CloseableUtils.closeQuietly(selector)CloseableUtils.closeQuietly(client)}@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "selector.start()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"false\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "timing.sleepABit()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "selector.start()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(1000).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardErrorPolicy()).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "server.close()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final BlockingQueue<String> states = Queues.newLinkedBlockingQueue()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "server.close()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "selector.close()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final BlockingQueue<String> changes = Queues.newLinkedBlockingQueue()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"true\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "LeaderSelectorListener listener = new LeaderSelectorListenerAdapter(){@Override public void takeLeadership(CuratorFramework client){changes.add(\"leader\")try {Thread.currentThread().join()}catch (InterruptedException e) }}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardErrorPolicy()).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionErrorPolicy()).build()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"release\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "latch.close()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->52 [style = dashed, label="0"];
2->6 [style = bold, label=""];
30->35 [style = dashed, label="0"];
28->62 [style = bold, label=""];
25->57 [style = dashed, label="0"];
47->37 [style = bold, label=""];
7->0 [style = dashed, label="0"];
36->33 [style = bold, label=""];
22->30 [style = bold, label=""];
49->8 [style = bold, label=""];
30->62 [style = dashed, label="0"];
44->51 [style = bold, label=""];
29->47 [style = dashed, label="0"];
18->22 [style = bold, label=""];
50->55 [style = bold, label=""];
6->41 [style = dashed, label="0"];
8->47 [style = bold, label=""];
10->57 [style = bold, label=""];
17->44 [style = bold, label=""];
4->3 [style = solid, label="listener"];
20->15 [style = bold, label=""];
24->27 [style = bold, label=""];
31->14 [style = bold, label=""];
14->16 [style = bold, label=""];
28->18 [style = bold, label=""];
59->60 [style = bold, label=""];
15->32 [style = solid, label="stateListener"];
31->51 [style = dashed, label="0"];
23->11 [style = solid, label="client"];
39->45 [style = bold, label=""];
29->23 [style = bold, label=""];
34->8 [style = bold, label=""];
15->24 [style = solid, label="stateListener"];
10->7 [style = bold, label=""];
21->36 [style = dashed, label="0"];
42->40 [style = bold, label=""];
2->43 [style = dashed, label="0"];
30->19 [style = bold, label=""];
22->28 [style = dashed, label="0"];
57->12 [style = bold, label=""];
61->32 [style = bold, label=""];
57->58 [style = solid, label="client"];
3->26 [style = solid, label="selector"];
19->59 [style = dashed, label="0"];
25->26 [style = solid, label="client"];
55->46 [style = solid, label="listener"];
41->38 [style = bold, label=""];
3->32 [style = dashed, label="0"];
48->28 [style = bold, label=""];
53->43 [style = bold, label=""];
32->17 [style = bold, label=""];
52->15 [style = bold, label=""];
60->54 [style = bold, label=""];
16->36 [style = bold, label=""];
23->20 [style = bold, label=""];
1->8 [style = bold, label=""];
14->56 [style = dashed, label="0"];
9->31 [style = bold, label=""];
33->39 [style = dashed, label="0"];
18->48 [style = dashed, label="0"];
38->48 [style = bold, label=""];
54->0 [style = bold, label=""];
23->37 [style = dashed, label="0"];
19->0 [style = bold, label=""];
33->26 [style = bold, label=""];
45->58 [style = bold, label=""];
11->5 [style = bold, label=""];
40->39 [style = bold, label=""];
57->32 [style = solid, label="client"];
17->3 [style = bold, label=""];
43->41 [style = bold, label=""];
37->52 [style = bold, label=""];
13->9 [style = bold, label=""];
22->35 [style = bold, label=""];
62->59 [style = bold, label=""];
32->58 [style = solid, label="latch"];
7->12 [style = bold, label=""];
37->50 [style = solid, label="client"];
21->33 [style = bold, label=""];
35->19 [style = bold, label=""];
46->53 [style = bold, label=""];
25->32 [style = bold, label=""];
51->56 [style = bold, label=""];
5->53 [style = dashed, label="0"];
56->42 [style = bold, label=""];
12->61 [style = bold, label=""];
27->4 [style = bold, label=""];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
55->46 [style = bold, label=""];
12->25 [style = bold, label=""];
16->21 [style = bold, label=""];
15->24 [style = bold, label=""];
27->50 [style = bold, label=""];
4->11 [style = solid, label="listener"];
15->12 [style = solid, label="stateListener"];
21->40 [style = dashed, label="0"];
3->13 [style = bold, label=""];
55->17 [style = solid, label="listener"];
4->11 [style = bold, label=""];
8->29 [style = bold, label=""];
25->3 [style = solid, label="client"];
6->28 [style = bold, label=""];
}
