digraph {
7 [style = filled, label = "testReset_new['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(3,stopwatch.elapsedTime(NANOSECONDS))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,stopwatch.elapsedTime(NANOSECONDS))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testReset_new['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(3,stopwatch.elapsed(NANOSECONDS))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(2,stopwatch.elapsedTime(NANOSECONDS))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ticker.advance(3)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stopwatch.start()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,stopwatch.elapsed(NANOSECONDS))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "stopwatch.reset()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(0,stopwatch.elapsedTime(NANOSECONDS))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testReset_whileRunning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ticker.advance(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "stopwatch.start()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ticker.advance(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(0,stopwatch.elapsedTime(NANOSECONDS))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(stopwatch.isRunning())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ticker.advance(2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
16->3 [style = bold, label=""];
9->0 [style = bold, label=""];
0->13 [style = bold, label=""];
7->0 [style = bold, label=""];
12->16 [style = bold, label=""];
4->2 [style = bold, label=""];
8->14 [style = dashed, label="0"];
6->10 [style = dashed, label="0"];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
13->17 [style = bold, label=""];
3->5 [style = bold, label=""];
17->12 [style = bold, label=""];
1->6 [style = bold, label=""];
5->2 [style = bold, label=""];
15->0 [style = bold, label=""];
2->14 [style = bold, label=""];
10->4 [style = bold, label=""];
8->11 [style = dashed, label="0"];
1->10 [style = bold, label=""];
2->11 [style = bold, label=""];
2->8 [style = bold, label=""];
}
