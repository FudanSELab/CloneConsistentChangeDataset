digraph {
20 [style = filled, label = "visitUnaryMath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(!(boolean)constantValue))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "Consumer<ExpressionNode> scope@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "operation == Operation.OR@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "throw irUnaryMathNode.getLocation().createError(new IllegalStateException(\"constant folding error: \" + \"unexpected type (\" + PainlessLookupUtility.typeToCanonicalTypeName(type) + \"( for \" + \"unary operation (\" + operation.symbol + \"( on \" + \"constant (\" + irConstantNode.getDecorationString() + \"(\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Consumer<ExpressionNode> scope@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "type == @@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "scope.accept(irConstantNode)@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "operation == Operation.ADD@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "type == @@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(-(int)constantValue))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "UnaryMathNode irUnaryMathNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "operation == Operation.BWNOT@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "scope.accept(irLeftConstantNode)@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "irBooleanNode.getRightNode().visit(this,null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Consumer<ExpressionNode> scope@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "throw irBooleanNode.getLocation().createError(new IllegalStateException(\"constant folding error: \" + \"unexpected type (\" + PainlessLookupUtility.typeToCanonicalTypeName(type) + \"( for \" + \"binary operation (\" + operation.symbol + \"( on \" + \"constants (\" + irLeftConstantNode.getDecorationString() + \"( \" + \"and (\" + irRightConstantNode.getDecorationString() + \"(\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "throw irUnaryMathNode.getLocation().createError(new IllegalStateException(\"constant folding error: \" + \"unexpected type (\" + PainlessLookupUtility.typeToCanonicalTypeName(type) + \"( for \" + \"unary operation (\" + operation.symbol + \"( on \" + \"constant (\" + irConstantNode.getDecorationString() + \"(\"))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "BooleanNode irBooleanNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "operation == Operation.NOT@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "irUnaryMathNode.getChildNode().visit(this,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "throw irUnaryMathNode.getLocation().createError(new IllegalStateException(\"constant folding error: \" + \"unexpected type (\" + PainlessLookupUtility.typeToCanonicalTypeName(type) + \"( for \" + \"unary operation (\" + operation.symbol + \"( on \" + \"constant (\" + irConstantNode.getDecorationString() + \"(\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "type == @@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Operation operation = irUnaryMathNode.getDecorationValue()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "irLeftConstantNode.attachDecoration(new IRDConstant((boolean)irLeftConstantNode.getDecorationValue() && (boolean)irRightConstantNode.getDecorationValue()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(-(double)constantValue))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "irBooleanNode.getLeftNode().visit(this,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "type == @@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ConstantNode irRightConstantNode = (ConstantNode)irBooleanNode.getRightNode()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "operation == Operation.AND@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Class<?> type = irBooleanNode.getDecorationValue()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(((boolean)constantValue) == false))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "type == @@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "type == @@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "type == @@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Class<?> type = irUnaryMathNode.getDecorationValue()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(~(int)constantValue))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ConstantNode irConstantNode = (ConstantNode)irUnaryMathNode.getChildNode()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "visitUnaryMath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "operation == Operation.SUB@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "visitBoolean['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "ConstantNode irLeftConstantNode = (ConstantNode)irBooleanNode.getLeftNode()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Operation operation = irBooleanNode.getDecorationValue()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "scope.accept(irConstantNode)@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "type == @@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "scope.accept(irConstantNode)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(-(long)constantValue))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "irLeftConstantNode.attachDecoration(new IRDConstant((boolean)irLeftConstantNode.getDecorationValue() || (boolean)irRightConstantNode.getDecorationValue()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "irBooleanNode.getLeftNode() instanceof ConstantNode && irBooleanNode.getRightNode() instanceof ConstantNode@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(-(float)constantValue))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "scope.accept(irLeftConstantNode)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "type == @@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "irConstantNode.attachDecoration(new IRDConstant(~(long)constantValue))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "irUnaryMathNode.getChildNode() instanceof ConstantNode@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "throw irBooleanNode.getLocation().createError(new IllegalStateException(\"constant folding error: \" + \"unexpected type (\" + PainlessLookupUtility.typeToCanonicalTypeName(type) + \"( for \" + \"boolean operation (\" + operation.symbol + \"( on \" + \"constants (\" + irLeftConstantNode.getDecorationString() + \"( \" + \"and (\" + irRightConstantNode.getDecorationString() + \"(\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "scope.accept(irConstantNode)@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Object constantValue = irConstantNode.getDecorationValue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->22 [style = bold, label=""];
27->1 [style = dotted, label="true"];
53->46 [style = dotted, label="true"];
4->31 [style = solid, label="type"];
43->56 [style = dotted, label="true"];
42->45 [style = bold, label=""];
55->45 [style = solid, label="type"];
29->28 [style = solid, label="irConstantNode"];
11->29 [style = bold, label=""];
0->2 [style = dotted, label="false"];
55->51 [style = bold, label=""];
51->48 [style = dotted, label="true"];
28->39 [style = dashed, label="0"];
31->21 [style = bold, label=""];
53->54 [style = bold, label=""];
54->39 [style = solid, label="irLeftConstantNode"];
53->55 [style = dotted, label="true"];
4->23 [style = solid, label="type"];
25->18 [style = dotted, label="true"];
2->25 [style = dotted, label="true"];
29->6 [style = bold, label=""];
31->21 [style = dotted, label="true"];
15->8 [style = dotted, label="true"];
11->0 [style = dotted, label="true"];
14->9 [style = bold, label=""];
46->41 [style = solid, label="operation"];
55->42 [style = solid, label="type"];
27->19 [style = bold, label=""];
41->42 [style = dotted, label="true"];
26->28 [style = bold, label=""];
2->41 [style = dashed, label="0"];
5->33 [style = dotted, label="false"];
2->25 [style = bold, label=""];
53->49 [style = dotted, label="true"];
1->35 [style = dotted, label="true"];
54->49 [style = bold, label=""];
29->9 [style = solid, label="irConstantNode"];
26->45 [style = dashed, label="0"];
5->33 [style = bold, label=""];
53->51 [style = dotted, label="true"];
0->17 [style = bold, label=""];
51->44 [style = bold, label=""];
44->50 [style = bold, label=""];
1->35 [style = bold, label=""];
46->51 [style = solid, label="operation"];
13->11 [style = bold, label=""];
44->38 [style = bold, label=""];
4->0 [style = bold, label=""];
8->22 [style = bold, label=""];
35->28 [style = bold, label=""];
2->27 [style = dotted, label="false"];
21->22 [style = bold, label=""];
4->3 [style = solid, label="type"];
49->46 [style = bold, label=""];
44->38 [style = dotted, label="true"];
30->2 [style = solid, label="operation"];
18->9 [style = bold, label=""];
42->52 [style = dotted, label="true"];
42->45 [style = dotted, label="false"];
2->27 [style = bold, label=""];
4->25 [style = solid, label="type"];
43->47 [style = dotted, label="true"];
17->23 [style = dotted, label="false"];
23->31 [style = dotted, label="false"];
54->48 [style = solid, label="irLeftConstantNode"];
10->35 [style = dashed, label="0"];
4->5 [style = solid, label="type"];
23->31 [style = bold, label=""];
20->13 [style = bold, label=""];
1->10 [style = dotted, label="true"];
40->53 [style = bold, label=""];
11->30 [style = dotted, label="true"];
42->52 [style = bold, label=""];
11->29 [style = dotted, label="true"];
25->18 [style = bold, label=""];
23->32 [style = bold, label=""];
4->46 [style = dashed, label="0"];
11->4 [style = dotted, label="true"];
20->7 [style = dotted, label="true"];
50->48 [style = bold, label=""];
4->26 [style = solid, label="type"];
38->48 [style = bold, label=""];
15->3 [style = bold, label=""];
1->26 [style = dotted, label="false"];
17->23 [style = bold, label=""];
19->16 [style = bold, label=""];
23->32 [style = dotted, label="true"];
4->17 [style = solid, label="type"];
10->52 [style = dashed, label="0"];
17->51 [style = dashed, label="0"];
36->13 [style = bold, label=""];
30->19 [style = solid, label="operation"];
2->9 [style = dotted, label="true"];
11->6 [style = dotted, label="true"];
25->5 [style = dotted, label="false"];
31->15 [style = dotted, label="false"];
25->5 [style = bold, label=""];
15->8 [style = bold, label=""];
22->48 [style = dashed, label="0"];
17->24 [style = dotted, label="true"];
45->39 [style = bold, label=""];
46->55 [style = bold, label=""];
27->19 [style = dotted, label="false"];
5->14 [style = dotted, label="true"];
51->41 [style = dotted, label="false"];
13->37 [style = dashed, label="0"];
27->1 [style = bold, label=""];
52->39 [style = bold, label=""];
15->3 [style = dotted, label="false"];
10->28 [style = bold, label=""];
30->27 [style = solid, label="operation"];
29->22 [style = solid, label="irConstantNode"];
55->50 [style = solid, label="type"];
4->1 [style = solid, label="type"];
0->2 [style = bold, label=""];
30->0 [style = solid, label="operation"];
43->37 [style = bold, label=""];
41->39 [style = dotted, label="true"];
5->14 [style = bold, label=""];
1->26 [style = bold, label=""];
33->9 [style = bold, label=""];
24->22 [style = bold, label=""];
3->22 [style = bold, label=""];
31->15 [style = bold, label=""];
36->12 [style = dotted, label="true"];
29->16 [style = solid, label="irConstantNode"];
44->50 [style = dotted, label="false"];
0->22 [style = dotted, label="true"];
27->28 [style = dotted, label="true"];
17->24 [style = bold, label=""];
3->50 [style = dashed, label="0"];
4->15 [style = solid, label="type"];
30->4 [style = bold, label=""];
6->35 [style = solid, label="constantValue"];
19->16 [style = dotted, label="true"];
0->17 [style = dotted, label="true"];
4->33 [style = solid, label="type"];
12->56 [style = dashed, label="0"];
20->12 [style = dotted, label="true"];
51->44 [style = dotted, label="true"];
53->54 [style = dotted, label="true"];
1->10 [style = bold, label=""];
36->34 [style = dotted, label="true"];
51->41 [style = bold, label=""];
37->40 [style = bold, label=""];
55->44 [style = solid, label="type"];
41->42 [style = bold, label=""];
6->30 [style = bold, label=""];
}
