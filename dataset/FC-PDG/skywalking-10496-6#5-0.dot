digraph {
8 [style = filled, label = "when(DefaultScopeDefine.inServiceInstanceCatalog(0)).thenReturn(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "notifyHandler.notify(metrics)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ArgumentCaptor<MetaInAlarm> metaCaptor = ArgumentCaptor.forClass()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ServiceInstanceInventory instanceInventory = mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(rule).in(metaCaptor.capture(),any())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "prepareNotify()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ArgumentCaptor<MetaInAlarm> metaCaptor = ArgumentCaptor.forClass()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(mockId + \"\",metaInAlarm.getId0())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testNotifyWithEndpointCatalog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String metricsName = \"endpoint-metrics\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testNotifyWithServiceInstanceCatalog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT,metaInAlarm.getScopeId())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String serviceInventoryName = \"service-inventory-name\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String endpointInventoryName = \"endpoint-inventory-name\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(instanceInventory.getName()).thenReturn(instanceInventoryName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "when(serviceInventoryCache.get(anyInt())).thenReturn(serviceInventory)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(endpointInventoryName + \" in \" + serviceInventoryName,metaInAlarm.getName())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MetaInAlarm metaInAlarm = metaCaptor.getValue()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(metadata.getMetricsName()).thenReturn(metricsName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT_CATALOG_NAME,metaInAlarm.getScope())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "when(DefaultScopeDefine.inEndpointCatalog(0)).thenReturn(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testNotifyWithServiceInstanceCatalog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "notifyHandler.notify(metrics)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(endpointInventory.getName()).thenReturn(endpointInventoryName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(metaInAlarm instanceof EndpointMetaInAlarm)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String metricsName = \"service-instance-metrics\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "EndpointInventory endpointInventory = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(DefaultScopeDefine.SERVICE_INSTANCE,metaInAlarm.getScopeId())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ServiceInventory serviceInventory = mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(metricsName,metaInAlarm.getMetricsName())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(mockId,metaInAlarm.getId0())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "MetaInAlarm metaInAlarm = metaCaptor.getValue()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(endpointInventoryCache.get(anyInt())).thenReturn(endpointInventory)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "when(serviceInventory.getName()).thenReturn(serviceInventoryName)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verify(rule).in(metaCaptor.capture(),any())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(instanceInventoryName,metaInAlarm.getName())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String instanceInventoryName = \"instance-inventory-name\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(serviceInstanceInventoryCache.get(anyInt())).thenReturn(instanceInventory)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->21 [style = bold, label=""];
14->1 [style = solid, label="instanceInventoryName"];
35->33 [style = bold, label=""];
36->27 [style = bold, label=""];
7->8 [style = bold, label=""];
13->30 [style = bold, label=""];
18->2 [style = bold, label=""];
10->6 [style = bold, label=""];
9->4 [style = bold, label=""];
0->7 [style = solid, label="metricsName"];
19->5 [style = bold, label=""];
21->26 [style = solid, label="endpointInventoryName"];
2->11 [style = bold, label=""];
0->7 [style = bold, label=""];
37->23 [style = solid, label="endpointInventory"];
9->20 [style = bold, label=""];
25->7 [style = bold, label=""];
6->32 [style = dashed, label="0"];
23->16 [style = bold, label=""];
8->29 [style = dashed, label="0"];
17->12 [style = bold, label=""];
22->35 [style = bold, label=""];
11->16 [style = bold, label=""];
25->31 [style = solid, label="metricsName"];
37->26 [style = bold, label=""];
31->32 [style = bold, label=""];
3->5 [style = bold, label=""];
25->7 [style = solid, label="metricsName"];
21->32 [style = solid, label="endpointInventoryName"];
34->35 [style = solid, label="serviceInventoryName"];
14->1 [style = bold, label=""];
0->25 [style = dashed, label="0"];
5->0 [style = bold, label=""];
20->13 [style = bold, label=""];
16->30 [style = dashed, label="0"];
13->27 [style = dashed, label="0"];
10->31 [style = dashed, label="0"];
15->14 [style = bold, label=""];
5->25 [style = bold, label=""];
26->34 [style = bold, label=""];
33->23 [style = bold, label=""];
32->28 [style = bold, label=""];
1->17 [style = bold, label=""];
7->29 [style = bold, label=""];
12->18 [style = bold, label=""];
14->10 [style = solid, label="instanceInventoryName"];
4->13 [style = bold, label=""];
11->16 [style = solid, label="metaInAlarm"];
4->20 [style = dashed, label="0"];
34->32 [style = solid, label="serviceInventoryName"];
34->22 [style = bold, label=""];
13->10 [style = bold, label=""];
13->30 [style = solid, label="metaInAlarm"];
24->5 [style = bold, label=""];
22->33 [style = solid, label="serviceInventory"];
15->17 [style = solid, label="instanceInventory"];
0->9 [style = solid, label="metricsName"];
21->37 [style = bold, label=""];
30->36 [style = bold, label=""];
27->31 [style = bold, label=""];
8->15 [style = bold, label=""];
1->26 [style = dashed, label="0"];
16->9 [style = bold, label=""];
}
