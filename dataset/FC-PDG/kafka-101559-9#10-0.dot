digraph {
14 [style = filled, label = "table.groupBy(MockMapper.selectValueKeyValueMapper(),Serialized.with(Serdes.String(),Serdes.String())).count(Materialized.as(\"count\").withKeySerde(Serdes.String()).withValueSerde(Serdes.Long()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "processData(topic)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(counts.get(\"2\"),equalTo(2L))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(count.get(\"1\"),equalTo(3L))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(count.get(\"2\"),equalTo(1L))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "processData()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldCountAndMaterializeResults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final KeyValueStore<String,Long> count = (KeyValueStore<String,Long>)driver.allStateStores().get(\"count\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "groupedStream.count(Materialized.as(\"count\").withKeySerde(Serdes.String()))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(counts.get(\"1\"),equalTo(3L))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(count.get(\"3\"),equalTo(2L))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final KTable<String,String> table = builder.table(topic,Consumed.with(Serdes.String(),Serdes.String()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final KeyValueStore<String,Long> counts = (KeyValueStore<String,Long>)driver.allStateStores().get(\"count\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "shouldCountAndMaterializeResults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "groupedStream.count(Materialized.as(\"count\").withKeySerde(Serdes.String()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "shouldCountAndMaterializeResults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "@SuppressWarnings(\"unchecked\") final KeyValueStore<String,Long> count = (KeyValueStore<String,Long>)driver.allStateStores().get(\"count\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
9->3 [style = bold, label=""];
5->2 [style = bold, label=""];
15->10 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
6->16 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
2->9 [style = bold, label=""];
5->7 [style = dashed, label="0"];
10->16 [style = bold, label=""];
3->1 [style = bold, label=""];
1->10 [style = dashed, label="0"];
11->14 [style = bold, label=""];
4->5 [style = bold, label=""];
7->2 [style = bold, label=""];
13->11 [style = bold, label=""];
14->12 [style = bold, label=""];
8->7 [style = bold, label=""];
12->15 [style = bold, label=""];
}
