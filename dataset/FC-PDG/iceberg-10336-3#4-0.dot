digraph {
6 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(\"Actual results should have two rows\",2,actual.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testAllEntriesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "testAllDataFilesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rows.forEach(null)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_data_files\")).orderBy(\"file_path\").collectAsList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testAllEntriesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i += 1@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Files table should have two rows\",2,expected.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"all_data_files\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "actual.sort(Comparator.comparing(null))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i += 1@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "i < expected.size()@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"all_entries\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int i = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "table.refresh()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < expected.size()@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "expected.add((GenericData.Record)record.get(\"data_file\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"entries_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestHelpers.assertEqualsSafe(entriesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expected.add(record)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->32 [style = solid, label="i"];
24->21 [style = bold, label=""];
35->33 [style = bold, label=""];
8->11 [style = solid, label="i"];
23->21 [style = solid, label="i"];
19->6 [style = bold, label=""];
9->5 [style = dotted, label="true"];
31->28 [style = dotted, label="true"];
0->36 [style = dashed, label="0"];
39->27 [style = bold, label=""];
31->32 [style = bold, label=""];
12->16 [style = bold, label=""];
17->4 [style = bold, label=""];
4->7 [style = solid, label="tableIdentifier"];
32->28 [style = bold, label=""];
38->32 [style = solid, label="i"];
31->32 [style = dotted, label="true"];
20->2 [style = bold, label=""];
18->29 [style = dashed, label="0"];
11->21 [style = solid, label="i"];
41->40 [style = bold, label=""];
27->33 [style = bold, label=""];
43->6 [style = bold, label=""];
40->36 [style = solid, label="tableIdentifier"];
14->39 [style = bold, label=""];
9->11 [style = dotted, label="true"];
25->14 [style = bold, label=""];
23->24 [style = solid, label="i"];
4->19 [style = solid, label="tableIdentifier"];
1->14 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = solid, label="tableIdentifier"];
11->24 [style = solid, label="i"];
37->38 [style = bold, label=""];
24->23 [style = dotted, label="true"];
1->27 [style = dashed, label="0"];
0->12 [style = bold, label=""];
3->8 [style = bold, label=""];
38->31 [style = bold, label=""];
13->30 [style = dashed, label="0"];
30->42 [style = bold, label=""];
13->15 [style = bold, label=""];
4->18 [style = solid, label="tableIdentifier"];
16->19 [style = bold, label=""];
40->29 [style = solid, label="tableIdentifier"];
3->26 [style = dashed, label="0"];
29->36 [style = bold, label=""];
11->24 [style = bold, label=""];
8->9 [style = solid, label="i"];
35->27 [style = bold, label=""];
40->6 [style = solid, label="tableIdentifier"];
10->13 [style = bold, label=""];
15->14 [style = bold, label=""];
14->25 [style = bold, label=""];
40->29 [style = bold, label=""];
28->31 [style = solid, label="i"];
42->14 [style = bold, label=""];
9->5 [style = bold, label=""];
38->31 [style = solid, label="i"];
11->5 [style = bold, label=""];
4->18 [style = bold, label=""];
40->34 [style = solid, label="tableIdentifier"];
28->31 [style = bold, label=""];
11->32 [style = dashed, label="0"];
27->39 [style = bold, label=""];
16->43 [style = dashed, label="0"];
5->11 [style = solid, label="i"];
8->9 [style = bold, label=""];
9->11 [style = bold, label=""];
13->30 [style = bold, label=""];
23->24 [style = bold, label=""];
7->10 [style = bold, label=""];
24->21 [style = dotted, label="true"];
5->9 [style = bold, label=""];
16->43 [style = bold, label=""];
35->39 [style = bold, label=""];
27->35 [style = bold, label=""];
14->1 [style = bold, label=""];
27->35 [style = dotted, label="true"];
4->40 [style = dashed, label="0"];
5->11 [style = bold, label=""];
36->34 [style = bold, label=""];
40->10 [style = solid, label="tableIdentifier"];
34->16 [style = bold, label=""];
5->9 [style = solid, label="i"];
22->4 [style = bold, label=""];
25->8 [style = bold, label=""];
6->7 [style = bold, label=""];
1->20 [style = bold, label=""];
26->37 [style = bold, label=""];
21->23 [style = bold, label=""];
33->26 [style = bold, label=""];
18->0 [style = bold, label=""];
}
