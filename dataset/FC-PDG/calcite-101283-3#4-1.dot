digraph {
7 [style = filled, label = "testSqlNodeLiteral['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final RexNode literal = rexBuilder.makeZeroLiteral(integerDataType)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final SqlNode literal = SqlLiteral.createExactNumeric(\"0\",SqlParserPos.ZERO)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSqlNodeLiteral['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertSame(true,SqlUtil.isLiteral(literal,true))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final RexNode castCastLiteral = rexBuilder.makeCall(integerDataType,SqlStdOperatorTable.CAST,Lists.newArrayList(castLiteral))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testRexNodeLiteral['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertSame(false,RexUtil.isLiteral(castCastLiteral,true))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final SqlNode castLiteral = SqlStdOperatorTable.CAST.createCall(SqlParserPos.ZERO,literal,integerType)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RexNode castLiteral = rexBuilder.makeCall(integerDataType,SqlStdOperatorTable.CAST,Lists.newArrayList(literal))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertSame(false,SqlUtil.isLiteral(castCastLiteral,true))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSame(true,RexUtil.isLiteral(castLiteral,true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertSame(true,SqlUtil.isLiteral(castLiteral,true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final SqlNode castCastLiteral = SqlStdOperatorTable.CAST.createCall(SqlParserPos.ZERO,castLiteral,integerType)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertSame(true,RexUtil.isLiteral(literal,true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
8->10 [style = bold, label=""];
9->12 [style = solid, label="literal"];
6->8 [style = dashed, label="0"];
12->8 [style = solid, label="castLiteral"];
7->1 [style = bold, label=""];
4->6 [style = bold, label=""];
3->2 [style = solid, label="castCastLiteral"];
1->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
3->13 [style = dashed, label="0"];
13->10 [style = solid, label="castCastLiteral"];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->2 [style = bold, label=""];
12->13 [style = solid, label="castLiteral"];
0->3 [style = solid, label="castLiteral"];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
1->4 [style = solid, label="literal"];
9->11 [style = solid, label="literal"];
11->8 [style = bold, label=""];
14->9 [style = bold, label=""];
1->0 [style = solid, label="literal"];
9->12 [style = bold, label=""];
4->11 [style = dashed, label="0"];
0->6 [style = solid, label="castLiteral"];
}
