digraph {
3 [style = filled, label = "testQuery(\"SELECT dim1, dim2, l1.v, l2.v\" + \"FROM foo\" + \"LEFT JOIN lookup.lookyloo l1 ON foo.dim1 = l1.k\" + \"LEFT JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\",queryContext,ImmutableList.of(newScanQueryBuilder().dataSource(join(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"dim1\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.LEFT),new LookupDataSource(\"lookyloo\"),\"_j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"_j0.k\")),JoinType.LEFT)).intervals(querySegmentSpec(Filtration.eternity())).columns(\"_j0.v\",\"dim1\",\"dim2\",\"j0.v\").context(queryContext).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f82b2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f82b9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f82c0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f82c7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f82ce,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f82d5))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testQuery(\"SELECT dim2, l1.v, l2.v\" + \"FROM foo\" + \"LEFT JOIN lookup.lookyloo l1 ON foo.dim2 = l1.k\" + \"LEFT JOIN lookup.lookyloo l2 ON l1.k = l2.k\",ImmutableList.of(newScanQueryBuilder().dataSource(join(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.LEFT),new LookupDataSource(\"lookyloo\"),\"_j0.\",equalsCondition(DruidExpression.fromColumn(\"j0.k\"),DruidExpression.fromColumn(\"_j0.k\")),JoinType.LEFT)).intervals(querySegmentSpec(Filtration.eternity())).columns(\"_j0.v\",\"dim2\",\"j0.v\").context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f832f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f8335,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f833b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f8341,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f8347,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f834d))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,Object> queryContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testLeftJoinLookupOntoLookupUsingJoinOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testQuery(\"SELECT dim1, dim2, l1.v, l2.v\" + \"FROM foo\" + \"LEFT JOIN lookup.lookyloo l1 ON foo.dim1 = l1.k\" + \"LEFT JOIN lookup.lookyloo l2 ON foo.dim2 = l2.k\",ImmutableList.of(newScanQueryBuilder().dataSource(join(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromColumn(\"dim1\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.LEFT),new LookupDataSource(\"lookyloo\"),\"_j0.\",equalsCondition(DruidExpression.fromColumn(\"dim2\"),DruidExpression.fromColumn(\"_j0.k\")),JoinType.LEFT)).intervals(querySegmentSpec(Filtration.eternity())).columns(\"_j0.v\",\"dim1\",\"dim2\",\"j0.v\").context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f8231,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f8238,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f823f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f8246,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f824d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f8254))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testLeftJoinTwoLookupsUsingJoinOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testLeftJoinTwoLookupsUsingJoinOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
2->3 [style = solid, label="queryContext"];
1->3 [style = dashed, label="0"];
5->6 [style = bold, label=""];
1->6 [style = dashed, label="0"];
0->1 [style = bold, label=""];
4->2 [style = dotted, label="true"];
}
