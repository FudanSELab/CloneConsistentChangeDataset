digraph {
3 [style = filled, label = "sql(sql).ok(expected)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String sql = \"select *\" + \" from \"employee\" match_recognize\" + \" (\" + \" order by \"hire_date\"\" + \" ALL ROWS PER MATCH\" + \" pattern (strt down+ up+) within interval '3:12:22.123' hour to second\" + \" define\" + \" down as down.\"salary\" < PREV(down.\"salary\"),\" + \" up as up.\"salary\" > prev(up.\"salary\")\" + \" ) mr\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testMatchRecognizeRowsPerMatch2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testMatchRecognizeRowsPerMatch2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testMatchRecognizeWithin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String expected = \"SELECT *\" + \"FROM (SELECT *\" + \"FROM \"foodmart\".\"employee\") \" + \"MATCH_RECOGNIZE(\" + \"ORDER BY \"hire_date\"\" + \"ALL ROWS PER MATCH\" + \"AFTER MATCH SKIP TO NEXT ROW\" + \"PATTERN (\"STRT\" \"DOWN\" + \"UP\" +) WITHIN INTERVAL '3:12:22.123' HOUR TO SECOND\" + \"DEFINE \" + \"\"DOWN\" AS PREV(\"DOWN\".\"salary\", 0) < \" + \"PREV(\"DOWN\".\"salary\", 1), \" + \"\"UP\" AS PREV(\"UP\".\"salary\", 0) > \" + \"PREV(\"UP\".\"salary\", 1))\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String sql = \"select *\" + \" from \"product\" match_recognize\" + \" (\" + \" measures STRT.\"net_weight\" as start_nw,\" + \" LAST(DOWN.\"net_weight\") as bottom_nw,\" + \" SUM(STDN.\"net_weight\") as avg_stdn\" + \" ALL ROWS PER MATCH\" + \" pattern (strt down+ up+)\" + \" subset stdn = (strt, down), stdn2 = (strt, down)\" + \" define\" + \" down as down.\"net_weight\" < PREV(down.\"net_weight\"),\" + \" up as up.\"net_weight\" > prev(up.\"net_weight\")\" + \" ) mr\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String expected = \"SELECT *\" + \"FROM (SELECT *\" + \"FROM \"foodmart\".\"product\") \" + \"MATCH_RECOGNIZE(\" + \"MEASURES \" + \"RUNNING \"STRT\".\"net_weight\" AS \"START_NW\", \" + \"RUNNING LAST(\"DOWN\".\"net_weight\", 0) AS \"BOTTOM_NW\", \" + \"RUNNING SUM(\"STDN\".\"net_weight\") AS \"AVG_STDN\"\" + \"ALL ROWS PER MATCH\" + \"AFTER MATCH SKIP TO NEXT ROW\" + \"PATTERN (\"STRT\" \"DOWN\" + \"UP\" +)\" + \"SUBSET \"STDN\" = (\"DOWN\", \"STRT\"), \"STDN2\" = (\"DOWN\", \"STRT\")\" + \"DEFINE \" + \"\"DOWN\" AS PREV(\"DOWN\".\"net_weight\", 0) < \" + \"PREV(\"DOWN\".\"net_weight\", 1), \" + \"\"UP\" AS PREV(\"UP\".\"net_weight\", 0) > \" + \"PREV(\"UP\".\"net_weight\", 1))\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->7 [style = bold, label=""];
6->5 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
7->3 [style = solid, label="expected"];
0->3 [style = solid, label="expected"];
7->3 [style = bold, label=""];
}
