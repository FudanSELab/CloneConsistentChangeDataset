digraph {
3 [style = filled, label = "bs.addBean(,new B5a())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertObject(ThrownStore.create().beanStore(bs).type().build()).isType()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThrown(null).messages().any(contains(\"Public constructor found but could not find prerequisites: B5a\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertObject(MethodExecStore.create().beanStore(bs).implClass().build()).isType()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertObject(MethodExecStore.create().beanStore(bs).implClass().build()).isType()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertObject(ThrownStore.create().beanStore(bs).implClass().build()).isType()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertObject(ThrownStore.create().beanStore(bs).implClass().build()).isType()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertThrown(null).messages().any(contains(\"Public constructor found but could not find prerequisites: A5a\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "a05_builder_beanFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "b05_builder_beanFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "bs.addBean(,new A5a())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertObject(MethodExecStore.create().beanStore(bs).implClass().build()).isType()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertObject(ThrownStore.create().beanStore(bs).type().build()).isType()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThrown(null).messages().any(contains(\"Public constructor found but could not find prerequisites: B5a\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "b05_builder_beanFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertObject(ThrownStore.create().beanStore(bs).implClass().build()).isType()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertObject(ThrownStore.create().beanStore(bs).type().build()).isType()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "BeanStore bs = BeanStore.create().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
1->14 [style = dashed, label="0"];
6->7 [style = dashed, label="0"];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
3->6 [style = bold, label=""];
5->9 [style = dashed, label="0"];
4->2 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->1 [style = bold, label=""];
13->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
5->17 [style = dashed, label="0"];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
2->13 [style = dashed, label="0"];
17->15 [style = bold, label=""];
3->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
16->14 [style = bold, label=""];
1->8 [style = dashed, label="0"];
10->9 [style = bold, label=""];
2->5 [style = bold, label=""];
}
