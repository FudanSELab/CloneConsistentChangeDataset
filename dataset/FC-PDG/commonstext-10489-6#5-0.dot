digraph {
1 [style = filled, label = "characterArray(0( = character@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(alphabetConverter.equals(alphabetConverter)).isTrue()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertFalse(alphabetConverter.equals(alphabetConverterTwo))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final AlphabetConverter alphabetConverter = AlphabetConverter.createConverterFromChars(characterArray,characterArray,characterArray)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(1,alphabetConverterTwo.getEncodedCharLength())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testEqualsWithSameObject['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(alphabetConverter.equals(alphabetConverter))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "characterArray(1( = character@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Character(( characterArray = new Character((((@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final AlphabetConverter alphabetConverterTwo = AlphabetConverter.createConverterFromMap(map)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Map<Integer,String> map = new HashMap<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Character character = new Character('R')@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testEqualsWithSameObject['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
8->0 [style = bold, label=""];
6->1 [style = bold, label=""];
2->0 [style = bold, label=""];
3->4 [style = solid, label="alphabetConverter"];
6->5 [style = solid, label="character"];
3->12 [style = bold, label=""];
9->10 [style = bold, label=""];
3->7 [style = bold, label=""];
11->9 [style = bold, label=""];
0->6 [style = bold, label=""];
3->4 [style = bold, label=""];
6->1 [style = solid, label="character"];
12->11 [style = solid, label="map"];
4->7 [style = dashed, label="0"];
5->3 [style = solid, label="characterArray"];
11->10 [style = solid, label="alphabetConverterTwo"];
13->0 [style = bold, label=""];
12->11 [style = bold, label=""];
}
