digraph {
4 [style = filled, label = "testEqualsAndHashCode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestMap m2 = b2.build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "b2.putInt32ToInt32Field(1,0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestMap m1 = b1.build()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestMap m1 = TestMap.newBuilder().putInt32ToInt32Field(1,2).putInt32ToInt32Field(3,4).putInt32ToInt32Field(5,6).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "TestMap.Builder b1 = TestMap.newBuilder().putInt32ToInt32Field(1,2).putInt32ToInt32Field(3,4).putInt32ToInt32Field(5,6)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "m2 = b2.build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(m1.equals(m2))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testEqualsAndHashCode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertFalse(m1.equals(m2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(m2.equals(m1))@@@15@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestMap.Builder b2 = TestMap.newBuilder().putInt32ToInt32Field(5,6).putInt32ToInt32Field(1,2).putInt32ToInt32Field(3,4)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(m1,m2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testEqualsAndHashCode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TestMap.Builder b2 = TestMap.newBuilder().putInt32ToInt32Field(5,6).putInt32ToInt32Field(1,2).putInt32ToInt32Field(3,4)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "m2 = b2.build()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(m1.hashCode(),m2.hashCode())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(m2.equals(m1))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->8 [style = bold, label=""];
6->10 [style = solid, label="m2"];
7->14 [style = dashed, label="0"];
0->3 [style = solid, label="m2"];
12->11 [style = bold, label=""];
9->1 [style = solid, label="m2"];
5->10 [style = solid, label="m1"];
8->6 [style = solid, label="m2"];
8->6 [style = bold, label=""];
5->2 [style = solid, label="m1"];
4->7 [style = bold, label=""];
17->7 [style = bold, label=""];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
11->0 [style = solid, label="m2"];
10->12 [style = bold, label=""];
14->1 [style = solid, label="m1"];
6->10 [style = bold, label=""];
3->13 [style = bold, label=""];
14->6 [style = solid, label="m1"];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
13->9 [style = bold, label=""];
9->1 [style = bold, label=""];
15->8 [style = bold, label=""];
13->9 [style = solid, label="m2"];
}
