digraph {
11 [style = filled, label = "Assert.assertEquals(6.5D,result)@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "values.put(\"a\",1.1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(-2L,result)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "multOneField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(6D,result)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.clear()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "multOneField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "floorOneField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(1L,result)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "values.clear()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(6.5D,result)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"floor(a)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(6L,result)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(1L,result)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "values.put(\"a\",-1.1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "values.put(\"a\",6)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.clear()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.put(\"a\",1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->18 [style = dashed, label="0"];
5->10 [style = bold, label=""];
6->24 [style = solid, label="result"];
12->5 [style = bold, label=""];
3->1 [style = bold, label=""];
25->23 [style = bold, label=""];
3->24 [style = dashed, label="0"];
6->14 [style = solid, label="result"];
8->20 [style = dashed, label="0"];
5->26 [style = bold, label=""];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
19->17 [style = bold, label=""];
26->6 [style = bold, label=""];
17->16 [style = solid, label="result"];
10->6 [style = bold, label=""];
22->7 [style = bold, label=""];
0->22 [style = dashed, label="0"];
0->7 [style = bold, label=""];
1->22 [style = bold, label=""];
6->14 [style = bold, label=""];
7->18 [style = solid, label="result"];
7->25 [style = solid, label="result"];
6->9 [style = solid, label="result"];
10->26 [style = dashed, label="0"];
9->14 [style = dashed, label="0"];
7->11 [style = solid, label="result"];
7->4 [style = solid, label="result"];
23->19 [style = bold, label=""];
0->7 [style = solid, label="result"];
20->12 [style = bold, label=""];
11->25 [style = dashed, label="0"];
18->25 [style = bold, label=""];
7->18 [style = bold, label=""];
21->16 [style = bold, label=""];
9->3 [style = bold, label=""];
14->15 [style = bold, label=""];
0->4 [style = solid, label="result"];
24->1 [style = bold, label=""];
6->3 [style = solid, label="result"];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
4->11 [style = bold, label=""];
17->21 [style = solid, label="result"];
17->21 [style = bold, label=""];
27->20 [style = bold, label=""];
9->24 [style = bold, label=""];
8->12 [style = bold, label=""];
2->8 [style = bold, label=""];
15->1 [style = bold, label=""];
}
