digraph {
0 [style = filled, label = "RelBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final ImmutableList.Builder<RexNode> operands = ImmutableList.builder()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,fields).stream().map(null).collect(Collectors.toList())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final RexLiteral trueLiteral = (RexLiteral)builder.literal(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "variablesSet.isEmpty()@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "RexNode project = builder.and(fields.stream().map(null).collect(Collectors.toList()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!keyIsNulls.isEmpty()@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "variablesSet.isEmpty()@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "builder.push(e.rel)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"i\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "expressionOperands.clear()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOperands)))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.call(SqlStdOperatorTable.DESC,builder.field(\"cs\"))))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "!variablesSet.isEmpty()@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "builder.push(e.rel)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "builder.as(\"dt\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "operands.add(falseLiteral)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!allLiterals@@@85@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "logic@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "fields.add(builder.alias(trueLiteral,\"i\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "builder.as(\"ct\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "RelBuilder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "rewriteExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "builder.project(fields)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "builder.aggregate(builder.groupKey(fields))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "offset += 2@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "builder.as(\"dt\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "builder.project(builder.alias(project,\"cs\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "builder.distinct()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "logic@@@86@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return trueLiteral@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "builder.aggregate(builder.groupKey(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "builder.project(builder.alias(trueLiteral,\"cs\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),falseLiteral)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,builder.fields()).stream().map(null).collect(Collectors.toList())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "builder.distinct()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "List<RexNode> isNullOperands = fields.stream().map(null).collect(Collectors.toList())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "int refOffset = offset@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "logic@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "logic@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "builder.distinct()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<RexNode> fields = new ArrayList<>(builder.fields())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "operands.add(builder.call(SqlStdOperatorTable.LESS_THAN,builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),b)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "return builder.call(SqlStdOperatorTable.CASE,operands.build())@@@91@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.count(builder.fields()).as(\"ck\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final RexLiteral unknownLiteral = builder.getRexBuilder().makeNullLiteral(trueLiteral.getType())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),falseLiteral)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "return builder.literal(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "logic@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOpperands)))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
87 [style = filled, label = "return builder.isNotNull(Util.last(builder.fields()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<RexNode> isNullOpperands = fields.stream().map(null).collect(Collectors.toList())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "int offset@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
75 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "allLiterals@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "rewriteIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "builder.join(JoinRelType.LEFT,trueLiteral,variablesSet)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final RexLiteral falseLiteral = (RexLiteral)builder.literal(false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int offset@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "builder.join(JoinRelType.INNER,trueLiteral,variablesSet)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "RexSubQuery e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),trueLiteral)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "isNullOpperands.addAll(keyIsNulls)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
85 [style = filled, label = "RelBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "operands.add(builder.or(keyIsNulls),unknownLiteral)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "builder.as(\"dt\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "builder.distinct()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "RexSubQuery e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),falseLiteral),b)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "rewriteIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "builder.join(JoinRelType.INNER,builder.and(conditions),variablesSet)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "fields.clear()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.and(conditions),variablesSet)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),trueLiteral)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final List<RexNode> keyIsNulls = e.getOperands().stream().filter(null).map(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "allLiterals@@@79@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "allLiterals@@@65@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.filter(conditions)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "builder.aggregate(builder.groupKey(builder.field(\"cs\")),builder.count(false,\"c\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean allLiterals = RexUtil.allLiterals(e.getOperands())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "isNullOperands.addAll(keyIsNulls)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "b = unknownLiteral@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "RexSubQuery e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "RexLiteral b = trueLiteral@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final List<RexNode> expressionOperands = new ArrayList<>(e.getOperands())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->55 [style = bold, label=""];
31->37 [style = bold, label=""];
68->35 [style = bold, label=""];
83->84 [style = bold, label=""];
10->66 [style = bold, label=""];
65->67 [style = bold, label=""];
7->54 [style = dotted, label="true"];
83->88 [style = bold, label=""];
80->82 [style = dotted, label="true"];
6->22 [style = bold, label=""];
81->83 [style = bold, label=""];
7->47 [style = dotted, label="false"];
53->39 [style = dotted, label="true"];
61->64 [style = solid, label="offset"];
34->15 [style = solid, label="trueLiteral"];
18->57 [style = solid, label="fields"];
59->57 [style = bold, label=""];
14->65 [style = bold, label=""];
25->53 [style = bold, label=""];
34->67 [style = solid, label="trueLiteral"];
66->12 [style = dotted, label="true"];
73->9 [style = bold, label=""];
82->77 [style = solid, label="variablesSet"];
9->10 [style = bold, label=""];
68->39 [style = solid, label="b"];
40->13 [style = bold, label=""];
62->25 [style = solid, label="unknownLiteral"];
30->18 [style = bold, label=""];
33->26 [style = dotted, label="true"];
1->23 [style = bold, label=""];
2->61 [style = bold, label=""];
23->29 [style = bold, label=""];
52->24 [style = bold, label=""];
1->66 [style = dotted, label="true"];
6->53 [style = solid, label="allLiterals"];
49->45 [style = solid, label="variablesSet"];
36->43 [style = solid, label="falseLiteral"];
75->37 [style = solid, label="variablesSet"];
24->64 [style = bold, label=""];
90->84 [style = bold, label=""];
47->52 [style = dotted, label="true"];
83->88 [style = dotted, label="true"];
63->31 [style = bold, label=""];
66->20 [style = bold, label=""];
62->7 [style = bold, label=""];
18->11 [style = solid, label="fields"];
72->73 [style = bold, label=""];
11->13 [style = bold, label=""];
7->16 [style = bold, label=""];
47->51 [style = bold, label=""];
7->16 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
47->61 [style = dotted, label="true"];
13->46 [style = bold, label=""];
1->23 [style = dotted, label="true"];
18->44 [style = solid, label="fields"];
1->73 [style = dotted, label="true"];
7->1 [style = dotted, label="true"];
49->67 [style = solid, label="variablesSet"];
3->30 [style = bold, label=""];
48->34 [style = bold, label=""];
69->31 [style = solid, label="logic"];
77->90 [style = bold, label=""];
35->53 [style = dotted, label="true"];
31->19 [style = dotted, label="true"];
55->60 [style = bold, label=""];
45->41 [style = bold, label=""];
69->47 [style = solid, label="logic"];
46->42 [style = bold, label=""];
71->73 [style = solid, label="isNullOperands"];
0->41 [style = solid, label="builder"];
66->32 [style = dotted, label="false"];
29->72 [style = dashed, label="0"];
47->5 [style = dotted, label="true"];
70->64 [style = solid, label="offset"];
36->8 [style = solid, label="falseLiteral"];
47->59 [style = dotted, label="true"];
76->75 [style = dotted, label="true"];
67->61 [style = bold, label=""];
58->47 [style = solid, label="logic"];
1->17 [style = bold, label=""];
36->62 [style = bold, label=""];
3->58 [style = dotted, label="true"];
51->14 [style = bold, label=""];
16->38 [style = solid, label="conditions"];
17->88 [style = dashed, label="0"];
48->29 [style = solid, label="keyIsNulls"];
13->46 [style = dotted, label="true"];
65->2 [style = dotted, label="true"];
80->89 [style = dotted, label="true"];
21->11 [style = bold, label=""];
65->2 [style = bold, label=""];
1->15 [style = dotted, label="true"];
63->45 [style = solid, label="conditions"];
34->36 [style = bold, label=""];
65->67 [style = dotted, label="false"];
21->40 [style = dotted, label="true"];
34->11 [style = solid, label="trueLiteral"];
17->15 [style = bold, label=""];
43->33 [style = bold, label=""];
47->44 [style = bold, label=""];
47->51 [style = dotted, label="true"];
29->38 [style = bold, label=""];
76->58 [style = dotted, label="true"];
66->20 [style = dotted, label="true"];
53->43 [style = bold, label=""];
12->60 [style = bold, label=""];
36->4 [style = solid, label="falseLiteral"];
35->25 [style = dotted, label="true"];
80->30 [style = bold, label=""];
60->54 [style = bold, label=""];
49->37 [style = solid, label="variablesSet"];
75->67 [style = solid, label="variablesSet"];
1->10 [style = dotted, label="true"];
88->79 [style = bold, label=""];
5->59 [style = bold, label=""];
48->72 [style = solid, label="keyIsNulls"];
1->17 [style = dotted, label="true"];
23->38 [style = solid, label="isNullOpperands"];
75->2 [style = solid, label="variablesSet"];
6->21 [style = solid, label="allLiterals"];
22->48 [style = bold, label=""];
58->46 [style = solid, label="logic"];
28->39 [style = bold, label=""];
4->39 [style = bold, label=""];
76->74 [style = dotted, label="true"];
41->68 [style = bold, label=""];
42->8 [style = bold, label=""];
53->28 [style = dotted, label="true"];
38->9 [style = bold, label=""];
83->79 [style = dotted, label="true"];
1->55 [style = dotted, label="true"];
1->71 [style = dotted, label="true"];
1->87 [style = bold, label=""];
86->1 [style = bold, label=""];
47->65 [style = dotted, label="true"];
6->7 [style = solid, label="allLiterals"];
47->59 [style = bold, label=""];
58->89 [style = dashed, label="0"];
78->83 [style = solid, label="logic"];
69->1 [style = solid, label="logic"];
3->49 [style = dotted, label="true"];
39->33 [style = bold, label=""];
33->26 [style = bold, label=""];
58->1 [style = solid, label="logic"];
26->21 [style = bold, label=""];
35->25 [style = bold, label=""];
71->72 [style = bold, label=""];
7->60 [style = dotted, label="true"];
62->26 [style = solid, label="unknownLiteral"];
48->26 [style = solid, label="keyIsNulls"];
54->24 [style = bold, label=""];
19->45 [style = bold, label=""];
32->60 [style = bold, label=""];
80->78 [style = dotted, label="true"];
21->11 [style = dotted, label="false"];
69->35 [style = solid, label="logic"];
16->1 [style = bold, label=""];
18->6 [style = bold, label=""];
30->81 [style = bold, label=""];
1->9 [style = dotted, label="true"];
55->77 [style = dashed, label="0"];
34->59 [style = solid, label="trueLiteral"];
83->90 [style = dotted, label="true"];
83->84 [style = dotted, label="true"];
28->4 [style = dotted, label="true"];
68->42 [style = solid, label="b"];
34->68 [style = solid, label="trueLiteral"];
44->24 [style = bold, label=""];
23->71 [style = dashed, label="0"];
1->38 [style = dotted, label="true"];
76->69 [style = dotted, label="true"];
83->77 [style = dotted, label="true"];
53->28 [style = bold, label=""];
35->53 [style = bold, label=""];
36->39 [style = solid, label="falseLiteral"];
58->31 [style = solid, label="logic"];
3->27 [style = dotted, label="true"];
1->72 [style = dotted, label="true"];
8->56 [style = bold, label=""];
16->17 [style = solid, label="conditions"];
31->37 [style = dotted, label="true"];
3->50 [style = dotted, label="true"];
38->73 [style = dashed, label="0"];
61->5 [style = bold, label=""];
7->47 [style = bold, label=""];
63->37 [style = solid, label="conditions"];
25->42 [style = solid, label="b"];
82->1 [style = solid, label="variablesSet"];
64->63 [style = bold, label=""];
53->43 [style = dotted, label="false"];
47->44 [style = dotted, label="true"];
34->2 [style = solid, label="trueLiteral"];
1->71 [style = bold, label=""];
58->35 [style = solid, label="logic"];
9->10 [style = solid, label="project"];
84->86 [style = bold, label=""];
34->40 [style = solid, label="trueLiteral"];
76->30 [style = bold, label=""];
79->77 [style = bold, label=""];
57->52 [style = bold, label=""];
1->29 [style = dotted, label="true"];
69->46 [style = solid, label="logic"];
49->2 [style = solid, label="variablesSet"];
27->64 [style = solid, label="offset"];
20->12 [style = bold, label=""];
47->14 [style = dotted, label="true"];
80->85 [style = dotted, label="true"];
21->40 [style = bold, label=""];
46->42 [style = dotted, label="true"];
76->70 [style = dotted, label="true"];
34->19 [style = solid, label="trueLiteral"];
37->19 [style = bold, label=""];
25->39 [style = solid, label="b"];
47->57 [style = dotted, label="true"];
13->8 [style = bold, label=""];
33->21 [style = bold, label=""];
66->32 [style = bold, label=""];
75->45 [style = solid, label="variablesSet"];
16->73 [style = solid, label="conditions"];
28->4 [style = bold, label=""];
58->41 [style = solid, label="builder"];
}
