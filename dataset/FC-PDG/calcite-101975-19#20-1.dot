digraph {
24 [style = filled, label = "rewriteIn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "builder.distinct()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),falseLiteral),b)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,builder.fields()).stream().map(null).collect(Collectors.toList())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "builder.aggregate(builder.groupKey(fields))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "builder.distinct()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return builder.isNotNull(last(builder.fields()))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "RexNode project = builder.and(fields.stream().map(null).collect(Collectors.toList()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "allLiterals@@@81@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final RexLiteral unknownLiteral = builder.getRexBuilder().makeNullLiteral(trueLiteral.getType())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),trueLiteral)@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "boolean allLiterals = RexUtil.allLiterals(e.getOperands())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "int refOffset = offset@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "allLiterals@@@66@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"i\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "variablesSet.isEmpty()@@@67@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "logic@@@56@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "rewriteExists['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "offset += 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "fields.clear()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "builder.join(JoinRelType.LEFT,trueLiteral,variablesSet)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "builder.filter(conditions)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "logic@@@88@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "!variablesSet.isEmpty()@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.count(builder.fields()).as(\"ck\"))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),falseLiteral)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "b = unknownLiteral@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,fields).stream().map(null).collect(Collectors.toList())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "builder.as(\"dt\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.and(conditions),variablesSet)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),falseLiteral)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RexSubQuery e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "builder.project(builder.alias(trueLiteral,\"cs\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "builder.join(JoinRelType.INNER,trueLiteral,variablesSet)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "rewriteExists['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "!allLiterals@@@87@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "return trueLiteral@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "builder.aggregate(builder.groupKey(builder.field(\"cs\")),builder.count(false,\"c\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "variablesSet.isEmpty()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "builder.push(e.rel)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "RexSubQuery e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "final List<RexNode> keyIsNulls = e.getOperands().stream().filter(null).map(null).collect(Collectors.toList())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return builder.isNotNull(Util.last(builder.fields()))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "builder.aggregate(builder.groupKey(0))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "builder.as(\"dt\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "int offset@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "logic@@@64@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "fields.add(builder.alias(trueLiteral,\"i\"))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "return builder.call(SqlStdOperatorTable.CASE,operands.build())@@@95@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "builder.distinct()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "isNullOperands.addAll(keyIsNulls)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "final RexLiteral falseLiteral = builder.literal(false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "operands.add(builder.or(keyIsNulls),unknownLiteral)@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),trueLiteral)@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "operands.add(builder.lessThan(builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),b)@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "expressionOperands.clear()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "builder.push(e.rel)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "builder.join(JoinRelType.INNER,builder.and(conditions),variablesSet)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "allLiterals@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final RexLiteral trueLiteral = builder.literal(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RelBuilder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "builder.as(\"ct\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "logic@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "final ImmutableList.Builder<RexNode> operands = ImmutableList.builder()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "RexLiteral b = trueLiteral@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "final List<RexNode> fields = new ArrayList<>(builder.fields())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "RelBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "builder.as(\"dt\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RexSubQuery e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "builder.project(fields)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final List<RexNode> expressionOperands = new ArrayList<>(e.getOperands())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "List<RexNode> isNullOperands = fields.stream().map(null).collect(Collectors.toList())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "logic@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "operands.add(falseLiteral)@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "builder.distinct()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "!keyIsNulls.isEmpty()@@@78@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "logic@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.desc(builder.field(\"cs\"))))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "builder.project(builder.alias(project,\"cs\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return builder.literal(true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOperands)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84->58 [style = dotted, label="true"];
74->26 [style = bold, label=""];
64->36 [style = bold, label=""];
27->67 [style = dotted, label="true"];
76->64 [style = bold, label=""];
80->71 [style = solid, label="falseLiteral"];
70->82 [style = solid, label="offset"];
87->79 [style = solid, label="b"];
67->48 [style = bold, label=""];
73->75 [style = solid, label="builder"];
28->87 [style = solid, label="unknownLiteral"];
11->12 [style = dotted, label="true"];
12->7 [style = solid, label="variablesSet"];
1->31 [style = dotted, label="true"];
26->87 [style = dotted, label="true"];
24->73 [style = dotted, label="true"];
65->22 [style = solid, label="project"];
27->49 [style = dotted, label="true"];
41->27 [style = solid, label="logic"];
23->52 [style = solid, label="variablesSet"];
1->30 [style = bold, label=""];
69->55 [style = bold, label=""];
1->65 [style = dotted, label="true"];
14->7 [style = bold, label=""];
1->66 [style = dotted, label="true"];
8->1 [style = bold, label=""];
27->86 [style = dotted, label="true"];
39->76 [style = dotted, label="true"];
61->38 [style = solid, label="trueLiteral"];
77->61 [style = bold, label=""];
21->83 [style = bold, label=""];
31->59 [style = dotted, label="true"];
55->47 [style = solid, label="allLiterals"];
4->72 [style = dashed, label="0"];
59->85 [style = bold, label=""];
21->76 [style = bold, label=""];
2->14 [style = bold, label=""];
11->13 [style = bold, label=""];
50->62 [style = bold, label=""];
11->0 [style = dotted, label="true"];
86->46 [style = bold, label=""];
80->76 [style = solid, label="falseLiteral"];
55->34 [style = bold, label=""];
20->18 [style = dotted, label="true"];
4->8 [style = bold, label=""];
27->67 [style = bold, label=""];
25->82 [style = solid, label="offset"];
85->42 [style = bold, label=""];
10->4 [style = dotted, label="true"];
33->71 [style = bold, label=""];
66->85 [style = bold, label=""];
13->69 [style = bold, label=""];
60->1 [style = bold, label=""];
26->64 [style = bold, label=""];
41->26 [style = solid, label="logic"];
51->71 [style = bold, label=""];
12->73 [style = dashed, label="0"];
65->22 [style = bold, label=""];
42->46 [style = bold, label=""];
84->52 [style = bold, label=""];
27->25 [style = dotted, label="true"];
29->60 [style = bold, label=""];
1->22 [style = dotted, label="true"];
51->79 [style = bold, label=""];
60->40 [style = solid, label="conditions"];
61->68 [style = solid, label="trueLiteral"];
75->74 [style = bold, label=""];
11->5 [style = dotted, label="true"];
9->45 [style = dashed, label="0"];
2->30 [style = dashed, label="0"];
32->59 [style = bold, label=""];
1->30 [style = dotted, label="true"];
61->58 [style = solid, label="trueLiteral"];
1->17 [style = bold, label=""];
50->35 [style = dotted, label="true"];
1->40 [style = dotted, label="true"];
23->58 [style = solid, label="variablesSet"];
29->27 [style = bold, label=""];
5->10 [style = solid, label="logic"];
82->45 [style = bold, label=""];
78->35 [style = bold, label=""];
61->80 [style = bold, label=""];
31->57 [style = bold, label=""];
27->86 [style = bold, label=""];
58->25 [style = bold, label=""];
1->72 [style = bold, label=""];
80->28 [style = bold, label=""];
84->58 [style = bold, label=""];
80->37 [style = solid, label="falseLiteral"];
27->48 [style = dotted, label="true"];
24->70 [style = dotted, label="true"];
47->44 [style = bold, label=""];
64->36 [style = dotted, label="true"];
10->2 [style = bold, label=""];
69->68 [style = solid, label="fields"];
40->65 [style = bold, label=""];
56->40 [style = bold, label=""];
74->76 [style = solid, label="b"];
24->13 [style = bold, label=""];
39->37 [style = bold, label=""];
29->60 [style = dotted, label="true"];
28->29 [style = bold, label=""];
29->1 [style = dotted, label="true"];
69->48 [style = solid, label="fields"];
84->52 [style = dotted, label="false"];
20->13 [style = bold, label=""];
61->52 [style = solid, label="trueLiteral"];
87->39 [style = bold, label=""];
77->56 [style = solid, label="keyIsNulls"];
50->78 [style = dotted, label="true"];
62->75 [style = bold, label=""];
31->32 [style = bold, label=""];
61->35 [style = solid, label="trueLiteral"];
55->39 [style = solid, label="allLiterals"];
27->63 [style = dotted, label="true"];
61->67 [style = solid, label="trueLiteral"];
44->33 [style = bold, label=""];
34->77 [style = bold, label=""];
1->9 [style = bold, label=""];
28->36 [style = solid, label="unknownLiteral"];
49->84 [style = bold, label=""];
21->83 [style = dotted, label="true"];
39->21 [style = bold, label=""];
38->66 [style = bold, label=""];
53->46 [style = bold, label=""];
72->56 [style = bold, label=""];
24->23 [style = dotted, label="true"];
41->51 [style = solid, label="logic"];
45->62 [style = solid, label="conditions"];
10->2 [style = dotted, label="true"];
27->84 [style = dotted, label="true"];
6->10 [style = bold, label=""];
29->27 [style = dotted, label="false"];
37->64 [style = bold, label=""];
14->38 [style = dashed, label="0"];
46->82 [style = bold, label=""];
31->57 [style = dotted, label="false"];
60->30 [style = solid, label="conditions"];
7->15 [style = bold, label=""];
83->76 [style = bold, label=""];
33->51 [style = dotted, label="true"];
20->19 [style = dotted, label="true"];
13->6 [style = bold, label=""];
79->71 [style = bold, label=""];
1->38 [style = dotted, label="true"];
11->3 [style = dotted, label="true"];
72->40 [style = solid, label="isNullOperands"];
61->44 [style = solid, label="trueLiteral"];
25->81 [style = bold, label=""];
1->56 [style = dotted, label="true"];
57->85 [style = bold, label=""];
39->21 [style = dotted, label="true"];
1->72 [style = dotted, label="true"];
30->38 [style = bold, label=""];
24->41 [style = dotted, label="true"];
36->47 [style = bold, label=""];
87->76 [style = solid, label="b"];
26->87 [style = bold, label=""];
77->36 [style = solid, label="keyIsNulls"];
26->39 [style = dotted, label="true"];
63->49 [style = bold, label=""];
81->67 [style = bold, label=""];
27->81 [style = dotted, label="true"];
68->33 [style = bold, label=""];
16->10 [style = solid, label="logic"];
22->31 [style = bold, label=""];
47->68 [style = bold, label=""];
80->83 [style = solid, label="falseLiteral"];
47->44 [style = dotted, label="true"];
27->63 [style = bold, label=""];
48->53 [style = bold, label=""];
39->37 [style = dotted, label="false"];
26->39 [style = bold, label=""];
61->74 [style = solid, label="trueLiteral"];
31->32 [style = dotted, label="true"];
10->14 [style = dotted, label="true"];
19->1 [style = solid, label="variablesSet"];
10->15 [style = dotted, label="true"];
47->68 [style = dotted, label="false"];
19->7 [style = solid, label="variablesSet"];
69->86 [style = solid, label="fields"];
41->1 [style = solid, label="logic"];
52->25 [style = bold, label=""];
33->51 [style = bold, label=""];
71->43 [style = bold, label=""];
64->47 [style = bold, label=""];
45->50 [style = bold, label=""];
51->79 [style = dotted, label="true"];
50->78 [style = bold, label=""];
9->17 [style = dashed, label="0"];
35->62 [style = bold, label=""];
15->4 [style = bold, label=""];
23->78 [style = solid, label="variablesSet"];
10->4 [style = bold, label=""];
24->54 [style = dotted, label="true"];
29->42 [style = dotted, label="true"];
20->12 [style = dotted, label="true"];
74->79 [style = solid, label="b"];
55->29 [style = solid, label="allLiterals"];
45->78 [style = solid, label="conditions"];
27->53 [style = dotted, label="true"];
23->62 [style = solid, label="variablesSet"];
10->7 [style = dotted, label="true"];
29->85 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
41->50 [style = solid, label="logic"];
12->1 [style = solid, label="variablesSet"];
}
