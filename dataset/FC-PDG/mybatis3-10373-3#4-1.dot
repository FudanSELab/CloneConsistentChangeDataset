digraph {
2 [style = filled, label = "Assert.assertEquals(\"Poitras\",person.getLastName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Person parent = person.getParent()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Poitras\",person.getLastName())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testWithComplex2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Person person = personMapper.getWithComplex2(2l)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testWithComplex4['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "criteria.setLastName(\"Poitras\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Person criteria = new Person()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Smith\",parent.getLastName())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(\"Christian\",person.getFirstName())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Person person = personMapper.getParentWithComplex(criteria)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertNotNull(\"person must not be null\",person)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sqlSession.close()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(\"John\",parent.getFirstName())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "PersonMapper personMapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertNotNull(\"parent must not be null\",parent)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "criteria.setFirstName(\"Christian\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testWithComplex2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertNotNull(\"person must not be null\",person)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Christian\",person.getFirstName())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
7->8 [style = solid, label="person"];
1->15 [style = bold, label=""];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
3->11 [style = bold, label=""];
14->17 [style = bold, label=""];
15->19 [style = bold, label=""];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
11->18 [style = bold, label=""];
20->4 [style = bold, label=""];
8->0 [style = bold, label=""];
5->6 [style = bold, label=""];
19->13 [style = bold, label=""];
20->4 [style = solid, label="person"];
6->10 [style = bold, label=""];
9->3 [style = bold, label=""];
10->1 [style = solid, label="parent"];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
18->14 [style = bold, label=""];
4->5 [style = solid, label="parent"];
18->20 [style = solid, label="criteria"];
11->7 [style = bold, label=""];
17->20 [style = bold, label=""];
}
