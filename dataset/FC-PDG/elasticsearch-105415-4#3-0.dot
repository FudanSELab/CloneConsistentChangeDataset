digraph {
1 [style = filled, label = "testSelfReferencingAggStateAfterCombine['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSelfReferencingAggStateAfterInit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "{}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSelfReferencingAggStateAfterCombine['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "aggregationBuilder.initScript(INIT_SCRIPT_SELF_REF).mapScript(MAP_SCRIPT)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT_SELF_REF).reduceScript(REDUCE_SCRIPT)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs init script)\",ex.getMessage())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "IllegalArgumentException ex = expectThrows(,null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT_SELF_REF)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs combine script)\",ex.getMessage())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = dashed, label="0"];
6->3 [style = bold, label=""];
10->3 [style = bold, label=""];
1->4 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
2->10 [style = dashed, label="0"];
7->4 [style = bold, label=""];
9->4 [style = bold, label=""];
0->6 [style = bold, label=""];
3->8 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
