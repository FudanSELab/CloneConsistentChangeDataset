digraph {
8 [style = filled, label = "Collection<ExecuteResult> executeResults = rawExecutor.execute(createRawExecutionGroupContext(),executionContext.getLogicSQL(),new RawSQLExecutorCallback())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return executeResults.iterator().next() instanceof QueryResult@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "cacheStatements(executionGroupContext.getInputGroups())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return driverJDBCExecutor.executeUpdate(executionGroupContext,executionContext.getLogicSQL(),executionContext.getRouteContext().getRouteUnits(),createExecuteUpdateCallback())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "accumulate(executeResults)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "executionContext = createExecutionContext()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "executeUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "clearPrevious()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{clearBatch()}@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "executionContext.getRouteContext().isFederated()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<QueryResult> queryResults = executeFederatedQuery()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "metaDataContexts.getMetaData(connection.getSchemaName()).getRuleMetaData().getRules().stream().anyMatch(null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "executeUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "return driverJDBCExecutor.execute(executionGroupContext,executionContext.getLogicSQL(),executionContext.getRouteContext().getRouteUnits(),createExecuteCallback())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().stream().anyMatch(null)@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return !queryResults.isEmpty()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ExecutionGroupContext<JDBCExecutionUnit> executionGroupContext = createExecutionGroupContext()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
8->16 [style = bold, label=""];
8->2 [style = solid, label="executeResults"];
1->4 [style = bold, label=""];
1->8 [style = bold, label=""];
4->15 [style = solid, label="executionGroupContext"];
11->4 [style = bold, label=""];
17->14 [style = dotted, label="true"];
3->6 [style = bold, label=""];
15->6 [style = bold, label=""];
16->17 [style = bold, label=""];
9->7 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
0->15 [style = bold, label=""];
12->7 [style = bold, label=""];
1->17 [style = bold, label=""];
4->0 [style = bold, label=""];
5->1 [style = bold, label=""];
7->5 [style = bold, label=""];
11->2 [style = dotted, label="true"];
4->3 [style = solid, label="executionGroupContext"];
8->2 [style = bold, label=""];
17->14 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
1->8 [style = dotted, label="true"];
3->15 [style = dashed, label="0"];
11->8 [style = bold, label=""];
11->8 [style = dotted, label="true"];
5->11 [style = bold, label=""];
1->16 [style = dotted, label="true"];
14->13 [style = bold, label=""];
1->2 [style = dotted, label="true"];
17->13 [style = dotted, label="true"];
17->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
