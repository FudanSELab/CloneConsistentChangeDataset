digraph {
11 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DefaultIntervalXYDataset<String> d1 = new DefaultIntervalXYDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertFalse(d1.equals(d2))@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultIntervalXYDataset d2 = CloneUtils.clone(d1)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Range r = DatasetUtils.iterateToFindRangeBounds(dataset,Arrays.asList(\"S1\"),new Range(0.0,4.0),true)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "double(( x1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b3e18@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testIterateToFindRangeBounds_IntervalXYDataset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "dataset.addSeries(\"S1\",data1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b3e0e@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(d1 != d2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DefaultIntervalXYDataset d1 = new DefaultIntervalXYDataset()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "double(( y1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b3e42@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "x1(0( = 111.1@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b3e4c@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "DefaultIntervalXYDataset<String> d2 = CloneUtils.clone(d1)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "double(( y1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b3e38@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(d1.equals(d2))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "double(( x1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b3e22@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(6.0,r.getUpperBound(),EPSILON)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(-5.0,r.getLowerBound(),EPSILON)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b3e2c@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
11->16 [style = bold, label=""];
13->11 [style = solid, label="data1"];
11->20 [style = dashed, label="0"];
3->1 [style = bold, label=""];
16->8 [style = bold, label=""];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
3->13 [style = solid, label="y1Start"];
6->13 [style = solid, label="y1"];
4->13 [style = solid, label="x1Start"];
0->23 [style = dashed, label="0"];
0->12 [style = bold, label=""];
18->8 [style = solid, label="d1"];
23->22 [style = solid, label="dataset"];
18->12 [style = bold, label=""];
13->20 [style = solid, label="data1"];
12->13 [style = solid, label="x1"];
8->24 [style = dashed, label="0"];
9->13 [style = solid, label="x1End"];
13->11 [style = bold, label=""];
1->13 [style = bold, label=""];
16->10 [style = solid, label="d2"];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
20->22 [style = bold, label=""];
16->8 [style = solid, label="d2"];
12->4 [style = bold, label=""];
5->0 [style = bold, label=""];
24->21 [style = bold, label=""];
0->14 [style = solid, label="d1"];
19->23 [style = bold, label=""];
0->8 [style = solid, label="d1"];
2->15 [style = bold, label=""];
18->16 [style = solid, label="d1"];
0->18 [style = dashed, label="0"];
10->2 [style = bold, label=""];
14->8 [style = bold, label=""];
23->12 [style = bold, label=""];
14->15 [style = solid, label="d2"];
22->24 [style = bold, label=""];
14->16 [style = dashed, label="0"];
1->13 [style = solid, label="y1End"];
14->8 [style = solid, label="d2"];
16->15 [style = solid, label="d2"];
17->18 [style = bold, label=""];
14->10 [style = solid, label="d2"];
13->20 [style = bold, label=""];
}
