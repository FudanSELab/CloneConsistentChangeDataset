digraph {
2 [style = filled, label = "xmlTool.renderToOutput(output,MOCK_DIR)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String base = \"groovy/xml/DOMBuilder\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "srcList.add(base + \".java\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "MockOutputTool output = new MockOutputTool()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "srcList.add(\"groovy/util/BuilderSupport.java\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "srcList.add(\"groovy/xml/DOMBuilder.java\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<String> srcList = new ArrayList<String>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testExtendsClauseWithoutSuperClassInTree['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(\"No GroovyDoc found for \" + base,domBuilderDoc)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "testExtendsClauseWithSuperClassInTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "xmlTool.add(srcList)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String domBuilderDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testExtendsClauseWithoutSuperClassInTree['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertTrue(domBuilderDoc.contains(\"<extends>BuilderSupport</extends>\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertTrue(domBuilderDoc.indexOf(\"<extends>BuilderSupport</extends>\") > 0)@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String domBuilderDoc = output.getText(MOCK_DIR + \"/groovy/xml/DOMBuilder.html\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->8 [style = bold, label=""];
2->1 [style = bold, label=""];
2->1 [style = solid, label="output"];
0->2 [style = solid, label="output"];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
5->7 [style = solid, label="srcList"];
7->0 [style = bold, label=""];
12->9 [style = solid, label="base"];
8->9 [style = solid, label="domBuilderDoc"];
15->5 [style = bold, label=""];
14->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
6->14 [style = bold, label=""];
11->0 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
5->12 [style = bold, label=""];
8->9 [style = bold, label=""];
12->11 [style = solid, label="base"];
1->8 [style = dashed, label="0"];
5->0 [style = solid, label="srcList"];
6->7 [style = bold, label=""];
4->5 [style = bold, label=""];
9->13 [style = bold, label=""];
12->8 [style = solid, label="base"];
}
