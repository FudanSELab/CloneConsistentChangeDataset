digraph {
8 [style = filled, label = "person2.setName(\"Yin\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StructType schema = DataTypes.createStructType(fields)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<String> actual = sqlContext.sql(\"SELECT * FROM people\").toJavaRDD().map(new Function<Row,String>(){@Override public String call(Row row){return row.getString(0) + \"_\" + row.get(1)}}).collect()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Person person1 = new Person()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(expected,actual)@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "applySchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "fields.add(DataTypes.createStructField(\"\",DataTypes.StringType,false))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "expected.add(\"Michael_29\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "personList.add(person1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "dataFrameRDDOperations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<Person> personList = new ArrayList<>(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<StructField> fields = new ArrayList<>(2)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataFrame df = sqlContext.createDataFrame(rowRDD,schema)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Row(( actual = sqlContext.sql(\"SELECT * FROM people\").collect()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "fields.add(DataTypes.createStructField(\"name\",DataTypes.StringType,false))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "applySchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "person1.setName(\"Michael\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Row> expected = new ArrayList<Row>(2)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Person person2 = new Person()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "fields.add(DataTypes.createStructField(\"age\",DataTypes.IntegerType,false))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<Row> expected = new ArrayList<>(2)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(expected,Arrays.asList(actual))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<String> expected = new ArrayList<>(2)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "person1.setAge(29)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expected.add(\"Yin_28\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JavaRDD<Row> rowRDD = javaCtx.parallelize(personList).map(new Function<Person,Row>(){@Override public Row call(Person person){return RowFactory.create(person.getName(),person.getAge())}})@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "personList.add(person2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expected.add(RowFactory.create(\"Michael\",29))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "df.registerTempTable(\"people\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "person2.setAge(28)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expected.add(RowFactory.create(\"Yin\",28))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
25->24 [style = solid, label="expected"];
0->20 [style = solid, label="actual"];
27->14 [style = bold, label=""];
21->6 [style = bold, label=""];
26->10 [style = bold, label=""];
11->13 [style = solid, label="fields"];
25->30 [style = bold, label=""];
2->27 [style = dashed, label="0"];
17->15 [style = solid, label="rowRDD"];
29->25 [style = bold, label=""];
4->29 [style = bold, label=""];
19->3 [style = solid, label="person2"];
6->19 [style = bold, label=""];
7->20 [style = solid, label="expected"];
11->2 [style = bold, label=""];
19->8 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
5->21 [style = bold, label=""];
13->15 [style = solid, label="schema"];
12->10 [style = bold, label=""];
22->18 [style = bold, label=""];
30->28 [style = bold, label=""];
29->24 [style = solid, label="actual"];
0->22 [style = bold, label=""];
22->20 [style = solid, label="expected"];
2->14 [style = bold, label=""];
1->6 [style = solid, label="person1"];
0->29 [style = dashed, label="0"];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
23->10 [style = bold, label=""];
7->18 [style = bold, label=""];
28->24 [style = bold, label=""];
9->3 [style = bold, label=""];
3->17 [style = bold, label=""];
13->15 [style = bold, label=""];
14->13 [style = bold, label=""];
10->1 [style = bold, label=""];
16->20 [style = bold, label=""];
7->22 [style = dashed, label="0"];
11->27 [style = bold, label=""];
17->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
