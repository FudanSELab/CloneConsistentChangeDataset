digraph {
10 [style = filled, label = "alarmMessages.remove(alarmMessages.size() - 1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\",\"a_rule && not_exist_rule\",\"composite rule triggered!\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\",\"(a_rule || b_rule) && c_rule\",\"composite rule triggered!\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testEvaluateMessageWithParenthesisAndOp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<AlarmMessage> alarmMessages = getAlarmMessages()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testEvaluateMessageWithNotExistsRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\",\"a_rule && not_exist_rule\",\"composite rule triggered!\",new HashMap<>())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "compositeAlarmRules.add(compositeAlarmRule)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testEvaluateMessageWithNotExistsRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(compositeMsgs.size(),is(0))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules,alarmMessages)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->5 [style = solid, label="compositeAlarmRules"];
1->3 [style = solid, label="compositeAlarmRule"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
1->9 [style = dashed, label="0"];
2->9 [style = bold, label=""];
11->2 [style = bold, label=""];
6->5 [style = bold, label=""];
10->5 [style = bold, label=""];
8->3 [style = solid, label="compositeAlarmRule"];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
9->3 [style = bold, label=""];
6->5 [style = solid, label="alarmMessages"];
1->8 [style = dashed, label="0"];
9->3 [style = solid, label="compositeAlarmRule"];
2->8 [style = bold, label=""];
}
