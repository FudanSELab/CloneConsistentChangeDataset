digraph {
16 [style = filled, label = "final CreateCommand command = new CreateCommand(diskCharacteristics,templateUrl,pool,executeInSequence)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String templateUrl = \"http://template\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final KVMPhysicalDisk vol = Mockito.mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final StorageFilerTO pool = Mockito.mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testCreateCommandCLVM['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(primary.getPhysicalDisk(command.getTemplateUrl())).thenReturn(baseVol)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(wrapper)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(poolManager.getStoragePool(pool.getType(),pool.getUuid())).thenReturn(primary)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(libvirtComputingResource,times(1)).getStoragePoolMgr()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(poolManager)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(poolManager.createDiskFromTemplate(baseVol,diskCharacteristics.getPath(),diskCharacteristics.getProvisioningType(),primary,baseVol.getSize(),0)).thenReturn(vol)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final DiskProfile diskCharacteristics = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final boolean executeInSequence = false@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final KVMPhysicalDisk baseVol = Mockito.mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(primary.getType()).thenReturn(StoragePoolType.CLVM)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(answer.getResult())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCreateCommandCLVM['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final KVMStoragePoolManager poolManager = Mockito.mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final KVMStoragePool primary = Mockito.mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(poolManager.createDiskFromTemplate(baseVol,diskCharacteristics.getPath(),diskCharacteristics.getProvisioningType(),primary,0)).thenReturn(vol)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testCreateCommand['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(poolManager,times(1)).getStoragePool(pool.getType(),pool.getUuid())@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(libvirtComputingResource.templateToPrimaryDownload(command.getTemplateUrl(),primary,diskCharacteristics.getPath())).thenReturn(vol)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->16 [style = solid, label="executeInSequence"];
1->16 [style = solid, label="templateUrl"];
0->16 [style = bold, label=""];
7->17 [style = bold, label=""];
24->15 [style = bold, label=""];
17->24 [style = dashed, label="0"];
8->18 [style = bold, label=""];
21->15 [style = bold, label=""];
2->3 [style = bold, label=""];
14->5 [style = bold, label=""];
4->19 [style = bold, label=""];
20->14 [style = bold, label=""];
1->0 [style = bold, label=""];
16->2 [style = bold, label=""];
14->16 [style = solid, label="diskCharacteristics"];
16->13 [style = solid, label="command"];
17->21 [style = dashed, label="0"];
5->16 [style = solid, label="pool"];
3->18 [style = solid, label="primary"];
23->14 [style = bold, label=""];
6->14 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
10->21 [style = solid, label="vol"];
18->22 [style = bold, label=""];
13->12 [style = bold, label=""];
10->8 [style = bold, label=""];
12->4 [style = bold, label=""];
15->9 [style = bold, label=""];
17->15 [style = bold, label=""];
11->7 [style = solid, label="baseVol"];
15->9 [style = solid, label="wrapper"];
7->21 [style = bold, label=""];
11->8 [style = bold, label=""];
2->8 [style = solid, label="poolManager"];
22->24 [style = bold, label=""];
10->17 [style = solid, label="vol"];
18->7 [style = bold, label=""];
7->22 [style = dashed, label="0"];
10->24 [style = solid, label="vol"];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
