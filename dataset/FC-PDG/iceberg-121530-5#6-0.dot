digraph {
1 [style = filled, label = "return null@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "project['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "BoundPredicate<T> predicate@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "predicate.isUnaryPredicate()@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "predicate.isLiteralPredicate()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return ProjectionUtil.projectTransformPredicate(this,name,predicate)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "predicate.isUnaryPredicate()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "BoundPredicate<CharSequence> predicate@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return null@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "return Expressions.predicate(predicate.op(),name,apply(predicate.asLiteralPredicate().literal().value()))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "return Expressions.predicate(predicate.op(),name)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BoundLiteralPredicate<T> pred = predicate.asLiteralPredicate()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "predicate instanceof BoundUnaryPredicate@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "return ProjectionUtil.transformSet(name,predicate.asSetPredicate(),this)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "predicate instanceof BoundLiteralPredicate@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "project['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "predicate.isLiteralPredicate() && predicate.op() == Expression.Operation.EQ@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "predicate.isSetPredicate() && predicate.op() == Expression.Operation.IN@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "pred.op()@@@11@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "return null@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "project['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "predicate.term() instanceof BoundTransform@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return ProjectionUtil.truncateArray(name,predicate.asLiteralPredicate(),this)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "BoundPredicate<T> predicate@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return Expressions.predicate(pred.op(),name,apply(pred.literal().value()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "return null@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16->0 [style = solid, label="name"];
4->9 [style = bold, label=""];
13->17 [style = dotted, label="true"];
12->11 [style = dotted, label="false"];
5->8 [style = bold, label=""];
3->6 [style = solid, label="predicate"];
8->10 [style = bold, label=""];
7->17 [style = solid, label="predicate"];
20->13 [style = bold, label=""];
12->20 [style = dashed, label="0"];
22->0 [style = solid, label="predicate"];
27->0 [style = bold, label=""];
22->6 [style = solid, label="predicate"];
11->1 [style = bold, label=""];
25->23 [style = bold, label=""];
2->1 [style = bold, label=""];
8->2 [style = dotted, label="true"];
20->0 [style = dotted, label="true"];
26->0 [style = solid, label="name"];
7->0 [style = solid, label="name"];
7->10 [style = solid, label="name"];
13->14 [style = dotted, label="false"];
12->11 [style = bold, label=""];
20->0 [style = bold, label=""];
5->24 [style = dashed, label="0"];
4->7 [style = dotted, label="true"];
25->24 [style = dotted, label="true"];
27->25 [style = dotted, label="false"];
21->22 [style = dotted, label="true"];
11->5 [style = dotted, label="true"];
9->20 [style = bold, label=""];
19->7 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
9->6 [style = dotted, label="true"];
12->0 [style = bold, label=""];
15->18 [style = bold, label=""];
7->6 [style = solid, label="predicate"];
7->0 [style = solid, label="predicate"];
9->6 [style = bold, label=""];
9->27 [style = bold, label=""];
6->20 [style = bold, label=""];
26->24 [style = solid, label="name"];
6->27 [style = bold, label=""];
14->15 [style = dotted, label="true"];
11->5 [style = bold, label=""];
13->17 [style = bold, label=""];
25->24 [style = bold, label=""];
21->9 [style = bold, label=""];
4->3 [style = dotted, label="true"];
11->13 [style = dashed, label="0"];
0->23 [style = bold, label=""];
5->17 [style = dashed, label="0"];
21->26 [style = dotted, label="true"];
7->6 [style = solid, label="name"];
27->0 [style = dotted, label="true"];
8->2 [style = bold, label=""];
3->10 [style = solid, label="predicate"];
19->9 [style = bold, label=""];
3->11 [style = solid, label="predicate"];
16->6 [style = solid, label="name"];
16->17 [style = solid, label="name"];
0->1 [style = bold, label=""];
26->6 [style = solid, label="name"];
17->18 [style = bold, label=""];
3->12 [style = solid, label="predicate"];
19->16 [style = dotted, label="true"];
12->27 [style = dashed, label="0"];
11->25 [style = dashed, label="0"];
12->0 [style = dotted, label="true"];
0->18 [style = bold, label=""];
11->8 [style = dotted, label="true"];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
20->13 [style = dotted, label="false"];
9->12 [style = bold, label=""];
14->18 [style = bold, label=""];
16->15 [style = solid, label="name"];
7->26 [style = dashed, label="0"];
13->14 [style = bold, label=""];
27->25 [style = bold, label=""];
3->0 [style = solid, label="predicate"];
24->23 [style = bold, label=""];
6->12 [style = bold, label=""];
}
