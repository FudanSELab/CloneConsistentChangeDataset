digraph {
12 [style = filled, label = "KafkaSupervisorIOConfig ioConfig = spec.getIoConfig()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return new KinesisSupervisorReportPayload(spec.getDataSchema().getDataSource(),ioConfig.getStream(),numPartitions,ioConfig.getReplicas(),ioConfig.getTaskDuration().getMillis() / 1000,spec.isSuspended(),stateManager.isHealthy(),stateManager.getSupervisorState().getBasicState(),stateManager.getSupervisorState(),stateManager.getExceptionEvents(),includeOffsets? partitionLag: null,includeOffsets? partitionLag.values().stream().mapToLong(null).sum(): null)@@@5@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "int numPartitions@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return new KafkaSupervisorReportPayload(spec.getDataSchema().getDataSource(),ioConfig.getTopic(),numPartitions,ioConfig.getReplicas(),ioConfig.getTaskDuration().getMillis() / 1000,includeOffsets? latestSequenceFromStream: null,includeOffsets? partitionLag: null,includeOffsets? partitionLag.values().stream().mapToLong(null).sum(): null,includeOffsets? sequenceLastUpdated: null,spec.isSuspended(),stateManager.isHealthy(),stateManager.getSupervisorState().getBasicState(),stateManager.getSupervisorState(),stateManager.getExceptionEvents())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Map<Integer,Long> partitionLag = getLagPerPartition(getHighestCurrentOffsets())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int numPartitions@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createReportPayload['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int numPartitions@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "createReportPayload['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "boolean includeOffsets@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return new KinesisSupervisorReportPayload(spec.getDataSchema().getDataSource(),ioConfig.getStream(),numPartitions,ioConfig.getReplicas(),ioConfig.getTaskDuration().getMillis() / 1000,spec.isSuspended(),stateManager.isHealthy(),stateManager.getSupervisorState().getBasicState(),stateManager.getSupervisorState(),stateManager.getExceptionEvents())@@@4@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Long> partitionLag = getTimeLagPerPartition(getHighestCurrentOffsets())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "createReportPayload['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "KinesisSupervisorIOConfig ioConfig = spec.getIoConfig()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean includeOffsets@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9->14 [style = solid, label="partitionLag"];
10->13 [style = dotted, label="true"];
6->7 [style = solid, label="partitionLag"];
4->3 [style = dotted, label="true"];
1->0 [style = bold, label=""];
1->6 [style = bold, label=""];
3->13 [style = dashed, label="0"];
4->1 [style = bold, label=""];
10->12 [style = bold, label=""];
8->1 [style = bold, label=""];
2->0 [style = solid, label="numPartitions"];
12->9 [style = bold, label=""];
13->14 [style = solid, label="numPartitions"];
5->7 [style = solid, label="numPartitions"];
9->14 [style = bold, label=""];
8->5 [style = dotted, label="true"];
1->12 [style = dashed, label="0"];
8->3 [style = dotted, label="true"];
3->7 [style = solid, label="includeOffsets"];
6->7 [style = bold, label=""];
10->11 [style = dotted, label="true"];
11->14 [style = solid, label="includeOffsets"];
4->2 [style = dotted, label="true"];
}
