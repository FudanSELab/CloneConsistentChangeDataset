digraph {
3 [style = filled, label = "assertFileContains(getOutputDir().getAbsoluteFile() + \"/two.txt\",\"filename='two.xml'\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",\"filename='one.xml'\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\",\"filedir ='dir'\")@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",\"filename='one.xml'\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testFilenameAsParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/two.txt\",\"filename='two.xml'\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "executeTarget(\"testFilenameAndFiledirAsParam\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\",\"filename='four.xml'\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/three.txt\",\"filename='three.xml'\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertFileContains(getOutputDir().getAbsoluteFile() + \"/three.txt\",\"filename='three.xml'\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testFilenameAndFiledirAsParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "executeTarget(\"testFilenameAsParam\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "buildRule.executeTarget(\"testFilenameAsParam\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",\"filedir ='.'\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\",\"filename='four.xml'\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\",\"filedir ='-not-set-'\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testFilenameAsParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\",\"filedir ='-not-set-'\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->17 [style = bold, label=""];
14->16 [style = bold, label=""];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
15->2 [style = bold, label=""];
3->17 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
4->6 [style = bold, label=""];
16->6 [style = bold, label=""];
5->2 [style = dashed, label="0"];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
13->11 [style = bold, label=""];
6->12 [style = dashed, label="0"];
12->13 [style = bold, label=""];
0->4 [style = bold, label=""];
10->12 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->9 [style = dashed, label="0"];
17->15 [style = bold, label=""];
1->2 [style = bold, label=""];
5->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
