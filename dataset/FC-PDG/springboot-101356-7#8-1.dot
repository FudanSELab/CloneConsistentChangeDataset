digraph {
12 [style = filled, label = "SpringConfigurationPropertySources configurationSources = new SpringConfigurationPropertySources(sources)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "fromPropertySourceShouldFlattenPropertySources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "MutablePropertySources sources = new MutablePropertySources()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "environment.getPropertySources().addFirst(new MapPropertySource(\"foo\",Collections.singletonMap(\"foo\",\"bar\")))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fromPropertySourceShouldFlattenPropertySources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sources.addFirst(new PropertySource<Environment>(\"env\",environment){@Override public String getProperty(String key){return this.source.getProperty(key)}})@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sources.addLast(new MapPropertySource(\"baz\",Collections.singletonMap(\"baz\",\"barf\")))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(configurationSources.iterator()).toIterable().hasSize(5)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "StandardEnvironment environment = new StandardEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Iterable<ConfigurationPropertySource> configurationSources = ConfigurationPropertySources.from(sources)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "environment.getPropertySources().addFirst(new MapPropertySource(\"far\",Collections.singletonMap(\"far\",\"far\")))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(configurationSources.iterator()).hasSize(5)@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldFlattenEnvironment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->12 [style = bold, label=""];
7->0 [style = bold, label=""];
11->0 [style = bold, label=""];
1->5 [style = solid, label="sources"];
8->4 [style = bold, label=""];
1->8 [style = bold, label=""];
5->6 [style = bold, label=""];
1->12 [style = solid, label="sources"];
3->1 [style = bold, label=""];
5->9 [style = bold, label=""];
5->12 [style = dashed, label="0"];
12->6 [style = bold, label=""];
4->5 [style = bold, label=""];
0->8 [style = solid, label="environment"];
10->0 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
6->9 [style = dashed, label="0"];
}
