digraph {
4 [style = filled, label = "Row row = KeyGeneratorTestUtilities.getRow(record)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "BuiltinKeyGenerator keyGenerator = (BuiltinKeyGenerator)HoodieSparkKeyGeneratorFactory.createKeyGenerator(props)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assertions.assertEquals(keyGenerator.getPartitionPath(internalRow,row.schema()),\"timestamp=4357686\")@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Row row = KeyGeneratorTestUtilities.getRow(record)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assertions.assertEquals(keyGenerator.getRecordKey(row),\"_row_key:key1,pii_col:pi\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "InternalRow internalRow = KeyGeneratorTestUtilities.getInternalRow(row)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assertions.assertEquals(key.getPartitionPath(),\"timestamp=4357686\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHappyFlow['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assertions.assertEquals(key.getPartitionPath(),\"\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testComplexRecordKeyWithSimplePartitionPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "keyGenerator.buildFieldPositionMapIfNeeded(KeyGeneratorTestUtilities.structType)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testComplexRecordKeyWithSimplePartitionPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HoodieKey key = keyGenerator.getKey(record)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "GlobalDeleteKeyGenerator keyGenerator = new GlobalDeleteKeyGenerator(getProps())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TypedProperties props@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assertions.assertEquals(key.getRecordKey(),\"_row_key:key1,pii_col:pi\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.assertEquals(keyGenerator.getPartitionPath(row),\"\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "GenericRecord record = getRecord()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->7 [style = dotted, label="true"];
1->4 [style = solid, label="record"];
8->14 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
8->5 [style = bold, label=""];
1->5 [style = solid, label="record"];
13->17 [style = bold, label=""];
9->7 [style = dotted, label="true"];
10->11 [style = solid, label="internalRow"];
15->4 [style = bold, label=""];
9->3 [style = bold, label=""];
10->11 [style = bold, label=""];
1->6 [style = bold, label=""];
4->0 [style = solid, label="row"];
5->4 [style = bold, label=""];
6->2 [style = bold, label=""];
3->1 [style = bold, label=""];
2->8 [style = bold, label=""];
0->10 [style = bold, label=""];
0->16 [style = dashed, label="0"];
4->16 [style = solid, label="row"];
12->3 [style = bold, label=""];
7->3 [style = solid, label="props"];
5->10 [style = solid, label="row"];
2->14 [style = bold, label=""];
5->0 [style = solid, label="row"];
14->15 [style = bold, label=""];
5->4 [style = solid, label="row"];
4->0 [style = bold, label=""];
17->1 [style = bold, label=""];
1->6 [style = solid, label="record"];
0->16 [style = bold, label=""];
}
