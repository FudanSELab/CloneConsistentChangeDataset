digraph {
15 [style = filled, label = "final JobVertex source = new JobVertex(\"source\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return jobGraph@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "sink.setParallelism(parallelism)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "source.setInvokableClass()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "sink.connectNewDataSetAsInput(source,DistributionPattern.POINTWISE,ResultPartitionType.PIPELINED)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long delay@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "source.setInvokableClass()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int parallelism@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "source.setSlotSharingGroup(slotSharingGroup)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return JobGraphBuilder.newStreamingJobGraphBuilder().addJobVertices(Arrays.asList(source,sink)).setExecutionConfig(executionConfig).build()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "sink.setInvokableClass()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "JobGraph jobGraph = new JobGraph(source,sink)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "source.setParallelism(PARALLELISM)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sink.connectNewDataSetAsInput(source,DistributionPattern.POINTWISE,ResultPartitionType.PIPELINED)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final JobVertex sink = new JobVertex(\"sink\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "source.setParallelism(parallelism)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int parallelism@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SlotSharingGroup slotSharingGroup = new SlotSharingGroup()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "jobGraph.setExecutionConfig(executionConfig)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "final JobVertex source = new JobVertex(\"Source\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return JobGraphTestUtils.streamingJobGraph(source,sink)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "executionConfig.setRestartStrategy(RestartStrategies.fixedDelayRestart(1,delay))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "createJobGraph['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "createJobGraph['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sink.setSlotSharingGroup(slotSharingGroup)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sink.setParallelism(PARALLELISM)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createJobGraph['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "jobGraph.setJobType(JobType.STREAMING)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7->13 [style = bold, label=""];
25->0 [style = bold, label=""];
4->9 [style = bold, label=""];
5->8 [style = bold, label=""];
13->16 [style = solid, label="jobGraph"];
2->20 [style = bold, label=""];
7->1 [style = bold, label=""];
4->24 [style = bold, label=""];
21->11 [style = dotted, label="true"];
2->3 [style = bold, label=""];
27->28 [style = bold, label=""];
12->17 [style = bold, label=""];
23->26 [style = bold, label=""];
6->8 [style = solid, label="parallelism"];
8->14 [style = bold, label=""];
15->7 [style = solid, label="source"];
11->8 [style = solid, label="parallelism"];
9->10 [style = bold, label=""];
3->16 [style = bold, label=""];
26->4 [style = solid, label="source"];
17->14 [style = solid, label="slotSharingGroup"];
10->7 [style = bold, label=""];
15->5 [style = bold, label=""];
26->22 [style = bold, label=""];
12->11 [style = dotted, label="true"];
13->24 [style = dashed, label="0"];
19->2 [style = solid, label="delay"];
14->0 [style = bold, label=""];
18->1 [style = bold, label=""];
22->27 [style = bold, label=""];
12->6 [style = dotted, label="true"];
0->13 [style = solid, label="sink"];
6->9 [style = solid, label="parallelism"];
11->2 [style = solid, label="delay"];
0->4 [style = bold, label=""];
21->19 [style = dotted, label="true"];
3->20 [style = dashed, label="0"];
28->24 [style = solid, label="sink"];
9->0 [style = dashed, label="0"];
17->15 [style = bold, label=""];
28->25 [style = bold, label=""];
1->2 [style = bold, label=""];
13->18 [style = bold, label=""];
17->10 [style = solid, label="slotSharingGroup"];
11->9 [style = solid, label="parallelism"];
21->17 [style = bold, label=""];
15->13 [style = solid, label="source"];
1->3 [style = solid, label="executionConfig"];
26->24 [style = solid, label="source"];
}
