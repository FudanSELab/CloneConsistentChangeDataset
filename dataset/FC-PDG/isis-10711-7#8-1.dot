digraph {
2 [style = filled, label = "Assert.assertThat(facet.value(),is(PromptStyle.INLINE))@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.checking(new Expectations(){})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertThat(facet.value(),is(PromptStyle.INLINE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when_annotated_with_as_configured['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "when_annotated_with_as_configured['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertThat(facet.value(),is(PromptStyle.INLINE))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertThat(facet,is((Matcher)anInstanceOf()))@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertThat(facet,is((Matcher)anInstanceOf()))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertThat(facet,is(anInstanceOf()))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(Optional.of(mockPropertyLayout),stubConfiguration,mockFacetHolder)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(Collections.singletonList(mockPropertyLayout),mockConfiguration,mockFacetHolder)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "stubConfiguration.getViewer().getWicket().setPromptStyle(PromptStyle.INLINE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "when_not_annotated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3->8 [style = dashed, label="0"];
4->3 [style = solid, label="facet"];
4->3 [style = bold, label=""];
4->9 [style = dashed, label="0"];
0->9 [style = bold, label=""];
8->6 [style = bold, label=""];
7->5 [style = bold, label=""];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
12->4 [style = solid, label="facet"];
10->0 [style = bold, label=""];
0->12 [style = bold, label=""];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
9->8 [style = solid, label="facet"];
}
