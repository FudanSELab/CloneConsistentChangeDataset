digraph {
4 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "obj1 = new DefaultPieDataset()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ko1 = new KeyedObject(\"Test\",obj1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Object obj1 = new ArrayList()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(ko1 != ko2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "KeyedObject ko2 = (KeyedObject)ko1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "KeyedObject ko1 = new KeyedObject(\"Test\",\"Object\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(ko2.getObject() != obj1)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "KeyedObject ko1 = new KeyedObject(\"Test\",obj1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(ko2.getObject() == obj1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19->13 [style = solid, label="ko1"];
15->10 [style = bold, label=""];
19->18 [style = bold, label=""];
12->11 [style = solid, label="obj1"];
14->9 [style = solid, label="ko2"];
10->14 [style = bold, label=""];
11->1 [style = bold, label=""];
18->8 [style = solid, label="ko2"];
1->15 [style = dashed, label="0"];
0->12 [style = bold, label=""];
14->2 [style = solid, label="ko2"];
12->6 [style = bold, label=""];
17->19 [style = bold, label=""];
18->13 [style = solid, label="ko2"];
11->15 [style = bold, label=""];
6->3 [style = solid, label="ko1"];
13->4 [style = solid, label="ko2"];
7->9 [style = bold, label=""];
1->10 [style = solid, label="obj1"];
15->5 [style = solid, label="obj1"];
12->19 [style = dashed, label="0"];
13->3 [style = bold, label=""];
3->8 [style = bold, label=""];
6->13 [style = bold, label=""];
12->6 [style = solid, label="obj1"];
18->13 [style = bold, label=""];
13->3 [style = solid, label="ko2"];
15->10 [style = solid, label="obj1"];
9->5 [style = bold, label=""];
1->5 [style = solid, label="obj1"];
14->2 [style = bold, label=""];
8->4 [style = bold, label=""];
2->7 [style = bold, label=""];
4->11 [style = bold, label=""];
1->10 [style = bold, label=""];
16->12 [style = bold, label=""];
10->2 [style = solid, label="ko1"];
}
