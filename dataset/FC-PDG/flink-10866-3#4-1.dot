digraph {
7 [style = filled, label = "testHarness.close()@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "TestCassandraSink casSinkFunc = new TestCassandraSink()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CompletableFuture<ResultSet> completableFuture = new CompletableFuture<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(0,casSinkFunc.getNumOfPendingRecords())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(0,casSinkFunc.getNumOfPendingRecords())@@@23@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "casSinkFunc.invoke(\"hello\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ResultSetFuture resultSetFuture = ResultSetFutures.fromCompletableFuture(completableFuture)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "t.getState() != Thread.State.WAITING@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Thread t = new CheckedThread(\"Flink-CassandraSinkBaseTest\"){@Override public void go(){testHarness.close()}}@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Thread t = new CheckedThread(\"Flink-CassandraSinkBaseTest\"){@Override public void go(){testHarness.snapshot(123L,123L)latch.countDown()}}@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "completableFuture.complete(null)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testWaitForPendingUpdatesOnSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "OneInputStreamOperatorTestHarness<String,Object> testHarness = new OneInputStreamOperatorTestHarness<>(new StreamSink<>(casSinkFunc))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(1,casSinkFunc.getNumOfPendingRecords())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(1,casSinkFunc.getNumOfPendingRecords())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "testWaitForPendingUpdatesOnClose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "t.start()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "casSinkFunc.setResultFuture(resultSetFuture)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testWaitForPendingUpdatesOnSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Thread.sleep(5)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CompletableFuture<ResultSet> completableFuture = new CompletableFuture<>()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "t.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.open()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(1,casSinkFunc.getNumOfPendingRecords())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
0->6 [style = solid, label="casSinkFunc"];
4->14 [style = bold, label=""];
10->8 [style = solid, label="completableFuture"];
20->17 [style = bold, label=""];
5->20 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
0->19 [style = bold, label=""];
19->10 [style = solid, label="completableFuture"];
22->9 [style = bold, label=""];
14->22 [style = bold, label=""];
8->11 [style = solid, label="resultSetFuture"];
19->10 [style = bold, label=""];
15->16 [style = bold, label=""];
23->0 [style = bold, label=""];
12->7 [style = bold, label=""];
2->12 [style = bold, label=""];
3->0 [style = bold, label=""];
14->16 [style = dotted, label="true"];
6->1 [style = bold, label=""];
10->8 [style = bold, label=""];
17->14 [style = bold, label=""];
2->21 [style = bold, label=""];
5->4 [style = bold, label=""];
11->13 [style = bold, label=""];
10->8 [style = solid, label="resultSetFuture"];
13->5 [style = bold, label=""];
16->14 [style = bold, label=""];
1->10 [style = bold, label=""];
8->11 [style = bold, label=""];
18->0 [style = bold, label=""];
16->9 [style = bold, label=""];
16->15 [style = dotted, label="true"];
}
