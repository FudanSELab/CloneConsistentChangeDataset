digraph {
7 [style = filled, label = "int minPrefixChars = params.get(MIN_PREFIX_CHARS) != null? Integer.parseInt(params.get(MIN_PREFIX_CHARS).toString()): AnalyzingInfixSuggester.DEFAULT_MIN_PREFIX_CHARS@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Analyzer queryAnalyzer = ft.getQueryAnalyzer()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Analyzer indexAnalyzer = ft.getIndexAnalyzer()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "String indexPath = params.get(INDEX_PATH) != null? params.get(INDEX_PATH).toString(): DEFAULT_INDEX_PATH@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "BlenderType blenderType = getBlenderType(params.get(BLENDER_TYPE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Object fieldTypeName = params.get(QUERY_ANALYZER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return new BlendedInfixSuggester(core.getSolrConfig().luceneMatchVersion,FSDirectory.open(new File(indexPath)),indexAnalyzer,queryAnalyzer,minPrefixChars,blenderType,numFactor)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "SolrCore core@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "int numFactor = params.get(NUM_FACTOR) != null? Integer.parseInt(params.get(NUM_FACTOR).toString()): BlendedInfixSuggester.DEFAULT_NUM_FACTOR@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return new AnalyzingInfixSuggester(core.getSolrConfig().luceneMatchVersion,FSDirectory.open(new File(indexPath)),indexAnalyzer,queryAnalyzer,minPrefixChars)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fieldTypeName == null@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Analyzer indexAnalyzer = ft.getAnalyzer()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "NamedList params@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SolrCore core@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "throw new IllegalArgumentException(\"Error in configuration: \" + fieldTypeName.toString() + \" is not defined in the schema\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw new IllegalArgumentException(\"Error in configuration: \" + QUERY_ANALYZER + \" parameter is mandatory\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "NamedList params@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ft == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FieldType ft = core.getLatestSchema().getFieldTypeByName(fieldTypeName.toString())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
1->4 [style = bold, label=""];
5->6 [style = solid, label="queryAnalyzer"];
6->20 [style = dashed, label="0"];
18->20 [style = solid, label="blenderType"];
7->6 [style = solid, label="minPrefixChars"];
18->17 [style = bold, label=""];
19->21 [style = dotted, label="true"];
4->2 [style = bold, label=""];
10->20 [style = solid, label="indexPath"];
2->9 [style = bold, label=""];
15->14 [style = dotted, label="true"];
7->20 [style = solid, label="minPrefixChars"];
10->7 [style = bold, label=""];
17->20 [style = solid, label="numFactor"];
9->16 [style = bold, label=""];
19->8 [style = bold, label=""];
2->13 [style = bold, label=""];
5->20 [style = solid, label="queryAnalyzer"];
15->3 [style = dotted, label="true"];
8->1 [style = bold, label=""];
8->1 [style = solid, label="fieldTypeName"];
16->6 [style = solid, label="indexAnalyzer"];
13->6 [style = solid, label="indexAnalyzer"];
2->9 [style = dotted, label="true"];
12->4 [style = bold, label=""];
19->3 [style = dotted, label="true"];
11->0 [style = dotted, label="true"];
1->12 [style = dotted, label="true"];
7->6 [style = bold, label=""];
13->16 [style = dashed, label="0"];
1->12 [style = bold, label=""];
13->5 [style = bold, label=""];
16->5 [style = bold, label=""];
13->20 [style = solid, label="indexAnalyzer"];
7->18 [style = bold, label=""];
11->8 [style = bold, label=""];
17->20 [style = bold, label=""];
4->2 [style = solid, label="ft"];
11->3 [style = dotted, label="true"];
15->8 [style = bold, label=""];
10->6 [style = solid, label="indexPath"];
9->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
