digraph {
1 [style = filled, label = "ShardingSphereResource resource = new ShardingSphereResource(Collections.emptyMap(),mock(),mock())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(actual,is(expected))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Collection<ExecutionUnit> expected = new LinkedHashSet<>(2,1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ExecutionUnit expectedUnit2 = new ExecutionUnit(\"actualName2\",new SQLUnit(\"sql2\",Collections.singletonList(\"parameter2\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "expected.add(expectedUnit2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RouteUnit routeUnit1 = new RouteUnit(new RouteMapper(\"logicName1\",\"actualName1\"),Collections.singletonList(new RouteMapper(\"logicName1\",\"actualName1\")))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expected.add(expectedUnit2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"name\",resource,ruleMetaData,buildSchema())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collection<ExecutionUnit> expected = new LinkedHashSet<>(1,1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ExecutionUnit expectedUnit1 = new ExecutionUnit(\"actualName1\",new SQLUnit(\"sql1\",Collections.singletonList(\"parameter1\")))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(actual,is(expected))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Map<RouteUnit,SQLRewriteUnit> sqlRewriteUnits = new HashMap<>(2,1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "SQLRewriteUnit sqlRewriteUnit2 = new SQLRewriteUnit(\"sql2\",Collections.singletonList(\"parameter2\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"name\",resource,ruleMetaData,buildSchemaWithoutPrimaryKey())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RouteUnit routeUnit2 = new RouteUnit(new RouteMapper(\"logicName2\",\"actualName2\"),Collections.singletonList(new RouteMapper(\"logicName2\",\"actualName2\")))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(actual.iterator().next().getSqlUnit().getSqlRuntimeContext().getPrimaryKeysMetaData().size(),is(1))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "SQLRewriteUnit sqlRewriteUnit1 = new SQLRewriteUnit(\"sql1\",Collections.singletonList(\"parameter1\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ShardingSphereRuleMetaData ruleMetaData = new ShardingSphereRuleMetaData(Collections.emptyList(),Collections.emptyList())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sqlRewriteUnits.put(routeUnit2,sqlRewriteUnit2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Collection<ExecutionUnit> actual = ExecutionContextBuilder.build(metaData,new RouteSQLRewriteResult(sqlRewriteUnits),mock())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RouteUnit routeUnit2 = new RouteUnit(new RouteMapper(\"logicName2\",\"actualName2\"),Collections.singletonList(new RouteMapper(\"logicName1\",\"actualName1\")))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(actual.iterator().next().getSqlUnit().getSqlRuntimeContext().getPrimaryKeysMetaData().size(),is(0))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertBuildRouteSQLRewriteResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sqlRewriteUnits.put(routeUnit1,sqlRewriteUnit1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertBuildRouteSQLRewriteResultWithEmptyPrimaryKeyMeta['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertBuildRouteSQLRewriteResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "expected.add(expectedUnit1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
5->18 [style = solid, label="metaData"];
1->4 [style = bold, label=""];
11->3 [style = solid, label="expected"];
21->15 [style = solid, label="routeUnit2"];
2->12 [style = solid, label="routeUnit2"];
12->5 [style = bold, label=""];
16->8 [style = bold, label=""];
15->12 [style = solid, label="sqlRewriteUnit2"];
11->14 [style = bold, label=""];
9->24 [style = dashed, label="0"];
18->17 [style = bold, label=""];
16->4 [style = solid, label="routeUnit1"];
6->0 [style = solid, label="expectedUnit2"];
5->18 [style = bold, label=""];
26->15 [style = solid, label="sqlRewriteUnit2"];
5->17 [style = solid, label="resource"];
16->21 [style = dashed, label="0"];
10->6 [style = bold, label=""];
20->18 [style = solid, label="sqlRewriteUnits"];
19->16 [style = bold, label=""];
3->9 [style = bold, label=""];
25->24 [style = bold, label=""];
21->26 [style = bold, label=""];
11->13 [style = dashed, label="0"];
18->22 [style = bold, label=""];
14->0 [style = bold, label=""];
8->2 [style = bold, label=""];
23->21 [style = bold, label=""];
6->11 [style = bold, label=""];
17->13 [style = solid, label="metaData"];
7->16 [style = bold, label=""];
2->15 [style = bold, label=""];
1->12 [style = bold, label=""];
22->6 [style = solid, label="expectedUnit2"];
4->12 [style = bold, label=""];
8->4 [style = solid, label="sqlRewriteUnit1"];
13->25 [style = solid, label="expected"];
1->5 [style = solid, label="resource"];
17->13 [style = bold, label=""];
17->5 [style = dashed, label="0"];
12->5 [style = solid, label="ruleMetaData"];
13->6 [style = bold, label=""];
10->14 [style = solid, label="expectedUnit1"];
20->15 [style = bold, label=""];
18->25 [style = solid, label="actual"];
1->13 [style = solid, label="sqlRewriteUnits"];
22->13 [style = bold, label=""];
26->20 [style = bold, label=""];
6->25 [style = bold, label=""];
13->3 [style = solid, label="actual"];
15->1 [style = bold, label=""];
18->17 [style = solid, label="ruleMetaData"];
}
