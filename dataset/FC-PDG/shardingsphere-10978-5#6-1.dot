digraph {
3 [style = filled, label = "when(connection.getSchemaName()).thenReturn(\"schema\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final SQLException ex@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ResponseHeader response = RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection).execute()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(ex.getMessage(),is(\"No Registry center to execute `AlterReadwriteSplittingRuleStatement` SQL\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "BackendConnection connection = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertExecuteAlterReadwriteSplittingRuleContext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "setContextManager(true)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertExecuteShardingTableRuleContext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ResponseHeader response = RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection).execute()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "setGovernanceMetaDataContexts(true)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertExecuteShardingTableRuleContext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(response,instanceOf())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(ex.getMessage(),is(\"No Registry center to execute `CreateShardingTableRuleStatement` SQL\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RDLBackendHandlerFactory.newInstance(new MySQLDatabaseType(),mock(),connection)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
9->0 [style = bold, label=""];
0->1 [style = solid, label="response"];
11->1 [style = bold, label=""];
7->13 [style = dotted, label="true"];
0->11 [style = dashed, label="0"];
7->4 [style = bold, label=""];
2->9 [style = bold, label=""];
3->12 [style = bold, label=""];
6->12 [style = solid, label="connection"];
10->6 [style = bold, label=""];
8->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
6->2 [style = solid, label="connection"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
7->4 [style = dotted, label="true"];
4->8 [style = bold, label=""];
11->1 [style = solid, label="response"];
13->8 [style = bold, label=""];
4->13 [style = dashed, label="0"];
8->11 [style = bold, label=""];
14->6 [style = bold, label=""];
2->8 [style = bold, label=""];
}
