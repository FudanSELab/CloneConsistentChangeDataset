digraph {
20 [style = filled, label = "byte(( b = baos.toByteArray()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "record.setFlag(HeadersFootersAtom.fHasFooter,false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "HeadersFootersAtom record = new HeadersFootersAtom()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "record.setFlag(HeadersFootersAtom.fHasTodayDate,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "record.setFlag(HeadersFootersAtom.fHasDate,true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testNewRecord['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "record.setObjectId(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "record.writeOut(baos)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "UnsynchronizedByteArrayOutputStream baos = new UnsynchronizedByteArrayOutputStream()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertArrayEquals(data,b)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testNewRecord['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "record.setFlag(HeadersFootersAtom.fHasFooter,true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ExMediaAtom ref = new ExMediaAtom(data,0,data.length)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "record.writeOut(baos)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "record.setFlag(HeadersFootersAtom.fHasTodayDate,false)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ExMediaAtom record = new ExMediaAtom()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "record.setFlag(HeadersFootersAtom.fHasDate,false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertArrayEquals(data,baos.toByteArray())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testNewRecord['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(0,ref.getMask())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->20 [style = dashed, label="0"];
3->1 [style = bold, label=""];
19->12 [style = bold, label=""];
10->14 [style = bold, label=""];
18->19 [style = bold, label=""];
12->20 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
8->4 [style = solid, label="baos"];
20->15 [style = solid, label="b"];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
1->6 [style = bold, label=""];
5->4 [style = solid, label="baos"];
11->10 [style = bold, label=""];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
19->12 [style = solid, label="baos"];
5->8 [style = dashed, label="0"];
9->3 [style = bold, label=""];
14->18 [style = bold, label=""];
8->4 [style = bold, label=""];
20->15 [style = bold, label=""];
17->21 [style = bold, label=""];
0->5 [style = bold, label=""];
21->13 [style = bold, label=""];
}
