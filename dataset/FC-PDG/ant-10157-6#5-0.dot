digraph {
10 [style = filled, label = "assertTrue(\"Expected file \" + result + \" doesn't exist\",result.exists())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEqualContent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(expectedByte,inResult.read())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File expect@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "File result@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEqualContent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(\"End of file\",-1,inResult.read())@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEqualContent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int expectedByte = inExpect.read()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int expectedByte = inExpect.read()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "File expect@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "!result.exists()@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fail(\"Expected file \" + result + \" doesn't exist\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expectedByte != -1@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "expectedByte = inExpect.read()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedByte != -1@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "File result@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0->2 [style = dotted, label="true"];
0->6 [style = bold, label=""];
0->1 [style = dotted, label="true"];
3->9 [style = solid, label="expectedByte"];
11->12 [style = bold, label=""];
16->2 [style = dotted, label="true"];
8->4 [style = bold, label=""];
6->7 [style = dotted, label="true"];
4->5 [style = bold, label=""];
13->10 [style = solid, label="result"];
4->12 [style = solid, label="expectedByte"];
10->11 [style = bold, label=""];
11->3 [style = solid, label="expectedByte"];
16->15 [style = dotted, label="true"];
4->8 [style = dotted, label="true"];
7->3 [style = bold, label=""];
12->4 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
11->12 [style = solid, label="expectedByte"];
12->3 [style = bold, label=""];
4->9 [style = bold, label=""];
4->3 [style = solid, label="expectedByte"];
6->3 [style = bold, label=""];
16->6 [style = bold, label=""];
4->12 [style = bold, label=""];
14->2 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
9->8 [style = bold, label=""];
6->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
14->10 [style = bold, label=""];
3->4 [style = solid, label="expectedByte"];
8->9 [style = solid, label="expectedByte"];
12->8 [style = bold, label=""];
3->4 [style = bold, label=""];
2->7 [style = solid, label="result"];
12->3 [style = dotted, label="true"];
8->4 [style = solid, label="expectedByte"];
}
