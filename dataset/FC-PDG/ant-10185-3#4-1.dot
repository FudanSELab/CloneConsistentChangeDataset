digraph {
3 [style = filled, label = "assertTrue(getFullLog().indexOf(\"dangling\") == -1)@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFileIsNotPresent(c)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "executeTarget(\"emptydircopy\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "executeTarget(\"emptycopy\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertFileIsPresent(c)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testEmptyCopy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testEmptyCopy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String d = getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String c = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String c = getProject().getProperty(\"dest\") + \"/a/b/c\"@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "buildRule.executeTarget(\"emptycopy\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertFileIsNotPresent(d)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testEmptyDirCopy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(buildRule.getFullLog().indexOf(\"dangling\") == -1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
14->3 [style = bold, label=""];
5->10 [style = bold, label=""];
7->11 [style = bold, label=""];
5->14 [style = dashed, label="0"];
4->6 [style = bold, label=""];
6->7 [style = dashed, label="0"];
0->5 [style = solid, label="c"];
2->9 [style = bold, label=""];
9->5 [style = solid, label="c"];
11->2 [style = bold, label=""];
13->1 [style = bold, label=""];
8->7 [style = bold, label=""];
0->14 [style = solid, label="c"];
11->2 [style = solid, label="d"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
0->14 [style = bold, label=""];
2->0 [style = bold, label=""];
6->13 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
9->5 [style = bold, label=""];
1->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
0->5 [style = bold, label=""];
1->2 [style = solid, label="d"];
}
