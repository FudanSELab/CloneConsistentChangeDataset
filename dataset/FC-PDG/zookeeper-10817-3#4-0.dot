digraph {
44 [style = filled, label = "final DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "offerThread.start()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "byte(( data = null@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "final String threadTestString = testString + i@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(threadTestString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int n@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "String dir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "final byte(( takeResult = new byte((((((@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final ZooKeeper clients = new ZooKeeper((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "offerThread.join()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "byte data = null@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testTakeWait2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "int num_attempts = 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int num_clients = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "createNremoveMtest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String dir = \"/testTakeWait2\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final int num_clients = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "takeThread.start()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "takeThread.join()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),threadTestString)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "createNremoveMtest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int m@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Thread.sleep(1000)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < m@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "i < num_attempts@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->24 [style = bold, label=""];
42->41 [style = bold, label=""];
25->1 [style = bold, label=""];
12->39 [style = solid, label="i"];
10->8 [style = solid, label="m"];
5->20 [style = bold, label=""];
17->6 [style = dotted, label="true"];
48->4 [style = bold, label=""];
13->4 [style = solid, label="testString"];
16->7 [style = bold, label=""];
43->42 [style = bold, label=""];
12->15 [style = dotted, label="true"];
47->34 [style = dotted, label="true"];
15->4 [style = solid, label="i"];
38->31 [style = bold, label=""];
47->37 [style = dotted, label="true"];
29->26 [style = dotted, label="true"];
20->40 [style = dotted, label="true"];
20->17 [style = solid, label="i"];
22->8 [style = bold, label=""];
12->47 [style = bold, label=""];
21->19 [style = solid, label="data"];
23->13 [style = bold, label=""];
33->46 [style = bold, label=""];
3->19 [style = solid, label="data"];
37->48 [style = bold, label=""];
21->1 [style = bold, label=""];
2->15 [style = bold, label=""];
8->22 [style = dotted, label="true"];
21->25 [style = dashed, label="0"];
17->5 [style = dotted, label="true"];
16->33 [style = dashed, label="0"];
13->14 [style = bold, label=""];
17->20 [style = bold, label=""];
17->20 [style = dotted, label="true"];
14->16 [style = bold, label=""];
24->28 [style = bold, label=""];
17->5 [style = bold, label=""];
49->12 [style = bold, label=""];
49->47 [style = solid, label="num_attempts"];
28->18 [style = bold, label=""];
11->4 [style = solid, label="i"];
12->21 [style = bold, label=""];
1->22 [style = solid, label="i"];
18->17 [style = solid, label="i"];
12->2 [style = dotted, label="true"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
44->17 [style = bold, label=""];
26->6 [style = solid, label="dir"];
23->9 [style = dotted, label="true"];
17->20 [style = solid, label="i"];
20->5 [style = dotted, label="true"];
47->43 [style = dotted, label="true"];
47->41 [style = dotted, label="true"];
5->6 [style = bold, label=""];
11->12 [style = solid, label="i"];
40->5 [style = bold, label=""];
13->31 [style = dashed, label="0"];
12->47 [style = dashed, label="0"];
27->12 [style = solid, label="n"];
47->42 [style = dotted, label="true"];
32->39 [style = solid, label="testString"];
47->36 [style = dotted, label="true"];
15->12 [style = bold, label=""];
12->4 [style = dotted, label="true"];
9->6 [style = solid, label="dir"];
6->40 [style = solid, label="clients"];
35->34 [style = bold, label=""];
4->47 [style = bold, label=""];
10->19 [style = solid, label="m"];
47->36 [style = bold, label=""];
20->6 [style = dotted, label="true"];
46->44 [style = bold, label=""];
29->10 [style = dotted, label="true"];
6->20 [style = solid, label="i"];
1->8 [style = bold, label=""];
47->48 [style = dotted, label="true"];
31->32 [style = bold, label=""];
40->5 [style = solid, label="i"];
36->48 [style = solid, label="takeResult"];
39->48 [style = solid, label="threadTestString"];
8->3 [style = bold, label=""];
4->39 [style = solid, label="i"];
25->19 [style = solid, label="data"];
32->33 [style = bold, label=""];
36->39 [style = bold, label=""];
8->3 [style = dotted, label="true"];
6->20 [style = bold, label=""];
23->10 [style = dotted, label="true"];
14->32 [style = dashed, label="0"];
7->46 [style = dashed, label="0"];
7->28 [style = dashed, label="0"];
47->39 [style = dotted, label="true"];
31->40 [style = solid, label="dir"];
7->18 [style = bold, label=""];
20->49 [style = bold, label=""];
47->4 [style = dotted, label="true"];
12->47 [style = solid, label="i"];
5->6 [style = solid, label="clients"];
23->0 [style = dotted, label="true"];
13->19 [style = solid, label="testString"];
41->35 [style = bold, label=""];
20->17 [style = bold, label=""];
5->20 [style = solid, label="i"];
16->24 [style = dashed, label="0"];
8->19 [style = bold, label=""];
29->27 [style = dotted, label="true"];
39->43 [style = bold, label=""];
47->45 [style = dotted, label="true"];
18->17 [style = bold, label=""];
1->8 [style = solid, label="i"];
20->6 [style = bold, label=""];
15->12 [style = solid, label="i"];
3->22 [style = bold, label=""];
11->15 [style = solid, label="i"];
34->30 [style = bold, label=""];
47->30 [style = dotted, label="true"];
4->47 [style = solid, label="i"];
12->4 [style = bold, label=""];
6->40 [style = bold, label=""];
36->37 [style = solid, label="takeResult"];
12->25 [style = bold, label=""];
12->4 [style = solid, label="i"];
47->35 [style = dotted, label="true"];
45->37 [style = bold, label=""];
0->12 [style = solid, label="n"];
22->8 [style = solid, label="i"];
30->45 [style = bold, label=""];
17->11 [style = bold, label=""];
29->13 [style = bold, label=""];
}
