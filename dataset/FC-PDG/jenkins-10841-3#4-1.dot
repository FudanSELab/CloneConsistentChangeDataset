digraph {
0 [style = filled, label = "String contextPath = \"/jenkins\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String itUrl = \"iturl/\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testGetActionUrl_absolutePath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "String result = Functions.getActionUrl(itUrl,createMockAction(path))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testGetActionUrl_absolutePath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(contextPath + \"/\" + itUrl + path,result)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String result = Functions.getActionUrl(null,createMockAction(path))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mockStatic()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(contextPath + path,result)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testGetActionUrl_relativePath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String(( paths = {\"foo/bar\",\"./foo/bar\",\"../foo/bar\"}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = solid, label="req"];
0->2 [style = solid, label="contextPath"];
0->12 [style = solid, label="contextPath"];
2->6 [style = bold, label=""];
9->12 [style = solid, label="result"];
6->9 [style = dashed, label="0"];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
12->9 [style = bold, label=""];
1->7 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
11->9 [style = solid, label="itUrl"];
8->0 [style = bold, label=""];
0->5 [style = solid, label="contextPath"];
3->9 [style = bold, label=""];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
2->12 [style = dashed, label="0"];
10->0 [style = bold, label=""];
9->12 [style = bold, label=""];
6->2 [style = solid, label="result"];
11->12 [style = solid, label="itUrl"];
0->5 [style = bold, label=""];
}
