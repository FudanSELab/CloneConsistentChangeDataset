digraph {
17 [style = filled, label = "b.setIf(a.resolver() != ,XML_resolver,a.resolver())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "cpb.setIfNotEmpty(XML_addBeanTypes,bool(a.addBeanTypes()))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "cpb.setIfNotEmpty(XML_enableNamespaces,bool(a.enableNamespaces()))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "cpb.setIfNotEmpty(BEAN_ignoreUnknownBeanProperties,bool(a.ignoreUnknownBeanProperties()))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "b.setIfNotEmpty(XML_defaultNamespace,string(a.defaultNamespace()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "cpb.setIfNotEmpty(CONTEXT_debug,bool(a.debug()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cpb.setIf(a.eventAllocator() != ,XML_eventAllocator,a.eventAllocator())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "AnnotationInfo<XmlConfig> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "cpb.setIfNotEmpty(BEAN_timeZone,timeZone(a.timeZone()))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "b.setIfNotEmpty(XML_addNamespaceUrisToRoot,bool(a.addNamespaceUrisToRoot()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cpb.setIfNotEmpty(XML_disableAutoDetectNamespaces,bool(a.disableAutoDetectNamespaces()))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "cpb.setIfNotEmpty(BEAN_typePropertyName,string(a.typePropertyName()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "XmlConfig a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "b.setIfNotEmpty(XML_validating,bool(a.validating()))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "cpb.setIfNotEmpty(BEAN_disableIgnoreMissingSetters,bool(a.disableIgnoreMissingSetters()))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "cpb.setIfNotEmpty(BEAN_notBeanPackages,stringList(a.notBeanPackages_replace()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beanMapPutReturnsOldValue,bool(a.beanMapPutReturnsOldValue()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "cpb.prependTo(BEAN_swaps,a.swaps())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "b.setIfNotEmpty(XML_disableAutoDetectNamespaces,bool(a.disableAutoDetectNamespaces()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "cpb.setIfNotEmpty(BEAN_notBeanClasses,a.notBeanClasses())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "cpb.setIfNotEmpty(BEAN_disableBeansRequireSomeProperties,bool(a.disableBeansRequireSomeProperties()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ContextPropertiesBuilder b@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "cpb.setIfNotEmpty(XML_validating,bool(a.validating()))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "cpb.prependTo(BEAN_beanDictionary,a.dictionary())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "cpb.addTo(BEAN_notBeanPackages,stringList(a.notBeanPackages()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "cpb.setIfNotEmpty(BEAN_sortProperties,bool(a.sortProperties()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "b.setIfNotEmpty(XML_preserveRootElement,bool(a.preserveRootElement()))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "cpb.setIfNotEmpty(BEAN_locale,locale(a.locale()))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beanConstructorVisibility,visibility(a.beanConstructorVisibility(),\"beanConstructorVisibility\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cpb.setIfNotEmpty(XML_defaultNamespace,string(a.defaultNamespace()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "cpb.setIfNotEmpty(BEAN_disableInterfaceProxies,bool(a.disableInterfaceProxies()))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "cpb.setIf(a.namespaces().length > 0,XML_namespaces,Namespace.createArray(stringList(a.namespaces())))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beanMethodVisibility,visibility(a.beanMethodVisibility(),\"beanMethodVisibility\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "b.setIfNotEmpty(XML_enableNamespaces,bool(a.enableNamespaces()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "cpb.setIfNotEmpty(XML_preserveRootElement,bool(a.preserveRootElement()))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "cpb.setIf(a.reporter() != ,XML_reporter,a.reporter())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "b.setIfNotEmpty(XML_addBeanTypes,bool(a.addBeanTypes()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beanClassVisibility,visibility(a.beanClassVisibility(),\"beanClassVisibility\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "AnnotationInfo<BeanConfig> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "cpb.setIfNotEmpty(BEAN_swaps,a.swaps_replace())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beansRequireSerializable,bool(a.beansRequireSerializable()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "cpb.setIfNotEmpty(BEAN_useEnumNames,bool(a.useEnumNames()))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "VarResolverSession vr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cpb.setIf(a.resolver() != ,XML_resolver,a.resolver())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "cpb.setIfNotEmpty(BEAN_disableIgnoreUnknownNullBeanProperties,bool(a.disableIgnoreUnknownNullBeanProperties()))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "cpb.setIf(a.propertyNamer() != ,BEAN_propertyNamer,a.propertyNamer())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "cpb.setIfNotEmpty(BEAN_ignoreInvocationExceptionsOnSetters,bool(a.ignoreInvocationExceptionsOnSetters()))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beanFieldVisibility,visibility(a.beanFieldVisibility(),\"beanFieldVisibility\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beansRequireSettersForGetters,bool(a.beansRequireSettersForGetters()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "cpb.setIfNotEmpty(BEAN_notBeanClasses,a.notBeanClasses_replace())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "cpb.setIfNotEmpty(BEAN_ignoreInvocationExceptionsOnGetters,bool(a.ignoreInvocationExceptionsOnGetters()))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "b.setIf(a.reporter() != ,XML_reporter,a.reporter())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "BeanConfig a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "cpb.setIfNotEmpty(BEAN_mediaType,mediaType(a.mediaType()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "b.setIf(a.namespaces().length > 0,XML_namespaces,Namespace.createArray(stringList(a.namespaces())))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "cpb.setIfNotEmpty(BEAN_useJavaBeanIntrospector,bool(a.useJavaBeanIntrospector()))@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "cpb.setIfNotEmpty(BEAN_disableIgnoreTransientFields,bool(a.disableIgnoreTransientFields()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "b.setIf(a.eventAllocator() != ,XML_eventAllocator,a.eventAllocator())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "cpb.setIfNotEmpty(BEAN_findFluentSetters,bool(a.findFluentSetters()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "cpb.setIfNotEmpty(XML_addNamespaceUrisToRoot,bool(a.addNamespaceUrisToRoot()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "asList(a.interfaces()).stream().map(null).forEach(null)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "AnnotationInfo<XmlConfig> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beanDictionary,a.dictionary_replace())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "cpb.setIfNotEmpty(BEAN_beansRequireDefaultConstructor,bool(a.beansRequireDefaultConstructor()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
58->50 [style = bold, label=""];
15->10 [style = bold, label=""];
37->49 [style = bold, label=""];
4->1 [style = dotted, label="true"];
12->17 [style = dashed, label="0"];
49->51 [style = bold, label=""];
6->67 [style = dashed, label="0"];
65->56 [style = bold, label=""];
13->25 [style = dashed, label="0"];
51->32 [style = bold, label=""];
23->29 [style = bold, label=""];
39->57 [style = bold, label=""];
43->40 [style = bold, label=""];
63->55 [style = bold, label=""];
3->5 [style = bold, label=""];
59->62 [style = dotted, label="true"];
5->35 [style = dashed, label="0"];
10->12 [style = bold, label=""];
2->15 [style = bold, label=""];
14->11 [style = bold, label=""];
59->67 [style = bold, label=""];
19->18 [style = bold, label=""];
27->25 [style = dotted, label="true"];
21->19 [style = bold, label=""];
36->41 [style = bold, label=""];
3->21 [style = dashed, label="0"];
57->60 [style = bold, label=""];
7->0 [style = bold, label=""];
41->65 [style = bold, label=""];
10->29 [style = dashed, label="0"];
7->54 [style = dashed, label="0"];
13->62 [style = dashed, label="0"];
18->28 [style = bold, label=""];
35->52 [style = bold, label=""];
61->38 [style = bold, label=""];
15->50 [style = dashed, label="0"];
4->13 [style = dotted, label="true"];
27->20 [style = dotted, label="true"];
67->30 [style = bold, label=""];
2->16 [style = dashed, label="0"];
44->68 [style = bold, label=""];
28->24 [style = bold, label=""];
14->18 [style = dashed, label="0"];
47->36 [style = bold, label=""];
48->58 [style = bold, label=""];
3->30 [style = dashed, label="0"];
29->17 [style = bold, label=""];
42->37 [style = bold, label=""];
32->46 [style = bold, label=""];
22->16 [style = bold, label=""];
6->21 [style = bold, label=""];
66->39 [style = bold, label=""];
16->23 [style = bold, label=""];
56->66 [style = bold, label=""];
30->35 [style = bold, label=""];
8->63 [style = dashed, label="0"];
11->31 [style = dashed, label="0"];
12->8 [style = bold, label=""];
59->53 [style = dotted, label="true"];
50->33 [style = bold, label=""];
46->69 [style = bold, label=""];
60->43 [style = bold, label=""];
5->19 [style = dashed, label="0"];
31->54 [style = bold, label=""];
68->64 [style = bold, label=""];
8->26 [style = dashed, label="0"];
17->26 [style = bold, label=""];
15->23 [style = dashed, label="0"];
4->6 [style = bold, label=""];
59->45 [style = dotted, label="true"];
0->2 [style = bold, label=""];
54->48 [style = bold, label=""];
5->14 [style = bold, label=""];
24->22 [style = bold, label=""];
0->22 [style = dashed, label="0"];
27->6 [style = bold, label=""];
69->61 [style = bold, label=""];
11->28 [style = dashed, label="0"];
55->44 [style = bold, label=""];
64->47 [style = bold, label=""];
7->24 [style = dashed, label="0"];
52->31 [style = bold, label=""];
4->9 [style = dotted, label="true"];
33->34 [style = bold, label=""];
40->42 [style = bold, label=""];
11->7 [style = bold, label=""];
34->63 [style = bold, label=""];
}
