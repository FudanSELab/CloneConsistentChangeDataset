digraph {
0 [style = filled, label = "testCreateIngestionSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,SEGMENT_INTERVALS,tuningConfig,Granularities.MONTH)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCreateIngestionSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final List<ParallelIndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,new CompactionIntervalSpec(COMPACTION_INTERVAL,null)),new PartitionConfigurationManager(tuningConfig),null,null,null,OBJECT_MAPPER,COORDINATOR_CLIENT,segmentLoaderFactory,RETRY_POLICY_FACTORY)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final List<ParallelIndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,LockGranularity.TIME_CHUNK,new SegmentProvider(DATA_SOURCE,new CompactionIntervalSpec(COMPACTION_INTERVAL,null)),new PartitionConfigurationManager(TUNING_CONFIG),null,null,null,OBJECT_MAPPER,COORDINATOR_CLIENT,segmentLoaderFactory,RETRY_POLICY_FACTORY)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final ParallelIndexTuningConfig tuningConfig = new ParallelIndexTuningConfig(100000,null,500000,1000000L,null,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),null,null,true,false,null,null,null,10,null,null,null,null,null,null,null,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final List<ParallelIndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,new CompactionIntervalSpec(COMPACTION_INTERVAL,null)),new PartitionConfigurationManager(TUNING_CONFIG),null,null,null,OBJECT_MAPPER,COORDINATOR_CLIENT,segmentLoaderFactory,RETRY_POLICY_FACTORY)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final List<DimensionsSpec> expectedDimensionsSpec = getExpectedDimensionsSpecForAutoGeneration()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<DimensionsSpec> expectedDimensionsSpec = getExpectedDimensionsSpecForAutoGeneration()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(6,ingestionSpecs.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ingestionSpecs.sort(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
9->5 [style = bold, label=""];
3->11 [style = bold, label=""];
6->1 [style = bold, label=""];
8->10 [style = bold, label=""];
9->11 [style = solid, label="ingestionSpecs"];
5->2 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
7->6 [style = bold, label=""];
10->11 [style = solid, label="tuningConfig"];
10->9 [style = solid, label="tuningConfig"];
4->3 [style = solid, label="ingestionSpecs"];
4->6 [style = dashed, label="0"];
0->4 [style = bold, label=""];
5->11 [style = solid, label="expectedDimensionsSpec"];
1->3 [style = solid, label="expectedDimensionsSpec"];
3->11 [style = dashed, label="0"];
2->3 [style = bold, label=""];
6->3 [style = solid, label="ingestionSpecs"];
}
