digraph {
12 [style = filled, label = "ConfigChangeEvent changeEvent = configChangeFuture.get(500,TimeUnit.MILLISECONDS)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SimpleConfig config = new SimpleConfig(someNamespace,configRepository)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SimpleConfig config = new SimpleConfig(someNamespace,configRepository)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "config.onRepositoryChange(someNamespace,anotherProperties)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(PropertyChangeType.MODIFIED,someKeyChange.getChangeType())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Properties anotherProperties = new Properties()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Properties someProperties = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(configRepository.getSourceType()).thenReturn(someSourceType)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "someSourceType = ConfigSourceType.LOCAL@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ConfigChange newKeyChange = changeEvent.getChange(newKey)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(PropertyChangeType.DELETED,anotherKeyChange.getChangeType())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(someValueNew,someKeyChange.getNewValue())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String anotherKey = \"anotherKey\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "someProperties.setProperty(someKey,someValue)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testGetProperty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String newKey = \"newKey\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(anotherValue,anotherKeyChange.getOldValue())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(someValue,someKeyChange.getOldValue())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(someNamespace,changeEvent.getNamespace())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testOnRepositoryChange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "ConfigChangeListener someListener = new ConfigChangeListener(){@Override public void onChange(ConfigChangeEvent changeEvent){configChangeFuture.set(changeEvent)}}@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(someValue,config.getProperty(someKey,null))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "someProperties.putAll(ImmutableMap.of(someKey,someValue,anotherKey,anotherValue))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(null,anotherKeyChange.getNewValue())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String newValue = \"newValue\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(someSourceType,config.getSourceType())@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "anotherProperties.putAll(ImmutableMap.of(someKey,someValueNew,newKey,newValue))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testGetProperty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "String someValueNew = \"someValueNew\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String anotherValue = \"anotherValue\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ConfigChange someKeyChange = changeEvent.getChange(someKey)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String someKey = \"someKey\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(null,newKeyChange.getOldValue())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String someValue = \"someValue\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(3,changeEvent.changedKeys().size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(newValue,newKeyChange.getNewValue())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(PropertyChangeType.ADDED,newKeyChange.getChangeType())@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "config.addChangeListener(someListener)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->27 [style = bold, label=""];
3->18 [style = solid, label="someProperties"];
11->3 [style = bold, label=""];
7->36 [style = solid, label="someKey"];
27->15 [style = solid, label="someValueNew"];
23->32 [style = bold, label=""];
24->13 [style = bold, label=""];
0->4 [style = bold, label=""];
14->31 [style = solid, label="newValue"];
19->28 [style = bold, label=""];
31->40 [style = bold, label=""];
5->1 [style = bold, label=""];
4->5 [style = bold, label=""];
29->36 [style = solid, label="anotherValue"];
18->25 [style = bold, label=""];
12->37 [style = bold, label=""];
7->23 [style = solid, label="someKey"];
17->36 [style = solid, label="anotherKey"];
34->21 [style = solid, label="anotherProperties"];
5->9 [style = bold, label=""];
29->36 [style = bold, label=""];
29->28 [style = solid, label="anotherValue"];
3->7 [style = bold, label=""];
1->6 [style = bold, label=""];
6->8 [style = bold, label=""];
7->4 [style = solid, label="someKey"];
16->13 [style = solid, label="newKey"];
21->12 [style = bold, label=""];
13->38 [style = bold, label=""];
0->32 [style = solid, label="someValue"];
27->35 [style = bold, label=""];
2->3 [style = bold, label=""];
33->21 [style = bold, label=""];
26->19 [style = bold, label=""];
7->35 [style = solid, label="someKey"];
39->24 [style = bold, label=""];
3->5 [style = solid, label="someProperties"];
36->34 [style = bold, label=""];
15->26 [style = bold, label=""];
34->16 [style = bold, label=""];
16->14 [style = bold, label=""];
7->0 [style = bold, label=""];
28->39 [style = bold, label=""];
30->3 [style = bold, label=""];
0->36 [style = solid, label="someValue"];
35->18 [style = bold, label=""];
14->35 [style = solid, label="newValue"];
0->17 [style = bold, label=""];
38->31 [style = bold, label=""];
16->35 [style = solid, label="newKey"];
4->10 [style = bold, label=""];
37->22 [style = bold, label=""];
7->6 [style = solid, label="someKey"];
25->41 [style = bold, label=""];
22->23 [style = bold, label=""];
41->33 [style = solid, label="someListener"];
17->19 [style = solid, label="anotherKey"];
9->1 [style = bold, label=""];
32->15 [style = bold, label=""];
27->35 [style = solid, label="someValueNew"];
41->20 [style = bold, label=""];
10->5 [style = bold, label=""];
17->29 [style = bold, label=""];
0->4 [style = solid, label="someValue"];
20->33 [style = bold, label=""];
0->6 [style = solid, label="someValue"];
10->9 [style = solid, label="someSourceType"];
10->8 [style = solid, label="someSourceType"];
}
