digraph {
12 [style = filled, label = "workerTask.awaitStop(1000L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectLastCall()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "standardStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "workerTask.close()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expectLastCall()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(workerTask)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "workerTask.execute()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "workerTask.stop()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "standardStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerTask.run()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator,Time.SYSTEM,statusBackingStore).addMockedMethod(\"initialize\").addMockedMethod(\"initializeAndStart\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "verify(workerTask)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator,Time.SYSTEM,statusBackingStore).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "workerTask.initializeAndStart()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "statusListener.onStartup(taskId)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectLastCall()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "workerTask.stop()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "stopBeforeStarting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "statusListener.onShutdown(taskId)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "workerTask.run()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "replay(workerTask)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectLastCall()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "expectLastCall()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EasyMock.expectLastCall()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EasyMock.expectLastCall()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "replay(workerTask)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "workerTask.awaitStop(1000L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->9 [style = bold, label=""];
9->5 [style = solid, label="taskId"];
13->15 [style = bold, label=""];
9->16 [style = solid, label="taskId"];
23->25 [style = bold, label=""];
0->4 [style = bold, label=""];
14->18 [style = bold, label=""];
21->15 [style = bold, label=""];
13->21 [style = dashed, label="0"];
21->3 [style = solid, label="workerTask"];
10->9 [style = bold, label=""];
1->12 [style = bold, label=""];
19->20 [style = bold, label=""];
6->0 [style = bold, label=""];
9->13 [style = bold, label=""];
16->8 [style = bold, label=""];
28->23 [style = bold, label=""];
13->3 [style = solid, label="workerTask"];
9->21 [style = bold, label=""];
8->17 [style = bold, label=""];
15->7 [style = bold, label=""];
22->9 [style = bold, label=""];
25->17 [style = bold, label=""];
21->0 [style = solid, label="workerTask"];
13->30 [style = solid, label="workerTask"];
4->2 [style = bold, label=""];
7->14 [style = bold, label=""];
15->27 [style = bold, label=""];
24->31 [style = bold, label=""];
17->24 [style = bold, label=""];
12->3 [style = bold, label=""];
13->0 [style = solid, label="workerTask"];
2->1 [style = bold, label=""];
27->26 [style = bold, label=""];
13->23 [style = solid, label="workerTask"];
18->16 [style = bold, label=""];
26->28 [style = bold, label=""];
17->11 [style = bold, label=""];
31->30 [style = bold, label=""];
7->19 [style = bold, label=""];
20->14 [style = bold, label=""];
7->27 [style = dashed, label="0"];
11->28 [style = dashed, label="0"];
5->6 [style = bold, label=""];
11->5 [style = bold, label=""];
}
