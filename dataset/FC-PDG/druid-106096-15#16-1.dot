digraph {
9 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c4ca))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = makeDefaultConfigPreAnalysis(filter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnNumber(JoinType.INNER))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(filter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "test_makeCursors_factToCountryLeftWithFilterOnFacts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3a9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3b1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3b9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3c1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3c9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3d1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3d9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3e1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3e9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3f1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c3f9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c401): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c40c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c414,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c41c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c424,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c42c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c434,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c43c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c444,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c44c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c454,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c45c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c464,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c46c))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c284,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c28c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c294,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c29c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2a4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2ac,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2b4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2bc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2c4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2cc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2d4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2dc): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2e7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2ef,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2f7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c2ff,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c307,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c30f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c317,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c31f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c327,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c32f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c337,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c33f,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c347))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#de.wikipedia\",null).toFilter()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnIsoCode(JoinType.LEFT))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->5 [style = dashed, label="0"];
1->4 [style = bold, label=""];
4->6 [style = solid, label="joinableClauses"];
0->5 [style = solid, label="filter"];
10->9 [style = solid, label="filter"];
0->6 [style = bold, label=""];
0->2 [style = solid, label="filter"];
2->3 [style = bold, label=""];
10->2 [style = solid, label="filter"];
0->2 [style = bold, label=""];
7->4 [style = bold, label=""];
2->9 [style = bold, label=""];
0->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
0->3 [style = solid, label="filter"];
6->5 [style = bold, label=""];
3->9 [style = dashed, label="0"];
11->10 [style = bold, label=""];
11->2 [style = solid, label="joinableClauses"];
0->6 [style = solid, label="filter"];
2->6 [style = dashed, label="0"];
10->2 [style = bold, label=""];
4->11 [style = dashed, label="0"];
4->2 [style = solid, label="joinableClauses"];
8->11 [style = bold, label=""];
}
