digraph {
4 [style = filled, label = "t.exclusiveMaximum(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertObject(t.exclusiveMinimum()).isType().is(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "t.exclusiveMinimum(\"true\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertObject(t.exclusiveMaximum()).isType().is(true)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertObject(t.exclusiveMaximum()).isNull()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "HeaderInfo t = new HeaderInfo()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "t.exclusiveMaximum((String)null)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "t.exclusiveMinimum((String)null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "a10_exclusiveMinimum['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "t.exclusiveMaximum(\"true\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertObject(t.exclusiveMaximum()).isType().is(true)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "t.exclusiveMinimum(true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertOptional(t.exclusiveMaximum()).isType().is(true)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertOptional(t.exclusiveMaximum()).isType().is(true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertObject(t.exclusiveMinimum()).isType().is(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "a07_exclusiveMaximum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertOptional(t.exclusiveMaximum()).isNull()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertObject(t.exclusiveMinimum()).isNull()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SchemaInfo t = new SchemaInfo()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "a07_exclusiveMaximum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16->13 [style = bold, label=""];
6->8 [style = dashed, label="0"];
19->12 [style = bold, label=""];
4->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
1->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
18->17 [style = bold, label=""];
0->11 [style = bold, label=""];
12->16 [style = bold, label=""];
15->19 [style = bold, label=""];
0->17 [style = dashed, label="0"];
3->0 [style = bold, label=""];
4->12 [style = dashed, label="0"];
0->7 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
6->16 [style = dashed, label="0"];
17->14 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
9->5 [style = bold, label=""];
4->8 [style = bold, label=""];
3->10 [style = dashed, label="0"];
1->10 [style = bold, label=""];
5->19 [style = dashed, label="0"];
13->18 [style = bold, label=""];
2->5 [style = bold, label=""];
}
