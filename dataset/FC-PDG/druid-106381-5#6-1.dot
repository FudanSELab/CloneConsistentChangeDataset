digraph {
8 [style = filled, label = "extractionMap.put(\"\",\"NULL\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testTopNWithExtractionFilterAndFilteredAggregatorCaseNoExistingValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final Sequence<Result<TopNResultValue>> retval = runWithPreMergeAndMerge(topNQueryWithNULLValueExtraction)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LookupExtractionFn lookupExtractionFn@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,Object> map = new HashMap<>()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TopNQueryBuilder topNQueryBuilder = new TopNQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).dimension(\"null_column\").metric(QueryRunnerTestHelper.indexMetric).threshold(4).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).aggregators(Lists.newArrayList(Iterables.concat(commonAggregators,Lists.newArrayList(new FilteredAggregatorFactory(new DoubleMaxAggregatorFactory(\"maxIndex\",\"index\"),extractionFilter),new DoubleMinAggregatorFactory(\"minIndex\",\"index\"))))).postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "map.put(\"rows\",1209L)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "map.put(\"addRowsIndexConstant\",504542.5071372986D)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,String> extractionMap = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "map.put(\"uniques\",QueryRunnerTestHelper.UNIQUES_9)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MapLookupExtractor mapLookupExtractor = new MapLookupExtractor(extractionMap,false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DimFilter extractionFilter = new ExtractionDimFilter(\"null_column\",\"NULL\",lookupExtractionFn,null)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TopNQuery topNQueryWithNULLValueExtraction = topNQueryBuilder.filters(extractionFilter).build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TopNQueryBuilder topNQueryBuilder = new TopNQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).dimension(\"null_column\").metric(QueryRunnerTestHelper.indexMetric).threshold(4).intervals(QueryRunnerTestHelper.fullOnInterval).aggregators(Lists.newArrayList(Iterables.concat(commonAggregators,Lists.newArrayList(new FilteredAggregatorFactory(new DoubleMaxAggregatorFactory(\"maxIndex\",\"index\"),extractionFilter),new DoubleMinAggregatorFactory(\"minIndex\",\"index\"))))).postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "extractionMap.put(\"\",\"NOT_USED\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "map.put(\"maxIndex\",1870.061029D)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TopNQuery topNQueryWithNULLValueExtraction = topNQueryBuilder.filters(extractionFilter).build()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Result<TopNResultValue>> expectedResults = Collections.singletonList(new Result<>(DateTimes.of(\"2011-01-12T00:00:00.000Z\"),new TopNResultValue(Collections.singletonList(map))))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,\"NULL\",true,true)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,\"NULL\",true,false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "map.put(\"null_column\",null)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "NullHandling.replaceWithDefault()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testTopNWithExtractionFilterAndFilteredAggregatorCaseNoExistingValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "map.put(\"minIndex\",59.02102279663086D)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "map.put(\"index\",503332.5071372986D)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testTopNWithExtractionFilterNoExistingValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "TestHelper.assertExpectedResults(expectedResults,retval)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertExpectedResults(expectedResults,topNQueryWithNULLValueExtraction)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DimFilter extractionFilter = new ExtractionDimFilter(\"null_column\",\"NULL\",lookupExtractionFn,null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->29 [style = bold, label=""];
5->8 [style = bold, label=""];
3->5 [style = solid, label="mapLookupExtractor"];
0->9 [style = bold, label=""];
7->21 [style = dashed, label="0"];
5->2 [style = solid, label="lookupExtractionFn"];
0->5 [style = dotted, label="true"];
0->26 [style = bold, label=""];
17->1 [style = bold, label=""];
19->12 [style = bold, label=""];
21->6 [style = bold, label=""];
9->2 [style = bold, label=""];
7->30 [style = bold, label=""];
5->26 [style = dashed, label="0"];
10->19 [style = bold, label=""];
12->15 [style = bold, label=""];
0->25 [style = dotted, label="false"];
9->2 [style = solid, label="lookupExtractionFn"];
1->20 [style = bold, label=""];
14->28 [style = solid, label="topNQueryWithNULLValueExtraction"];
3->26 [style = solid, label="mapLookupExtractor"];
14->17 [style = bold, label=""];
26->8 [style = bold, label=""];
16->23 [style = solid, label="expectedResults"];
14->23 [style = solid, label="topNQueryWithNULLValueExtraction"];
16->23 [style = bold, label=""];
15->16 [style = bold, label=""];
8->7 [style = bold, label=""];
28->29 [style = solid, label="retval"];
6->14 [style = bold, label=""];
20->18 [style = bold, label=""];
25->27 [style = bold, label=""];
23->28 [style = bold, label=""];
0->8 [style = dotted, label="true"];
0->9 [style = dotted, label="false"];
17->16 [style = solid, label="map"];
18->10 [style = bold, label=""];
8->2 [style = bold, label=""];
16->29 [style = solid, label="expectedResults"];
11->3 [style = bold, label=""];
2->21 [style = bold, label=""];
0->25 [style = bold, label=""];
24->11 [style = bold, label=""];
11->3 [style = solid, label="extractionMap"];
7->30 [style = dashed, label="0"];
27->7 [style = bold, label=""];
3->27 [style = solid, label="mapLookupExtractor"];
7->6 [style = bold, label=""];
3->13 [style = bold, label=""];
3->9 [style = solid, label="mapLookupExtractor"];
30->14 [style = bold, label=""];
2->7 [style = bold, label=""];
15->16 [style = solid, label="expectedResults"];
0->26 [style = dotted, label="true"];
4->11 [style = bold, label=""];
26->7 [style = solid, label="lookupExtractionFn"];
6->16 [style = solid, label="topNQueryWithNULLValueExtraction"];
22->11 [style = bold, label=""];
0->27 [style = dotted, label="false"];
0->5 [style = bold, label=""];
13->0 [style = bold, label=""];
14->15 [style = solid, label="map"];
27->7 [style = solid, label="lookupExtractionFn"];
}
