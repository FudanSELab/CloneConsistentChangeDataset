digraph {
14 [style = filled, label = "toString['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "cacheCollection().size() == 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "isReference()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return \"\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sb.append(File.pathSeparatorChar)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "toString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sb.append(resource)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "isEmpty()@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "return stream().map(null).collect(Collectors.joining(File.pathSeparator))@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "sb.length() > 0@@@11@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getSize() == 0@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "return sb.toString()@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return getCheckedRef().toString()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "toString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->5 [style = dotted, label="true"];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
0->6 [style = bold, label=""];
12->11 [style = bold, label=""];
13->5 [style = dotted, label="true"];
0->6 [style = dotted, label="true"];
2->4 [style = bold, label=""];
1->13 [style = bold, label=""];
2->12 [style = bold, label=""];
14->1 [style = bold, label=""];
4->12 [style = dashed, label="0"];
2->13 [style = bold, label=""];
8->0 [style = bold, label=""];
12->5 [style = dotted, label="true"];
1->12 [style = bold, label=""];
13->5 [style = bold, label=""];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
1->2 [style = bold, label=""];
5->11 [style = bold, label=""];
6->9 [style = bold, label=""];
1->2 [style = dotted, label="true"];
13->8 [style = bold, label=""];
10->1 [style = bold, label=""];
4->13 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
