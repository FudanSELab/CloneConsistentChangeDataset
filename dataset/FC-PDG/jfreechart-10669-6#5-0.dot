digraph {
9 [style = filled, label = "d1.add(new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList<>()),\"ROW1\",\"COLUMN1\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset<String,String> d2 = CloneUtils.clone(d1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertTrue(d1 != d2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "d2.add(new BoxAndWhiskerItem(Double.valueOf(1.0),Double.valueOf(2.0),Double.valueOf(3.0),Double.valueOf(4.0),Double.valueOf(5.0),Double.valueOf(6.0),Double.valueOf(7.0),Double.valueOf(8.0),new ArrayList<>()),\"ROW1\",\"COLUMN1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset d2 = (DefaultBoxAndWhiskerCategoryDataset)d1.clone()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "d1.add(new BoxAndWhiskerItem(Double.valueOf(1.0),Double.valueOf(2.0),Double.valueOf(3.0),Double.valueOf(4.0),Double.valueOf(5.0),Double.valueOf(6.0),Double.valueOf(7.0),Double.valueOf(8.0),new ArrayList<>()),\"ROW1\",\"COLUMN1\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(d2.equals(d1))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset<String,String> d1 = new DefaultBoxAndWhiskerCategoryDataset()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "d1.add(new BoxAndWhiskerItem(Double.valueOf(1.0),Double.valueOf(2.0),Double.valueOf(3.0),Double.valueOf(4.0),Double.valueOf(5.0),Double.valueOf(6.0),Double.valueOf(7.0),Double.valueOf(8.0),new ArrayList<>()),\"ROW2\",\"COLUMN1\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset d2 = new DefaultBoxAndWhiskerCategoryDataset()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(d1.equals(d2))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset d1 = new DefaultBoxAndWhiskerCategoryDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(d1.equals(d2))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "d1.add(new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList<>()),\"ROW2\",\"COLUMN1\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12->6 [style = solid, label="d1"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
12->11 [style = solid, label="d1"];
0->6 [style = solid, label="d2"];
9->11 [style = bold, label=""];
11->8 [style = solid, label="d2"];
0->6 [style = bold, label=""];
11->6 [style = bold, label=""];
0->1 [style = solid, label="d2"];
0->11 [style = dashed, label="0"];
5->14 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
1->7 [style = bold, label=""];
0->8 [style = solid, label="d2"];
11->1 [style = solid, label="d2"];
0->14 [style = dashed, label="0"];
6->4 [style = bold, label=""];
2->12 [style = dashed, label="0"];
13->12 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
10->8 [style = bold, label=""];
17->2 [style = bold, label=""];
2->1 [style = solid, label="d1"];
2->6 [style = solid, label="d1"];
4->1 [style = bold, label=""];
14->15 [style = solid, label="d2"];
1->10 [style = bold, label=""];
11->6 [style = solid, label="d2"];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
}
