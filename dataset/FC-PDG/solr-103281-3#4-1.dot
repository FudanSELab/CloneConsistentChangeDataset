digraph {
16 [style = filled, label = "newCore = cores.create(\"core1\",cd.getInstanceDir(),ImmutableMap.of(\"config\",\"solrconfig-searcher-listeners1.xml\"))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "coreCreated = true@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "t.start()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CoreContainer cores = h.getCoreContainer()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(newCore.getSolrConfig().useColdSearcher)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Thread t = new Thread(){public void run(){try {doQuery(newCore)querySucceeded.set(true)}catch (Exception e) }}@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "fail(\"Query didn't succeed after 10 secoonds\")@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i == 1000@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MockSearchComponent.registerSlowSearcherListener = true@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "newCore = cores.create(\"core1\",cd.getInstanceDir(),ImmutableMap.of(\"config\",\"solrconfig-searcher-listeners1.xml\"),false)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testDontUseColdSearcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testDontUseColdSearcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "System.getProperty(SYSPROP_NIGHTLY) != null@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,SlowSearcherListener.numberOfTimesCalled.get())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread.sleep(500)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertFalse(\"Query should be waiting for warming to finish\",querySucceeded.get())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i <= 1000@@@35@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{System.getProperties().remove(\"tests.solr.useColdSearcher\")if (coreCreated) {SlowSearcherListener.latch.countDown()cores.unload(\"core1\")}}@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "System.setProperty(\"tests.solr.useColdSearcher\",\"true\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "SlowSearcherListener.numberOfTimesCalled = new AtomicInteger(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CoreDescriptor cd = h.getCore().getCoreDescriptor()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Thread.sleep(10)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MockSearchComponent.registerFirstSearcherListener = false@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MockSearchComponent.registerNewSearcherListener = false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final SolrCore newCore@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final AtomicBoolean querySucceeded = new AtomicBoolean(false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testUseColdSearcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "boolean coreCreated = false@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SlowSearcherListener.latch = new CountDownLatch(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(,newCore.getSearchComponent(\"mock\").getClass())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(0,SlowSearcherListener.numberOfTimesCalled.get())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertNotNull(newCore.getSearchComponent(\"mock\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SlowSearcherListener.latch.countDown()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(newCore.getSolrConfig().useColdSearcher)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "querySucceeded.get()@@@37@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18->31 [style = bold, label=""];
8->34 [style = bold, label=""];
28->8 [style = solid, label="i"];
10->28 [style = bold, label=""];
22->23 [style = dotted, label="true"];
16->31 [style = dashed, label="0"];
0->6 [style = bold, label=""];
15->25 [style = bold, label=""];
35->9 [style = bold, label=""];
26->29 [style = bold, label=""];
27->3 [style = bold, label=""];
14->22 [style = bold, label=""];
28->6 [style = solid, label="i"];
3->26 [style = bold, label=""];
8->14 [style = bold, label=""];
31->4 [style = bold, label=""];
14->17 [style = bold, label=""];
14->34 [style = bold, label=""];
18->36 [style = bold, label=""];
5->18 [style = bold, label=""];
11->19 [style = bold, label=""];
12->9 [style = bold, label=""];
23->0 [style = bold, label=""];
22->23 [style = bold, label=""];
25->2 [style = bold, label=""];
6->8 [style = solid, label="i"];
1->11 [style = bold, label=""];
27->3 [style = dotted, label="true"];
16->2 [style = solid, label="newCore"];
8->17 [style = bold, label=""];
32->9 [style = bold, label=""];
4->17 [style = solid, label="coreCreated"];
21->20 [style = bold, label=""];
22->0 [style = bold, label=""];
4->30 [style = bold, label=""];
7->28 [style = bold, label=""];
8->6 [style = dotted, label="true"];
28->8 [style = bold, label=""];
34->17 [style = bold, label=""];
6->8 [style = bold, label=""];
31->2 [style = solid, label="newCore"];
8->14 [style = dotted, label="true"];
8->22 [style = dotted, label="true"];
13->5 [style = bold, label=""];
7->27 [style = bold, label=""];
36->16 [style = bold, label=""];
29->10 [style = bold, label=""];
6->22 [style = solid, label="i"];
19->21 [style = bold, label=""];
8->0 [style = dotted, label="true"];
25->33 [style = dashed, label="0"];
2->7 [style = bold, label=""];
16->4 [style = bold, label=""];
9->1 [style = bold, label=""];
20->24 [style = bold, label=""];
28->22 [style = solid, label="i"];
33->2 [style = bold, label=""];
30->15 [style = bold, label=""];
15->33 [style = bold, label=""];
24->13 [style = bold, label=""];
27->26 [style = bold, label=""];
18->16 [style = bold, label=""];
}
