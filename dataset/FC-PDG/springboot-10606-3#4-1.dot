digraph {
10 [style = filled, label = "generateProjectNoContent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "mockStatus(response,200)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "generateProjectNoContent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "mockStatus(response,500)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.invoker.generate(request)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "this.invoker.generate(request)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThatExceptionOfType().isThrownBy(null).withMessageContaining(\"No content received from server\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "mockHttpEntity(response,\"Foo-Bar-Not-JSON\".getBytes(),\"application/json\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.thrown.expectMessage(\"Invalid content received from server\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "given(this.http.execute(isA())).willReturn(response)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CloseableHttpResponse response = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "loadMetadataInvalidJson['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.thrown.expect()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "given(this.http.execute(isA())).willReturn(response)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "mockSuccessfulMetadataGet(false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ProjectGenerationRequest request = new ProjectGenerationRequest()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
12->5 [style = bold, label=""];
12->11 [style = solid, label="response"];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
12->5 [style = solid, label="response"];
4->15 [style = bold, label=""];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
5->6 [style = solid, label="response"];
12->14 [style = solid, label="response"];
5->8 [style = solid, label="response"];
3->0 [style = solid, label="request"];
4->0 [style = bold, label=""];
3->9 [style = bold, label=""];
3->15 [style = solid, label="request"];
13->12 [style = bold, label=""];
7->2 [style = bold, label=""];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
2->5 [style = bold, label=""];
8->5 [style = dashed, label="0"];
}
