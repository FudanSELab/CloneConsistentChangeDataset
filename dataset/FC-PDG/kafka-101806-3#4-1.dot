digraph {
3 [style = filled, label = "builder.buildAndOptimizeTopology()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "builder.table(\"topic\",consumed,materialized)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "builder.table(\"topic\",consumed,materialized)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ConsumedInternal<String,String> consumed = new ConsumedInternal<>(Consumed.with(new MockTimestampExtractor()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(processorTopology.source(\"topic\").getTimestampExtractor(),instanceOf())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final ProcessorTopology processorTopology = builder.internalTopologyBuilder.rewriteTopology(new StreamsConfig(StreamsTestUtils.getStreamsConfig(APP_ID))).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ktableShouldHaveNullTimestampExtractorWhenNoneSupplied['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ktableShouldHaveNullTimestampExtractorWhenNoneSupplied['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ktableShouldUseProvidedTimestampExtractor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ProcessorTopology processorTopology = builder.internalTopologyBuilder.rewriteTopology(new StreamsConfig(StreamsTestUtils.getStreamsConfig(APP_ID))).build(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
7->9 [style = bold, label=""];
9->1 [style = solid, label="consumed"];
3->6 [style = dashed, label="0"];
1->6 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
9->1 [style = bold, label=""];
2->8 [style = dashed, label="0"];
0->1 [style = bold, label=""];
2->8 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
}
