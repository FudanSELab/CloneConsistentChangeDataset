digraph {
8 [style = filled, label = "builder.setDimension(\"dataSource\",\"wikipedia\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "InfluxdbEmitterConfig config = new InfluxdbEmitterConfig(\"localhost\",8086,null,null,null,null,\"dbname\",10000,15000,30000,\"adam\",\"password\",ImmutableSet.of(\"dataSource\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "InfluxdbEmitterConfig config = new InfluxdbEmitterConfig(\"localhost\",8086,\"dbname\",10000,15000,30000,\"adam\",\"password\",ImmutableSet.of(\"dataSource\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "testMetricIsInDimensionWhitelist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(expected,actual)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Number value = 1234@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testMetricIsInDimensionWhitelist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ServiceEventBuilder eventBuilder = builder.build(date,metric,value)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String expected = \"druid_metric,service=druid/historical,hostname=localhost,dataSource=wikipedia druid_time=1234 1509357600000000000\" + \"\"@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ServiceMetricEvent.Builder builder = ServiceMetricEvent.builder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String expected = \"druid_metric,service=druid/historical,hostname=localhost,dataSource=wikipedia,taskType=index druid_time=1234 1509357600000000000\" + \"\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ImmutableMap<String,String> serviceDims = ImmutableMap.of(\"service\",\"druid/historical\",\"host\",\"localhost\",\"version\",\"0.10.0\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String actual = influxdbEmitter.transformForInfluxSystems(event)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DateTime date = new DateTime(2017,10,30,10,00,DateTimeZone.UTC)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "InfluxdbEmitterConfig config = new InfluxdbEmitterConfig(\"localhost\",8086,\"dbname\",10000,15000,30000,\"adam\",\"password\",null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testMetricIsInDefaultDimensionWhitelist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "InfluxdbEmitter influxdbEmitter = new InfluxdbEmitter(config)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "builder.setDimension(\"taskType\",\"index\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ServiceMetricEvent event = (ServiceMetricEvent)eventBuilder.build(serviceDims)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String metric = \"metric/time\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
6->3 [style = bold, label=""];
4->11 [style = solid, label="event"];
7->1 [style = bold, label=""];
14->13 [style = solid, label="date"];
4->17 [style = bold, label=""];
15->14 [style = bold, label=""];
4->6 [style = bold, label=""];
2->13 [style = solid, label="metric"];
16->3 [style = solid, label="config"];
18->11 [style = bold, label=""];
6->17 [style = dashed, label="0"];
1->4 [style = solid, label="serviceDims"];
11->5 [style = solid, label="actual"];
10->5 [style = solid, label="expected"];
3->18 [style = bold, label=""];
8->0 [style = bold, label=""];
12->13 [style = bold, label=""];
3->10 [style = bold, label=""];
11->5 [style = bold, label=""];
6->3 [style = solid, label="config"];
6->16 [style = dashed, label="0"];
7->13 [style = solid, label="value"];
19->14 [style = bold, label=""];
18->5 [style = solid, label="expected"];
0->4 [style = bold, label=""];
9->14 [style = bold, label=""];
1->12 [style = bold, label=""];
17->3 [style = bold, label=""];
14->2 [style = bold, label=""];
17->3 [style = solid, label="config"];
2->7 [style = bold, label=""];
13->8 [style = bold, label=""];
10->18 [style = dashed, label="0"];
4->16 [style = bold, label=""];
10->11 [style = bold, label=""];
}
