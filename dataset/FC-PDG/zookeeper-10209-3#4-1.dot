digraph {
17 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "{forceClose(socket)serverThread.shutdown(TIMEOUT)}@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testConnectWithoutSSLToNonStrictServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sslSocket.getOutputStream().flush()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(handshakeCompleted)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testConnectWithSSLToStrictServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "serverThread.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Socket sslSocket = connectWithSSL()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Socket socket = connectWithoutSSL()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "socket.getOutputStream().flush()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "byte(( buf = new byte((((@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "sslSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "handshakeCompletedLock@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testConnectWithSSLToStrictServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int bytesRead = sslSocket.getInputStream().read(buf,0,buf.length)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "!handshakeCompleted@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int bytesRead = socket.getInputStream().read(buf,0,buf.length)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->20 [style = solid, label="buf"];
6->7 [style = solid, label="buf"];
5->8 [style = bold, label=""];
19->18 [style = bold, label=""];
6->26 [style = bold, label=""];
26->3 [style = solid, label="bytesRead"];
3->1 [style = bold, label=""];
6->26 [style = solid, label="buf"];
3->21 [style = dashed, label="0"];
0->6 [style = bold, label=""];
8->19 [style = bold, label=""];
26->3 [style = bold, label=""];
0->23 [style = dashed, label="0"];
17->9 [style = bold, label=""];
27->9 [style = bold, label=""];
6->1 [style = solid, label="buf"];
18->15 [style = bold, label=""];
2->27 [style = dashed, label="0"];
7->3 [style = solid, label="bytesRead"];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
7->21 [style = solid, label="bytesRead"];
10->5 [style = dotted, label="true"];
2->17 [style = dashed, label="0"];
1->13 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
20->10 [style = bold, label=""];
1->20 [style = dashed, label="0"];
5->19 [style = bold, label=""];
25->24 [style = bold, label=""];
12->25 [style = dashed, label="0"];
21->20 [style = bold, label=""];
10->5 [style = bold, label=""];
25->15 [style = solid, label="socket"];
12->4 [style = bold, label=""];
22->27 [style = bold, label=""];
10->11 [style = dotted, label="true"];
11->19 [style = dashed, label="0"];
10->19 [style = dotted, label="true"];
12->15 [style = solid, label="sslSocket"];
9->25 [style = bold, label=""];
23->6 [style = bold, label=""];
11->13 [style = bold, label=""];
7->21 [style = bold, label=""];
5->11 [style = bold, label=""];
14->2 [style = bold, label=""];
9->12 [style = bold, label=""];
13->15 [style = bold, label=""];
13->18 [style = dashed, label="0"];
5->8 [style = dotted, label="true"];
6->7 [style = bold, label=""];
4->24 [style = dashed, label="0"];
7->26 [style = dashed, label="0"];
1->10 [style = bold, label=""];
8->11 [style = bold, label=""];
24->23 [style = bold, label=""];
}
