digraph {
2 [style = filled, label = "final ConfigureStaticNatRulesOnLogicalRouterAnswer a = (ConfigureStaticNatRulesOnLogicalRouterAnswer)resource.executeRequest(cmd)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(cmd.getRules()).thenReturn(rules)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(nvpApi.findNatRulesByLogicalRouterUuid(\"aaaaa\")).thenReturn(storedRules)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(cmd.getLogicalRouterUuid()).thenReturn(\"aaaaa\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final List<StaticNatRuleTO> rules = new ArrayList<StaticNatRuleTO>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(nvpApi.createLogicalRouterNatRule(eq(\"aaaaa\"),(NatRule)any())).thenReturn(rulepair(0().thenReturn(rulepair(1()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(nvpApi.createLogicalRouterNatRule(eq(\"aaaaa\"),(NatRule)any())).thenReturn(rulepair(0().thenReturn(rulepair(1()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final ConfigureStaticNatRulesOnLogicalRouterCommand cmd = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "resource.configure(\"NiciraNvpResource\",parameters)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(a.getResult())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "rulepair(1(.setUuid(UUID.randomUUID())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "rulepair(0(.setUuid(UUID.randomUUID())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testConfigurePortForwardingRulesOnLogicalRouterPortRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final StaticNatRuleTO rule = new StaticNatRuleTO(1,\"11.11.11.11\",null,null,\"10.10.10.10\",null,null,null,false,false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final List<PortForwardingRuleTO> rules = new ArrayList<PortForwardingRuleTO>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final NatRule(( rulepair = resource.generateStaticNatRulePair(\"10.10.10.10\",\"11.11.11.11\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testConfigureStaticNatRulesOnLogicalRouter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final PortForwardingRuleTO rule = new PortForwardingRuleTO(1,\"11.11.11.11\",80,85,\"10.10.10.10\",80,85,\"tcp\",false,false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "@SuppressWarnings(\"unchecked\") final List<NatRule> storedRules = Collections.EMPTY_LIST@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final ConfigurePortForwardingRulesOnLogicalRouterAnswer a = (ConfigurePortForwardingRulesOnLogicalRouterAnswer)resource.executeRequest(cmd)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testConfigureStaticNatRulesOnLogicalRouter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final NatRule(( rulepair = resource.generatePortForwardingRulePair(\"10.10.10.10\",new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@72a034,\"11.11.11.11\",new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@72a03a,\"tcp\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "rulepair(1(.setUuid(UUID.randomUUID())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rules.add(rule)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ConfigurePortForwardingRulesOnLogicalRouterCommand cmd = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "rulepair(0(.setUuid(UUID.randomUUID())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
18->3 [style = bold, label=""];
18->23 [style = solid, label="rulepair"];
13->7 [style = bold, label=""];
10->2 [style = bold, label=""];
8->5 [style = bold, label=""];
20->7 [style = bold, label=""];
23->19 [style = bold, label=""];
3->22 [style = dashed, label="0"];
24->20 [style = bold, label=""];
6->11 [style = bold, label=""];
16->15 [style = bold, label=""];
19->22 [style = bold, label=""];
1->18 [style = bold, label=""];
11->1 [style = bold, label=""];
14->9 [style = bold, label=""];
15->21 [style = bold, label=""];
21->24 [style = bold, label=""];
12->23 [style = bold, label=""];
5->7 [style = solid, label="rule"];
5->13 [style = bold, label=""];
2->3 [style = bold, label=""];
8->21 [style = dashed, label="0"];
2->19 [style = dashed, label="0"];
24->7 [style = solid, label="rule"];
4->10 [style = solid, label="rulepair"];
3->12 [style = bold, label=""];
17->15 [style = bold, label=""];
7->0 [style = bold, label=""];
11->1 [style = solid, label="storedRules"];
20->0 [style = solid, label="rules"];
1->4 [style = bold, label=""];
4->14 [style = bold, label=""];
13->20 [style = dashed, label="0"];
4->18 [style = dashed, label="0"];
21->19 [style = solid, label="cmd"];
8->2 [style = solid, label="cmd"];
13->0 [style = solid, label="rules"];
15->8 [style = bold, label=""];
25->15 [style = bold, label=""];
9->10 [style = bold, label=""];
}
