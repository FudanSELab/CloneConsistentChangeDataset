digraph {
17 [style = filled, label = "expectLastCall()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "statusListener.onStartup(taskId)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectLastCall()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "workerTask.releaseResources()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "replay(workerTask)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "workerTask.close()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectLastCall()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "statusListener.onStartup(taskId)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final CountDownLatch stopped = new CountDownLatch(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "thread.join()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final Thread thread = new Thread(){@Override public void run(){try {stopped.await()}catch (Exception e) }}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "cancelBeforeStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "workerTask.stop()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "statusListener.onShutdown(taskId)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "workerTask.run()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "workerTask.awaitStop(1000L)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "standardStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "stopped.countDown()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ClassLoader loader = EasyMock.createMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectLastCall()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "workerTask.cancel()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TaskStatus.Listener statusListener = EasyMock.createMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){thread.start()return null}})@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "verify(workerTask)@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "workerTask.close()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerTask.execute()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(workerTask)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "standardStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "expectLastCall()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->14 [style = solid, label="workerTask"];
4->14 [style = solid, label="workerTask"];
27->36 [style = bold, label=""];
31->25 [style = bold, label=""];
35->18 [style = bold, label=""];
25->34 [style = bold, label=""];
21->6 [style = bold, label=""];
5->33 [style = bold, label=""];
4->3 [style = solid, label="workerTask"];
20->26 [style = bold, label=""];
10->24 [style = bold, label=""];
1->34 [style = dashed, label="0"];
0->2 [style = bold, label=""];
18->19 [style = bold, label=""];
22->21 [style = bold, label=""];
18->6 [style = solid, label="taskId"];
36->32 [style = bold, label=""];
19->10 [style = bold, label=""];
4->32 [style = solid, label="workerTask"];
8->6 [style = bold, label=""];
4->29 [style = bold, label=""];
29->37 [style = bold, label=""];
20->1 [style = bold, label=""];
9->8 [style = bold, label=""];
24->5 [style = bold, label=""];
8->22 [style = bold, label=""];
24->3 [style = solid, label="workerTask"];
26->30 [style = bold, label=""];
37->5 [style = bold, label=""];
18->3 [style = solid, label="taskId"];
12->13 [style = bold, label=""];
5->0 [style = bold, label=""];
11->3 [style = bold, label=""];
30->31 [style = bold, label=""];
18->12 [style = solid, label="taskId"];
15->20 [style = bold, label=""];
6->11 [style = bold, label=""];
0->33 [style = dashed, label="0"];
17->15 [style = bold, label=""];
10->4 [style = bold, label=""];
7->18 [style = bold, label=""];
3->17 [style = bold, label=""];
1->14 [style = bold, label=""];
13->9 [style = bold, label=""];
28->3 [style = bold, label=""];
4->24 [style = dashed, label="0"];
16->28 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
23->18 [style = bold, label=""];
33->2 [style = bold, label=""];
2->28 [style = bold, label=""];
34->27 [style = bold, label=""];
4->26 [style = solid, label="workerTask"];
2->16 [style = bold, label=""];
}
