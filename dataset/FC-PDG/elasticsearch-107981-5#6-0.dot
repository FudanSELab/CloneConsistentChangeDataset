digraph {
21 [style = filled, label = "forceExecution == false && replicaWriteBytes > replicaLimits@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "long replicaBytesWithoutOperation = replicaWriteBytes - bytes@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "long totalBytesWithoutOperation = totalBytes - bytes@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return null@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of coordinating operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"coordinating_operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "totalCoordinatingBytes.getAndAdd(bytes)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "long bytes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "currentCoordinatingBytes.getAndAdd(bytes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "totalBytes > primaryAndCoordinatingLimits@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "totalCombinedCoordinatingAndPrimaryBytes.getAndAdd(bytes)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "totalReplicaBytes.getAndAdd(bytes)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "this.currentReplicaBytes.getAndAdd(-bytes)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "forceExecution == false && totalBytes > primaryAndCoordinatingLimits@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "long combinedBytes = this.currentCombinedCoordinatingAndPrimaryBytes.addAndGet(bytes)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.addAndGet(bytes)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "this.replicaRejections.getAndIncrement()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.coordinatingRejections.getAndIncrement()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of replica operation (\" + \"replica_bytes=\" + replicaBytesWithoutOperation + \", \" + \"replica_operation_bytes=\" + bytes + \", \" + \"max_replica_bytes=\" + replicaLimits + \"(\",false)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "markCoordinatingOperationStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boolean forceExecution@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "long bytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "markReplicaOperationStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "boolean forceExecution@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.get()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "markCoordinatingOperationStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "this.currentCombinedCoordinatingAndPrimaryBytes.getAndAdd(-bytes)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "long totalBytes = combinedBytes + replicaWriteBytes@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return null@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "long bytesWithoutOperation = combinedBytes - bytes@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2->6 [style = bold, label=""];
17->9 [style = bold, label=""];
20->23 [style = solid, label="bytes"];
5->7 [style = solid, label="bytes"];
21->24 [style = bold, label=""];
12->9 [style = bold, label=""];
13->1 [style = bold, label=""];
16->7 [style = dotted, label="true"];
23->21 [style = solid, label="replicaWriteBytes"];
1->2 [style = solid, label="bytesWithoutOperation"];
17->15 [style = dotted, label="true"];
5->14 [style = solid, label="bytes"];
15->1 [style = solid, label="bytes"];
11->13 [style = bold, label=""];
8->11 [style = bold, label=""];
8->2 [style = solid, label="replicaWriteBytes"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
25->28 [style = bold, label=""];
20->24 [style = solid, label="bytes"];
21->19 [style = bold, label=""];
13->3 [style = dotted, label="true"];
5->26 [style = dashed, label="0"];
16->6 [style = bold, label=""];
21->29 [style = dotted, label="true"];
14->22 [style = dashed, label="0"];
15->2 [style = solid, label="bytes"];
7->0 [style = bold, label=""];
13->7 [style = dotted, label="true"];
9->8 [style = bold, label=""];
21->28 [style = dotted, label="true"];
9->23 [style = dashed, label="0"];
19->25 [style = bold, label=""];
9->1 [style = solid, label="combinedBytes"];
5->1 [style = solid, label="bytes"];
15->9 [style = solid, label="bytes"];
18->16 [style = solid, label="forceExecution"];
9->11 [style = solid, label="combinedBytes"];
3->2 [style = bold, label=""];
16->1 [style = dotted, label="true"];
13->0 [style = dotted, label="true"];
27->20 [style = dotted, label="true"];
5->6 [style = solid, label="bytes"];
20->19 [style = solid, label="bytes"];
5->2 [style = solid, label="bytes"];
11->7 [style = solid, label="totalBytes"];
14->4 [style = bold, label=""];
4->10 [style = bold, label=""];
28->29 [style = bold, label=""];
17->18 [style = dotted, label="true"];
20->29 [style = solid, label="bytes"];
5->9 [style = solid, label="bytes"];
1->7 [style = bold, label=""];
13->2 [style = dotted, label="true"];
21->25 [style = dotted, label="true"];
15->4 [style = solid, label="bytes"];
7->2 [style = solid, label="totalBytesWithoutOperation"];
16->1 [style = bold, label=""];
11->13 [style = solid, label="totalBytes"];
11->16 [style = solid, label="totalBytes"];
23->19 [style = solid, label="replicaWriteBytes"];
8->11 [style = solid, label="replicaWriteBytes"];
26->21 [style = solid, label="forceExecution"];
13->6 [style = bold, label=""];
13->16 [style = dashed, label="0"];
15->7 [style = solid, label="bytes"];
15->6 [style = solid, label="bytes"];
16->2 [style = dotted, label="true"];
27->26 [style = dotted, label="true"];
8->21 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
24->22 [style = bold, label=""];
15->14 [style = solid, label="bytes"];
16->3 [style = dotted, label="true"];
6->14 [style = bold, label=""];
13->1 [style = dotted, label="true"];
16->0 [style = dotted, label="true"];
23->21 [style = bold, label=""];
12->5 [style = dotted, label="true"];
11->19 [style = dashed, label="0"];
6->24 [style = dashed, label="0"];
21->19 [style = dotted, label="true"];
5->4 [style = solid, label="bytes"];
27->23 [style = bold, label=""];
7->29 [style = dashed, label="0"];
29->24 [style = bold, label=""];
19->29 [style = solid, label="replicaBytesWithoutOperation"];
}
