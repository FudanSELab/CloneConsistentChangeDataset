digraph {
13 [style = filled, label = "verify(sink.getMockBulkProcessor(),times(1)).add(any())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Exception e@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testBulkFailureRethrownOnCheckpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.fail()@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testBulkFailureRethrownOnInvoke['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHarness.snapshot(1L,1000L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(e.getCause().getMessage().contains(\"artificial failure for bulk request\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sink.setFailNextBulkRequestCompletely(new Exception(\"artificial failure for bulk request\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(e.getCause().getCause().getMessage().contains(\"artificial failure for bulk request\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"next msg\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(sink.getMockBulkProcessor(),times(1)).add(any())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testHarness.open()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sink.manualBulkRequestWithAllPendingRequests()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"msg\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testBulkFailureRethrownOnInvoke['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final OneInputStreamOperatorTestHarness<String,Object> testHarness = new OneInputStreamOperatorTestHarness<>(new StreamSink<>(sink))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final DummyElasticsearchSink<String> sink = new DummyElasticsearchSink<>(new HashMap<String,String>(),new SimpleSinkFunction<String>(),new NoOpFailureHandler())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
16->3 [style = bold, label=""];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
0->17 [style = bold, label=""];
2->9 [style = bold, label=""];
9->16 [style = bold, label=""];
12->7 [style = bold, label=""];
1->11 [style = bold, label=""];
1->17 [style = dashed, label="0"];
10->13 [style = bold, label=""];
11->3 [style = bold, label=""];
2->13 [style = dashed, label="0"];
0->1 [style = bold, label=""];
15->4 [style = bold, label=""];
9->5 [style = bold, label=""];
0->17 [style = dotted, label="true"];
10->2 [style = bold, label=""];
4->6 [style = solid, label="sink"];
13->9 [style = bold, label=""];
8->4 [style = bold, label=""];
0->11 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
14->4 [style = bold, label=""];
17->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
