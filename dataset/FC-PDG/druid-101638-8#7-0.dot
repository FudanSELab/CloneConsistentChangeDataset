digraph {
0 [style = filled, label = "testHavingOnFloatSum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testQuery(\"SELECT dim1, SUM(m1) AS m1_sum FROM druid.foo GROUP BY dim1 HAVING SUM(m1) > 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensions(new DefaultDimensionSpec(\"dim1\",\"d0\"))).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"a0\",\"m1\"))).setHavingSpec(having(new BoundDimFilter(\"a0\",\"1\",null,true,false,false,null,StringComparators.NUMERIC))).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b283f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b2844,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b2849,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b284e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b2853))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testQuery(\"SELECT dim1, CAST(SUM(m1) AS FLOAT) AS m1_sum FROM druid.foo GROUP BY dim1 HAVING CAST(SUM(m1) AS FLOAT) > 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensions(new DefaultDimensionSpec(\"dim1\",\"d0\"))).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"a0\",\"m1\"))).setHavingSpec(having(new BoundDimFilter(\"a0\",\"1\",null,true,false,false,null,StringComparators.NUMERIC))).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b27df,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b27e4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b27e9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b27ee,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b27f3))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testHavingOnFloatSum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testQuery(PLANNER_CONFIG_FALLBACK,\"SELECT dim1, CAST(SUM(m1) AS FLOAT) AS m1_sum FROM druid.foo GROUP BY dim1 HAVING CAST(SUM(m1) AS FLOAT) > 1\",CalciteTests.REGULAR_USER_AUTH_RESULT,ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensions(new DefaultDimensionSpec(\"dim1\",\"d0\"))).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"a0\",\"m1\"))).setHavingSpec(having(new BoundDimFilter(\"a0\",\"1\",null,true,false,false,null,StringComparators.NUMERIC))).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b277f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b2784,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b2789,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b278e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9b2793))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testHavingOnDoubleSum['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->4 [style = dashed, label="0"];
1->2 [style = dashed, label="0"];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
}
