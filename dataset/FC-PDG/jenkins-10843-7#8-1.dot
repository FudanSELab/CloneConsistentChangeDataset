digraph {
18 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"/jenkins/job/i/\",result)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(j.getItemGroup()).thenReturn(j)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "View view = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(view.getItems()).thenReturn(Collections.singletonList(i))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(\"job/i/\",result)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mockStatic()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "createMockAncestors(req,createAncestor(view,\".\"),createAncestor(j,\"../..\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(view.getOwner()).thenReturn(j)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testGetRelativeLinkTo_JobNotContainedInView['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(view.getOwner().getItemGroup()).thenReturn(parent)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(view.getItems()).thenReturn(Collections.emptyList())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../..\"),createAncestor(view,\".\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->11 [style = solid, label="j"];
0->3 [style = bold, label=""];
17->8 [style = bold, label=""];
6->7 [style = solid, label="contextPath"];
9->16 [style = dashed, label="0"];
9->11 [style = bold, label=""];
7->0 [style = solid, label="req"];
7->12 [style = bold, label=""];
7->19 [style = solid, label="req"];
8->18 [style = bold, label=""];
4->13 [style = solid, label="j"];
8->14 [style = bold, label=""];
14->10 [style = bold, label=""];
4->19 [style = solid, label="j"];
19->17 [style = bold, label=""];
3->16 [style = bold, label=""];
16->19 [style = bold, label=""];
12->0 [style = bold, label=""];
17->18 [style = solid, label="i"];
1->17 [style = solid, label="parent"];
20->4 [style = bold, label=""];
2->10 [style = dashed, label="0"];
4->1 [style = solid, label="j"];
3->9 [style = bold, label=""];
4->9 [style = solid, label="j"];
1->6 [style = bold, label=""];
18->10 [style = solid, label="result"];
18->10 [style = bold, label=""];
8->14 [style = solid, label="i"];
8->10 [style = solid, label="i"];
11->13 [style = bold, label=""];
5->4 [style = bold, label=""];
15->4 [style = bold, label=""];
3->19 [style = solid, label="view"];
7->13 [style = solid, label="req"];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
1->8 [style = solid, label="parent"];
3->13 [style = solid, label="view"];
1->16 [style = solid, label="parent"];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
10->2 [style = solid, label="result"];
14->8 [style = dashed, label="0"];
}
