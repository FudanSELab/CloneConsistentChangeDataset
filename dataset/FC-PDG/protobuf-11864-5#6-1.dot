digraph {
22 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "popLimit(oldLimit)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "--recursionDepth@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final int length = readRawVarint32()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "checkRecursionLimit()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "++recursionDepth@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "--recursionDepth@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "++recursionDepth@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "T result = parser.parsePartialFrom(this,extensionRegistry)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final int oldLimit = pushLimit(length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getBytesUntilLimit() != 0@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "throw InvalidProtocolBufferException.truncatedMessage()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int length = readRawVarint32()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkLastTagWas(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "readMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "readMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return result@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final MessageLite.Builder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "recursionDepth >= recursionLimit@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "readMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "throw InvalidProtocolBufferException.recursionLimitExceeded()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Parser<T> parser@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final int oldLimit = pushLimit(length)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2->3 [style = dotted, label="true"];
21->23 [style = solid, label="result"];
11->17 [style = solid, label="length"];
11->20 [style = dashed, label="0"];
0->13 [style = bold, label=""];
5->9 [style = bold, label=""];
20->5 [style = solid, label="length"];
21->6 [style = bold, label=""];
2->3 [style = bold, label=""];
4->13 [style = bold, label=""];
12->11 [style = bold, label=""];
11->5 [style = solid, label="length"];
18->17 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
10->22 [style = dashed, label="0"];
8->21 [style = dashed, label="0"];
9->8 [style = bold, label=""];
11->2 [style = bold, label=""];
13->1 [style = bold, label=""];
11->18 [style = bold, label=""];
15->5 [style = bold, label=""];
5->1 [style = solid, label="oldLimit"];
1->23 [style = bold, label=""];
14->10 [style = dotted, label="true"];
20->2 [style = bold, label=""];
24->20 [style = bold, label=""];
14->16 [style = dotted, label="true"];
4->13 [style = dotted, label="true"];
3->5 [style = bold, label=""];
12->10 [style = dotted, label="true"];
0->4 [style = bold, label=""];
24->22 [style = dotted, label="true"];
6->13 [style = bold, label=""];
17->15 [style = bold, label=""];
9->21 [style = bold, label=""];
2->18 [style = dashed, label="0"];
24->19 [style = dotted, label="true"];
22->21 [style = solid, label="extensionRegistry"];
4->1 [style = bold, label=""];
17->13 [style = solid, label="oldLimit"];
6->0 [style = dotted, label="true"];
12->7 [style = dotted, label="true"];
7->8 [style = solid, label="extensionRegistry"];
14->11 [style = bold, label=""];
10->5 [style = solid, label="extensionRegistry"];
2->5 [style = bold, label=""];
}
