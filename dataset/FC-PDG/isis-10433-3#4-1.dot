digraph {
6 [style = filled, label = "assertThat(representation.getString(\"extensions.x-isis-format\"),is(\"float\"))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "whenFloatWrapper['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "allowingObjectAdapterToReturn((float)123.45)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(representation.isDecimal(\"value\"),is(true))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(representation.getString(\"format\"),is(\"decimal\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "allowingLogicalTypeReturnObjectTypeFor()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "allowingObjectAdapterToReturn(Float.valueOf((float)123.45))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "whenFloatPrimitive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(representation.getFloat(\"value\"),is((float)123.45))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "whenFloatWrapper['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "jsonValueEncoder.appendValueAndFormat(mockObjectAdapter,mockObjectSpec,representation,null,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(representation.getFloat(\"value\"),is(Float.valueOf((float)123.45)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "allowingObjectSpecToReturnSpecIdFor()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->11 [style = bold, label=""];
8->1 [style = bold, label=""];
3->8 [style = dashed, label="0"];
11->4 [style = bold, label=""];
5->2 [style = bold, label=""];
1->4 [style = bold, label=""];
12->2 [style = bold, label=""];
10->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
3->1 [style = bold, label=""];
9->8 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->6 [style = bold, label=""];
7->3 [style = bold, label=""];
0->12 [style = bold, label=""];
4->0 [style = bold, label=""];
0->5 [style = bold, label=""];
}
