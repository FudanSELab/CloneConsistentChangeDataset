digraph {
21 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Commandline commandLine = new Commandline()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String msg = \"Failed executing: \" + commandLine.toString()@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "result = run(commandLine)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new BuildException(\"Required attribute TypeName not specified\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkOptions(commandLine)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "commandLine.setExecutable(getClearToolCommand())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "getProject().log(\"Ignoring any errors that occur for: \" + getBaselineRootName(),Project.MSG_VERBOSE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getViewPath() == null@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "getTypeName() == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "throw new BuildException(\"Required attribute TypeValue not specified\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int result = run(commandLine)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "throw new BuildException(msg,getLocation())@@@24@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "setViewPath(aProj.getBaseDir().getPath())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!getFailOnErr()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "throw new BuildException(\"Failed executing: \" + commandLine,getLocation())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Project aProj = getProject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int result = 0@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Execute.isFailure(result) && getFailOnErr()@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "getProject().log(\"Ignoring any errors that occur for: \" + getViewPathBasename(),Project.MSG_VERBOSE)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "commandLine.createArgument().setValue(COMMAND_MKATTR)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "getTypeValue() == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "commandLine.createArgument().setValue(COMMAND_MKBL)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
14->24 [style = dashed, label="0"];
0->16 [style = bold, label=""];
4->16 [style = dashed, label="0"];
12->5 [style = bold, label=""];
17->1 [style = bold, label=""];
5->9 [style = bold, label=""];
18->23 [style = bold, label=""];
23->5 [style = bold, label=""];
1->7 [style = solid, label="commandLine"];
7->10 [style = bold, label=""];
11->1 [style = bold, label=""];
6->22 [style = bold, label=""];
0->19 [style = dashed, label="0"];
10->19 [style = bold, label=""];
8->15 [style = dashed, label="0"];
8->3 [style = bold, label=""];
1->15 [style = solid, label="commandLine"];
2->15 [style = dotted, label="true"];
4->2 [style = bold, label=""];
16->2 [style = bold, label=""];
12->6 [style = bold, label=""];
14->7 [style = bold, label=""];
20->18 [style = bold, label=""];
1->16 [style = solid, label="commandLine"];
1->4 [style = solid, label="commandLine"];
6->5 [style = bold, label=""];
5->13 [style = dotted, label="true"];
22->18 [style = bold, label=""];
22->20 [style = dotted, label="true"];
10->16 [style = bold, label=""];
22->20 [style = bold, label=""];
0->4 [style = bold, label=""];
10->19 [style = dotted, label="true"];
8->3 [style = solid, label="msg"];
18->5 [style = bold, label=""];
5->13 [style = bold, label=""];
10->0 [style = bold, label=""];
2->15 [style = bold, label=""];
21->1 [style = bold, label=""];
9->14 [style = bold, label=""];
1->12 [style = bold, label=""];
10->4 [style = bold, label=""];
10->0 [style = dotted, label="true"];
13->9 [style = bold, label=""];
19->4 [style = bold, label=""];
24->7 [style = bold, label=""];
4->2 [style = solid, label="result"];
9->24 [style = bold, label=""];
2->8 [style = dotted, label="true"];
2->8 [style = bold, label=""];
16->2 [style = solid, label="result"];
18->23 [style = dotted, label="true"];
}
