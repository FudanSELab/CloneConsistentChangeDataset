digraph {
6 [style = filled, label = "assertThat(clusterState.getRoutingNodes().unassigned().size() > 0,equalTo(false))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),greaterThan(0L))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "clusterState = allocation.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),equalTo(\"failed shard on node (\" + shardToFail.currentNodeId() + \"(: test fail\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testNodeLeave['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),equalTo(UnassignedInfo.Reason.NODE_LEFT))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "clusterState = allocation.applyFailedShards(clusterState,Collections.singletonList(new FailedShard(shardToFail,\"test fail\",null,randomBoolean())))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "clusterState = allocation.deassociateDeadNodes(clusterState,true,\"reroute\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertThat(clusterState.getRoutingNodes().unassigned().size() > 0,equalTo(true))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(),notNullValue())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testNodeLeave['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),equalTo(\"failed shard on node (\" + shardToFail.currentNodeId() + \"(: test fail\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "clusterState = allocation.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),greaterThan(0L))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AllocationService allocation = createAllocationService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "clusterState = allocation.disassociateDeadNodes(clusterState,true,\"reroute\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(),equalTo(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "clusterState = allocation.reroute(clusterState,\"reroute\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFailedShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
8->19 [style = dashed, label="0"];
4->3 [style = bold, label=""];
15->2 [style = bold, label=""];
7->21 [style = dashed, label="0"];
22->2 [style = bold, label=""];
4->16 [style = dashed, label="0"];
18->23 [style = bold, label=""];
0->11 [style = solid, label="clusterState"];
7->10 [style = bold, label=""];
11->25 [style = solid, label="clusterState"];
24->25 [style = solid, label="shardToFail"];
19->1 [style = solid, label="clusterState"];
11->6 [style = bold, label=""];
1->0 [style = solid, label="clusterState"];
25->3 [style = bold, label=""];
5->16 [style = solid, label="clusterState"];
0->11 [style = bold, label=""];
6->24 [style = bold, label=""];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
8->1 [style = solid, label="clusterState"];
14->7 [style = bold, label=""];
5->4 [style = solid, label="clusterState"];
5->16 [style = bold, label=""];
20->18 [style = bold, label=""];
8->1 [style = bold, label=""];
4->25 [style = dashed, label="0"];
6->5 [style = bold, label=""];
19->1 [style = bold, label=""];
21->20 [style = bold, label=""];
17->2 [style = bold, label=""];
12->8 [style = bold, label=""];
24->25 [style = bold, label=""];
5->4 [style = bold, label=""];
3->13 [style = bold, label=""];
9->12 [style = bold, label=""];
12->19 [style = bold, label=""];
13->14 [style = bold, label=""];
14->21 [style = bold, label=""];
}
