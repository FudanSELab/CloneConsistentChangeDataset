digraph {
17 [style = filled, label = "shouldMigrateVolumeTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(result)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mockito.lenient().doReturn(storagePoolTypes(i().when(sourceStoragePool).getPoolType()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "boolean result = kvmNonManagedStorageDataMotionStrategy.shouldMigrateVolume(sourceStoragePool,destHost,destStoragePool)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "HostVO destHost = new HostVO(\"guid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "StoragePoolVO sourceStoragePool = Mockito.spy(new StoragePoolVO())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldMigrateVolumeTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StoragePoolType(( storagePoolTypes = StoragePoolType.values()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldMigrateVolumeTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "boolean result = strategy.shouldMigrateVolume(sourceStoragePool,destHost,destStoragePool)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < storagePoolTypes.length@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Mockito.doReturn(storagePoolTypes(i().when(sourceStoragePool).getPoolType()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(result)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertFalse(result)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "storagePoolTypes(i( == StoragePoolType.Filesystem || storagePoolTypes(i( == StoragePoolType.NetworkFilesystem@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StoragePoolVO destStoragePool = new StoragePoolVO()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->16 [style = solid, label="i"];
13->14 [style = solid, label="result"];
10->2 [style = dotted, label="true"];
12->7 [style = bold, label=""];
4->6 [style = bold, label=""];
1->10 [style = solid, label="i"];
10->13 [style = dotted, label="true"];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
1->10 [style = bold, label=""];
10->3 [style = dotted, label="true"];
10->12 [style = dotted, label="true"];
6->16 [style = solid, label="storagePoolTypes"];
16->14 [style = dotted, label="true"];
16->15 [style = bold, label=""];
2->10 [style = bold, label=""];
2->10 [style = solid, label="i"];
10->7 [style = dotted, label="true"];
16->15 [style = dotted, label="false"];
3->7 [style = bold, label=""];
3->13 [style = bold, label=""];
7->13 [style = dashed, label="0"];
1->2 [style = solid, label="i"];
15->2 [style = bold, label=""];
10->3 [style = bold, label=""];
10->16 [style = dotted, label="true"];
10->12 [style = bold, label=""];
5->13 [style = solid, label="sourceStoragePool"];
0->13 [style = solid, label="destHost"];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
7->8 [style = solid, label="result"];
4->7 [style = solid, label="destStoragePool"];
13->16 [style = bold, label=""];
10->8 [style = dotted, label="true"];
16->14 [style = bold, label=""];
0->7 [style = solid, label="destHost"];
13->15 [style = solid, label="result"];
14->2 [style = bold, label=""];
4->13 [style = solid, label="destStoragePool"];
5->7 [style = solid, label="sourceStoragePool"];
3->12 [style = dashed, label="0"];
9->5 [style = bold, label=""];
6->1 [style = bold, label=""];
1->16 [style = solid, label="i"];
17->5 [style = bold, label=""];
11->5 [style = bold, label=""];
}
