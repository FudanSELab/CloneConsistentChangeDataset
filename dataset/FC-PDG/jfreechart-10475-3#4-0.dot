digraph {
0 [style = filled, label = "t1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "t2.getContainer().add(new TextTitle(\"T1\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(t1.equals(t2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(t1.equals(t2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(t1.equals(t2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(t1.equals(t2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CompositeTitle t1 = new CompositeTitle(new BlockContainer())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(h1,h2)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "t2.setFrame(new BlockBorder(Color.red))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "t1.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(t1.equals(t2))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "CompositeTitle t2 = new CompositeTitle(new BlockContainer())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "t2.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "t2.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(t1.equals(t2))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHashcode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "t1.setFrame(new BlockBorder(Color.red))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "int h1 = t1.hashCode()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int h2 = t2.hashCode()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(t1.equals(t2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(t2,t1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "t1.setBorder(new BlockBorder(Color.red))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "t2.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "t2.setBorder(new BlockBorder(Color.red))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertFalse(t1.equals(t2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(t1.equals(t2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "t1.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CompositeTitle t2 = new CompositeTitle(new BlockContainer())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(t1.equals(t2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "t1.getContainer().add(new TextTitle(\"T1\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(t1,t2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
11->16 [style = bold, label=""];
27->18 [style = bold, label=""];
4->18 [style = solid, label="t2"];
17->5 [style = bold, label=""];
4->10 [style = solid, label="t2"];
23->30 [style = bold, label=""];
24->2 [style = bold, label=""];
26->17 [style = bold, label=""];
10->14 [style = bold, label=""];
2->6 [style = bold, label=""];
6->23 [style = bold, label=""];
31->23 [style = solid, label="t2"];
4->19 [style = solid, label="t2"];
8->3 [style = bold, label=""];
30->32 [style = bold, label=""];
4->2 [style = solid, label="t2"];
5->18 [style = bold, label=""];
9->10 [style = bold, label=""];
12->24 [style = bold, label=""];
28->12 [style = bold, label=""];
16->19 [style = bold, label=""];
4->8 [style = solid, label="t2"];
12->10 [style = solid, label="t1"];
23->0 [style = bold, label=""];
4->20 [style = solid, label="t2"];
13->26 [style = dashed, label="0"];
4->21 [style = solid, label="t2"];
32->29 [style = solid, label="h2"];
32->29 [style = bold, label=""];
4->23 [style = solid, label="t2"];
7->22 [style = bold, label=""];
13->17 [style = bold, label=""];
5->27 [style = dashed, label="0"];
3->20 [style = bold, label=""];
31->6 [style = bold, label=""];
19->13 [style = bold, label=""];
12->4 [style = bold, label=""];
18->1 [style = bold, label=""];
25->12 [style = bold, label=""];
24->31 [style = bold, label=""];
4->11 [style = solid, label="t2"];
1->21 [style = bold, label=""];
19->26 [style = bold, label=""];
4->22 [style = solid, label="t2"];
4->9 [style = solid, label="t2"];
0->8 [style = bold, label=""];
21->7 [style = bold, label=""];
12->9 [style = solid, label="t1"];
15->12 [style = bold, label=""];
22->24 [style = bold, label=""];
17->27 [style = bold, label=""];
4->17 [style = solid, label="t2"];
14->11 [style = bold, label=""];
30->29 [style = solid, label="h1"];
}
