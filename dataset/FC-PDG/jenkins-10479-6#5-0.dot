digraph {
15 [style = filled, label = "assertNotSame(b3.getBuiltOnStr(),b1.getBuiltOnStr())@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 0@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "FreeStyleBuild b3 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "auth.add(Jenkins.ADMINISTER,\"anonymous\")@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertNotSame(b3.getBuiltOnStr(),b1.getBuiltOnStr())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "permissionSensitiveSlaveAllocations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "i++@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i++@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i < 3@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "r.jenkins.setNumExecutors(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "r.jenkins.setAuthorizationStrategy(auth)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final FreeStyleBuild b1 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DumbSlave s1 = r.createSlave()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "r.jenkins.setAuthorizationStrategy(new AliceCannotBuild(b1.getBuiltOnStr()))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(),alice)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy(){@Override public ACL getACL(Node node){if (node == b1.getBuiltOn()) return aliceCantBuildreturn super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4a8e2cnode}}@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final FreeStyleBuild b2 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "p.getBuildersList().add(new TestBuilder(){@Override public boolean perform(AbstractBuild<?,?> build,Launcher launcher,BuildListener listener){assertEquals(alice,Jenkins.getAuthentication())return true}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i < 3@@@30@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "accessControl['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "DumbSlave s2 = r.createSlave()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "p.getBuildersList().add(new TestBuilder(){@Override public boolean perform(AbstractBuild<?,?> build,Launcher launcher,BuildListener listener){assertEquals(alice,Jenkins.getAuthentication())return true}})@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "aliceCantBuild.add(new PrincipalSid(alice),Computer.BUILD,false)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "FreeStyleBuild b3 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final SparseACL aliceCantBuild = new SparseACL(null)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "aliceCantBuild.add(new PrincipalSid(\"anonymous\"),Jenkins.ADMINISTER,true)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "permissionSensitiveSlaveAllocations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(),alice)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->3 [style = bold, label=""];
8->16 [style = bold, label=""];
5->10 [style = bold, label=""];
28->29 [style = bold, label=""];
1->4 [style = bold, label=""];
23->20 [style = bold, label=""];
15->7 [style = bold, label=""];
22->19 [style = bold, label=""];
4->6 [style = bold, label=""];
27->28 [style = bold, label=""];
29->31 [style = bold, label=""];
30->27 [style = bold, label=""];
23->21 [style = dotted, label="true"];
4->31 [style = dashed, label="0"];
14->17 [style = bold, label=""];
6->24 [style = bold, label=""];
18->2 [style = bold, label=""];
20->25 [style = bold, label=""];
26->21 [style = solid, label="i"];
19->8 [style = bold, label=""];
3->0 [style = bold, label=""];
2->5 [style = solid, label="auth"];
7->9 [style = solid, label="i"];
6->14 [style = bold, label=""];
7->9 [style = bold, label=""];
24->26 [style = bold, label=""];
11->5 [style = bold, label=""];
23->20 [style = dotted, label="true"];
26->23 [style = solid, label="i"];
0->1 [style = bold, label=""];
26->23 [style = bold, label=""];
9->13 [style = dotted, label="true"];
10->9 [style = solid, label="i"];
9->15 [style = dotted, label="true"];
10->9 [style = bold, label=""];
13->15 [style = bold, label=""];
9->7 [style = dotted, label="true"];
12->19 [style = bold, label=""];
10->7 [style = solid, label="i"];
14->2 [style = solid, label="aliceCantBuild"];
21->23 [style = solid, label="i"];
23->25 [style = dotted, label="true"];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
25->21 [style = bold, label=""];
9->13 [style = bold, label=""];
21->23 [style = bold, label=""];
}
