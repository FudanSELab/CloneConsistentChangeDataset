digraph {
2 [style = filled, label = "Assert.assertThat(facet,is(nullValue()))@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(mockPropertyLayout,mockConfiguration,mockFacetHolder)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when_annotated_with_as_configured_but_already_has_doop_facet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(Collections.singletonList(mockPropertyLayout),mockConfiguration,mockFacetHolder)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "when_not_annotated_but_already_has_doop_facet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when_annotated_with_as_configured_but_already_has_doop_facet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.assertThat(facet,is(nullValue()))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "context.checking(new Expectations(){})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->1 [style = bold, label=""];
4->5 [style = solid, label="facet"];
1->4 [style = bold, label=""];
0->4 [style = dashed, label="0"];
7->1 [style = bold, label=""];
1->0 [style = bold, label=""];
3->1 [style = bold, label=""];
4->5 [style = bold, label=""];
0->2 [style = solid, label="facet"];
0->2 [style = bold, label=""];
}
