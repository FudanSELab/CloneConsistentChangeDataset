digraph {
5 [style = filled, label = "BlockingFlowableIterator<Integer> it = new BlockingFlowableIterator<>(128)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "interruptWait['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "interruptWait['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "interruptWait['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "BlockingFlowableIterator<Integer> it = new BlockingFlowableIterator<Integer>(128)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Thread.currentThread().interrupt()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "it.hasNext()@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BlockingObservableIterator<Integer> it = new BlockingObservableIterator<Integer>(128)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
0->3 [style = bold, label=""];
6->3 [style = bold, label=""];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
0->5 [style = dashed, label="0"];
4->5 [style = bold, label=""];
7->6 [style = bold, label=""];
0->6 [style = dashed, label="0"];
}
