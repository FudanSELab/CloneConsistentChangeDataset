digraph {
2 [style = filled, label = "client.create().forPath(\"/test/a\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testPersistentRecursiveWatchInBackground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.create().forPath(\"/test/a/b/c/d\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT).usingWatcher(watcher).forPath(\"/test/foo\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.create().forPath(\"/test/a/b\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testPersistentRecursiveWatchInBackground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "CountDownLatch backgroundLatch = new CountDownLatch(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.delete().forPath(\"/test/foo\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "client.create().creatingParentsIfNeeded().forPath(\"/test/foo\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CountDownLatch latch = new CountDownLatch(5)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testPersistentWatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Watcher watcher = null@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(backgroundLatch))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "BackgroundCallback backgroundCallback = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT_RECURSIVE).inBackground(backgroundCallback).usingWatcher(watcher).forPath(\"/test\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CountDownLatch latch = new CountDownLatch(3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "client.setData().forPath(\"/test/foo\",\"hey\".getBytes())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(timing.awaitLatch(backgroundLatch))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "client.create().forPath(\"/test\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.create().forPath(\"/test/a/b/c\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.blockUntilConnected()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
1->17 [style = solid, label="backgroundLatch"];
15->13 [style = bold, label=""];
12->5 [style = bold, label=""];
4->17 [style = bold, label=""];
21->19 [style = bold, label=""];
23->5 [style = bold, label=""];
0->5 [style = dashed, label="0"];
7->17 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
0->2 [style = bold, label=""];
21->20 [style = solid, label="latch"];
3->11 [style = bold, label=""];
1->21 [style = dashed, label="0"];
4->7 [style = bold, label=""];
18->20 [style = bold, label=""];
12->16 [style = solid, label="latch"];
22->18 [style = bold, label=""];
6->16 [style = dashed, label="0"];
1->7 [style = solid, label="backgroundLatch"];
19->23 [style = bold, label=""];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
9->21 [style = bold, label=""];
1->14 [style = bold, label=""];
13->9 [style = bold, label=""];
9->1 [style = bold, label=""];
5->22 [style = bold, label=""];
2->22 [style = dashed, label="0"];
12->6 [style = solid, label="latch"];
10->23 [style = dashed, label="0"];
17->16 [style = bold, label=""];
8->13 [style = bold, label=""];
24->13 [style = bold, label=""];
}
