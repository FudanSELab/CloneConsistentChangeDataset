digraph {
5 [style = filled, label = "tester.checkBoolean(\"1.1e1>1.2e1\",Boolean.FALSE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tester.checkBoolean(\"1.1>1.2\",Boolean.FALSE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "tester.checkBoolean(\"1.2e1<=cast(1e2 as real)\",Boolean.TRUE)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "tester.checkBoolean(\"1.1<=1.1\",Boolean.TRUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "tester.checkBoolean(\"1000<=cast(1e2 as real)\",Boolean.FALSE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkNull(\"3.0>cast(null as double)\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "tester.checkNull(\"cast(null as integer)<=3\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.checkBoolean(\"1>2\",Boolean.FALSE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "tester.checkBoolean(\"true<=false\",Boolean.FALSE)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "tester.checkNull(\"3<=cast(null as smallint)\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "tester.checkBoolean(\"1.2>1\",Boolean.TRUE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "tester.checkNull(\"cast(null as integer)<=1.32\")@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "tester.checkNull(\"cast(null as real)<=cast(1 as real)\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testLessThanOrEqualOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testGreaterThanOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "tester.checkBoolean(\"1<=1\",Boolean.TRUE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.setFor(SqlStdOperatorTable.GREATER_THAN)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkBoolean(\"DATE '2013-02-23' > CAST(NULL AS DATE)\",null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkBoolean(\"false>true\",Boolean.FALSE)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkBoolean(\"cast(1 as SMALLINT)>cast(1 as SMALLINT)\",Boolean.FALSE)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "tester.checkBoolean(\"1<=cast(1e2 as real)\",Boolean.TRUE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "tester.checkBoolean(\"-1.1>-1.2\",Boolean.TRUE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "tester.checkBoolean(\"1.2<=1\",Boolean.FALSE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "tester.checkBoolean(\"1.2e1<=1e2\",Boolean.TRUE)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "tester.checkBoolean(\"2>1\",Boolean.TRUE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "tester.checkBoolean(\"false<=false\",Boolean.TRUE)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tester.checkBoolean(\"x'0A000130'>x'0A0001B0'\",Boolean.FALSE)@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "tester.checkBoolean(\"1<=2\",Boolean.TRUE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tester.checkBoolean(\"cast(-1 as TINYINT)>cast(1 as TINYINT)\",Boolean.FALSE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tester.checkBoolean(\"cast(1.2e0 as real)>1\",Boolean.TRUE)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkBoolean(\"true>true\",Boolean.FALSE)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "tester.checkBoolean(\"true<=true\",Boolean.TRUE)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "tester.checkBoolean(\"2<=1\",Boolean.FALSE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.checkBoolean(\"cast(-1.1 as real) > cast(-1.2 as real)\",Boolean.TRUE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testGreaterThanOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "tester.setFor(SqlStdOperatorTable.LESS_THAN_OR_EQUAL)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "tester.checkBoolean(\"DATE '2013-02-23' > DATE '1945-02-24'\",Boolean.TRUE)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tester.checkBoolean(\"false>false\",Boolean.FALSE)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkBoolean(\"true>false\",Boolean.TRUE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkBoolean(\"1.2e0>1\",Boolean.TRUE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "tester.checkBoolean(\"-1.1<=-1.2\",Boolean.FALSE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "tester.checkBoolean(\"-1<=1\",Boolean.TRUE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tester.checkBoolean(\"1.1>1.1\",Boolean.FALSE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tester.checkBoolean(\"false<=true\",Boolean.TRUE)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "tester.checkBoolean(\"1.1<=1.2\",Boolean.TRUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tester.checkBoolean(\"1.1e2>1.1e2\",Boolean.FALSE)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->26 [style = dashed, label="0"];
13->15 [style = bold, label=""];
20->3 [style = bold, label=""];
27->39 [style = bold, label=""];
16->37 [style = dashed, label="0"];
3->38 [style = dashed, label="0"];
17->40 [style = dashed, label="0"];
43->32 [style = bold, label=""];
24->33 [style = bold, label=""];
3->2 [style = bold, label=""];
0->36 [style = dashed, label="0"];
6->11 [style = bold, label=""];
22->3 [style = bold, label=""];
6->32 [style = dashed, label="0"];
21->17 [style = bold, label=""];
18->5 [style = bold, label=""];
0->9 [style = bold, label=""];
8->43 [style = dashed, label="0"];
11->18 [style = bold, label=""];
4->8 [style = bold, label=""];
8->6 [style = bold, label=""];
16->10 [style = bold, label=""];
13->24 [style = dashed, label="0"];
19->13 [style = bold, label=""];
2->21 [style = bold, label=""];
30->41 [style = bold, label=""];
12->16 [style = bold, label=""];
18->25 [style = dashed, label="0"];
17->4 [style = bold, label=""];
44->38 [style = bold, label=""];
10->1 [style = bold, label=""];
2->31 [style = dashed, label="0"];
15->0 [style = bold, label=""];
32->35 [style = bold, label=""];
7->12 [style = bold, label=""];
41->26 [style = bold, label=""];
39->24 [style = bold, label=""];
1->27 [style = dashed, label="0"];
45->27 [style = bold, label=""];
28->42 [style = bold, label=""];
40->34 [style = bold, label=""];
7->41 [style = dashed, label="0"];
36->28 [style = bold, label=""];
9->14 [style = bold, label=""];
1->19 [style = bold, label=""];
38->31 [style = bold, label=""];
37->45 [style = bold, label=""];
14->23 [style = bold, label=""];
35->25 [style = bold, label=""];
5->30 [style = dashed, label="0"];
10->45 [style = dashed, label="0"];
19->39 [style = dashed, label="0"];
4->34 [style = dashed, label="0"];
31->29 [style = bold, label=""];
34->43 [style = bold, label=""];
26->37 [style = bold, label=""];
25->30 [style = bold, label=""];
33->36 [style = bold, label=""];
21->29 [style = dashed, label="0"];
11->35 [style = dashed, label="0"];
5->7 [style = bold, label=""];
15->33 [style = dashed, label="0"];
29->40 [style = bold, label=""];
}
