digraph {
58 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count\",0.0)@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "statusListener.onResume(taskId)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sinkTask.preCommit(offsets)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "consumer.resume(Collections.singleton(TOPIC_PARTITION))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<TopicPartition> partitions = asList(TOPIC_PARTITION,TOPIC_PARTITION2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expectLastCall()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "consumer.resume(Collections.singleton(TOPIC_PARTITION2))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "sinkTask.close(new HashSet<>(partitions))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "workerTask.iteration()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testWakeupInCommitSyncCausesRetry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "time.sleep(30000L)@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertSinkMetricValue(\"offset-commit-seq-no\",1.0)@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testWakeupInCommitSyncCausesRetry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "workerTask.initializeAndStart()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expectLastCall().andReturn(offsets)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "offsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "offsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expectLastCall()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "consumer.commitSync(EasyMock.anyObject())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EasyMock.expectLastCall()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTaskMetricValue(\"offset-commit-avg-time-ms\",0.0)@@@67@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "PowerMock.verifyAll()@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertSinkMetricValue(\"sink-record-read-total\",1.0)@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "expectRebalanceRevocationError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "EasyMock.expectLastCall()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "workerTask.iteration()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertTaskMetricValue(\"pause-ratio\",0.0)@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count-avg\",0.33333)@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertSinkMetricValue(\"offset-commit-completion-skip-total\",0.0)@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "EasyMock.expect(consumer.poll(EasyMock.anyLong())).andAnswer(new IAnswer<ConsumerRecords<byte((,byte((>>(){@Override public ConsumerRecords<byte((,byte((> answer(){rebalanceListener.getValue().onPartitionsRevoked(partitions)rebalanceListener.getValue().onPartitionsAssigned(partitions)return ConsumerRecords.empty()}})@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "time.sleep(30000L)@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count-max\",1.0)@@@55@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "EasyMock.expect(consumer.position(TOPIC_PARTITION2)).andReturn(FIRST_OFFSET)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "EasyMock.expectLastCall().andReturn(Collections.emptyMap())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EasyMock.expect(consumer.position(TOPIC_PARTITION)).andReturn(FIRST_OFFSET)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "final List<TopicPartition> partitions = asList(TOPIC_PARTITION,TOPIC_PARTITION2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "sinkTask.close(new HashSet<>(partitions))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "RuntimeException e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertSinkMetricValue(\"offset-commit-completion-total\",1.0)@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "sinkTask.open(partitions)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectConversionAndTransformation(1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "EasyMock.expect(consumer.poll(EasyMock.anyLong())).andAnswer(new IAnswer<ConsumerRecords<byte((,byte((>>(){@Override public ConsumerRecords<byte((,byte((> answer(){rebalanceListener.getValue().onPartitionsRevoked(partitions)return ConsumerRecords.empty()}})@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> offsets = new HashMap<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expectLastCall()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertSinkMetricValue(\"partition-count\",2)@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertTaskMetricValue(\"batch-size-avg\",1.0)@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertTaskMetricValue(\"offset-commit-success-percentage\",1.0)@@@69@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "EasyMock.expectLastCall().andThrow(e)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EasyMock.expect(consumer.assignment()).andReturn(new HashSet<>(partitions))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "PowerMock.replayAll()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTaskMetricValue(\"running-ratio\",1.0)@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "time.sleep(30000L)@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "time.sleep(30000L)@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertTaskMetricValue(\"offset-commit-failure-percentage\",0.0)@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "expectPollInitialAssignment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertTaskMetricValue(\"batch-size-max\",1.0)@@@64@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertSinkMetricValue(\"sink-record-send-total\",1.0)@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "expectInitializeTask()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "sinkTask.preCommit(EasyMock.anyObject())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertTaskMetricValue(\"status-running\",1.0)@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "createTask(initialState)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "workerTask.iteration()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTaskMetricValue(\"status-paused\",0.0)@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "consumer.commitSync(EasyMock.anyObject())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTaskMetricValue(\"offset-commit-max-time-ms\",0.0)@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "expectConsumerPoll(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expectLastCall().andThrow(new WakeupException())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->36 [style = solid, label="partitions"];
35->6 [style = bold, label=""];
12->35 [style = solid, label="partitions"];
57->61 [style = bold, label=""];
37->10 [style = bold, label=""];
38->28 [style = bold, label=""];
54->55 [style = bold, label=""];
13->7 [style = bold, label=""];
7->8 [style = bold, label=""];
64->66 [style = bold, label=""];
14->18 [style = bold, label=""];
43->45 [style = bold, label=""];
59->51 [style = bold, label=""];
15->38 [style = bold, label=""];
42->23 [style = bold, label=""];
49->32 [style = bold, label=""];
51->44 [style = bold, label=""];
36->3 [style = bold, label=""];
12->14 [style = bold, label=""];
70->69 [style = bold, label=""];
8->32 [style = bold, label=""];
39->50 [style = bold, label=""];
41->52 [style = bold, label=""];
30->13 [style = bold, label=""];
40->4 [style = bold, label=""];
33->17 [style = bold, label=""];
18->25 [style = bold, label=""];
10->27 [style = bold, label=""];
32->53 [style = bold, label=""];
32->11 [style = bold, label=""];
63->66 [style = solid, label="e"];
46->54 [style = bold, label=""];
16->22 [style = bold, label=""];
17->20 [style = bold, label=""];
62->43 [style = bold, label=""];
12->3 [style = solid, label="partitions"];
12->38 [style = solid, label="partitions"];
19->33 [style = bold, label=""];
53->11 [style = bold, label=""];
21->2 [style = bold, label=""];
69->67 [style = solid, label="partitions"];
68->67 [style = bold, label=""];
34->68 [style = dashed, label="0"];
25->21 [style = bold, label=""];
31->4 [style = bold, label=""];
4->24 [style = bold, label=""];
2->9 [style = bold, label=""];
58->62 [style = bold, label=""];
45->46 [style = bold, label=""];
50->60 [style = bold, label=""];
7->56 [style = bold, label=""];
5->23 [style = bold, label=""];
28->66 [style = dashed, label="0"];
48->57 [style = bold, label=""];
44->41 [style = bold, label=""];
27->30 [style = bold, label=""];
14->21 [style = solid, label="offsets"];
61->47 [style = bold, label=""];
1->15 [style = bold, label=""];
5->48 [style = bold, label=""];
56->8 [style = bold, label=""];
65->68 [style = bold, label=""];
26->12 [style = bold, label=""];
66->65 [style = bold, label=""];
9->29 [style = bold, label=""];
55->39 [style = bold, label=""];
69->64 [style = solid, label="partitions"];
24->19 [style = bold, label=""];
34->35 [style = bold, label=""];
3->16 [style = bold, label=""];
8->49 [style = bold, label=""];
29->1 [style = bold, label=""];
60->59 [style = bold, label=""];
70->63 [style = dotted, label="true"];
14->2 [style = solid, label="offsets"];
0->34 [style = bold, label=""];
6->36 [style = bold, label=""];
20->26 [style = bold, label=""];
47->58 [style = bold, label=""];
28->0 [style = bold, label=""];
11->5 [style = bold, label=""];
52->42 [style = bold, label=""];
22->37 [style = bold, label=""];
69->64 [style = bold, label=""];
}
