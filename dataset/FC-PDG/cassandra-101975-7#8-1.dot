digraph {
26 [style = filled, label = "int numRows = 256@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cfs.metadata.maxIndexInterval(originalMinIndexInterval * 4)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "double previousInterval = sstable.getEffectiveIndexInterval()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),(long)Math.ceil(summarySpace * 1.5))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() * 2)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,sstables,1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 4)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SSTableReader sstable = cfs.getSSTables().iterator().next()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),summarySpace)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testChangeMaxIndexInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "long summarySpace = sstable.getIndexSummaryOffHeapSize()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String ksname = KEYSPACE1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "sstable.overrideReadMeter(new RestorableMeter(100.0,100.0))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() / 2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(originalMinIndexInterval * 2,sstable.getEffectiveIndexInterval(),0.001)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval / 2)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),10)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String cfname = CF_STANDARDLOWiINTERVAL@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<SSTableReader> sstables = new ArrayList<>(cfs.getSSTables())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testChangeMinIndexInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),(long)Math.ceil(summarySpace / 2.0))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(previousSize * 1.5,(double)sstable.getIndexSummarySize(),1)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int numSSTables = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int previousSize = sstable.getIndexSummarySize()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,sstables,1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(previousInterval * (1.0 / 1.5),sstable.getEffectiveIndexInterval(),0.001)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(numRows / (originalMinIndexInterval * 2),sstable.getIndexSummarySize())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "createSSTables(ksname,cfname,numSSTables,numRows)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testChangeMinIndexInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(numRows / originalMinIndexInterval,sstable.getIndexSummarySize())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,sstables,1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "sstable.readMeter = new RestorableMeter(100.0,100.0)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Keyspace keyspace = Keyspace.open(ksname)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfname)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(originalMinIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->35 [style = bold, label=""];
14->24 [style = bold, label=""];
5->3 [style = solid, label="summarySpace"];
28->45 [style = dashed, label="0"];
9->6 [style = bold, label=""];
24->30 [style = bold, label=""];
5->34 [style = bold, label=""];
49->55 [style = bold, label=""];
26->20 [style = solid, label="numRows"];
22->8 [style = bold, label=""];
26->15 [style = solid, label="numRows"];
26->54 [style = solid, label="numRows"];
33->46 [style = bold, label=""];
6->11 [style = bold, label=""];
51->47 [style = bold, label=""];
40->17 [style = solid, label="sstable"];
0->21 [style = solid, label="previousInterval"];
41->32 [style = solid, label="sstable"];
43->8 [style = bold, label=""];
15->52 [style = dashed, label="0"];
56->53 [style = bold, label=""];
21->13 [style = bold, label=""];
19->42 [style = bold, label=""];
11->28 [style = bold, label=""];
26->52 [style = solid, label="numRows"];
7->1 [style = bold, label=""];
54->49 [style = bold, label=""];
47->55 [style = solid, label="sstables"];
27->0 [style = bold, label=""];
26->2 [style = solid, label="numRows"];
41->4 [style = bold, label=""];
52->45 [style = bold, label=""];
32->7 [style = bold, label=""];
10->21 [style = bold, label=""];
4->2 [style = bold, label=""];
6->49 [style = dashed, label="0"];
5->17 [style = solid, label="summarySpace"];
54->44 [style = bold, label=""];
5->34 [style = solid, label="summarySpace"];
17->39 [style = bold, label=""];
29->32 [style = bold, label=""];
36->16 [style = bold, label=""];
47->44 [style = bold, label=""];
15->12 [style = bold, label=""];
20->19 [style = bold, label=""];
45->52 [style = bold, label=""];
42->38 [style = bold, label=""];
26->20 [style = bold, label=""];
8->20 [style = solid, label="ksname"];
8->36 [style = solid, label="ksname"];
19->33 [style = bold, label=""];
44->54 [style = bold, label=""];
46->56 [style = bold, label=""];
35->29 [style = bold, label=""];
26->27 [style = solid, label="numRows"];
34->40 [style = bold, label=""];
8->31 [style = bold, label=""];
31->36 [style = bold, label=""];
30->9 [style = bold, label=""];
16->23 [style = bold, label=""];
56->51 [style = solid, label="sstables"];
53->50 [style = bold, label=""];
19->46 [style = solid, label="sstables"];
23->20 [style = solid, label="numSSTables"];
15->28 [style = bold, label=""];
31->20 [style = solid, label="cfname"];
3->41 [style = bold, label=""];
37->10 [style = solid, label="previousSize"];
26->9 [style = solid, label="numRows"];
25->5 [style = bold, label=""];
11->55 [style = dashed, label="0"];
25->34 [style = solid, label="sstable"];
28->15 [style = bold, label=""];
0->37 [style = bold, label=""];
39->3 [style = solid, label="sstable"];
37->17 [style = bold, label=""];
23->26 [style = bold, label=""];
40->18 [style = bold, label=""];
9->30 [style = bold, label=""];
48->8 [style = bold, label=""];
38->14 [style = bold, label=""];
33->42 [style = dashed, label="0"];
13->3 [style = bold, label=""];
18->27 [style = bold, label=""];
12->25 [style = bold, label=""];
50->51 [style = bold, label=""];
39->10 [style = bold, label=""];
31->16 [style = solid, label="cfname"];
33->38 [style = bold, label=""];
55->45 [style = bold, label=""];
}
