digraph {
23 [style = filled, label = "withProcessedImportsProvidesLoaderContextWithAccessToBootstrapRegistry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "contributors.withProcessedImports(this.importer,this.activationContext)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "existingPropertySource.setProperty(\"test\",\"springboot\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(this.importer).resolveAndLoad(any(),this.locationResolverContext.capture(),any(),any())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "imported.put(new TestConfigDataResource(\"a'\"),new ConfigData(Arrays.asList(propertySource)))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ConfigDataEnvironmentContributors contributors = new ConfigDataEnvironmentContributors(this.logFactory,this.bootstrapContext,Arrays.asList(existingContributor,contributor))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.importer = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "withProcessedImportsProvidesLocationResolverContextWithAccessToBinder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "ConfigDataLoaderContext context = this.loaderContext.getValue()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ConfigDataLocationResolverContext context = this.locationResolverContext.getValue()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "withProcessedImportsProvidesLocationResolverContextWithAccessToBinder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "given(this.importer.resolveAndLoad(eq(this.activationContext),any(),any(),eq(locations))).willReturn(imported)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map<ConfigDataResource,ConfigData> imported = new LinkedHashMap<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "MockPropertySource existingPropertySource = new MockPropertySource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ConfigDataEnvironmentContributor contributor = ConfigDataEnvironmentContributor.ofInitialImport(LOCATION_1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Map<ConfigDataLocation,ConfigData> imported = new LinkedHashMap<>()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<String> locations = Arrays.asList(\"testimport\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ConfigDataEnvironmentContributor contributor = ConfigDataEnvironmentContributor.ofInitialImport(\"testimport\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MockPropertySource propertySource = new MockPropertySource()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(this.importer).resolveAndLoad(any(),any(),this.loaderContext.capture(),any())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(context.getBootstrapContext()).isSameAs(this.bootstrapContext)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ConfigDataEnvironmentContributor existingContributor = ConfigDataEnvironmentContributor.ofExisting(existingPropertySource)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(context.getBinder().bind(\"test\",).get()).isEqualTo(\"springboot\")@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "imported.put(new TestConfigDataLocation(\"a'\"),new ConfigData(Arrays.asList(propertySource)))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<ConfigDataLocation> locations = Arrays.asList(LOCATION_1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->12 [style = solid, label="existingPropertySource"];
10->14 [style = bold, label=""];
6->20 [style = dashed, label="0"];
1->15 [style = bold, label=""];
4->13 [style = bold, label=""];
14->5 [style = bold, label=""];
0->16 [style = dashed, label="0"];
15->18 [style = dashed, label="0"];
3->11 [style = bold, label=""];
15->9 [style = solid, label="contributor"];
6->1 [style = solid, label="imported"];
1->18 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
21->24 [style = bold, label=""];
7->4 [style = bold, label=""];
18->9 [style = solid, label="contributor"];
20->1 [style = solid, label="imported"];
9->7 [style = bold, label=""];
4->21 [style = dashed, label="0"];
24->22 [style = bold, label=""];
3->7 [style = solid, label="importer"];
19->8 [style = bold, label=""];
8->16 [style = solid, label="propertySource"];
23->14 [style = bold, label=""];
8->0 [style = solid, label="propertySource"];
13->24 [style = dashed, label="0"];
8->20 [style = bold, label=""];
20->16 [style = bold, label=""];
3->19 [style = bold, label=""];
5->12 [style = bold, label=""];
16->1 [style = bold, label=""];
17->14 [style = bold, label=""];
15->9 [style = bold, label=""];
11->19 [style = dashed, label="0"];
0->1 [style = bold, label=""];
18->9 [style = bold, label=""];
7->21 [style = bold, label=""];
11->8 [style = bold, label=""];
12->9 [style = solid, label="existingContributor"];
12->3 [style = bold, label=""];
2->22 [style = dashed, label="0"];
13->2 [style = bold, label=""];
}
