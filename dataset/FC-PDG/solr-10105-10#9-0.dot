digraph {
9 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"id\",id))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "String value = String.join(\",\",param.getValue())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"checkpointEvery\",Long.toString(checkpointEvery)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return expression@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"maxDepth\",Integer.toString(maxDepth)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(ID,id))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ModifiableSolrParams mParams = new ModifiableSolrParams(params)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "value = value.replace(\"\"\",\"\\\"\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"threads\",Integer.toString(threads)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"initialCheckpoint\",Long.toString(initialCheckpoint)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),value))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey().toString(),value))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ModifiableSolrParams mParams = new ModifiableSolrParams(queryParams)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"partitionSize\",Integer.toString(joinBatchSize)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return expression@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"to\",toNode))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expression.addParameter(checkpointCollection)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"from\",fromNode))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "initialCheckpoint > -1@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"edge\",fromField + \"=\" + toField))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
10->22 [style = bold, label=""];
13->10 [style = bold, label=""];
4->18 [style = dashed, label="0"];
4->3 [style = bold, label=""];
18->3 [style = bold, label=""];
13->5 [style = solid, label="expression"];
15->13 [style = bold, label=""];
2->26 [style = bold, label=""];
20->17 [style = bold, label=""];
9->16 [style = dashed, label="0"];
7->10 [style = bold, label=""];
11->1 [style = bold, label=""];
6->18 [style = bold, label=""];
0->23 [style = dashed, label="0"];
13->19 [style = solid, label="expression"];
8->3 [style = bold, label=""];
3->6 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
18->2 [style = bold, label=""];
15->0 [style = dotted, label="true"];
17->19 [style = bold, label=""];
14->1 [style = bold, label=""];
6->4 [style = solid, label="value"];
1->20 [style = dashed, label="0"];
22->3 [style = bold, label=""];
8->22 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
26->27 [style = bold, label=""];
25->20 [style = bold, label=""];
10->8 [style = bold, label=""];
13->7 [style = bold, label=""];
24->25 [style = bold, label=""];
21->23 [style = dotted, label="true"];
9->26 [style = dashed, label="0"];
6->18 [style = solid, label="value"];
11->24 [style = dashed, label="0"];
9->14 [style = bold, label=""];
12->0 [style = dotted, label="true"];
16->14 [style = bold, label=""];
14->11 [style = dotted, label="true"];
27->24 [style = bold, label=""];
14->11 [style = bold, label=""];
21->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
