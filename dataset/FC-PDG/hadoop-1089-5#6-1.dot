digraph {
67 [style = filled, label = "assertBlacklistAdditionsAndRemovals(0,0,rm)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(3,rm.getMyFifoScheduler().lastAsk.size())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(4,rm.getMyFifoScheduler().lastAsk.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "allocator.sendFailure(f2)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Assert.assertTrue(\"No of assignments must be 3\",assigned.size() == 3)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assigned = allocator.schedule()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ContainerRequestEvent event2 = ContainerRequestCreator.createRequest(jobId,2,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e7749)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "rm.drainEvents()@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "rm.drainEvents()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "RMApp app = MockRMAppSubmitter.submitWithMemory(1024,rm)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "allocator.schedule()@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "rm.drainEvents()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "nodeManager2.nodeHeartbeat(true)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Configuration conf = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rm.drainEvents()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "ContainerFailedEvent f2 = createFailEvent(jobId,1,\"h2\",false)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "MockNM nodeManager2 = rm.registerNode(\"h2:1234\",10240)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "LOG.info(\"Running testSimple\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ContainerRequestEvent event3 = ContainerRequestCreator.createRequest(jobId,3,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e7760)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "nodeManager2.nodeHeartbeat(true)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "allocator.sendRequest(event3)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assigned = allocator.schedule()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rm.drainEvents()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testBlackListedNodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assigned = allocator.schedule()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertBlacklistAdditionsAndRemovals(2,0,rm)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertBlacklistAdditionsAndRemovals(0,0,rm)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "nodeManager1.nodeHeartbeat(false)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "allocator.sendRequest(event1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "Assert.assertTrue(\"Assigned container host not correct\",\"h3\".equals(assig.getContainer().getNodeId().getHost()))@@@67@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testSimple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "allocator.sendFailure(f1)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "rm.drainEvents()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testSimple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",10240)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ContainerFailedEvent f1 = createFailEvent(jobId,1,\"h1\",false)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "conf.setInt(MRJobConfig.MR_AM_IGNORE_BLACKLISTING_BLACKLISTED_NODE_PERECENT,-1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "LOG.info(\"Running testBlackListedNodes\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "ContainerRequestEvent event1 = ContainerRequestCreator.createRequest(jobId,1,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e7732)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "rm.drainEvents()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "conf.setInt(MRJobConfig.MAX_TASK_FAILURES_PER_TRACKER,1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",10240)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "rm.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",2048)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assigned = allocator.schedule()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "rm.drainEvents()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "conf.setBoolean(MRJobConfig.MR_AM_JOB_NODE_BLACKLISTING_ENABLE,true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "rm.drainEvents()@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "nodeManager2.nodeHeartbeat(false)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rm.drainEvents()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "rm.drainEvents()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "rm.drainEvents()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(5,rm.getMyFifoScheduler().lastAsk.size())@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "rm.drainEvents()@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Job mockJob = mock()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "rm.drainEvents()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "allocator.sendRequest(event2)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65->60 [style = bold, label=""];
37->0 [style = bold, label=""];
58->50 [style = bold, label=""];
56->64 [style = bold, label=""];
28->20 [style = bold, label=""];
37->42 [style = solid, label="appAttemptId"];
27->58 [style = bold, label=""];
52->55 [style = bold, label=""];
3->34 [style = bold, label=""];
44->2 [style = solid, label="event1"];
48->52 [style = bold, label=""];
61->3 [style = bold, label=""];
31->6 [style = bold, label=""];
39->32 [style = solid, label="conf"];
53->32 [style = bold, label=""];
73->61 [style = bold, label=""];
39->49 [style = bold, label=""];
36->18 [style = bold, label=""];
16->43 [style = bold, label=""];
2->24 [style = bold, label=""];
9->38 [style = bold, label=""];
43->44 [style = bold, label=""];
21->3 [style = bold, label=""];
57->54 [style = bold, label=""];
44->2 [style = bold, label=""];
24->28 [style = bold, label=""];
32->62 [style = solid, label="rm"];
29->39 [style = bold, label=""];
30->46 [style = dashed, label="0"];
18->11 [style = bold, label=""];
12->63 [style = bold, label=""];
11->12 [style = bold, label=""];
42->31 [style = bold, label=""];
75->69 [style = bold, label=""];
39->42 [style = solid, label="conf"];
25->7 [style = bold, label=""];
26->4 [style = bold, label=""];
40->24 [style = solid, label="jobId"];
60->57 [style = bold, label=""];
55->65 [style = bold, label=""];
49->71 [style = bold, label=""];
0->23 [style = bold, label=""];
40->44 [style = solid, label="jobId"];
70->75 [style = bold, label=""];
40->11 [style = solid, label="jobId"];
5->72 [style = dashed, label="0"];
13->5 [style = bold, label=""];
54->59 [style = bold, label=""];
63->7 [style = bold, label=""];
62->48 [style = bold, label=""];
14->15 [style = bold, label=""];
19->46 [style = bold, label=""];
24->14 [style = solid, label="event2"];
1->45 [style = bold, label=""];
27->8 [style = bold, label=""];
11->12 [style = solid, label="event3"];
14->68 [style = bold, label=""];
58->50 [style = solid, label="f1"];
30->17 [style = bold, label=""];
35->29 [style = bold, label=""];
67->66 [style = bold, label=""];
37->0 [style = solid, label="appAttemptId"];
44->14 [style = solid, label="event1"];
32->19 [style = bold, label=""];
41->10 [style = bold, label=""];
51->72 [style = bold, label=""];
4->33 [style = bold, label=""];
71->53 [style = bold, label=""];
68->51 [style = bold, label=""];
47->29 [style = bold, label=""];
40->10 [style = solid, label="jobId"];
39->32 [style = bold, label=""];
32->42 [style = solid, label="rm"];
59->70 [style = bold, label=""];
40->73 [style = solid, label="jobId"];
33->37 [style = bold, label=""];
32->57 [style = solid, label="rm"];
15->1 [style = bold, label=""];
34->14 [style = solid, label="assigned"];
72->62 [style = bold, label=""];
40->58 [style = solid, label="jobId"];
17->26 [style = bold, label=""];
73->61 [style = solid, label="f2"];
69->67 [style = bold, label=""];
25->63 [style = dashed, label="0"];
41->42 [style = solid, label="mockJob"];
32->67 [style = solid, label="rm"];
34->5 [style = bold, label=""];
28->11 [style = bold, label=""];
34->13 [style = bold, label=""];
66->74 [style = bold, label=""];
11->14 [style = solid, label="event3"];
5->14 [style = bold, label=""];
64->39 [style = bold, label=""];
24->28 [style = solid, label="event2"];
32->46 [style = solid, label="rm"];
20->22 [style = bold, label=""];
10->42 [style = bold, label=""];
6->16 [style = bold, label=""];
23->40 [style = bold, label=""];
12->25 [style = bold, label=""];
22->36 [style = bold, label=""];
50->73 [style = bold, label=""];
40->41 [style = bold, label=""];
8->9 [style = bold, label=""];
7->27 [style = bold, label=""];
38->21 [style = bold, label=""];
46->17 [style = bold, label=""];
29->64 [style = dashed, label="0"];
19->30 [style = bold, label=""];
}
