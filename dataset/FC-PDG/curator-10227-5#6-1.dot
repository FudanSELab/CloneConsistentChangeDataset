digraph {
19 [style = filled, label = "client.getChildren().forPath(\"/base\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.create().forPath(\"/base/c\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,3))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{CloseableUtils.closeQuietly(cache)TestCleanState.closeAndTestClean(client)}@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "client.delete().forPath(\"/base/a\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.create().forPath(\"/base\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList(PathChildrenCacheEvent.Type.CHILD_REMOVED,PathChildrenCacheEvent.Type.CHILD_ADDED)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "PathChildrenCache cache = null@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testIssue27Alt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList(PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_REMOVED,PathChildrenCacheEvent.Type.CHILD_ADDED)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testIssue27['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "{client.close()}@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.create().forPath(\"/base/a\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(expected,events)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.create().forPath(\"/base/a\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "cache.getListenable().addListener(new PathChildrenCacheListener(){@Override public void childEvent(CuratorFramework client,PathChildrenCacheEvent event){events.add(event.getType())semaphore.release()}})@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cache.start()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(expected,events)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testIssue27['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PathChildrenCache cache = new PathChildrenCache(client,\"/base\",true)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.create().forPath(\"/base/b\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cache = new PathChildrenCache(client,\"/base\",true)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
0->3 [style = bold, label=""];
14->24 [style = bold, label=""];
8->10 [style = bold, label=""];
8->26 [style = solid, label="expected"];
10->8 [style = dashed, label="0"];
11->8 [style = solid, label="semaphore"];
5->9 [style = bold, label=""];
22->9 [style = solid, label="cache"];
11->12 [style = solid, label="semaphore"];
6->26 [style = solid, label="events"];
11->4 [style = solid, label="semaphore"];
11->15 [style = solid, label="semaphore"];
11->7 [style = solid, label="semaphore"];
6->5 [style = solid, label="events"];
1->0 [style = bold, label=""];
19->6 [style = bold, label=""];
4->7 [style = bold, label=""];
10->5 [style = solid, label="expected"];
23->14 [style = bold, label=""];
25->27 [style = bold, label=""];
24->16 [style = bold, label=""];
16->9 [style = solid, label="client"];
18->20 [style = bold, label=""];
27->4 [style = bold, label=""];
13->19 [style = bold, label=""];
22->18 [style = bold, label=""];
10->5 [style = bold, label=""];
12->4 [style = bold, label=""];
16->17 [style = solid, label="client"];
20->25 [style = dashed, label="0"];
16->21 [style = bold, label=""];
6->11 [style = bold, label=""];
2->14 [style = bold, label=""];
21->1 [style = bold, label=""];
20->12 [style = bold, label=""];
29->14 [style = bold, label=""];
18->25 [style = bold, label=""];
11->22 [style = bold, label=""];
3->13 [style = bold, label=""];
11->17 [style = bold, label=""];
7->15 [style = bold, label=""];
26->28 [style = bold, label=""];
15->8 [style = bold, label=""];
16->22 [style = solid, label="client"];
17->18 [style = bold, label=""];
8->26 [style = bold, label=""];
17->22 [style = dashed, label="0"];
}
