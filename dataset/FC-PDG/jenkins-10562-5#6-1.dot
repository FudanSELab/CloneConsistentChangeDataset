digraph {
8 [style = filled, label = "assertEquals(projectName,project.getDisplayName())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final String newProjectName = \"newProjectName\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(projectName,project.getDisplayName())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "final String projectName = \"projectName\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "project.setDisplayName(oldDisplayName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getName())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testCopyJobWithDisplayName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String oldDisplayName = \"oldDisplayName\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(newProjectName,newProject.getDisplayName())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getDisplayName())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCopyJobWithNoDisplayName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(projectName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(newProjectName,newProject.getName())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCopyJobWithNoDisplayName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(oldDisplayName,project.getDisplayName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->2 [style = bold, label=""];
7->1 [style = bold, label=""];
15->16 [style = solid, label="oldDisplayName"];
0->6 [style = bold, label=""];
1->5 [style = solid, label="newProjectName"];
2->6 [style = solid, label="project"];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
6->11 [style = dashed, label="0"];
15->12 [style = solid, label="oldDisplayName"];
0->11 [style = bold, label=""];
5->9 [style = dashed, label="0"];
1->9 [style = solid, label="newProjectName"];
11->9 [style = bold, label=""];
12->6 [style = bold, label=""];
1->13 [style = solid, label="newProjectName"];
10->7 [style = bold, label=""];
1->0 [style = solid, label="newProjectName"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
14->7 [style = bold, label=""];
8->0 [style = bold, label=""];
6->5 [style = bold, label=""];
7->3 [style = solid, label="projectName"];
7->2 [style = solid, label="projectName"];
2->0 [style = solid, label="project"];
1->11 [style = solid, label="newProjectName"];
5->13 [style = bold, label=""];
1->6 [style = solid, label="newProjectName"];
3->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
7->8 [style = solid, label="projectName"];
16->12 [style = bold, label=""];
3->16 [style = dashed, label="0"];
2->8 [style = bold, label=""];
2->16 [style = bold, label=""];
}
