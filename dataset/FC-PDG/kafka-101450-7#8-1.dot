digraph {
50 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "i++@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i++@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "processor.checkAndClearResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"XX\" + expectedKeys(i()@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "joined = stream1.join(stream2,joiner,JoinWindows.of(\"test\").within(100),intSerde,stringSerde,stringSerde)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "KStreamBuilder builder = new KStreamBuilder()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int i = 0@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "stream1 = builder.stream(intSerde,stringSerde,topic1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "processor.checkAndClearResult()@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "joined.process(processor)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.setTime(0L)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "KStream<Integer,String> joined@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "processor.checkAndClearResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Collection<Set<String>> copartitionGroups = builder.copartitionGroups()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < 2@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "processor.checkAndClearResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "processor.checkAndClearResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b5a6a4@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KStream<Integer,String> stream2@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KStream<Integer,String> stream1@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "stream2 = builder.stream(intSerde,stringSerde,topic2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < expectedKeys.length@@@42@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YY\" + expectedKeys(i()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < expectedKeys.length@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "{Utils.delete(baseDir)}@@@60@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor.checkAndClearResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "joined = stream1.outerJoin(stream2,joiner,JoinWindows.of(\"test\").within(100),intSerde,stringSerde,stringSerde)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KStreamTestDriver driver = new KStreamTestDriver(builder,baseDir)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i < 2@@@54@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "processor.checkAndClearResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "i++@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "i < expectedKeys.length@@@48@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "processor.checkAndClearProcessResult()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "processor.checkAndClearResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "i < 2@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "int i = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
25->56 [style = dashed, label="0"];
3->46 [style = solid, label="i"];
12->45 [style = bold, label=""];
44->8 [style = bold, label=""];
56->34 [style = bold, label=""];
23->24 [style = solid, label="i"];
32->43 [style = dotted, label="true"];
25->34 [style = bold, label=""];
38->44 [style = bold, label=""];
31->9 [style = bold, label=""];
10->54 [style = bold, label=""];
4->1 [style = solid, label="i"];
9->56 [style = solid, label="stream2"];
23->22 [style = solid, label="i"];
47->52 [style = dashed, label="0"];
19->6 [style = solid, label="i"];
41->1 [style = dotted, label="true"];
47->33 [style = bold, label=""];
44->53 [style = bold, label=""];
14->48 [style = solid, label="expectedKeys"];
3->35 [style = bold, label=""];
23->22 [style = bold, label=""];
9->56 [style = bold, label=""];
20->43 [style = bold, label=""];
26->37 [style = solid, label="baseDir"];
8->4 [style = bold, label=""];
47->58 [style = dashed, label="0"];
45->35 [style = bold, label=""];
32->20 [style = bold, label=""];
59->26 [style = bold, label=""];
44->48 [style = dotted, label="true"];
10->6 [style = dotted, label="true"];
13->32 [style = bold, label=""];
1->41 [style = bold, label=""];
22->23 [style = dotted, label="true"];
13->32 [style = solid, label="i"];
14->6 [style = solid, label="expectedKeys"];
13->20 [style = solid, label="i"];
50->37 [style = bold, label=""];
30->48 [style = solid, label="i"];
36->31 [style = bold, label=""];
43->32 [style = bold, label=""];
22->24 [style = dotted, label="true"];
45->3 [style = solid, label="i"];
35->52 [style = bold, label=""];
1->18 [style = solid, label="i"];
43->20 [style = solid, label="i"];
26->27 [style = bold, label=""];
33->22 [style = solid, label="i"];
18->1 [style = bold, label=""];
27->17 [style = solid, label="builder"];
57->21 [style = bold, label=""];
36->34 [style = solid, label="processor"];
44->38 [style = dotted, label="true"];
42->50 [style = dashed, label="0"];
1->41 [style = solid, label="i"];
35->46 [style = dotted, label="true"];
14->24 [style = solid, label="expectedKeys"];
14->15 [style = bold, label=""];
21->10 [style = solid, label="i"];
41->50 [style = bold, label=""];
30->44 [style = bold, label=""];
2->17 [style = bold, label=""];
42->37 [style = bold, label=""];
43->32 [style = solid, label="i"];
27->14 [style = bold, label=""];
30->38 [style = solid, label="i"];
39->5 [style = bold, label=""];
52->33 [style = bold, label=""];
19->10 [style = solid, label="i"];
4->18 [style = solid, label="i"];
32->20 [style = dotted, label="true"];
14->46 [style = solid, label="expectedKeys"];
19->10 [style = bold, label=""];
4->41 [style = solid, label="i"];
22->28 [style = bold, label=""];
32->57 [style = bold, label=""];
9->25 [style = solid, label="stream2"];
10->6 [style = bold, label=""];
51->13 [style = bold, label=""];
29->21 [style = bold, label=""];
4->41 [style = bold, label=""];
28->51 [style = dashed, label="0"];
21->6 [style = solid, label="i"];
38->44 [style = solid, label="i"];
45->35 [style = solid, label="i"];
38->48 [style = solid, label="i"];
22->51 [style = bold, label=""];
17->12 [style = bold, label=""];
33->23 [style = solid, label="i"];
30->44 [style = solid, label="i"];
40->54 [style = dashed, label="0"];
10->19 [style = dotted, label="true"];
34->39 [style = bold, label=""];
35->58 [style = bold, label=""];
10->40 [style = bold, label=""];
26->17 [style = solid, label="baseDir"];
40->30 [style = bold, label=""];
3->35 [style = solid, label="i"];
41->18 [style = bold, label=""];
33->22 [style = bold, label=""];
7->36 [style = bold, label=""];
46->3 [style = bold, label=""];
24->23 [style = bold, label=""];
29->57 [style = dashed, label="0"];
16->11 [style = bold, label=""];
0->26 [style = bold, label=""];
55->21 [style = bold, label=""];
21->19 [style = solid, label="i"];
35->3 [style = dotted, label="true"];
33->24 [style = solid, label="i"];
54->30 [style = bold, label=""];
28->13 [style = bold, label=""];
41->18 [style = dotted, label="true"];
8->53 [style = dashed, label="0"];
6->19 [style = bold, label=""];
29->55 [style = dashed, label="0"];
15->16 [style = bold, label=""];
45->46 [style = solid, label="i"];
32->29 [style = bold, label=""];
58->33 [style = bold, label=""];
5->2 [style = bold, label=""];
32->55 [style = bold, label=""];
48->38 [style = bold, label=""];
44->48 [style = bold, label=""];
9->25 [style = bold, label=""];
11->7 [style = bold, label=""];
35->47 [style = bold, label=""];
14->18 [style = solid, label="expectedKeys"];
22->24 [style = bold, label=""];
53->4 [style = bold, label=""];
49->26 [style = bold, label=""];
13->43 [style = solid, label="i"];
14->20 [style = solid, label="expectedKeys"];
41->42 [style = bold, label=""];
35->46 [style = bold, label=""];
}
