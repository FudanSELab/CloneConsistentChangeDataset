digraph {
6 [style = filled, label = "Assert.assertEquals(\"PT86400S\",map.get(\"duration\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final LoggingRequestLogger requestLogger = new LoggingRequestLogger(new DefaultObjectMapper(),true,false)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"false\",map.get(\"descending\"))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(\"false\",map.get(\"hasFilters\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"fake\",map.get(\"queryType\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"false\",map.get(\"isNested\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"datasource\",map.get(\"dataSource\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"some.host.tld\",map.get(\"remoteAddr\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testLoggingMDC['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Assert.assertNull(map.get(\"foo\"))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "requestLogger.log(new RequestLogLine(timestamp,remoteAddr,nestedQuery,queryStats))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Map<String,Object> map = readContextMap(baos.toByteArray())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testLoggingMDC['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "requestLogger.logNativeQuery(logLine)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testNestedQueryLoggingMDC['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "requestLogger.log(logLine)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"true\",map.get(\"isNested\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
14->3 [style = bold, label=""];
16->0 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->6 [style = bold, label=""];
1->3 [style = bold, label=""];
8->14 [style = bold, label=""];
9->7 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->1 [style = bold, label=""];
7->5 [style = bold, label=""];
3->2 [style = bold, label=""];
13->3 [style = bold, label=""];
12->8 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
11->8 [style = bold, label=""];
10->16 [style = dashed, label="0"];
6->9 [style = bold, label=""];
15->8 [style = bold, label=""];
4->16 [style = bold, label=""];
8->13 [style = bold, label=""];
}
