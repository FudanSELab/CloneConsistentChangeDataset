digraph {
11 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).singleOrDefault(startWithS))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Integer(( numbers = {5,10,15,20}@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithoutGT15).singleOrDefault(numberGT15))@@@28@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "String(( empty = {}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).singleOrDefault(startWithS))@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String(( twoPeopleWithCharS = {\"Brill\",\"Smith\",\"Simpson\"}@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Predicate1<String> startWithS = new Predicate1<String>(){public boolean apply(String s){return s != null && Character.toString(s.charAt(0)).equals(\"S\")}}@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(people(0(,Linq4j.asEnumerable(people).firstOrDefault())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).singleOrDefault(numberGT15))@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Integer(( numbersWithoutGT15 = {5,10,15}@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Integer(( numbersWithoutGT15 = {5,10,15}@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNull(Linq4j.asEnumerable(twoPeopleWithCharS).singleOrDefault(startWithS))@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Predicate1<Integer> numberGT15 = null@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithoutGT15).singleOrDefault(numberGT15))@@@38@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Predicate1<String> startWithS = null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).singleOrDefault(numberGT15))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).singleOrDefault(startWithS))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "String(( people = {\"Brill\",\"Smith\"}@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Integer(( numbersWithTwoGT15 = {5,10,15,20,25}@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "testFirstOrDefault['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(numbers(0(,Linq4j.asEnumerable(numbers).firstOrDefault())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).singleOrDefault(startWithS))@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSingleOrDefaultPredicate1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertNull(Linq4j.asEnumerable(empty).firstOrDefault())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertNull(Linq4j.asEnumerable(twoPeopleWithCharS).singleOrDefault(startWithS))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testSingleOrDefaultPredicate1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithTwoGT15).singleOrDefault(numberGT15))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "String(( twoPeopleWithCharS = {\"Brill\",\"Smith\",\"Simpson\"}@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "String(( people = {\"Brill\",\"Smith\"}@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithTwoGT15).singleOrDefault(numberGT15))@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Predicate1<Integer> numberGT15 = new Predicate1<Integer>(){public boolean apply(Integer i){return i > 15}}@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20->24 [style = solid, label="startWithS"];
6->3 [style = bold, label=""];
27->18 [style = bold, label=""];
32->34 [style = solid, label="numbers"];
10->3 [style = solid, label="people"];
12->20 [style = dashed, label="0"];
9->11 [style = bold, label=""];
23->27 [style = bold, label=""];
28->34 [style = bold, label=""];
18->9 [style = solid, label="numbers"];
25->9 [style = solid, label="numberGT15"];
13->29 [style = dashed, label="0"];
21->15 [style = bold, label=""];
11->6 [style = bold, label=""];
19->15 [style = solid, label="people"];
8->14 [style = bold, label=""];
34->31 [style = bold, label=""];
12->3 [style = solid, label="startWithS"];
12->5 [style = solid, label="startWithS"];
30->28 [style = solid, label="people"];
20->15 [style = solid, label="startWithS"];
25->22 [style = solid, label="numberGT15"];
12->0 [style = bold, label=""];
20->25 [style = bold, label=""];
30->29 [style = bold, label=""];
26->11 [style = bold, label=""];
13->1 [style = bold, label=""];
2->12 [style = bold, label=""];
1->9 [style = bold, label=""];
0->7 [style = solid, label="numberGT15"];
14->7 [style = bold, label=""];
20->11 [style = solid, label="startWithS"];
9->8 [style = solid, label="numbers"];
0->8 [style = solid, label="numberGT15"];
24->26 [style = bold, label=""];
0->10 [style = bold, label=""];
7->5 [style = bold, label=""];
10->13 [style = bold, label=""];
15->9 [style = bold, label=""];
16->21 [style = bold, label=""];
3->8 [style = bold, label=""];
19->23 [style = bold, label=""];
29->32 [style = bold, label=""];
5->4 [style = bold, label=""];
25->19 [style = bold, label=""];
11->22 [style = bold, label=""];
33->30 [style = bold, label=""];
0->4 [style = solid, label="numberGT15"];
25->26 [style = solid, label="numberGT15"];
32->28 [style = bold, label=""];
9->24 [style = bold, label=""];
12->14 [style = solid, label="startWithS"];
17->20 [style = bold, label=""];
18->16 [style = bold, label=""];
}
