digraph {
16 [style = filled, label = "run['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return 0@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new IllegalArgumentException(\"No such node '\" + node_s + \"'\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "computer == null@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "node == null@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "names = ComputerSet.getComputerNames()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "names == null@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "errorOccurred@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "computer.cliConnect(force)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Computer computer = null@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "run['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "String adv = EditDistance.findNearest(node_s,names)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "computer = jenkins.getComputer(node_s)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "run['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Node node = null@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "node = jenkins.getNode(node_s)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final HashSet<String> hs = new HashSet<String>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "errorOccurred@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "boolean errorOccurred = false@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "throw new AbortException(CLI_LISTPARAM_SUMMARY_ERROR_TEXT)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final HashSet<String> hs = new HashSet<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "hs.addAll(nodes)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "node.toComputer().doDoDelete()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<String> names = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return 0@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Jenkins jenkins = Jenkins.getActiveInstance()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "throw new IllegalArgumentException(adv == null? hudson.model.Messages.Computer_NoSuchSlaveExistsWithoutAdvice(node_s): hudson.model.Messages.Computer_NoSuchSlaveExists(node_s,adv))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
22->26 [style = bold, label=""];
6->21 [style = dashed, label="0"];
8->10 [style = bold, label=""];
13->22 [style = solid, label="errorOccurred"];
1->2 [style = solid, label="names"];
4->14 [style = bold, label=""];
16->13 [style = bold, label=""];
0->12 [style = dotted, label="true"];
15->23 [style = dashed, label="0"];
10->15 [style = bold, label=""];
8->23 [style = bold, label=""];
11->14 [style = bold, label=""];
9->18 [style = dashed, label="0"];
0->12 [style = bold, label=""];
5->1 [style = dotted, label="true"];
15->6 [style = bold, label=""];
11->5 [style = dotted, label="true"];
11->4 [style = dotted, label="true"];
21->25 [style = bold, label=""];
9->8 [style = bold, label=""];
24->22 [style = bold, label=""];
2->4 [style = bold, label=""];
1->5 [style = solid, label="names"];
10->2 [style = solid, label="names"];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
25->20 [style = bold, label=""];
25->24 [style = bold, label=""];
26->12 [style = bold, label=""];
11->2 [style = dotted, label="true"];
19->13 [style = bold, label=""];
14->0 [style = bold, label=""];
23->21 [style = bold, label=""];
2->4 [style = solid, label="adv"];
22->26 [style = dotted, label="true"];
13->7 [style = bold, label=""];
22->12 [style = bold, label=""];
6->11 [style = bold, label=""];
25->20 [style = dotted, label="true"];
11->25 [style = dashed, label="0"];
7->18 [style = bold, label=""];
13->0 [style = solid, label="errorOccurred"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
18->8 [style = bold, label=""];
17->13 [style = bold, label=""];
10->5 [style = solid, label="names"];
6->11 [style = solid, label="computer"];
21->25 [style = solid, label="node"];
20->24 [style = bold, label=""];
24->23 [style = bold, label=""];
}
