digraph {
0 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final AtomicReference<Thread> thread = new AtomicReference<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Observable.error(new Exception()).delay(0,TimeUnit.MILLISECONDS,Schedulers.newThread()).doOnError(new Consumer<Throwable>(){@Override public void accept(Throwable throwable){thread.set(Thread.currentThread())latch.countDown()}}).onErrorResumeWith(Observable.empty()).subscribe()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "onErrorCalledOnScheduler['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "latch.await()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final AtomicReference<Thread> thread = new AtomicReference<Thread>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Single.error(new Exception()).delay(0,TimeUnit.MILLISECONDS,Schedulers.newThread()).doOnError(new Consumer<Throwable>(){@Override public void accept(Throwable throwable){thread.set(Thread.currentThread())latch.countDown()}}).onErrorResumeWith(Single.just(\"\")).subscribe()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "onErrorCalledOnScheduler['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNotEquals(Thread.currentThread(),thread.get())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "onErrorCalledOnScheduler['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
8->1 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
3->8 [style = dashed, label="0"];
1->4 [style = bold, label=""];
2->0 [style = bold, label=""];
7->0 [style = bold, label=""];
9->0 [style = bold, label=""];
5->6 [style = dashed, label="0"];
3->1 [style = bold, label=""];
0->6 [style = bold, label=""];
0->5 [style = bold, label=""];
}
