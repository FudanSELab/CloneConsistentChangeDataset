digraph {
8 [style = filled, label = "testCleanPreviousCorruptedCleanFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<String> cleanerFileNames = Arrays.asList(HoodieTimeline.makeRequestedCleanerFileName(commitTime),HoodieTimeline.makeInflightCleanerFileName(commitTime))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testPendingCompactions(config,48,18,false)@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testKeepLatestCommitsWithPendingCompactions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "os.write(new byte(((()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String commitTime = makeNewCommitTime(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withAssumeDatePartitioning(true).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build()).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testKeepLatestCommitsWithPendingCompactions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withAssumeDatePartitioning(true).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(2).build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<HoodieCleanStat> cleanStats = runCleaner(config)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Path commitFile = new Path(Paths.get(metaClient.getBasePath(),HoodieTableMetaClient.METAFOLDER_NAME,f).toString())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(0,cleanStats.size(),\"Must not clean any files\")@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->11 [style = bold, label=""];
5->12 [style = solid, label="config"];
12->7 [style = bold, label=""];
2->0 [style = bold, label=""];
4->6 [style = bold, label=""];
2->5 [style = dashed, label="0"];
11->12 [style = bold, label=""];
6->4 [style = bold, label=""];
2->0 [style = solid, label="config"];
8->5 [style = bold, label=""];
10->9 [style = solid, label="commitTime"];
5->10 [style = bold, label=""];
1->2 [style = bold, label=""];
3->2 [style = bold, label=""];
10->9 [style = bold, label=""];
9->6 [style = bold, label=""];
}
