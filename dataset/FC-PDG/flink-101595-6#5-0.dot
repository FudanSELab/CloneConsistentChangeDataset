digraph {
6 [style = filled, label = "assertThrowable(e,null)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "fail(\"The future should fail exceptionally.\")@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "client.submitJob(jobGraph).get()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testStopWithSavepointWithDrainCallsFinishBeforeSnapshotState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "waitUntilAllTasksAreRunning(cluster.getRestAddres(),jobGraph.getJobID())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "env.getConfig().setRestartStrategy(RestartStrategies.noRestart())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "cluster.before()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "waitUntilAllTasksAreRunning(cluster.getRestAddres(),jobGraph.getJobID())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "client.stopWithSavepoint(jobGraph.getJobID(),true,savepointDir.getAbsolutePath()).get()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ClusterClient<?> client = cluster.getClusterClient()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "configuration.setString(HighAvailabilityOptions.HA_MODE,.getName())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MiniClusterWithClientResource cluster = new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setConfiguration(configuration).build())@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "env.addSource(new InfiniteTestSource()).name(\"Infinite test source\").addSink(new DiscardingSink<>())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "{}@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "MiniClusterWithClientResource cluster = new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setNumberSlotsPerTaskManager(sinkParallelism + 1).build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final int parallelism = 2@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "ExecutionException ignored@@@21@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "env.addSource(new InfiniteTestSource()).name(\"Infinite Source\").addSink(new DiscardingSink<>())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "{cluster.after()}@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testStopWithSavepointWithDrainGlobalFailoverIfSavepointAborted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "waitUntilAllTasksAreRunning(cluster.getRestAddres(),jobGraph.getJobID())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cluster.before()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Configuration configuration = new Configuration()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MiniClusterWithClientResource cluster = new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setNumberSlotsPerTaskManager(parallelism).setConfiguration(configuration).build())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testStopWithSavepointWithDrainGlobalFailoverIfSavepointAborted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ExecutionException e@@@20@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "env.addSource(new InfiniteTestSource()).name(\"Infinite Source\").addSink(new FinishingSink<>()).setParallelism(sinkParallelism)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int sinkParallelism = 5@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "env.getConfig().setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,0L))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "env.setParallelism(parallelism)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "client.stopWithSavepoint(jobGraph.getJobID(),true,savepointDir.getAbsolutePath()).get()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.stopWithSavepoint(jobGraph.getJobID(),true,savepointDir.getAbsolutePath()).get()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{cluster.after()}@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
0->16 [style = bold, label=""];
4->24 [style = bold, label=""];
8->23 [style = bold, label=""];
0->17 [style = bold, label=""];
11->4 [style = bold, label=""];
4->15 [style = bold, label=""];
12->11 [style = bold, label=""];
25->18 [style = bold, label=""];
20->28 [style = bold, label=""];
1->29 [style = dashed, label="0"];
16->34 [style = bold, label=""];
34->7 [style = bold, label=""];
10->3 [style = bold, label=""];
31->16 [style = solid, label="sinkParallelism"];
10->21 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
16->18 [style = dashed, label="0"];
7->8 [style = bold, label=""];
17->25 [style = dashed, label="0"];
26->11 [style = bold, label=""];
28->14 [style = bold, label=""];
24->25 [style = solid, label="parallelism"];
6->14 [style = bold, label=""];
22->8 [style = bold, label=""];
5->16 [style = dashed, label="0"];
29->20 [style = bold, label=""];
35->0 [style = bold, label=""];
13->19 [style = bold, label=""];
1->6 [style = bold, label=""];
18->22 [style = bold, label=""];
30->35 [style = bold, label=""];
8->2 [style = bold, label=""];
36->2 [style = bold, label=""];
15->0 [style = bold, label=""];
31->30 [style = bold, label=""];
27->17 [style = bold, label=""];
16->5 [style = bold, label=""];
3->13 [style = bold, label=""];
5->7 [style = bold, label=""];
1->6 [style = dotted, label="true"];
10->33 [style = bold, label=""];
19->28 [style = bold, label=""];
23->9 [style = bold, label=""];
13->14 [style = bold, label=""];
24->27 [style = bold, label=""];
32->31 [style = bold, label=""];
7->36 [style = bold, label=""];
17->16 [style = bold, label=""];
21->13 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
