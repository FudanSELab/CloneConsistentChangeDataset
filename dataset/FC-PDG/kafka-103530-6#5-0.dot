digraph {
3 [style = filled, label = "clientCertStores = new CertStores(false,\"non-existent.com\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testClientEndpointNotValidated['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "NetworkTestUtils.checkClientConnection(selector,node,100,10)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testClientEndpointNotValidated['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "clientCertStores = new CertStores(false,\"localhost\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "createSelector(sslClientConfigs)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "InetSocketAddress addr = new InetSocketAddress(\"localhost\",server.port())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SslChannelBuilder serverChannelBuilder = new SslChannelBuilder(Mode.SERVER){@Override protected SslTransportLayer buildTransportLayer(SslFactory sslFactory,String id,SelectionKey key,String host){SocketChannel socketChannel = (SocketChannel)key.channel()SSLEngine sslEngine = sslFactory.createSslEngine(host,socketChannel.socket().getPort())SSLParameters sslParams = sslEngine.getSSLParameters()sslParams.setEndpointIdentificationAlgorithm(\"HTTPS\")sslEngine.setSSLParameters(sslParams)TestSslTransportLayer transportLayer = new TestSslTransportLayer(id,key,sslEngine,BUFFER_SIZE,BUFFER_SIZE,BUFFER_SIZE)transportLayer.startHandshake()return transportLayer}}@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "testValidEndpointIdentificationCN['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "InetSocketAddress addr = new InetSocketAddress(\"localhost\",server.port())@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SslChannelBuilder serverChannelBuilder = new TestSslChannelBuilder(Mode.SERVER){@Override protected TestSslTransportLayer newTransportLayer(String id,SelectionKey key,SSLEngine sslEngine){SSLParameters sslParams = sslEngine.getSSLParameters()sslParams.setEndpointIdentificationAlgorithm(\"HTTPS\")sslEngine.setSSLParameters(sslParams)return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c7ccbaidkeysslEngine}}@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "createSelector(sslClientConfigs)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "selector.connect(node,addr,BUFFER_SIZE,BUFFER_SIZE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "server = createEchoServer(SecurityProtocol.SSL)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "server.start()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "InetSocketAddress addr = new InetSocketAddress(\"localhost\",server.port())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "server = new NioEchoServer(ListenerName.forSecurityProtocol(SecurityProtocol.SSL),SecurityProtocol.SSL,new TestSecurityConfig(sslServerConfigs),\"localhost\",serverChannelBuilder,null)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "createSelector(sslClientConfigs)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "NetworkTestUtils.checkClientConnection(selector,node,100,10)@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "selector.connect(node,addr,BUFFER_SIZE,BUFFER_SIZE)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "selector.connect(node,addr,BUFFER_SIZE,BUFFER_SIZE)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "serverChannelBuilder.configure(sslServerConfigs)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "serverCertStores = new CertStores(true,\"localhost\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "NetworkTestUtils.checkClientConnection(selector,node,100,10)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String node = \"0\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG,\"HTTPS\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->20 [style = solid, label="sslClientConfigs"];
16->15 [style = bold, label=""];
6->10 [style = solid, label="sslServerConfigs"];
23->25 [style = bold, label=""];
0->9 [style = bold, label=""];
15->7 [style = bold, label=""];
7->10 [style = bold, label=""];
11->1 [style = bold, label=""];
0->27 [style = bold, label=""];
2->3 [style = bold, label=""];
6->17 [style = solid, label="sslServerConfigs"];
23->25 [style = solid, label="addr"];
9->10 [style = solid, label="serverChannelBuilder"];
2->21 [style = solid, label="node"];
13->4 [style = solid, label="addr"];
14->17 [style = bold, label=""];
6->0 [style = bold, label=""];
3->12 [style = bold, label=""];
18->2 [style = bold, label=""];
9->7 [style = bold, label=""];
2->8 [style = solid, label="node"];
12->6 [style = bold, label=""];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
2->12 [style = bold, label=""];
2->10 [style = solid, label="node"];
14->19 [style = solid, label="serverChannelBuilder"];
19->16 [style = bold, label=""];
12->0 [style = solid, label="serverCertStores"];
24->20 [style = bold, label=""];
6->7 [style = solid, label="sslServerConfigs"];
7->10 [style = solid, label="addr"];
26->2 [style = bold, label=""];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
10->11 [style = bold, label=""];
9->14 [style = dashed, label="0"];
20->23 [style = bold, label=""];
0->1 [style = solid, label="sslClientConfigs"];
6->19 [style = solid, label="sslServerConfigs"];
0->15 [style = solid, label="sslClientConfigs"];
22->6 [style = solid, label="clientCertStores"];
2->11 [style = solid, label="node"];
2->4 [style = solid, label="node"];
4->8 [style = bold, label=""];
27->24 [style = bold, label=""];
2->25 [style = solid, label="node"];
12->22 [style = bold, label=""];
3->6 [style = solid, label="clientCertStores"];
25->21 [style = bold, label=""];
22->6 [style = bold, label=""];
13->4 [style = bold, label=""];
}
