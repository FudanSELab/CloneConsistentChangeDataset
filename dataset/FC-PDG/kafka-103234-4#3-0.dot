digraph {
8 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Subject subject = new Subject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "SaslExtensions(( extensions = new SaslExtensions((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd0e1b@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "OAuthBearerLoginModule loginModule1 = new OAuthBearerLoginModule()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "TestCallbackHandler testTokenCallbackHandler = new TestCallbackHandler(tokens,extensions)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertSame(extensions(2(,publicCredentials.iterator().next())@@@59@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "loginModule1.logout()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Set<Object> publicCredentials = subject.getPublicCredentials()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(2,publicCredentials.size())@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "OAuthBearerLoginModule loginModule2 = new OAuthBearerLoginModule()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "login1Commit1Login2Abort2Login3Commit3Logout3['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Iterator<Object> publicIterator = publicCredentials.iterator()@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "loginModule1.logout()@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "login1Commit1Login2Abort2Login3Commit3Logout3['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "loginModule1.login()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Iterator<Object> iterator = privateCredentials.iterator()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "OAuthBearerToken(( tokens = new OAuthBearerToken((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd0fc3@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "loginModule1.commit()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "loginModule2.commit()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Set<Object> privateCredentials = subject.getPrivateCredentials()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "login1Commit1Logout1Login2Commit2Logout2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TestTokenCallbackHandler testTokenCallbackHandler = new TestTokenCallbackHandler(tokens)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "loginModule2.login()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertSame(tokens(1(,privateCredentials.iterator().next())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "OAuthBearerLoginModule loginModule3 = new OAuthBearerLoginModule()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "loginModule2.abort()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1(,tokens(2()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertSame(tokens(2(,privateCredentials.iterator().next())@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "loginModule2.login()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1(,extensions(2()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(2,privateCredentials.size())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "loginModule2.commit()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "loginModule2.login()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "loginModule2.logout()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
48->46 [style = solid, label="extensions"];
23->2 [style = bold, label=""];
11->29 [style = bold, label=""];
20->27 [style = solid, label="testTokenCallbackHandler"];
56->53 [style = bold, label=""];
44->23 [style = bold, label=""];
33->48 [style = bold, label=""];
33->59 [style = solid, label="tokens"];
16->0 [style = bold, label=""];
33->34 [style = bold, label=""];
48->41 [style = solid, label="extensions"];
50->51 [style = bold, label=""];
5->32 [style = bold, label=""];
13->24 [style = bold, label=""];
24->10 [style = bold, label=""];
34->20 [style = bold, label=""];
33->32 [style = solid, label="tokens"];
48->35 [style = solid, label="extensions"];
16->65 [style = dashed, label="0"];
33->20 [style = solid, label="tokens"];
0->23 [style = bold, label=""];
49->3 [style = bold, label=""];
17->4 [style = bold, label=""];
25->27 [style = solid, label="subject"];
34->59 [style = dashed, label="0"];
23->52 [style = bold, label=""];
33->29 [style = solid, label="tokens"];
25->12 [style = solid, label="subject"];
33->5 [style = solid, label="tokens"];
33->4 [style = solid, label="tokens"];
33->23 [style = solid, label="tokens"];
38->17 [style = bold, label=""];
25->6 [style = solid, label="subject"];
48->34 [style = bold, label=""];
33->28 [style = solid, label="tokens"];
31->36 [style = bold, label=""];
48->42 [style = solid, label="extensions"];
33->50 [style = solid, label="tokens"];
33->0 [style = solid, label="tokens"];
15->25 [style = bold, label=""];
35->26 [style = bold, label=""];
59->20 [style = bold, label=""];
36->35 [style = bold, label=""];
10->5 [style = bold, label=""];
40->25 [style = bold, label=""];
54->46 [style = bold, label=""];
9->12 [style = bold, label=""];
33->8 [style = solid, label="tokens"];
39->33 [style = bold, label=""];
28->56 [style = solid, label="iterator"];
24->55 [style = bold, label=""];
46->6 [style = solid, label="testTokenCallbackHandler"];
63->61 [style = bold, label=""];
1->12 [style = bold, label=""];
33->34 [style = solid, label="tokens"];
34->54 [style = bold, label=""];
5->43 [style = bold, label=""];
48->54 [style = solid, label="extensions"];
31->26 [style = bold, label=""];
1->14 [style = bold, label=""];
46->14 [style = solid, label="testTokenCallbackHandler"];
30->31 [style = bold, label=""];
37->13 [style = bold, label=""];
66->63 [style = bold, label=""];
53->38 [style = bold, label=""];
12->19 [style = bold, label=""];
55->10 [style = bold, label=""];
48->38 [style = solid, label="extensions"];
5->62 [style = bold, label=""];
33->7 [style = solid, label="tokens"];
57->32 [style = bold, label=""];
33->59 [style = bold, label=""];
33->31 [style = solid, label="tokens"];
25->9 [style = solid, label="subject"];
48->52 [style = solid, label="extensions"];
29->3 [style = bold, label=""];
7->8 [style = bold, label=""];
43->32 [style = bold, label=""];
47->49 [style = bold, label=""];
19->37 [style = bold, label=""];
48->53 [style = solid, label="extensions"];
33->11 [style = solid, label="tokens"];
18->39 [style = bold, label=""];
3->21 [style = bold, label=""];
46->27 [style = bold, label=""];
20->22 [style = bold, label=""];
18->33 [style = bold, label=""];
14->9 [style = bold, label=""];
25->18 [style = bold, label=""];
19->13 [style = bold, label=""];
32->42 [style = bold, label=""];
0->44 [style = bold, label=""];
29->47 [style = bold, label=""];
26->11 [style = bold, label=""];
51->41 [style = bold, label=""];
32->16 [style = bold, label=""];
27->6 [style = bold, label=""];
45->56 [style = bold, label=""];
6->1 [style = bold, label=""];
4->63 [style = dashed, label="0"];
62->57 [style = bold, label=""];
42->16 [style = bold, label=""];
48->49 [style = solid, label="extensions"];
64->25 [style = bold, label=""];
61->58 [style = bold, label=""];
25->14 [style = solid, label="subject"];
28->7 [style = bold, label=""];
46->12 [style = solid, label="testTokenCallbackHandler"];
20->1 [style = solid, label="testTokenCallbackHandler"];
20->9 [style = solid, label="testTokenCallbackHandler"];
4->50 [style = bold, label=""];
60->66 [style = bold, label=""];
22->27 [style = bold, label=""];
33->46 [style = solid, label="tokens"];
25->1 [style = solid, label="subject"];
52->2 [style = bold, label=""];
8->17 [style = bold, label=""];
33->30 [style = solid, label="tokens"];
32->65 [style = bold, label=""];
33->63 [style = solid, label="tokens"];
2->30 [style = bold, label=""];
65->60 [style = bold, label=""];
8->45 [style = bold, label=""];
21->28 [style = bold, label=""];
}
