digraph {
21 [style = filled, label = "Assert.assertTrue(consumedEvent.size() == 1,\"Consumption did not match production\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Spec spec = initJobSpec(updatedSpecUriString)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(specUriString),\"Expected URI did not match\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE),\"Verb did not match\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Thread.currentThread().interrupt()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec,\"Expected JobSpec\")@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<Pair<SpecExecutor.Verb,Spec>> consumedEvent = _seic.changedSpecs().get()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "InterruptedException ex@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testUpdateSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "_properties.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + \"value.serializer\",\"org.apache.kafka.common.serialization.ByteArraySerializer\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "log.info(\"WriteResponse: \" + writeResponse)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "_seic = _closer.register(new SimpleKafkaSpecConsumer(ConfigUtils.propertiesToConfig(_properties)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "_properties.setProperty(KafkaWriterConfigurationKeys.KAFKA_TOPIC,TOPIC)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec,\"Expected JobSpec\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "WriteResponse writeResponse = (WriteResponse)_seip.updateSpec(spec).get()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.ADD),\"Verb did not match\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "_properties.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + \"bootstrap.servers\",_kafkaBrokers)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "_properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String updatedSpecUriString = \"/foo/bar/addedSpec\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(addedSpecUriString),\"Expected URI did not match\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Map.Entry<SpecExecutor.Verb,Spec> consumedSpecAction = consumedEvent.get(0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString),\"Expected URI did not match\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Spec spec = initJobSpec(addedSpecUriString)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "String addedSpecUriString = \"/foo/bar/addedSpec\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Thread.sleep(1000)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "_seip = _closer.register(new SimpleKafkaSpecProducer(ConfigUtils.propertiesToConfig(_properties)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "_properties.setProperty(SimpleKafkaSpecExecutor.SPEC_KAFKA_TOPICS_KEY,TOPIC)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testAddSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(consumedEvent.size() == 1,\"Consumption did not match production\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "_properties.setProperty(ConfigurationKeys.KAFKA_BROKERS,_kafkaBrokers)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "WriteResponse writeResponse = (WriteResponse)_seip.addSpec(spec).get()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "log.info(\"WriteResponse: \" + writeResponse)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map.Entry<SpecExecutor.Verb,Spec> consumedSpecAction = consumedEvent.get(0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Pair<SpecExecutor.Verb,Spec>> consumedEvent = _seic.changedSpecs().get()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testUpdateSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "_closer = Closer.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->33 [style = bold, label=""];
10->3 [style = solid, label="updatedSpecUriString"];
13->34 [style = bold, label=""];
1->4 [style = bold, label=""];
25->28 [style = bold, label=""];
22->15 [style = bold, label=""];
26->32 [style = bold, label=""];
35->18 [style = bold, label=""];
32->33 [style = solid, label="addedSpecUriString"];
15->25 [style = bold, label=""];
32->17 [style = solid, label="addedSpecUriString"];
9->7 [style = solid, label="writeResponse"];
10->3 [style = bold, label=""];
28->26 [style = bold, label=""];
9->7 [style = bold, label=""];
20->26 [style = solid, label="_properties"];
11->9 [style = bold, label=""];
24->22 [style = bold, label=""];
20->14 [style = solid, label="_properties"];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
18->20 [style = bold, label=""];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
21->31 [style = bold, label=""];
14->23 [style = bold, label=""];
23->21 [style = bold, label=""];
5->12 [style = bold, label=""];
10->2 [style = solid, label="updatedSpecUriString"];
27->29 [style = solid, label="writeResponse"];
12->8 [style = bold, label=""];
7->6 [style = bold, label=""];
33->30 [style = bold, label=""];
16->14 [style = bold, label=""];
2->33 [style = dashed, label="0"];
34->14 [style = bold, label=""];
17->27 [style = bold, label=""];
27->29 [style = bold, label=""];
20->24 [style = bold, label=""];
5->19 [style = dashed, label="0"];
4->5 [style = bold, label=""];
32->17 [style = bold, label=""];
29->16 [style = bold, label=""];
31->19 [style = bold, label=""];
2->8 [style = bold, label=""];
13->34 [style = dotted, label="true"];
}
