digraph {
4 [style = filled, label = "Thread.sleep(100)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(result,succeededSilently())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "waitNodeOnlineShouldSuccessOnOnlineNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "waitNodeOnlineShouldSuccessOnOnlineNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).invokeWithArgs(\"aNode\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "!slave.toComputer().isOnline()@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "slave.toComputer().disconnect()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "slave.toComputer().waitUntilOffline()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(result,succeededSilently())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Thread.sleep(100)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "true@@@5@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(slave.toComputer().isOffline(),equalTo(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "connectNodeShouldSucceed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(result,succeededSilently())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(result,succeededSilently())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "slave.toComputer().isOnline()@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DumbSlave slave = j.createSlave(\"aNode\",\"\",null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
1->8 [style = bold, label=""];
24->19 [style = bold, label=""];
9->11 [style = bold, label=""];
3->1 [style = bold, label=""];
0->6 [style = bold, label=""];
9->11 [style = dotted, label="true"];
18->15 [style = bold, label=""];
12->8 [style = solid, label="result"];
1->9 [style = dashed, label="0"];
6->24 [style = bold, label=""];
1->4 [style = dotted, label="true"];
19->17 [style = bold, label=""];
11->9 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
3->13 [style = dashed, label="0"];
22->5 [style = bold, label=""];
13->23 [style = solid, label="result"];
20->21 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
7->5 [style = bold, label=""];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
17->20 [style = solid, label="result"];
12->8 [style = bold, label=""];
5->13 [style = bold, label=""];
8->0 [style = solid, label="result"];
13->23 [style = bold, label=""];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
9->12 [style = bold, label=""];
1->2 [style = dotted, label="true"];
15->16 [style = solid, label="result"];
23->18 [style = bold, label=""];
2->8 [style = bold, label=""];
17->20 [style = bold, label=""];
}
