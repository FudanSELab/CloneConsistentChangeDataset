digraph {
32 [style = filled, label = "Set set = project1.getArtifacts()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Artifact artifact = (Artifact)aSet@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotNull(a)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testDependencyManagementOverridesTransitiveDependencyVersion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(),b.getScope().equals(\"runtime\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertTrue(\"Set size should be 3, is \" + set.size(),set.size() == 3)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(a.getScope().equals(\"test\"),\"Incorrect scope for \" + a.getDependencyConflictId())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "File pom1 = new File(pom0Basedir,\"p1/pom.xml\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "File pom0 = new File(localRepo,\"p0/pom.xml\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Artifact b = (Artifact)map.get(\"maven-test:t10-b\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNotNull(map,\"No artifacts\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "File pom0Basedir = pom0.getParentFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(\"Incorrect version for \" + artifact.getDependencyConflictId(),artifact.getVersion().equals(\"1.0\"))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(\"Set size should be 3, is \" + map.size(),map.size() == 3)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testDependencyManagementOverridesTransitiveDependencyVersion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(map.size() > 0,\"No Artifacts\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(pom0Basedir,project1.getParent().getBasedir())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNotNull(\"No artifacts\",set)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(c.getScope().equals(\"runtime\"),\"Incorrect scope for \" + c.getDependencyConflictId())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Map map = project1.getArtifactMap()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(),c.getScope().equals(\"runtime\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "MavenProject project1 = getProjectWithDependencies(pom1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Artifact a = (Artifact)map.get(\"maven-test:t10-a\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "System.out.println(\"Project \" + project1.getId() + \" \" + project1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MavenProject project0 = getProjectWithDependencies(pom0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(b)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(),a.getScope().equals(\"test\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertTrue(\"No Artifacts\",map.size() > 0)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertTrue(b.getScope().equals(\"runtime\"),\"Incorrect scope for \" + b.getDependencyConflictId())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertNotNull(c)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Artifact c = (Artifact)map.get(\"maven-test:t10-c\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testDependencyManagementOverridesTransitiveDependencyVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(map.size() == 3,\"Set size should be 3, is \" + map.size())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "File localRepo = getLocalRepositoryPath()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "System.out.println(a.getScope())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "System.out.println(\"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Optional=\" + (artifact.isOptional()? \"true\": \"false\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertTrue(\"No Artifacts\",set.size() > 0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertNotNull(\"No artifacts\",map)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->23 [style = dashed, label="0"];
11->16 [style = bold, label=""];
31->37 [style = bold, label=""];
7->11 [style = bold, label=""];
6->20 [style = solid, label="a"];
35->3 [style = bold, label=""];
6->22 [style = bold, label=""];
2->6 [style = bold, label=""];
15->25 [style = bold, label=""];
15->25 [style = solid, label="map"];
37->30 [style = bold, label=""];
15->18 [style = solid, label="map"];
17->10 [style = solid, label="pom0"];
16->29 [style = bold, label=""];
27->3 [style = bold, label=""];
18->19 [style = bold, label=""];
22->7 [style = solid, label="b"];
1->20 [style = bold, label=""];
19->2 [style = bold, label=""];
32->34 [style = bold, label=""];
8->28 [style = dashed, label="0"];
5->13 [style = solid, label="project1"];
36->33 [style = bold, label=""];
6->37 [style = dashed, label="0"];
15->18 [style = bold, label=""];
4->12 [style = solid, label="pom0Basedir"];
29->28 [style = bold, label=""];
8->0 [style = bold, label=""];
18->25 [style = dashed, label="0"];
5->21 [style = bold, label=""];
12->10 [style = bold, label=""];
4->21 [style = solid, label="pom0Basedir"];
10->5 [style = bold, label=""];
19->26 [style = dashed, label="0"];
30->31 [style = bold, label=""];
18->36 [style = dashed, label="0"];
23->6 [style = bold, label=""];
26->23 [style = bold, label=""];
34->36 [style = bold, label=""];
25->26 [style = bold, label=""];
21->32 [style = bold, label=""];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
3->17 [style = bold, label=""];
16->14 [style = bold, label=""];
28->24 [style = bold, label=""];
0->24 [style = dashed, label="0"];
14->8 [style = bold, label=""];
32->34 [style = solid, label="set"];
13->15 [style = bold, label=""];
22->1 [style = bold, label=""];
20->7 [style = bold, label=""];
33->37 [style = bold, label=""];
12->5 [style = solid, label="pom1"];
14->29 [style = dashed, label="0"];
19->33 [style = dashed, label="0"];
17->4 [style = bold, label=""];
3->17 [style = solid, label="localRepo"];
1->11 [style = solid, label="c"];
21->13 [style = bold, label=""];
}
