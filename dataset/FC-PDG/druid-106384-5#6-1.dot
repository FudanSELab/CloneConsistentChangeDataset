digraph {
0 [style = filled, label = "assertExpectedResults(expectedResults,query)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testFullOnTopNFloatColumnAsString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "List<Result<TopNResultValue>> expectedResults = Collections.singletonList(new Result<TopNResultValue>(DateTimes.of(\"2011-01-12T00:00:00.000Z\"),new TopNResultValue(Arrays.asList(ImmutableMap.builder().put(\"ql_alias\",\"1400\").put(QueryRunnerTestHelper.indexMetric,217725.41940800005D).put(\"rows\",279L).put(\"addRowsIndexConstant\",218005.41940800005D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",1870.061029D).put(\"minIndex\",91.270553D).build(),ImmutableMap.builder().put(\"ql_alias\",\"1600\").put(QueryRunnerTestHelper.indexMetric,210865.67977600006D).put(\"rows\",279L).put(\"addRowsIndexConstant\",211145.67977600006D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",1862.737933D).put(\"minIndex\",99.284525D).build(),ImmutableMap.builder().put(\"ql_alias\",\"1000\").put(QueryRunnerTestHelper.indexMetric,12270.807093D).put(\"rows\",93L).put(\"addRowsIndexConstant\",12364.807093D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",277.273533D).put(\"minIndex\",71.315931D).build(),ImmutableMap.builder().put(\"ql_alias\",\"1200\").put(QueryRunnerTestHelper.indexMetric,12086.472791D).put(\"rows\",93L).put(\"addRowsIndexConstant\",12180.472791D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",193.787574D).put(\"minIndex\",84.710523D).build()))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testFullOnTopNFloatColumnAsString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Result<TopNResultValue>> expectedResults = Collections.singletonList(new Result<>(DateTimes.of(\"2011-01-12T00:00:00.000Z\"),new TopNResultValue(Arrays.asList(ImmutableMap.builder().put(\"qf_alias\",\"14000.0\").put(QueryRunnerTestHelper.indexMetric,217725.41940800005D).put(\"rows\",279L).put(\"addRowsIndexConstant\",218005.41940800005D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",1870.061029D).put(\"minIndex\",91.270553D).build(),ImmutableMap.builder().put(\"qf_alias\",\"16000.0\").put(QueryRunnerTestHelper.indexMetric,210865.67977600006D).put(\"rows\",279L).put(\"addRowsIndexConstant\",211145.67977600006D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",1862.737933D).put(\"minIndex\",99.284525D).build(),ImmutableMap.builder().put(\"qf_alias\",\"10000.0\").put(QueryRunnerTestHelper.indexMetric,12270.807093D).put(\"rows\",93L).put(\"addRowsIndexConstant\",12364.807093D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",277.273533D).put(\"minIndex\",71.315931D).build(),ImmutableMap.builder().put(\"qf_alias\",\"12000.0\").put(QueryRunnerTestHelper.indexMetric,12086.472791D).put(\"rows\",93L).put(\"addRowsIndexConstant\",12180.472791D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",193.787574D).put(\"minIndex\",84.710523D).build()))))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TopNQuery query = new TopNQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).dimension(new DefaultDimensionSpec(\"qualityLong\",\"ql_alias\")).metric(\"maxIndex\").threshold(4).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).aggregators(Lists.newArrayList(Iterables.concat(commonAggregators,Lists.newArrayList(new DoubleMaxAggregatorFactory(\"maxIndex\",\"index\"),new DoubleMinAggregatorFactory(\"minIndex\",\"index\"))))).postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant)).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TopNQuery query = new TopNQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).dimension(new DefaultDimensionSpec(\"qualityFloat\",\"qf_alias\")).metric(\"maxIndex\").threshold(4).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).aggregators(Lists.newArrayList(Iterables.concat(commonAggregators,Lists.newArrayList(new DoubleMaxAggregatorFactory(\"maxIndex\",\"index\"),new DoubleMinAggregatorFactory(\"minIndex\",\"index\"))))).postAggregators(Collections.singletonList(QueryRunnerTestHelper.addRowsIndexConstant)).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testFullOnTopNLongColumnAsString['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TopNQuery query = new TopNQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).dimension(new DefaultDimensionSpec(\"qualityFloat\",\"qf_alias\")).metric(\"maxIndex\").threshold(4).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).aggregators(Lists.newArrayList(Iterables.concat(commonAggregators,Lists.newArrayList(new DoubleMaxAggregatorFactory(\"maxIndex\",\"index\"),new DoubleMinAggregatorFactory(\"minIndex\",\"index\"))))).postAggregators(QueryRunnerTestHelper.addRowsIndexConstant).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "List<Result<TopNResultValue>> expectedResults = Collections.singletonList(new Result<TopNResultValue>(DateTimes.of(\"2011-01-12T00:00:00.000Z\"),new TopNResultValue(Arrays.asList(ImmutableMap.builder().put(\"qf_alias\",\"14000.0\").put(QueryRunnerTestHelper.indexMetric,217725.41940800005D).put(\"rows\",279L).put(\"addRowsIndexConstant\",218005.41940800005D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",1870.061029D).put(\"minIndex\",91.270553D).build(),ImmutableMap.builder().put(\"qf_alias\",\"16000.0\").put(QueryRunnerTestHelper.indexMetric,210865.67977600006D).put(\"rows\",279L).put(\"addRowsIndexConstant\",211145.67977600006D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",1862.737933D).put(\"minIndex\",99.284525D).build(),ImmutableMap.builder().put(\"qf_alias\",\"10000.0\").put(QueryRunnerTestHelper.indexMetric,12270.807093D).put(\"rows\",93L).put(\"addRowsIndexConstant\",12364.807093D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",277.273533D).put(\"minIndex\",71.315931D).build(),ImmutableMap.builder().put(\"qf_alias\",\"12000.0\").put(QueryRunnerTestHelper.indexMetric,12086.472791D).put(\"rows\",93L).put(\"addRowsIndexConstant\",12180.472791D).put(\"uniques\",QueryRunnerTestHelper.UNIQUES_1).put(\"maxIndex\",193.787574D).put(\"minIndex\",84.710523D).build()))))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8->7 [style = bold, label=""];
3->8 [style = dashed, label="0"];
6->4 [style = bold, label=""];
4->0 [style = solid, label="query"];
7->0 [style = bold, label=""];
1->0 [style = bold, label=""];
1->0 [style = solid, label="expectedResults"];
1->5 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
5->0 [style = bold, label=""];
3->1 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = dashed, label="0"];
4->5 [style = bold, label=""];
3->0 [style = solid, label="query"];
8->0 [style = solid, label="query"];
2->3 [style = bold, label=""];
5->0 [style = solid, label="expectedResults"];
7->0 [style = solid, label="expectedResults"];
}
