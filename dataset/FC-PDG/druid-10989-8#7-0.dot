digraph {
20 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "lookupMap.put(\"testMockForCloseIsCalledAfterStopping\",container)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "lookupReferencesManager.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(lookupReferencesManager.mainThread.isAlive())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "lookupReferencesManager.get(\"test\").isPresent()@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"test\",\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.close()).andReturn(true).once()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createStrictMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "EasyMock.replay(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testRealModeWithMainThread['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "EasyMock.verify(lookupExtractorFactory)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(100)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "lookupReferencesManager.stop()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "!testContainer.equals(lookupReferencesManager.get(\"test\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "LookupReferencesManager lookupReferencesManager = new LookupReferencesManager(new LookupConfig(temporaryFolder.newFolder().getAbsolutePath()),mapper,druidLeaderClient,config)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testRealModeWithMainThread['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "testCloseIsCalledAfterStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "lookupReferencesManager.get(\"test\") != null@@@27@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Thread.sleep(100)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "lookupReferencesManager.add(\"testMock\",new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "lookupMap.put(\"testMockForRealModeWithMainThread\",container)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "lookupReferencesManager.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "!Optional.of(testContainer).equals(lookupReferencesManager.get(\"test\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->7 [style = solid, label="lookupExtractorFactory"];
34->43 [style = solid, label="lookupExtractorFactory"];
3->28 [style = dashed, label="0"];
31->22 [style = bold, label=""];
0->37 [style = bold, label=""];
4->25 [style = bold, label=""];
27->14 [style = bold, label=""];
4->20 [style = solid, label="request"];
23->13 [style = solid, label="responseHolder"];
15->5 [style = solid, label="lookupExtractorFactory"];
35->41 [style = bold, label=""];
24->23 [style = solid, label="strResult"];
12->18 [style = solid, label="responseHolder"];
19->29 [style = bold, label=""];
29->27 [style = dotted, label="true"];
29->31 [style = bold, label=""];
0->2 [style = bold, label=""];
42->39 [style = bold, label=""];
18->15 [style = bold, label=""];
14->22 [style = bold, label=""];
39->43 [style = bold, label=""];
28->9 [style = bold, label=""];
6->24 [style = bold, label=""];
22->28 [style = bold, label=""];
34->42 [style = bold, label=""];
40->34 [style = bold, label=""];
3->9 [style = dotted, label="true"];
3->16 [style = bold, label=""];
33->5 [style = bold, label=""];
32->16 [style = bold, label=""];
14->27 [style = dotted, label="true"];
25->17 [style = bold, label=""];
10->6 [style = bold, label=""];
20->26 [style = solid, label="request"];
34->38 [style = solid, label="lookupExtractorFactory"];
28->32 [style = bold, label=""];
43->4 [style = bold, label=""];
9->28 [style = bold, label=""];
22->3 [style = bold, label=""];
5->19 [style = bold, label=""];
21->5 [style = bold, label=""];
3->9 [style = bold, label=""];
7->33 [style = bold, label=""];
26->12 [style = bold, label=""];
29->27 [style = bold, label=""];
24->4 [style = bold, label=""];
30->11 [style = bold, label=""];
17->12 [style = solid, label="strResult"];
19->14 [style = bold, label=""];
20->23 [style = bold, label=""];
10->24 [style = solid, label="lookupMap"];
16->1 [style = bold, label=""];
23->13 [style = bold, label=""];
11->10 [style = bold, label=""];
13->26 [style = bold, label=""];
21->33 [style = dashed, label="0"];
6->36 [style = dashed, label="0"];
15->0 [style = bold, label=""];
4->17 [style = solid, label="lookupMap"];
5->19 [style = solid, label="testContainer"];
12->18 [style = bold, label=""];
28->9 [style = dotted, label="true"];
18->37 [style = dashed, label="0"];
7->21 [style = bold, label=""];
9->3 [style = bold, label=""];
41->38 [style = bold, label=""];
4->36 [style = bold, label=""];
14->27 [style = bold, label=""];
36->17 [style = bold, label=""];
2->7 [style = bold, label=""];
27->29 [style = bold, label=""];
37->35 [style = bold, label=""];
14->29 [style = dashed, label="0"];
8->11 [style = bold, label=""];
34->37 [style = solid, label="lookupExtractorFactory"];
17->20 [style = bold, label=""];
}
