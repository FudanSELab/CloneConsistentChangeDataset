digraph {
8 [style = filled, label = "assertThat(sensor,is(dummySensor))@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String operation = \"commit\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final String totalDescription = \"The total number of commit calls\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final String totalDescription = \"The total number of poll calls\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "shouldGetCommitSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String rateDescription = \"The average per-second number of poll calls\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String rateDescription = \"The average per-second number of commit calls\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "replay()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Sensor sensor = ThreadMetrics.pollSensor(streamsMetrics)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String operationLatency = operation + StreamsMetricsImpl.LATENCY_SUFFIX@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCount(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operation,totalDescription,rateDescription)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap()).andReturn(dummyTagMap)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "replayAll()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operationLatency)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(operation,RecordingLevel.INFO)).andReturn(dummySensor)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamsMetricsImpl.addAvgAndMax(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operationLatency)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldGetPollSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final Sensor sensor = ThreadMetrics.commitSensor(streamsMetrics)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldGetPollSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operation,totalDescription,rateDescription)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "verifyAll()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String operation = \"poll\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mockStatic()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->12 [style = solid, label="operationLatency"];
21->13 [style = solid, label="rateDescription"];
11->20 [style = dashed, label="0"];
5->20 [style = bold, label=""];
6->5 [style = solid, label="operation"];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
2->6 [style = bold, label=""];
22->19 [style = bold, label=""];
23->8 [style = solid, label="sensor"];
11->13 [style = solid, label="totalDescription"];
1->15 [style = bold, label=""];
19->5 [style = solid, label="operation"];
23->15 [style = bold, label=""];
12->17 [style = dashed, label="0"];
14->13 [style = solid, label="rateDescription"];
14->16 [style = solid, label="rateDescription"];
16->17 [style = bold, label=""];
6->13 [style = solid, label="operation"];
15->3 [style = bold, label=""];
9->16 [style = bold, label=""];
5->17 [style = solid, label="operationLatency"];
4->0 [style = bold, label=""];
14->7 [style = bold, label=""];
1->8 [style = solid, label="sensor"];
20->21 [style = bold, label=""];
19->5 [style = bold, label=""];
6->5 [style = bold, label=""];
13->12 [style = bold, label=""];
19->13 [style = solid, label="operation"];
0->23 [style = bold, label=""];
12->4 [style = bold, label=""];
18->6 [style = bold, label=""];
20->13 [style = solid, label="totalDescription"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
6->19 [style = dashed, label="0"];
11->16 [style = solid, label="totalDescription"];
6->16 [style = solid, label="operation"];
13->16 [style = dashed, label="0"];
21->7 [style = bold, label=""];
14->21 [style = dashed, label="0"];
5->11 [style = bold, label=""];
10->9 [style = bold, label=""];
1->23 [style = dashed, label="0"];
17->4 [style = bold, label=""];
9->13 [style = bold, label=""];
}
