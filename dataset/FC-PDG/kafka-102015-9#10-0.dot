digraph {
1 [style = filled, label = "testCloseStateManagerClean['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectLastCall()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectLastCall()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expect(stateManager.taskId()).andReturn(taskId)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Utils.delete(unknownFile)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "mockStatic()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCloseStateManagerClean['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ctrl.checkOrder(true)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "replayAll()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final ProcessorStateException thrown = assertThrows(,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectLastCall().andThrow(new IOException(\"Deletion failed\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expect(stateManager.baseDir()).andReturn(unknownFile)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "stateDirectory.unlock(taskId)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final File unknownFile = new File(\"/unknown/path\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expect(stateDirectory.lock(taskId)).andReturn(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ctrl.verify()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(,thrown.getCause().getClass())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ctrl.replay()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloseStateManagerWithStateStoreWipeOutRethrowWrappedIOException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expect(stateDirectory.lock(taskId)).andReturn(true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stateManager.close()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expect(stateManager.taskId()).andReturn(taskId)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
13->7 [style = bold, label=""];
5->8 [style = bold, label=""];
21->15 [style = bold, label=""];
9->4 [style = bold, label=""];
7->9 [style = bold, label=""];
17->19 [style = bold, label=""];
6->0 [style = bold, label=""];
14->13 [style = bold, label=""];
0->3 [style = bold, label=""];
15->6 [style = bold, label=""];
4->2 [style = bold, label=""];
14->21 [style = solid, label="unknownFile"];
16->21 [style = bold, label=""];
14->16 [style = solid, label="unknownFile"];
2->6 [style = bold, label=""];
20->17 [style = bold, label=""];
8->7 [style = bold, label=""];
2->16 [style = bold, label=""];
18->14 [style = bold, label=""];
19->12 [style = bold, label=""];
11->5 [style = bold, label=""];
1->5 [style = bold, label=""];
10->20 [style = bold, label=""];
}
