digraph {
17 [style = filled, label = "TestMessageSetExtension2 message2 = TestMessageSetExtension2.parseFrom(raw.getItem(1).getMessage())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "boolean eagerParsing@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"foo\",message2.getStr())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RawMessageSet raw = RawMessageSet.parseFrom(data)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TestMessageSet messageSet = TestMessageSet.newBuilder().setExtension(TestMessageSetExtension1.messageSetExtension,TestMessageSetExtension1.newBuilder().setI(123).build()).setExtension(TestMessageSetExtension2.messageSetExtension,TestMessageSetExtension2.newBuilder().setStr(\"foo\").build()).setUnknownFields(UnknownFieldSet.newBuilder().addField(UNKNOWN_TYPE_ID,UnknownFieldSet.Field.newBuilder().addLengthDelimited(ByteString.copyFromUtf8(\"bar\")).build()).build()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(UNKNOWN_TYPE_ID,raw.getItem(2).getTypeId())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testSerializeMessageSetWithFlag['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(TYPE_ID_1,raw.getItem(0).getTypeId())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ExtensionRegistryLite.setEagerlyParseMessageSets(eagerParsing)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(TYPE_ID_2,raw.getItem(1).getTypeId())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(messageSetText,messageSet.toString())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "TestMessageSet messageSet = TestMessageSet.newBuilder().setExtension(TestMessageSetExtension1.messageSetExtension,TestMessageSetExtension1.newBuilder().setI(123).build()).setExtension(TestMessageSetExtension2.messageSetExtension,TestMessageSetExtension2.newBuilder().setStr(\"foo\").build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestMessageSetExtension1 message1 = TestMessageSetExtension1.parseFrom(raw.getItem(0).getMessage())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(raw.getUnknownFields().asMap().isEmpty())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ByteString data = messageSet.toByteString()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testPrintMessageSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(messageSet.toString()).isEqualTo(MESSAGE_SET_TEXT)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(3,raw.getItemCount())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(\"bar\",raw.getItem(2).getMessage().toStringUtf8())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testPrintMessageSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(123,message1.getI())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
16->13 [style = bold, label=""];
1->3 [style = dashed, label="0"];
10->15 [style = bold, label=""];
19->10 [style = bold, label=""];
9->17 [style = bold, label=""];
11->12 [style = bold, label=""];
15->5 [style = bold, label=""];
4->0 [style = bold, label=""];
5->16 [style = bold, label=""];
17->7 [style = bold, label=""];
14->20 [style = dotted, label="true"];
1->12 [style = dashed, label="0"];
20->11 [style = solid, label="eagerParsing"];
2->0 [style = bold, label=""];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
8->9 [style = bold, label=""];
7->18 [style = bold, label=""];
19->10 [style = solid, label="data"];
13->6 [style = bold, label=""];
12->19 [style = bold, label=""];
14->11 [style = bold, label=""];
}
