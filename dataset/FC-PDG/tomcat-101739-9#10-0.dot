digraph {
17 [style = filled, label = "testBug55438NonBlockingReadWriteEmptyRead['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "NBReadServlet servlet = new NBReadServlet(ignoreIsReady,async)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ctx.addServletMappingDecoded(\"/\",servletName)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Tomcat tomcat = getTomcatInstance()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String servletName = .getName()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int rc = postUrl(true,new DataWriter(async? 0: 500,async? 1000000: 5),\"http://localhost:\" + getPort() + \"/\",new ByteChunk(),resHeaders,null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "doTestNonBlockingRead['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "NBReadWriteServlet servlet = new NBReadWriteServlet()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int rc = postUrl(true,new DataWriter(500),\"http://localhost:\" + getPort() + \"/\",new ByteChunk(),resHeaders,null)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Tomcat.addServlet(ctx,servletName,servlet)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "boolean ignoreIsReady@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(HttpServletResponse.SC_OK,rc)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int rc = postUrl(false,new BytesStreamer(){@Override public byte(( next(){return new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@5220db}@Override public int getLength(){return 0}@Override public int available(){return 0}},\"http://localhost:\" + getPort() + \"/\",new ByteChunk(),resHeaders,null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Context ctx = tomcat.addContext(\"\",null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "boolean async@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(HttpServletResponse.SC_OK,rc)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "NBReadServlet servlet = new NBReadServlet(ignoreIsReady)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "tomcat.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean ignoreIsReady@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "String servletName = .getName()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,List<String>> resHeaders = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "doTestNonBlockingRead['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
11->16 [style = bold, label=""];
5->3 [style = solid, label="servletName"];
10->15 [style = dashed, label="0"];
16->6 [style = solid, label="rc"];
18->3 [style = bold, label=""];
2->20 [style = bold, label=""];
9->16 [style = dashed, label="0"];
7->1 [style = bold, label=""];
7->10 [style = dotted, label="true"];
17->1 [style = bold, label=""];
21->19 [style = solid, label="rc"];
21->19 [style = bold, label=""];
2->3 [style = solid, label="ctx"];
11->21 [style = solid, label="resHeaders"];
16->6 [style = bold, label=""];
11->21 [style = bold, label=""];
15->14 [style = solid, label="ignoreIsReady"];
12->15 [style = dotted, label="true"];
0->11 [style = bold, label=""];
18->8 [style = solid, label="servletName"];
13->16 [style = solid, label="async"];
11->9 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
5->18 [style = dashed, label="0"];
10->4 [style = solid, label="ignoreIsReady"];
13->14 [style = solid, label="async"];
9->6 [style = solid, label="rc"];
9->6 [style = bold, label=""];
11->9 [style = solid, label="resHeaders"];
8->0 [style = bold, label=""];
20->18 [style = bold, label=""];
11->16 [style = solid, label="resHeaders"];
12->13 [style = dotted, label="true"];
4->20 [style = dashed, label="0"];
14->3 [style = solid, label="servlet"];
3->8 [style = bold, label=""];
2->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
1->2 [style = bold, label=""];
20->3 [style = solid, label="servlet"];
18->3 [style = solid, label="servletName"];
4->5 [style = bold, label=""];
5->8 [style = solid, label="servletName"];
14->5 [style = bold, label=""];
4->3 [style = solid, label="servlet"];
}
