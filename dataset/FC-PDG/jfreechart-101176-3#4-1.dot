digraph {
8 [style = filled, label = "testRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.1,1.1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(new Year(2011),s1.getPeriod(0))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"s1\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(3,s1.getItemCount())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "s1.add(new Year(2008),3.0,3.3,3.3,3.3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s1.remove(new Year(2010))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new Year(2011),s1.getPeriod(1))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "s1.remove(new Year(2006))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Integer.MAX_VALUE,s1.getMaximumItemCount())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "s1.add(new Year(2011),2.1,4.1,1.1,3.1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(new Year(2007),s1.getPeriod(0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "s1.add(new Year(2007),2.0,2.2,2.2,2.2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "s1.add(new Year(2010),2.2,4.2,1.2,3.2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "OHLCSeries<String> s1 = new OHLCSeries<>(\"s1\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "s1.add(new Year(2006),2.0,4.0,1.0,3.0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(2,s1.getMaximumItemCount())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(new Year(2008),s1.getPeriod(1))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "s1.setMaximumItemCount(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSetMaximumItemCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->4 [style = bold, label=""];
19->18 [style = bold, label=""];
3->1 [style = bold, label=""];
4->6 [style = bold, label=""];
0->19 [style = dashed, label="0"];
3->14 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
18->17 [style = bold, label=""];
2->9 [style = bold, label=""];
15->3 [style = bold, label=""];
13->16 [style = bold, label=""];
5->20 [style = dashed, label="0"];
12->13 [style = bold, label=""];
7->5 [style = bold, label=""];
5->0 [style = bold, label=""];
11->10 [style = bold, label=""];
9->17 [style = dashed, label="0"];
14->12 [style = bold, label=""];
2->18 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
10->1 [style = bold, label=""];
16->20 [style = bold, label=""];
}
