digraph {
0 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Set<Object> publicCredentials = subject.getPublicCredentials()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertSame(extensions(1(,publicCredentials.iterator().next())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(2,publicCredentials.size())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1(,tokens(2()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "login1Commit1Login2Abort2Login3Commit3Logout3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "loginAbortLoginCommitLogout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "verifyZeroInteractions((Object(()extensions)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "verifyZeroInteractions((Object(()tokens)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "OAuthBearerLoginModule loginModule3 = new OAuthBearerLoginModule()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(2,privateCredentials.size())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "OAuthBearerToken(( tokens = new OAuthBearerToken((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b495ec@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "loginModule3.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "OAuthBearerLoginModule loginModule2 = new OAuthBearerLoginModule()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "loginModule.commit()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "loginModule2.commit()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Iterator<Object> publicIterator = publicCredentials.iterator()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertSame(tokens(2(,privateCredentials.iterator().next())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "loginModule2.login()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "OAuthBearerLoginModule loginModule = new OAuthBearerLoginModule()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "loginModule.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertSame(extensions(2(,publicCredentials.iterator().next())@@@59@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "OAuthBearerLoginModule loginModule1 = new OAuthBearerLoginModule()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "loginModule2.login()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertSame(tokens(1(,privateCredentials.iterator().next())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "loginModule.login()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "loginModule1.logout()@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Iterator<Object> iterator = privateCredentials.iterator()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "loginModule1.login()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SaslExtensions(( extensions = new SaslExtensions((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b495ff@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Set<Object> privateCredentials = subject.getPrivateCredentials()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1(,extensions(2()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "loginModule1.commit()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "loginAbortLoginCommitLogout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "TestCallbackHandler testTokenCallbackHandler = new TestCallbackHandler(tokens,extensions)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Subject subject = new Subject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "loginModule2.abort()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51->67 [style = bold, label=""];
17->64 [style = solid, label="extensions"];
32->22 [style = bold, label=""];
21->33 [style = solid, label="tokens"];
61->43 [style = bold, label=""];
1->55 [style = bold, label=""];
0->13 [style = bold, label=""];
17->23 [style = solid, label="extensions"];
8->33 [style = dashed, label="0"];
58->12 [style = bold, label=""];
14->7 [style = bold, label=""];
19->5 [style = bold, label=""];
1->69 [style = solid, label="testTokenCallbackHandler"];
37->60 [style = bold, label=""];
39->51 [style = bold, label=""];
53->65 [style = bold, label=""];
22->58 [style = solid, label="subject"];
45->22 [style = bold, label=""];
57->74 [style = bold, label=""];
54->37 [style = bold, label=""];
63->38 [style = bold, label=""];
17->51 [style = solid, label="extensions"];
8->11 [style = bold, label=""];
64->1 [style = bold, label=""];
2->16 [style = bold, label=""];
22->4 [style = solid, label="subject"];
21->57 [style = solid, label="tokens"];
27->0 [style = bold, label=""];
16->29 [style = bold, label=""];
17->48 [style = solid, label="extensions"];
10->72 [style = dashed, label="0"];
1->4 [style = solid, label="testTokenCallbackHandler"];
10->48 [style = bold, label=""];
4->18 [style = bold, label=""];
17->31 [style = solid, label="extensions"];
46->39 [style = bold, label=""];
35->57 [style = bold, label=""];
6->71 [style = dashed, label="0"];
29->20 [style = bold, label=""];
36->46 [style = bold, label=""];
43->66 [style = bold, label=""];
20->23 [style = bold, label=""];
17->66 [style = solid, label="extensions"];
34->62 [style = bold, label=""];
17->34 [style = solid, label="extensions"];
25->26 [style = bold, label=""];
66->71 [style = bold, label=""];
18->25 [style = bold, label=""];
21->43 [style = solid, label="tokens"];
1->37 [style = solid, label="testTokenCallbackHandler"];
70->40 [style = bold, label=""];
22->14 [style = bold, label=""];
56->68 [style = bold, label=""];
21->65 [style = solid, label="tokens"];
17->8 [style = bold, label=""];
9->55 [style = dashed, label="0"];
59->27 [style = bold, label=""];
22->37 [style = solid, label="subject"];
68->36 [style = bold, label=""];
21->36 [style = solid, label="tokens"];
21->68 [style = solid, label="tokens"];
17->1 [style = bold, label=""];
47->42 [style = bold, label=""];
40->56 [style = bold, label=""];
55->69 [style = bold, label=""];
11->64 [style = dashed, label="0"];
26->3 [style = bold, label=""];
65->41 [style = bold, label=""];
17->44 [style = solid, label="extensions"];
4->69 [style = dashed, label="0"];
23->66 [style = dashed, label="0"];
3->12 [style = bold, label=""];
62->35 [style = bold, label=""];
19->59 [style = bold, label=""];
1->9 [style = bold, label=""];
71->72 [style = bold, label=""];
52->70 [style = bold, label=""];
60->58 [style = bold, label=""];
56->39 [style = solid, label="iterator"];
21->20 [style = solid, label="tokens"];
30->31 [style = bold, label=""];
73->34 [style = bold, label=""];
23->6 [style = bold, label=""];
6->10 [style = bold, label=""];
21->30 [style = solid, label="tokens"];
0->63 [style = bold, label=""];
22->69 [style = solid, label="subject"];
20->43 [style = dashed, label="0"];
21->10 [style = solid, label="tokens"];
26->59 [style = dashed, label="0"];
17->1 [style = solid, label="extensions"];
42->50 [style = bold, label=""];
10->15 [style = bold, label=""];
11->1 [style = bold, label=""];
74->52 [style = bold, label=""];
9->4 [style = bold, label=""];
21->1 [style = solid, label="tokens"];
69->54 [style = bold, label=""];
19->63 [style = dashed, label="0"];
17->33 [style = bold, label=""];
15->30 [style = bold, label=""];
72->6 [style = bold, label=""];
17->52 [style = solid, label="extensions"];
38->61 [style = bold, label=""];
24->22 [style = bold, label=""];
17->67 [style = solid, label="extensions"];
1->58 [style = solid, label="testTokenCallbackHandler"];
49->53 [style = bold, label=""];
28->2 [style = bold, label=""];
67->49 [style = bold, label=""];
21->50 [style = solid, label="tokens"];
48->47 [style = bold, label=""];
50->73 [style = bold, label=""];
15->6 [style = dashed, label="0"];
7->21 [style = bold, label=""];
5->27 [style = bold, label=""];
21->8 [style = solid, label="tokens"];
12->19 [style = bold, label=""];
33->64 [style = bold, label=""];
41->44 [style = bold, label=""];
21->17 [style = bold, label=""];
17->11 [style = solid, label="extensions"];
13->28 [style = bold, label=""];
}
