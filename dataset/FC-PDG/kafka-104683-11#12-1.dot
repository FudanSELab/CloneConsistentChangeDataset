digraph {
9 [style = filled, label = "verify(workerTask)@@@39@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectLastCall()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "thread.join()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EasyMock.expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "workerTask.releaseResources()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "workerTask.run()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "cancelBeforeStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){thread.start()return null}})@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Thread thread = new Thread(){@Override public void run(){try {stopped.await()}catch (Exception e) }}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "workerTask.stop()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator,Time.SYSTEM,statusBackingStore).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "workerTask.cancel()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expectLastCall()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "workerTask.close()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "replay(workerTask)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "workerTask.stop()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final CountDownLatch stopped = new CountDownLatch(1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "stopBeforeStarting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "stopped.countDown()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stopBeforeStarting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "workerTask.execute()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "statusListener.onStartup(taskId)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "EasyMock.expectLastCall()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "workerTask.awaitStop(1000L)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
5->10 [style = bold, label=""];
1->4 [style = bold, label=""];
15->13 [style = bold, label=""];
7->11 [style = bold, label=""];
20->17 [style = bold, label=""];
23->27 [style = bold, label=""];
11->14 [style = bold, label=""];
26->5 [style = bold, label=""];
10->19 [style = dashed, label="0"];
6->23 [style = bold, label=""];
2->3 [style = bold, label=""];
11->6 [style = bold, label=""];
17->9 [style = bold, label=""];
2->18 [style = bold, label=""];
28->13 [style = bold, label=""];
8->6 [style = bold, label=""];
21->24 [style = bold, label=""];
0->21 [style = bold, label=""];
16->7 [style = solid, label="workerTask"];
13->16 [style = bold, label=""];
16->9 [style = solid, label="workerTask"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
22->3 [style = bold, label=""];
5->19 [style = bold, label=""];
12->13 [style = bold, label=""];
19->1 [style = bold, label=""];
13->25 [style = solid, label="taskId"];
18->22 [style = bold, label=""];
2->7 [style = solid, label="workerTask"];
24->25 [style = bold, label=""];
2->16 [style = dashed, label="0"];
2->9 [style = solid, label="workerTask"];
25->26 [style = bold, label=""];
14->8 [style = bold, label=""];
6->9 [style = bold, label=""];
10->1 [style = bold, label=""];
27->20 [style = bold, label=""];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
