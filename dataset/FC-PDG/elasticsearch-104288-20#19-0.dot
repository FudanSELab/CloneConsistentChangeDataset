digraph {
7 [style = filled, label = "XContentParser parser = createParser(xContentBuilder)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Coordinate> shellCoordinates = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "holeCoordinates.add(new Coordinate(100.8,0.8))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ElasticsearchParseException e = expectThrows(,null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testParseMixedDimensionPolyWithHole['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "shellCoordinates.add(new Coordinate(100,1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "parser.nextToken()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Coordinate> holeCoordinates = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ElasticsearchException e = expectThrows(,null)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final Version version = VersionUtils.randomPreviousCompatibleVersion(random(),Version.V_8_0_0)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(e,hasToString(containsString(\"unable to add coordinate to CoordinateBuilder: coordinate dimensions do not match\")))@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertThat(e,hasToString(containsString(\"but (ignore_z_value( parameter is (false(\")))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.2,15.0))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PolygonBuilder builder = new PolygonBuilder(new CoordinatesBuilder().coordinates(shellCoordinates))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shellCoordinates.add(new Coordinate(101,1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.hole(new LineStringBuilder(holeCoordinates))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testParseMixedDimensionPolyWithHoleStoredZ['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final LegacyGeoShapeFieldMapper mapperBuilder = new LegacyGeoShapeFieldMapper.Builder(\"test\",version,false,true).build(new ContentPath())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "shellCoordinates.add(new Coordinate(101,0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final LegacyGeoShapeFieldMapper mapperBuilder = new LegacyGeoShapeFieldMapper.Builder(\"test\",Version.CURRENT,false,true).build(new ContentPath())@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "XContentBuilder xContentBuilder = XContentFactory.jsonBuilder().value(builder.toWKT())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.2))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ElasticsearchException e = expectThrows(,null)@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final GeoShapeFieldMapper mapperBuilder = new GeoShapeFieldMapper.Builder(\"test\",false,true).ignoreZValue(false).build(new ContentPath())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testParseMixedDimensionPolyWithHoleStoredZ['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.8,10.0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "holeCoordinates.add(new Coordinate(100.8,0.2))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->21 [style = bold, label=""];
12->0 [style = bold, label=""];
13->7 [style = bold, label=""];
23->19 [style = bold, label=""];
19->5 [style = bold, label=""];
13->7 [style = solid, label="xContentBuilder"];
16->18 [style = bold, label=""];
17->26 [style = dashed, label="0"];
9->16 [style = bold, label=""];
15->25 [style = dashed, label="0"];
21->17 [style = bold, label=""];
28->19 [style = bold, label=""];
14->24 [style = bold, label=""];
5->9 [style = bold, label=""];
8->17 [style = bold, label=""];
3->13 [style = bold, label=""];
17->22 [style = solid, label="e"];
8->27 [style = dashed, label="0"];
4->1 [style = bold, label=""];
7->14 [style = bold, label=""];
0->10 [style = bold, label=""];
27->26 [style = solid, label="e"];
19->6 [style = solid, label="shellCoordinates"];
10->4 [style = bold, label=""];
11->19 [style = bold, label=""];
6->3 [style = bold, label=""];
27->26 [style = bold, label=""];
8->17 [style = solid, label="e"];
14->25 [style = bold, label=""];
2->6 [style = bold, label=""];
17->22 [style = bold, label=""];
20->2 [style = bold, label=""];
18->12 [style = bold, label=""];
1->20 [style = bold, label=""];
25->27 [style = bold, label=""];
14->15 [style = bold, label=""];
15->8 [style = bold, label=""];
0->3 [style = solid, label="holeCoordinates"];
}
