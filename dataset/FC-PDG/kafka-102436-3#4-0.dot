digraph {
38 [style = filled, label = "assertEquals(2,peekedContextTime.size())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "internalStreamsBuilder.stream(Collections.singleton(topic1),consumed).transform(punctuateProcessor).process(peekProcessor)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final StreamThread thread = createStreamThread(CLIENT_ID,config,false)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "clientSupplier.consumer.assign(assignedPartitions)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "internalStreamsBuilder.buildAndOptimizeTopology()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> activeTasks = new HashMap<>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final org.apache.kafka.streams.kstream.TransformerSupplier<Object,Object,KeyValue<Object,Object>> punctuateProcessor = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final List<Long> punctuatedWallClockTime = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2,punctuatedWallClockTime.size())@@@42@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "mockTime.sleep(100L)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "internalStreamsBuilder.stream(Collections.singleton(topic1),consumed).process(punctuateProcessor)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "activeTasks.put(task1,Collections.singleton(t1p1))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "thread.rebalanceListener().onPartitionsAssigned(assignedPartitions)@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final List<TopicPartition> assignedPartitions = new ArrayList<>()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> activeTasks = new HashMap<>()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "clientSupplier.consumer.addRecord(new ConsumerRecord<>(topic1,1,100L,100L,TimestampType.CREATE_TIME,ConsumerRecord.NULL_CHECKSUM,\"K\".getBytes().length,\"V\".getBytes().length,\"K\".getBytes(),\"V\".getBytes()))@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(0,peekedContextTime.size())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(2,punctuatedWallClockTime.size())@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "shouldPunctuateActiveTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "thread.rebalanceListener().onPartitionsRevoked(Collections.emptySet())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,punctuatedStreamTime.size())@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<Long> peekedContextTime = new ArrayList<>()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final List<TopicPartition> assignedPartitions = new ArrayList<>()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "mockTime.sleep(100L)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "shouldPunctuateActiveTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(1,punctuatedStreamTime.size())@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "thread.rebalanceListener().onPartitionsRevoked(Collections.emptySet())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final long currTime = mockTime.milliseconds()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "thread.runOnce()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "clientSupplier.consumer.addRecord(new ConsumerRecord<>(topic1,1,0L,100L,TimestampType.CREATE_TIME,ConsumerRecord.NULL_CHECKSUM,\"K\".getBytes().length,\"V\".getBytes().length,\"K\".getBytes(),\"V\".getBytes()))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "clientSupplier.consumer.assign(assignedPartitions)@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "thread.setState(StreamThread.State.STARTING)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final List<Long> punctuatedStreamTime = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(1,peekedContextTime.size())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(currTime + 100L,peekedContextTime.get(0).longValue())@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "shouldPunctuateWithTimestampPreservedInProcessorContext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "thread.setState(StreamThread.State.STARTING)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "activeTasks.put(task1,Collections.singleton(t1p1))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assignedPartitions.add(t1p1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "mockTime.sleep(100L)@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "thread.runOnce()@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "thread.taskManager().handleAssignment(activeTasks,emptyMap())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "thread.taskManager().handleAssignment(activeTasks,emptyMap())@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assignedPartitions.add(t1p1)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "thread.runOnce()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final org.apache.kafka.streams.processor.ProcessorSupplier<Object,Object> peekProcessor = null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0L,peekedContextTime.get(1).longValue())@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "clientSupplier.consumer.updateBeginningOffsets(Collections.singletonMap(t1p1,0L))@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(1,punctuatedWallClockTime.size())@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "thread.runOnce()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final org.apache.kafka.streams.processor.ProcessorSupplier<Object,Object> punctuateProcessor = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->41 [style = dashed, label="0"];
14->5 [style = bold, label=""];
28->13 [style = solid, label="activeTasks"];
12->0 [style = bold, label=""];
28->20 [style = dashed, label="0"];
7->42 [style = bold, label=""];
45->38 [style = bold, label=""];
0->38 [style = dashed, label="0"];
3->14 [style = bold, label=""];
39->49 [style = bold, label=""];
13->25 [style = solid, label="i"];
23->19 [style = bold, label=""];
16->4 [style = bold, label=""];
20->10 [style = bold, label=""];
10->6 [style = bold, label=""];
26->16 [style = bold, label=""];
44->46 [style = bold, label=""];
27->25 [style = bold, label=""];
43->45 [style = bold, label=""];
10->39 [style = bold, label=""];
48->47 [style = bold, label=""];
0->22 [style = bold, label=""];
21->50 [style = bold, label=""];
3->14 [style = solid, label="punctuateProcessor"];
11->26 [style = bold, label=""];
50->20 [style = bold, label=""];
32->37 [style = bold, label=""];
46->12 [style = solid, label="currTime"];
33->34 [style = bold, label=""];
38->41 [style = bold, label=""];
30->11 [style = bold, label=""];
28->23 [style = bold, label=""];
19->32 [style = bold, label=""];
9->21 [style = solid, label="assignedPartitions"];
27->21 [style = dotted, label="true"];
31->12 [style = bold, label=""];
40->18 [style = bold, label=""];
13->27 [style = solid, label="i"];
8->17 [style = bold, label=""];
13->21 [style = solid, label="i"];
27->20 [style = bold, label=""];
34->20 [style = bold, label=""];
19->13 [style = bold, label=""];
26->17 [style = solid, label="assignedPartitions"];
25->21 [style = bold, label=""];
21->25 [style = bold, label=""];
37->36 [style = bold, label=""];
6->12 [style = dashed, label="0"];
18->9 [style = bold, label=""];
1->3 [style = bold, label=""];
2->18 [style = bold, label=""];
13->27 [style = bold, label=""];
16->8 [style = solid, label="activeTasks"];
25->27 [style = solid, label="i"];
10->49 [style = dashed, label="0"];
6->31 [style = bold, label=""];
47->5 [style = bold, label=""];
2->40 [style = bold, label=""];
36->33 [style = bold, label=""];
7->42 [style = solid, label="peekProcessor"];
35->29 [style = bold, label=""];
9->27 [style = solid, label="assignedPartitions"];
9->28 [style = bold, label=""];
12->43 [style = bold, label=""];
27->25 [style = dotted, label="true"];
29->1 [style = bold, label=""];
4->15 [style = bold, label=""];
25->27 [style = bold, label=""];
24->29 [style = bold, label=""];
26->18 [style = solid, label="assignedPartitions"];
15->8 [style = bold, label=""];
46->2 [style = bold, label=""];
42->44 [style = bold, label=""];
49->12 [style = bold, label=""];
25->21 [style = solid, label="i"];
5->7 [style = bold, label=""];
7->30 [style = bold, label=""];
27->21 [style = bold, label=""];
17->2 [style = bold, label=""];
}
