digraph {
2 [style = filled, label = "buffer.put(reqStr.getBytes(\"US-ASCII\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,pdus.length)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"localhost\",((HttpRequestImpl)pdus).getHeader(\"host\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(reqStr.length())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HttpDecoderState state = decoder.createDecoderState()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HttpPdu(( pdus = decoder.decode(buffer,state)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "HttpPdu pdus = decoder.decode(buffer,state)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String reqStr = \"GET / HTTP/1.0Host:localhost \"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "buffer.rewind()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String reqStr = \"GET / HTTP/1.0Host: localhost\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HttpServerDecoder decoder = new HttpServerDecoder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verifyThatTrailingSpacesAreRemovedFromHeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"localhost\",((HttpRequestImpl)pdus(0().getHeader(\"host\"))@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verifyThatLeadingSpacesAreRemovedFromHeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNotNull(pdus)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verifyThatLeadingSpacesAreRemovedFromHeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->11 [style = bold, label=""];
9->11 [style = solid, label="state"];
15->14 [style = bold, label=""];
11->8 [style = solid, label="pdus"];
8->6 [style = bold, label=""];
1->3 [style = solid, label="buffer"];
2->10 [style = bold, label=""];
10->7 [style = bold, label=""];
14->1 [style = bold, label=""];
7->9 [style = bold, label=""];
6->5 [style = bold, label=""];
1->11 [style = solid, label="buffer"];
6->13 [style = dashed, label="0"];
12->4 [style = bold, label=""];
3->8 [style = solid, label="pdus"];
0->4 [style = bold, label=""];
3->8 [style = bold, label=""];
9->3 [style = solid, label="state"];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
4->14 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
3->11 [style = dashed, label="0"];
8->13 [style = bold, label=""];
}
