digraph {
5 [style = filled, label = "assertEquals(-5,sum)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "treeReduce['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "JavaRDD<Integer> rdd = sc.parallelize(Arrays.asList(-5,-4,-3,-2,-1,1,2,3,4),10)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "depth <= 10@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "int sum = rdd.treeReduce(add,depth)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Function2<Integer,Integer,Integer> add = null@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Function2<Integer,Integer,Integer> add = new Function2<Integer,Integer,Integer>(){@Override public Integer call(Integer a,Integer b){return a + b}}@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "treeReduce['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "treeAggregate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int depth = 1@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(-5,sum)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "depth++@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "depth++@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "int sum = rdd.treeReduce(add,depth)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "int depth = 1@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "depth <= 10@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int sum = rdd.treeAggregate(0,add,add,depth)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->4 [style = solid, label="depth"];
0->3 [style = bold, label=""];
16->3 [style = bold, label=""];
4->5 [style = dotted, label="true"];
1->15 [style = solid, label="depth"];
1->4 [style = bold, label=""];
7->1 [style = solid, label="depth"];
4->1 [style = dotted, label="true"];
7->2 [style = solid, label="depth"];
3->14 [style = bold, label=""];
4->15 [style = bold, label=""];
12->11 [style = bold, label=""];
11->12 [style = dotted, label="true"];
14->10 [style = bold, label=""];
3->6 [style = bold, label=""];
14->8 [style = solid, label="add"];
11->9 [style = dotted, label="true"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
4->15 [style = dotted, label="true"];
6->14 [style = dashed, label="0"];
15->5 [style = bold, label=""];
12->8 [style = solid, label="depth"];
4->2 [style = dotted, label="true"];
2->15 [style = dashed, label="0"];
10->8 [style = solid, label="depth"];
5->1 [style = bold, label=""];
7->15 [style = solid, label="depth"];
13->3 [style = bold, label=""];
1->4 [style = solid, label="depth"];
8->9 [style = bold, label=""];
10->11 [style = solid, label="depth"];
1->2 [style = solid, label="depth"];
11->8 [style = bold, label=""];
11->8 [style = dotted, label="true"];
8->9 [style = solid, label="sum"];
9->12 [style = bold, label=""];
12->11 [style = solid, label="depth"];
6->2 [style = solid, label="add"];
6->15 [style = solid, label="add"];
6->7 [style = bold, label=""];
15->5 [style = solid, label="sum"];
2->5 [style = solid, label="sum"];
10->12 [style = solid, label="depth"];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
