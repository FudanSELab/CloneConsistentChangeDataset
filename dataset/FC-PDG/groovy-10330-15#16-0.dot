digraph {
19 [style = filled, label = "assertEquals(720,init.getTolerance())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "init.setDebug(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(\"Somewhere\",init.getClasspath().get(1))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "init.setParameters(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(234,init.getMinimumRecompilationInterval())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(55,config.getTolerance())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "init.setDefaultScriptExtension(\".jpp\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.JDK5)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Boolean.FALSE,config.getRecompileGroovySource())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "init.setScriptBaseClass(\"\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(Collections.emptyList(),init.getClasspath())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertEquals(CompilerConfiguration.JDK5,config.getTargetBytecode())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",init.getScriptBaseClass())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "init.setParameters(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "init.setSourceEncoding(\"Gutenberg\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ParserPluginFactory pluginFactory = ParserPluginFactory.antlr4(init)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"LEAD-123\",init.getSourceEncoding())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"somevalue\",init.getJointCompilationOptions().get(\"somekey\"))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(pluginFactory,config.getPluginFactory())@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "init.setTargetDirectory(tergetDirectory)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "init.setMinimumRecompilationInterval(975)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CompilerConfiguration config = new CompilerConfiguration(init)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "init.setPluginFactory(pluginFactory)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "init.setRecompileGroovySource(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "init.setDebug(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(Boolean.TRUE,config.getRecompileGroovySource())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(975,init.getMinimumRecompilationInterval())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "init.setRecompileGroovySource(false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(Boolean.TRUE,init.getVerbose())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CompilerConfiguration init = new CompilerConfiguration()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "init.setTolerance(55)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(\".jpp\",init.getDefaultScriptExtension())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Boolean.FALSE,init.getDebug())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(\"Somewhere\",config.getClasspath().get(1))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Collections.emptyList(),config.getClasspath())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(pluginFactory,init.getPluginFactory())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(\"Gutenberg\",init.getSourceEncoding())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(\"\",config.getScriptBaseClass())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(Boolean.FALSE,init.getRecompileGroovySource())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "init.setTolerance(720)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Boolean.FALSE,config.getDebug())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testCopyConstructor2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "init.setSourceEncoding(\"LEAD-123\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ParserPluginFactory pluginFactory = ParserPluginFactory.antlr4()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(Boolean.TRUE,config.getDebug())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "init.setClasspath(\"\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"File1\",config.getClasspath().get(0))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Boolean.FALSE,config.getVerbose())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(Boolean.TRUE,init.getRecompileGroovySource())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(\"\",init.getScriptBaseClass())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "init.setVerbose(false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(tergetDirectory,config.getTargetDirectory())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(Boolean.TRUE,init.getParameters())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "init.setWarningLevel(WarningMessage.POSSIBLE_ERRORS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "File tergetDirectory = new File(\"A wandering path\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "init.setVerbose(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(Boolean.TRUE,config.getVerbose())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "init.setClasspath(\"File1\" + File.pathSeparator + \"Somewhere\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"File1\",init.getClasspath().get(0))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,config.getWarningLevel())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(CompilerConfiguration.JDK5,init.getTargetBytecode())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",config.getScriptBaseClass())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final CompilerConfiguration init = new CompilerConfiguration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(Boolean.TRUE,init.getDebug())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\".jpp\",config.getDefaultScriptExtension())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "init.setScriptBaseClass(\"blarg.foo.WhatSit\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,init.getWarningLevel())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(234,config.getMinimumRecompilationInterval())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "init.setMinimumRecompilationInterval(234)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(tergetDirectory,config.getTargetDirectory())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(\"somevalue\",config.getJointCompilationOptions().get(\"somekey\"))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(55,init.getTolerance())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(Boolean.FALSE,init.getVerbose())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Boolean.FALSE,init.getParameters())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testCopyConstructor1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(975,config.getMinimumRecompilationInterval())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(\"Gutenberg\",config.getSourceEncoding())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testCopyConstructor1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"LEAD-123\",config.getSourceEncoding())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "init.setJointCompilationOptions(Collections.singletonMap(\"somekey\",\"somevalue\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(tergetDirectory,init.getTargetDirectory())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(720,config.getTolerance())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
56->78 [style = bold, label=""];
24->81 [style = dashed, label="0"];
31->56 [style = bold, label=""];
66->26 [style = bold, label=""];
46->5 [style = bold, label=""];
3->47 [style = solid, label="pluginFactory"];
81->73 [style = bold, label=""];
50->70 [style = dashed, label="0"];
73->74 [style = bold, label=""];
63->34 [style = bold, label=""];
21->24 [style = bold, label=""];
30->49 [style = bold, label=""];
23->62 [style = dashed, label="0"];
51->46 [style = solid, label="pluginFactory"];
29->78 [style = dashed, label="0"];
0->63 [style = dashed, label="0"];
1->46 [style = bold, label=""];
3->51 [style = dashed, label="0"];
33->0 [style = bold, label=""];
44->23 [style = bold, label=""];
12->10 [style = bold, label=""];
42->44 [style = bold, label=""];
45->22 [style = bold, label=""];
20->48 [style = bold, label=""];
26->35 [style = bold, label=""];
76->81 [style = bold, label=""];
65->69 [style = bold, label=""];
77->60 [style = bold, label=""];
54->53 [style = bold, label=""];
40->6 [style = solid, label="tergetDirectory"];
23->36 [style = bold, label=""];
32->18 [style = bold, label=""];
80->42 [style = bold, label=""];
18->32 [style = dashed, label="0"];
9->40 [style = bold, label=""];
26->67 [style = bold, label=""];
59->64 [style = bold, label=""];
28->37 [style = bold, label=""];
24->19 [style = bold, label=""];
37->69 [style = dashed, label="0"];
60->70 [style = bold, label=""];
30->74 [style = dashed, label="0"];
10->21 [style = bold, label=""];
16->17 [style = bold, label=""];
28->65 [style = dashed, label="0"];
25->79 [style = dashed, label="0"];
25->7 [style = bold, label=""];
38->6 [style = bold, label=""];
21->76 [style = dashed, label="0"];
2->39 [style = bold, label=""];
11->71 [style = dashed, label="0"];
0->34 [style = bold, label=""];
58->63 [style = bold, label=""];
52->0 [style = bold, label=""];
13->12 [style = bold, label=""];
61->80 [style = bold, label=""];
57->76 [style = bold, label=""];
51->47 [style = solid, label="pluginFactory"];
17->15 [style = bold, label=""];
31->41 [style = bold, label=""];
18->25 [style = bold, label=""];
64->66 [style = bold, label=""];
2->54 [style = dashed, label="0"];
29->38 [style = bold, label=""];
63->6 [style = solid, label="init"];
22->14 [style = bold, label=""];
78->68 [style = bold, label=""];
68->6 [style = bold, label=""];
39->53 [style = dashed, label="0"];
36->43 [style = bold, label=""];
70->61 [style = bold, label=""];
9->75 [style = dashed, label="0"];
10->57 [style = dashed, label="0"];
71->31 [style = bold, label=""];
39->16 [style = bold, label=""];
67->75 [style = bold, label=""];
35->9 [style = bold, label=""];
75->40 [style = bold, label=""];
0->5 [style = solid, label="init"];
55->71 [style = bold, label=""];
43->20 [style = bold, label=""];
16->59 [style = dashed, label="0"];
7->4 [style = bold, label=""];
40->68 [style = solid, label="tergetDirectory"];
51->13 [style = bold, label=""];
34->65 [style = bold, label=""];
0->3 [style = solid, label="init"];
5->32 [style = bold, label=""];
34->28 [style = bold, label=""];
11->31 [style = bold, label=""];
6->27 [style = bold, label=""];
6->5 [style = bold, label=""];
40->45 [style = solid, label="tergetDirectory"];
17->64 [style = dashed, label="0"];
3->13 [style = solid, label="pluginFactory"];
37->2 [style = bold, label=""];
40->72 [style = solid, label="tergetDirectory"];
42->62 [style = bold, label=""];
4->50 [style = bold, label=""];
49->11 [style = bold, label=""];
19->73 [style = dashed, label="0"];
44->42 [style = dashed, label="0"];
27->1 [style = bold, label=""];
40->43 [style = solid, label="tergetDirectory"];
74->55 [style = bold, label=""];
41->29 [style = bold, label=""];
3->46 [style = solid, label="pluginFactory"];
69->54 [style = bold, label=""];
12->57 [style = bold, label=""];
14->51 [style = bold, label=""];
35->67 [style = dashed, label="0"];
79->77 [style = bold, label=""];
15->26 [style = bold, label=""];
45->12 [style = bold, label=""];
7->77 [style = dashed, label="0"];
8->42 [style = bold, label=""];
53->59 [style = bold, label=""];
4->60 [style = dashed, label="0"];
32->79 [style = bold, label=""];
48->47 [style = bold, label=""];
62->72 [style = bold, label=""];
15->66 [style = dashed, label="0"];
3->13 [style = bold, label=""];
50->8 [style = bold, label=""];
49->55 [style = dashed, label="0"];
40->45 [style = bold, label=""];
41->56 [style = dashed, label="0"];
8->61 [style = dashed, label="0"];
51->13 [style = solid, label="pluginFactory"];
19->30 [style = bold, label=""];
}
