digraph {
37 [style = filled, label = "final int parallelism = 4@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "SourceFunction<Tuple2<Long,Long>> nonParallelSource@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SourceFunction<Tuple2<Long,Long>> parallelSource@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "executionMode == ExecutionMode.PERFORM_SAVEPOINT@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "timelyOperator = new CheckpointingTimelyStatefulOperator()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "env.addSource(nonParallelSource).uid(\"CheckpointingSource1\").keyBy(0).flatMap(flatMap).startNewChain().uid(\"CheckpointingKeyedStateFlatMap1\").keyBy(0).transform(\"timely_stateful_operator\",new TypeHint<Tuple2<Long,Long>>(){}.getTypeInfo(),timelyOperator).uid(\"CheckpointingTimelyStatefulOperator1\").addSink(new MigrationTestUtils.AccumulatorCountingSink<>())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "OneInputStreamOperator<Tuple2<Long,Long>,Tuple2<Long,Long>> timelyOperator@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "timelyOperator = new CheckingTimelyStatefulOperator()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "env.setMaxParallelism(parallelism)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "restoreAndExecute(env,getResourceFilename(getSavepointPath(testMigrateVersion,testStateBackend)),new Tuple2<>(MigrationTestUtils.CheckingNonParallelSourceWithListState.SUCCESSFUL_RESTORE_CHECK_ACCUMULATOR,1),new Tuple2<>(MigrationTestUtils.CheckingParallelSourceWithUnionListState.SUCCESSFUL_RESTORE_CHECK_ACCUMULATOR,parallelism),new Tuple2<>(CheckingKeyedStateFlatMap.SUCCESSFUL_RESTORE_CHECK_ACCUMULATOR,NUM_SOURCE_ELEMENTS * 2),new Tuple2<>(CheckingTimelyStatefulOperator.SUCCESSFUL_PROCESS_CHECK_ACCUMULATOR,NUM_SOURCE_ELEMENTS * 2),new Tuple2<>(CheckingTimelyStatefulOperator.SUCCESSFUL_EVENT_TIME_CHECK_ACCUMULATOR,NUM_SOURCE_ELEMENTS * 2),new Tuple2<>(CheckingTimelyStatefulOperator.SUCCESSFUL_PROCESSING_TIME_CHECK_ACCUMULATOR,NUM_SOURCE_ELEMENTS * 2),new Tuple2<>(MigrationTestUtils.AccumulatorCountingSink.NUM_ELEMENTS_ACCUMULATOR,NUM_SOURCE_ELEMENTS * 2))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "flatMap = new CheckpointingKeyedStateFlatMap()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "env.enableCheckpointing(500)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.setStateBackend(new RocksDBStateBackend(new MemoryStateBackend()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testSavepoint['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "env.setRestartStrategy(RestartStrategies.noRestart())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "executionMode == ExecutionMode.PERFORM_SAVEPOINT@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "parallelSource = new MigrationTestUtils.CheckingParallelSourceWithUnionListState(NUM_SOURCE_ELEMENTS)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "nonParallelSource = new MigrationTestUtils.CheckpointingNonParallelSourceWithListState(NUM_SOURCE_ELEMENTS)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SourceFunction<Tuple2<Long,Long>> nonParallelSource = new MigrationTestUtils.CheckpointingNonParallelSourceWithListState(NUM_SOURCE_ELEMENTS)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "parallelSource = new MigrationTestUtils.CheckpointingParallelSourceWithUnionListState(NUM_SOURCE_ELEMENTS)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "throw new IllegalStateException(\"Unknown ExecutionMode \" + executionMode)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "flatMap = new CheckingKeyedStateFlatMap()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "env.setParallelism(parallelism)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.setStateBackend(new MemoryStateBackend())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "nonParallelSource = new MigrationTestUtils.CheckingNonParallelSourceWithListState(NUM_SOURCE_ELEMENTS)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "executionMode == ExecutionMode.PERFORM_SAVEPOINT@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testSavepoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RichFlatMapFunction<Tuple2<Long,Long>,Tuple2<Long,Long>> flatMap@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int parallelism = 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "executionMode == ExecutionMode.VERIFY_SAVEPOINT@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "env.addSource(nonParallelSource).keyBy(0).map(new TestMapFunction()).addSink(new MigrationTestUtils.AccumulatorCountingSink<>())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "restoreAndExecute(env,getResourceFilename(getSavepointPath(testMigrateVersion,testStateBackend)),new Tuple2<>(MigrationTestUtils.AccumulatorCountingSink.NUM_ELEMENTS_ACCUMULATOR,NUM_SOURCE_ELEMENTS))@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "throw new UnsupportedOperationException()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testStateBackend@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testSavepoint['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "env.addSource(parallelSource).uid(\"CheckpointingSource2\").keyBy(0).flatMap(flatMap).startNewChain().uid(\"CheckpointingKeyedStateFlatMap2\").keyBy(0).transform(\"timely_stateful_operator\",new TypeHint<Tuple2<Long,Long>>(){}.getTypeInfo(),timelyOperator).uid(\"CheckpointingTimelyStatefulOperator2\").addSink(new MigrationTestUtils.AccumulatorCountingSink<>())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "executeAndSavepoint(env,\"src/test/resources/\" + getSavepointPath(testMigrateVersion,testStateBackend),new Tuple2<>(MigrationTestUtils.AccumulatorCountingSink.NUM_ELEMENTS_ACCUMULATOR,NUM_SOURCE_ELEMENTS * 2))@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "executeAndSavepoint(env,\"src/test/resources/\" + getSavepointPath(testMigrateVersion,testStateBackend),new Tuple2<>(MigrationTestUtils.AccumulatorCountingSink.NUM_ELEMENTS_ACCUMULATOR,NUM_SOURCE_ELEMENTS))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35->31 [style = bold, label=""];
15->13 [style = bold, label=""];
37->27 [style = solid, label="parallelism"];
14->37 [style = dashed, label="0"];
24->19 [style = bold, label=""];
26->32 [style = bold, label=""];
32->21 [style = dotted, label="true"];
25->22 [style = bold, label=""];
7->10 [style = bold, label=""];
32->23 [style = dotted, label="true"];
26->29 [style = bold, label=""];
33->34 [style = dotted, label="true"];
0->2 [style = bold, label=""];
32->20 [style = dotted, label="true"];
4->16 [style = solid, label="env"];
26->19 [style = dotted, label="true"];
8->6 [style = bold, label=""];
3->15 [style = bold, label=""];
18->36 [style = bold, label=""];
36->26 [style = bold, label=""];
37->10 [style = solid, label="parallelism"];
15->16 [style = dotted, label="true"];
15->16 [style = bold, label=""];
32->30 [style = bold, label=""];
33->27 [style = bold, label=""];
37->7 [style = solid, label="parallelism"];
12->7 [style = bold, label=""];
37->4 [style = bold, label=""];
14->10 [style = solid, label="parallelism"];
4->27 [style = solid, label="env"];
4->0 [style = bold, label=""];
29->28 [style = bold, label=""];
23->35 [style = bold, label=""];
30->21 [style = bold, label=""];
22->18 [style = bold, label=""];
21->20 [style = bold, label=""];
8->6 [style = dotted, label="true"];
20->23 [style = bold, label=""];
8->5 [style = bold, label=""];
14->7 [style = solid, label="parallelism"];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
17->14 [style = bold, label=""];
10->25 [style = bold, label=""];
38->37 [style = bold, label=""];
8->5 [style = dotted, label="true"];
39->35 [style = bold, label=""];
19->35 [style = bold, label=""];
31->33 [style = bold, label=""];
4->13 [style = solid, label="env"];
26->28 [style = dotted, label="true"];
26->24 [style = dotted, label="true"];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
32->30 [style = dotted, label="true"];
32->39 [style = dotted, label="false"];
11->25 [style = dashed, label="0"];
28->24 [style = bold, label=""];
26->29 [style = dotted, label="true"];
15->13 [style = dotted, label="false"];
1->14 [style = bold, label=""];
32->39 [style = bold, label=""];
9->12 [style = bold, label=""];
8->9 [style = dotted, label="true"];
33->27 [style = dotted, label="false"];
33->34 [style = bold, label=""];
26->32 [style = dotted, label="false"];
4->34 [style = solid, label="env"];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
10->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
