digraph {
25 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(2,3)),is(true))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(1,1)),is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(2,1)),is(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(3,2)),is(true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(2,1,2)),is(true))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final RelCollation collation21 = RelCollations.of(new RelFieldCollation(2,ASCENDING),new RelFieldCollation(1,DESCENDING))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(3,1)),is(false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(0)),is(false))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(2)),is(true))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(2,1,1)),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(RelCollations.contains(collation1,Arrays.asList()),is(true))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(2,0)),is(false))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList()),is(true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final RelCollation collation1 = RelCollations.of(new RelFieldCollation(1,RelFieldCollation.Direction.DESCENDING))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(0)),is(false))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(2,2)),is(true))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final List<RelCollation> collations = Lists.newArrayList(collation(2,3,1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final RelCollation collation21 = RelCollations.of(new RelFieldCollation(2,RelFieldCollation.Direction.ASCENDING),new RelFieldCollation(1,RelFieldCollation.Direction.DESCENDING))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(2,2)),is(true))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(2,3,0)),is(false))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(RelCollations.contains(collation1,Arrays.asList(1,2,1)),is(false))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final RelCollation collation1 = RelCollations.of(new RelFieldCollation(1,DESCENDING))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(1,2,1)),is(false))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(RelCollations.contains(collation1,Arrays.asList(1,1)),is(true))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(3,2,1,0)),is(false))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(2,1,3)),is(false))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCollationContains['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(RelCollations.contains(collation21,Arrays.asList(1)),is(false))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(3,2,1)),is(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testCollationsContainKeysOrderless['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(RelCollations.collationsContainKeysOrderless(collations,Arrays.asList(1)),is(false))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testCollationContains['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(RelCollations.contains(collation1,Arrays.asList(2,2)),is(false))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
2->17 [style = bold, label=""];
28->29 [style = bold, label=""];
16->13 [style = bold, label=""];
17->4 [style = solid, label="collation21"];
17->3 [style = solid, label="collation21"];
31->25 [style = bold, label=""];
17->14 [style = solid, label="collation21"];
29->30 [style = bold, label=""];
17->9 [style = solid, label="collation21"];
17->1 [style = solid, label="collation21"];
26->27 [style = solid, label="collations"];
25->23 [style = bold, label=""];
3->31 [style = dashed, label="0"];
14->28 [style = dashed, label="0"];
17->15 [style = solid, label="collation21"];
19->20 [style = bold, label=""];
27->28 [style = bold, label=""];
20->4 [style = solid, label="collation21"];
14->10 [style = bold, label=""];
9->27 [style = dashed, label="0"];
20->1 [style = solid, label="collation21"];
30->32 [style = bold, label=""];
20->6 [style = solid, label="collation21"];
17->11 [style = solid, label="collation21"];
5->18 [style = bold, label=""];
20->3 [style = bold, label=""];
10->29 [style = dashed, label="0"];
12->6 [style = bold, label=""];
26->32 [style = solid, label="collations"];
5->0 [style = solid, label="collation1"];
20->8 [style = solid, label="collation21"];
20->12 [style = solid, label="collation21"];
4->7 [style = bold, label=""];
20->7 [style = solid, label="collation21"];
17->8 [style = solid, label="collation21"];
11->15 [style = bold, label=""];
17->12 [style = solid, label="collation21"];
21->13 [style = solid, label="collation1"];
21->18 [style = bold, label=""];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
24->26 [style = bold, label=""];
26->31 [style = bold, label=""];
23->22 [style = bold, label=""];
20->9 [style = solid, label="collation21"];
17->20 [style = dashed, label="0"];
17->6 [style = solid, label="collation21"];
22->27 [style = bold, label=""];
26->30 [style = solid, label="collations"];
21->18 [style = solid, label="collation1"];
21->0 [style = solid, label="collation1"];
26->31 [style = solid, label="collations"];
3->8 [style = bold, label=""];
1->21 [style = bold, label=""];
20->15 [style = solid, label="collation21"];
26->23 [style = solid, label="collations"];
20->14 [style = solid, label="collation21"];
17->3 [style = bold, label=""];
20->10 [style = solid, label="collation21"];
9->14 [style = bold, label=""];
5->21 [style = dashed, label="0"];
8->25 [style = dashed, label="0"];
5->13 [style = solid, label="collation1"];
5->18 [style = solid, label="collation1"];
21->16 [style = solid, label="collation1"];
26->28 [style = solid, label="collations"];
15->12 [style = bold, label=""];
17->10 [style = solid, label="collation21"];
20->3 [style = solid, label="collation21"];
26->25 [style = solid, label="collations"];
8->4 [style = bold, label=""];
17->7 [style = solid, label="collation21"];
26->29 [style = solid, label="collations"];
4->23 [style = dashed, label="0"];
20->11 [style = solid, label="collation21"];
7->22 [style = dashed, label="0"];
5->16 [style = solid, label="collation1"];
26->22 [style = solid, label="collations"];
13->0 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
