digraph {
25 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "node.waitForInitialCreate(5,TimeUnit.SECONDS)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNodeExists(curator,originalNode)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String originalNode = node.getActualPath()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "node.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < 5@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(10,TimeUnit.SECONDS))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{node.close()}@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "{node.close()}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String path = node.getActualPath()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "curator.delete().forPath(originalNode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "killSession(curator)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(10,TimeUnit.SECONDS))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(10,TimeUnit.SECONDS))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17->8 [style = bold, label=""];
30->24 [style = bold, label=""];
10->20 [style = bold, label=""];
15->7 [style = bold, label=""];
17->24 [style = dashed, label="0"];
16->10 [style = bold, label=""];
12->6 [style = solid, label="path"];
12->0 [style = solid, label="path"];
0->2 [style = bold, label=""];
12->17 [style = bold, label=""];
3->17 [style = solid, label="observer"];
1->21 [style = dotted, label="true"];
6->19 [style = solid, label="stat"];
1->18 [style = bold, label=""];
6->19 [style = bold, label=""];
30->23 [style = solid, label="originalNode"];
1->14 [style = dotted, label="true"];
3->16 [style = bold, label=""];
12->30 [style = dashed, label="0"];
9->1 [style = solid, label="i"];
8->9 [style = solid, label="i"];
7->2 [style = solid, label="curator"];
1->19 [style = dotted, label="true"];
22->7 [style = bold, label=""];
7->3 [style = bold, label=""];
1->11 [style = bold, label=""];
30->24 [style = solid, label="originalNode"];
2->13 [style = bold, label=""];
1->18 [style = dotted, label="true"];
6->14 [style = bold, label=""];
23->28 [style = bold, label=""];
8->1 [style = bold, label=""];
21->5 [style = bold, label=""];
1->13 [style = dotted, label="true"];
26->27 [style = bold, label=""];
7->16 [style = solid, label="curator"];
13->21 [style = dashed, label="0"];
5->6 [style = bold, label=""];
4->30 [style = bold, label=""];
19->9 [style = bold, label=""];
4->20 [style = dashed, label="0"];
2->21 [style = bold, label=""];
12->17 [style = solid, label="path"];
8->1 [style = solid, label="i"];
1->9 [style = dotted, label="true"];
7->24 [style = solid, label="curator"];
7->16 [style = bold, label=""];
20->12 [style = bold, label=""];
25->26 [style = bold, label=""];
13->5 [style = bold, label=""];
10->4 [style = bold, label=""];
4->12 [style = bold, label=""];
28->25 [style = bold, label=""];
29->7 [style = bold, label=""];
6->14 [style = solid, label="stat"];
14->9 [style = bold, label=""];
30->25 [style = solid, label="originalNode"];
25->26 [style = solid, label="stat"];
1->6 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
14->19 [style = dashed, label="0"];
9->1 [style = bold, label=""];
1->2 [style = dotted, label="true"];
18->0 [style = bold, label=""];
1->5 [style = dotted, label="true"];
24->23 [style = bold, label=""];
}
