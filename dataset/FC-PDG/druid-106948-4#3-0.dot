digraph {
25 [style = filled, label = "aggregate(selector,doubleAgg)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < 10000@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "aggregate(selector,aggRhino)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final JavaScriptAggregatorBenchmark.LoopingDoubleColumnSelector selector = new JavaScriptAggregatorBenchmark.LoopingDoubleColumnSelector(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9cc746)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "++i@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "long t2 = System.currentTimeMillis() - t@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "aggregate(selector,aggRhino)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < 500000000@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "t = System.currentTimeMillis()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "System.out.println(StringUtils.format(\"DoubleSum aggregator == %,f: %d ms\",doubleAgg.getFloat(),t2))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testAggregateMissingColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "t = System.currentTimeMillis()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long t = 0@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "aggregate(selector,doubleAgg)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "agg.aggregate()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "++i@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "System.out.println(StringUtils.format(\"JavaScript is %2.1fx slower\",(double)t1 / t2))@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "JavaScriptAggregator aggRhino = new JavaScriptAggregator(Collections.singletonList(selector),JavaScriptAggregatorFactory.compileScript(script.get(\"fnAggregate\"),script.get(\"fnReset\"),script.get(\"fnCombine\")))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "i < 500000000@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "JavaScriptAggregator agg = new JavaScriptAggregator(Collections.singletonList(null),JavaScriptAggregatorFactory.compileScript(script.get(\"fnAggregate\"),script.get(\"fnReset\"),script.get(\"fnCombine\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "agg.aggregate()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "++i@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "long t@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Map<String,String> script = scriptDoubleSum@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i = 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i = 0@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DoubleSumAggregator doubleAgg = new DoubleSumAggregator(selector)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long t1 = System.currentTimeMillis() - t@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final double val = 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "++i@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < 10000@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "System.out.println(StringUtils.format(\"JavaScript aggregator == %,f: %d ms\",aggRhino.getFloat(),t1))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
9->11 [style = bold, label=""];
29->5 [style = dotted, label="true"];
29->0 [style = bold, label=""];
19->21 [style = solid, label="t1"];
38->42 [style = bold, label=""];
28->1 [style = solid, label="t"];
21->28 [style = bold, label=""];
3->18 [style = bold, label=""];
22->8 [style = bold, label=""];
23->0 [style = solid, label="selector"];
11->39 [style = dashed, label="0"];
27->17 [style = bold, label=""];
12->25 [style = solid, label="doubleAgg"];
29->1 [style = bold, label=""];
9->38 [style = bold, label=""];
33->44 [style = bold, label=""];
17->27 [style = dotted, label="true"];
35->40 [style = solid, label="val"];
18->13 [style = dotted, label="true"];
23->25 [style = solid, label="selector"];
5->29 [style = bold, label=""];
7->10 [style = dotted, label="true"];
36->41 [style = bold, label=""];
3->31 [style = dashed, label="0"];
24->33 [style = dashed, label="0"];
15->18 [style = solid, label="i"];
11->12 [style = bold, label=""];
40->34 [style = bold, label=""];
23->11 [style = solid, label="selector"];
24->18 [style = bold, label=""];
10->7 [style = bold, label=""];
35->36 [style = solid, label="val"];
4->17 [style = solid, label="i"];
11->13 [style = solid, label="aggRhino"];
35->37 [style = solid, label="val"];
6->2 [style = bold, label=""];
25->27 [style = bold, label=""];
18->4 [style = bold, label=""];
15->31 [style = bold, label=""];
39->35 [style = bold, label=""];
35->44 [style = solid, label="val"];
43->33 [style = bold, label=""];
35->42 [style = solid, label="val"];
29->0 [style = dotted, label="true"];
26->29 [style = solid, label="i"];
13->43 [style = dashed, label="0"];
13->24 [style = bold, label=""];
4->17 [style = bold, label=""];
17->6 [style = bold, label=""];
35->9 [style = solid, label="val"];
35->9 [style = bold, label=""];
18->24 [style = dotted, label="true"];
45->32 [style = bold, label=""];
28->26 [style = bold, label=""];
7->20 [style = bold, label=""];
19->8 [style = solid, label="t1"];
15->3 [style = bold, label=""];
1->22 [style = solid, label="t2"];
23->13 [style = solid, label="selector"];
14->16 [style = dotted, label="true"];
17->25 [style = dotted, label="true"];
14->23 [style = bold, label=""];
41->40 [style = bold, label=""];
6->19 [style = solid, label="t"];
32->39 [style = bold, label=""];
11->20 [style = solid, label="aggRhino"];
1->8 [style = solid, label="t2"];
7->19 [style = bold, label=""];
0->5 [style = bold, label=""];
2->7 [style = solid, label="i"];
19->21 [style = bold, label=""];
42->43 [style = bold, label=""];
44->36 [style = bold, label=""];
23->20 [style = solid, label="selector"];
26->29 [style = bold, label=""];
30->23 [style = bold, label=""];
12->15 [style = bold, label=""];
31->18 [style = bold, label=""];
23->12 [style = solid, label="selector"];
12->0 [style = solid, label="doubleAgg"];
20->10 [style = bold, label=""];
1->22 [style = bold, label=""];
7->20 [style = dotted, label="true"];
34->37 [style = bold, label=""];
30->16 [style = dotted, label="true"];
35->38 [style = solid, label="val"];
18->13 [style = bold, label=""];
2->7 [style = bold, label=""];
35->34 [style = solid, label="val"];
23->9 [style = bold, label=""];
35->33 [style = solid, label="val"];
}
