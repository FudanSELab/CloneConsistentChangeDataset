digraph {
20 [style = filled, label = "testKafkaKeyValueMetricObjectReporter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "KeyValueMetricObjectReporterTest reporter = getBuilder(properties).build(\"localhost:0000\",TOPIC,ConfigUtils.propertiesToConfig(properties))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "event.setMetadata(metadata)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String namespace = \"org.apache.gobblin.metrics:gobblin.metrics.test\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "properties.put(\"pusherClass\",\"org.apache.gobblin.metrics.reporter.MockKeyValuePusher\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testKafkaKeyValueEventObjectReporter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "event.setNamespace(namespace)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String eventName = \"testEvent\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "context.submitEvent(event)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Thread.currentThread().interrupt()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Properties properties = new Properties()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String name = TOPIC@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "MetricContext context = MetricContext.builder(\"context\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MetricContext metricContext = MetricContext.builder(\"context\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(retrievedEvent.getValue().getSchema() == reporter.schema)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Thread.sleep(100)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(retrievedEvent.getValue().get(\"name\"),eventName)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Thread.sleep(1000)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testKafkaKeyValueMetricObjectReporter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "event.setName(eventName)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertTrue((0 <= partition && partition <= 99))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "reporter.report()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(retrievedEvent.getValue().get(\"namespace\"),namespace)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Pair<String,GenericRecord> retrievedEvent = nextKVReport(pusher.messageIterator())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Thread.currentThread().interrupt()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(retrievedEvent.getValue().getSchema().getNamespace(),\"gobblin.metrics.test\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MockKeyValuePusher pusher = reporter.getPusher()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Pair<String,GenericRecord> retrievedEvent = nextKVEvent(pusher.messageIterator())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "InterruptedException ex@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map<String,String> metadata = Maps.newHashMap()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "InterruptedException ex@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "KeyValueEventObjectReporterTest reporter = getBuilder(context,properties).build(\"localhost:0000\",\"topic\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertTrue((0 <= partition && partition <= 99))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "GobblinTrackingEvent event = new GobblinTrackingEvent()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "reporter.report(metricContext)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "properties.put(KafkaSchemaRegistryConfigurationKeys.KAFKA_SCHEMA_REGISTRY_OVERRIDE_NAMESPACE,namespace)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MockKeyValuePusher pusher = reporter.getPusher()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int partition = Integer.parseInt(retrievedEvent.getKey())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
31->37 [style = bold, label=""];
1->5 [style = solid, label="properties"];
0->6 [style = solid, label="metricContext"];
13->36 [style = dashed, label="0"];
17->1 [style = bold, label=""];
3->10 [style = solid, label="partition"];
7->12 [style = bold, label=""];
28->22 [style = bold, label=""];
29->31 [style = solid, label="eventName"];
10->19 [style = bold, label=""];
16->35 [style = dashed, label="0"];
21->32 [style = solid, label="metadata"];
20->0 [style = bold, label=""];
34->15 [style = bold, label=""];
37->21 [style = bold, label=""];
15->14 [style = solid, label="namespace"];
30->34 [style = bold, label=""];
12->16 [style = bold, label=""];
17->4 [style = solid, label="name"];
25->35 [style = bold, label=""];
0->15 [style = bold, label=""];
32->33 [style = bold, label=""];
26->33 [style = solid, label="event"];
4->28 [style = dashed, label="0"];
29->26 [style = bold, label=""];
2->11 [style = dotted, label="true"];
8->0 [style = bold, label=""];
35->28 [style = bold, label=""];
3->10 [style = bold, label=""];
29->28 [style = solid, label="eventName"];
15->17 [style = bold, label=""];
26->31 [style = bold, label=""];
3->23 [style = bold, label=""];
15->35 [style = solid, label="namespace"];
4->3 [style = dotted, label="true"];
15->37 [style = solid, label="namespace"];
5->27 [style = dashed, label="0"];
5->6 [style = bold, label=""];
36->23 [style = bold, label=""];
12->25 [style = dashed, label="0"];
19->9 [style = bold, label=""];
18->27 [style = bold, label=""];
13->7 [style = bold, label=""];
18->5 [style = bold, label=""];
6->13 [style = bold, label=""];
33->36 [style = bold, label=""];
9->25 [style = bold, label=""];
21->32 [style = bold, label=""];
0->34 [style = dashed, label="0"];
14->18 [style = bold, label=""];
1->14 [style = bold, label=""];
10->9 [style = bold, label=""];
22->24 [style = bold, label=""];
27->29 [style = bold, label=""];
16->4 [style = bold, label=""];
23->9 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
15->1 [style = bold, label=""];
22->24 [style = solid, label="partition"];
}
