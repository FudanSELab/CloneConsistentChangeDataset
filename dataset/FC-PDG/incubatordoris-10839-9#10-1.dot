digraph {
19 [style = filled, label = "type.isDecimalV2()@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "type.isDateType()@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return new DecimalLiteral(value.getStringValue())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "type.isFloatingPointType()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "type.isBoolean()@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "uncheckedCastTo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "LiteralExpr value@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "type.isDecimal() || type.isDecimalV2()@@@12@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "targetType.isIntegerType()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return new LargeIntLiteral(value.getStringValue())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1054targetType@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "value instanceof NullLiteral@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "castTo['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "return new BoolLiteral(value.getStringValue())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Type targetType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return new IntLiteral(value.longValue(),targetType)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return new FloatLiteral(value.doubleValue(),targetType)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "castTo['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "type.isStringType()@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "type.isIntegerType()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return value@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "return new StringLiteral(value.toString())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return new IntLiteral(value.getLongValue(),type)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return new StringLiteral(value.getStringValue())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return new StringLiteral(value.getStringValue()).convertToDate(type)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return this@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return new FloatLiteral(value.getDoubleValue(),type)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "targetType.isStringType()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "targetType.isDecimal() || targetType.isDecimalV2()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "targetType.isFloatingPointType()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "type.isLargeIntType()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return this@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14->12 [style = solid, label="value"];
5->19 [style = dotted, label="false"];
19->18 [style = bold, label=""];
31->23 [style = bold, label=""];
15->23 [style = dashed, label="0"];
9->11 [style = bold, label=""];
23->30 [style = bold, label=""];
29->30 [style = bold, label=""];
24->25 [style = dotted, label="true"];
6->16 [style = dotted, label="false"];
16->10 [style = bold, label=""];
14->28 [style = dashed, label="0"];
9->24 [style = dashed, label="0"];
25->30 [style = bold, label=""];
14->4 [style = solid, label="value"];
9->11 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
0->2 [style = bold, label=""];
6->1 [style = dotted, label="true"];
5->15 [style = dotted, label="false"];
19->18 [style = dotted, label="true"];
20->14 [style = dotted, label="true"];
5->15 [style = bold, label=""];
15->6 [style = dotted, label="false"];
26->24 [style = dotted, label="false"];
15->6 [style = bold, label=""];
31->21 [style = bold, label=""];
5->0 [style = dotted, label="true"];
13->7 [style = dotted, label="true"];
26->22 [style = dotted, label="true"];
24->31 [style = dotted, label="false"];
4->2 [style = bold, label=""];
18->2 [style = bold, label=""];
12->9 [style = bold, label=""];
16->17 [style = bold, label=""];
19->6 [style = bold, label=""];
15->18 [style = bold, label=""];
16->10 [style = dotted, label="true"];
17->3 [style = dotted, label="true"];
11->2 [style = bold, label=""];
26->24 [style = bold, label=""];
26->22 [style = bold, label=""];
22->30 [style = bold, label=""];
23->29 [style = bold, label=""];
5->19 [style = bold, label=""];
27->28 [style = dotted, label="true"];
6->1 [style = bold, label=""];
31->21 [style = dotted, label="true"];
28->21 [style = solid, label="targetType"];
12->9 [style = dotted, label="false"];
3->2 [style = bold, label=""];
12->4 [style = bold, label=""];
5->0 [style = bold, label=""];
24->31 [style = bold, label=""];
6->16 [style = bold, label=""];
13->7 [style = bold, label=""];
7->2 [style = bold, label=""];
24->25 [style = bold, label=""];
0->21 [style = dashed, label="0"];
8->14 [style = dotted, label="true"];
18->29 [style = dashed, label="0"];
20->12 [style = bold, label=""];
9->5 [style = dotted, label="false"];
11->25 [style = dashed, label="0"];
17->13 [style = dotted, label="false"];
9->5 [style = bold, label=""];
17->3 [style = bold, label=""];
5->31 [style = dashed, label="0"];
10->2 [style = bold, label=""];
12->4 [style = dotted, label="true"];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
28->30 [style = solid, label="targetType"];
23->29 [style = dotted, label="true"];
4->22 [style = dashed, label="0"];
31->23 [style = dotted, label="false"];
16->17 [style = dotted, label="false"];
21->30 [style = bold, label=""];
19->6 [style = dotted, label="false"];
8->12 [style = bold, label=""];
15->19 [style = dashed, label="0"];
13->2 [style = bold, label=""];
27->26 [style = bold, label=""];
28->25 [style = solid, label="targetType"];
}
