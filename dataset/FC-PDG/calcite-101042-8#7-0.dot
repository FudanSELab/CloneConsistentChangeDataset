digraph {
9 [style = filled, label = "materialization.starRelOptTable != null@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RelNode root@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "RelNode rel@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "root = newRoot@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "substitute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "RelOptMaterialization materialization@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return hepPlanner.findBestExp()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RelOptMaterialization materialization@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "final HepPlanner hepPlanner = new HepPlanner(program)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "hepPlanner.setRoot(rel)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "newRoot != null@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "target = hepPlanner.findBestExp()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "hepPlanner.setRoot(root)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "target = trimUnusedfields(target)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelNode target = materialization.queryRel@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final HepPlanner hepPlanner = new HepPlanner(program)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RelNode newRoot = RelOptMaterialization.tryUseStar(root,materialization.starRelOptTable)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "root = hepPlanner.findBestExp()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "HepProgram program = new HepProgramBuilder().addRuleInstance(CoreRules.FILTER_PROJECT_TRANSPOSE).addRuleInstance(CoreRules.FILTER_MERGE).addRuleInstance(CoreRules.FILTER_INTO_JOIN).addRuleInstance(CoreRules.JOIN_CONDITION_PUSH).addRuleInstance(CoreRules.FILTER_AGGREGATE_TRANSPOSE).addRuleInstance(CoreRules.PROJECT_MERGE).addRuleInstance(CoreRules.PROJECT_REMOVE).addRuleInstance(CoreRules.PROJECT_JOIN_TRANSPOSE).addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE).addRuleInstance(CoreRules.FILTER_TO_CALC).addRuleInstance(CoreRules.PROJECT_TO_CALC).addRuleInstance(CoreRules.FILTER_CALC_MERGE).addRuleInstance(CoreRules.PROJECT_CALC_MERGE).addRuleInstance(CoreRules.CALC_MERGE).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "substitute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "hepPlanner.setRoot(target)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "root = trimUnusedfields(root)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<SubstitutionVisitor.UnifyRule> materializationRules@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "canonicalize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RelNode root@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "HepProgram program = new HepProgramBuilder().addRuleInstance(CoreRules.FILTER_PROJECT_TRANSPOSE).addRuleInstance(CoreRules.FILTER_MERGE).addRuleInstance(CoreRules.FILTER_INTO_JOIN).addRuleInstance(CoreRules.JOIN_CONDITION_PUSH).addRuleInstance(CoreRules.FILTER_AGGREGATE_TRANSPOSE).addRuleInstance(CoreRules.PROJECT_MERGE).addRuleInstance(CoreRules.PROJECT_REMOVE).addRuleInstance(CoreRules.PROJECT_JOIN_TRANSPOSE).addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE).addRuleInstance(CoreRules.FILTER_TO_CALC).addRuleInstance(CoreRules.PROJECT_TO_CALC).addRuleInstance(CoreRules.FILTER_CALC_MERGE).addRuleInstance(CoreRules.PROJECT_CALC_MERGE).addRuleInstance(CoreRules.CALC_MERGE).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return new SubstitutionVisitor(target,root,ImmutableList.builder().addAll(materializationRules).build()).go(materialization.tableRel)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "return new SubstitutionVisitor(target,root).go(materialization.tableRel)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24->25 [style = solid, label="program"];
26->23 [style = solid, label="rel"];
4->9 [style = bold, label=""];
14->11 [style = solid, label="root"];
2->23 [style = dashed, label="0"];
7->21 [style = dashed, label="0"];
16->11 [style = bold, label=""];
20->9 [style = bold, label=""];
25->23 [style = bold, label=""];
27->26 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
7->14 [style = solid, label="root"];
3->14 [style = bold, label=""];
4->7 [style = dotted, label="true"];
14->10 [style = bold, label=""];
1->6 [style = solid, label="program"];
20->21 [style = dotted, label="true"];
15->3 [style = bold, label=""];
19->13 [style = solid, label="root"];
19->14 [style = solid, label="root"];
7->13 [style = solid, label="root"];
6->2 [style = bold, label=""];
8->17 [style = bold, label=""];
1->6 [style = bold, label=""];
23->22 [style = bold, label=""];
12->14 [style = solid, label="root"];
5->17 [style = dashed, label="0"];
8->5 [style = bold, label=""];
13->15 [style = solid, label="newRoot"];
13->12 [style = solid, label="newRoot"];
24->25 [style = bold, label=""];
9->13 [style = dotted, label="true"];
20->18 [style = dotted, label="true"];
3->10 [style = solid, label="target"];
15->12 [style = dotted, label="true"];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
9->15 [style = dotted, label="true"];
20->19 [style = dotted, label="true"];
15->12 [style = bold, label=""];
13->15 [style = bold, label=""];
12->3 [style = bold, label=""];
27->24 [style = bold, label=""];
10->2 [style = solid, label="target"];
10->1 [style = bold, label=""];
16->22 [style = dashed, label="0"];
9->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
