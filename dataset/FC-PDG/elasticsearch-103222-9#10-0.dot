digraph {
7 [style = filled, label = "testTermQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MappedFieldType unsearchable = new KeywordFieldType(\"field\",false,true,Collections.emptyMap())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MappedFieldType ft = createFieldType()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "MappedFieldType ft = new KeywordFieldType(\"field\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MappedFieldType ft = new TextFieldType(\"field\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testTermQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testTermQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(new TermQuery(new Term(\"field\",\"foo\")),ft.termQuery(\"foo\",null))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MappedFieldType unsearchable = new TextFieldType(\"field\",false,Collections.emptyMap())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(AutomatonQueries.caseInsensitiveTermQuery(new Term(\"field\",\"fOo\")),ft.termQueryCaseInsensitive(\"fOo\",null))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->5 [style = bold, label=""];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
1->6 [style = bold, label=""];
4->2 [style = bold, label=""];
8->5 [style = bold, label=""];
3->1 [style = bold, label=""];
5->0 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
11->1 [style = bold, label=""];
2->8 [style = dashed, label="0"];
2->9 [style = dashed, label="0"];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
