digraph {
3 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,Arrays.asList(instantTime),records,cfg,true,new ArrayList<>())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(5,10,CompactionTriggerStrategy.TIME_ELAPSED)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<String> instants = IntStream.range(0,2).mapToObj(null).collect(Collectors.toList())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSuccessfulCompactionBasedOnTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String finalInstant = HoodieActiveTimeline.createNewInstantTime(10000)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,100),writeClient,metaClient,cfg,false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(HoodieTimeline.COMMIT_ACTION,metaClient.getActiveTimeline().lastInstant().get().getAction())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(instantTime,10)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String instantTime = HoodieActiveTimeline.createNewInstantTime()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(3,60,CompactionTriggerStrategy.NUM_COMMITS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HoodieReadClient readClient = getHoodieReadClient(cfg.getBasePath())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,instants,records,cfg,true,new ArrayList<>())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(3,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(2,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(HoodieActiveTimeline.createNewInstantTime(),100)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testCompactionIsNotScheduledEarly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testSuccessfulCompactionBasedOnTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
16->15 [style = bold, label=""];
7->3 [style = solid, label="cfg"];
7->16 [style = dashed, label="0"];
8->6 [style = solid, label="instantTime"];
8->15 [style = dashed, label="0"];
0->2 [style = bold, label=""];
8->6 [style = bold, label=""];
20->17 [style = solid, label="readClient"];
18->2 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
5->17 [style = bold, label=""];
14->4 [style = solid, label="metaClient"];
3->0 [style = bold, label=""];
1->11 [style = bold, label=""];
20->5 [style = bold, label=""];
19->16 [style = bold, label=""];
6->5 [style = bold, label=""];
0->4 [style = solid, label="finalInstant"];
0->14 [style = bold, label=""];
7->4 [style = solid, label="cfg"];
2->14 [style = dashed, label="0"];
13->7 [style = bold, label=""];
15->20 [style = bold, label=""];
5->17 [style = solid, label="instants"];
5->3 [style = solid, label="readClient"];
8->3 [style = solid, label="instantTime"];
15->17 [style = solid, label="records"];
16->17 [style = solid, label="cfg"];
4->12 [style = bold, label=""];
6->3 [style = solid, label="records"];
9->12 [style = dashed, label="0"];
9->1 [style = bold, label=""];
2->4 [style = solid, label="metaClient"];
17->18 [style = bold, label=""];
14->4 [style = bold, label=""];
}
