digraph {
5 [style = filled, label = "final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics,CLIENT_ID,StreamsConfig.METRICS_LATEST,mockTime)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expect(consumer.groupMetadata()).andStubReturn(consumerGroupMetadata)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "thread.setNow(mockTime.milliseconds())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "props.setProperty(StreamsConfig.STATE_DIR_CONFIG,stateDir)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "thread.maybeCommit()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.replay(consumer,consumerGroupMetadata)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ConsumerGroupMetadata consumerGroupMetadata = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "thread.maybeCommit()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldNotCommitBeforeTheCommitInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "thread.setNow(mockTime.milliseconds())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final StreamThread thread = new StreamThread(mockTime,config,null,consumer,consumer,null,null,taskManager,streamsMetrics,new TopologyMetadata(internalTopologyBuilder,config),CLIENT_ID,new LogContext(\"\"),new AtomicInteger(),new AtomicLong(Long.MAX_VALUE),null,HANDLER,null)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "shouldNotCommitBeforeTheCommitInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final StreamsConfig config = new StreamsConfig(props)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Consumer<byte((,byte((> consumer = EasyMock.createNiceMock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final StreamThread thread = new StreamThread(mockTime,config,null,consumer,consumer,null,null,taskManager,streamsMetrics,internalTopologyBuilder,CLIENT_ID,new LogContext(\"\"),new AtomicInteger(),new AtomicLong(Long.MAX_VALUE),null,HANDLER,null)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final TaskManager taskManager = mockTaskManagerCommit(consumer,1,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final long commitInterval = 1000L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verify(taskManager)@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mockTime.sleep(commitInterval - 10L)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "shouldNotCauseExceptionIfNothingCommitted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final TaskManager taskManager = mockTaskManagerCommit(consumer,1,1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Properties props = configProps(false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "props.setProperty(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG,Long.toString(commitInterval))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expect(consumerGroupMetadata.groupInstanceId()).andReturn(Optional.empty())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->10 [style = solid, label="taskManager"];
5->20 [style = solid, label="streamsMetrics"];
6->3 [style = bold, label=""];
5->10 [style = bold, label=""];
15->23 [style = bold, label=""];
11->6 [style = solid, label="consumerGroupMetadata"];
4->14 [style = bold, label=""];
2->23 [style = solid, label="consumer"];
20->17 [style = bold, label=""];
23->5 [style = bold, label=""];
12->19 [style = solid, label="commitInterval"];
5->20 [style = bold, label=""];
17->9 [style = bold, label=""];
11->6 [style = bold, label=""];
0->8 [style = solid, label="props"];
23->18 [style = solid, label="taskManager"];
10->17 [style = bold, label=""];
3->15 [style = bold, label=""];
12->0 [style = bold, label=""];
1->13 [style = bold, label=""];
7->18 [style = solid, label="taskManager"];
15->5 [style = bold, label=""];
21->12 [style = bold, label=""];
11->15 [style = solid, label="consumerGroupMetadata"];
8->10 [style = solid, label="config"];
8->2 [style = bold, label=""];
3->7 [style = bold, label=""];
23->10 [style = solid, label="taskManager"];
0->1 [style = bold, label=""];
22->12 [style = bold, label=""];
12->13 [style = solid, label="commitInterval"];
2->10 [style = solid, label="consumer"];
2->7 [style = solid, label="consumer"];
7->20 [style = solid, label="taskManager"];
9->19 [style = bold, label=""];
7->15 [style = bold, label=""];
10->20 [style = dashed, label="0"];
14->18 [style = bold, label=""];
2->20 [style = solid, label="consumer"];
19->4 [style = bold, label=""];
2->15 [style = solid, label="consumer"];
13->8 [style = bold, label=""];
8->20 [style = solid, label="config"];
16->12 [style = bold, label=""];
2->11 [style = bold, label=""];
5->10 [style = solid, label="streamsMetrics"];
}
