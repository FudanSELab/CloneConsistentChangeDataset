digraph {
5 [style = filled, label = "AbstractMessageWrapper message = builder.mergeFrom(TestUtil.getPackedSet().toByteString(),ExtensionRegistryLite.getEmptyRegistry()).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testParseUnpackedToPacked['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "AbstractMessageWrapper message = builder.mergeFrom(TestUtil.getUnpackedSet().toByteString()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TestUtil.assertPackedFieldsSet((TestPackedTypes)message.wrappedMessage)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "AbstractMessageWrapper message = builder.mergeFrom(TestUtil.getPackedSet().toByteString()).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testPackedParsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "AbstractMessageWrapper.Builder builder = new AbstractMessageWrapper.Builder(TestPackedTypes.newBuilder())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testPackedParsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6->1 [style = bold, label=""];
5->1 [style = bold, label=""];
4->3 [style = bold, label=""];
3->6 [style = bold, label=""];
3->5 [style = bold, label=""];
0->5 [style = dashed, label="0"];
0->1 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
0->6 [style = dashed, label="0"];
}
