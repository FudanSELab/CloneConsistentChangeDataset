digraph {
13 [style = filled, label = "errorReentry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SerializedSubscriber<Integer> sobs = new SerializedSubscriber<Integer>(ts)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>(){@Override public void onNext(Integer v){serial.get().onError(new TestException())serial.get().onError(new TestException())super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@176984dv}}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sobs.onSubscribe(Disposable.empty())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "sobs.onSubscribe(Disposables.empty())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "SerializedObserver<Integer> sobs = new SerializedObserver<Integer>(to)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sobs.onNext(1)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sobs.onSubscribe(new BooleanSubscription())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TestHelper.assertUndeliverable(errors,0,)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "completeReentry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "{RxJavaPlugins.reset()}@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sobs.onNext(1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "serial.set(sobs)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "serial.set(sobs)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "to.assertNoErrors()@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Throwable> errors = TestHelper.trackPluginErrors()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final AtomicReference<Observer<Integer>> serial = new AtomicReference<Observer<Integer>>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final AtomicReference<Subscriber<Integer>> serial = new AtomicReference<Subscriber<Integer>>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>(){@Override public void onNext(Integer v){serial.get().onComplete()serial.get().onComplete()super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@17697f6v}}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "completeReentry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ts.assertValue(1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ts.assertError()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
16->21 [style = solid, label="errors"];
4->18 [style = dashed, label="0"];
6->21 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
2->20 [style = dashed, label="0"];
4->17 [style = bold, label=""];
5->9 [style = bold, label=""];
9->2 [style = bold, label=""];
4->6 [style = bold, label=""];
19->20 [style = solid, label="ts"];
19->20 [style = bold, label=""];
2->8 [style = solid, label="sobs"];
9->2 [style = solid, label="to"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
15->3 [style = bold, label=""];
3->4 [style = bold, label=""];
13->16 [style = bold, label=""];
8->0 [style = bold, label=""];
11->5 [style = bold, label=""];
20->3 [style = solid, label="sobs"];
10->8 [style = bold, label=""];
7->15 [style = dashed, label="0"];
7->10 [style = dashed, label="0"];
2->7 [style = bold, label=""];
18->21 [style = bold, label=""];
12->19 [style = bold, label=""];
20->15 [style = bold, label=""];
16->12 [style = bold, label=""];
17->18 [style = bold, label=""];
21->14 [style = bold, label=""];
}
