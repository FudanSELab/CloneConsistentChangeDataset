digraph {
7 [style = filled, label = "int i = 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "compactSegments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Interval compactInterval = new Interval(minStart,maxEnd)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "compactSegments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final String version = \"newVersion_\" + compactVersionSuffix++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "compactionPartitionsSpec = tuningConfig.getPartitionsSpec()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "i < 2@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "timeline.add(compactInterval,compactSegment.getVersion(),compactSegment.getShardSpec().createChunk(compactSegment))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "minStart = segment.getInterval().getStart()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<DataSegment> segments@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "this.interval = new Interval(minStart,maxEnd)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DataSegment compactSegment = new DataSegment(segments.get(0).getDataSource(),compactInterval,version,null,segments.get(0).getDimensions(),segments.get(0).getMetrics(),new NumberedShardSpec(i,0),new CompactionState(new DynamicPartitionsSpec(tuningConfig.getMaxRowsPerSegment(),tuningConfig.getMaxTotalRowsOr(Long.MAX_VALUE)),ImmutableMap.of(\"bitmap\",ImmutableMap.of(\"type\",\"roaring\",\"compressRunOnSerialization\",true),\"dimensionCompression\",\"lz4\",\"metricCompression\",\"lz4\",\"longEncoding\",\"longs\")),1,segmentSize)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "List<DataSegment> segments@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "compactionPartitionsSpec = new DynamicPartitionsSpec(tuningConfig.getPartitionsSpec().getMaxRowsPerSegment(),((DynamicPartitionsSpec)tuningConfig.getPartitionsSpec()).getMaxTotalRowsOr(Long.MAX_VALUE))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "this.segments = segments@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "tuningConfig.getPartitionsSpec() instanceof DynamicPartitionsSpec@@@18@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final PartitionsSpec compactionPartitionsSpec@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "segments.forEach(null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Preconditions.checkArgument(segments != null && !segments.isEmpty())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ClientCompactionTaskQueryTuningConfig tuningConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "maxEnd = segment.getInterval().getEnd()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "QueueEntry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "VersionedIntervalTimeline<String,DataSegment> timeline@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "segment.getInterval().getStart().compareTo(minStart) < 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "segment.getInterval().getEnd().compareTo(maxEnd) > 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long segmentSize = segments.stream().mapToLong(null).sum() / 2@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Preconditions.checkArgument(segments.size() > 1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DateTime minStart = DateTimes.MAX,maxEnd = DateTimes.MIN@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DataSegment compactSegment = new DataSegment(segments.get(0).getDataSource(),compactInterval,version,null,segments.get(0).getDimensions(),segments.get(0).getMetrics(),shardSpecFactory.apply(i,2),new CompactionState(compactionPartitionsSpec,ImmutableMap.of(\"bitmap\",ImmutableMap.of(\"type\",\"roaring\",\"compressRunOnSerialization\",true),\"dimensionCompression\",\"lz4\",\"metricCompression\",\"lz4\",\"longEncoding\",\"longs\")),1,segmentSize)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "List<DataSegment> segments@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ClientCompactionTaskQueryTuningConfig tuningConfig@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13->6 [style = dotted, label="true"];
8->30 [style = bold, label=""];
19->20 [style = solid, label="compactionPartitionsSpec"];
8->10 [style = bold, label=""];
0->16 [style = bold, label=""];
6->30 [style = solid, label="minStart"];
4->14 [style = bold, label=""];
7->1 [style = bold, label=""];
2->20 [style = dashed, label="0"];
2->15 [style = solid, label="compactSegment"];
12->20 [style = solid, label="i"];
9->20 [style = solid, label="segmentSize"];
7->2 [style = solid, label="i"];
7->20 [style = solid, label="i"];
25->23 [style = bold, label=""];
14->13 [style = solid, label="minStart"];
7->1 [style = solid, label="i"];
25->23 [style = dotted, label="true"];
30->27 [style = bold, label=""];
4->29 [style = dashed, label="0"];
10->2 [style = solid, label="compactInterval"];
1->20 [style = bold, label=""];
31->29 [style = bold, label=""];
11->8 [style = solid, label="maxEnd"];
16->2 [style = solid, label="version"];
10->15 [style = solid, label="compactInterval"];
9->7 [style = bold, label=""];
25->19 [style = dotted, label="false"];
12->1 [style = bold, label=""];
26->4 [style = bold, label=""];
26->22 [style = dotted, label="true"];
11->10 [style = solid, label="maxEnd"];
18->5 [style = dotted, label="true"];
7->12 [style = solid, label="i"];
14->8 [style = solid, label="maxEnd"];
16->20 [style = solid, label="version"];
6->10 [style = solid, label="minStart"];
10->30 [style = dashed, label="0"];
18->4 [style = bold, label=""];
12->2 [style = solid, label="i"];
28->29 [style = solid, label="segments"];
31->28 [style = dotted, label="true"];
11->10 [style = bold, label=""];
26->21 [style = dotted, label="true"];
24->25 [style = bold, label=""];
1->15 [style = dotted, label="true"];
26->17 [style = dotted, label="true"];
10->0 [style = bold, label=""];
2->15 [style = bold, label=""];
11->13 [style = bold, label=""];
6->8 [style = bold, label=""];
25->19 [style = bold, label=""];
29->14 [style = bold, label=""];
12->1 [style = solid, label="i"];
1->12 [style = dotted, label="true"];
8->11 [style = dotted, label="true"];
18->3 [style = dotted, label="true"];
23->20 [style = solid, label="compactionPartitionsSpec"];
14->10 [style = solid, label="maxEnd"];
6->13 [style = solid, label="minStart"];
9->2 [style = solid, label="segmentSize"];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
23->7 [style = bold, label=""];
28->27 [style = solid, label="segments"];
14->13 [style = bold, label=""];
13->6 [style = bold, label=""];
13->8 [style = bold, label=""];
1->2 [style = dotted, label="true"];
20->15 [style = solid, label="compactSegment"];
18->17 [style = dotted, label="true"];
14->30 [style = solid, label="maxEnd"];
8->11 [style = bold, label=""];
20->15 [style = bold, label=""];
19->7 [style = bold, label=""];
10->20 [style = solid, label="compactInterval"];
9->24 [style = bold, label=""];
16->9 [style = bold, label=""];
11->30 [style = bold, label=""];
11->30 [style = solid, label="maxEnd"];
8->13 [style = bold, label=""];
1->20 [style = dotted, label="true"];
}
