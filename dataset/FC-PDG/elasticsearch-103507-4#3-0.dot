digraph {
2 [style = filled, label = "QueryStringQueryBuilder query = queryStringQuery(\"test\").defaultField(BINARY_FIELD_NAME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"Field (mapped_binary( of type (binary( does not support match queries\",e.getMessage())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(query.toQuery(context),instanceOf())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "QueryShardException e = expectThrows(,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "query.lenient(true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "QueryStringQueryBuilder query = queryStringQuery(\"2,3\").defaultField(GEO_POINT_FIELD_NAME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testExactGeo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "QueryShardContext context = createShardContext()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testLenientFlag['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "query.toQuery(context)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testLenientFlag['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"Field (mapped_binary( of type (binary does not support match queries\",e.getMessage())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"Geometry fields do not support exact searching, use dedicated geometry queries instead: \" + \"(mapped_geo_point(\",e.getMessage())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
5->10 [style = solid, label="context"];
12->5 [style = bold, label=""];
3->7 [style = dashed, label="0"];
9->4 [style = bold, label=""];
6->11 [style = dashed, label="0"];
7->4 [style = bold, label=""];
11->9 [style = bold, label=""];
3->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
1->2 [style = bold, label=""];
5->11 [style = bold, label=""];
6->7 [style = bold, label=""];
2->5 [style = bold, label=""];
5->0 [style = solid, label="context"];
}
