digraph {
7 [style = filled, label = "assertEquals(ComponentVerifierExtension.Result.Status.ERROR,result.getStatus())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ComponentVerifierExtension verifier = component.getExtension().orElseThrow(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY,parameters)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testConnectivityWebhook['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Component component = context().getComponent(\"slack\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,Object> parameters = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Component component = context().getComponent(\"paho\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(ComponentVerifierExtension.Result.Status.ERROR,result.getStatus())@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "parameters.put(\"webhookUrl\",\"l\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "parameters.put(\"brokerUrl\",\"l\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testConnectivity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testConnectivity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
1->10 [style = dashed, label="0"];
2->6 [style = solid, label="parameters"];
9->11 [style = bold, label=""];
6->7 [style = bold, label=""];
5->0 [style = bold, label=""];
8->5 [style = bold, label=""];
2->10 [style = bold, label=""];
5->11 [style = dashed, label="0"];
3->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
10->6 [style = bold, label=""];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
}
