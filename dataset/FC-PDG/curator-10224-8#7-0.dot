digraph {
11 [style = filled, label = "assertTrue(node.waitForInitialCreate(timing.session(),TimeUnit.MILLISECONDS))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testForcedDeleteOfTouchNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < 5@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertNotNull(client.checkExists().forPath(\"/test\"))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(node.waitForInitialCreate(timing.session(),TimeUnit.MILLISECONDS))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "node.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread.sleep(ttlMs)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "++i@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertNull(client.checkExists().forPath(\"/test\"))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Thread.sleep(ttlMs + (ttlMs / 2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testBasic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "timing.sleepABit()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testForcedDeleteOfTouchNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertNotNull(client.checkExists().forPath(\"/test\"))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "timing.sleepABit()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.delete().quietly().forPath(ZKPaths.makePath(\"test\",PersistentTtlNode.DEFAULT_CHILD_NODE_NAME))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertNotNull(client.checkExists().forPath(\"/test\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->11 [style = dashed, label="0"];
7->8 [style = bold, label=""];
13->7 [style = bold, label=""];
8->4 [style = bold, label=""];
9->0 [style = dotted, label="true"];
3->16 [style = dashed, label="0"];
10->9 [style = bold, label=""];
1->12 [style = bold, label=""];
9->16 [style = bold, label=""];
4->5 [style = bold, label=""];
9->3 [style = bold, label=""];
9->2 [style = bold, label=""];
5->9 [style = bold, label=""];
9->17 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
0->10 [style = bold, label=""];
8->11 [style = bold, label=""];
15->14 [style = bold, label=""];
3->0 [style = bold, label=""];
5->9 [style = solid, label="i"];
9->16 [style = dotted, label="true"];
9->3 [style = dotted, label="true"];
16->17 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
1->2 [style = bold, label=""];
2->15 [style = bold, label=""];
17->10 [style = bold, label=""];
11->5 [style = bold, label=""];
2->12 [style = dashed, label="0"];
18->7 [style = bold, label=""];
}
