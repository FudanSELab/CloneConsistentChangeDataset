digraph {
4 [style = filled, label = "long checkpointId = 42L@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{subtaskCheckpointCoordinator.notifyCheckpointComplete(newCheckpointId,operatorChain,null)assertEquals(newCheckpointId,stateManager.getNotifiedCompletedCheckpointId())}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "subtaskCheckpointCoordinator.checkpointState(new CheckpointMetaData(checkpointId,System.currentTimeMillis()),CheckpointOptions.forCheckpointWithDefaultLocation(),new CheckpointMetricsBuilder(),operatorChain,null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "subtaskCheckpointCoordinator.notifyCheckpointAborted(checkpointId,operatorChain,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MockEnvironment mockEnvironment = MockEnvironment.builder().setTaskStateManager(stateManager).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,subtaskCheckpointCoordinator.getAbortedCheckpointSize())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testNotifyCheckpointComplete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testNotifyCheckpointAbortedAfterAsyncPhase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "long newCheckpointId = checkpointId + 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(checkpointId,stateManager.getNotifiedAbortedCheckpointId())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final OperatorChain<?,?> operatorChain = getOperatorChain(mockEnvironment)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{subtaskCheckpointCoordinator.notifyCheckpointComplete(checkpointId,operatorChain,null)assertEquals(checkpointId,stateManager.getNotifiedCompletedCheckpointId())}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "subtaskCheckpointCoordinator.checkpointState(new CheckpointMetaData(checkpointId,System.currentTimeMillis()),CheckpointOptions.forCheckpointWithDefaultLocation(),new CheckpointMetricsBuilder(),operatorChain,false,null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TestTaskStateManager stateManager = new TestTaskStateManager()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testNotifyCheckpointAbortedAfterAsyncPhase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
3->10 [style = solid, label="operatorChain"];
2->6 [style = bold, label=""];
4->13 [style = bold, label=""];
1->3 [style = bold, label=""];
3->12 [style = solid, label="operatorChain"];
11->12 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
3->13 [style = solid, label="operatorChain"];
8->1 [style = bold, label=""];
4->11 [style = solid, label="checkpointId"];
5->2 [style = bold, label=""];
4->10 [style = solid, label="checkpointId"];
4->7 [style = solid, label="checkpointId"];
3->2 [style = solid, label="operatorChain"];
5->10 [style = dashed, label="0"];
0->8 [style = bold, label=""];
3->5 [style = solid, label="operatorChain"];
4->2 [style = solid, label="checkpointId"];
4->13 [style = solid, label="checkpointId"];
1->3 [style = solid, label="mockEnvironment"];
11->12 [style = solid, label="newCheckpointId"];
10->2 [style = bold, label=""];
14->8 [style = bold, label=""];
6->7 [style = bold, label=""];
4->5 [style = solid, label="checkpointId"];
4->5 [style = bold, label=""];
}
