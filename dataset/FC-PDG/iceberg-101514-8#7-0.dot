digraph {
28 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return ROWS_CANNOT_MATCH@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "return ROWS_MIGHT_MATCH@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "gt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return ROWS_CANNOT_MATCH@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return ROWS_MUST_MATCH@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "notEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "containsNullsOnly(id)@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cmp < 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return ROWS_MUST_MATCH@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return ROWS_MUST_MATCH@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "cmp <= 0@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cmp > 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "containsNullsOnly(id) || containsNaNsOnly(id)@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "gt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19->3 [style = bold, label=""];
7->0 [style = solid, label="upper"];
3->24 [style = bold, label=""];
10->21 [style = bold, label=""];
28->0 [style = solid, label="upper"];
26->21 [style = bold, label=""];
21->3 [style = bold, label=""];
8->9 [style = bold, label=""];
10->1 [style = dotted, label="true"];
13->1 [style = dotted, label="true"];
3->28 [style = dotted, label="true"];
11->3 [style = solid, label="id"];
3->2 [style = bold, label=""];
21->18 [style = dotted, label="true"];
7->28 [style = dashed, label="0"];
16->27 [style = solid, label="field"];
11->13 [style = solid, label="id"];
4->11 [style = bold, label=""];
20->15 [style = bold, label=""];
3->20 [style = dotted, label="true"];
9->2 [style = bold, label=""];
3->8 [style = dotted, label="true"];
11->7 [style = solid, label="id"];
0->8 [style = bold, label=""];
11->29 [style = solid, label="id"];
11->16 [style = bold, label=""];
11->28 [style = solid, label="id"];
17->3 [style = bold, label=""];
14->11 [style = bold, label=""];
3->7 [style = bold, label=""];
15->24 [style = bold, label=""];
21->29 [style = bold, label=""];
14->12 [style = dotted, label="true"];
25->22 [style = dotted, label="true"];
10->3 [style = bold, label=""];
8->20 [style = dashed, label="0"];
25->11 [style = bold, label=""];
0->8 [style = solid, label="cmp"];
3->0 [style = dotted, label="true"];
0->20 [style = solid, label="cmp"];
14->6 [style = dotted, label="true"];
11->10 [style = solid, label="id"];
10->1 [style = bold, label=""];
0->20 [style = bold, label=""];
20->15 [style = dotted, label="true"];
1->3 [style = bold, label=""];
11->10 [style = bold, label=""];
8->2 [style = bold, label=""];
11->21 [style = solid, label="id"];
10->26 [style = dotted, label="true"];
2->24 [style = dashed, label="0"];
18->19 [style = bold, label=""];
18->19 [style = solid, label="cmp"];
19->17 [style = bold, label=""];
27->10 [style = bold, label=""];
7->0 [style = bold, label=""];
9->15 [style = dashed, label="0"];
16->27 [style = bold, label=""];
11->16 [style = solid, label="id"];
29->18 [style = solid, label="lower"];
11->13 [style = bold, label=""];
21->19 [style = dotted, label="true"];
20->24 [style = bold, label=""];
13->1 [style = bold, label=""];
13->3 [style = bold, label=""];
4->5 [style = dotted, label="true"];
21->29 [style = dotted, label="true"];
19->17 [style = dotted, label="true"];
11->27 [style = solid, label="id"];
3->7 [style = dotted, label="true"];
29->18 [style = bold, label=""];
4->6 [style = dotted, label="true"];
3->28 [style = bold, label=""];
25->23 [style = dotted, label="true"];
10->13 [style = dashed, label="0"];
28->0 [style = bold, label=""];
10->26 [style = bold, label=""];
1->26 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
8->9 [style = dotted, label="true"];
}
