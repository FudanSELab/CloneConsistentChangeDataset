digraph {
38 [style = filled, label = "Assert.assertEquals(3,count)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertNotNull(operatorStateInputs)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(mockingBackend).createKeyedStateBackend(any(),any(),any(),eq(typeSerializer),anyInt(),any(),any())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "AbstractStreamOperator<?> streamOperator = mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "StreamTaskStateInitializer streamTaskStateManager = streamTaskStateManager(mockingBackend,jobManagerTaskRestore,false)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "StateBackend mockingBackend = spy(new StateBackend(){@Override public StreamStateHandle resolveCheckpoint(String pointer){return null}@Override public CheckpointStorage createCheckpointStorage(JobID jobId){return null}@Override public AbstractKeyedStateBackend<K> createKeyedStateBackend(Environment env,JobID jobID,String operatorIdentifier,TypeSerializer<K> keySerializer,int numberOfKeyGroups,KeyGroupRange keyGroupRange,TaskKvStateRegistry kvStateRegistry){return mock()}@Override public OperatorStateBackend createOperatorStateBackend(Environment env,String operatorIdentifier){return mock()}})@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertNotNull(keyedStateBackend)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verify(operatorStateBackend).restore(eq(operatorSubtaskState.getManagedOperatorState()))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "OperatorID operatorID = new OperatorID(47L,11L)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "InternalTimeServiceManager<?,?> timeServiceManager = stateContext.internalTimerServiceManager()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "AbstractKeyedStateBackend<?> keyedStateBackend = stateContext.keyedStateBackend()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "verify(stateBackend).createOperatorStateBackend(any(),any())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertNotNull(streamFactory)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "CloseableIterable<KeyGroupStatePartitionStreamProvider> keyedStateInputs = stateContext.rawKeyedStateInputs()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(1,count)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "verify(keyedStateBackend).restore(eq(operatorSubtaskState.getManagedKeyedState()))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JobManagerTaskRestore jobManagerTaskRestore = new JobManagerTaskRestore(0L,taskStateSnapshot)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "MemoryStateBackend stateBackend = spy(new MemoryStateBackend(1024))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "++count@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int count = 0@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "InternalTimeServiceManager<?,?> timeServiceManager = stateContext.internalTimerServiceManager()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(true,stateContext.isRestored())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.fail()@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "CloseableRegistry closeableRegistry = new CloseableRegistry()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testWithRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "CheckpointStreamFactory streamFactory = stateContext.checkpointStreamFactory()@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new OperatorStateHandle(Collections.singletonMap(\"a\",new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bc3454,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)),CheckpointTestUtils.createDummyStreamStateHandle(random)),new OperatorStateHandle(Collections.singletonMap(\"_default_\",new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bc346a,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)),CheckpointTestUtils.createDummyStreamStateHandle(random)),CheckpointTestUtils.createDummyKeyGroupStateHandle(random),CheckpointTestUtils.createDummyKeyGroupStateHandle(random))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "verify(stateBackend).createStreamFactory(any(),any())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkCloseablesRegistered(closeableRegistry,operatorStateBackend,keyedStateBackend,keyedStateInputs,operatorStateInputs)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "StreamOperatorStateContext stateContext = streamTaskStateManager.streamOperatorStateContext(streamOperator.getOperatorID(),streamOperator.getClass().getSimpleName(),streamOperator,typeSerializer,closeableRegistry)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "CloseableIterable<StatePartitionStreamProvider> operatorStateInputs = stateContext.rawOperatorStateInputs()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "verify(mockingBackend).createOperatorStateBackend(any(),any())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertNotNull(timeServiceManager)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "CloseableRegistry closeableRegistry = new CloseableRegistry()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkCloseablesRegistered(closeableRegistry,operatorStateBackend,keyedStateBackend,keyedStateInputs,operatorStateInputs)@@@59@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testWithRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testNoRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verify(mockingBackend).createStreamFactory(any(),any())@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "CloseableIterable<KeyGroupStatePartitionStreamProvider> keyedStateInputs = stateContext.rawKeyedStateInputs()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "TypeSerializer<?> typeSerializer = new IntSerializer()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "taskStateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "verify(stateBackend).createKeyedStateBackend(any(),any(),any(),eq(typeSerializer),anyInt(),any(),any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "AbstractKeyedStateBackend<?> keyedStateBackend = stateContext.keyedStateBackend()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "CheckpointStreamFactory streamFactory = stateContext.checkpointStreamFactory()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertNotNull(operatorStateInputs)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.fail()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "TaskStateSnapshot taskStateSnapshot = new TaskStateSnapshot()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "when(streamOperator.getOperatorID()).thenReturn(operatorID)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "OperatorStateBackend operatorStateBackend = stateContext.operatorStateBackend()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "OperatorStateBackend operatorStateBackend = stateContext.operatorStateBackend()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "count = 0@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(false,stateContext.isRestored())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Assert.assertNotNull(operatorStateBackend)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertNotNull(keyedStateInputs)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "StreamTaskStateInitializer streamTaskStateManager = streamTaskStateManager(stateBackend,null,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Random random = new Random(0x42)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertNotNull(operatorStateBackend)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertNotNull(keyedStateBackend)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertNotNull(keyedStateInputs)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertNull(timeServiceManager)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "CloseableIterable<StatePartitionStreamProvider> operatorStateInputs = stateContext.rawOperatorStateInputs()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "++count@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertNotNull(streamFactory)@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->11 [style = solid, label="closeableRegistry"];
29->15 [style = bold, label=""];
52->44 [style = bold, label=""];
61->56 [style = bold, label=""];
59->9 [style = bold, label=""];
0->26 [style = solid, label="random"];
47->59 [style = solid, label="timeServiceManager"];
8->6 [style = bold, label=""];
7->11 [style = solid, label="typeSerializer"];
7->14 [style = bold, label=""];
1->16 [style = solid, label="jobManagerTaskRestore"];
22->16 [style = solid, label="mockingBackend"];
22->42 [style = dashed, label="0"];
36->0 [style = bold, label=""];
30->28 [style = bold, label=""];
4->7 [style = dashed, label="0"];
40->7 [style = solid, label="keyedStateBackend"];
27->7 [style = bold, label=""];
40->47 [style = bold, label=""];
31->30 [style = bold, label=""];
24->17 [style = bold, label=""];
54->53 [style = bold, label=""];
23->12 [style = bold, label=""];
14->10 [style = solid, label="closeableRegistry"];
14->11 [style = bold, label=""];
17->21 [style = bold, label=""];
24->60 [style = dashed, label="0"];
7->11 [style = bold, label=""];
11->48 [style = bold, label=""];
9->33 [style = bold, label=""];
35->50 [style = dashed, label="0"];
22->9 [style = bold, label=""];
44->50 [style = bold, label=""];
52->44 [style = solid, label="closeableRegistry"];
2->4 [style = bold, label=""];
33->27 [style = bold, label=""];
43->45 [style = bold, label=""];
5->25 [style = bold, label=""];
45->27 [style = solid, label="operatorStateInputs"];
17->10 [style = solid, label="operatorStateBackend"];
39->22 [style = bold, label=""];
47->57 [style = bold, label=""];
37->25 [style = solid, label="streamFactory"];
21->10 [style = solid, label="keyedStateBackend"];
62->44 [style = solid, label="typeSerializer"];
6->38 [style = bold, label=""];
23->37 [style = bold, label=""];
58->51 [style = bold, label=""];
16->33 [style = bold, label=""];
1->16 [style = bold, label=""];
49->46 [style = bold, label=""];
40->53 [style = solid, label="keyedStateBackend"];
5->59 [style = dashed, label="0"];
21->32 [style = solid, label="keyedStateBackend"];
56->40 [style = bold, label=""];
19->22 [style = bold, label=""];
24->3 [style = bold, label=""];
12->31 [style = bold, label=""];
26->20 [style = bold, label=""];
45->7 [style = solid, label="operatorStateInputs"];
8->38 [style = solid, label="count"];
21->23 [style = bold, label=""];
43->7 [style = solid, label="keyedStateInputs"];
34->29 [style = bold, label=""];
3->61 [style = dashed, label="0"];
42->49 [style = solid, label="stateBackend"];
51->62 [style = bold, label=""];
45->55 [style = bold, label=""];
12->10 [style = solid, label="keyedStateInputs"];
20->1 [style = bold, label=""];
33->11 [style = solid, label="streamOperator"];
17->28 [style = solid, label="operatorStateBackend"];
62->50 [style = solid, label="typeSerializer"];
37->12 [style = bold, label=""];
35->24 [style = bold, label=""];
28->32 [style = bold, label=""];
29->18 [style = solid, label="count"];
60->61 [style = bold, label=""];
50->60 [style = bold, label=""];
5->13 [style = bold, label=""];
56->7 [style = solid, label="operatorStateBackend"];
46->51 [style = solid, label="operatorID"];
7->35 [style = solid, label="typeSerializer"];
31->2 [style = solid, label="operatorStateInputs"];
57->43 [style = bold, label=""];
3->17 [style = bold, label=""];
18->8 [style = bold, label=""];
12->13 [style = solid, label="keyedStateInputs"];
9->27 [style = solid, label="operatorID"];
4->34 [style = bold, label=""];
13->2 [style = bold, label=""];
9->36 [style = bold, label=""];
32->5 [style = bold, label=""];
9->20 [style = solid, label="operatorID"];
0->26 [style = bold, label=""];
38->10 [style = bold, label=""];
25->13 [style = bold, label=""];
52->7 [style = solid, label="closeableRegistry"];
57->9 [style = solid, label="streamFactory"];
62->52 [style = bold, label=""];
56->54 [style = solid, label="operatorStateBackend"];
30->55 [style = dashed, label="0"];
23->5 [style = solid, label="timeServiceManager"];
46->58 [style = bold, label=""];
43->33 [style = solid, label="keyedStateInputs"];
15->18 [style = bold, label=""];
11->35 [style = bold, label=""];
53->59 [style = bold, label=""];
36->1 [style = solid, label="taskStateSnapshot"];
31->10 [style = solid, label="operatorStateInputs"];
42->49 [style = bold, label=""];
55->54 [style = bold, label=""];
26->20 [style = solid, label="operatorSubtaskState"];
58->44 [style = solid, label="streamOperator"];
41->42 [style = bold, label=""];
}
