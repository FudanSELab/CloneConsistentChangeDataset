digraph {
11 [style = filled, label = "assertThat(\"appending zeros to key should still be in range\",lower.compareTo(WindowKeySchema.toStoreKeyBinary(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c732f1,Long.MAX_VALUE - 1,0)) < 0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testUpperBoundWithLargeTimestamps['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(upper,equalTo(Bytes.wrap(SessionKeySchema.toBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c73252),new SessionWindow(Long.MAX_VALUE,Long.MAX_VALUE))))))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final Bytes upper = sessionKeySchema.upperRange(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c7326c),Long.MAX_VALUE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(\"shorter key with max timestamp should be in range\",upper.compareTo(SessionKeySchema.toBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c732a3),new SessionWindow(Long.MAX_VALUE,Long.MAX_VALUE)))) >= 0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final Bytes lower = windowKeySchema.lowerRange(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c732da),Long.MAX_VALUE - 1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(upper,equalTo(SessionKeySchema.toBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c732c0),new SessionWindow(Long.MAX_VALUE,Long.MAX_VALUE)))))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(\"shorter key with max timestamp should be in range\",upper.compareTo(Bytes.wrap(SessionKeySchema.toBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c73211),new SessionWindow(Long.MAX_VALUE,Long.MAX_VALUE))))) >= 0)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertThat(\"shorter key with max timestamp should be in range\",upper.compareTo(Bytes.wrap(SessionKeySchema.toBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c73232),new SessionWindow(Long.MAX_VALUE,Long.MAX_VALUE))))) >= 0)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testLowerBoundMatchesTrailingZeros['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testUpperBoundWithLargeTimestamps['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(lower,equalTo(WindowKeySchema.toStoreKeyBinary(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c73319,0,0)))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(\"shorter key with max timestamp should be in range\",upper.compareTo(SessionKeySchema.toBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c73285),new SessionWindow(Long.MAX_VALUE,Long.MAX_VALUE)))) >= 0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10->9 [style = solid, label="lower"];
5->8 [style = bold, label=""];
6->5 [style = bold, label=""];
2->8 [style = solid, label="upper"];
1->2 [style = bold, label=""];
12->10 [style = bold, label=""];
3->6 [style = dashed, label="0"];
2->10 [style = dashed, label="0"];
2->4 [style = solid, label="upper"];
0->5 [style = dashed, label="0"];
11->9 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
2->6 [style = bold, label=""];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
4->8 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
