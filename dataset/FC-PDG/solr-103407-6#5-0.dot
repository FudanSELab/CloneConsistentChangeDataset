digraph {
7 [style = filled, label = "Object start@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Object end@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertEquals(\"VALUE: \" + actual.toString(),value,actual.getValue())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String field@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Object value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int numCount@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "G gap@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "B end@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Object gap@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "B start@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertEquals(\"COUNT: \" + actual.toString(),count,actual.getCount())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"#COUNT: \" + actual.toString(),numCount,actual.getCounts().size())@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"END: \" + actual.toString(),end,actual.getEnd())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"NAME: \" + actual.toString(),name,actual.getName())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"#COUNT: \" + actual.toString(),numCount,actual.getCounts().size())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertPivot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "PivotField actual@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int count@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"GAP: \" + actual.toString(),gap,actual.getGap())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int numCount@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) RangeFacet actual@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"END: \" + actual.toString(),end,actual.getEnd())@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"FIELD: \" + actual.toString(),field,actual.getField())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "RangeFacet<B,G> actual@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(\"START: \" + actual.toString(),start,actual.getStart())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2->3 [style = dotted, label="true"];
22->21 [style = dotted, label="true"];
16->19 [style = dotted, label="true"];
6->4 [style = solid, label="name"];
19->8 [style = solid, label="numCount"];
8->10 [style = bold, label=""];
22->25 [style = bold, label=""];
9->20 [style = dashed, label="0"];
25->28 [style = bold, label=""];
2->0 [style = dotted, label="true"];
17->14 [style = solid, label="start"];
22->23 [style = dotted, label="true"];
16->13 [style = dotted, label="true"];
16->18 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
9->10 [style = solid, label="end"];
16->15 [style = dotted, label="true"];
16->20 [style = dotted, label="true"];
28->26 [style = bold, label=""];
27->28 [style = solid, label="value"];
22->24 [style = dotted, label="true"];
4->26 [style = dashed, label="0"];
2->4 [style = bold, label=""];
24->26 [style = solid, label="count"];
10->5 [style = bold, label=""];
2->9 [style = dotted, label="true"];
2->6 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
2->7 [style = dotted, label="true"];
22->27 [style = dotted, label="true"];
12->14 [style = bold, label=""];
11->8 [style = bold, label=""];
23->25 [style = solid, label="field"];
20->11 [style = solid, label="end"];
7->11 [style = solid, label="start"];
0->5 [style = solid, label="numCount"];
13->12 [style = solid, label="name"];
4->11 [style = bold, label=""];
16->12 [style = bold, label=""];
3->8 [style = solid, label="gap"];
14->4 [style = bold, label=""];
18->4 [style = solid, label="gap"];
}
