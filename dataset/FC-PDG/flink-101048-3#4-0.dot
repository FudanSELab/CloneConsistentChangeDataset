digraph {
9 [style = filled, label = "assertEquals(\"(null(\",results.toString())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "results = CollectionUtil.iteratorToList(tEnv.sqlQuery(\"select concat('ab',cast(12.34 as decimal(10,5)))\").execute().collect())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"(anbn(\",results.toString())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Row> results = Lists.newArrayList(tEnv.sqlQuery(\"select concat('an', 'bn')\").execute().collect())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "results = CollectionUtil.iteratorToList(tEnv.sqlQuery(\"select concat('ab',cast(null as int))\").execute().collect())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "tableEnv.sqlQuery(\"select current_timestamp,current_date\").execute().collect()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testFunctionsNeedSessionState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"(ab12.34(\",results.toString())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"(2018-01-192019-12-27 17:58:23.385(\",results.toString())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(tEnv.sqlQuery(\"select concat('an', 'bn')\").execute().collect())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "results = CollectionUtil.iteratorToList(tEnv.sqlQuery(\"select concat('ab', cast('cdefghi' as varchar(5)))\").execute().collect())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "tableEnv.unloadModule(\"core\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "results = Lists.newArrayList(tEnv.sqlQuery(\"select concat('ab',cast(12.34 as decimal(10,5)))\").execute().collect())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "tEnv.unloadModule(\"core\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "results = Lists.newArrayList(tEnv.sqlQuery(\"select concat(cast('2018-01-19' as date),cast('2019-12-27 17:58:23.385' as timestamp))\").execute().collect())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "testConstantArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "tableEnv.loadModule(\"hive\",new HiveModule())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "results = CollectionUtil.iteratorToList(tEnv.sqlQuery(\"select concat(cast('2018-01-19' as date),cast('2019-12-27 17:58:23.385' as timestamp))\").execute().collect())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "results = Lists.newArrayList(tEnv.sqlQuery(\"select concat('ab', cast('cdefghi' as varchar(5)))\").execute().collect())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "tEnv.loadModule(\"hive\",new HiveModule())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select mod(-1,2),pmod(-1,2)\").execute().collect())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TableEnvironment tEnv = HiveTestUtils.createTableEnvWithBlinkPlannerBatchMode()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"(-1,1(\",results.toString())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"(abcdefg(\",results.toString())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "tableEnv.loadModule(\"core\",CoreModule.INSTANCE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testConstantArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TableEnvironment tableEnv = HiveTestUtils.createTableEnvWithBlinkPlannerBatchMode()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "results = Lists.newArrayList(tEnv.sqlQuery(\"select concat('ab',cast(null as int))\").execute().collect())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->3 [style = bold, label=""];
6->21 [style = dashed, label="0"];
5->8 [style = bold, label=""];
15->7 [style = bold, label=""];
23->27 [style = bold, label=""];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
20->26 [style = bold, label=""];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
18->11 [style = bold, label=""];
17->9 [style = bold, label=""];
0->16 [style = dashed, label="0"];
8->14 [style = bold, label=""];
7->20 [style = dashed, label="0"];
6->19 [style = bold, label=""];
7->4 [style = bold, label=""];
4->26 [style = dashed, label="0"];
3->16 [style = bold, label=""];
13->11 [style = bold, label=""];
10->7 [style = bold, label=""];
19->8 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
26->21 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
1->17 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
8->2 [style = bold, label=""];
22->20 [style = bold, label=""];
24->25 [style = bold, label=""];
12->18 [style = bold, label=""];
11->17 [style = bold, label=""];
27->24 [style = bold, label=""];
13->18 [style = dashed, label="0"];
2->24 [style = dashed, label="0"];
5->19 [style = dashed, label="0"];
16->12 [style = bold, label=""];
21->23 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
