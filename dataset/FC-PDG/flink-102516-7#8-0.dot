digraph {
4 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"Job Name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "LibraryCacheManager libCache = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"Test Task\",1,1,invokableClass.getName(),new Configuration())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TaskMetricGroup taskMetricGroup = UnregisteredMetricGroups.createUnregisteredTaskMetricGroup()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "NetworkEnvironment networkEnvironment = new NetworkEnvironmentBuilder().build()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),new TestTaskStateManager(),mock(),mock(),mock(),new TestGlobalAggregateManager(),blobService,libCache,mock(),new TestingTaskManagerRuntimeInfo(),taskMetricGroup,consumableNotifier,partitionProducerStateChecker,executor)@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Executor executor = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "PartitionProducerStateChecker partitionProducerStateChecker = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ResultPartitionConsumableNotifier consumableNotifier = new NoOpResultPartitionConsumableNotifier()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(libCache.getClassLoader(any())).thenReturn(ClassLoader.getSystemClassLoader())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),new TestTaskStateManager(),mock(),mock(),mock(),new TestGlobalAggregateManager(),blobService,libCache,mock(),new TestingTaskManagerRuntimeInfo(),taskMetricGroup,consumableNotifier,partitionProducerStateChecker,executor)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "when(libCache.getClassLoader(any())).thenReturn(new TestUserCodeClassLoader())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Class<? extends AbstractInvokable> invokableClass@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ShuffleEnvironment shuffleEnvironment = new NetworkEnvironmentBuilder().build()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->8 [style = solid, label="taskMetricGroup"];
13->6 [style = dotted, label="true"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
10->14 [style = bold, label=""];
9->2 [style = bold, label=""];
17->6 [style = dotted, label="true"];
12->8 [style = solid, label="networkEnvironment"];
5->8 [style = solid, label="libCache"];
8->15 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
4->8 [style = solid, label="jobInformation"];
3->15 [style = bold, label=""];
2->8 [style = solid, label="partitionProducerStateChecker"];
14->15 [style = solid, label="shuffleEnvironment"];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
9->15 [style = solid, label="consumableNotifier"];
14->1 [style = bold, label=""];
10->15 [style = solid, label="executor"];
9->8 [style = solid, label="consumableNotifier"];
5->16 [style = bold, label=""];
17->7 [style = bold, label=""];
10->8 [style = solid, label="executor"];
2->15 [style = solid, label="partitionProducerStateChecker"];
7->5 [style = bold, label=""];
3->15 [style = solid, label="taskInformation"];
12->14 [style = dashed, label="0"];
7->15 [style = solid, label="blobService"];
5->0 [style = bold, label=""];
10->12 [style = bold, label=""];
13->7 [style = bold, label=""];
11->6 [style = dotted, label="true"];
3->8 [style = bold, label=""];
1->15 [style = solid, label="taskMetricGroup"];
7->8 [style = solid, label="blobService"];
4->15 [style = solid, label="jobInformation"];
3->8 [style = solid, label="taskInformation"];
10->1 [style = bold, label=""];
5->15 [style = solid, label="libCache"];
16->9 [style = bold, label=""];
11->7 [style = bold, label=""];
}
