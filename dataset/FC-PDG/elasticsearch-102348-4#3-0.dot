digraph {
20 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "FutureUtils.get(futNode0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SimpleFuture futNode1 = joinNodeAsync(new JoinRequest(node1,newTerm,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SimpleFuture futNode0 = joinNodeAsync(new JoinRequest(node0,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "DiscoveryNode node2 = newNode(2,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "joinNodeAndRun(new JoinRequest(node2,Optional.of(new Join(node2,node0,newTerm,initialTerm,initialVersion))))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "long initialTerm = randomLongBetween(1,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(futNode0.isDone())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertFalse(futNode1.isDone())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(clusterStateHasNode(node2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "joinNodeAndRun(new JoinRequest(node1,Optional.of(new Join(node1,node0,newTerm,initialTerm,higherVersion))))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "SimpleFuture futNode0 = joinNodeAsync(new JoinRequest(node0,newTerm,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testJoinAccumulation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testJoinAccumulation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "FutureUtils.get(futNode1)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setupFakeMasterServiceAndCoordinator(initialTerm,initialState(node0,initialTerm,initialVersion,new VotingConfiguration(Collections.singleton(node2.getId()))))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "long initialVersion = randomLongBetween(1,10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "setupFakeMasterServiceAndCoordinator(initialTerm,initialState(node0,initialTerm,initialVersion,new VotingConfiguration(Collections.singleton(node0.getId()))))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "long higherVersion = initialVersion + randomLongBetween(1,10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testJoinWithHigherTermButBetterStateStillElectsMasterThroughSelfJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(clusterStateHasNode(node1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DiscoveryNode node1 = newNode(1,true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "joinNodeAndRun(new JoinRequest(node2,newTerm,Optional.of(new Join(node2,node0,newTerm,initialTerm,initialVersion))))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "DiscoveryNode node0 = newNode(0,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SimpleFuture futNode1 = joinNodeAsync(new JoinRequest(node1,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "long newTerm = initialTerm + randomLongBetween(1,10)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
12->21 [style = solid, label="futNode1"];
29->30 [style = bold, label=""];
10->24 [style = bold, label=""];
18->12 [style = solid, label="initialVersion"];
4->22 [style = solid, label="futNode0"];
18->2 [style = solid, label="initialVersion"];
0->27 [style = solid, label="initialTerm"];
5->28 [style = bold, label=""];
12->26 [style = dashed, label="0"];
8->1 [style = bold, label=""];
5->4 [style = solid, label="newTerm"];
16->26 [style = solid, label="node0"];
1->12 [style = bold, label=""];
0->7 [style = solid, label="initialTerm"];
5->24 [style = solid, label="newTerm"];
4->23 [style = dashed, label="0"];
0->29 [style = solid, label="initialTerm"];
11->16 [style = bold, label=""];
28->29 [style = solid, label="higherVersion"];
16->23 [style = solid, label="node0"];
19->2 [style = solid, label="node2"];
5->23 [style = bold, label=""];
18->7 [style = solid, label="initialVersion"];
14->10 [style = bold, label=""];
20->14 [style = bold, label=""];
16->17 [style = bold, label=""];
18->27 [style = solid, label="initialVersion"];
16->29 [style = solid, label="node0"];
0->26 [style = solid, label="initialTerm"];
13->5 [style = bold, label=""];
0->23 [style = solid, label="initialTerm"];
10->2 [style = bold, label=""];
2->24 [style = dashed, label="0"];
18->7 [style = bold, label=""];
26->21 [style = solid, label="futNode1"];
24->3 [style = bold, label=""];
26->20 [style = bold, label=""];
18->26 [style = solid, label="initialVersion"];
17->29 [style = solid, label="node1"];
28->29 [style = bold, label=""];
17->12 [style = solid, label="node1"];
23->22 [style = solid, label="futNode0"];
19->15 [style = solid, label="node2"];
2->3 [style = bold, label=""];
17->9 [style = solid, label="node1"];
12->20 [style = bold, label=""];
17->26 [style = solid, label="node1"];
18->24 [style = solid, label="initialVersion"];
25->16 [style = bold, label=""];
18->28 [style = solid, label="initialVersion"];
19->0 [style = bold, label=""];
15->22 [style = bold, label=""];
18->4 [style = solid, label="initialVersion"];
3->9 [style = bold, label=""];
16->7 [style = solid, label="node0"];
0->4 [style = solid, label="initialTerm"];
17->0 [style = bold, label=""];
23->6 [style = bold, label=""];
5->4 [style = bold, label=""];
0->24 [style = solid, label="initialTerm"];
16->24 [style = solid, label="node0"];
0->18 [style = bold, label=""];
18->23 [style = solid, label="initialVersion"];
7->13 [style = bold, label=""];
5->2 [style = solid, label="newTerm"];
19->24 [style = solid, label="node2"];
4->6 [style = bold, label=""];
31->16 [style = bold, label=""];
16->27 [style = solid, label="node0"];
16->4 [style = solid, label="node0"];
22->21 [style = bold, label=""];
0->12 [style = solid, label="initialTerm"];
0->5 [style = solid, label="initialTerm"];
1->26 [style = bold, label=""];
17->19 [style = bold, label=""];
5->29 [style = solid, label="newTerm"];
7->27 [style = dashed, label="0"];
16->2 [style = solid, label="node0"];
18->27 [style = bold, label=""];
9->15 [style = bold, label=""];
6->8 [style = bold, label=""];
5->23 [style = solid, label="newTerm"];
16->12 [style = solid, label="node0"];
5->26 [style = solid, label="newTerm"];
0->2 [style = solid, label="initialTerm"];
5->12 [style = solid, label="newTerm"];
}
