digraph {
24 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c1\",\"c2\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "sliceQueryTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean testPagingState@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "partition = query(pager,3,2)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int protocolVersion@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c6\",\"c7\",\"c8\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "pager = maybeRecreate(pager,command,testPagingState,protocolVersion)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(pager.isExhausted())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(pager.isExhausted())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<FilteredPartition> partition = query(pager,3)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c4\",\"c5\",\"c6\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "boolean testPagingState@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "sliceQueryTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertFalse(pager.isExhausted())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int protocolVersion@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "boolean testPagingState@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "partition = query(pager,3)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ReadCommand command = sliceQuery(\"k0\",\"c1\",\"c8\",10)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(pager.isExhausted())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "pager = maybeRecreate(pager,command,testPagingState,protocolVersion)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "reversedSliceQueryTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c7\",\"c8\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c1\",\"c2\",\"c3\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ReadCommand command = sliceQuery(\"k0\",\"c1\",\"c8\",true,10)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ProtocolVersion protocolVersion@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c3\",\"c4\",\"c5\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(pager.isExhausted())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(pager.isExhausted())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "QueryPager pager = command.getPager(null,protocolVersion)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->2 [style = solid, label="command"];
20->2 [style = solid, label="protocolVersion"];
2->17 [style = bold, label=""];
0->3 [style = bold, label=""];
8->10 [style = bold, label=""];
25->2 [style = solid, label="protocolVersion"];
23->16 [style = bold, label=""];
21->20 [style = dotted, label="true"];
11->2 [style = solid, label="protocolVersion"];
11->20 [style = dashed, label="0"];
2->3 [style = solid, label="pager"];
6->3 [style = solid, label="testPagingState"];
9->2 [style = bold, label=""];
25->16 [style = solid, label="protocolVersion"];
28->25 [style = dotted, label="true"];
5->6 [style = dotted, label="true"];
26->9 [style = bold, label=""];
27->2 [style = solid, label="testPagingState"];
5->18 [style = bold, label=""];
7->4 [style = bold, label=""];
11->3 [style = solid, label="protocolVersion"];
16->8 [style = solid, label="pager"];
23->2 [style = solid, label="command"];
4->22 [style = dashed, label="0"];
12->1 [style = bold, label=""];
21->18 [style = bold, label=""];
18->3 [style = solid, label="command"];
19->2 [style = solid, label="testPagingState"];
23->3 [style = solid, label="command"];
4->0 [style = bold, label=""];
17->7 [style = bold, label=""];
7->22 [style = bold, label=""];
5->11 [style = dotted, label="true"];
3->15 [style = solid, label="pager"];
10->26 [style = dashed, label="0"];
22->0 [style = bold, label=""];
2->7 [style = solid, label="pager"];
6->2 [style = solid, label="testPagingState"];
20->16 [style = solid, label="protocolVersion"];
28->23 [style = bold, label=""];
18->23 [style = dashed, label="0"];
15->24 [style = bold, label=""];
21->19 [style = dotted, label="true"];
20->3 [style = solid, label="protocolVersion"];
12->24 [style = dashed, label="0"];
3->13 [style = bold, label=""];
11->16 [style = solid, label="protocolVersion"];
16->14 [style = bold, label=""];
14->8 [style = bold, label=""];
10->9 [style = bold, label=""];
13->15 [style = bold, label=""];
15->12 [style = bold, label=""];
24->1 [style = bold, label=""];
28->27 [style = dotted, label="true"];
11->27 [style = dashed, label="0"];
25->3 [style = solid, label="protocolVersion"];
27->3 [style = solid, label="testPagingState"];
16->2 [style = solid, label="pager"];
19->3 [style = solid, label="testPagingState"];
8->26 [style = bold, label=""];
18->16 [style = bold, label=""];
}
