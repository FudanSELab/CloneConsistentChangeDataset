digraph {
3 [style = filled, label = "Session session = this.repository.findAll().get(0).getSession()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "filterCapturesSessionIdWhenSessionIsUsed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(tracedPrincipal).isNotNull()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "this.filter.doFilter(request,new MockHttpServletResponse(),new MockFilterChain())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "given(principal.getName()).willReturn(\"alice\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(tracedPrincipal.getName()).isEqualTo(\"alice\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(session).isNotNull()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "request.setUserPrincipal(principal)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "MockHttpServletRequest request = new MockHttpServletRequest()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "filterCapturesPrincipal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "org.springframework.boot.actuate.trace.http.HttpTrace.Principal tracedPrincipal = this.repository.findAll().get(0).getPrincipal()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "filterCapturesSessionIdWhenSessionIsUsed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertThat(session.getId()).isNotNull()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Principal principal = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "executeFilter(MockServerWebExchange.from(MockServerHttpRequest.get(\"https://api.example.com\")),null).block(Duration.ofSeconds(30))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(this.repository.findAll()).hasSize(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.filter.filter(MockServerWebExchange.from(MockServerHttpRequest.get(\"https://api.example.com\")),null).block(Duration.ofSeconds(30))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
8->16 [style = bold, label=""];
4->3 [style = bold, label=""];
3->1 [style = bold, label=""];
0->6 [style = dashed, label="0"];
15->12 [style = solid, label="request"];
1->9 [style = dashed, label="0"];
9->10 [style = bold, label=""];
11->9 [style = bold, label=""];
6->4 [style = bold, label=""];
2->0 [style = bold, label=""];
12->4 [style = bold, label=""];
5->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
14->12 [style = bold, label=""];
7->6 [style = bold, label=""];
16->14 [style = bold, label=""];
13->15 [style = bold, label=""];
4->11 [style = bold, label=""];
8->14 [style = solid, label="principal"];
15->8 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
