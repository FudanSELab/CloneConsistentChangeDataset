digraph {
16 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b03e01@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.setUp(builder,stateDir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int i = 0@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "final KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "driver.flushState()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "i < 2@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "driver.flushState()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "driver.flushState()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "int i = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "i < 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "joined.process(processor)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "i < 2@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "driver.flushState()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "i < 2@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "i++@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "driver.flushState()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->55 [style = solid, label="i"];
76->44 [style = solid, label="builder"];
35->48 [style = bold, label=""];
6->57 [style = bold, label=""];
52->8 [style = bold, label=""];
3->68 [style = bold, label=""];
76->12 [style = solid, label="builder"];
71->44 [style = bold, label=""];
79->66 [style = bold, label=""];
5->20 [style = bold, label=""];
68->24 [style = bold, label=""];
26->37 [style = dotted, label="true"];
15->25 [style = bold, label=""];
51->0 [style = solid, label="getter"];
4->15 [style = bold, label=""];
65->81 [style = bold, label=""];
47->37 [style = solid, label="i"];
57->21 [style = solid, label="getter"];
47->37 [style = bold, label=""];
51->27 [style = solid, label="getter"];
61->59 [style = bold, label=""];
30->18 [style = bold, label=""];
48->37 [style = solid, label="expectedKeys"];
73->64 [style = solid, label="stream2"];
77->70 [style = bold, label=""];
4->67 [style = solid, label="i"];
19->5 [style = bold, label=""];
12->47 [style = bold, label=""];
23->9 [style = solid, label="i"];
63->61 [style = solid, label="table2"];
37->3 [style = solid, label="i"];
32->62 [style = bold, label=""];
48->80 [style = solid, label="expectedKeys"];
16->49 [style = bold, label=""];
4->15 [style = solid, label="i"];
51->38 [style = solid, label="getter"];
43->1 [style = bold, label=""];
47->26 [style = bold, label=""];
39->38 [style = bold, label=""];
3->30 [style = solid, label="i"];
2->52 [style = bold, label=""];
4->67 [style = bold, label=""];
20->61 [style = dashed, label="0"];
70->74 [style = bold, label=""];
3->30 [style = bold, label=""];
24->53 [style = bold, label=""];
28->45 [style = bold, label=""];
33->7 [style = bold, label=""];
31->14 [style = bold, label=""];
14->16 [style = bold, label=""];
59->42 [style = bold, label=""];
64->71 [style = bold, label=""];
40->59 [style = dashed, label="0"];
42->78 [style = bold, label=""];
36->44 [style = bold, label=""];
46->24 [style = solid, label="i"];
68->30 [style = dotted, label="true"];
2->70 [style = dashed, label="0"];
46->24 [style = bold, label=""];
76->48 [style = bold, label=""];
35->43 [style = solid, label="builder"];
58->35 [style = bold, label=""];
10->26 [style = bold, label=""];
41->6 [style = bold, label=""];
60->41 [style = bold, label=""];
33->13 [style = bold, label=""];
48->53 [style = solid, label="expectedKeys"];
11->24 [style = solid, label="i"];
53->67 [style = solid, label="i"];
66->69 [style = bold, label=""];
44->60 [style = dashed, label="0"];
25->27 [style = bold, label=""];
35->41 [style = solid, label="builder"];
81->80 [style = bold, label=""];
57->45 [style = solid, label="getter"];
57->29 [style = solid, label="getter"];
55->9 [style = dotted, label="true"];
21->11 [style = bold, label=""];
57->12 [style = bold, label=""];
50->31 [style = bold, label=""];
55->23 [style = dotted, label="true"];
67->15 [style = dotted, label="true"];
44->41 [style = bold, label=""];
42->32 [style = bold, label=""];
27->54 [style = bold, label=""];
26->37 [style = bold, label=""];
73->64 [style = bold, label=""];
37->30 [style = solid, label="i"];
34->35 [style = bold, label=""];
38->33 [style = bold, label=""];
78->73 [style = bold, label=""];
55->9 [style = bold, label=""];
13->0 [style = bold, label=""];
3->68 [style = solid, label="i"];
51->57 [style = dashed, label="0"];
81->80 [style = dotted, label="true"];
62->1 [style = bold, label=""];
29->17 [style = bold, label=""];
5->20 [style = solid, label="table2"];
51->21 [style = solid, label="getter"];
67->54 [style = bold, label=""];
17->23 [style = solid, label="i"];
37->10 [style = bold, label=""];
51->12 [style = bold, label=""];
26->3 [style = bold, label=""];
6->51 [style = bold, label=""];
49->28 [style = bold, label=""];
67->4 [style = dotted, label="true"];
68->30 [style = bold, label=""];
11->24 [style = bold, label=""];
69->40 [style = bold, label=""];
54->22 [style = bold, label=""];
39->33 [style = bold, label=""];
17->55 [style = bold, label=""];
57->0 [style = solid, label="getter"];
65->80 [style = solid, label="i"];
42->32 [style = solid, label="processor"];
54->39 [style = bold, label=""];
53->46 [style = bold, label=""];
57->14 [style = solid, label="getter"];
51->45 [style = solid, label="getter"];
30->3 [style = bold, label=""];
36->60 [style = bold, label=""];
22->39 [style = bold, label=""];
55->50 [style = bold, label=""];
63->61 [style = bold, label=""];
56->63 [style = bold, label=""];
18->21 [style = bold, label=""];
24->46 [style = dotted, label="true"];
75->76 [style = bold, label=""];
47->26 [style = solid, label="i"];
53->67 [style = bold, label=""];
57->27 [style = solid, label="getter"];
48->30 [style = solid, label="expectedKeys"];
10->26 [style = solid, label="i"];
6->12 [style = bold, label=""];
7->13 [style = bold, label=""];
24->53 [style = dotted, label="true"];
51->29 [style = solid, label="getter"];
37->68 [style = bold, label=""];
11->46 [style = solid, label="i"];
29->80 [style = solid, label="i"];
48->56 [style = bold, label=""];
48->15 [style = solid, label="expectedKeys"];
74->29 [style = bold, label=""];
80->65 [style = bold, label=""];
51->14 [style = solid, label="getter"];
46->53 [style = solid, label="i"];
19->56 [style = dashed, label="0"];
29->81 [style = solid, label="i"];
0->2 [style = bold, label=""];
11->53 [style = solid, label="i"];
53->4 [style = solid, label="i"];
35->76 [style = dashed, label="0"];
19->79 [style = dashed, label="0"];
32->43 [style = bold, label=""];
9->80 [style = dashed, label="0"];
1->36 [style = bold, label=""];
17->55 [style = solid, label="i"];
17->9 [style = solid, label="i"];
37->68 [style = solid, label="i"];
29->81 [style = bold, label=""];
35->62 [style = solid, label="builder"];
9->23 [style = bold, label=""];
48->9 [style = solid, label="expectedKeys"];
68->3 [style = dotted, label="true"];
5->63 [style = dashed, label="0"];
20->40 [style = bold, label=""];
24->4 [style = bold, label=""];
29->65 [style = solid, label="i"];
81->72 [style = bold, label=""];
81->65 [style = dotted, label="true"];
10->37 [style = solid, label="i"];
65->81 [style = solid, label="i"];
26->10 [style = dotted, label="true"];
15->4 [style = bold, label=""];
48->19 [style = bold, label=""];
20->69 [style = dashed, label="0"];
53->15 [style = solid, label="i"];
5->66 [style = dashed, label="0"];
13->77 [style = bold, label=""];
42->71 [style = solid, label="processor"];
67->15 [style = bold, label=""];
57->38 [style = solid, label="getter"];
43->62 [style = dashed, label="0"];
48->79 [style = bold, label=""];
40->42 [style = bold, label=""];
8->29 [style = bold, label=""];
23->55 [style = bold, label=""];
47->10 [style = solid, label="i"];
}
