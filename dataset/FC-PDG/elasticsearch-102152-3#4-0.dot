digraph {
113 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node2\"))).build()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")).add(newNode(\"node3\"))).build()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "logger.info(\"Start the backup shard\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertThat(routingNodes.node(\"node1\").numberOfShardsWithState(STARTED),equalTo(4))@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertThat(routingNodes.node(\"node3\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "i++@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().size(),equalTo(1))@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(0).currentNodeId(),nullValue())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(routingNodes.node(\"node1\").numberOfShardsWithState(STARTED),equalTo(4))@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "logger.info(\"Add another node and perform rerouting, nothing will happen since primary not started\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertThat(routingNodes.node(\"node2\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@100@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@80@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).size(),equalTo(2))@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(routingNodes.node(\"node3\").numberOfShardsWithState(STARTED),equalTo(4))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "logger.info(\"Start the primary shard\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "clusterState = newState@@@69@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "assertThat(routingNodes.node(\"node2\").numberOfShardsWithState(STARTED),equalTo(4))@@@92@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@67@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "logger.info(\"Start the more shards\")@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(1).state(),equalTo(UNASSIGNED))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(1).currentNodeId(),nullValue())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertThat(routingNodes.node(\"node2\").numberOfShardsWithState(STARTED),equalTo(4))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@62@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "logger.info(\"Adding three node and performing rerouting\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "clusterState = newState@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(\"cluster.routing.allocation.node_concurrent_recoveries\",10).put(\"cluster.routing.allocation.node_initial_primaries_recoveries\",10).put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\"always\").put(\"cluster.routing.allocation.cluster_concurrent_rebalance\",-1).build())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).currentNodeId(),nullValue())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "testBalanceIncrementallyStartNodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(routingNodes.node(\"node2\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertThat(routingNodes.node(\"node2\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "testBalanceAllNodesStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "int i = 0@@@72@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(0).state(),equalTo(UNASSIGNED))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(0).currentNodeId(),nullValue())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertThat(routingNodes.node(\"node3\").numberOfShardsWithState(STARTED),equalTo(4))@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "clusterState = newState@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes())).build()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "testBalanceAllNodesStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@83@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(routingNodes.node(\"node1\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(routingNodes.node(\"node3\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@51@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
108 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "i++@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "logger.info(\"Start the backup shard\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "clusterState = newState@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(1).currentNodeId(),nullValue())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "logger.info(\"Add another node and perform rerouting, nothing will happen since primary not started\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(routingNodes.node(\"node3\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@101@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test\")).addAsNew(metaData.index(\"test1\")).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@55@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(0).state(),equalTo(UNASSIGNED))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "int i = 0@@@82@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).size(),equalTo(2))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "logger.info(\"Another round of rebalancing\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(1).state(),equalTo(UNASSIGNED))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().size(),equalTo(1))@@@90@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "i++@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "logger.info(\"Building initial routing table\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "logger.info(\"Adding one node and performing rerouting\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "ClusterState newState = strategy.reroute(clusterState,\"reroute\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(routingNodes.node(\"node1\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121->116 [style = bold, label=""];
37->0 [style = bold, label=""];
108->29 [style = solid, label="clusterState"];
67->28 [style = bold, label=""];
65->17 [style = bold, label=""];
28->96 [style = bold, label=""];
29->115 [style = solid, label="newState"];
37->49 [style = bold, label=""];
64->31 [style = dotted, label="true"];
84->13 [style = bold, label=""];
103->119 [style = bold, label=""];
68->64 [style = solid, label="i"];
112->11 [style = bold, label=""];
44->7 [style = bold, label=""];
39->14 [style = bold, label=""];
111->117 [style = solid, label="clusterState"];
98->65 [style = bold, label=""];
99->24 [style = solid, label="i"];
128->109 [style = solid, label="clusterState"];
96->97 [style = bold, label=""];
51->77 [style = solid, label="i"];
110->130 [style = solid, label="newState"];
65->28 [style = solid, label="clusterState"];
116->125 [style = bold, label=""];
119->108 [style = solid, label="clusterState"];
29->95 [style = bold, label=""];
51->77 [style = dotted, label="true"];
120->34 [style = solid, label="clusterState"];
62->27 [style = bold, label=""];
3->51 [style = solid, label="i"];
127->129 [style = bold, label=""];
19->24 [style = bold, label=""];
3->34 [style = bold, label=""];
130->104 [style = bold, label=""];
51->74 [style = dotted, label="true"];
115->120 [style = bold, label=""];
87->28 [style = solid, label="strategy"];
99->19 [style = solid, label="i"];
56->72 [style = bold, label=""];
19->24 [style = solid, label="i"];
18->44 [style = bold, label=""];
65->4 [style = solid, label="clusterState"];
107->128 [style = solid, label="clusterState"];
27->80 [style = dotted, label="true"];
49->10 [style = bold, label=""];
3->77 [style = solid, label="i"];
74->23 [style = bold, label=""];
60->105 [style = bold, label=""];
108->124 [style = bold, label=""];
113->107 [style = solid, label="clusterState"];
118->126 [style = bold, label=""];
26->35 [style = bold, label=""];
89->18 [style = bold, label=""];
45->42 [style = bold, label=""];
15->41 [style = bold, label=""];
19->66 [style = solid, label="i"];
54->53 [style = bold, label=""];
14->9 [style = bold, label=""];
10->99 [style = bold, label=""];
55->123 [style = dashed, label="0"];
9->29 [style = bold, label=""];
14->95 [style = solid, label="clusterState"];
43->58 [style = bold, label=""];
113->107 [style = bold, label=""];
81->64 [style = solid, label="i"];
51->23 [style = dotted, label="true"];
1->38 [style = bold, label=""];
16->65 [style = solid, label="newState"];
121->125 [style = solid, label="clusterState"];
27->72 [style = dotted, label="true"];
29->47 [style = bold, label=""];
18->69 [style = dotted, label="true"];
78->37 [style = dotted, label="true"];
42->76 [style = bold, label=""];
22->25 [style = bold, label=""];
95->98 [style = bold, label=""];
24->19 [style = bold, label=""];
101->78 [style = solid, label="i"];
124->110 [style = bold, label=""];
85->77 [style = bold, label=""];
19->12 [style = bold, label=""];
70->42 [style = solid, label="clusterState"];
51->92 [style = solid, label="i"];
60->21 [style = bold, label=""];
0->78 [style = bold, label=""];
99->24 [style = bold, label=""];
30->82 [style = bold, label=""];
18->75 [style = dotted, label="true"];
63->27 [style = bold, label=""];
27->61 [style = dotted, label="true"];
108->110 [style = solid, label="clusterState"];
59->10 [style = dotted, label="true"];
2->34 [style = bold, label=""];
23->85 [style = bold, label=""];
77->51 [style = bold, label=""];
34->112 [style = bold, label=""];
77->23 [style = dotted, label="true"];
75->46 [style = bold, label=""];
59->49 [style = dotted, label="true"];
125->131 [style = bold, label=""];
25->89 [style = solid, label="i"];
11->43 [style = bold, label=""];
5->74 [style = bold, label=""];
29->115 [style = bold, label=""];
63->62 [style = solid, label="i"];
25->18 [style = solid, label="i"];
20->67 [style = solid, label="newState"];
31->68 [style = bold, label=""];
3->51 [style = bold, label=""];
34->43 [style = solid, label="newState"];
51->94 [style = bold, label=""];
77->5 [style = dotted, label="true"];
45->29 [style = bold, label=""];
91->100 [style = bold, label=""];
14->16 [style = solid, label="clusterState"];
110->130 [style = bold, label=""];
78->10 [style = bold, label=""];
51->92 [style = bold, label=""];
0->15 [style = solid, label="i"];
20->67 [style = bold, label=""];
21->81 [style = bold, label=""];
3->112 [style = solid, label="newState"];
59->15 [style = dotted, label="true"];
100->71 [style = bold, label=""];
83->31 [style = bold, label=""];
61->80 [style = bold, label=""];
93->37 [style = bold, label=""];
72->61 [style = bold, label=""];
73->55 [style = bold, label=""];
81->68 [style = solid, label="i"];
87->95 [style = solid, label="strategy"];
77->32 [style = dotted, label="true"];
66->13 [style = dotted, label="true"];
17->11 [style = solid, label="clusterState"];
66->71 [style = bold, label=""];
2->28 [style = dashed, label="0"];
79->54 [style = bold, label=""];
55->88 [style = bold, label=""];
77->74 [style = dotted, label="true"];
66->30 [style = bold, label=""];
109->127 [style = bold, label=""];
59->41 [style = dotted, label="true"];
24->19 [style = dotted, label="true"];
59->93 [style = dotted, label="true"];
106->109 [style = bold, label=""];
58->78 [style = bold, label=""];
73->123 [style = bold, label=""];
107->118 [style = bold, label=""];
47->16 [style = bold, label=""];
57->70 [style = bold, label=""];
92->5 [style = bold, label=""];
14->98 [style = solid, label="clusterState"];
104->45 [style = bold, label=""];
101->0 [style = solid, label="i"];
24->66 [style = dotted, label="true"];
30->66 [style = solid, label="i"];
18->7 [style = dotted, label="true"];
18->89 [style = dotted, label="true"];
18->44 [style = dotted, label="true"];
126->128 [style = bold, label=""];
65->20 [style = solid, label="clusterState"];
64->83 [style = dotted, label="true"];
114->113 [style = bold, label=""];
51->85 [style = dotted, label="true"];
36->52 [style = bold, label=""];
52->33 [style = bold, label=""];
13->91 [style = bold, label=""];
24->66 [style = bold, label=""];
78->0 [style = dotted, label="true"];
78->59 [style = bold, label=""];
51->77 [style = bold, label=""];
25->18 [style = bold, label=""];
80->62 [style = bold, label=""];
12->36 [style = bold, label=""];
81->64 [style = bold, label=""];
64->35 [style = dotted, label="true"];
66->30 [style = dotted, label="true"];
69->75 [style = bold, label=""];
29->120 [style = solid, label="newState"];
19->30 [style = solid, label="i"];
24->30 [style = dotted, label="true"];
66->82 [style = dotted, label="true"];
0->78 [style = solid, label="i"];
38->83 [style = bold, label=""];
78->93 [style = dotted, label="true"];
40->84 [style = bold, label=""];
89->18 [style = solid, label="i"];
59->37 [style = dotted, label="true"];
14->65 [style = solid, label="clusterState"];
105->111 [style = bold, label=""];
27->56 [style = dotted, label="true"];
88->60 [style = bold, label=""];
91->30 [style = bold, label=""];
77->4 [style = bold, label=""];
4->20 [style = solid, label="newState"];
33->79 [style = bold, label=""];
65->96 [style = solid, label="clusterState"];
6->56 [style = bold, label=""];
19->66 [style = bold, label=""];
35->1 [style = bold, label=""];
108->115 [style = solid, label="clusterState"];
18->39 [style = bold, label=""];
18->46 [style = dotted, label="true"];
66->82 [style = bold, label=""];
3->34 [style = solid, label="newState"];
70->45 [style = solid, label="clusterState"];
77->92 [style = dotted, label="true"];
4->20 [style = bold, label=""];
120->3 [style = solid, label="clusterState"];
17->3 [style = bold, label=""];
24->91 [style = bold, label=""];
62->27 [style = solid, label="i"];
94->4 [style = bold, label=""];
53->8 [style = bold, label=""];
0->59 [style = solid, label="i"];
120->65 [style = bold, label=""];
27->50 [style = dotted, label="true"];
78->19 [style = bold, label=""];
101->78 [style = bold, label=""];
128->106 [style = bold, label=""];
45->42 [style = solid, label="newState"];
82->40 [style = bold, label=""];
78->59 [style = dotted, label="true"];
14->29 [style = solid, label="clusterState"];
28->97 [style = solid, label="newState"];
17->34 [style = solid, label="clusterState"];
108->130 [style = solid, label="clusterState"];
24->40 [style = dotted, label="true"];
9->29 [style = solid, label="newState"];
70->45 [style = bold, label=""];
90->69 [style = bold, label=""];
87->73 [style = bold, label=""];
95->98 [style = solid, label="newState"];
0->59 [style = bold, label=""];
14->9 [style = solid, label="clusterState"];
68->64 [style = bold, label=""];
76->22 [style = bold, label=""];
119->108 [style = bold, label=""];
50->6 [style = bold, label=""];
32->92 [style = bold, label=""];
10->15 [style = bold, label=""];
77->5 [style = bold, label=""];
95->65 [style = solid, label="newState"];
92->77 [style = bold, label=""];
28->96 [style = solid, label="newState"];
64->1 [style = dotted, label="true"];
59->15 [style = bold, label=""];
30->66 [style = bold, label=""];
47->95 [style = dashed, label="0"];
122->87 [style = bold, label=""];
63->27 [style = solid, label="i"];
16->17 [style = solid, label="newState"];
84->19 [style = bold, label=""];
131->103 [style = bold, label=""];
71->12 [style = bold, label=""];
123->88 [style = bold, label=""];
17->20 [style = solid, label="clusterState"];
77->51 [style = solid, label="i"];
34->11 [style = solid, label="newState"];
15->59 [style = bold, label=""];
66->84 [style = dotted, label="true"];
117->114 [style = bold, label=""];
51->5 [style = dotted, label="true"];
34->11 [style = bold, label=""];
78->15 [style = dotted, label="true"];
78->0 [style = bold, label=""];
86->87 [style = bold, label=""];
17->67 [style = solid, label="clusterState"];
64->26 [style = dotted, label="true"];
64->26 [style = bold, label=""];
28->2 [style = bold, label=""];
41->93 [style = bold, label=""];
15->59 [style = solid, label="i"];
45->76 [style = solid, label="newState"];
16->65 [style = bold, label=""];
27->57 [style = bold, label=""];
102->87 [style = bold, label=""];
92->77 [style = solid, label="i"];
18->90 [style = dotted, label="true"];
51->92 [style = dotted, label="true"];
111->117 [style = bold, label=""];
27->50 [style = bold, label=""];
27->62 [style = dotted, label="true"];
48->63 [style = bold, label=""];
59->24 [style = bold, label=""];
43->101 [style = bold, label=""];
109->121 [style = solid, label="clusterState"];
64->68 [style = dotted, label="true"];
129->121 [style = bold, label=""];
64->38 [style = dotted, label="true"];
78->41 [style = dotted, label="true"];
27->6 [style = dotted, label="true"];
24->84 [style = dotted, label="true"];
97->11 [style = bold, label=""];
7->90 [style = bold, label=""];
85->32 [style = bold, label=""];
58->11 [style = dashed, label="0"];
59->41 [style = bold, label=""];
24->82 [style = dotted, label="true"];
77->85 [style = dotted, label="true"];
64->48 [style = bold, label=""];
46->89 [style = bold, label=""];
66->40 [style = dotted, label="true"];
66->91 [style = dotted, label="true"];
}
