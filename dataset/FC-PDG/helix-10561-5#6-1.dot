digraph {
27 [style = filled, label = "i < NODE_NR@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String instanceName = _participants(i(.getInstanceName()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testSTHandlerInitFailureRetry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "_gSetupTool.dropResourceFromCluster(CLUSTER_NAME,TEST_DB)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(retryFactoryMap.get(instanceName).getRemainingRetryCountUntilSucceed(),0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "_gSetupTool.rebalanceStorageCluster(CLUSTER_NAME,TEST_DB,REPLICAS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testSTHandlerInitFailureRetrySucceed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "CurrentState currentState@@@18@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertTrue(currentState.getPartitionStateMap().values().stream().allMatch(null))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<Message> instanceMessages = partitionMessageMap.get(instanceName)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(message.getMsgState(),Message.MessageState.UNPROCESSABLE)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i++@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int i = 0@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testSTHandlerInitFailureRetry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String sessionId = _participants(i(.getSessionId()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "CurrentState currentState@@@42@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assert.assertTrue(currentState.getPartitionStateMap().isEmpty())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<Message> messageList = accessor.getProperty(accessor.getChildNames(keyBuilder.messages(instanceName)).stream().map(null).collect(Collectors.toList()),true)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i < NODE_NR@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(TestHelper.verify(null,TestHelper.WAIT_DURATION))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<CurrentState> currentStates = accessor.getProperty(accessor.getChildNames(keyBuilder.currentStates(instanceName,sessionId)).stream().map(null).collect(Collectors.toList()),true)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertTrue(messageList.isEmpty())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(retryCountUntilSucceed - retryFactoryMap.get(instanceName).getRemainingRetryCountUntilSucceed(),instanceMessages.size() * MessageUtil.DEFAULT_STATE_TRANSITION_MESSAGE_RETRY_COUNT)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int retryCountUntilSucceed = Integer.MAX_VALUE@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "currentStates@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "PropertyKey.Builder keyBuilder = accessor.keyBuilder()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HelixDataAccessor accessor = _controller.getHelixDataAccessor()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int retryCountUntilSucceed = MessageGenerationPhase.DEFAULT_STATE_TRANSITION_MESSAGE_RETRY_COUNT - 1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "_gSetupTool.dropResourceFromCluster(CLUSTER_NAME,TEST_DB)@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(retryCountUntilSucceed - retryFactoryMap.get(instanceName).getRemainingRetryCountUntilSucceed(),instanceMessages.size() * MessageGenerationPhase.DEFAULT_STATE_TRANSITION_MESSAGE_RETRY_COUNT)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Map<String,List<Message>> partitionMessageMap = new HashMap<>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(message.getRetryCount() <= 0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,RetryStateModelFactory> retryFactoryMap = resetParticipants(retryCountUntilSucceed)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "currentStates@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_gSetupTool.addResourceToCluster(CLUSTER_NAME,TEST_DB,_PARTITIONS,STATE_MODEL)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CurrentState currentState@@@42@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String instanceName = _participants(i(.getInstanceName()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i++@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = dashed, label="0"];
20->8 [style = solid, label="i"];
27->32 [style = dotted, label="true"];
35->29 [style = bold, label=""];
27->39 [style = dotted, label="true"];
37->36 [style = bold, label=""];
28->34 [style = bold, label=""];
29->32 [style = solid, label="i"];
17->6 [style = bold, label=""];
10->14 [style = bold, label=""];
27->34 [style = dotted, label="true"];
24->0 [style = bold, label=""];
8->2 [style = dotted, label="true"];
27->26 [style = dotted, label="true"];
27->33 [style = dotted, label="true"];
27->28 [style = bold, label=""];
12->15 [style = bold, label=""];
8->16 [style = dotted, label="true"];
8->15 [style = dotted, label="true"];
0->5 [style = solid, label="retryCountUntilSucceed"];
32->27 [style = solid, label="i"];
27->31 [style = bold, label=""];
32->27 [style = bold, label=""];
36->5 [style = solid, label="retryCountUntilSucceed"];
15->33 [style = bold, label=""];
8->23 [style = dotted, label="true"];
25->14 [style = bold, label=""];
12->26 [style = bold, label=""];
27->38 [style = dotted, label="true"];
27->15 [style = dotted, label="true"];
27->12 [style = dotted, label="true"];
15->16 [style = bold, label=""];
14->8 [style = solid, label="i"];
34->30 [style = bold, label=""];
8->3 [style = dotted, label="true"];
1->17 [style = bold, label=""];
0->25 [style = solid, label="retryCountUntilSucceed"];
27->28 [style = dotted, label="true"];
5->1 [style = bold, label=""];
29->27 [style = bold, label=""];
27->30 [style = dotted, label="true"];
13->19 [style = bold, label=""];
0->10 [style = solid, label="retryCountUntilSucceed"];
20->8 [style = bold, label=""];
30->12 [style = bold, label=""];
22->0 [style = bold, label=""];
8->12 [style = dotted, label="true"];
18->10 [style = bold, label=""];
29->27 [style = solid, label="i"];
25->11 [style = bold, label=""];
6->13 [style = bold, label=""];
26->15 [style = bold, label=""];
8->9 [style = bold, label=""];
18->25 [style = bold, label=""];
14->20 [style = solid, label="i"];
7->18 [style = bold, label=""];
8->21 [style = bold, label=""];
33->32 [style = bold, label=""];
36->5 [style = bold, label=""];
14->8 [style = bold, label=""];
8->20 [style = dotted, label="true"];
19->4 [style = bold, label=""];
9->12 [style = bold, label=""];
8->9 [style = dotted, label="true"];
0->36 [style = dashed, label="0"];
18->7 [style = bold, label=""];
4->11 [style = bold, label=""];
16->20 [style = bold, label=""];
13->35 [style = bold, label=""];
10->25 [style = dashed, label="0"];
11->7 [style = bold, label=""];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
