digraph {
17 [style = filled, label = "ReleaseMessage anotherReleaseMessage = mock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "someNotificationMessages.put(someIrrelevantKey,someNewNotificationId)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(anotherRelease,shouldBeNewRelease)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String someIrrelevantKey = \"someIrrelevantKey\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long someNewNotificationId = someNotificationId + 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Release release = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(releaseMessageService,times(1)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testFindLatestActiveReleaseWithReleaseMessageNotification['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(someRelease,release)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(anotherReleaseMessage.getMessage()).thenReturn(someKey)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "verify(releaseMessageService,times(2)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "configServiceWithCache.handleMessage(anotherReleaseMessage,Topics.APOLLO_RELEASE_TOPIC)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Release anotherRelease = mock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Release stillOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Release shouldBeNewRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(someReleaseMessage)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "verify(releaseService,times(1)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(someReleaseMessage.getId()).thenReturn(someNotificationId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(someRelease,shouldStillBeOldRelease)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(someRelease)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(someRelease,stillOldRelease)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(anotherReleaseMessage)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Release shouldStillBeOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(anotherReleaseMessage.getId()).thenReturn(someNewNotificationId)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(releaseService,times(2)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(anotherRelease)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->14 [style = bold, label=""];
14->17 [style = bold, label=""];
13->26 [style = dashed, label="0"];
17->21 [style = solid, label="anotherReleaseMessage"];
4->7 [style = bold, label=""];
11->21 [style = bold, label=""];
18->2 [style = bold, label=""];
26->16 [style = bold, label=""];
12->2 [style = bold, label=""];
15->23 [style = bold, label=""];
9->3 [style = bold, label=""];
11->9 [style = solid, label="stillOldRelease"];
3->24 [style = dashed, label="0"];
14->12 [style = bold, label=""];
11->1 [style = bold, label=""];
19->0 [style = bold, label=""];
4->25 [style = dashed, label="0"];
2->8 [style = bold, label=""];
10->19 [style = bold, label=""];
18->24 [style = solid, label="anotherRelease"];
13->3 [style = solid, label="shouldStillBeOldRelease"];
9->24 [style = bold, label=""];
12->1 [style = solid, label="someIrrelevantKey"];
0->15 [style = bold, label=""];
6->14 [style = bold, label=""];
19->11 [style = bold, label=""];
17->0 [style = solid, label="anotherReleaseMessage"];
5->11 [style = bold, label=""];
13->16 [style = bold, label=""];
21->26 [style = bold, label=""];
19->16 [style = solid, label="release"];
7->22 [style = dashed, label="0"];
23->5 [style = bold, label=""];
26->24 [style = solid, label="shouldBeNewRelease"];
15->5 [style = bold, label=""];
24->25 [style = bold, label=""];
18->12 [style = bold, label=""];
18->15 [style = solid, label="anotherRelease"];
20->14 [style = bold, label=""];
25->22 [style = bold, label=""];
8->10 [style = bold, label=""];
3->4 [style = bold, label=""];
14->5 [style = solid, label="someNewNotificationId"];
14->1 [style = solid, label="someNewNotificationId"];
1->13 [style = bold, label=""];
16->9 [style = bold, label=""];
17->18 [style = bold, label=""];
}
