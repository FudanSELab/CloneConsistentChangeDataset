digraph {
0 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.singletonMap(taskId01,Task.LATEST_OFFSET)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertThat(client.lagFor(TASK_0_1),equalTo(Task.LATEST_OFFSET))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "client.addPreviousTasksAndOffsetSums(taskOffsetSums)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldReturnLatestOffsetForLagOfPreviousActiveRunningTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "shouldReturnLatestOffsetForLagOfPreviousActiveRunningTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(client.lagFor(taskId01),equalTo(500L))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.emptyMap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "client.computeTaskLags(null,allTaskEndOffsetSums)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldReturnEndOffsetSumForLagOfTaskWeDidNotPreviouslyOwn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(client.lagFor(taskId01),equalTo(Task.LATEST_OFFSET))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.singletonMap(TASK_0_1,Task.LATEST_OFFSET)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final Map<TaskId,Long> allTaskEndOffsetSums = Collections.singletonMap(taskId01,500L)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Map<TaskId,Long> allTaskEndOffsetSums = Collections.singletonMap(TASK_0_1,500L)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
5->10 [style = bold, label=""];
5->9 [style = bold, label=""];
8->5 [style = solid, label="allTaskEndOffsetSums"];
12->2 [style = solid, label="taskOffsetSums"];
0->2 [style = solid, label="taskOffsetSums"];
0->6 [style = dashed, label="0"];
4->5 [style = solid, label="allTaskEndOffsetSums"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
6->2 [style = solid, label="taskOffsetSums"];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
7->6 [style = bold, label=""];
6->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
