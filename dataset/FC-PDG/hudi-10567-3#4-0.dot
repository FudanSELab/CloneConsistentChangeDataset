digraph {
10 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(5,10,CompactionTriggerStrategy.TIME_ELAPSED)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HoodieReadClient readClient = getHoodieReadClient(cfg.getBasePath())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,10),writeClient,metaClient,cfg,false)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(3,20,CompactionTriggerStrategy.NUM_OR_TIME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(HoodieTimeline.COMMIT_ACTION,metaClient.getActiveTimeline().lastInstant().get().getAction())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String finalInstant = HoodieActiveTimeline.createNewInstantTime()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,Arrays.asList(instantTime),records,cfg,true,new ArrayList<>())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<String> instants = IntStream.range(0,2).mapToObj(null).collect(Collectors.toList())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSuccessfulCompactionBasedOnTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(HoodieActiveTimeline.createNewInstantTime(),10)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String finalInstant = HoodieActiveTimeline.createNewInstantTime(10000)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(6,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,10),writeClient,metaClient,cfg,false)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "finalInstant = HoodieActiveTimeline.createNewInstantTime(20000)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testSuccessfulCompactionBasedOnTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "testSuccessfulCompactionBasedOnNumOrTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(instantTime,10)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,instants,records,cfg,true,new ArrayList<>())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "metaClient = new HoodieTableMetaClient(hadoopConf,cfg.getBasePath())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String instantTime = HoodieActiveTimeline.createNewInstantTime()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(4,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
4->10 [style = bold, label=""];
10->7 [style = solid, label="cfg"];
19->18 [style = bold, label=""];
17->26 [style = bold, label=""];
7->1 [style = bold, label=""];
20->7 [style = solid, label="metaClient"];
5->16 [style = solid, label="instants"];
3->2 [style = solid, label="instantTime"];
3->11 [style = bold, label=""];
25->7 [style = solid, label="finalInstant"];
10->3 [style = bold, label=""];
27->7 [style = solid, label="cfg"];
16->25 [style = bold, label=""];
19->16 [style = solid, label="records"];
3->11 [style = solid, label="instantTime"];
8->14 [style = dashed, label="0"];
10->27 [style = dashed, label="0"];
15->26 [style = solid, label="metaClient"];
6->15 [style = bold, label=""];
8->7 [style = bold, label=""];
14->7 [style = bold, label=""];
5->2 [style = solid, label="readClient"];
3->19 [style = dashed, label="0"];
27->16 [style = solid, label="cfg"];
5->16 [style = bold, label=""];
1->13 [style = dashed, label="0"];
7->22 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
12->10 [style = bold, label=""];
25->20 [style = bold, label=""];
15->17 [style = bold, label=""];
14->7 [style = solid, label="metaClient"];
10->2 [style = solid, label="cfg"];
23->21 [style = bold, label=""];
18->5 [style = bold, label=""];
26->23 [style = bold, label=""];
0->8 [style = bold, label=""];
27->19 [style = bold, label=""];
13->6 [style = bold, label=""];
6->9 [style = bold, label=""];
20->7 [style = bold, label=""];
17->26 [style = solid, label="finalInstant"];
0->7 [style = solid, label="finalInstant"];
24->27 [style = bold, label=""];
11->2 [style = solid, label="records"];
27->26 [style = solid, label="cfg"];
18->16 [style = solid, label="readClient"];
22->6 [style = bold, label=""];
8->7 [style = solid, label="metaClient"];
}
