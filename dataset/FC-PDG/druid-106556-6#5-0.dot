digraph {
9 [style = filled, label = "testTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "grouper.aggregate(6)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "grouper.aggregate(12)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final TestColumnSelectorFactory columnSelectorFactory = GrouperTestUtil.newColumnSelectorFactory()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final List<Entry<Integer>> expected = ImmutableList.of(new Grouper.Entry<>(6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ad4733),new Grouper.Entry<>(10,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ad473b),new Grouper.Entry<>(12,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ad4743))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final TestColumnSelectorFactory columnSelectorFactory = GrouperTestUtil.newColumnSelectorFactory()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "grouper.aggregate(10)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"value\",10L)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectedException.expectCause(CoreMatchers.instanceOf())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "grouper.iterator()@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expectedException.expect()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "columnSelectorFactory.setRow(new MapBasedRow(0,ImmutableMap.of(\"value\",10L)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final IntGrouper grouper = newGrouper(columnSelectorFactory,32768)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testAggregate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(expected,Ordering.from((Comparator<Entry<Integer>>)null).sortedCopy(unsortedEntries))@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedException.expect()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "grouper.aggregate(12)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "grouper.aggregate(6)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final List<Entry<Integer>> unsortedEntries = Lists.newArrayList(grouper.iterator(false))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "grouper.aggregate(6)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
8->10 [style = bold, label=""];
17->14 [style = solid, label="expected"];
2->19 [style = dashed, label="0"];
3->1 [style = bold, label=""];
0->12 [style = bold, label=""];
1->0 [style = bold, label=""];
6->19 [style = bold, label=""];
9->8 [style = bold, label=""];
12->6 [style = bold, label=""];
13->17 [style = bold, label=""];
11->0 [style = bold, label=""];
0->5 [style = solid, label="columnSelectorFactory"];
20->11 [style = solid, label="columnSelectorFactory"];
5->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
7->2 [style = bold, label=""];
15->20 [style = bold, label=""];
10->0 [style = bold, label=""];
18->13 [style = bold, label=""];
7->18 [style = bold, label=""];
3->8 [style = dashed, label="0"];
16->14 [style = bold, label=""];
16->14 [style = solid, label="unsortedEntries"];
10->0 [style = solid, label="columnSelectorFactory"];
6->7 [style = bold, label=""];
19->7 [style = bold, label=""];
17->16 [style = bold, label=""];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
