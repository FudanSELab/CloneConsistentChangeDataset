digraph {
29 [style = filled, label = "zks.getInflight() > 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "submitted.await(5,TimeUnit.SECONDS)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 0@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "zk.create(\"/request_throttle_test- \" + i,(\"/request_throttle_test- \" + i).getBytes(),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,null,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "resumeProcess = new CountDownLatch(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LOG.info(\"raise the latch\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testRequestThrottler['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "RequestThrottler.setDropStaleRequests(false)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "zk = null@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "entered.await(STALL_TIME,TimeUnit.MILLISECONDS)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testRequestThrottler['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "submitted = new CountDownLatch(TOTAL_REQUESTS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,Object> metrics = MetricsUtils.currentServerMetrics()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RequestThrottler.setStallTime(STALL_TIME)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(1L,(long)metrics.get(\"request_throttle_wait_count\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "zk.create(\"/request_throttle_test- \" + i,(\"/request_throttle_test- \" + i).getBytes(),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,null,null)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "RequestThrottler.setDropStaleRequests(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i < TOTAL_REQUESTS@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(50)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RequestThrottler.setMaxRequests(2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "metrics = MetricsUtils.currentServerMetrics()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "cnxn.setStale()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(1,(long)metrics.get(\"stale_requests_dropped\"))@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(TOTAL_REQUESTS,(long)metrics.get(\"prep_processor_request_queued\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1L,(long)metrics.get(\"request_throttle_wait_count\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "zk.create(\"/request_throttle_test- \" + i,(\"/request_throttle_test- \" + i).getBytes(),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT,null,null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "testDropStaleRequests['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "metrics = MetricsUtils.currentServerMetrics()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(2L,(long)metrics.get(\"prep_processor_request_queued\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(1L,(long)metrics.get(\"request_throttle_wait_count\"))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(TOTAL_REQUESTS,(long)metrics.get(\"prep_processor_request_queued\"))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "ServerMetrics.getMetrics().resetAll()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(2L,(long)metrics.get(\"prep_processor_request_queued\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i < TOTAL_REQUESTS@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "entered = new CountDownLatch(TOTAL_REQUESTS)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(2L,(long)metrics.get(\"prep_processor_request_queued\"))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "resumeProcess.countDown()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int i = 0@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->32 [style = bold, label=""];
28->4 [style = solid, label="i"];
2->20 [style = dotted, label="true"];
8->16 [style = bold, label=""];
4->20 [style = solid, label="i"];
16->22 [style = dashed, label="0"];
2->20 [style = bold, label=""];
33->4 [style = dotted, label="true"];
31->9 [style = bold, label=""];
14->25 [style = dashed, label="0"];
29->27 [style = dotted, label="true"];
16->35 [style = dashed, label="0"];
32->0 [style = bold, label=""];
33->4 [style = bold, label=""];
23->2 [style = solid, label="i"];
18->12 [style = bold, label=""];
28->33 [style = solid, label="i"];
37->4 [style = solid, label="i"];
14->34 [style = bold, label=""];
23->4 [style = solid, label="i"];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
13->4 [style = solid, label="i"];
9->7 [style = bold, label=""];
19->6 [style = bold, label=""];
2->10 [style = bold, label=""];
13->23 [style = dashed, label="0"];
1->13 [style = bold, label=""];
26->39 [style = bold, label=""];
0->15 [style = bold, label=""];
37->33 [style = solid, label="i"];
1->23 [style = bold, label=""];
20->4 [style = bold, label=""];
8->22 [style = bold, label=""];
4->2 [style = solid, label="i"];
7->14 [style = bold, label=""];
21->12 [style = bold, label=""];
5->32 [style = dashed, label="0"];
25->24 [style = bold, label=""];
6->5 [style = bold, label=""];
29->27 [style = bold, label=""];
13->10 [style = solid, label="i"];
30->12 [style = bold, label=""];
23->20 [style = solid, label="i"];
13->2 [style = solid, label="i"];
28->33 [style = bold, label=""];
4->37 [style = bold, label=""];
5->0 [style = bold, label=""];
15->28 [style = bold, label=""];
34->26 [style = bold, label=""];
39->17 [style = bold, label=""];
3->8 [style = bold, label=""];
2->4 [style = dotted, label="true"];
24->17 [style = bold, label=""];
11->24 [style = dashed, label="0"];
4->10 [style = solid, label="i"];
17->3 [style = bold, label=""];
10->4 [style = bold, label=""];
33->31 [style = bold, label=""];
28->37 [style = solid, label="i"];
11->17 [style = bold, label=""];
10->20 [style = dashed, label="0"];
29->38 [style = bold, label=""];
7->25 [style = bold, label=""];
23->2 [style = bold, label=""];
27->29 [style = bold, label=""];
35->36 [style = bold, label=""];
12->19 [style = bold, label=""];
37->33 [style = bold, label=""];
17->29 [style = bold, label=""];
38->35 [style = bold, label=""];
33->37 [style = dotted, label="true"];
14->11 [style = bold, label=""];
2->10 [style = dotted, label="true"];
13->2 [style = bold, label=""];
15->1 [style = bold, label=""];
}
