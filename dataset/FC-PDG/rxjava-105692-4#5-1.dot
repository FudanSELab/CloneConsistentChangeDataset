digraph {
17 [style = filled, label = "Observable<Integer> o = Observable.range(1,list.size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "noBackpressure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "i <= Flowable.bufferSize() * 2 + 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>(0L)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "ts.assertTerminated()@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ts.request(Long.MAX_VALUE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<>(0L)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Flowable<Integer> f = Flowable.range(1,list.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "o.subscribe(to)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "list.add(i)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ArrayList<Integer> list = new ArrayList<Integer>(Flowable.bufferSize() * 2)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ArrayList<Integer> list = new ArrayList<>(Flowable.bufferSize() * 2)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ts.assertValueSequence(list)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "noBackpressure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "noBackpressure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "to.assertValueSequence(list)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ts.assertNoValues()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "to.assertTerminated()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "f.subscribe(ts)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
7->1 [style = bold, label=""];
21->19 [style = bold, label=""];
7->2 [style = solid, label="i"];
14->11 [style = solid, label="ts"];
7->1 [style = solid, label="i"];
14->5 [style = bold, label=""];
12->11 [style = bold, label=""];
9->2 [style = solid, label="i"];
4->21 [style = solid, label="list"];
6->17 [style = dashed, label="0"];
9->1 [style = solid, label="i"];
1->17 [style = bold, label=""];
1->7 [style = dotted, label="true"];
6->14 [style = bold, label=""];
20->18 [style = bold, label=""];
4->3 [style = solid, label="list"];
1->6 [style = bold, label=""];
10->5 [style = bold, label=""];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
4->15 [style = dashed, label="0"];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
20->18 [style = solid, label="to"];
10->20 [style = dashed, label="0"];
10->11 [style = solid, label="ts"];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
9->7 [style = solid, label="i"];
2->7 [style = bold, label=""];
18->21 [style = bold, label=""];
16->4 [style = bold, label=""];
9->1 [style = bold, label=""];
1->2 [style = dotted, label="true"];
10->14 [style = dashed, label="0"];
15->3 [style = solid, label="list"];
17->20 [style = bold, label=""];
}
