digraph {
5 [style = filled, label = "ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING).setHasBitmapIndexes(true).setHasMultipleValues(false).setDictionaryEncoded(true).setDictionaryValuesSorted(true).setDictionaryValuesUnique(true).setIsComplete(true)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING).setHasBitmapIndexes(true).setHasMultipleValues(false).setDictionaryEncoded(true).setDictionaryValuesSorted(true).setDictionaryValuesUnique(true)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "EasyMock.replay(factory)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(factory.getColumnCapabilities(DIM)).andReturn(capabilities).once()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ColumnCapabilities capabilities = new ColumnCapabilitiesImpl().setType(ValueType.STRING).setHasBitmapIndexes(false).setHasMultipleValues(false).setDictionaryEncoded(true).setDictionaryValuesSorted(false).setDictionaryValuesUnique(false).setIsComplete(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testCanPushDownLimitForJoinStringSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCanPushDownLimitForSegmentStringSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testCanPushDownLimitForSegmentStringSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.verify(factory)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertFalse(GroupByQueryEngineV2.canPushDownLimit(factory,DIM))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(GroupByQueryEngineV2.canPushDownLimit(factory,DIM))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
6->1 [style = bold, label=""];
5->1 [style = bold, label=""];
10->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
5->6 [style = dashed, label="0"];
9->1 [style = bold, label=""];
2->10 [style = bold, label=""];
4->5 [style = bold, label=""];
0->10 [style = dashed, label="0"];
7->6 [style = bold, label=""];
8->9 [style = bold, label=""];
}
