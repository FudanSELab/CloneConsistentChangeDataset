digraph {
10 [style = filled, label = "isTestDeprecatedAPI@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "job.getConfiguration().set(\"mapred.textoutputformat.separator\",\" \")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Job job = Job.getInstance()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "internalRun['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "internalRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DataSet<Tuple2<LongWritable,Text>> input@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TextOutputFormat.setOutputPath(hadoopOutputFormat.getJobConf(),new Path(resultPath))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DataSet<Tuple2<String,Integer>> counts = text.flatMap(new Tokenizer()).groupBy(0).sum(1)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DataSet<Tuple2<Text,LongWritable>> words = counts.map(new MapFunction<Tuple2<String,Integer>,Tuple2<Text,LongWritable>>(){@Override public Tuple2<Text,LongWritable> map(Tuple2<String,Integer> value){return new Tuple2<Text,LongWritable>(new Text(value.f0),new LongWritable(value.f1))}})@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "internalRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "hadoopOutputFormat.getJobConf().set(\"mapred.textoutputformat.separator\",\" \")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "HadoopOutputFormat<Text,LongWritable> hadoopOutputFormat = new HadoopOutputFormat<Text,LongWritable>(new TextOutputFormat<Text,LongWritable>(),job)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DataSet<String> text = input.map(new MapFunction<Tuple2<LongWritable,Text>,String>(){@Override public String map(Tuple2<LongWritable,Text> value){return value.f1.toString()}})@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "input = env.createInput(readHadoopFile(new TextInputFormat(),,,textPath))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "input = env.createInput(HadoopInputs.readHadoopFile(new TextInputFormat(),,,textPath))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean isTestDeprecatedAPI@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TextOutputFormat.setOutputPath(job,new Path(resultPath))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "words.output(hadoopOutputFormat)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "env.execute(\"Hadoop Compat WordCount\")@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "HadoopOutputFormat<Text,LongWritable> hadoopOutputFormat = new HadoopOutputFormat<Text,LongWritable>(new TextOutputFormat<Text,LongWritable>(),new JobConf())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "words.output(hadoopOutputFormat)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
19->18 [style = bold, label=""];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
15->7 [style = bold, label=""];
21->6 [style = bold, label=""];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
16->7 [style = bold, label=""];
12->2 [style = solid, label="hadoopOutputFormat"];
14->10 [style = bold, label=""];
0->11 [style = bold, label=""];
3->4 [style = dotted, label="true"];
10->9 [style = dotted, label="true"];
16->4 [style = dotted, label="true"];
19->6 [style = solid, label="hadoopOutputFormat"];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
17->19 [style = solid, label="job"];
17->21 [style = solid, label="job"];
7->14 [style = bold, label=""];
6->20 [style = bold, label=""];
13->17 [style = bold, label=""];
13->12 [style = bold, label=""];
8->2 [style = bold, label=""];
3->7 [style = bold, label=""];
4->10 [style = solid, label="isTestDeprecatedAPI"];
10->0 [style = bold, label=""];
10->0 [style = dotted, label="false"];
14->9 [style = bold, label=""];
10->9 [style = bold, label=""];
18->21 [style = bold, label=""];
5->19 [style = dashed, label="0"];
}
