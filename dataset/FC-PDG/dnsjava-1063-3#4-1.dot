digraph {
13 [style = filled, label = "assertThrows(,null)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(m_addr,ar.getSuffix())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(m_an2,ar.getPrefix())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "new A6Record(m_an,DClass.IN,m_ttl,m_prefix_bits,InetAddress.getByName(\"192.168.0.1\"),null)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(m_addr,ar.getSuffix())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThrows(,null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ctor_6arg['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNull(ar.getPrefix())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(m_prefix_bits,ar.getPrefixBits())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "new ARecord(m_an,DClass.IN,m_ttl,InetAddress.getByName(\"2001:0db8:85a3:08d3:1319:8a2e:0370:7334\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "ARecord ar = new ARecord(m_an,DClass.IN,m_ttl,m_addr)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(m_an,ar.getName())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Type.A6,ar.getType())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fail(\"IllegalArgumentException not thrown\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertThrows(,null)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(m_an,ar.getName())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(DClass.IN,ar.getDClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(m_ttl,ar.getTTL())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ctor_4arg['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(m_ttl,ar.getTTL())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Type.A,ar.getType())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(m_prefix_bits,ar.getPrefixBits())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "A6Record ar = new A6Record(m_an,DClass.IN,m_ttl,m_prefix_bits,m_addr,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(m_addr,ar.getAddress())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "fail(\"IllegalArgumentException not thrown\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThrows(,null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ctor_6arg['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "ar = new A6Record(m_an,DClass.IN,m_ttl,m_prefix_bits,m_addr,m_an2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Type.A6,ar.getType())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(DClass.IN,ar.getDClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThrows(,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->24 [style = dashed, label="0"];
21->10 [style = bold, label=""];
16->18 [style = bold, label=""];
29->5 [style = bold, label=""];
3->26 [style = dashed, label="0"];
19->20 [style = bold, label=""];
18->19 [style = bold, label=""];
14->17 [style = bold, label=""];
15->6 [style = bold, label=""];
2->9 [style = bold, label=""];
5->14 [style = bold, label=""];
23->8 [style = bold, label=""];
13->16 [style = bold, label=""];
30->29 [style = bold, label=""];
7->3 [style = bold, label=""];
11->15 [style = bold, label=""];
7->26 [style = bold, label=""];
17->7 [style = bold, label=""];
25->27 [style = bold, label=""];
6->4 [style = bold, label=""];
12->2 [style = bold, label=""];
18->22 [style = bold, label=""];
8->5 [style = bold, label=""];
5->24 [style = bold, label=""];
24->17 [style = bold, label=""];
0->8 [style = bold, label=""];
1->12 [style = bold, label=""];
28->25 [style = bold, label=""];
3->21 [style = bold, label=""];
4->1 [style = bold, label=""];
26->28 [style = bold, label=""];
19->25 [style = dashed, label="0"];
8->29 [style = dashed, label="0"];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
