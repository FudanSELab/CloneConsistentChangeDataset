digraph {
0 [style = filled, label = "List<StreamExpression> allStreamExpressions = getExpressionOperands(expression)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getExpressionOperandsRepresentingTypes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "List<StreamExpression> matchingStreamExpressions = new ArrayList<>()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "classSupplier != null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<StreamExpression> matchingStreamExpressions = new ArrayList<>()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "clazzes@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) Class clazz@@@10@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "clazzes@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "!clazz.isAssignableFrom(classSupplier.get())@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return false@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "clazzes@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "matchingStreamExpressions.add(streamExpression)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "return matchingStreamExpressions@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!clazz.isAssignableFrom(classSupplier.get())@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "doesRepresentTypes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getExpressionOperandsRepresentingTypes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(streamExpression.getFunctionName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) Class clazzes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "return matchingStreamExpressions@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "return true@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return false@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Class clazzes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "classSupplier != null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Class clazz@@@5@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "List<StreamExpression> allStreamExpressions = getExpressionOperands(expression)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Class clazzes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
7->1 [style = bold, label=""];
21->1 [style = dotted, label="true"];
9->18 [style = dashed, label="0"];
26->25 [style = bold, label=""];
11->4 [style = bold, label=""];
1->11 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
5->15 [style = bold, label=""];
14->17 [style = bold, label=""];
11->5 [style = dotted, label="true"];
25->28 [style = dotted, label="true"];
1->4 [style = dotted, label="true"];
29->23 [style = dotted, label="true"];
7->4 [style = bold, label=""];
1->7 [style = bold, label=""];
29->20 [style = dotted, label="true"];
9->23 [style = dashed, label="0"];
11->2 [style = bold, label=""];
14->13 [style = dotted, label="true"];
11->15 [style = bold, label=""];
1->11 [style = bold, label=""];
4->12 [style = dashed, label="0"];
0->7 [style = bold, label=""];
1->22 [style = bold, label=""];
29->26 [style = bold, label=""];
17->7 [style = bold, label=""];
1->3 [style = dotted, label="true"];
5->19 [style = bold, label=""];
25->24 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
9->0 [style = solid, label="expression"];
13->7 [style = solid, label="expression"];
8->6 [style = dotted, label="true"];
21->22 [style = bold, label=""];
1->21 [style = bold, label=""];
26->25 [style = solid, label="classSupplier"];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
21->1 [style = bold, label=""];
25->22 [style = dotted, label="true"];
11->16 [style = dotted, label="true"];
5->7 [style = bold, label=""];
1->2 [style = bold, label=""];
11->19 [style = dotted, label="true"];
19->4 [style = bold, label=""];
8->9 [style = dotted, label="true"];
22->24 [style = bold, label=""];
7->1 [style = solid, label="classSupplier"];
19->15 [style = bold, label=""];
17->15 [style = solid, label="matchingStreamExpressions"];
4->11 [style = solid, label="classSupplier"];
4->11 [style = bold, label=""];
25->27 [style = dotted, label="true"];
14->18 [style = dotted, label="true"];
25->21 [style = bold, label=""];
1->5 [style = dotted, label="true"];
11->7 [style = bold, label=""];
10->2 [style = solid, label="matchingStreamExpressions"];
25->21 [style = dotted, label="true"];
}
