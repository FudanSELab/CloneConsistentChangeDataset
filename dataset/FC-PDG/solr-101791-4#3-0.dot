digraph {
14 [style = filled, label = "StringValue casted = (StringValue)val@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"20.0\",casted.getString())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(20F,casted.getObject())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(casted.exists())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(val instanceof AnalyticsValue)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"1234.0\",casted.getString())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(new Float(20F),casted.getObject())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "val.setValue(20F).setExists(true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1234F,casted.getObject())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertTrue(casted.exists())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "objectCastingTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertTrue(val instanceof StringValue)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AnalyticsValue casted = (AnalyticsValue)val@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "val.setValue(1234F).setExists(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestFloatValue val = new TestFloatValue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(new Float(1234F),casted.getObject())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "objectCastingTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "stringCastingTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->13 [style = dashed, label="0"];
8->16 [style = bold, label=""];
8->10 [style = bold, label=""];
16->0 [style = bold, label=""];
17->1 [style = bold, label=""];
3->1 [style = bold, label=""];
4->6 [style = bold, label=""];
7->16 [style = dashed, label="0"];
4->15 [style = bold, label=""];
6->11 [style = dashed, label="0"];
7->0 [style = bold, label=""];
11->9 [style = bold, label=""];
12->1 [style = bold, label=""];
1->13 [style = bold, label=""];
8->7 [style = bold, label=""];
1->2 [style = solid, label="val"];
5->2 [style = bold, label=""];
2->14 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
10->0 [style = bold, label=""];
7->10 [style = dashed, label="0"];
1->14 [style = solid, label="val"];
14->8 [style = bold, label=""];
6->9 [style = bold, label=""];
1->13 [style = solid, label="val"];
4->11 [style = bold, label=""];
1->5 [style = solid, label="val"];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
}
