digraph {
2 [style = filled, label = "ContainerRequestEvent event3 = createRequest(jobId,3,Resource.newInstance(2048,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e826f,false,false)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "RMApp app = MockRMAppSubmitter.submitWithMemory(1024,rm)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testMapReduceScheduling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MockNM nodeManager2 = rm.registerNode(\"h2:1234\",10240)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ContainerRequestEvent event1 = createRequest(jobId,1,Resource.newInstance(2048,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e823e,true,false)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rm.drainEvents()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e82af,assigned,false)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "rm.drainEvents()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "allocator.sendRequest(event3)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "nodeManager2.nodeHeartbeat(true)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "allocator.schedule()@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rm.drainEvents()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "LOG.info(\"Running testMapReduceScheduling\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "rm.waitForState(app.getApplicationId(),RMAppState.KILLED)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob,SystemClock.getInstance())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "rm.drainEvents()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Job mockJob = mock()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "allocator.sendRequest(event2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ContainerRequestEvent event2 = createRequest(jobId,2,Resource.newInstance(3000,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e8257,false,true)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Configuration conf = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertFalse(\"Assigned count not correct\",\"h1\".equals(assig.getContainer().getNodeId().getHost()))@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "rm.drainEvents()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testAttemptNotFoundCausesRMCommunicatorException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",2048)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "rm.drainEvents()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rm.drainEvents()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assigned = allocator.schedule()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",10240)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "rm.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",1024)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testMapReduceScheduling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "rm.killApp(app.getApplicationId())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "allocator.sendRequest(event1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
32->38 [style = solid, label="rm"];
42->41 [style = bold, label=""];
12->5 [style = solid, label="appAttemptId"];
27->32 [style = bold, label=""];
11->38 [style = bold, label=""];
41->27 [style = bold, label=""];
12->5 [style = bold, label=""];
8->23 [style = bold, label=""];
36->17 [style = dashed, label="0"];
35->15 [style = bold, label=""];
8->31 [style = solid, label="jobId"];
7->12 [style = bold, label=""];
0->19 [style = bold, label=""];
15->21 [style = bold, label=""];
41->17 [style = solid, label="conf"];
20->1 [style = solid, label="event1"];
19->20 [style = bold, label=""];
2->3 [style = bold, label=""];
2->3 [style = solid, label="event3"];
18->33 [style = bold, label=""];
41->27 [style = solid, label="conf"];
16->7 [style = bold, label=""];
36->28 [style = bold, label=""];
44->40 [style = bold, label=""];
3->6 [style = bold, label=""];
28->26 [style = bold, label=""];
31->30 [style = solid, label="event2"];
5->14 [style = bold, label=""];
20->1 [style = bold, label=""];
25->29 [style = bold, label=""];
11->24 [style = bold, label=""];
9->16 [style = bold, label=""];
37->4 [style = bold, label=""];
29->18 [style = bold, label=""];
27->36 [style = solid, label="conf"];
39->22 [style = bold, label=""];
8->17 [style = solid, label="mockJob"];
17->36 [style = bold, label=""];
27->32 [style = solid, label="conf"];
7->12 [style = solid, label="appAttemptId"];
2->15 [style = solid, label="event3"];
20->15 [style = solid, label="event1"];
26->0 [style = bold, label=""];
12->36 [style = solid, label="appAttemptId"];
22->27 [style = bold, label=""];
32->36 [style = solid, label="rm"];
7->17 [style = solid, label="appAttemptId"];
23->36 [style = solid, label="mockJob"];
31->30 [style = bold, label=""];
24->38 [style = dashed, label="0"];
23->17 [style = bold, label=""];
14->8 [style = bold, label=""];
13->9 [style = bold, label=""];
34->35 [style = bold, label=""];
17->44 [style = bold, label=""];
40->43 [style = bold, label=""];
30->2 [style = bold, label=""];
1->31 [style = bold, label=""];
33->37 [style = bold, label=""];
8->17 [style = solid, label="jobId"];
32->11 [style = bold, label=""];
38->13 [style = bold, label=""];
27->17 [style = solid, label="rm"];
14->23 [style = solid, label="jobId"];
8->2 [style = solid, label="jobId"];
8->20 [style = solid, label="jobId"];
4->34 [style = bold, label=""];
6->25 [style = bold, label=""];
24->13 [style = bold, label=""];
34->15 [style = solid, label="assigned"];
}
