digraph {
13 [style = filled, label = "LinearRegressionWithSGD linSGDImpl = new LinearRegressionWithSGD()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "LassoModel model = new LassoWithSGD(1.0,100,0.01,1.0).run(testRDD.rdd())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int numAccurate = validatePrediction(validationData,model)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(numAccurate > nPoints * 4.0 / 5.0)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<LabeledPoint> validationData = LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,17,0.1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "double(( weights = {10,10}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "runLassoUsingStaticMethods['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = jsc.parallelize(LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,42,0.1),2).cache()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "runLassoUsingStaticMethods['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "linSGDImpl.setIntercept(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(numAccurate > nPoints * 4.0 / 5.0)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LassoModel model = LassoWithSGD.train(testRDD.rdd(),100,1.0,0.01,1.0)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "JavaRDD<LabeledPoint> testRDD = jsc.parallelize(LinearDataGenerator.generateLinearInputAsList(A,weights,nPoints,42,0.1),2).cache()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int nPoints = 10000@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "double A = 3.0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int nPoints = 100@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "LinearRegressionModel model = linSGDImpl.run(testRDD.rdd())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "double A = 0.0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "runLinearRegressionUsingConstructor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int numAccurate = validatePrediction(validationData,model)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->8 [style = solid, label="weights"];
18->17 [style = solid, label="numAccurate"];
8->10 [style = bold, label=""];
2->6 [style = bold, label=""];
10->0 [style = solid, label="model"];
12->11 [style = bold, label=""];
7->11 [style = dashed, label="0"];
18->17 [style = bold, label=""];
1->0 [style = bold, label=""];
19->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
11->19 [style = bold, label=""];
9->7 [style = bold, label=""];
13->16 [style = bold, label=""];
7->3 [style = bold, label=""];
3->19 [style = dashed, label="0"];
8->1 [style = bold, label=""];
11->17 [style = solid, label="nPoints"];
7->8 [style = solid, label="nPoints"];
3->2 [style = bold, label=""];
11->8 [style = solid, label="nPoints"];
6->15 [style = dashed, label="0"];
0->4 [style = bold, label=""];
14->18 [style = solid, label="model"];
1->0 [style = solid, label="model"];
7->4 [style = solid, label="nPoints"];
8->0 [style = solid, label="validationData"];
0->4 [style = solid, label="numAccurate"];
10->0 [style = bold, label=""];
2->15 [style = bold, label=""];
6->8 [style = bold, label=""];
5->7 [style = bold, label=""];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
19->8 [style = solid, label="A"];
3->8 [style = solid, label="A"];
8->18 [style = solid, label="validationData"];
15->8 [style = bold, label=""];
8->13 [style = bold, label=""];
}
