digraph {
16 [style = filled, label = "testInvalidPatternForInitialTimestampInConfig['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testIllegalValueForInitialTimestampInConfig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.STREAM_TIMESTAMP_DATE_FORMAT,\"InvalidPattern\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.AWS_SECRET_ACCESS_KEY,\"secretKey\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.STREAM_INITIAL_TIMESTAMP,\"2016-03-14\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "KinesisConfigUtil.validateConsumerConfiguration(testConfig)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.AWS_ACCESS_KEY_ID,\"accessKeyId\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Properties testConfig = getPropertiesWithRequiredFields()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "KinesisConfigUtil.validateConsumerConfiguration(testConfig)@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.AWS_CREDENTIALS_PROVIDER,\"BASIC\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "KinesisConfigUtil.validateConsumerConfiguration(testConfig)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "exception.expect()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.AWS_REGION,\"us-east-1\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.STREAM_INITIAL_POSITION,\"AT_TIMESTAMP\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Properties testConfig = new Properties()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testConfig.setProperty(ConsumerConfigConstants.AWS_CREDENTIALS_PROVIDER,\"BASIC\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "exception.expectMessage(\"Invalid value given for initial timestamp for AT_TIMESTAMP initial position in stream.\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testIllegalValueForInitialTimestampInConfig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
0->9 [style = bold, label=""];
10->14 [style = bold, label=""];
16->6 [style = bold, label=""];
2->3 [style = bold, label=""];
11->8 [style = solid, label="testConfig"];
11->12 [style = bold, label=""];
9->10 [style = bold, label=""];
8->14 [style = dashed, label="0"];
3->4 [style = bold, label=""];
2->17 [style = solid, label="testConfig"];
2->7 [style = solid, label="testConfig"];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
4->0 [style = bold, label=""];
6->1 [style = bold, label=""];
15->17 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
12->4 [style = bold, label=""];
2->11 [style = dashed, label="0"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
13->6 [style = bold, label=""];
}
