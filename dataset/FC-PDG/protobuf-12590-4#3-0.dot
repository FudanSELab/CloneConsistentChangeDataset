digraph {
24 [style = filled, label = "final ByteBuffer buffer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{return incompleteStateFor(byte1,UnsafeUtil.getByte(address),UnsafeUtil.getByte(address + 1))}@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "throw new AssertionError()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "remaining@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int byte1@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final int index@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int remaining@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final int remaining@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{return incompleteStateFor(byte1)}@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "unsafeIncompleteStateFor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return incompleteStateFor(byte1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "{return incompleteStateFor(byte1,UnsafeUtil.getByte(address))}@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "return incompleteStateFor(byte1,UnsafeUtil.getByte(address),UnsafeUtil.getByte(address + 1))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "long address@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "{throw new AssertionError()}@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "int remaining@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return incompleteStateFor(byte1,UnsafeUtil.getByte(address))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "return incompleteStateFor(byte1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "throw new AssertionError()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return incompleteStateFor(byte1,buffer.get(index),buffer.get(index + 1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "unsafeIncompleteStateFor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final int byte1@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int byte1@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "return incompleteStateFor(byte1,buffer.get(index))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "incompleteStateFor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
4->3 [style = bold, label=""];
7->1 [style = bold, label=""];
17->21 [style = solid, label="index"];
11->10 [style = solid, label="address"];
4->10 [style = dotted, label="true"];
6->4 [style = solid, label="remaining"];
7->16 [style = dashed, label="0"];
19->21 [style = solid, label="byte1"];
2->3 [style = bold, label=""];
9->4 [style = bold, label=""];
4->13 [style = bold, label=""];
4->15 [style = bold, label=""];
9->11 [style = dotted, label="true"];
14->12 [style = solid, label="byte1"];
4->20 [style = dotted, label="true"];
4->21 [style = bold, label=""];
5->6 [style = dotted, label="true"];
0->1 [style = solid, label="byte1"];
18->24 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
4->2 [style = bold, label=""];
5->0 [style = dotted, label="true"];
4->15 [style = dotted, label="true"];
8->24 [style = dashed, label="0"];
14->15 [style = solid, label="byte1"];
19->16 [style = solid, label="byte1"];
9->14 [style = dotted, label="true"];
4->7 [style = bold, label=""];
9->8 [style = dotted, label="true"];
20->21 [style = bold, label=""];
4->13 [style = dotted, label="true"];
4->21 [style = dotted, label="true"];
19->20 [style = solid, label="byte1"];
12->10 [style = bold, label=""];
18->4 [style = bold, label=""];
10->13 [style = bold, label=""];
14->10 [style = solid, label="byte1"];
21->22 [style = bold, label=""];
4->22 [style = dotted, label="true"];
5->4 [style = bold, label=""];
17->20 [style = solid, label="index"];
4->20 [style = bold, label=""];
8->1 [style = solid, label="address"];
7->15 [style = dashed, label="0"];
4->12 [style = bold, label=""];
8->4 [style = solid, label="remaining"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
4->16 [style = dotted, label="true"];
18->17 [style = dotted, label="true"];
8->2 [style = solid, label="address"];
5->8 [style = dotted, label="true"];
4->12 [style = dotted, label="true"];
16->20 [style = bold, label=""];
0->7 [style = solid, label="byte1"];
11->12 [style = solid, label="address"];
0->2 [style = solid, label="byte1"];
4->22 [style = bold, label=""];
4->16 [style = bold, label=""];
23->4 [style = solid, label="remaining"];
18->23 [style = dotted, label="true"];
}
