digraph {
34 [style = filled, label = "boolean handled = false@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "true@@@46@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "value = value.substring(1,value.length() - 1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "selectedFields = new HashMap<String,String>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<StreamExpression> evaluatorExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "operations = new ArrayList<>()@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String asName = parts(1(.trim()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "StreamExpression asValueExpression = StreamExpressionParser.parse(asValue)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "2 != parts.length@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "selectedFields.put(asValue,asName)@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<StreamExpressionParameter> selectAsFieldsExpressions = factory.getOperandsOfType(expression,)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "Throwable t = e@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "t instanceof EvaluatorException@@@47@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "value.toLowerCase(Locale.ROOT).contains(\" as \")@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "selectedEvaluators = new HashMap<StreamEvaluator,String>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "SelectStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "List<StreamExpression> operationExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamExpressionValue selectField = (StreamExpressionValue)parameter@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "!handled@@@47@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Throwable e@@@44@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "operations = new ArrayList<>()@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "!handled@@@57@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "String value = selectField.getValue().trim()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "selectedFields.put(asValue,asName)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String(( parts = value.split(\"(?i) as \")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "t == null@@@51@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "selectedEvaluators.put(factory.constructEvaluator(asValueExpression),asName)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "selectedFields.put(value,value)@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - evaluators must be given a name, like 'add(...) as result' but found %d evaluators without names\",expression,evaluatorExpressions.size()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "value.length() > 2 && value.startsWith(\"\"\") && value.endsWith(\"\"\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + selectAsFieldsExpressions.size() + operationExpressions.size()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "operations.add(factory.constructOperation(expr))@@@67@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "RecordCountStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "0 != evaluatorExpressions.size()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one select field but found %d\",expression,streamExpressions.size()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "{}@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "String asValue = parts(0(.trim()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "throw new IOException(t)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "SelectStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Throwable e@@@44@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "handled = true@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "1 != streamExpressions.size()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "factory.doesRepresentTypes(asValueExpression,)@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single stream but found %d (must be TupleStream types)\",expression,streamExpressions.size()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "0 == selectAsFieldsExpressions.size()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "asValue.contains(\"(\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "operations.add(factory.constructOperation(expr))@@@57@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting select field of form 'fieldA' or 'fieldA as alias' but found %s\",expression,value))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "t = t.getCause()@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "expression.getParameters().size() != streamExpressions.size()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32->28 [style = dotted, label="true"];
46->53 [style = dotted, label="true"];
14->1 [style = solid, label="value"];
26->10 [style = bold, label=""];
55->39 [style = dotted, label="true"];
7->36 [style = dotted, label="true"];
7->34 [style = dotted, label="true"];
48->8 [style = solid, label="expression"];
7->33 [style = dotted, label="true"];
21->8 [style = bold, label=""];
55->2 [style = bold, label=""];
40->25 [style = bold, label=""];
59->57 [style = bold, label=""];
22->12 [style = solid, label="asName"];
19->11 [style = bold, label=""];
6->39 [style = solid, label="expression"];
31->21 [style = bold, label=""];
5->45 [style = bold, label=""];
6->8 [style = solid, label="expression"];
12->9 [style = bold, label=""];
35->12 [style = dotted, label="true"];
20->1 [style = solid, label="value"];
14->7 [style = bold, label=""];
2->23 [style = bold, label=""];
19->1 [style = bold, label=""];
48->28 [style = solid, label="expression"];
11->37 [style = solid, label="asValue"];
46->49 [style = dotted, label="true"];
47->41 [style = solid, label="t"];
10->39 [style = bold, label=""];
42->48 [style = dotted, label="true"];
50->45 [style = bold, label=""];
56->58 [style = dotted, label="true"];
35->45 [style = bold, label=""];
22->17 [style = solid, label="asName"];
6->31 [style = solid, label="expression"];
56->54 [style = dotted, label="true"];
23->15 [style = dotted, label="true"];
36->17 [style = bold, label=""];
5->29 [style = dotted, label="true"];
14->37 [style = solid, label="value"];
5->36 [style = bold, label=""];
44->47 [style = bold, label=""];
35->12 [style = bold, label=""];
17->16 [style = bold, label=""];
2->3 [style = dotted, label="true"];
5->29 [style = bold, label=""];
22->37 [style = solid, label="asName"];
48->26 [style = solid, label="expression"];
6->26 [style = solid, label="expression"];
57->55 [style = bold, label=""];
3->39 [style = dashed, label="0"];
30->6 [style = dotted, label="true"];
7->37 [style = bold, label=""];
10->39 [style = dotted, label="true"];
47->50 [style = solid, label="t"];
42->31 [style = bold, label=""];
51->16 [style = bold, label=""];
50->49 [style = bold, label=""];
11->17 [style = solid, label="asValue"];
1->11 [style = bold, label=""];
42->24 [style = dotted, label="true"];
29->12 [style = solid, label="asValueExpression"];
7->33 [style = bold, label=""];
3->23 [style = bold, label=""];
49->47 [style = dotted, label="true"];
27->46 [style = dashed, label="0"];
7->51 [style = bold, label=""];
7->51 [style = dotted, label="false"];
49->44 [style = dotted, label="true"];
44->41 [style = bold, label=""];
36->16 [style = bold, label=""];
59->55 [style = bold, label=""];
10->2 [style = bold, label=""];
29->35 [style = bold, label=""];
37->13 [style = bold, label=""];
7->22 [style = dotted, label="true"];
16->20 [style = bold, label=""];
45->52 [style = bold, label=""];
58->57 [style = solid, label="expression"];
37->16 [style = bold, label=""];
48->1 [style = solid, label="expression"];
48->31 [style = solid, label="expression"];
49->45 [style = bold, label=""];
19->1 [style = dotted, label="true"];
7->45 [style = dotted, label="true"];
4->14 [style = bold, label=""];
6->28 [style = solid, label="expression"];
31->59 [style = bold, label=""];
56->31 [style = bold, label=""];
2->3 [style = bold, label=""];
49->44 [style = bold, label=""];
23->15 [style = bold, label=""];
25->18 [style = bold, label=""];
6->3 [style = solid, label="expression"];
6->15 [style = solid, label="expression"];
23->32 [style = bold, label=""];
49->50 [style = dotted, label="true"];
45->16 [style = bold, label=""];
51->52 [style = bold, label=""];
55->39 [style = bold, label=""];
4->7 [style = bold, label=""];
47->50 [style = bold, label=""];
7->5 [style = dotted, label="true"];
52->43 [style = bold, label=""];
5->35 [style = dotted, label="true"];
36->13 [style = bold, label=""];
7->11 [style = dotted, label="true"];
30->31 [style = bold, label=""];
39->2 [style = bold, label=""];
32->40 [style = bold, label=""];
47->44 [style = solid, label="t"];
29->35 [style = solid, label="asValueExpression"];
11->22 [style = bold, label=""];
24->58 [style = dashed, label="0"];
37->52 [style = bold, label=""];
17->13 [style = bold, label=""];
48->3 [style = solid, label="expression"];
41->47 [style = bold, label=""];
33->19 [style = bold, label=""];
58->39 [style = solid, label="expression"];
9->36 [style = bold, label=""];
18->16 [style = bold, label=""];
48->39 [style = solid, label="expression"];
27->36 [style = bold, label=""];
28->40 [style = bold, label=""];
30->24 [style = dotted, label="true"];
48->15 [style = solid, label="expression"];
20->37 [style = solid, label="value"];
53->41 [style = solid, label="t"];
11->29 [style = solid, label="asValue"];
7->19 [style = dotted, label="true"];
34->5 [style = bold, label=""];
0->27 [style = bold, label=""];
6->21 [style = solid, label="expression"];
45->37 [style = dotted, label="true"];
20->51 [style = solid, label="value"];
46->53 [style = bold, label=""];
35->9 [style = dotted, label="true"];
4->14 [style = dotted, label="true"];
48->21 [style = solid, label="expression"];
20->4 [style = bold, label=""];
14->51 [style = solid, label="value"];
53->49 [style = bold, label=""];
53->44 [style = solid, label="t"];
36->17 [style = dotted, label="true"];
7->37 [style = dotted, label="false"];
9->45 [style = bold, label=""];
22->34 [style = bold, label=""];
6->1 [style = solid, label="expression"];
58->31 [style = solid, label="expression"];
59->57 [style = dotted, label="true"];
13->38 [style = bold, label=""];
45->37 [style = bold, label=""];
35->36 [style = bold, label=""];
15->32 [style = bold, label=""];
32->28 [style = bold, label=""];
44->41 [style = dotted, label="true"];
8->26 [style = bold, label=""];
}
