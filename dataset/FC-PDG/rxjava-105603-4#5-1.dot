digraph {
0 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ts.assertValues(1,2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "to.awaitDone(5,TimeUnit.SECONDS)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Flowable.mergeDelayError(Flowable.just(Flowable.just(1),Flowable.just(2)).startWithItem(Flowable.error(new RuntimeException()))).subscribe(ts)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "errorInParentObservable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Observable.mergeDelayError(Observable.just(Observable.just(1),Observable.just(2)).startWithItem(Observable.error(new RuntimeException()))).subscribe(to)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "errorInParentFlowable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "ts.assertTerminated()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "to.assertValues(1,2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,ts.errors().size())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "errorInParentFlowable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "to.assertTerminated()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(1,to.errors().size())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
9->11 [style = bold, label=""];
15->14 [style = bold, label=""];
7->4 [style = solid, label="ts"];
7->4 [style = bold, label=""];
3->13 [style = dashed, label="0"];
11->15 [style = bold, label=""];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
5->4 [style = solid, label="ts"];
6->10 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
1->12 [style = dashed, label="0"];
12->10 [style = bold, label=""];
1->6 [style = bold, label=""];
10->13 [style = bold, label=""];
5->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
4->15 [style = dashed, label="0"];
11->15 [style = solid, label="to"];
14->12 [style = bold, label=""];
5->4 [style = bold, label=""];
5->7 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
