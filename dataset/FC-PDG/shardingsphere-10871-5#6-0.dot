digraph {
2 [style = filled, label = "Collection<DatabasePacket<?>> actual = executor.execute()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(actual.size(),is(2))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertThat(executor.getResponseType(),is(ResponseType.UPDATE))@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(connectionContext,bindPacket,backendConnection)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertThat(actual.size(),is(1))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertThat(actual.size(),is(1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertExecuteBindPacketWithUpdateSQL['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "PostgreSQLComCloseExecutor closeExecutor = new PostgreSQLComCloseExecutor(packet,backendConnection)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Iterator<DatabasePacket<?>> actualPackets = actual.iterator()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "setMockFieldIntoExecutor(executor)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(databaseCommunicationEngine.execute()).thenReturn(new UpdateResponseHeader(mock()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertExecuteClosePortal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PostgreSQLComBindExecutor executor = new PostgreSQLComBindExecutor(bindPacket,backendConnection)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertThat(actual.iterator().next(),is(instanceOf()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertThat(executor.getResponseType(),is(ResponseType.UPDATE))@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertThat(actualPackets.next(),is(instanceOf()))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(actualPackets.next(),is(instanceOf()))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Collection<DatabasePacket<?>> actual = closeExecutor.execute()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertExecuteBindPacketWithUpdateSQL['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(packet.getType()).thenReturn(PostgreSQLComClosePacket.Type.PORTAL)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(actual.iterator().next(),is(instanceOf()))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = bold, label=""];
11->6 [style = solid, label="executor"];
5->9 [style = bold, label=""];
0->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
7->14 [style = dashed, label="0"];
19->20 [style = bold, label=""];
11->6 [style = bold, label=""];
18->19 [style = bold, label=""];
0->11 [style = dashed, label="0"];
0->6 [style = solid, label="executor"];
1->0 [style = bold, label=""];
3->13 [style = dashed, label="0"];
0->20 [style = dashed, label="0"];
7->3 [style = bold, label=""];
1->11 [style = bold, label=""];
6->2 [style = bold, label=""];
15->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
13->12 [style = bold, label=""];
20->16 [style = bold, label=""];
8->5 [style = bold, label=""];
3->8 [style = bold, label=""];
2->14 [style = bold, label=""];
4->1 [style = bold, label=""];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
10->1 [style = bold, label=""];
}
