digraph {
19 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,String.format(\"%d-%d\",deleted(0( - 1,deleted(0( + 1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(PROJECT_NAME,String.format(\"%d,%d,%d\",deleted(0( - 1,deleted(0(,deleted(0( + 1))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(PROJECT_NAME,String.format(\"1,%d,%d\",deleted(0(,deleted(0( + 1))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "dummyRangeNumberMultiShouldSuccessIfSomeBuildDoesNotExist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,String.format(\"%d-%d\",deleted(0(,deleted(0( + 1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(result.stdout(),containsString(String.format(\"Builds: %d\" + System.lineSeparator(),deleted(0( + 1)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "dummyRangeRangeSingleShouldSuccessIfSomeBuildDoesNotExist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(result.stdout(),containsString(String.format(\"Builds: 1,%d\" + System.lineSeparator(),deleted(0( + 1)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(result,succeeded())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,String.format(\"1,%d,%d\",deleted(0(,deleted(0( + 1))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,String.format(\"%d,%d,%d\",deleted(0( - 1,deleted(0(,deleted(0( + 1))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertThat(result,succeeded())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(result.stdout(),containsString(String.format(\"Builds: %d\" + System.lineSeparator(),deleted(0( - 1)))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2,\" + deleted(0()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(result,succeeded())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dummyRangeNumberMultiShouldSuccessIfSomeBuildDoesNotExist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(PROJECT_NAME,\"1,2,\" + deleted(0()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertThat(result.stdout(),containsString(String.format(\"Builds: %d,%d\" + System.lineSeparator(),deleted(0( - 1,deleted(0( + 1)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(result,succeeded())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,String.format(\"%d-%d\",deleted(0( - 1,deleted(0())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: 1,2\" + System.lineSeparator()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->8 [style = solid, label="result"];
2->5 [style = solid, label="result"];
12->5 [style = bold, label=""];
10->4 [style = solid, label="result"];
11->8 [style = solid, label="result"];
5->20 [style = bold, label=""];
9->2 [style = bold, label=""];
8->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
0->11 [style = bold, label=""];
7->8 [style = solid, label="result"];
3->6 [style = bold, label=""];
12->5 [style = solid, label="result"];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
0->20 [style = dashed, label="0"];
19->8 [style = bold, label=""];
1->17 [style = bold, label=""];
6->10 [style = dashed, label="0"];
0->7 [style = bold, label=""];
8->1 [style = bold, label=""];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
2->12 [style = dashed, label="0"];
17->14 [style = solid, label="result"];
13->12 [style = bold, label=""];
5->0 [style = bold, label=""];
7->19 [style = dashed, label="0"];
17->14 [style = bold, label=""];
2->16 [style = dashed, label="0"];
16->5 [style = solid, label="result"];
10->4 [style = bold, label=""];
16->5 [style = bold, label=""];
6->4 [style = solid, label="result"];
11->8 [style = bold, label=""];
14->18 [style = bold, label=""];
4->1 [style = bold, label=""];
20->19 [style = bold, label=""];
2->5 [style = bold, label=""];
}
