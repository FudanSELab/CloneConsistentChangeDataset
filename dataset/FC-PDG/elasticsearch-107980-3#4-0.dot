digraph {
13 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "forceExecution == false && totalBytes > primaryAndCoordinatingLimits@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "this.primaryRejections.getAndIncrement()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of coordinating operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"coordinating_operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "markCoordinatingOperationStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "this.currentCombinedCoordinatingAndPrimaryBytes.getAndAdd(-bytes)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "markPrimaryOperationStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "currentPrimaryBytes.getAndAdd(bytes)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "totalPrimaryBytes.getAndAdd(bytes)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of primary operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "long bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "long bytesWithoutOperation = combinedBytes - bytes@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.get()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of coordinating operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "boolean forceExecution@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long totalBytesWithoutOperation = totalBytes - bytes@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "totalCoordinatingBytes.getAndAdd(bytes)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long bytes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "currentCoordinatingBytes.getAndAdd(bytes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "markCoordinatingOperationStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "totalBytes > primaryAndCoordinatingLimits@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "totalCombinedCoordinatingAndPrimaryBytes.getAndAdd(bytes)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long totalBytes = combinedBytes + replicaWriteBytes@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "this.coordinatingRejections.getAndIncrement()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long combinedBytes = this.currentCombinedCoordinatingAndPrimaryBytes.addAndGet(bytes)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->21 [style = dashed, label="0"];
8->19 [style = dashed, label="0"];
16->0 [style = bold, label=""];
18->1 [style = solid, label="bytes"];
4->24 [style = bold, label=""];
22->18 [style = dotted, label="true"];
3->8 [style = solid, label="bytes"];
10->20 [style = solid, label="replicaWriteBytes"];
7->23 [style = dashed, label="0"];
11->20 [style = dashed, label="0"];
11->15 [style = dashed, label="0"];
10->15 [style = solid, label="replicaWriteBytes"];
3->18 [style = dashed, label="0"];
10->11 [style = solid, label="replicaWriteBytes"];
5->24 [style = dashed, label="0"];
9->11 [style = solid, label="bytesWithoutOperation"];
3->0 [style = solid, label="bytes"];
5->15 [style = bold, label=""];
18->0 [style = solid, label="bytes"];
12->15 [style = solid, label="totalBytesWithoutOperation"];
9->15 [style = solid, label="bytesWithoutOperation"];
7->9 [style = dotted, label="true"];
7->8 [style = bold, label=""];
7->15 [style = dotted, label="true"];
16->3 [style = dotted, label="true"];
23->9 [style = dotted, label="true"];
2->7 [style = solid, label="totalBytes"];
17->23 [style = solid, label="forceExecution"];
7->12 [style = dotted, label="true"];
7->5 [style = dotted, label="true"];
24->20 [style = bold, label=""];
3->9 [style = solid, label="bytes"];
0->2 [style = solid, label="combinedBytes"];
3->12 [style = solid, label="bytes"];
18->9 [style = solid, label="bytes"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
2->23 [style = bold, label=""];
0->10 [style = bold, label=""];
19->1 [style = bold, label=""];
1->6 [style = bold, label=""];
23->4 [style = dotted, label="true"];
23->20 [style = dotted, label="true"];
22->0 [style = bold, label=""];
2->12 [style = solid, label="totalBytes"];
14->0 [style = bold, label=""];
12->4 [style = bold, label=""];
18->12 [style = solid, label="bytes"];
21->13 [style = bold, label=""];
7->11 [style = dotted, label="true"];
12->11 [style = solid, label="totalBytesWithoutOperation"];
1->21 [style = bold, label=""];
6->13 [style = bold, label=""];
10->2 [style = solid, label="replicaWriteBytes"];
23->19 [style = bold, label=""];
3->15 [style = solid, label="bytes"];
7->4 [style = dotted, label="true"];
3->11 [style = solid, label="bytes"];
2->23 [style = solid, label="totalBytes"];
0->9 [style = solid, label="combinedBytes"];
3->6 [style = solid, label="bytes"];
18->19 [style = solid, label="bytes"];
11->8 [style = bold, label=""];
14->3 [style = dotted, label="true"];
22->17 [style = dotted, label="true"];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
9->12 [style = bold, label=""];
2->7 [style = bold, label=""];
18->21 [style = solid, label="bytes"];
18->20 [style = solid, label="bytes"];
23->12 [style = dotted, label="true"];
3->1 [style = solid, label="bytes"];
20->19 [style = bold, label=""];
23->9 [style = bold, label=""];
4->5 [style = bold, label=""];
23->24 [style = dotted, label="true"];
15->8 [style = bold, label=""];
12->20 [style = solid, label="totalBytesWithoutOperation"];
9->20 [style = solid, label="bytesWithoutOperation"];
}
