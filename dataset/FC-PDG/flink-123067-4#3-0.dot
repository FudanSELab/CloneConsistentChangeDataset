digraph {
2 [style = filled, label = "long partMaxSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int taskIdx@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testHarness.processElement(new StreamRecord<>(Tuple2.of(\"test1\",1),1L))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "createRescalingTestSink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "TestUtils.checkLocalFs(outDir,3,0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testHarness.setProcessingTime(101L)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final long inactivityInterval = 100L@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TestUtils.checkLocalFs(outDir,2,0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "File outDir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "final RollingPolicy<Tuple2<String,Integer>,Integer> rollingPolicy = DefaultRollingPolicy.builder().withMaxPartSize(partMaxSize).withRolloverInterval(inactivityInterval).withInactivityInterval(inactivityInterval).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createRescalingTestSink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(String.format(\"test%d@%d\",bucketId,bucketId),fileContents.getValue())@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "long partMaxSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "long inactivityInterval@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "testHarness.processElement(new StreamRecord<>(Tuple2.of(\"test4\",4),10L))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testHarness.snapshot(0L,1L)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testHarness.setProcessingTime(0L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final File outDir = TEMP_FOLDER.newFolder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TestUtils.checkLocalFs(outDir,0,3)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "File outDir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "TestUtils.checkLocalFs(outDir,2,0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testHarness.setup()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TestUtils.checkLocalFs(outDir,1,3)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testHarness.processElement(new StreamRecord<>(Tuple2.of(\"test2\",2),1L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final RollingPolicy<Tuple2<String,Integer>,String> rollingPolicy = DefaultRollingPolicy.builder().withMaxPartSize(partMaxSize).withRolloverInterval(inactivityInterval).withInactivityInterval(inactivityInterval).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testHarness.snapshot(1L,0L)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int totalParallelism@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(bucketId >= 1 && bucketId <= 4)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final RollingPolicy<Tuple2<String,Integer>,String> rollingPolicy = DefaultRollingPolicy.builder().withMaxPartSize(partMaxSize).withRolloverInterval(inactivityInterval).withInactivityInterval(inactivityInterval).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "long inactivityInterval@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return createRescalingTestSink(outDir,totalParallelism,taskIdx,10L,new TupleToStringBucketer(),new Tuple2Encoder(),rollingPolicy,new DefaultBucketFactoryImpl<>())@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Map<File,String> contents = TestUtils.getFileContentByPath(outDir)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testHarness.notifyOfCompletedCheckpoint(1L)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testHarness.notifyOfCompletedCheckpoint(0L)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testHarness.open()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int taskIdx@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final long partMaxSize = 2L@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Integer bucketId = Integer.parseInt(fileContents.getKey().getParentFile().getName())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testClosingWithCustomizedBucketer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int totalParallelism@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "TestUtils.checkLocalFs(outDir,0,4)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testHarness.processElement(new StreamRecord<>(Tuple2.of(\"test3\",3),1L))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TestUtils.checkLocalFs(outDir,3,0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->29 [style = solid, label="outDir"];
27->18 [style = bold, label=""];
27->19 [style = solid, label="outDir"];
39->19 [style = bold, label=""];
29->15 [style = bold, label=""];
12->4 [style = solid, label="rollingPolicy"];
27->35 [style = solid, label="outDir"];
27->33 [style = solid, label="outDir"];
3->2 [style = dotted, label="true"];
34->33 [style = bold, label=""];
22->31 [style = bold, label=""];
20->31 [style = solid, label="bucketId"];
38->36 [style = bold, label=""];
24->38 [style = bold, label=""];
30->34 [style = bold, label=""];
15->30 [style = bold, label=""];
7->4 [style = bold, label=""];
8->10 [style = dotted, label="true"];
3->6 [style = dotted, label="true"];
6->14 [style = dashed, label="0"];
17->42 [style = bold, label=""];
27->32 [style = solid, label="outDir"];
41->20 [style = bold, label=""];
27->41 [style = solid, label="outDir"];
33->26 [style = bold, label=""];
20->22 [style = bold, label=""];
42->35 [style = bold, label=""];
23->29 [style = bold, label=""];
7->4 [style = solid, label="rollingPolicy"];
36->21 [style = bold, label=""];
25->24 [style = bold, label=""];
35->23 [style = bold, label=""];
9->4 [style = solid, label="taskIdx"];
10->4 [style = solid, label="outDir"];
3->5 [style = dotted, label="true"];
6->4 [style = solid, label="outDir"];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
40->27 [style = bold, label=""];
8->14 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
18->25 [style = bold, label=""];
8->12 [style = bold, label=""];
21->16 [style = bold, label=""];
28->17 [style = bold, label=""];
37->32 [style = bold, label=""];
27->17 [style = solid, label="outDir"];
26->37 [style = bold, label=""];
16->39 [style = bold, label=""];
32->41 [style = bold, label=""];
8->11 [style = dotted, label="true"];
8->13 [style = dotted, label="true"];
7->12 [style = dashed, label="0"];
5->4 [style = solid, label="totalParallelism"];
19->28 [style = bold, label=""];
8->9 [style = dotted, label="true"];
31->20 [style = bold, label=""];
13->4 [style = solid, label="totalParallelism"];
3->1 [style = dotted, label="true"];
27->30 [style = solid, label="outDir"];
0->4 [style = solid, label="taskIdx"];
20->22 [style = solid, label="bucketId"];
}
