digraph {
12 [style = filled, label = "ClientConfig config = new DefaultClientConfig(){@Override public Set<Object> getSingletons(){Set<Object> singletons = Sets.newHashSet()singletons.add(context)singletons.add(serviceNamesMarshaller)singletons.add(serviceInstanceMarshaller)singletons.add(serviceInstancesMarshaller)return singletons}}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(instances.getServices().size(),1)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Client client = Client.create(config)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(instances.getServices().get(0).getPayload(),payload)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "GenericType<ServiceInstance<Map<String,String>>> singleInstanceType = new GenericType<ServiceInstance<Map<String,String>>>(){}@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "WebResource resource = client.resource(\"http://\" + HOST + \":\" + port)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(instances.getServices().size(),1)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "ClientConfig config = new DefaultClientConfig(){@Override public Set<Object> getSingletons(){Set<Object> singletons = Sets.newHashSet()singletons.add(context)singletons.add(serviceNamesMarshaller)singletons.add(serviceInstanceMarshaller)singletons.add(serviceInstancesMarshaller)return singletons}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "GenericType<ServiceInstances<Map<String,String>>> type = new GenericType<ServiceInstances<Map<String,String>>>(){}@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRegisterService['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "resource.path(\"/v1/service/test/\" + service.getId()).type(MediaType.APPLICATION_JSON_TYPE).put(service)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "payload.put(\"three\",\"3\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(names.getNames(),Lists.newArrayList(\"test\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "testEmptyServiceNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(instance,service)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(names.getNames(),Lists.newArrayList(\"test\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "ServiceNames names = resource.path(\"/v1/service\").get()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(instances.getServices().get(0),service)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Client client = Client.create(config)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testRegisterService['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ServiceInstance<Map<String,String>> instance = resource.path(\"/v1/service/test/\" + service.getId()).get(singleInstanceType)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(instances.getServices().get(0),service)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "WebResource resource = client.resource(\"http://localhost:\" + port)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ServiceNames names = resource.path(\"/v1/service\").get()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(names.getNames(),Lists.newArrayList())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "payload.put(\"two\",\"2\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "payload.put(\"one\",\"1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,String> payload = Maps.newHashMap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ServiceInstance<Map<String,String>> service = ServiceInstance.builder().name(\"test\").payload(payload).serviceType(ServiceType.STATIC).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(instances.getServices().get(0).getPayload(),payload)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(instance,service)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ServiceInstances<Map<String,String>> instances = resource.path(\"/v1/service/test\").get(type)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "WebResource resource = client.resource(\"http://localhost:\" + port)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21->10 [style = bold, label=""];
10->2 [style = solid, label="singleInstanceType"];
20->17 [style = bold, label=""];
15->23 [style = dashed, label="0"];
2->22 [style = solid, label="instance"];
0->13 [style = bold, label=""];
3->1 [style = bold, label=""];
16->8 [style = bold, label=""];
9->24 [style = dashed, label="0"];
18->22 [style = dashed, label="0"];
25->13 [style = bold, label=""];
5->13 [style = solid, label="service"];
27->30 [style = bold, label=""];
26->1 [style = bold, label=""];
11->4 [style = bold, label=""];
29->31 [style = bold, label=""];
17->7 [style = solid, label="type"];
8->20 [style = dashed, label="0"];
14->10 [style = bold, label=""];
2->18 [style = bold, label=""];
1->21 [style = solid, label="payload"];
5->22 [style = solid, label="service"];
13->16 [style = bold, label=""];
30->29 [style = bold, label=""];
19->25 [style = bold, label=""];
19->0 [style = bold, label=""];
17->7 [style = bold, label=""];
8->17 [style = bold, label=""];
23->24 [style = bold, label=""];
5->18 [style = solid, label="service"];
1->6 [style = bold, label=""];
0->25 [style = dashed, label="0"];
5->12 [style = bold, label=""];
24->21 [style = bold, label=""];
15->9 [style = bold, label=""];
6->11 [style = bold, label=""];
7->23 [style = bold, label=""];
28->27 [style = solid, label="config"];
5->24 [style = solid, label="service"];
9->14 [style = bold, label=""];
7->15 [style = bold, label=""];
14->21 [style = dashed, label="0"];
10->2 [style = bold, label=""];
12->19 [style = solid, label="config"];
1->14 [style = solid, label="payload"];
28->27 [style = bold, label=""];
8->31 [style = dashed, label="0"];
12->19 [style = bold, label=""];
2->22 [style = bold, label=""];
16->20 [style = bold, label=""];
32->28 [style = bold, label=""];
4->5 [style = bold, label=""];
2->18 [style = solid, label="instance"];
5->9 [style = solid, label="service"];
}
