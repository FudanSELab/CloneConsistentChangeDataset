digraph {
1 [style = filled, label = "onMatchRight['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Mappings.TargetMapping bottomBottomMapping = Mappings.createShiftMapping(aCount + bCount + cCount,0,aCount + bCount,cCount,cCount,aCount,bCount)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final RexBuilder rexBuilder = cluster.getRexBuilder()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "onMatchLeft['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "RexNode newBottomCondition = RexUtil.composeConjunction(rexBuilder,newBottomList,false)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final JoinRelBase bottomJoin = call.rel(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final RelNode relC = call.rel(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final RelOptCluster cluster = topJoin.getCluster()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "call.transformTo(newProject)@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "topJoin.getJoinType() != JoinRelType.INNER || bottomJoin.getJoinType() != JoinRelType.INNER@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "new RexPermuteInputsShuttle(topMapping,newBottomJoin,relA).visitList(bottomIntersecting,newTopList)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final List<RexNode> bottomIntersecting = new ArrayList<RexNode>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "nonIntersecting.isEmpty()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final RelNode relA = bottomJoin.getLeft()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final RelNode newProject = RelOptUtil.createProject(projectFactory,newTopJoin,Mappings.asList(topMapping))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final Mappings.TargetMapping topMapping = Mappings.createShiftMapping(aCount + bCount + cCount,cCount + bCount,0,aCount,cCount,aCount,bCount,0,aCount + bCount,cCount)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "new RexPermuteInputsShuttle(bottomMapping,relC,relB).visitList(nonIntersecting,newBottomList)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "split(bottomJoin.getCondition(),aBitSet,bottomIntersecting,bottomNonIntersecting)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "onMatchRight['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final BitSet aBitSet = BitSets.range(aCount)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final List<RexNode> intersecting = new ArrayList<RexNode>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RelOptRuleCall call@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "@SuppressWarnings(\"SuspiciousNameCombination\") final JoinRelBase newTopJoin = topJoin.copy(topJoin.getTraitSet(),newTopCondition,newBottomJoin,relA,topJoin.getJoinType(),topJoin.isSemiJoinDone())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "split(topJoin.getCondition(),aBitSet,intersecting,nonIntersecting)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final List<RexNode> nonIntersecting = new ArrayList<RexNode>()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final Mappings.TargetMapping bottomMapping = Mappings.createShiftMapping(aCount + bCount + cCount,cCount,aCount,bCount,0,aCount + bCount,cCount)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<RexNode> newTopList = new ArrayList<RexNode>()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RexNode newTopCondition = RexUtil.composeConjunction(rexBuilder,newTopList,false)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<RexNode> newBottomList = new ArrayList<RexNode>()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final RelNode relB = bottomJoin.getRight()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "new RexPermuteInputsShuttle(bottomBottomMapping,relC,relB).visitList(bottomNonIntersecting,newBottomList)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final JoinRelBase topJoin = call.rel(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "RelOptRuleCall call@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final List<RexNode> bottomNonIntersecting = new ArrayList<RexNode>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final int cCount = relC.getRowType().getFieldCount()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final JoinRelBase newBottomJoin = bottomJoin.copy(bottomJoin.getTraitSet(),newBottomCondition,relC,relB,bottomJoin.getJoinType(),bottomJoin.isSemiJoinDone())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final int aCount = relA.getRowType().getFieldCount()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "new RexPermuteInputsShuttle(topMapping,newBottomJoin,relA).visitList(intersecting,newTopList)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int bCount = relB.getRowType().getFieldCount()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38->40 [style = solid, label="bottomIntersecting"];
29->36 [style = bold, label=""];
36->6 [style = bold, label=""];
13->35 [style = solid, label="aBitSet"];
28->5 [style = solid, label="bottomNonIntersecting"];
19->12 [style = solid, label="aCount"];
25->27 [style = solid, label="newTopCondition"];
22->33 [style = bold, label=""];
34->36 [style = solid, label="cCount"];
2->0 [style = dotted, label="true"];
28->40 [style = bold, label=""];
12->5 [style = bold, label=""];
33->35 [style = solid, label="intersecting"];
33->15 [style = bold, label=""];
38->28 [style = bold, label=""];
27->8 [style = solid, label="newTopJoin"];
20->26 [style = bold, label=""];
17->5 [style = solid, label="newBottomList"];
34->12 [style = solid, label="cCount"];
26->25 [style = bold, label=""];
14->36 [style = solid, label="bCount"];
34->13 [style = bold, label=""];
8->3 [style = bold, label=""];
34->32 [style = solid, label="cCount"];
36->8 [style = solid, label="topMapping"];
6->20 [style = solid, label="newTopList"];
37->29 [style = bold, label=""];
14->34 [style = bold, label=""];
15->35 [style = solid, label="nonIntersecting"];
13->40 [style = solid, label="aBitSet"];
33->20 [style = solid, label="intersecting"];
37->29 [style = solid, label="newBottomCondition"];
4->33 [style = bold, label=""];
10->7 [style = bold, label=""];
17->23 [style = bold, label=""];
11->18 [style = bold, label=""];
15->35 [style = bold, label=""];
14->12 [style = solid, label="bCount"];
22->4 [style = bold, label=""];
14->32 [style = solid, label="bCount"];
19->36 [style = solid, label="aCount"];
24->37 [style = solid, label="rexBuilder"];
6->20 [style = bold, label=""];
25->27 [style = bold, label=""];
28->40 [style = solid, label="bottomNonIntersecting"];
17->37 [style = solid, label="newBottomList"];
7->38 [style = bold, label=""];
30->11 [style = bold, label=""];
15->23 [style = solid, label="nonIntersecting"];
24->25 [style = solid, label="rexBuilder"];
19->14 [style = bold, label=""];
29->27 [style = solid, label="newBottomJoin"];
21->39 [style = bold, label=""];
19->13 [style = solid, label="aCount"];
6->26 [style = solid, label="newTopList"];
8->3 [style = solid, label="newProject"];
39->31 [style = bold, label=""];
16->29 [style = solid, label="relC"];
16->21 [style = bold, label=""];
5->24 [style = bold, label=""];
24->37 [style = bold, label=""];
40->32 [style = bold, label=""];
38->26 [style = solid, label="bottomIntersecting"];
30->9 [style = dotted, label="true"];
23->12 [style = bold, label=""];
35->10 [style = bold, label=""];
19->32 [style = solid, label="aCount"];
1->0 [style = dotted, label="true"];
13->22 [style = bold, label=""];
0->9 [style = dashed, label="0"];
39->29 [style = solid, label="relB"];
6->25 [style = solid, label="newTopList"];
22->4 [style = dotted, label="true"];
17->23 [style = solid, label="newBottomList"];
32->17 [style = bold, label=""];
31->19 [style = bold, label=""];
10->7 [style = dotted, label="true"];
27->8 [style = bold, label=""];
21->27 [style = solid, label="relA"];
10->38 [style = bold, label=""];
18->16 [style = bold, label=""];
}
