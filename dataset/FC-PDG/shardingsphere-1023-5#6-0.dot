digraph {
8 [style = filled, label = "JDBCExecutionUnit executionUnit = (JDBCExecutionUnit)args(0(@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final Method method@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "beforeMethod['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Object(( args@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "target.setAttachment(builder.startActive(true))@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Span root = (Span)((Map<String,Object>)args(2().get(\"_root_span_\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Method method@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.asChildOf(root)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ExecutionUnit unit = executionUnit.getExecutionUnit()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final AdviceTargetObject target@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final AdviceTargetObject target@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "(boolean)args(1(@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "builder.withTag(Tags.COMPONENT.getKey(),JaegerConstants.COMPONENT_NAME).withTag(Tags.DB_TYPE.getKey(),JaegerConstants.DB_TYPE_VALUE).withTag(Tags.DB_INSTANCE.getKey(),unit.getDataSourceName()).withTag(Tags.PEER_HOSTNAME.getKey(),metaData.getHostName()).withTag(Tags.PEER_PORT.getKey(),metaData.getPort()).withTag(Tags.SPAN_KIND.getKey(),Tags.SPAN_KIND_CLIENT).withTag(Tags.DB_STATEMENT.getKey(),unit.getSqlUnit().getSql()).withTag(JaegerConstants.ShardingSphereTags.DB_BIND_VARIABLES.getKey(),unit.getSqlUnit().getParameters().toString())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Span root = (Span)((Map<String,Object>)args(2().get(JaegerConstants.ROOT_SPAN)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "beforeMethod['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Method getMetadataMethod = .getDeclaredMethod(\"getDataSourceMetaData\",)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "ExecutionUnit unit = executionUnit.getExecutionUnit()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final AdviceTargetObject target@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DataSourceMetaData metaData = (DataSourceMetaData)getMetadataMethod.invoke(target,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16d940d)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final MethodInvocationResult result@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "getMetadataMethod.setAccessible(true)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final Method method@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "target.setAttachment(builder.startActive(true))@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "beforeMethod['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final MethodInvocationResult result@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final JDBCExecutionUnit executionUnit = (JDBCExecutionUnit)args(0(@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Tracer.SpanBuilder builder = GlobalTracer.get().buildSpan(OPERATION_NAME)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Object(( args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "builder.withTag(Tags.COMPONENT.getKey(),ShardingSphereTags.COMPONENT_NAME).withTag(Tags.SPAN_KIND.getKey(),Tags.SPAN_KIND_CLIENT).withTag(Tags.DB_TYPE.getKey(),\"sql\").withTag(Tags.DB_INSTANCE.getKey(),unit.getDataSourceName()).withTag(Tags.DB_STATEMENT.getKey(),unit.getSqlUnit().getSql()).withTag(ShardingSphereTags.DB_BIND_VARIABLES.getKey(),unit.getSqlUnit().getParameters().toString())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->8 [style = dotted, label="false"];
3->24 [style = bold, label=""];
1->19 [style = dotted, label="false"];
1->21 [style = dotted, label="false"];
26->28 [style = dotted, label="true"];
22->16 [style = dotted, label="true"];
17->21 [style = bold, label=""];
6->7 [style = dotted, label="true"];
26->25 [style = dotted, label="true"];
11->0 [style = bold, label=""];
9->3 [style = solid, label="root"];
19->20 [style = bold, label=""];
16->1 [style = solid, label="args"];
10->1 [style = solid, label="args"];
1->8 [style = bold, label=""];
1->0 [style = dotted, label="false"];
1->17 [style = dotted, label="false"];
12->1 [style = bold, label=""];
1->20 [style = dotted, label="false"];
14->19 [style = bold, label=""];
21->24 [style = bold, label=""];
1->23 [style = bold, label=""];
26->9 [style = bold, label=""];
3->5 [style = bold, label=""];
26->10 [style = dotted, label="true"];
6->9 [style = bold, label=""];
27->1 [style = solid, label="args"];
9->13 [style = dashed, label="0"];
8->23 [style = dashed, label="0"];
8->11 [style = bold, label=""];
6->4 [style = dotted, label="true"];
13->12 [style = bold, label=""];
1->3 [style = bold, label=""];
1->3 [style = dotted, label="true"];
6->10 [style = dotted, label="true"];
13->3 [style = solid, label="root"];
16->23 [style = solid, label="args"];
1->14 [style = dotted, label="false"];
23->14 [style = bold, label=""];
10->8 [style = solid, label="args"];
20->17 [style = bold, label=""];
22->10 [style = dotted, label="true"];
6->2 [style = dotted, label="true"];
0->5 [style = bold, label=""];
26->27 [style = dotted, label="true"];
22->18 [style = dotted, label="true"];
1->23 [style = dotted, label="false"];
1->11 [style = dotted, label="false"];
15->17 [style = solid, label="target"];
22->13 [style = bold, label=""];
11->14 [style = dashed, label="0"];
9->12 [style = bold, label=""];
22->15 [style = dotted, label="true"];
27->8 [style = solid, label="args"];
}
