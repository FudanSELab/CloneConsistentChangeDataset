digraph {
16 [style = filled, label = "fail(\"This future had an execution exception\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(future.isCancelled())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(listener,never()).exception(Matchers.any())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(future.isCancelled())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "InterruptedException e@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSetListeners['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ExecutionException ee@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "future.setResult(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(ee.getCause() instanceof NullPointerException)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "future.get()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "fail(\"This future was not interrupted\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(future.isDone())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IoFutureListener<Boolean> listener = mock()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertFalse(future.isDone())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final IoFutureListener<Boolean> listener = mock()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertTrue(future.isDone())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "future.setException(new NullPointerException())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testSetListeners['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verify(listener).completed(true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "future.register(listener)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(future.isCancelled())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->10 [style = bold, label=""];
20->17 [style = bold, label=""];
7->1 [style = bold, label=""];
4->6 [style = bold, label=""];
1->15 [style = dashed, label="0"];
12->11 [style = bold, label=""];
14->22 [style = bold, label=""];
10->3 [style = bold, label=""];
14->22 [style = dotted, label="true"];
13->4 [style = solid, label="listener"];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
0->4 [style = solid, label="listener"];
18->20 [style = dotted, label="true"];
17->23 [style = bold, label=""];
19->16 [style = bold, label=""];
21->5 [style = bold, label=""];
18->20 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
8->5 [style = bold, label=""];
3->19 [style = bold, label=""];
0->4 [style = bold, label=""];
5->11 [style = dashed, label="0"];
11->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
22->17 [style = bold, label=""];
7->15 [style = bold, label=""];
6->7 [style = bold, label=""];
1->10 [style = bold, label=""];
13->4 [style = bold, label=""];
}
