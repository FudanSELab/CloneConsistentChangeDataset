digraph {
2 [style = filled, label = "TypedProperties properties = new TypedProperties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolean getComplexRecordKey@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "properties.put(HoodieWriteConfig.KEYGENERATOR_CLASS_PROP,.getName())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "getCommonProps['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return properties@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "getCommonProps['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "boolean useKeyGeneratorClassName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "properties.put(KeyGeneratorOptions.RECORDKEY_FIELD_OPT_KEY,\"_row_key,pii_col\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "properties.put(KeyGeneratorOptions.RECORDKEY_FIELD_OPT_KEY,\"_row_key, pii_col\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getComplexRecordKey@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "properties.put(KeyGeneratorOptions.RECORDKEY_FIELD_OPT_KEY,\"_row_key\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "useKeyGeneratorClassName@@@10@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "getCommonProps['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "properties.put(HoodieWriteConfig.KEYGENERATOR_TYPE_PROP,KeyGeneratorType.CUSTOM.name())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "properties.put(KeyGeneratorOptions.HIVE_STYLE_PARTITIONING_OPT_KEY,\"true\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean getComplexRecordKey@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8->11 [style = dotted, label="true"];
14->4 [style = dotted, label="true"];
0->7 [style = bold, label=""];
2->5 [style = bold, label=""];
5->3 [style = dotted, label="true"];
12->2 [style = bold, label=""];
2->6 [style = solid, label="properties"];
8->10 [style = dotted, label="false"];
7->6 [style = bold, label=""];
12->13 [style = dotted, label="true"];
5->15 [style = dotted, label="true"];
0->8 [style = bold, label=""];
15->7 [style = bold, label=""];
3->7 [style = bold, label=""];
4->5 [style = solid, label="getComplexRecordKey"];
11->7 [style = bold, label=""];
13->8 [style = solid, label="useKeyGeneratorClassName"];
8->11 [style = bold, label=""];
5->0 [style = dotted, label="false"];
10->7 [style = bold, label=""];
5->0 [style = bold, label=""];
12->9 [style = dotted, label="true"];
3->8 [style = bold, label=""];
9->5 [style = solid, label="getComplexRecordKey"];
3->15 [style = dashed, label="0"];
14->2 [style = bold, label=""];
4->13 [style = dashed, label="0"];
5->3 [style = bold, label=""];
1->4 [style = dotted, label="true"];
1->2 [style = bold, label=""];
8->10 [style = bold, label=""];
5->15 [style = bold, label=""];
}
