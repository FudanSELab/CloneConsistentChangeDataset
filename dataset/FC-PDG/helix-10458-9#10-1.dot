digraph {
5 [style = filled, label = "Collection<String> databases = _routingTableProvider.getResources()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getInstanceConfigs().size(),_instances.size())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(_routingTableProvider_ev.getInstanceConfigs().size(),_instances.size())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getLiveInstances().size(),_instances.size() - 1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(_routingTableProvider_default.getInstanceConfigs().size(),_instances.size())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testRoutingTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(_routingTableProvider_cs.getInstanceConfigs().size(),_instances.size())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testShutdownInstance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "validateRoutingTable(_routingTableProvider,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(2)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getInstanceConfigs().size(),_instances.size())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "validateRoutingTable(_routingTableProvider_default,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(1),_instances.get(2)))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Collection<String> databases = _routingTableProvider_default.getResources()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "_participants.get(1).syncStop()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getLiveInstances().size(),_instances.size() - 1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getLiveInstances().size(),_instances.size())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "validateRoutingTable(_routingTableProvider_cs,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(1),_instances.get(2)))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(_routingTableProvider_default.getLiveInstances().size(),_instances.size())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "validateRoutingTable(_routingTableProvider_ev,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(1),_instances.get(2)))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(databases.size(),1)@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getInstanceConfigs().size(),_instances.size())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "validateRoutingTable(_routingTableProvider2,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(2)))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getLiveInstances().size(),_instances.size())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "validateRoutingTable(_routingTableProvider,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(1),_instances.get(2)))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(databases.size(),1)@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testRoutingTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(_routingTableProvider_ev.getLiveInstances().size(),_instances.size())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(_routingTableProvider_cs.getLiveInstances().size(),_instances.size())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5->8 [style = bold, label=""];
7->21 [style = dashed, label="0"];
10->15 [style = bold, label=""];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
26->25 [style = bold, label=""];
1->3 [style = bold, label=""];
19->11 [style = bold, label=""];
6->0 [style = bold, label=""];
6->14 [style = dashed, label="0"];
15->19 [style = bold, label=""];
0->20 [style = dashed, label="0"];
3->22 [style = bold, label=""];
22->23 [style = bold, label=""];
1->22 [style = dashed, label="0"];
0->7 [style = bold, label=""];
20->10 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->23 [style = dashed, label="0"];
25->24 [style = bold, label=""];
3->5 [style = bold, label=""];
13->12 [style = bold, label=""];
5->17 [style = dashed, label="0"];
2->21 [style = bold, label=""];
7->2 [style = bold, label=""];
11->17 [style = bold, label=""];
7->10 [style = dashed, label="0"];
18->14 [style = bold, label=""];
24->27 [style = bold, label=""];
16->9 [style = bold, label=""];
27->2 [style = bold, label=""];
17->16 [style = bold, label=""];
14->20 [style = bold, label=""];
21->3 [style = bold, label=""];
9->13 [style = bold, label=""];
}
