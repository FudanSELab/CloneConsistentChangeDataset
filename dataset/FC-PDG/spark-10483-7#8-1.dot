digraph {
15 [style = filled, label = "assert(model2.getThreshold() == 0.4)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(10,parent.getMaxIter())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assert(parent.getThreshold() == 0.6)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assert(parent2.getThreshold() == 0.4)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "LogisticRegression parent2 = model2.parent()@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "logisticRegressionWithSetters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assert(model.getThreshold() == 0.6)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "foundNonZero = true@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "LogisticRegressionModel model = lr.fit(dataset)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "r.getDouble(0) != 0.0@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "model.transform(dataset).registerTempTable(\"predAllZero\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"thePred\",model2.getPredictionCol())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "LinearRegression parent = model.parent()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LogisticRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.threshold().w(0.4),lr.probabilityCol().w(\"theProb\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataFrame predNotAllZero = jsql.sql(\"SELECT prediction, myProb FROM predNotAllZero\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "LinearRegression lr = new LinearRegression().setMaxIter(10).setRegParam(1.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "LogisticRegression parent = model.parent()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(1.0,parent.getRegParam(),0.0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "logisticRegressionWithSetters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "LogisticRegression lr = new LogisticRegression().setMaxIter(10).setRegParam(1.0).setThreshold(0.6).setProbabilityCol(\"myProbability\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "LinearRegression parent2 = model2.parent()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "model.transform(dataset,model.threshold().w(0.0),model.probabilityCol().w(\"myProb\")).registerTempTable(\"predNotAllZero\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "LogisticRegression parent2 = (LogisticRegression)model2.parent()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assert(parent.getMaxIter() == 10)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assert(r.getDouble(0) == 0.0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(5,parent2.getMaxIter())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assert(model2.getProbabilityCol().equals(\"theProb\"))@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean foundNonZero = false@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "LinearRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.predictionCol().w(\"thePred\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(0.1,parent2.getRegParam(),0.0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "LogisticRegression parent = (LogisticRegression)model.parent()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "linearRegressionWithSetters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assert(parent2.getMaxIter() == 5)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "r.getDouble(0) != 0.0@@@20@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assert(foundNonZero)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assert(parent.getRegParam() == 1.0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataFrame predAllZero = jsql.sql(\"SELECT prediction, myProbability FROM predAllZero\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "model.setThreshold(1.0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "LinearRegressionModel model = lr.fit(dataset)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assert(parent2.getRegParam() == 0.1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->37 [style = bold, label=""];
35->31 [style = bold, label=""];
33->29 [style = solid, label="parent"];
33->35 [style = bold, label=""];
28->6 [style = bold, label=""];
20->17 [style = bold, label=""];
4->24 [style = bold, label=""];
8->15 [style = bold, label=""];
0->13 [style = bold, label=""];
19->12 [style = bold, label=""];
11->14 [style = bold, label=""];
10->34 [style = dashed, label="0"];
1->0 [style = solid, label="foundNonZero"];
6->18 [style = bold, label=""];
17->9 [style = bold, label=""];
38->29 [style = bold, label=""];
34->33 [style = bold, label=""];
23->28 [style = dashed, label="0"];
11->14 [style = dotted, label="true"];
26->14 [style = bold, label=""];
20->31 [style = dashed, label="0"];
5->23 [style = solid, label="parent"];
31->38 [style = bold, label=""];
5->25 [style = dashed, label="0"];
7->4 [style = bold, label=""];
16->2 [style = bold, label=""];
1->26 [style = bold, label=""];
2->10 [style = bold, label=""];
1->11 [style = bold, label=""];
15->22 [style = bold, label=""];
14->26 [style = bold, label=""];
5->21 [style = bold, label=""];
14->0 [style = solid, label="foundNonZero"];
36->30 [style = bold, label=""];
26->0 [style = bold, label=""];
11->0 [style = bold, label=""];
21->20 [style = bold, label=""];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
3->7 [style = bold, label=""];
10->25 [style = bold, label=""];
37->34 [style = bold, label=""];
23->6 [style = bold, label=""];
29->32 [style = bold, label=""];
26->14 [style = dotted, label="true"];
2->37 [style = dashed, label="0"];
5->33 [style = dashed, label="0"];
13->23 [style = bold, label=""];
9->19 [style = bold, label=""];
32->36 [style = bold, label=""];
12->3 [style = bold, label=""];
18->8 [style = bold, label=""];
25->28 [style = solid, label="parent"];
24->1 [style = bold, label=""];
21->35 [style = dashed, label="0"];
14->11 [style = bold, label=""];
27->2 [style = bold, label=""];
25->21 [style = bold, label=""];
13->28 [style = bold, label=""];
}
