digraph {
9 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToCountryOnIsoCode(JoinType.FULL)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#de.wikipedia\"),new InDimFilter(\"countryIsoCode\",ImmutableSet.of(\"DE\"),null,null).toFilter())),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"Germany\"),ImmutableList.of())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "test_filterPushDown_factToCountryRightWithFilterOnChannelAndJoinable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToCountryOnIsoCode(JoinType.RIGHT)))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,originalFilter,true)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"countryNumber\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@911bf9))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#de.wikipedia\"),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"Germany\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "test_filterPushDown_factToCountryFullWithFilterOnChannelAndCountryName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"countryNumber\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@911c87))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "test_filterPushDown_factToCountryRightWithFilterOnChannelAndJoinable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(VirtualColumns.EMPTY,null,null),originalFilter,true)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Filter filter = new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#es.wikipedia\"),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"El Salvador\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,filter,true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#es.wikipedia\"),new InDimFilter(\"countryIsoCode\",ImmutableSet.of(\"SV\"),null,null).toFilter())),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"El Salvador\"),ImmutableList.of())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
5->14 [style = dashed, label="0"];
0->5 [style = solid, label="originalFilter"];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
3->14 [style = bold, label=""];
6->11 [style = dashed, label="0"];
6->3 [style = solid, label="expectedFilterSplit"];
1->9 [style = dashed, label="0"];
9->12 [style = solid, label="adapter"];
11->12 [style = bold, label=""];
1->4 [style = solid, label="adapter"];
1->0 [style = bold, label=""];
13->11 [style = bold, label=""];
13->14 [style = solid, label="filter"];
7->3 [style = bold, label=""];
4->12 [style = dashed, label="0"];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
4->7 [style = dashed, label="0"];
13->12 [style = solid, label="filter"];
0->7 [style = solid, label="originalFilter"];
4->3 [style = solid, label="actualFilterSplit"];
0->13 [style = dashed, label="0"];
1->7 [style = solid, label="adapter"];
11->3 [style = solid, label="expectedFilterSplit"];
7->3 [style = solid, label="actualFilterSplit"];
10->9 [style = bold, label=""];
12->3 [style = bold, label=""];
6->7 [style = bold, label=""];
12->3 [style = solid, label="actualFilterSplit"];
0->4 [style = solid, label="originalFilter"];
9->13 [style = bold, label=""];
}
