digraph {
18 [style = filled, label = "verify(byteBuf).writeByte(1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "new PostgreSQLPacketCodecEngine().encode(context,actualMessage,byteBuf)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ByteBuf payloadByteBuf = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(actualMessage.getSequenceId()).thenReturn(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "MySQLPacket actualMessage = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(actualMessage.getMessageType()).thenReturn(PostgreSQLCommandPacketType.AUTHENTICATION_REQUEST.getValue())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(byteBuf).writeInt(54)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "verify(byteBuf).writeBytes(payloadByteBuf)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(byteBuf).writeInt(50 + PostgreSQLPacket.PAYLOAD_LENGTH)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "PostgreSQLPacket actualMessage = mock()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "new MySQLPacketCodecEngine().encode(context,actualMessage,byteBuf)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEncode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ByteBufAllocator byteBufAllocator = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEncode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "PostgreSQLIdentifierPacket actualMessage = mock()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEncode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "verify(byteBuf).writeByte(PostgreSQLCommandPacketType.AUTHENTICATION_REQUEST.getValue())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(byteBuf).writeMediumLE(50)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(byteBufAllocator.buffer()).thenReturn(payloadByteBuf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(context.alloc()).thenReturn(byteBufAllocator)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verify(actualMessage).write(ArgumentMatchers.any())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(payloadByteBuf.readableBytes()).thenReturn(50)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->9 [style = solid, label="actualMessage"];
6->3 [style = bold, label=""];
15->10 [style = bold, label=""];
21->19 [style = bold, label=""];
12->16 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
11->4 [style = bold, label=""];
11->7 [style = solid, label="payloadByteBuf"];
8->6 [style = bold, label=""];
1->21 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
9->8 [style = bold, label=""];
11->4 [style = solid, label="payloadByteBuf"];
12->1 [style = bold, label=""];
13->1 [style = bold, label=""];
1->9 [style = bold, label=""];
19->8 [style = bold, label=""];
16->19 [style = solid, label="actualMessage"];
14->7 [style = bold, label=""];
20->10 [style = bold, label=""];
10->2 [style = solid, label="byteBufAllocator"];
6->14 [style = bold, label=""];
5->16 [style = bold, label=""];
8->17 [style = bold, label=""];
9->19 [style = dashed, label="0"];
0->10 [style = bold, label=""];
5->12 [style = bold, label=""];
3->7 [style = bold, label=""];
16->21 [style = bold, label=""];
5->13 [style = bold, label=""];
10->2 [style = bold, label=""];
12->13 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
18->7 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
13->9 [style = solid, label="actualMessage"];
}
