digraph {
16 [style = filled, label = "NullPointerException e@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"ac\",lesser(\"bc\",\"ac\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Object o = greater(\"a\",null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "{}@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Object o = lesser(\"a\",null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{}@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(greater((String)null,null))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testLesser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(\"a\",greater(null,\"a\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(lesser(null,\"a\"),is(\"a\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testLesser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"bc\",greater(\"bc\",\"ac\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"a\",lesser(\"a\",\"bc\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testGreater['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"a\",lesser(null,\"a\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(lesser(\"bc\",\"ac\"),is(\"ac\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertThat(lesser(\"a\",\"bc\"),is(\"a\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertNull(lesser((String)null,null))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"bc\",greater(\"a\",\"bc\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fail(\"Expected NPE, got \" + o)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(lesser((String)null,null),nullValue())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
19->0 [style = solid, label="o"];
2->6 [style = bold, label=""];
18->15 [style = bold, label=""];
16->7 [style = bold, label=""];
8->20 [style = dashed, label="0"];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
1->21 [style = dashed, label="0"];
7->4 [style = bold, label=""];
7->20 [style = bold, label=""];
8->14 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
10->6 [style = bold, label=""];
17->19 [style = bold, label=""];
19->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
20->21 [style = bold, label=""];
1->13 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->0 [style = solid, label="o"];
15->17 [style = bold, label=""];
0->14 [style = bold, label=""];
12->10 [style = bold, label=""];
3->12 [style = dashed, label="0"];
3->2 [style = bold, label=""];
6->19 [style = dashed, label="0"];
0->8 [style = bold, label=""];
9->14 [style = bold, label=""];
3->15 [style = dashed, label="0"];
4->8 [style = bold, label=""];
0->20 [style = bold, label=""];
14->13 [style = bold, label=""];
}
