digraph {
2 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "stat = newStat()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(name.length() * 2,stat.getDataLength())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(0,stat.getAversion())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "stat = newStat()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(1,stat.getVersion())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String name = \"/foo\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testDataSizeChange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,stat.getVersion())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String name@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Stat stat@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,stat.getCversion())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "zk.getData(name,false,stat)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "validateCreateStat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertNotSame(stat.getCzxid(),stat.getMzxid())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "zk.setData(name,(name + name).getBytes(),-1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "zk.getData(name,false,stat)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "validateCreateStat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertNotSame(stat.getCtime(),stat.getMtime())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Stat stat@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Stat stat@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0->9 [style = bold, label=""];
35->27 [style = bold, label=""];
37->36 [style = solid, label="stat"];
36->9 [style = bold, label=""];
24->42 [style = bold, label=""];
37->36 [style = bold, label=""];
19->12 [style = bold, label=""];
6->20 [style = dashed, label="0"];
15->21 [style = bold, label=""];
25->41 [style = bold, label=""];
0->19 [style = dashed, label="0"];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
1->3 [style = bold, label=""];
18->19 [style = bold, label=""];
45->32 [style = bold, label=""];
8->7 [style = dotted, label="true"];
42->33 [style = bold, label=""];
15->10 [style = dotted, label="true"];
3->22 [style = dashed, label="0"];
8->10 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
17->22 [style = bold, label=""];
44->39 [style = bold, label=""];
32->30 [style = bold, label=""];
6->2 [style = bold, label=""];
23->29 [style = bold, label=""];
20->18 [style = bold, label=""];
26->38 [style = bold, label=""];
12->13 [style = bold, label=""];
38->35 [style = solid, label="name"];
13->17 [style = bold, label=""];
27->37 [style = bold, label=""];
3->23 [style = bold, label=""];
2->0 [style = bold, label=""];
38->36 [style = solid, label="name"];
30->28 [style = bold, label=""];
1->17 [style = dashed, label="0"];
8->5 [style = bold, label=""];
11->14 [style = dashed, label="0"];
44->39 [style = solid, label="stat"];
2->18 [style = dashed, label="0"];
5->21 [style = dashed, label="0"];
38->39 [style = solid, label="name"];
29->40 [style = bold, label=""];
40->24 [style = bold, label=""];
5->11 [style = bold, label=""];
4->1 [style = bold, label=""];
9->12 [style = dashed, label="0"];
39->25 [style = bold, label=""];
38->33 [style = solid, label="name"];
4->13 [style = dashed, label="0"];
38->35 [style = bold, label=""];
34->43 [style = bold, label=""];
33->44 [style = bold, label=""];
31->45 [style = bold, label=""];
41->34 [style = bold, label=""];
14->20 [style = bold, label=""];
43->31 [style = bold, label=""];
21->14 [style = bold, label=""];
}
