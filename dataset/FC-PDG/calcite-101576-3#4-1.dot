digraph {
7 [style = filled, label = "final String sql = \"select *\" + \" from \"product\" match_recognize\" + \" (\" + \" partition by \"product_class_id\", \"brand_name\"\" + \" order by \"product_class_id\" asc, \"brand_name\" desc\" + \" pattern (strt down+ up+)\" + \" define\" + \" down as down.\"net_weight\" in (0, 1),\" + \" up as up.\"net_weight\" > prev(up.\"net_weight\")\" + \" ) mr\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testMatchRecognizeSubset1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final String expected = \"SELECT *\" + \"FROM (SELECT *\" + \"FROM \"foodmart\".\"product\") MATCH_RECOGNIZE(\" + \"ONE ROW PER MATCH\" + \"AFTER MATCH SKIP TO LAST \"DOWN\"\" + \"PATTERN (\"STRT\" \"DOWN\" + \"UP\" +)\" + \"SUBSET \"STDN\" = (\"DOWN\", \"STRT\")\" + \"DEFINE \" + \"\"DOWN\" AS PREV(\"DOWN\".\"net_weight\", 0) < \" + \"PREV(\"DOWN\".\"net_weight\", 1), \" + \"\"UP\" AS PREV(\"UP\".\"net_weight\", 0) > \" + \"NEXT(PREV(\"UP\".\"net_weight\", 0), 1))\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testMatchRecognizeIn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sql(sql).ok(expected)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String sql = \"select *\" + \" from \"product\" match_recognize\" + \" (\" + \" after match skip to down\" + \" pattern (strt down+ up+)\" + \" subset stdn = (strt, down)\" + \" define\" + \" down as down.\"net_weight\" < PREV(down.\"net_weight\"),\" + \" up as up.\"net_weight\" > NEXT(up.\"net_weight\")\" + \" ) mr\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testMatchRecognizeSubset1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String expected = \"SELECT *\" + \"FROM (SELECT *\" + \"FROM \"foodmart\".\"product\") MATCH_RECOGNIZE(\" + \"PARTITION BY \"product_class_id\", \"brand_name\"\" + \"ORDER BY \"product_class_id\", \"brand_name\" DESC\" + \"ONE ROW PER MATCH\" + \"AFTER MATCH SKIP TO NEXT ROW\" + \"PATTERN (\"STRT\" \"DOWN\" + \"UP\" +)\" + \"DEFINE \" + \"\"DOWN\" AS PREV(\"DOWN\".\"net_weight\", 0) = \" + \"0 OR PREV(\"DOWN\".\"net_weight\", 0) = 1, \" + \"\"UP\" AS PREV(\"UP\".\"net_weight\", 0) > \" + \"PREV(\"UP\".\"net_weight\", 1))\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
4->3 [style = bold, label=""];
0->2 [style = solid, label="expected"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
6->7 [style = bold, label=""];
0->5 [style = dashed, label="0"];
3->7 [style = dashed, label="0"];
3->0 [style = bold, label=""];
5->2 [style = solid, label="expected"];
0->2 [style = bold, label=""];
}
