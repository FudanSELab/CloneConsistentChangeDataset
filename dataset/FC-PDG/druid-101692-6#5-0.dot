digraph {
4 [style = filled, label = "testQuery(\"SELECT COALESCE(dim2, ?, ?), COUNT(*) FROM druid.foo GROUP BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",'parameter')\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e9b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31ea0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31ea5): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31ead,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31eb2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31eb7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31ebc),ImmutableList.of(new SqlParameter(SqlType.VARCHAR,null),new SqlParameter(SqlType.VARCHAR,\"parameter\")))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "cannotVectorize()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testNullParameter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testNvlColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testQuery(\"SELECT COALESCE(dim2, ?, ?), COUNT(*) FROM druid.foo GROUP BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",'parameter')\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"v0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31da6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31dab,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31db0): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31db8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31dbd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31dc2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31dc7),ImmutableList.of(new SqlParameter(SqlType.VARCHAR,null),new SqlParameter(SqlType.VARCHAR,\"parameter\")))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testQuery(\"SELECT NVL(dim2, dim1), COUNT(*) FROM druid.foo GROUP BY NVL(dim2, dim1)\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",\"dim1\")\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f19,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f1e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f23,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f28): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f30,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f35,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f3a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31f3f))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testQuery(\"SELECT COALESCE(dim2, ?, ?), COUNT(*) FROM druid.foo GROUP BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",'parameter')\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e24,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e29,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e2e): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e36,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e3b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e40,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a31e45),ImmutableList.of(new SqlParameter(SqlType.VARCHAR,\"parameter\"),new SqlParameter(SqlType.VARCHAR,null)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testNullParameter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6->1 [style = bold, label=""];
5->1 [style = bold, label=""];
1->2 [style = bold, label=""];
2->7 [style = dashed, label="0"];
3->4 [style = dashed, label="0"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
0->1 [style = bold, label=""];
2->3 [style = bold, label=""];
}
