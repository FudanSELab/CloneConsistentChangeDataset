digraph {
8 [style = filled, label = "ShardId shardId@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mockIndexShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(indexShard.routingEntry()).thenAnswer(null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "mockIndexShard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "when(indexShard.shardId()).thenReturn(shardId)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ClusterService clusterService@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "doThrow(new AssertionError(\"failed shard is not supported\")).when(indexShard).failShard(anyString(),any())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "doAnswer(null).when(indexShard).acquirePrimaryOperationPermit(any(),anyString(),anyObject())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(indexShard.isRelocatedPrimary()).thenAnswer(null)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(indexShard.getActiveOperationsCount()).thenAnswer(null)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ReplicationGroup replicationGroup = mock()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mockIndexShard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ShardId shardId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(indexShard.getReplicationGroup()).thenReturn(replicationGroup)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final IndexShard indexShard = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "doAnswer(null).when(indexShard).acquireReplicaOperationPermit(anyLong(),anyLong(),anyLong(),any(),anyString(),anyObject())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ClusterService clusterService@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "return indexShard@@@36@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(indexShard.getPendingPrimaryTerm()).thenAnswer(null)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = dotted, label="true"];
17->18 [style = dotted, label="true"];
11->3 [style = bold, label=""];
10->6 [style = bold, label=""];
11->3 [style = solid, label="replicationGroup"];
7->10 [style = bold, label=""];
2->11 [style = bold, label=""];
16->14 [style = dotted, label="true"];
9->15 [style = bold, label=""];
16->0 [style = bold, label=""];
5->4 [style = dotted, label="true"];
0->13 [style = bold, label=""];
15->7 [style = bold, label=""];
3->1 [style = bold, label=""];
6->2 [style = bold, label=""];
0->1 [style = solid, label="indexShard"];
12->9 [style = bold, label=""];
4->13 [style = solid, label="shardId"];
8->13 [style = solid, label="shardId"];
13->12 [style = bold, label=""];
5->0 [style = bold, label=""];
0->12 [style = bold, label=""];
2->1 [style = bold, label=""];
17->8 [style = dotted, label="true"];
16->8 [style = dotted, label="true"];
17->0 [style = bold, label=""];
9->7 [style = bold, label=""];
}
