digraph {
26 [style = filled, label = "changeProjectOnTheDisc(project3,\"echo 1\",\"echo 2\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(result,failedWith(5))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created: No such job ‘never_created’ exists.\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(project3.scheduleBuild2(0).get().getLog(),containsString(\"echo 2\"))@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "changeProjectOnTheDisc(project2,\"echo 1\",\"echo 2\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "project1.getBuildersList().add(createScriptBuilder(\"echo 1\"))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(result,succeededSilently())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.READ,Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject1\",\"aProject2\",\"aProject3\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "changeProjectOnTheDisc(project1,\"echo 1\",\"echo 2\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.READ,Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject1\",\"aProject2\",\"never_created\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "project2.getBuildersList().add(createScriptBuilder(\"echo 1\"))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(project2.scheduleBuild2(0).get().getLog(),containsString(\"echo 2\"))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FreeStyleProject project1 = j.createFreeStyleProject(\"aProject1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "project3.getBuildersList().add(new Shell(\"echo 1\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(project2.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "reloadJobManyShouldFailIfLastJobDoesNotExist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "project1.getBuildersList().add(new Shell(\"echo 1\"))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "reloadJobManyShouldSucceed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "reloadJobManyShouldFailIfLastJobDoesNotExist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "FreeStyleProject project3 = j.createFreeStyleProject(\"aProject3\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(project3.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "project2.getBuildersList().add(new Shell(\"echo 1\"))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(project2.scheduleBuild2(0).get().getLog(),containsString(\"echo 2\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "FreeStyleProject project2 = j.createFreeStyleProject(\"aProject2\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(project1.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(project1.scheduleBuild2(0).get().getLog(),containsString(\"echo 2\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->21 [style = bold, label=""];
11->25 [style = bold, label=""];
26->24 [style = bold, label=""];
20->27 [style = bold, label=""];
3->10 [style = solid, label="project1"];
8->9 [style = bold, label=""];
27->7 [style = bold, label=""];
9->4 [style = bold, label=""];
13->21 [style = dashed, label="0"];
15->18 [style = bold, label=""];
23->1 [style = bold, label=""];
8->26 [style = bold, label=""];
25->10 [style = bold, label=""];
22->3 [style = bold, label=""];
10->8 [style = bold, label=""];
19->26 [style = solid, label="project3"];
0->19 [style = bold, label=""];
15->8 [style = solid, label="project2"];
19->23 [style = bold, label=""];
3->5 [style = bold, label=""];
0->1 [style = bold, label=""];
1->11 [style = bold, label=""];
3->17 [style = bold, label=""];
15->0 [style = bold, label=""];
11->10 [style = bold, label=""];
21->20 [style = bold, label=""];
17->15 [style = bold, label=""];
9->13 [style = solid, label="result"];
12->3 [style = bold, label=""];
16->3 [style = bold, label=""];
24->21 [style = solid, label="result"];
14->6 [style = bold, label=""];
4->13 [style = bold, label=""];
18->1 [style = bold, label=""];
6->7 [style = bold, label=""];
13->14 [style = bold, label=""];
0->18 [style = dashed, label="0"];
5->17 [style = dashed, label="0"];
9->4 [style = solid, label="result"];
5->15 [style = bold, label=""];
7->2 [style = bold, label=""];
}
