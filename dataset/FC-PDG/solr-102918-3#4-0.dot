digraph {
30 [style = filled, label = "Date expectedDate@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "++id@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-date-patterns-from-extract-contrib\",doc(f(\"id\",id),f(\"date_dt\",lenientDateString)))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String lenientDateString = lenientDateStrings(i(@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(d)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String inputDateString@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNotNull(d)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String(( lenientDateStrings = {\"10995-12-31T23:59:59.990Z\",\"+10995-12-31T23:59:59.990Z\",\"995-1-2T3:4:5Z\",\"0995-01-02T03:04:05Z\",\"2021-01-01t03:04:05\",\"2021-01-01T03:04:05Z\",\"2021-12-01 04:04:04\",\"2021-12-01T04:04:04Z\"}@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(\"Date string: \" + lenientDateString + \" was not parsed as a date\",d.getFieldValue(\"date_dt\") instanceof Date)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String(( dateStrings = {\"0001-01-01T01:01:01Z\",\"+12021-12-01T03:03:03Z\",\"0000-04-04T04:04:04Z\",\"-0005-05-05T05:05:05Z\",\"-2021-12-01T04:04:04Z\",\"-12021-12-01T02:02:02Z\"}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-date-patterns-from-extract-contrib\",doc(f(\"id\",id),f(\"date_dt\",notInFormatDateString)))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(expectedDate,d.getField(\"date_dt\").getFirstValue())@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String chain@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(\"Date string: \" + notInFormatDateString + \" was not parsed as a date\",d.getFieldValue(\"date_dt\") instanceof Date)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(\"Date string: \" + inputDateString + \" was not parsed as a date\",d.getFieldValue(\"date_dt\") instanceof Date)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "IndexSchema schema = h.getCore().getLatestSchema()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-date-patterns-default-config\",doc(f(\"id\",id),f(\"date_dt\",notInFormatDateString)))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int id = 1@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertU(commit())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "++id@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "SolrInputDocument d = processAdd(chain,doc(f(\"id\",\"1\"),f(\"date_dt\",inputDateString)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i < lenientDateStrings.length@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotNull(d)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertNotNull(schema.getFieldOrNull(\"date_dt\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-date-patterns-default-config\",doc(f(\"id\",id),f(\"date_dt\",lenientDateString)))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertNotNull(schema.getFieldOrNull(\"date_dt\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedString,((Date)d.getField(\"date_dt\").getFirstValue()).toInstant().toString())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "IndexSchema schema = h.getCore().getLatestSchema()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(notInFormatDateString,((Date)d.getField(\"date_dt\").getFirstValue()).toInstant().toString())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String expectedString = lenientDateStrings(++i(@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertParsedDate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertQ(req(\"id:\" + id),\"//date(@name='date_dt'((.='\" + notInFormatDateString + \"'(\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "++i@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNotNull(schema.getFieldOrNull(\"date_dt\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testISO8601['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testISO8601['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->22 [style = bold, label=""];
13->11 [style = solid, label="expectedString"];
36->34 [style = bold, label=""];
20->11 [style = dotted, label="true"];
3->24 [style = bold, label=""];
5->20 [style = bold, label=""];
5->20 [style = solid, label="i"];
2->35 [style = dashed, label="0"];
4->2 [style = solid, label="id"];
9->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
20->26 [style = dotted, label="true"];
27->3 [style = bold, label=""];
1->27 [style = bold, label=""];
4->7 [style = solid, label="id"];
2->27 [style = dashed, label="0"];
20->15 [style = dotted, label="true"];
12->20 [style = bold, label=""];
31->36 [style = bold, label=""];
4->18 [style = bold, label=""];
7->16 [style = solid, label="d"];
29->32 [style = solid, label="inputDateString"];
20->21 [style = dotted, label="true"];
20->7 [style = dotted, label="true"];
15->19 [style = bold, label=""];
29->35 [style = solid, label="inputDateString"];
4->27 [style = solid, label="id"];
25->17 [style = bold, label=""];
31->33 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
28->32 [style = bold, label=""];
20->10 [style = bold, label=""];
33->35 [style = solid, label="chain"];
10->21 [style = solid, label="lenientDateString"];
6->13 [style = solid, label="lenientDateStrings"];
8->17 [style = bold, label=""];
35->28 [style = bold, label=""];
26->16 [style = bold, label=""];
31->30 [style = dotted, label="true"];
6->5 [style = bold, label=""];
24->32 [style = dashed, label="0"];
0->14 [style = bold, label=""];
4->26 [style = solid, label="id"];
22->0 [style = bold, label=""];
18->1 [style = bold, label=""];
10->13 [style = bold, label=""];
21->11 [style = bold, label=""];
27->3 [style = solid, label="d"];
10->26 [style = solid, label="lenientDateString"];
35->28 [style = solid, label="d"];
16->21 [style = bold, label=""];
19->26 [style = bold, label=""];
26->16 [style = solid, label="d"];
10->7 [style = solid, label="lenientDateString"];
7->16 [style = bold, label=""];
20->10 [style = dotted, label="true"];
20->23 [style = dotted, label="true"];
14->18 [style = bold, label=""];
23->12 [style = bold, label=""];
1->2 [style = bold, label=""];
20->12 [style = dotted, label="true"];
13->15 [style = bold, label=""];
34->35 [style = bold, label=""];
32->18 [style = bold, label=""];
30->18 [style = solid, label="expectedDate"];
20->13 [style = dotted, label="true"];
20->19 [style = dotted, label="true"];
31->29 [style = dotted, label="true"];
7->26 [style = dashed, label="0"];
5->10 [style = solid, label="i"];
11->23 [style = bold, label=""];
19->7 [style = bold, label=""];
14->6 [style = bold, label=""];
17->4 [style = bold, label=""];
6->10 [style = solid, label="lenientDateStrings"];
24->9 [style = bold, label=""];
2->3 [style = solid, label="d"];
4->0 [style = solid, label="id"];
}
