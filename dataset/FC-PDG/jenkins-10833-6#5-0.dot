digraph {
4 [style = filled, label = "fail(\"The process should be exited with an unexpected exception\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertThrows(\"The process should be exited with an unexpected exception\",,null)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS,ACTION)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final int ATTEMPTS = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Logger.getLogger(.getName()).addHandler(handler)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String textSuccess = Messages.Retrier_Success(ACTION,ATTEMPTS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Retrier<Boolean> r = new Retrier.Builder<>((Callable<Boolean>)null,null,ACTION).withAttempts(ATTEMPTS).withDuringActionExceptions(new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4d1a25).withDuringActionExceptionListener(null).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "failedActionWithUnAllowedExceptionTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(String.format(\"The log should contain '%s'\",testException),handler.getView().stream().anyMatch(null))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String ACTION = \"print\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "failedActionWithAllowedExceptionByInheritanceTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String testFailure = Messages.Retrier_ExceptionThrown(ATTEMPTS,ACTION)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Assert.assertTrue(finalResult != null && finalResult)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "failedActionWithUnAllowedExceptionTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertTrue(String.format(\"The log should contain '%s'\",testFailure),handler.getView().stream().anyMatch(null))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(String.format(\"The log should contain '%s'\",textSuccess),handler.getView().stream().anyMatch(null))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RingBufferLogHandler handler = new RingBufferLogHandler(20)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "r.start()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Boolean finalResult = r.start()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->8 [style = solid, label="ATTEMPTS"];
8->10 [style = bold, label=""];
9->2 [style = bold, label=""];
2->12 [style = solid, label="ATTEMPTS"];
1->18 [style = bold, label=""];
12->14 [style = solid, label="testException"];
7->4 [style = bold, label=""];
2->17 [style = solid, label="ATTEMPTS"];
16->2 [style = bold, label=""];
5->6 [style = solid, label="handler"];
0->17 [style = solid, label="ACTION"];
1->7 [style = bold, label=""];
1->11 [style = bold, label=""];
17->15 [style = solid, label="textSuccess"];
6->1 [style = bold, label=""];
13->17 [style = bold, label=""];
2->0 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
8->10 [style = solid, label="testFailure"];
0->8 [style = solid, label="ACTION"];
12->14 [style = bold, label=""];
17->15 [style = bold, label=""];
18->13 [style = bold, label=""];
0->12 [style = solid, label="ACTION"];
11->8 [style = bold, label=""];
15->12 [style = bold, label=""];
0->5 [style = bold, label=""];
18->13 [style = solid, label="finalResult"];
}
