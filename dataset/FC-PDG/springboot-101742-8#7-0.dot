digraph {
14 [style = filled, label = "ConfigDataLocation location1 = ConfigDataLocation.of(\"test1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(loaded2and3).containsExactly(configData3)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestResource resource2 = new TestResource(\"r2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ConfigData configData2 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ConfigDataImporter importer = new ConfigDataImporter(this.logFactory,ConfigDataNotFoundAction.FAIL,this.resolvers,this.loaders)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<ConfigDataLocation> locations1and2 = Arrays.asList(location1,location2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource2)).willReturn(configData2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ConfigData configData3 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location2,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location2,resource2,false)))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource1)).willReturn(configData1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location1,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location1,resource1,false)))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "TestResource resource1 = new TestResource(\"r1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Collection<ConfigData> loaded1and2 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations1and2).values()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location3,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location3,resource3,false)))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "loadImportsWhenAlreadyImportedLocationSkipsLoad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location3,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location3,resource3)))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "ConfigDataLocation location3 = ConfigDataLocation.of(\"test3\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Collection<ConfigData> loaded = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,Arrays.asList(location1,location2)).values()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "List<ConfigDataLocation> locations2and3 = Arrays.asList(location2,location3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ConfigData configData1 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location2,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location2,resource2)))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ConfigDataLocation location2 = ConfigDataLocation.of(\"test2\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(loaded).containsExactly(configData2,configData1)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location1,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location1,resource1)))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource3)).willReturn(configData3)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "loadImportsResolvesAndLoadsLocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "loadImportsWhenAlreadyImportedLocationSkipsLoad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collection<ConfigData> loaded2and3 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations2and3).values()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TestResource resource3 = new TestResource(\"r3\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(loaded1and2).containsExactly(configData2,configData1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->29 [style = bold, label=""];
2->11 [style = solid, label="location3"];
15->23 [style = dashed, label="0"];
12->28 [style = bold, label=""];
21->0 [style = bold, label=""];
4->25 [style = bold, label=""];
27->14 [style = bold, label=""];
16->10 [style = bold, label=""];
2->6 [style = bold, label=""];
25->23 [style = bold, label=""];
6->21 [style = bold, label=""];
26->5 [style = bold, label=""];
19->21 [style = solid, label="location2"];
22->9 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
11->26 [style = dashed, label="0"];
23->26 [style = bold, label=""];
8->14 [style = bold, label=""];
19->6 [style = solid, label="location2"];
14->19 [style = bold, label=""];
7->29 [style = solid, label="configData2"];
4->18 [style = bold, label=""];
19->2 [style = bold, label=""];
7->4 [style = bold, label=""];
20->1 [style = bold, label=""];
9->7 [style = bold, label=""];
7->16 [style = solid, label="configData2"];
15->5 [style = bold, label=""];
19->0 [style = bold, label=""];
22->15 [style = solid, label="resource2"];
24->14 [style = bold, label=""];
3->26 [style = solid, label="resource3"];
3->11 [style = solid, label="resource3"];
14->25 [style = solid, label="location1"];
5->16 [style = bold, label=""];
22->3 [style = bold, label=""];
3->9 [style = bold, label=""];
17->28 [style = dashed, label="0"];
11->5 [style = bold, label=""];
22->23 [style = solid, label="resource2"];
0->25 [style = solid, label="resource1"];
15->11 [style = bold, label=""];
9->5 [style = solid, label="configData1"];
10->12 [style = bold, label=""];
0->22 [style = bold, label=""];
19->15 [style = solid, label="location2"];
2->21 [style = solid, label="location3"];
7->18 [style = bold, label=""];
14->6 [style = solid, label="location1"];
17->13 [style = bold, label=""];
14->18 [style = solid, label="location1"];
9->20 [style = solid, label="configData1"];
7->20 [style = solid, label="configData2"];
0->18 [style = solid, label="resource1"];
16->12 [style = bold, label=""];
4->1 [style = solid, label="configData3"];
19->23 [style = solid, label="location2"];
4->10 [style = solid, label="configData3"];
18->25 [style = dashed, label="0"];
2->26 [style = solid, label="location3"];
13->20 [style = bold, label=""];
9->29 [style = solid, label="configData1"];
}
