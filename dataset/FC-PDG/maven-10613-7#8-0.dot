digraph {
11 [style = filled, label = "assertEquals(project2,projects.get(1))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testMatchingIdsAndVersions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MavenProject project1 = createProject(\"groupId\",\"artifactId\",\"1.0\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThrows(,null,\"Duplicate projects should fail\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "projects.add(project1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MavenProject project2 = createProject(\"groupId\",\"artifactId\",\"1.0\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedException.reportMissingExceptionWithMessage(\"Duplicate projects should fail\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "new ProjectSorter(projects).getSortedProjects()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testMatchingIdsAndVersions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(project1,projects.get(0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "projects = new ProjectSorter(projects).getSortedProjects()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MavenProject project2 = createProject(\"groupId\",\"artifactId\",\"2.0\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testMatchingIdsAndDifferentVersions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<MavenProject> projects = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "projects.add(project2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectedException.expect()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->9 [style = bold, label=""];
4->14 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
0->2 [style = solid, label="project1"];
1->9 [style = dashed, label="0"];
6->0 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
0->15 [style = solid, label="project1"];
2->12 [style = bold, label=""];
3->4 [style = solid, label="project2"];
3->12 [style = dashed, label="0"];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
12->4 [style = bold, label=""];
12->4 [style = solid, label="project2"];
12->11 [style = solid, label="project2"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
13->6 [style = bold, label=""];
}
