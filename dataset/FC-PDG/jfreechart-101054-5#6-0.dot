digraph {
20 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(v2.equals(v1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "v1 = new DefaultKeyedValue(\"Test\",45.5)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test 2\",45.5)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "DefaultKeyedValue<String> v2 = new DefaultKeyedValue<>(\"Test\",45.5)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(v1.equals(v2))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DefaultKeyedValue v1 = new DefaultKeyedValue(\"Test\",45.5)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DefaultKeyedValue v2 = new DefaultKeyedValue(\"Test\",45.5)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test 1\",45.5)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(v1 != v2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test 2\",45.5)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(v1.equals(v2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test\",45.6)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "DefaultKeyedValue v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test\",45.6)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "v2.setValue(12.3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->3 [style = solid, label="v2"];
0->9 [style = solid, label="v1"];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
15->9 [style = solid, label="v1"];
8->16 [style = dashed, label="0"];
19->18 [style = bold, label=""];
12->5 [style = bold, label=""];
8->19 [style = bold, label=""];
0->22 [style = solid, label="v1"];
2->5 [style = solid, label="v2"];
0->15 [style = dashed, label="0"];
0->21 [style = bold, label=""];
1->0 [style = bold, label=""];
6->14 [style = dashed, label="0"];
9->8 [style = bold, label=""];
5->17 [style = bold, label=""];
23->0 [style = bold, label=""];
4->21 [style = dashed, label="0"];
10->6 [style = bold, label=""];
9->16 [style = bold, label=""];
14->7 [style = bold, label=""];
21->18 [style = solid, label="v2"];
3->9 [style = bold, label=""];
2->12 [style = dashed, label="0"];
20->8 [style = bold, label=""];
12->5 [style = solid, label="v2"];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
22->20 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
17->14 [style = bold, label=""];
21->22 [style = bold, label=""];
21->22 [style = solid, label="v2"];
14->7 [style = solid, label="v2"];
4->3 [style = solid, label="v2"];
10->17 [style = dashed, label="0"];
13->15 [style = bold, label=""];
4->11 [style = dashed, label="0"];
6->7 [style = solid, label="v2"];
6->7 [style = bold, label=""];
16->12 [style = bold, label=""];
21->8 [style = solid, label="v2"];
2->5 [style = bold, label=""];
}
