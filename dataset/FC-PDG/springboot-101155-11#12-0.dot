digraph {
16 [style = filled, label = "System.setProperty(LoggingSystemProperties.EXCEPTION_CONVERSION_WORD,\"%ex\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "this.logger.warn(\"Expected exception\",new RuntimeException(\"Expected\",new RuntimeException(\"Cause\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "exceptionsIncludeClassPackaging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "initialize(this.initializationContext,null,getLogFile(null,tmpDir()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "this.loggingSystem.beforeInitialize()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String fileContents = contentOf(new File(tmpDir() + \"/spring.log\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CapturedOutput output@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(fileContents).contains(\"(junit-\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.logger.info(\"Hidden\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.loggingSystem.beforeInitialize()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "this.loggingSystem.initialize(null,getRelativeClasspathLocation(\"log4j2-file.xml\"),getLogFile(null,tmpDir()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CapturedOutput output@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(fileContents).contains(\"java.lang.RuntimeException: Expected\").doesNotContain(\"Wrapped by:\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(output).contains(\"java.lang.RuntimeException: Expected\").doesNotContain(\"Wrapped by:\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.loggingSystem.initialize(this.initializationContext,null,getLogFile(null,tmpDir()))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertThat(output).contains(\"(junit-\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{System.clearProperty(LoggingSystemProperties.EXCEPTION_CONVERSION_WORD)}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String fileContents = contentOf(new File(tmpDir() + \"/spring.log\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "customExceptionConversionWord['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "exceptionsIncludeClassPackaging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16->0 [style = bold, label=""];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
5->9 [style = bold, label=""];
10->14 [style = bold, label=""];
1->15 [style = dashed, label="0"];
18->15 [style = bold, label=""];
3->4 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
8->4 [style = dotted, label="true"];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
15->17 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
0->10 [style = bold, label=""];
8->5 [style = bold, label=""];
2->9 [style = dashed, label="0"];
19->11 [style = dotted, label="true"];
14->12 [style = bold, label=""];
12->18 [style = bold, label=""];
17->13 [style = bold, label=""];
4->11 [style = dashed, label="0"];
}
