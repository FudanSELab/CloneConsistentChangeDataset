digraph {
9 [style = filled, label = "execInsertSql(streamTableEnv,insertInto)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String sourcePath = Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResource(\"debezium_json.data\")).toString()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String insertInto = \"insert into hoodie_sink select id, ts, name, weight from debezium_source\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testWriteAndReadDebeziumJson['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "streamTableEnv.executeSql(sourceDDL)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return \"create table \" + tableName + \"(\" + \" uuid varchar(20),\" + \" name varchar(10),\" + \" age int,\" + \" ts timestamp(3),\" + \" `partition` varchar(20)\" + \") with (\" + \" 'connector' = '\" + ContinuousFileSourceFactory.FACTORY_ID + \"',\" + \" 'path' = '\" + sourcePath + \"',\" + \" 'checkpoints' = '\" + checkpoints + \"'\" + \")\"@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "streamTableEnv.executeSql(hoodieTableDDL)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String expected = \"(\" + \"101,1000,scooter,3.140000104904175, \" + \"102,2000,car battery,8.100000381469727, \" + \"103,3000,12-pack drill bits,0.800000011920929, \" + \"104,4000,hammer,0.75, \" + \"105,5000,hammer,0.875, \" + \"106,10000,hammer,1.0, \" + \"107,11000,rocks,5.099999904632568, \" + \"108,8000,jacket,0.10000000149011612, \" + \"109,9000,spare tire,22.200000762939453, \" + \"110,14000,jacket,0.5(\"@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String sourceDDL = \"\" + \"CREATE TABLE debezium_source(\" + \" id INT NOT NULL,\" + \" ts BIGINT,\" + \" name STRING,\" + \" description STRING,\" + \" weight DOUBLE\" + \") WITH (\" + \" 'connector' = 'filesystem',\" + \" 'path' = '\" + sourcePath + \"',\" + \" 'format' = 'debezium-json'\" + \")\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ExecMode execMode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<Row> result = execSelectSql(streamTableEnv,\"select * from hoodie_sink\",execMode)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String hoodieTableDDL = \"\" + \"CREATE TABLE hoodie_sink(\" + \" id INT NOT NULL,\" + \" ts BIGINT,\" + \" name STRING,\" + \" weight DOUBLE,\" + \" PRIMARY KEY (id) NOT ENFORCED\" + \") with (\" + \" 'connector' = 'hudi',\" + \" 'path' = '\" + tempFile.getAbsolutePath() + \"',\" + \" 'read.streaming.enabled' = '\" + (execMode == ExecMode.STREAM) + \"',\" + \" 'write.insert.drop.duplicates' = 'true'\" + \")\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String fileName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final String expected = \"(\" + \"+I(101, 1000, scooter, 3.140000104904175(, \" + \"+I(102, 2000, car battery, 8.100000381469727(, \" + \"+I(103, 3000, 12-pack drill bits, 0.800000011920929(, \" + \"+I(104, 4000, hammer, 0.75(, \" + \"+I(105, 5000, hammer, 0.875(, \" + \"+I(106, 10000, hammer, 1.0(, \" + \"+I(107, 11000, rocks, 5.099999904632568(, \" + \"+I(108, 8000, jacket, 0.10000000149011612(, \" + \"+I(109, 9000, spare tire, 22.200000762939453(, \" + \"+I(110, 14000, jacket, 0.5((\"@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "String sourcePath = Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResource(fileName)).toString()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testWriteAndReadDebeziumJson['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertRowsEquals(result,expected)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String tableName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "getFileSourceDDL['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int checkpoints@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5->9 [style = solid, label="insertInto"];
7->6 [style = solid, label="expected"];
17->18 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
2->11 [style = solid, label="execMode"];
10->6 [style = bold, label=""];
17->16 [style = dotted, label="true"];
8->4 [style = bold, label=""];
7->10 [style = bold, label=""];
2->10 [style = solid, label="execMode"];
11->0 [style = bold, label=""];
4->11 [style = bold, label=""];
9->13 [style = bold, label=""];
15->19 [style = bold, label=""];
3->8 [style = solid, label="sourcePath"];
5->9 [style = bold, label=""];
12->2 [style = dotted, label="true"];
1->3 [style = bold, label=""];
17->15 [style = bold, label=""];
11->0 [style = solid, label="hoodieTableDDL"];
12->3 [style = bold, label=""];
3->8 [style = bold, label=""];
3->15 [style = dashed, label="0"];
15->19 [style = solid, label="sourcePath"];
1->2 [style = dotted, label="true"];
8->4 [style = solid, label="sourceDDL"];
0->5 [style = bold, label=""];
13->10 [style = bold, label=""];
13->6 [style = solid, label="expected"];
10->6 [style = solid, label="result"];
18->19 [style = solid, label="tableName"];
16->19 [style = solid, label="checkpoints"];
9->7 [style = bold, label=""];
}
