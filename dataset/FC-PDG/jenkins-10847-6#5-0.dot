digraph {
8 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\",\"parent/job/i/\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "mockStatic()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testGetRelativeLinkTo_JobNotContainedInView['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(view.getItems()).thenReturn(Collections.emptyList())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"/jenkins/job/i/\",result)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(\"job/i/\",result)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(view.getOwner().getItemGroup()).thenReturn(parent)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "View view = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(view.getItems()).thenReturn(Arrays.asList(i))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../..\"),createAncestor(view,\".\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(view.getOwner()).thenReturn(parent)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(view.getItems()).thenReturn(Collections.singletonList(i))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "ItemGroup parent = j@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(parent.getItemGroup()).thenReturn(parent)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->0 [style = solid, label="j"];
23->25 [style = bold, label=""];
1->4 [style = bold, label=""];
11->0 [style = solid, label="req"];
3->17 [style = dashed, label="0"];
8->3 [style = solid, label="i"];
7->10 [style = bold, label=""];
7->8 [style = solid, label="parent"];
7->1 [style = solid, label="parent"];
13->20 [style = dashed, label="0"];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
2->13 [style = solid, label="result"];
1->9 [style = dashed, label="0"];
11->15 [style = solid, label="req"];
5->19 [style = solid, label="req"];
12->7 [style = bold, label=""];
22->24 [style = solid, label="parent"];
6->15 [style = bold, label=""];
4->0 [style = bold, label=""];
2->13 [style = bold, label=""];
19->24 [style = bold, label=""];
21->12 [style = bold, label=""];
8->17 [style = bold, label=""];
25->20 [style = bold, label=""];
22->18 [style = bold, label=""];
10->5 [style = bold, label=""];
3->2 [style = bold, label=""];
17->2 [style = bold, label=""];
25->20 [style = solid, label="result"];
15->9 [style = bold, label=""];
18->5 [style = bold, label=""];
12->22 [style = solid, label="j"];
14->12 [style = bold, label=""];
15->19 [style = solid, label="view"];
0->8 [style = bold, label=""];
9->0 [style = solid, label="view"];
9->19 [style = bold, label=""];
22->9 [style = solid, label="parent"];
5->11 [style = bold, label=""];
12->19 [style = solid, label="j"];
5->11 [style = solid, label="contextPath"];
5->6 [style = solid, label="req"];
9->1 [style = bold, label=""];
7->4 [style = solid, label="parent"];
7->0 [style = solid, label="parent"];
16->12 [style = bold, label=""];
24->25 [style = solid, label="i"];
7->22 [style = dashed, label="0"];
12->22 [style = bold, label=""];
8->17 [style = solid, label="i"];
8->2 [style = solid, label="i"];
18->5 [style = solid, label="contextPath"];
24->23 [style = bold, label=""];
}
