digraph {
16 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\",\"xxx\"))))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(false))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(config.getLogPrefix(),is(\"mybatis_\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(true))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(true))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertThat(config.getMapperRegistry().getMappers().size(),is(4))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(true))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(true))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "XMLConfigBuilder builder = new XMLConfigBuilder(inputStream,null,props)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(config.getDefaultScriptingLanguageInstance(),is(instanceOf()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertThat(config.getDatabaseId(),is(\"derby\"))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(plugin.getProperties().size(),is(1))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertNull(config.getDefaultFetchSize())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "XMLConfigBuilder builder = new XMLConfigBuilder(inputStream)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(false))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(config.getDefaultStatementTimeout(),is(10))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(environment.getId(),is(\"development\"))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(false))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertNull(config.getConfigurationFactory())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "props.put(\"prop2\",\"cccc\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(false))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(true))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"),is(\"100\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertThat(environment.getDataSource(),is(instanceOf()))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldSuccessfullyLoadXMLConfigFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(config.isCacheEnabled(),is(false))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(config.getObjectWrapperFactory(),is(instanceOf()))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertThat(config.getDefaultScriptingLanguageInstance(),is(instanceOf()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "assertNull(config.getDefaultStatementTimeout())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(config.getAutoMappingBehavior(),is(AutoMappingBehavior.PARTIAL))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.STATEMENT))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "InputStream inputStream = Resources.getResourceAsStream(resource)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@57@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "shouldSuccessfullyLoadMinimalXMLConfigFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(true))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(true))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertThat(config.getReflectorFactory(),is(instanceOf()))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "shouldSuccessfullyLoadXMLConfigFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertNotNull(config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertThat(config.getAutoMappingUnknownColumnBehavior(),is(AutoMappingUnknownColumnBehavior.NONE))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertThat(config.isCacheEnabled(),is(true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(config.getDefaultFetchSize(),is(100))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "Configuration config = builder.parse()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(config.getVfsImpl().getName(),is(.getName()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(,JdbcType.VARCHAR),is(instanceOf()))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(false))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertNull(config.getLogPrefix())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertNull(config.getLogImpl())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.BATCH))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(false))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(config.getAutoMappingUnknownColumnBehavior(),is(AutoMappingUnknownColumnBehavior.WARNING))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(false))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.SESSION))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.NULL))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(config.getAutoMappingBehavior(),is(AutoMappingBehavior.NONE))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.OTHER))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(true))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(environment.getTransactionFactory(),is(instanceOf()))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\"))))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Properties props = new Properties()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Environment environment = config.getEnvironment()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(objectFactory.getProperties().size(),is(1))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertThat(config.getConfigurationFactory().getName(),is(.getName()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(config.getLogImpl().getName(),is(.getName()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(plugin.getProperties().getProperty(\"pluginProperty\"),is(\"100\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.SIMPLE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->58 [style = dashed, label="0"];
54->27 [style = bold, label=""];
41->19 [style = bold, label=""];
37->11 [style = bold, label=""];
15->21 [style = bold, label=""];
67->48 [style = bold, label=""];
73->74 [style = bold, label=""];
38->4 [style = bold, label=""];
40->25 [style = bold, label=""];
5->45 [style = bold, label=""];
31->84 [style = dashed, label="0"];
0->15 [style = bold, label=""];
36->55 [style = bold, label=""];
45->7 [style = bold, label=""];
44->66 [style = dashed, label="0"];
22->8 [style = bold, label=""];
50->74 [style = dashed, label="0"];
28->0 [style = bold, label=""];
80->82 [style = bold, label=""];
58->62 [style = bold, label=""];
55->23 [style = bold, label=""];
69->58 [style = bold, label=""];
84->65 [style = bold, label=""];
10->33 [style = solid, label="props"];
47->26 [style = bold, label=""];
33->48 [style = bold, label=""];
26->35 [style = bold, label=""];
37->82 [style = dashed, label="0"];
25->10 [style = bold, label=""];
9->52 [style = bold, label=""];
53->38 [style = bold, label=""];
21->3 [style = bold, label=""];
60->66 [style = bold, label=""];
28->57 [style = dashed, label="0"];
11->28 [style = bold, label=""];
79->69 [style = bold, label=""];
48->41 [style = bold, label=""];
40->59 [style = dashed, label="0"];
19->12 [style = bold, label=""];
64->67 [style = solid, label="config"];
0->72 [style = dashed, label="0"];
2->34 [style = bold, label=""];
57->0 [style = bold, label=""];
71->75 [style = bold, label=""];
77->78 [style = bold, label=""];
21->83 [style = dashed, label="0"];
12->37 [style = bold, label=""];
59->25 [style = solid, label="resource"];
70->59 [style = bold, label=""];
31->51 [style = bold, label=""];
48->80 [style = bold, label=""];
49->46 [style = bold, label=""];
19->48 [style = dashed, label="0"];
42->61 [style = dashed, label="0"];
17->75 [style = dashed, label="0"];
62->68 [style = bold, label=""];
34->14 [style = bold, label=""];
65->61 [style = bold, label=""];
40->25 [style = solid, label="resource"];
51->42 [style = bold, label=""];
56->40 [style = bold, label=""];
11->57 [style = bold, label=""];
27->20 [style = bold, label=""];
14->6 [style = bold, label=""];
44->30 [style = bold, label=""];
11->77 [style = dashed, label="0"];
13->24 [style = bold, label=""];
59->25 [style = bold, label=""];
39->5 [style = bold, label=""];
3->71 [style = dashed, label="0"];
82->77 [style = bold, label=""];
18->40 [style = bold, label=""];
68->63 [style = bold, label=""];
81->64 [style = bold, label=""];
20->1 [style = bold, label=""];
1->9 [style = bold, label=""];
78->72 [style = bold, label=""];
16->44 [style = bold, label=""];
25->33 [style = solid, label="inputStream"];
74->60 [style = bold, label=""];
3->17 [style = bold, label=""];
64->67 [style = bold, label=""];
46->32 [style = bold, label=""];
25->81 [style = bold, label=""];
8->13 [style = bold, label=""];
83->71 [style = bold, label=""];
42->43 [style = bold, label=""];
43->50 [style = bold, label=""];
7->47 [style = bold, label=""];
75->84 [style = bold, label=""];
35->22 [style = bold, label=""];
17->31 [style = bold, label=""];
50->16 [style = bold, label=""];
12->80 [style = dashed, label="0"];
52->2 [style = bold, label=""];
15->76 [style = dashed, label="0"];
6->36 [style = bold, label=""];
72->76 [style = bold, label=""];
47->63 [style = dashed, label="0"];
24->54 [style = bold, label=""];
76->83 [style = bold, label=""];
28->78 [style = dashed, label="0"];
29->33 [style = bold, label=""];
4->49 [style = bold, label=""];
10->29 [style = bold, label=""];
43->73 [style = dashed, label="0"];
61->73 [style = bold, label=""];
30->39 [style = bold, label=""];
23->53 [style = bold, label=""];
39->69 [style = dashed, label="0"];
25->81 [style = solid, label="inputStream"];
66->79 [style = bold, label=""];
}
