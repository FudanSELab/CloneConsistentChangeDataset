digraph {
0 [style = filled, label = "ConfigDataLocationResolvers resolvers = new ConfigDataLocationResolvers(this.logFactory,this.bootstrapContext,this.binder,this.resourceLoader,Arrays.asList(.getName(),.getName()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(resource.getLocation()).isEqualTo(location)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "resolveResolvesUsingFirstSupportedResolver['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<ConfigDataResolutionResult> resolved = resolvers.resolve(this.context,location,null,true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(resolved).hasSize(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(resource.getResolver()).isInstanceOf()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "resolveResolvesUsingFirstSupportedResolver['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestConfigDataResource profileResource = (TestConfigDataResource)resolved.get(1).getResource()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(resource.isProfileSpecific()).isFalse()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(profileResource.isProfileSpecific()).isTrue()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<ConfigDataResolutionResult> resolved = resolvers.resolve(this.context,location,this.profiles)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestConfigDataResource resource = (TestConfigDataResource)resolved.get(0).getResource()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(profileResource.getLocation()).isEqualTo(location)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<ConfigDataResolutionResult> resolved = resolvers.resolve(this.context,location,null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertThat(resolved).hasSize(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(profileResource.getResolver()).isInstanceOf()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ConfigDataLocation location = ConfigDataLocation.of(\"LowestTestResolver:test\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "resolveWhenProfileMergesResolvedLocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
15->13 [style = bold, label=""];
9->0 [style = bold, label=""];
3->4 [style = solid, label="location"];
2->1 [style = bold, label=""];
3->1 [style = solid, label="location"];
12->17 [style = bold, label=""];
3->15 [style = bold, label=""];
3->4 [style = bold, label=""];
8->0 [style = bold, label=""];
6->14 [style = bold, label=""];
3->10 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
10->5 [style = bold, label=""];
3->15 [style = solid, label="location"];
7->2 [style = bold, label=""];
13->7 [style = bold, label=""];
4->15 [style = dashed, label="0"];
3->12 [style = solid, label="location"];
5->7 [style = bold, label=""];
3->10 [style = solid, label="location"];
4->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
}
