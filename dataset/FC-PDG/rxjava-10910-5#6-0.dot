digraph {
6 [style = filled, label = "assertValuesOnlyThrowsOnUnexpectedValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "throw new RuntimeException()@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "to.onNext(-1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "to.assertValuesOnly(5)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "to.assertValuesOnly(5)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestObserver<Integer> to = TestObserver.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "to.onNext(5)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertValuesOnlyThrowsOnUnexpectedValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertValuesOnlyThrowsOnUnexpectedValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "to.assertValuesOnly()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
5->1 [style = bold, label=""];
2->0 [style = bold, label=""];
11->12 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->2 [style = bold, label=""];
3->12 [style = dashed, label="0"];
9->10 [style = bold, label=""];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
0->7 [style = bold, label=""];
10->4 [style = bold, label=""];
}
