digraph {
17 [style = filled, label = "shardRouting.primary()@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "shardState = RestoreInProgress.State.FAILURE@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(Decision.Type.YES,decision.type())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "UnassignedInfo newInfo = new UnassignedInfo(currentInfo.getReason(),currentInfo.getMessage(),new IOException(\"i/o failure\"),currentInfo.getNumFailedAllocations(),currentInfo.getUnassignedTimeInNanos(),currentInfo.getUnassignedTimeInMillis(),currentInfo.isDelayed(),currentInfo.getLastAllocationStatus(),currentInfo.getFailedNodeIds(),currentInfo.getLastAllocatedNodeId())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "UnassignedInfo currentInfo = primary.unassignedInfo()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "RestoreInProgress.Entry restore = new RestoreInProgress.Entry(recoverySource.restoreUUID(),snapshot,restoreState,singletonList(\"test\"),shards.build())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCannotAllocatePrimaryMissingInRestoreInProgress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final ObjectCursor<IndexShardRoutingTable> shardEntry@@@22@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final IndexShardRoutingTable shardRoutingTable = shardEntry.value@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(Decision.Type.NO,decision.type())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ClusterState clusterState = createInitialClusterState()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "shardState = randomFrom(RestoreInProgress.State.STARTED,RestoreInProgress.State.INIT)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "shards.put(primary.shardId(),new RestoreInProgress.ShardRestoreStatus(clusterState.getNodes().getLocalNodeId(),shardState))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Snapshot snapshot = recoverySource.snapshot()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "RestoreInProgress.State restoreState = RestoreInProgress.State.STARTED@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "RecoverySource.SnapshotRecoverySource recoverySource = createSnapshotRecoverySource(\"_existing\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "newIndexRoutingTable.addShard(primary)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "shardRoutingTable.getShards()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(ShardRoutingState.UNASSIGNED,primary.state())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Decision.Type.NO,decision.type())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ShardRouting shardRouting@@@24@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ImmutableOpenMap.Builder<ShardId,RestoreInProgress.ShardRestoreStatus> shards = ImmutableOpenMap.builder()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "indexRoutingTable.getShards().values()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final RestoreInProgress.State shardState@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(RecoverySource.Type.SNAPSHOT,primary.recoverySource().getType())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(decision.getExplanation(),startsWith(\"shard has failed to be restored from the snapshot \" + \"(_repository:_existing/_uuid( - manually close or delete the index \" + \"(test( in order to retry to restore the snapshot again or use the reroute API to force the allocation of \" + \"an empty primary shard. Details: (restore_source(_repository/_existing(, failure java.io.IOException: i/o failure\"))@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ShardRouting primary = clusterState.getRoutingTable().shardRoutingTable(\"test\",0).primaryShard()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"shard is currently being restored\",decision.getExplanation())@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "randomBoolean()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "IndexRoutingTable.Builder newIndexRoutingTable = IndexRoutingTable.builder(indexRoutingTable.getIndex())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "newIndexRoutingTable.addShard(shardRouting)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testCanAllocatePrimaryExistingInRestoreInProgress['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "IndexRoutingTable indexRoutingTable = routingTable.index(\"test\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Decision decision = executeAllocation(clusterState,primary)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RoutingTable routingTable = RoutingTable.builder(clusterState.getRoutingTable()).addAsRestore(clusterState.getMetadata().index(\"test\"),recoverySource).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(decision.getExplanation(),equalTo(\"shard has failed to be restored from the snapshot (_repository:_missing/_uuid( - manually close or \" + \"delete the index (test( in order to retry to restore the snapshot again or use the reroute API \" + \"to force the allocation of an empty primary shard. Details: (restore_source(_repository/_missing((\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "routingTable = RoutingTable.builder(routingTable).add(newIndexRoutingTable).build()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "routingTable = clusterState.routingTable()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "clusterState = ClusterState.builder(clusterState).putCustom(RestoreInProgress.TYPE,new RestoreInProgress.Builder().add(restore).build()).routingTable(routingTable).build()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(decision.getExplanation(),equalTo(\"shard has failed to be restored from the snapshot \" + \"(_repository:_missing/_uuid( - manually close or delete the index (test( in order to retry to restore the snapshot again \" + \"or use the reroute API to force the allocation of an empty primary shard. Details: (restore_source(_repository/_missing((\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "primary = primary.updateUnassigned(newInfo,primary.recoverySource())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "shardState == RestoreInProgress.State.FAILURE@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ClusterState clusterState = createInitialClusterState()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testCannotAllocatePrimaryMissingInRestoreInProgress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
28->6 [style = bold, label=""];
12->5 [style = bold, label=""];
39->14 [style = bold, label=""];
20->27 [style = dotted, label="true"];
40->20 [style = bold, label=""];
9->6 [style = bold, label=""];
42->33 [style = solid, label="shardState"];
8->1 [style = bold, label=""];
30->21 [style = solid, label="clusterState"];
5->0 [style = bold, label=""];
20->31 [style = dotted, label="true"];
43->24 [style = bold, label=""];
34->17 [style = bold, label=""];
45->38 [style = bold, label=""];
0->8 [style = bold, label=""];
25->19 [style = bold, label=""];
20->13 [style = dotted, label="false"];
44->33 [style = solid, label="shardState"];
28->37 [style = solid, label="recoverySource"];
5->1 [style = solid, label="primary"];
36->41 [style = bold, label=""];
34->19 [style = bold, label=""];
16->17 [style = bold, label=""];
20->23 [style = dotted, label="false"];
24->37 [style = solid, label="newInfo"];
17->34 [style = dotted, label="false"];
26->16 [style = bold, label=""];
21->45 [style = bold, label=""];
36->41 [style = solid, label="restoreState"];
17->34 [style = bold, label=""];
7->5 [style = bold, label=""];
41->30 [style = bold, label=""];
38->18 [style = bold, label=""];
44->32 [style = bold, label=""];
45->39 [style = dotted, label="true"];
29->40 [style = bold, label=""];
6->7 [style = bold, label=""];
37->21 [style = solid, label="primary"];
20->24 [style = dotted, label="false"];
20->42 [style = dotted, label="false"];
4->9 [style = bold, label=""];
20->35 [style = dotted, label="false"];
20->17 [style = dotted, label="true"];
2->3 [style = bold, label=""];
25->16 [style = bold, label=""];
25->17 [style = bold, label=""];
32->33 [style = bold, label=""];
44->45 [style = solid, label="shardState"];
30->21 [style = bold, label=""];
20->44 [style = dotted, label="true"];
19->32 [style = bold, label=""];
22->41 [style = solid, label="snapshot"];
17->25 [style = dotted, label="true"];
15->28 [style = bold, label=""];
45->14 [style = dotted, label="true"];
34->16 [style = bold, label=""];
12->29 [style = solid, label="routingTable"];
45->18 [style = dotted, label="false"];
20->42 [style = bold, label=""];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
20->43 [style = dotted, label="false"];
37->35 [style = bold, label=""];
1->29 [style = bold, label=""];
3->14 [style = dashed, label="0"];
20->26 [style = dotted, label="false"];
35->26 [style = bold, label=""];
2->11 [style = bold, label=""];
33->22 [style = bold, label=""];
45->39 [style = bold, label=""];
6->12 [style = bold, label=""];
37->25 [style = solid, label="primary"];
42->43 [style = bold, label=""];
37->17 [style = solid, label="primary"];
0->21 [style = solid, label="primary"];
42->45 [style = solid, label="shardState"];
20->44 [style = bold, label=""];
6->12 [style = dashed, label="0"];
7->1 [style = solid, label="clusterState"];
22->36 [style = bold, label=""];
24->37 [style = bold, label=""];
20->19 [style = dotted, label="false"];
20->37 [style = dotted, label="false"];
3->11 [style = dashed, label="0"];
45->38 [style = dotted, label="false"];
20->16 [style = dotted, label="true"];
}
