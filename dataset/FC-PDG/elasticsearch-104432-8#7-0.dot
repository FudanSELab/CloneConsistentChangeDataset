digraph {
20 [style = filled, label = "expectThrows(,null)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(1,nodeDisconnectedCount.get())@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(connection.isClosed())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(1,nodeConnectedCount.get())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expectThrows(,null)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,connectionManager.size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,nodeDisconnectedCount.get())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testConnectFailsDuringValidation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectThrows(,null)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,connectionManager.size())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(connectionManager.nodeConnected(node))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "AtomicReference<Transport.Connection> connectionRef = new AtomicReference<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(connectionManager.nodeConnected(node))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ConnectionManager.ConnectionValidator validator = null@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PlainActionFuture<Void> fut = new PlainActionFuture<>()@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "connectionManager.addListener(new TransportConnectionListener(){@Override public void onNodeConnected(DiscoveryNode node,Transport.Connection connection){nodeConnectedCount.incrementAndGet()}@Override public void onNodeDisconnected(DiscoveryNode node,Transport.Connection connection){nodeDisconnectedCount.incrementAndGet()}})@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "doAnswer(null).when(transport).openConnection(eq(node),eq(connectionProfile),anyActionListener())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertSame(connection,connectionManager.getConnection(node))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(connection.isClosed())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "AtomicInteger nodeDisconnectedCount = new AtomicInteger()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PlainActionFuture.get(null)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "connectionManager.disconnectFromNode(node)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testConnectAndDisconnect['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DiscoveryNode node = new DiscoveryNode(\"\",new TransportAddress(InetAddress.getLoopbackAddress(),0),Version.CURRENT)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,nodeConnectedCount.get())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Transport.Connection connection = new TestConnect(node)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "PlainActionFuture<Releasable> fut = new PlainActionFuture<>()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ConnectionManager.ConnectionValidator validator = null@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "connectionManager.connectToNode(node,connectionProfile,validator,fut)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(connection.isClosed())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(1,connectionManager.size())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(0,nodeConnectedCount.get())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "randomBoolean()@@@36@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(connectionManager.nodeConnected(node))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "AtomicInteger nodeConnectedCount = new AtomicInteger()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(0,nodeDisconnectedCount.get())@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testConnectFailsDuringValidation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "connection.close()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->29 [style = bold, label=""];
6->3 [style = bold, label=""];
10->28 [style = solid, label="node"];
32->22 [style = bold, label=""];
2->20 [style = dashed, label="0"];
23->27 [style = bold, label=""];
15->21 [style = bold, label=""];
5->23 [style = dashed, label="0"];
31->32 [style = bold, label=""];
17->9 [style = bold, label=""];
9->4 [style = bold, label=""];
12->17 [style = bold, label=""];
10->13 [style = solid, label="node"];
16->7 [style = bold, label=""];
35->33 [style = bold, label=""];
10->8 [style = solid, label="node"];
19->13 [style = solid, label="fut"];
24->34 [style = bold, label=""];
6->13 [style = solid, label="validator"];
30->36 [style = bold, label=""];
7->0 [style = bold, label=""];
15->6 [style = bold, label=""];
22->28 [style = bold, label=""];
6->19 [style = bold, label=""];
36->26 [style = bold, label=""];
5->14 [style = bold, label=""];
14->27 [style = dashed, label="0"];
11->15 [style = bold, label=""];
2->12 [style = bold, label=""];
24->30 [style = dotted, label="false"];
24->30 [style = bold, label=""];
3->19 [style = dashed, label="0"];
10->34 [style = solid, label="node"];
10->11 [style = solid, label="node"];
25->24 [style = bold, label=""];
3->13 [style = solid, label="fut"];
0->10 [style = bold, label=""];
21->31 [style = bold, label=""];
19->13 [style = bold, label=""];
10->8 [style = bold, label=""];
10->29 [style = solid, label="node"];
8->29 [style = solid, label="connection"];
33->25 [style = bold, label=""];
1->16 [style = bold, label=""];
34->36 [style = bold, label=""];
26->23 [style = bold, label=""];
10->17 [style = solid, label="node"];
20->12 [style = bold, label=""];
24->34 [style = dotted, label="true"];
10->15 [style = solid, label="node"];
3->13 [style = bold, label=""];
29->35 [style = bold, label=""];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
37->16 [style = bold, label=""];
13->2 [style = bold, label=""];
13->20 [style = bold, label=""];
18->16 [style = bold, label=""];
}
