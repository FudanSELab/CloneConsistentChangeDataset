digraph {
11 [style = filled, label = "client.get(\"/a2\").run().assertCode().is(206).assertBody().is(\"foo\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.get(\"/a3\").run().assertCode().is(206).assertHeader(\"Foo\").is(\"bar\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "MockRestClient client = MockRestClient.createLax().build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.get(\"/a3\").run().assertCode().is(308).assertHeader(\"Location\").is(\"/foo\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "MockRestClient client = MockRestClient.createLax().disableRedirectHandling().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.get(\"/a1\").run().assertCode().is(308).assertBody().is(\"Permanent Redirect\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.get(\"/a3\").run().assertCode().is(308).assertBody().is(\"Permanent Redirect\").assertHeader(\"Location\").is(\"/foo\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "client.get(\"/a1\").run().assertCode().is(206).assertBody().is(\"Partial Content\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.get(\"/a4\").run().assertCode().is(308).assertHeader(\"Foo\").is(\"bar\")@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.get(\"/a2\").run().assertCode().is(308).assertBody().is(\"foo\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
5->7 [style = bold, label=""];
5->1 [style = bold, label=""];
8->10 [style = bold, label=""];
0->8 [style = dashed, label="0"];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
6->0 [style = bold, label=""];
11->12 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
5->11 [style = dashed, label="0"];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
4->5 [style = bold, label=""];
7->3 [style = bold, label=""];
10->11 [style = bold, label=""];
}
