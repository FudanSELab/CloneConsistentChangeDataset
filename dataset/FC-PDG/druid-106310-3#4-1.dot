digraph {
1 [style = filled, label = "testQuerySerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Query query = Druids.newTimeseriesQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.dayGran).intervals(QueryRunnerTestHelper.fullOnInterval).aggregators(QueryRunnerTestHelper.rowsCount,QueryRunnerTestHelper.indexDoubleSum).postAggregators(QueryRunnerTestHelper.addRowsIndexConstant).descending(descending).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Query query = new TopNQueryBuilder().dataSource(dataSource).granularity(allGran).dimension(marketDimension).metric(indexMetric).threshold(4).intervals(fullOnInterval).aggregators(Lists.newArrayList(Iterables.concat(commonDoubleAggregators,Lists.newArrayList(new DoubleMaxAggregatorFactory(\"maxIndex\",\"index\"),new DoubleMinAggregatorFactory(\"minIndex\",\"index\"))))).postAggregators(Collections.singletonList(addRowsIndexConstant)).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testQuerySerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Query query = new TopNQueryBuilder().dataSource(dataSource).granularity(allGran).dimension(marketDimension).metric(indexMetric).threshold(4).intervals(fullOnIntervalSpec).aggregators(Lists.newArrayList(Iterables.concat(commonDoubleAggregators,Lists.newArrayList(new DoubleMaxAggregatorFactory(\"maxIndex\",\"index\"),new DoubleMinAggregatorFactory(\"minIndex\",\"index\"))))).postAggregators(Collections.singletonList(addRowsIndexConstant)).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(query,serdeQuery)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testQuerySerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "String json = jsonMapper.writeValueAsString(query)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Query serdeQuery = jsonMapper.readValue(json,)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->2 [style = solid, label="query"];
4->2 [style = solid, label="serdeQuery"];
0->3 [style = bold, label=""];
6->3 [style = bold, label=""];
0->3 [style = solid, label="query"];
6->3 [style = solid, label="query"];
6->2 [style = solid, label="query"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
5->6 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = solid, label="json"];
8->3 [style = solid, label="query"];
3->4 [style = bold, label=""];
8->3 [style = bold, label=""];
0->6 [style = dashed, label="0"];
8->2 [style = solid, label="query"];
}
