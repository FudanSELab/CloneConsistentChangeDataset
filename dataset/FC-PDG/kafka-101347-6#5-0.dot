digraph {
1 [style = filled, label = "assertThat(buffer.numRecords(),is(2))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final byte(( zxcvValue1 = new ContextualRecord(FullChangeSerde.mergeChangeArraysIntoSingleLegacyFormattedArray(fullChangeSerde.serializeParts(null,new Change<>(\"3o4im\",\"previous\"))),getContext(2L)).serialize(0).array()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "shouldRestoreV1Format['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final TimeOrderedKeyValueBuffer<String,String> buffer = bufferSupplier.apply(testName)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(buffer.priorValueForBuffered(\"zxcv\"),is(Maybe.defined(ValueAndTimestamp.make(\"previous\",-1))))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(buffer.bufferSize(),is(95L))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(buffer.numRecords(),is(3))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "buffer.init(context,buffer)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RecordHeaders v2FlagHeaders = new RecordHeaders(new Header((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd7949)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final byte(( zxcvValue2 = new ContextualRecord(FullChangeSerde.mergeChangeArraysIntoSingleLegacyFormattedArray(fullChangeSerde.serializeParts(null,new Change<>(\"next\",\"3o4im\"))),getContext(3L)).serialize(0).array()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final FullChangeSerde<String> fullChangeSerde = FullChangeSerde.wrap(Serdes.String())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "cleanup(context,buffer)@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "stateRestoreCallback.restoreBatch(asList(new ConsumerRecord<>(\"changelog-topic\",0,0,999,TimestampType.CREATE_TIME,-1L,-1,-1,\"todelete\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + todeleteValue.length).put(todeleteValue).putLong(0L).array(),v2FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,1,9999,TimestampType.CREATE_TIME,-1L,-1,-1,\"asdf\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + asdfValue.length).put(asdfValue).putLong(2L).array(),v2FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,2,99,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + zxcvValue1.length).put(zxcvValue1).putLong(1L).array(),v2FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,2,100,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + zxcvValue2.length).put(zxcvValue2).putLong(1L).array(),v2FlagHeaders)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldRestoreV2Format['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cleanup(context,buffer)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(buffer.bufferSize(),is(142L))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final byte(( asdfValue = getContextualRecord(\"qwer\",1).serialize(0).array()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(buffer.minTimestamp(),is(0L))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "buffer.evictWhile(null,null)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(evicted,is(asList(new Eviction<>(\"zxcv\",new Change<>(\"next\",\"3o4im\"),getContext(3L)),new Eviction<>(\"asdf\",new Change<>(\"qwer\",null),getContext(1L)))))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MockInternalProcessorContext context = makeContext()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(buffer.minTimestamp(),is(1L))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final byte(( zxcvValue2 = new BufferValue(Serdes.String().serializer().serialize(null,\"previous\"),Serdes.String().serializer().serialize(null,\"3o4im\"),Serdes.String().serializer().serialize(null,\"next\"),getContext(3L)).serialize(0).array()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final byte(( zxcvValue1 = new BufferValue(Serdes.String().serializer().serialize(null,\"previous\"),Serdes.String().serializer().serialize(null,\"IGNORED\"),Serdes.String().serializer().serialize(null,\"3o4im\"),getContext(2L)).serialize(0).array()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.setRecordContext(new ProcessorRecordContext(0,0,0,\"\",null))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final RecordHeaders v1FlagHeaders = new RecordHeaders(new Header((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd7b4e)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final RecordBatchingStateRestoreCallback stateRestoreCallback = (RecordBatchingStateRestoreCallback)context.stateRestoreCallback(testName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final byte(( todeleteValue = getBufferValue(\"doomed\",0).serialize(0).array()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "shouldRestoreV2Format['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final List<Eviction<String,String>> evicted = new LinkedList<>()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final FullChangeSerde<String> fullChangeSerde1 = FullChangeSerde.wrap(Serdes.String())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final byte(( asdfValue = getBufferValue(\"qwer\",1).serialize(0).array()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(buffer.priorValueForBuffered(\"asdf\"),is(Maybe.defined(null)))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stateRestoreCallback.restoreBatch(singletonList(new ConsumerRecord<>(\"changelog-topic\",0,3,3,TimestampType.CREATE_TIME,-1L,-1,-1,\"todelete\".getBytes(UTF_8),null)))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final byte(( todeleteValue = getContextualRecord(\"doomed\",0).serialize(0).array()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "stateRestoreCallback.restoreBatch(asList(new ConsumerRecord<>(\"changelog-topic\",0,0,999,TimestampType.CREATE_TIME,-1L,-1,-1,\"todelete\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + todeleteValue.length).putLong(0L).put(todeleteValue).array(),v1FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,1,9999,TimestampType.CREATE_TIME,-1L,-1,-1,\"asdf\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + asdfValue.length).putLong(2L).put(asdfValue).array(),v1FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,2,99,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + zxcvValue1.length).putLong(1L).put(zxcvValue1).array(),v1FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,3,100,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),ByteBuffer.allocate(Long.BYTES + zxcvValue2.length).putLong(1L).put(zxcvValue2).array(),v1FlagHeaders)))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(buffer.priorValueForBuffered(\"todelete\"),is(Maybe.undefined()))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->23 [style = solid, label="buffer"];
17->5 [style = bold, label=""];
15->2 [style = bold, label=""];
19->18 [style = bold, label=""];
24->12 [style = bold, label=""];
7->1 [style = bold, label=""];
30->13 [style = bold, label=""];
16->32 [style = dashed, label="0"];
12->21 [style = bold, label=""];
25->23 [style = bold, label=""];
35->22 [style = bold, label=""];
29->31 [style = bold, label=""];
27->3 [style = bold, label=""];
18->26 [style = bold, label=""];
1->27 [style = bold, label=""];
14->22 [style = bold, label=""];
8->14 [style = bold, label=""];
0->11 [style = bold, label=""];
31->36 [style = bold, label=""];
28->13 [style = bold, label=""];
26->8 [style = bold, label=""];
3->15 [style = bold, label=""];
0->23 [style = solid, label="context"];
16->19 [style = bold, label=""];
26->6 [style = bold, label=""];
32->33 [style = bold, label=""];
5->34 [style = bold, label=""];
18->29 [style = bold, label=""];
21->9 [style = bold, label=""];
22->20 [style = bold, label=""];
10->13 [style = bold, label=""];
33->18 [style = bold, label=""];
12->9 [style = solid, label="evicted"];
19->26 [style = bold, label=""];
4->14 [style = solid, label="v2FlagHeaders"];
9->25 [style = bold, label=""];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
4->34 [style = dashed, label="0"];
13->11 [style = solid, label="buffer"];
0->25 [style = solid, label="context"];
34->36 [style = solid, label="v1FlagHeaders"];
21->25 [style = solid, label="evicted"];
11->17 [style = bold, label=""];
34->32 [style = bold, label=""];
2->24 [style = bold, label=""];
20->7 [style = bold, label=""];
36->35 [style = bold, label=""];
19->33 [style = dashed, label="0"];
13->25 [style = solid, label="buffer"];
0->11 [style = solid, label="context"];
4->16 [style = bold, label=""];
13->0 [style = bold, label=""];
}
