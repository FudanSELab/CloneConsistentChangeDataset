digraph {
6 [style = filled, label = "ParquetValueWriter<?> keyWriter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "list['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "org.apache.parquet.schema.Type valueType = repeatedKeyValue.getType(1)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "ParquetValueWriter<?> valueWriter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "return new MapDataWriter<>(repeatedD,repeatedR,newOption(repeatedKeyValue.getType(0),keyWriter),newOption(repeatedKeyValue.getType(1),valueWriter),sMap.keyType(),sMap.valueType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "int keyD = type.getMaxDefinitionLevel(path(keyType.getName()))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "org.apache.parquet.schema.Type keyType = repeatedKeyValue.getType(0)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "int valueD = type.getMaxDefinitionLevel(path(valueType.getName()))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "int elementD = type.getMaxDefinitionLevel(path(elementType.getName()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "GroupType map@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "map['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "ParquetValueWriter<?> elementWriter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DataType valueSparkType = SparkSchemaUtil.convert(schema.findType(valueType.getId().intValue()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "GroupType map@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "DataType elementSparkType = SparkSchemaUtil.convert(schema.findType(elementType.getId().intValue()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "GroupType repeatedKeyValue = map.getFields().get(0).asGroupType()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int repeatedR = type.getMaxRepetitionLevel(repeatedPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ParquetValueWriter<?> keyWriter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ParquetValueWriter<?> valueWriter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DataType keySparkType = SparkSchemaUtil.convert(schema.findType(keyType.getId().intValue()))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "org.apache.parquet.schema.Type elementType = repeated.getType(0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "GroupType repeated = array.getFields().get(0).asGroupType()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "GroupType array@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String(( repeatedPath = currentPath()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return new MapDataWriter<>(repeatedD,repeatedR,ParquetValueWriters.option(keyType,keyD,keyWriter),ParquetValueWriters.option(valueType,valueD,valueWriter),keySparkType,valueSparkType)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "MapType sMap@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "map['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return new ArrayDataWriter<>(repeatedD,repeatedR,ParquetValueWriters.option(elementType,elementD,elementWriter),elementSparkType)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int repeatedD = type.getMaxDefinitionLevel(repeatedPath)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
17->19 [style = solid, label="keyWriter"];
8->19 [style = dashed, label="0"];
18->3 [style = bold, label=""];
7->11 [style = bold, label=""];
2->12 [style = solid, label="keySparkType"];
10->19 [style = solid, label="repeatedR"];
11->14 [style = bold, label=""];
18->16 [style = dotted, label="true"];
6->20 [style = dashed, label="0"];
25->23 [style = bold, label=""];
10->19 [style = bold, label=""];
9->13 [style = solid, label="repeatedPath"];
24->9 [style = bold, label=""];
26->27 [style = dotted, label="true"];
3->24 [style = dashed, label="0"];
18->15 [style = dotted, label="true"];
5->6 [style = dotted, label="true"];
28->23 [style = solid, label="elementD"];
10->21 [style = bold, label=""];
5->0 [style = dotted, label="true"];
18->20 [style = dotted, label="true"];
26->22 [style = dotted, label="true"];
8->21 [style = dashed, label="0"];
1->28 [style = dashed, label="0"];
4->12 [style = solid, label="valueWriter"];
26->24 [style = bold, label=""];
6->12 [style = solid, label="keyWriter"];
5->4 [style = dotted, label="true"];
21->28 [style = bold, label=""];
13->19 [style = solid, label="repeatedD"];
1->12 [style = solid, label="keyD"];
11->12 [style = solid, label="valueD"];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
16->19 [style = solid, label="valueWriter"];
8->12 [style = solid, label="keyType"];
10->8 [style = bold, label=""];
22->23 [style = solid, label="elementWriter"];
6->27 [style = dashed, label="0"];
9->10 [style = solid, label="repeatedPath"];
14->12 [style = bold, label=""];
2->25 [style = dashed, label="0"];
13->23 [style = solid, label="repeatedD"];
28->25 [style = bold, label=""];
10->23 [style = solid, label="repeatedR"];
1->2 [style = bold, label=""];
18->17 [style = dotted, label="true"];
25->23 [style = solid, label="elementSparkType"];
2->7 [style = bold, label=""];
10->12 [style = solid, label="repeatedR"];
7->12 [style = solid, label="valueType"];
21->23 [style = solid, label="elementType"];
14->12 [style = solid, label="valueSparkType"];
13->12 [style = solid, label="repeatedD"];
9->13 [style = bold, label=""];
}
