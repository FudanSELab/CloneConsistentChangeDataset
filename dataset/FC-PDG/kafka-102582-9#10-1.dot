digraph {
4 [style = filled, label = "runTestWithDriver(expectedResult)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testInner['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testMultiInner['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "leftStream.join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).to(OUTPUT_TOPIC)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final List<List<TestRecord<Long,String>>> expectedResult = Arrays.asList(null,null,null,Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-a\",null,4L)),Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY,\"B-a\",null,5L)),Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-b\",null,6L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-b\",null,6L)),null,null,Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"C-a\",null,9L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-b\",null,9L)),Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-c\",null,10L)),null,null,null,Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-d\",null,14L)),Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"D-a\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-b\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-c\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-d\",null,15L)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + \"-inner\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + \"-multi-inner\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "leftStream.join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).to(OUTPUT_TOPIC)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final List<List<TestRecord<Long,String>>> expectedResult = Arrays.asList(null,null,null,Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-a-a\",null,4L)),Collections.singletonList(new TestRecord<>(ANY_UNIQUE_KEY,\"B-a-a\",null,5L)),Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-b-a\",null,6L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-b-a\",null,6L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-a-b\",null,6L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-a-b\",null,6L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-b-b\",null,6L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-b-b\",null,6L)),null,null,Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"C-a-a\",null,9L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-a-b\",null,9L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-b-a\",null,9L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-b-b\",null,9L)),Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-c-a\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-c-b\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-c-a\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-c-b\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-c-a\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-c-b\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-a-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-a-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-b-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-b-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-a-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-b-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-c-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-c-c\",null,10L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-c-c\",null,10L)),null,null,null,Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"A-d-a\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-d-b\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-d-c\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-d-a\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-d-b\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-d-c\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-d-a\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-d-b\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-d-c\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-a-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-a-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-b-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-b-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-a-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-b-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-c-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-c-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-c-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"A-d-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"B-d-d\",null,14L),new TestRecord<>(ANY_UNIQUE_KEY,\"C-d-d\",null,14L)),Arrays.asList(new TestRecord<>(ANY_UNIQUE_KEY,\"D-a-a\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-a-b\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-a-c\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-a-d\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-b-a\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-b-b\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-b-c\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-b-d\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-c-a\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-c-b\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-c-c\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-c-d\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-d-a\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-d-b\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-d-c\",null,15L),new TestRecord<>(ANY_UNIQUE_KEY,\"D-d-d\",null,15L)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testInner['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->9 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->2 [style = bold, label=""];
1->0 [style = bold, label=""];
8->4 [style = bold, label=""];
3->2 [style = bold, label=""];
1->4 [style = solid, label="expectedResult"];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
2->1 [style = bold, label=""];
6->4 [style = solid, label="expectedResult"];
6->8 [style = bold, label=""];
9->6 [style = bold, label=""];
}
