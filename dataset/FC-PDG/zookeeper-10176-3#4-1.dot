digraph {
14 [style = filled, label = "{if (leader != null) {leader.shutdown(\"end of test\")}TestUtils.deleteFileRecursively(tmpDir)}@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FollowerMockThread f2 = new FollowerMockThread(2,leader,true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FollowerMockThread f1 = new FollowerMockThread(1,leader,true)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "peer.setAcceptedEpoch(5)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "leader = createLeader(tmpDir,peer)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "f2.join(leader.self.getInitLimit() * leader.self.getTickTime() + 5000)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Exception e@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(\"leader got wrong epoch from getEpochToPropose\",6,epoch)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "f1.join(leader.self.getInitLimit() * leader.self.getTickTime() + 5000)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.fail(\"leader timed out in getEpochToPropose\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "File tmpDir = File.createTempFile(\"test\",\"dir\",testData)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "peer.leader = leader@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "f2.start()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Leader leader = null@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "fail(\"leader timed out in getEpochToPropose\")@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "leader.leaderStateSummary = new StateSummary(leader.self.getCurrentEpoch(),leader.zk.getLastProcessedZxid())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testLeaderInConnectingFollowers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertTrue(f1.msg + \" without waiting for leader\",f1.msg == null)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "f1.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tmpDir.delete()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "QuorumPeer peer = createQuorumPeer(tmpDir)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{if (leader != null) {leader.shutdown(\"end of test\")}TestUtils.deleteFileRecursively(tmpDir)}@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "f1.join(leader.self.getInitLimit() * leader.self.getTickTime() + 5000)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "tmpDir.mkdir()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"leader got wrong epoch from getEpochToPropose\",6,epoch)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Exception e@@@22@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "long epoch = leader.getEpochToPropose(leader.self.getId(),leader.self.getAcceptedEpoch())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "FollowerMockThread f2 = new FollowerMockThread(2,leader,false)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testLeaderInConnectingFollowers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(f2.msg + \" without waiting for leader\",f2.msg == null)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testLeaderInElectingFollowers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "FollowerMockThread f1 = new FollowerMockThread(1,leader,false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "f2.join(leader.self.getInitLimit() * leader.self.getTickTime() + 5000)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->19 [style = bold, label=""];
17->18 [style = solid, label="leader"];
17->28 [style = solid, label="leader"];
11->20 [style = dashed, label="0"];
30->1 [style = bold, label=""];
7->21 [style = dashed, label="0"];
8->32 [style = bold, label=""];
25->22 [style = bold, label=""];
11->14 [style = bold, label=""];
17->31 [style = bold, label=""];
8->3 [style = bold, label=""];
12->15 [style = bold, label=""];
23->21 [style = dotted, label="true"];
3->11 [style = bold, label=""];
15->17 [style = solid, label="leader"];
19->10 [style = bold, label=""];
17->26 [style = solid, label="leader"];
20->14 [style = bold, label=""];
12->15 [style = solid, label="peer"];
4->2 [style = bold, label=""];
3->20 [style = solid, label="epoch"];
19->25 [style = bold, label=""];
29->26 [style = bold, label=""];
7->14 [style = bold, label=""];
32->29 [style = bold, label=""];
22->3 [style = bold, label=""];
8->22 [style = dashed, label="0"];
1->12 [style = solid, label="tmpDir"];
5->1 [style = bold, label=""];
3->11 [style = solid, label="epoch"];
15->17 [style = bold, label=""];
1->26 [style = solid, label="tmpDir"];
3->20 [style = bold, label=""];
17->31 [style = solid, label="leader"];
13->12 [style = bold, label=""];
17->0 [style = bold, label=""];
1->15 [style = solid, label="tmpDir"];
18->4 [style = bold, label=""];
10->8 [style = bold, label=""];
23->21 [style = bold, label=""];
1->16 [style = bold, label=""];
6->23 [style = dashed, label="0"];
17->4 [style = solid, label="leader"];
21->14 [style = bold, label=""];
6->7 [style = dotted, label="true"];
18->28 [style = dashed, label="0"];
0->18 [style = bold, label=""];
31->28 [style = bold, label=""];
24->1 [style = bold, label=""];
28->27 [style = bold, label=""];
6->7 [style = bold, label=""];
27->2 [style = bold, label=""];
16->9 [style = bold, label=""];
10->25 [style = dashed, label="0"];
1->14 [style = solid, label="tmpDir"];
17->14 [style = solid, label="leader"];
9->13 [style = bold, label=""];
}
