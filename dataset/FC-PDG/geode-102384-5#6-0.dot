digraph {
13 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"refCount deced after orphan detected for @1000\",true)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isZero()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(1,info.size())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "verify(debugLogger).accept(\"refCount deced after orphan detected for @1000\",true)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"refCount inced after orphan detected for @1000\",true)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "PowerMockito.spy()@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(0,rcci.getUseCount())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PowerMockito.verifyStatic()@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isOne()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "verify(debugLogger).accept(\"refCount inced after orphan detected for @1000\",true)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "doGetRefCountInfoWithTrackRefsTrueAndTrackFreesFalse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PowerMockito.verifyStatic()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,false,1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "rcci = list.get(0)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,list.size())@@@23@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<RefCountChangeInfo> info = rchi.getRefCountInfo(address)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<RefCountChangeInfo> list = null@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,false,1)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "RefCountChangeInfo rcci = list.get(0)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isOne()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "doRefCountChangedAfterGetRefCountInfoWithTrackRefsTrueAndTrackFreesTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "rchi.freeRefCountInfo(address)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "doRefCountChangedAfterGetRefCountInfoWithTrackRefsTrueAndTrackFreesTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,false,1)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "list = referenceCountHelperImpl.peekRefCountInfo(address)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertThat(list).hasSize(1)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "boolean decRefCount = false@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(list).hasSize(1)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "decRefCount = true@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,true,1)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "int rc = 1@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ReferenceCountHelperImpl referenceCountHelperImpl = newReferenceCountHelperImpl_TrueTrue()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "sor.mute()@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "referenceCountHelperImpl.freeRefCountInfo(address)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "assertThat(info).hasSize(1)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "long address = (long)0x1000@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Long address = (long)0x1000@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "list = referenceCountHelperImpl.peekRefCountInfo(address)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "rcci = info.get(0)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "rchi = getTrueFalse()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,list.size())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(list).isEmpty()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "verify(debugLogger).accept(\"freed after orphan detected for @1000\",true)@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"freed after orphan detected for @1000\",true)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "rchi = getTrueTrue()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "refCountChangeInfo = list.get(0)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "refCountChangeInfo = info.get(0)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "List<RefCountChangeInfo> list = referenceCountHelperImpl.peekRefCountInfo(address)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "List<RefCountChangeInfo> info = referenceCountHelperImpl.getRefCountInfo(address)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertEquals(1,list.size())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "PowerMockito.verifyStatic()@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "RefCountChangeInfo refCountChangeInfo = list.get(0)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22->44 [style = dashed, label="0"];
56->52 [style = bold, label=""];
21->24 [style = bold, label=""];
9->7 [style = bold, label=""];
15->7 [style = solid, label="address"];
22->4 [style = bold, label=""];
8->0 [style = bold, label=""];
41->35 [style = solid, label="address"];
10->58 [style = dashed, label="0"];
46->54 [style = bold, label=""];
10->12 [style = bold, label=""];
27->19 [style = bold, label=""];
19->3 [style = bold, label=""];
29->22 [style = solid, label="decRefCount"];
38->55 [style = bold, label=""];
52->35 [style = bold, label=""];
45->41 [style = bold, label=""];
2->20 [style = bold, label=""];
29->8 [style = solid, label="decRefCount"];
12->28 [style = bold, label=""];
59->60 [style = bold, label=""];
36->44 [style = bold, label=""];
57->51 [style = bold, label=""];
31->51 [style = dashed, label="0"];
41->50 [style = solid, label="address"];
41->37 [style = solid, label="address"];
20->25 [style = bold, label=""];
15->5 [style = solid, label="address"];
0->23 [style = bold, label=""];
15->28 [style = solid, label="address"];
41->42 [style = solid, label="address"];
14->15 [style = bold, label=""];
41->49 [style = solid, label="address"];
34->38 [style = bold, label=""];
15->4 [style = solid, label="address"];
41->50 [style = bold, label=""];
15->29 [style = bold, label=""];
15->16 [style = solid, label="address"];
58->43 [style = bold, label=""];
16->27 [style = bold, label=""];
50->58 [style = bold, label=""];
35->42 [style = bold, label=""];
11->32 [style = bold, label=""];
28->56 [style = dashed, label="0"];
15->41 [style = dashed, label="0"];
53->37 [style = bold, label=""];
30->21 [style = bold, label=""];
40->39 [style = bold, label=""];
24->31 [style = bold, label=""];
13->26 [style = bold, label=""];
10->28 [style = solid, label="rc"];
14->45 [style = dashed, label="0"];
7->18 [style = bold, label=""];
41->46 [style = solid, label="address"];
29->10 [style = bold, label=""];
15->26 [style = solid, label="address"];
47->45 [style = bold, label=""];
31->17 [style = bold, label=""];
19->42 [style = dashed, label="0"];
32->5 [style = bold, label=""];
15->31 [style = solid, label="address"];
39->48 [style = bold, label=""];
48->57 [style = bold, label=""];
41->38 [style = solid, label="address"];
44->40 [style = bold, label=""];
60->15 [style = bold, label=""];
33->1 [style = bold, label=""];
10->7 [style = solid, label="rc"];
51->49 [style = bold, label=""];
42->36 [style = bold, label=""];
3->22 [style = bold, label=""];
28->16 [style = bold, label=""];
9->7 [style = solid, label="decRefCount"];
10->8 [style = solid, label="rc"];
15->8 [style = solid, label="address"];
49->53 [style = bold, label=""];
6->14 [style = bold, label=""];
41->58 [style = solid, label="address"];
14->60 [style = dashed, label="0"];
5->2 [style = bold, label=""];
55->46 [style = bold, label=""];
4->30 [style = bold, label=""];
29->50 [style = dashed, label="0"];
37->34 [style = bold, label=""];
15->22 [style = solid, label="address"];
18->13 [style = bold, label=""];
29->28 [style = solid, label="decRefCount"];
25->8 [style = bold, label=""];
10->22 [style = solid, label="rc"];
41->39 [style = solid, label="address"];
23->9 [style = bold, label=""];
26->33 [style = bold, label=""];
43->56 [style = bold, label=""];
17->11 [style = bold, label=""];
}
