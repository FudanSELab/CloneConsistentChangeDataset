digraph {
6 [style = filled, label = "freeingPageSetsPageNumberToSpecialConstant['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "freeingPageSetsPageNumberToSpecialConstant['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final TaskMemoryManager manager = new TaskMemoryManager(new TestMemoryManager(new SparkConf().set(\"spark.memory.offHeap.enabled\",\"false\")),0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MemoryAllocator.HEAP.free(dataPage)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "c.freePage(dataPage)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final MemoryBlock dataPage = manager.allocatePage(256,c)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "freeingPageDirectlyInAllocatorTriggersAssertionError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(MemoryBlock.FREED_IN_ALLOCATOR_PAGE_NUMBER,dataPage.getPageNumber())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final MemoryConsumer c = new TestMemoryConsumer(manager,MemoryMode.ON_HEAP)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(MemoryBlock.FREED_IN_ALLOCATOR_PAGE_NUMBER,dataPage.pageNumber)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
4->5 [style = solid, label="dataPage"];
1->3 [style = solid, label="manager"];
5->7 [style = bold, label=""];
6->1 [style = bold, label=""];
4->8 [style = bold, label=""];
3->4 [style = solid, label="c"];
5->2 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->8 [style = solid, label="dataPage"];
9->1 [style = bold, label=""];
2->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
}
