digraph {
30 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testContinuousWatermarkTrigger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHarness.open()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "expectedOutput.add(new Watermark(3999))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2999))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 1999))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 999))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingTimeWindows.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,TimeWindow,Tuple2<String,Integer>>(new SumReducer()),EventTimeTrigger.create())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "expectedOutput.add(new Watermark(7000))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",5),Long.MAX_VALUE))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "ReducingStateDescriptor<Tuple2<String,Integer>> stateDesc = new ReducingStateDescriptor<>(\"window-contents\",new SumReducer(),inputType.createSerializer(new ExecutionConfig()))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "testHarness.configureForKeyedStream(new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 2999))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5999))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7000))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "expectedOutput.add(new Watermark(4999))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3999))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "expectedOutput.add(new Watermark(1999))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness = new OneInputStreamOperatorTestHarness<>(operator)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 999))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "expectedOutput.add(new Watermark(999))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",2),initialTime + 5999))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "operator.setInputType(TypeInfoParser.parse(\"Tuple2<String, Integer>\"),new ExecutionConfig())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "expectedOutput.add(new Watermark(7999))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4999))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "testTumblingEventTimeWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "expectedOutput.add(new Watermark(5999))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6000))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final int WINDOW_SIZE = 3@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1000))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple2<String,Integer>,GlobalWindow> operator = new WindowOperator<>(GlobalWindows.create(),new GlobalWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new ReduceWindowFunction<String,GlobalWindow,Tuple2<String,Integer>>(),ContinuousEventTimeTrigger.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness.open()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expectedOutput.add(new Watermark(1000))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.close()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testContinuousWatermarkTrigger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expectedOutput.add(new Watermark(2000))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1000))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "closeCalled.set(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4000))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7999))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1998))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 8000))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6999))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5000))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3000))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "long initialTime = 0L@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "windowBufferFactory instanceof PreAggregatingHeapWindowBuffer.Factory@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,GlobalWindow> operator = new WindowOperator<>(GlobalWindows.create(),new GlobalWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,GlobalWindow,Tuple2<String,Integer>>(new SumReducer()),ContinuousEventTimeTrigger.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",1,closeCalled.get())@@@50@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25->1 [style = solid, label="initialTime"];
36->57 [style = solid, label="expectedOutput"];
7->28 [style = bold, label=""];
69->58 [style = bold, label=""];
20->27 [style = bold, label=""];
25->24 [style = solid, label="initialTime"];
11->4 [style = bold, label=""];
7->10 [style = solid, label="initialTime"];
31->67 [style = solid, label="WINDOW_SIZE"];
28->20 [style = solid, label="expectedOutput"];
73->0 [style = bold, label=""];
36->19 [style = solid, label="expectedOutput"];
25->11 [style = solid, label="initialTime"];
25->63 [style = solid, label="initialTime"];
52->57 [style = bold, label=""];
28->23 [style = solid, label="expectedOutput"];
25->18 [style = solid, label="initialTime"];
10->11 [style = bold, label=""];
4->61 [style = bold, label=""];
14->19 [style = bold, label=""];
22->20 [style = bold, label=""];
7->4 [style = solid, label="initialTime"];
21->74 [style = dashed, label="0"];
28->13 [style = solid, label="expectedOutput"];
36->29 [style = solid, label="expectedOutput"];
25->45 [style = solid, label="initialTime"];
36->50 [style = bold, label=""];
62->21 [style = bold, label=""];
47->49 [style = solid, label="stateDesc"];
31->67 [style = bold, label=""];
25->65 [style = solid, label="initialTime"];
59->69 [style = bold, label=""];
36->42 [style = solid, label="expectedOutput"];
7->43 [style = solid, label="initialTime"];
7->14 [style = solid, label="initialTime"];
58->73 [style = bold, label=""];
24->72 [style = dashed, label="0"];
13->69 [style = dashed, label="0"];
63->62 [style = bold, label=""];
38->42 [style = bold, label=""];
28->18 [style = bold, label=""];
36->7 [style = bold, label=""];
66->53 [style = bold, label=""];
25->2 [style = solid, label="initialTime"];
34->55 [style = dashed, label="0"];
44->64 [style = dashed, label="0"];
13->9 [style = bold, label=""];
25->10 [style = solid, label="initialTime"];
38->60 [style = dashed, label="0"];
27->21 [style = bold, label=""];
12->67 [style = dashed, label="0"];
25->71 [style = solid, label="initialTime"];
71->1 [style = bold, label=""];
1->10 [style = bold, label=""];
25->43 [style = solid, label="initialTime"];
36->8 [style = solid, label="expectedOutput"];
70->64 [style = bold, label=""];
25->61 [style = solid, label="initialTime"];
0->38 [style = bold, label=""];
28->34 [style = solid, label="expectedOutput"];
7->41 [style = solid, label="initialTime"];
15->2 [style = bold, label=""];
36->53 [style = solid, label="expectedOutput"];
25->0 [style = solid, label="initialTime"];
31->51 [style = bold, label=""];
7->42 [style = solid, label="initialTime"];
25->59 [style = solid, label="initialTime"];
25->56 [style = solid, label="initialTime"];
37->5 [style = bold, label=""];
41->59 [style = bold, label=""];
31->12 [style = solid, label="WINDOW_SIZE"];
25->28 [style = solid, label="initialTime"];
21->34 [style = bold, label=""];
43->61 [style = dashed, label="0"];
67->40 [style = bold, label=""];
55->52 [style = bold, label=""];
9->58 [style = dashed, label="0"];
28->39 [style = solid, label="expectedOutput"];
5->16 [style = bold, label=""];
28->5 [style = solid, label="expectedOutput"];
5->35 [style = dotted, label="false"];
33->59 [style = dashed, label="0"];
39->44 [style = bold, label=""];
36->27 [style = solid, label="expectedOutput"];
42->22 [style = bold, label=""];
68->41 [style = bold, label=""];
46->52 [style = dashed, label="0"];
25->55 [style = solid, label="initialTime"];
5->16 [style = dotted, label="true"];
23->68 [style = dashed, label="0"];
41->33 [style = bold, label=""];
43->32 [style = bold, label=""];
2->39 [style = bold, label=""];
25->36 [style = bold, label=""];
19->37 [style = bold, label=""];
47->49 [style = bold, label=""];
6->26 [style = bold, label=""];
7->45 [style = solid, label="initialTime"];
74->55 [style = bold, label=""];
39->70 [style = dashed, label="0"];
45->30 [style = bold, label=""];
8->72 [style = bold, label=""];
7->8 [style = solid, label="initialTime"];
49->36 [style = solid, label="operator"];
12->17 [style = solid, label="operator"];
31->12 [style = bold, label=""];
0->65 [style = bold, label=""];
5->35 [style = bold, label=""];
2->70 [style = bold, label=""];
75->26 [style = bold, label=""];
25->22 [style = solid, label="initialTime"];
25->33 [style = solid, label="initialTime"];
25->21 [style = solid, label="initialTime"];
32->8 [style = bold, label=""];
36->0 [style = solid, label="expectedOutput"];
25->69 [style = solid, label="initialTime"];
7->45 [style = bold, label=""];
9->29 [style = bold, label=""];
40->17 [style = bold, label=""];
30->1 [style = bold, label=""];
23->41 [style = bold, label=""];
60->22 [style = bold, label=""];
8->24 [style = bold, label=""];
46->3 [style = bold, label=""];
45->56 [style = bold, label=""];
56->30 [style = bold, label=""];
72->68 [style = bold, label=""];
7->27 [style = solid, label="initialTime"];
36->21 [style = solid, label="expectedOutput"];
25->58 [style = solid, label="initialTime"];
22->63 [style = bold, label=""];
21->74 [style = bold, label=""];
49->25 [style = bold, label=""];
51->47 [style = bold, label=""];
7->9 [style = solid, label="initialTime"];
7->1 [style = solid, label="initialTime"];
54->8 [style = bold, label=""];
64->66 [style = bold, label=""];
25->4 [style = solid, label="initialTime"];
32->54 [style = dashed, label="0"];
18->45 [style = bold, label=""];
53->37 [style = bold, label=""];
24->23 [style = bold, label=""];
30->71 [style = bold, label=""];
20->62 [style = dashed, label="0"];
25->30 [style = solid, label="initialTime"];
26->31 [style = bold, label=""];
25->39 [style = solid, label="initialTime"];
36->41 [style = solid, label="expectedOutput"];
7->30 [style = solid, label="initialTime"];
0->65 [style = dashed, label="0"];
29->0 [style = bold, label=""];
33->13 [style = bold, label=""];
14->66 [style = dashed, label="0"];
25->70 [style = solid, label="initialTime"];
67->17 [style = solid, label="operator"];
36->15 [style = solid, label="expectedOutput"];
48->26 [style = bold, label=""];
7->32 [style = solid, label="initialTime"];
36->22 [style = solid, label="expectedOutput"];
22->63 [style = dashed, label="0"];
34->46 [style = bold, label=""];
28->38 [style = solid, label="expectedOutput"];
7->46 [style = solid, label="initialTime"];
61->54 [style = bold, label=""];
3->15 [style = bold, label=""];
57->2 [style = bold, label=""];
7->11 [style = solid, label="initialTime"];
4->43 [style = bold, label=""];
65->60 [style = bold, label=""];
25->72 [style = solid, label="initialTime"];
7->44 [style = solid, label="initialTime"];
44->14 [style = bold, label=""];
31->49 [style = solid, label="WINDOW_SIZE"];
25->74 [style = solid, label="initialTime"];
17->25 [style = bold, label=""];
12->40 [style = bold, label=""];
50->7 [style = bold, label=""];
}
