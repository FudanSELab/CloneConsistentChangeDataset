digraph {
22 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "createDefinitions.getValue()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "visitAlterTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "PostgreSQLAlterTableStatement result = new PostgreSQLAlterTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "return result@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result.setNotExisted(null != ctx.tableNotExistClause())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final AlterTableContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "result.setRenameTable(((RenameTableDefinitionSegment)each).getRenameTable())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "visitCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "visitCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return result@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PostgreSQLCreateTableStatement result = new PostgreSQLCreateTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "result.getAddConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final CreateTableContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableNameClause().tableName()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "each instanceof RenameTableDefinitionSegment@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "null != ctx.createDefinitionClause()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "result.setContainsNotExistClause(null != ctx.notExistClause())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->13 [style = bold, label=""];
33->28 [style = dotted, label="false"];
1->4 [style = bold, label=""];
19->34 [style = bold, label=""];
17->26 [style = bold, label=""];
22->29 [style = dotted, label="true"];
22->32 [style = dotted, label="false"];
24->19 [style = bold, label=""];
7->31 [style = dashed, label="0"];
11->20 [style = dashed, label="0"];
12->23 [style = dashed, label="0"];
23->27 [style = bold, label=""];
28->30 [style = bold, label=""];
10->14 [style = bold, label=""];
10->34 [style = dashed, label="0"];
20->26 [style = bold, label=""];
2->1 [style = bold, label=""];
17->27 [style = dotted, label="true"];
16->6 [style = bold, label=""];
33->28 [style = bold, label=""];
3->18 [style = dashed, label="0"];
4->13 [style = bold, label=""];
30->27 [style = bold, label=""];
30->26 [style = bold, label=""];
19->26 [style = solid, label="result"];
23->26 [style = bold, label=""];
22->29 [style = bold, label=""];
0->14 [style = dashed, label="0"];
22->32 [style = bold, label=""];
28->26 [style = bold, label=""];
27->22 [style = dotted, label="false"];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
27->22 [style = bold, label=""];
7->15 [style = dotted, label="true"];
16->3 [style = dotted, label="true"];
0->17 [style = dashed, label="0"];
32->33 [style = bold, label=""];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
20->27 [style = bold, label=""];
29->26 [style = bold, label=""];
33->23 [style = bold, label=""];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
29->27 [style = bold, label=""];
25->27 [style = bold, label=""];
7->5 [style = dotted, label="true"];
17->31 [style = dotted, label="true"];
32->25 [style = dotted, label="true"];
33->23 [style = dotted, label="true"];
28->30 [style = dotted, label="true"];
7->11 [style = dotted, label="true"];
1->4 [style = dotted, label="false"];
27->20 [style = dotted, label="true"];
6->10 [style = bold, label=""];
34->17 [style = bold, label=""];
10->0 [style = bold, label=""];
25->26 [style = bold, label=""];
32->25 [style = bold, label=""];
6->19 [style = dashed, label="0"];
6->13 [style = solid, label="result"];
4->12 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
28->27 [style = bold, label=""];
17->27 [style = bold, label=""];
1->2 [style = dotted, label="true"];
7->1 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
4->12 [style = dotted, label="true"];
17->21 [style = dotted, label="true"];
27->20 [style = bold, label=""];
9->3 [style = dotted, label="true"];
24->18 [style = dotted, label="true"];
32->33 [style = dotted, label="false"];
}
