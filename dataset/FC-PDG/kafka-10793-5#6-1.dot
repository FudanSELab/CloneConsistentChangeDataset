digraph {
11 [style = filled, label = "segment.openDB(mockContext)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(new File(directoryPath + File.separator + \"window\",\"segment\").exists())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(new File(directoryPath,\"window\").exists())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expect(mockContext.appConfigs()).andReturn(mkMap(mkEntry(METRICS_RECORDING_LEVEL_CONFIG,\"INFO\")))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(new File(directoryPath + File.separator + \"window\",\"segment\").list().length > 0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final File directory = new File(directoryPath)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final TimestampedSegment segment = new TimestampedSegment(\"segment\",\"window\",0L,metricsRecorder)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldDeleteStateDirectoryOnDestroy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expect(mockContext.stateDir()).andReturn(directory)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "replay(mockContext)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(new File(directoryPath + File.separator + \"window\",\"segment\").exists())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final KeyValueSegment segment = new KeyValueSegment(\"segment\",\"window\",0L,metricsRecorder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "segment.openDB(mockContext.appConfigs(),mockContext.stateDir())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(new File(directoryPath,\"window\").exists())@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String directoryPath = TestUtils.tempDirectory().getAbsolutePath()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "segment.destroy()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ProcessorContext mockContext = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldDeleteStateDirectoryOnDestroy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "shouldDeleteStateDirectoryOnDestroy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15->7 [style = bold, label=""];
4->6 [style = bold, label=""];
11->15 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
0->12 [style = bold, label=""];
8->14 [style = bold, label=""];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
10->1 [style = solid, label="directoryPath"];
2->4 [style = bold, label=""];
7->3 [style = bold, label=""];
1->8 [style = solid, label="directory"];
6->5 [style = bold, label=""];
3->2 [style = bold, label=""];
18->10 [style = bold, label=""];
12->8 [style = bold, label=""];
11->7 [style = bold, label=""];
14->15 [style = bold, label=""];
13->9 [style = bold, label=""];
10->1 [style = bold, label=""];
14->11 [style = bold, label=""];
16->9 [style = bold, label=""];
17->18 [style = bold, label=""];
0->14 [style = solid, label="mockContext"];
0->11 [style = solid, label="mockContext"];
}
