digraph {
15 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",,\"Couldn't parse identifier\",null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "AssertHelpers.assertThrows(\"Should not allow mixed args\",,\"Named and positional arguments cannot be mixed\",null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject calls without all required args\",,\"Missing required parameters\",null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject calls with empty table identifier\",,\"Cannot handle an empty identifier\",null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",,\"not found\",null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject empty table name\",,\"Table name cannot be empty\",null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",,\"Wrong arg type for snapshot_id: cannot cast\",null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject duplicate arg names name\",,\"Duplicate procedure argument: table\",null)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "AssertHelpers.assertThrows(\"Should not resolve procedures in arbitrary namespaces\",,\"not found\",null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject calls without all required args\",,\"Missing required parameters\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject empty namespace\",,\"Namespace cannot be empty\",null)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testInvalidCherrypickSnapshotCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testInvalidCherrypickSnapshotCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject empty namespace\",,\"Namespace cannot be empty\",null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject empty table name\",,\"Table name cannot be empty\",null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject calls without all required args\",,\"Missing required parameters\",null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "AssertHelpers.assertThrows(\"Should not allow mixed args\",,\"Named and positional arguments cannot be mixed\",null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testInvalidRewriteManifestsCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "AssertHelpers.assertThrows(\"Should reject calls with invalid arg types\",,\"Wrong arg type for snapshot_id: cannot cast\",null)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
15->14 [style = bold, label=""];
2->6 [style = bold, label=""];
18->11 [style = bold, label=""];
0->15 [style = dashed, label="0"];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
5->18 [style = dashed, label="0"];
4->12 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
6->16 [style = dashed, label="0"];
7->6 [style = bold, label=""];
8->9 [style = bold, label=""];
4->8 [style = bold, label=""];
1->8 [style = dashed, label="0"];
14->18 [style = bold, label=""];
4->1 [style = bold, label=""];
3->10 [style = dashed, label="0"];
13->15 [style = bold, label=""];
0->9 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
16->12 [style = bold, label=""];
17->16 [style = bold, label=""];
}
