digraph {
6 [style = filled, label = "sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SearchGroup group@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sb.append(StringUtil.quote(group.getName(),MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR,MetadataSerializationConfiguration.GROUP_QUOTE_CHAR))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Boolean isRegex = group instanceof RegexKeywordGroup@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "serializeKeywordGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sb.append(StringUtil.quote(group.getName(),MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR,MetadataSerializationConfiguration.GROUP_QUOTE_CHAR))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sb.append(StringUtil.booleanToBinaryString(isRegex))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "KeywordGroup group@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "sb.append(StringUtil.quote(group.getSearchField().getName(),MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR,MetadataSerializationConfiguration.GROUP_QUOTE_CHAR))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "serializeSearchGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "serializeSearchGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "sb.append(MetadataSerializationConfiguration.KEYWORD_GROUP_ID)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sb.append(group.getHierarchicalContext().ordinal())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sb.append(StringUtil.booleanToBinaryString(group.getSearchFlags().contains(SearchRules.SearchFlags.CASE_SENSITIVE)))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sb.append(StringUtil.booleanToBinaryString(group.getSearchFlags().contains(SearchRules.SearchFlags.REGULAR_EXPRESSION)))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "sb.append(StringUtil.quote(group.getSearchExpression(),MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR,MetadataSerializationConfiguration.GROUP_QUOTE_CHAR))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return sb.toString()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sb.append(StringUtil.booleanToBinaryString(group.isCaseSensitive()))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "appendGroupDetails(sb,group)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
9->22 [style = bold, label=""];
9->18 [style = dashed, label="0"];
13->7 [style = bold, label=""];
5->13 [style = solid, label="group"];
23->22 [style = solid, label="isRegex"];
8->7 [style = solid, label="sb"];
19->23 [style = solid, label="group"];
7->24 [style = bold, label=""];
8->4 [style = bold, label=""];
10->9 [style = bold, label=""];
19->7 [style = solid, label="group"];
16->15 [style = bold, label=""];
14->17 [style = dashed, label="0"];
11->15 [style = bold, label=""];
5->19 [style = dashed, label="0"];
1->25 [style = bold, label=""];
2->17 [style = bold, label=""];
3->1 [style = bold, label=""];
12->13 [style = bold, label=""];
10->18 [style = bold, label=""];
21->2 [style = bold, label=""];
8->20 [style = dashed, label="0"];
25->21 [style = bold, label=""];
23->8 [style = bold, label=""];
6->3 [style = bold, label=""];
26->23 [style = bold, label=""];
2->14 [style = bold, label=""];
26->19 [style = dotted, label="true"];
18->12 [style = bold, label=""];
15->13 [style = solid, label="sb"];
20->0 [style = bold, label=""];
14->10 [style = bold, label=""];
16->5 [style = dotted, label="true"];
15->8 [style = bold, label=""];
1->2 [style = bold, label=""];
8->20 [style = bold, label=""];
17->10 [style = bold, label=""];
22->13 [style = bold, label=""];
4->0 [style = bold, label=""];
9->22 [style = dashed, label="0"];
9->12 [style = bold, label=""];
11->5 [style = dotted, label="true"];
}
