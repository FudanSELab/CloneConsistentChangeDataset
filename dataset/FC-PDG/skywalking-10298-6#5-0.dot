digraph {
29 [style = filled, label = "gRPCCleanup.register(InProcessServerBuilder.forName(serverName).directExecutor().addService(new RemoteServiceHandler(moduleManager)).build().start())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RemoteData.Builder remoteData = RemoteData.newBuilder()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "StreamDataClassGetter classGetter = mock()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ModuleManagerTesting moduleManager = new ModuleManagerTesting()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int testWorkerId = 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MetricCreator metricCreator = mock()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "streamObserver.onNext(remoteMessage.build())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "WorkerInstances.INSTANCES.put(testWorkerId,new TestWorker())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "moduleManager = new ModuleManagerTesting()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(classGetter.findClassById(streamDataClassId)).thenReturn((Class<StreamData>)dataClass)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "remoteMessage.setNextWorkerId(testWorkerId)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "remoteData.addDataLongs(10)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "remoteData.addDataLongs(20)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "remoteMessage.setRemoteData(remoteData)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "moduleManager.put(TelemetryModule.NAME,telemetryModuleDefine)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(metricCreator.createCounter(any(),any(),any(),any())).thenReturn(new CounterMetric(){@Override public void inc(){}@Override public void inc(double value){}})@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String serverName = InProcessServerBuilder.generateName()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "StreamObserver<RemoteMessage> streamObserver = remoteServiceStub.call(new StreamObserver<Empty>(){@Override public void onNext(Empty empty){}@Override public void onError(Throwable throwable){}@Override public void onCompleted(){}})@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ModuleDefineTesting telemetryModuleDefine = new ModuleDefineTesting()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "remoteData.addDataStrings(\"test2\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "callTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,classGetter)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "callTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Class<?> dataClass = @@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "classGetter = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int streamDataClassId = 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "before['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "remoteMessage.setStreamDataId(streamDataClassId)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "telemetryModuleDefine.provider().registerServiceImplementation(,metricCreator)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TestWorker worker = new TestWorker(nextWorkerId)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "streamObserver.onCompleted()@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RemoteMessage.Builder remoteMessage = RemoteMessage.newBuilder()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "remoteData.addDataStrings(\"test1\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "WorkerInstances.INSTANCES.put(nextWorkerId,worker)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "RemoteServiceGrpc.RemoteServiceStub remoteServiceStub = RemoteServiceGrpc.newStub(gRPCCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,classGetter)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(metricCreator.createHistogramMetric(any(),any(),any(),any(),any())).thenReturn(new HistogramMetric(){@Override public void observe(double value){}})@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
1->4 [style = bold, label=""];
23->20 [style = bold, label=""];
0->2 [style = solid, label="dataClass"];
29->17 [style = bold, label=""];
10->28 [style = bold, label=""];
26->30 [style = solid, label="streamDataClassId"];
4->18 [style = solid, label="moduleDefine"];
36->34 [style = bold, label=""];
7->30 [style = bold, label=""];
13->35 [style = dashed, label="0"];
6->23 [style = bold, label=""];
19->31 [style = solid, label="metricCreator"];
0->2 [style = bold, label=""];
35->38 [style = solid, label="worker"];
31->29 [style = bold, label=""];
26->8 [style = bold, label=""];
4->18 [style = bold, label=""];
8->13 [style = solid, label="testWorkerId"];
11->19 [style = bold, label=""];
25->7 [style = bold, label=""];
12->6 [style = bold, label=""];
13->11 [style = bold, label=""];
32->26 [style = bold, label=""];
15->26 [style = bold, label=""];
19->24 [style = bold, label=""];
20->10 [style = bold, label=""];
8->1 [style = bold, label=""];
24->16 [style = bold, label=""];
3->5 [style = bold, label=""];
18->22 [style = bold, label=""];
21->31 [style = bold, label=""];
22->0 [style = bold, label=""];
9->21 [style = solid, label="telemetryModuleDefine"];
36->34 [style = solid, label="moduleDefine"];
30->3 [style = bold, label=""];
5->12 [style = bold, label=""];
33->36 [style = bold, label=""];
2->14 [style = bold, label=""];
9->21 [style = bold, label=""];
18->35 [style = bold, label=""];
34->4 [style = bold, label=""];
5->10 [style = solid, label="remoteData"];
4->18 [style = solid, label="classGetter"];
35->38 [style = bold, label=""];
28->27 [style = bold, label=""];
14->13 [style = bold, label=""];
8->3 [style = solid, label="testWorkerId"];
37->33 [style = bold, label=""];
22->4 [style = dashed, label="0"];
14->11 [style = bold, label=""];
16->9 [style = bold, label=""];
22->14 [style = solid, label="classGetter"];
}
