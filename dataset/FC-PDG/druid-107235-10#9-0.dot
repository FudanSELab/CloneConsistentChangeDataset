digraph {
15 [style = filled, label = "lruEvalCache = new LruEvalCache(expression,bindings)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "this.lruEvalCache = useLruCache? new LruEvalCache(): null@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SingleLongInputCachingExpressionColumnValueSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "throw new ISE(\"Selector must have a dictionary\")@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final boolean useLruCache@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Expr expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.selector = Preconditions.checkNotNull(selector,\"selector\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "selector.getValueCardinality() == DimensionDictionarySelector.CARDINALITY_UNKNOWN@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "expression.analyzeInputs().getRequiredColumns().size() != 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Expr expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "arrayEvalCache = null@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "selector.getValueCardinality() <= CACHE_SIZE@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Expr expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "arrayEvalCache = new ExprEval((((@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Supplier<Object> inputSupplier = ExpressionSelectors.supplierFromDimensionSelector(selector,false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.expression = Preconditions.checkNotNull(expression,\"expression\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final DimensionSelector selector@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "this.bindings = null@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SingleStringInputCachingExpressionColumnValueSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "selector.getValueCardinality() == DimensionSelector.CARDINALITY_UNKNOWN@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "throw new ISE(\"WTF?! Expected expression with just one binding\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "lruEvalCache = null@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final ColumnValueSelector selector@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SingleStringInputCachingExpressionColumnValueSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19->9 [style = solid, label="expression"];
4->3 [style = bold, label=""];
0->5 [style = dotted, label="true"];
0->13 [style = dotted, label="true"];
10->15 [style = bold, label=""];
0->13 [style = bold, label=""];
4->6 [style = bold, label=""];
18->1 [style = dotted, label="true"];
16->6 [style = solid, label="selector"];
12->2 [style = dotted, label="true"];
2->9 [style = solid, label="expression"];
3->6 [style = bold, label=""];
11->23 [style = dashed, label="0"];
18->0 [style = dotted, label="false"];
7->8 [style = bold, label=""];
20->4 [style = bold, label=""];
14->7 [style = bold, label=""];
12->11 [style = dotted, label="true"];
17->16 [style = dotted, label="true"];
8->0 [style = bold, label=""];
23->6 [style = solid, label="selector"];
8->1 [style = dotted, label="true"];
8->1 [style = bold, label=""];
0->10 [style = bold, label=""];
4->3 [style = dotted, label="true"];
7->15 [style = solid, label="bindings"];
0->15 [style = dotted, label="false"];
11->6 [style = solid, label="selector"];
12->4 [style = bold, label=""];
18->1 [style = bold, label=""];
9->15 [style = solid, label="expression"];
11->9 [style = solid, label="expression"];
20->23 [style = dotted, label="true"];
9->21 [style = bold, label=""];
9->14 [style = bold, label=""];
13->5 [style = bold, label=""];
7->18 [style = bold, label=""];
8->18 [style = dashed, label="0"];
20->19 [style = dotted, label="true"];
20->22 [style = dotted, label="true"];
6->9 [style = bold, label=""];
22->21 [style = solid, label="useLruCache"];
8->0 [style = dotted, label="false"];
6->14 [style = solid, label="selector"];
18->0 [style = bold, label=""];
17->4 [style = bold, label=""];
17->11 [style = dotted, label="true"];
0->10 [style = dotted, label="false"];
}
