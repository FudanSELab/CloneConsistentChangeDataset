digraph {
0 [style = filled, label = "iterator.seekToFirst()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RocksStateKeysAndNamespaceIterator<K,N> iteratorWrapper = new RocksStateKeysAndNamespaceIterator<>(iterator,state,getKeySerializer(),namespaceSerializer,keyGroupPrefixBytes,ambiguousKeyPossible)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RocksDBKeySerializationUtils.writeNameSpace(namespace,namespaceSerializer,namespaceOutputView,ambiguousKeyPossible)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String state@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final TypeSerializer<N> namespaceSerializer = registeredKeyValueStateBackendMetaInfo.getNamespaceSerializer()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Stream<K> targetStream = StreamSupport.stream(Spliterators.spliteratorUnknownSize(iteratorWrapper,Spliterator.ORDERED),false)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "nameSpaceBytes = namespaceOutputView.getCopyOfBuffer()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String state@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "N namespace@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return targetStream.onClose(null)@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return Stream.empty()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final byte(( nameSpaceBytes@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "IOException ex@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RocksDbKvStateInfo columnInfo = kvStateInformation.get(state)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RegisteredKeyValueStateBackendMetaInfo<N,?> registeredKeyValueStateBackendMetaInfo = (RegisteredKeyValueStateBackendMetaInfo<N,?>)columnInfo.metaInfo@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean ambiguousKeyPossible = CompositeKeySerializationUtils.isAmbiguousKeyPossible(getKeySerializer(),namespaceSerializer)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "getKeys['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "throw new FlinkRuntimeException(\"Failed to get keys from RocksDB state backend.\",ex)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RocksIteratorWrapper iterator = RocksDBOperationUtils.getRocksIterator(db,columnInfo.columnFamilyHandle,readOptions)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RocksStateKeysIterator<K> iteratorWrapper = new RocksStateKeysIterator<>(iterator,state,getKeySerializer(),keyGroupPrefixBytes,ambiguousKeyPossible,nameSpaceBytes)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "getKeysAndNamespaces['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "getKeysAndNamespaces['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Stream<Tuple2<K,N>> targetStream = StreamSupport.stream(Spliterators.spliteratorUnknownSize(iteratorWrapper,Spliterator.ORDERED),false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "boolean ambiguousKeyPossible = RocksDBKeySerializationUtils.isAmbiguousKeyPossible(getKeySerializer(),namespaceSerializer)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "columnInfo == null || !(columnInfo.metaInfo instanceof RegisteredKeyValueStateBackendMetaInfo)@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final DataOutputSerializer namespaceOutputView = new DataOutputSerializer(8)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->19 [style = solid, label="nameSpaceBytes"];
7->9 [style = solid, label="state"];
15->19 [style = solid, label="state"];
9->11 [style = bold, label=""];
18->23 [style = solid, label="namespaceOutputView"];
14->3 [style = bold, label=""];
18->2 [style = bold, label=""];
20->10 [style = bold, label=""];
11->20 [style = dashed, label="0"];
23->24 [style = bold, label=""];
6->7 [style = dotted, label="true"];
5->4 [style = solid, label="columnInfo"];
4->12 [style = dotted, label="true"];
2->9 [style = solid, label="ambiguousKeyPossible"];
19->20 [style = bold, label=""];
14->9 [style = solid, label="ambiguousKeyPossible"];
21->17 [style = bold, label=""];
0->9 [style = bold, label=""];
0->19 [style = bold, label=""];
1->18 [style = bold, label=""];
21->17 [style = dotted, label="true"];
4->8 [style = bold, label=""];
25->15 [style = dotted, label="true"];
17->3 [style = bold, label=""];
25->22 [style = dotted, label="true"];
1->14 [style = bold, label=""];
1->23 [style = solid, label="namespaceSerializer"];
5->4 [style = bold, label=""];
9->11 [style = solid, label="iteratorWrapper"];
1->2 [style = solid, label="namespaceSerializer"];
2->3 [style = bold, label=""];
8->1 [style = bold, label=""];
19->20 [style = solid, label="iteratorWrapper"];
9->19 [style = dashed, label="0"];
11->10 [style = bold, label=""];
25->5 [style = bold, label=""];
16->23 [style = bold, label=""];
15->5 [style = solid, label="state"];
2->14 [style = dashed, label="0"];
7->22 [style = dashed, label="0"];
3->0 [style = bold, label=""];
24->3 [style = bold, label=""];
3->9 [style = solid, label="iterator"];
4->12 [style = bold, label=""];
3->19 [style = solid, label="iterator"];
6->5 [style = bold, label=""];
2->19 [style = solid, label="ambiguousKeyPossible"];
22->23 [style = solid, label="namespace"];
7->5 [style = solid, label="state"];
2->16 [style = bold, label=""];
1->14 [style = solid, label="namespaceSerializer"];
12->8 [style = bold, label=""];
1->9 [style = solid, label="namespaceSerializer"];
1->2 [style = bold, label=""];
13->7 [style = dotted, label="true"];
13->5 [style = bold, label=""];
2->23 [style = solid, label="ambiguousKeyPossible"];
}
