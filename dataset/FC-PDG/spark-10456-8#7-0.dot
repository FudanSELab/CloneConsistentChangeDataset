digraph {
8 [style = filled, label = "assertEquals(2,model.gaussians().length)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "runKMeansUsingConstructor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "model = new KMeans().setK(1).setMaxIterations(1).setInitializationMode(KMeans.RANDOM()).run(data.rdd())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "runGaussianMixture['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Vector expectedCenter = Vectors.dense(1.0,3.0,4.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "KMeansModel model = new KMeans().setK(1).setMaxIterations(5).run(data.rdd())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "GaussianMixtureModel model = new GaussianMixture().setK(2).setMaxIterations(1).setSeed(1234).run(data)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JavaRDD<Vector> data = jsc.parallelize(points,2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "predictions.first()@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(expectedCenter,model.clusterCenters()(0()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(model.gaussians().length,2)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(expectedCenter,model.clusterCenters()(0()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Vector> points = Arrays.asList(Vectors.dense(1.0,2.0,6.0),Vectors.dense(1.0,3.0,0.0),Vectors.dense(1.0,4.0,6.0))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "JavaRDD<Integer> predictions = model.predict(data)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(1,model.clusterCenters().length)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "runGaussianMixture['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
6->8 [style = dashed, label="0"];
5->12 [style = dashed, label="0"];
11->15 [style = solid, label="expectedCenter"];
3->1 [style = bold, label=""];
10->14 [style = bold, label=""];
4->6 [style = bold, label=""];
11->13 [style = solid, label="expectedCenter"];
11->1 [style = bold, label=""];
2->3 [style = bold, label=""];
3->11 [style = bold, label=""];
6->0 [style = bold, label=""];
6->14 [style = dashed, label="0"];
7->3 [style = bold, label=""];
3->1 [style = solid, label="points"];
8->0 [style = bold, label=""];
12->13 [style = bold, label=""];
1->0 [style = solid, label="data"];
1->4 [style = solid, label="data"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
1->10 [style = bold, label=""];
0->5 [style = bold, label=""];
}
