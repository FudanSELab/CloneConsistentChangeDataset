digraph {
16 [style = filled, label = "checkMazeTableFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "schema.add(\"Maze\",table)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Boolean solution@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String maze@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1))\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(MAZE_METHOD)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String sql@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String result = \"S=abcde\" + \"S=xyz\" + \"S=generate(w=5, h=3, s=1)\"@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "solution@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(Smalls.MAZE_METHOD)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testScannableTableFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1)) as t(s)\"@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ResultSet resultSet = connection.createStatement().executeQuery(sql)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SchemaPlus schema = rootSchema.add(\"s\",new AbstractSchema())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ResultSet resultSet = connection.createStatement().executeQuery(sql)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Solve\"(5, 3, 1)) as t(s)\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "resultSet.next()@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Connection connection = DriverManager.getConnection(\"jdbc:calcite:\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "schema.add(\"Solve\",table2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final StringBuilder b = new StringBuilder()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testScannableTableFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final TableFunction table2 = TableFunctionImpl.create(SOLVE_METHOD)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "b.append(resultSet.getString(1)).append(\"\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(b.toString(),is(maze))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19->17 [style = solid, label="maze"];
16->22 [style = dotted, label="true"];
12->25 [style = bold, label=""];
25->12 [style = dotted, label="true"];
1->10 [style = bold, label=""];
21->15 [style = bold, label=""];
1->10 [style = solid, label="sql"];
18->23 [style = dotted, label="false"];
15->18 [style = bold, label=""];
10->2 [style = solid, label="resultSet"];
5->1 [style = bold, label=""];
0->9 [style = bold, label=""];
7->6 [style = bold, label=""];
4->2 [style = solid, label="result"];
14->24 [style = bold, label=""];
11->6 [style = bold, label=""];
25->17 [style = bold, label=""];
0->13 [style = bold, label=""];
9->5 [style = solid, label="table"];
6->8 [style = bold, label=""];
18->26 [style = bold, label=""];
26->14 [style = bold, label=""];
25->12 [style = bold, label=""];
22->18 [style = solid, label="solution"];
8->3 [style = bold, label=""];
4->2 [style = bold, label=""];
23->14 [style = solid, label="sql"];
9->13 [style = dashed, label="0"];
20->21 [style = bold, label=""];
20->21 [style = solid, label="table2"];
10->4 [style = bold, label=""];
3->0 [style = bold, label=""];
5->20 [style = bold, label=""];
13->5 [style = solid, label="table"];
16->6 [style = bold, label=""];
23->14 [style = bold, label=""];
24->25 [style = bold, label=""];
26->14 [style = solid, label="sql"];
18->26 [style = dotted, label="true"];
9->5 [style = bold, label=""];
13->5 [style = bold, label=""];
18->23 [style = bold, label=""];
16->19 [style = dotted, label="true"];
}
