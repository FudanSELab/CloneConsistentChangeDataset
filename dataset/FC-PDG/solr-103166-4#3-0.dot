digraph {
34 [style = filled, label = "CLOUD_CLIENT.add(sdoc(\"id\",\"44\",\"title\",\"Why the LazY dog was lazy\",\"body\",\"News flash: Lazy Dog was not actually lazy, it just seemd so compared to Fox\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(0,CLOUD_CLIENT.commit().getStatus())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Path configDir = Paths.get(TEST_HOME(),\"collection1\",\"conf\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final int numNodes = (numShards * repFactor)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "waitForRecoveriesToFinish(CLOUD_CLIENT)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CLOUD_CLIENT.add(sdoc(\"id\",\"43\",\"title\",\"A fable in two acts\",\"body\",\"The brOwn fOx jumped. The lazy dog did not\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "collectionProperties.put(\"schema\",\"schema-phrases-identification.xml\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CLOUD_CLIENT.setDefaultCollection(COLLECTION_NAME)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0,CLOUD_CLIENT.add(sdoc(\"id\",\"44\",\"val_i\",\"4\",\"ssto\",\"X\",\"subject\",\"aaa\")).getStatus())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map<String,String> collectionProperties = new HashMap<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "CollectionAdminRequest.createCollection(COLLECTION_NAME,configName,numShards,repFactor).setProperties(collectionProperties).process(cluster.getSolrClient())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "collectionProperties.put(\"config\",\"solrconfig-tlog.xml\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "collectionProperties.put(\"config\",\"solrconfig-phrases-identification.xml\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CLIENTS.add(getHttpSolrClient(jetty.getBaseUrl() + \"/\" + COLLECTION_NAME + \"/\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "configureCluster(numNodes).addConfig(configName,configDir).configure()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "collectionProperties.put(\"schema\",\"schema-psuedo-fields.xml\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "final int numShards = 2@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final int numShards = TestUtil.nextInt(random(),1,(usually()? 2: 3))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "CLOUD_CLIENT.add(sdoc(\"id\",\"42\",\"title\",\"Tale of the Brown Fox: was he lazy?\",\"body\",\"No. The quick brown fox was a very brown fox who liked to get into trouble.\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "waitForRecoveriesToFinish(CLOUD_CLIENT)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "createMiniSolrCloudCluster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "CLOUD_CLIENT.commit()@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,CLOUD_CLIENT.add(sdoc(\"id\",\"45\",\"val_i\",\"6\",\"ssto\",\"X\",\"subject\",\"aaa\")).getStatus())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,CLOUD_CLIENT.add(sdoc(\"id\",\"43\",\"val_i\",\"9\",\"ssto\",\"X\",\"subject\",\"bbb\")).getStatus())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int repFactor = usually()? 1: 2@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "createMiniSolrCloudCluster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "collectionProperties.put(\"schema\",\"schema-pseudo-fields.xml\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "CLIENTS.add(getHttpSolrClient(jetty.getBaseUrl() + \"/\" + COLLECTION_NAME + \"/\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CLOUD_CLIENT = cluster.getSolrClient()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "CLOUD_CLIENT.add(sdoc(\"id\",\"45\",\"title\",\"Why Are We Lazy?\",\"body\",\"Because we are. that's why\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Map<String,String> collectionProperties = new LinkedHashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int numNodes = 1 + (numShards * repFactor)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "createMiniSolrCloudCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(0,CLOUD_CLIENT.add(sdoc(\"id\",\"42\",\"val_i\",\"1\",\"ssto\",\"X\",\"subject\",\"aaa\")).getStatus())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,CLOUD_CLIENT.add(sdoc(\"id\",\"46\",\"val_i\",\"3\",\"ssto\",\"X\",\"subject\",\"ggg\")).getStatus())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final String configName = DEBUG_LABEL + \"_config-set\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31->14 [style = bold, label=""];
8->16 [style = bold, label=""];
1->4 [style = bold, label=""];
20->15 [style = solid, label="numShards"];
29->27 [style = solid, label="numShards"];
14->27 [style = solid, label="repFactor"];
16->10 [style = bold, label=""];
11->1 [style = bold, label=""];
6->21 [style = bold, label=""];
20->27 [style = dashed, label="0"];
3->14 [style = bold, label=""];
26->34 [style = bold, label=""];
30->36 [style = bold, label=""];
19->2 [style = bold, label=""];
2->9 [style = bold, label=""];
16->11 [style = solid, label="CLOUD_CLIENT"];
32->26 [style = bold, label=""];
8->10 [style = solid, label="CLOUD_CLIENT"];
4->7 [style = bold, label=""];
15->22 [style = bold, label=""];
23->14 [style = bold, label=""];
5->19 [style = bold, label=""];
34->28 [style = bold, label=""];
29->27 [style = bold, label=""];
37->22 [style = bold, label=""];
27->37 [style = bold, label=""];
7->5 [style = bold, label=""];
22->18 [style = bold, label=""];
17->12 [style = bold, label=""];
17->24 [style = bold, label=""];
36->25 [style = bold, label=""];
28->35 [style = bold, label=""];
14->0 [style = bold, label=""];
18->6 [style = bold, label=""];
21->6 [style = dashed, label="0"];
12->36 [style = dashed, label="0"];
12->8 [style = bold, label=""];
12->24 [style = dashed, label="0"];
0->29 [style = dashed, label="0"];
14->29 [style = bold, label=""];
33->32 [style = bold, label=""];
0->20 [style = bold, label=""];
25->8 [style = bold, label=""];
10->33 [style = bold, label=""];
24->8 [style = bold, label=""];
20->15 [style = bold, label=""];
17->30 [style = dashed, label="0"];
21->17 [style = bold, label=""];
14->15 [style = solid, label="repFactor"];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
6->30 [style = bold, label=""];
}
