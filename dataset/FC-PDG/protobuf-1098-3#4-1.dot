digraph {
5 [style = filled, label = "TestRequiredForeign.parseFrom(data)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testNestedUninitializedException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testParseNestedUnititialized['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fail(\"Should have thrown an exception.\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertWithMessage(\"Should have thrown an exception.\").fail()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ByteString data = TestRequiredForeign.newBuilder().setOptionalMessage(TEST_REQUIRED_UNINITIALIZED).addRepeatedMessage(TEST_REQUIRED_UNINITIALIZED).addRepeatedMessage(TEST_REQUIRED_UNINITIALIZED).buildPartial().toByteString()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testNestedUninitializedException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fail(\"Should have thrown an exception.\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestRequiredForeign.newBuilder().setOptionalMessage(TEST_REQUIRED_UNINITIALIZED).addRepeatedMessage(TEST_REQUIRED_UNINITIALIZED).addRepeatedMessage(TEST_REQUIRED_UNINITIALIZED).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->5 [style = solid, label="data"];
5->7 [style = bold, label=""];
6->5 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
8->6 [style = bold, label=""];
0->4 [style = dashed, label="0"];
3->2 [style = bold, label=""];
2->4 [style = bold, label=""];
}
