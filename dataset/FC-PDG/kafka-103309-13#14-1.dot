digraph {
2 [style = filled, label = "testWriteTransactionalRecordSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testWriteTransactionalRecordSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "args.magic < MAGIC_VALUE_V2@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Supplier<MemoryRecordsBuilder> supplier = null@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "MemoryRecords records = builder.build()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Args args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(batches.get(0).isTransactional())@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Args args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long pid = 9809@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThrows(,null)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(1,batches.size())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.append(System.currentTimeMillis(),\"foo\".getBytes(),\"bar\".getBytes())@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.append(System.currentTimeMillis(),\"foo\".getBytes(),\"bar\".getBytes())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "short epoch = 15@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "long pid = RecordBatch.NO_PRODUCER_ID@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<MutableRecordBatch> batches = Utils.toList(records.batches().iterator())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(1,batches.size())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "testWriteTransactionalWithInvalidPID['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThrows(,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertTrue(batches.get(0).isTransactional())@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "int sequence = 2342@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<MutableRecordBatch> batches = Utils.toList(records.batches().iterator())@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MemoryRecordsBuilder builder = supplier.get()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "MemoryRecords records = builder.build()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,RecordBatch.CURRENT_MAGIC_VALUE,args.compressionType,TimestampType.CREATE_TIME,0L,0L,pid,epoch,sequence,true,false,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ByteBuffer buffer = allocateBuffer(128,args)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
17->0 [style = dotted, label="true"];
20->13 [style = bold, label=""];
2->0 [style = dotted, label="true"];
23->22 [style = dotted, label="true"];
20->21 [style = dotted, label="false"];
19->20 [style = bold, label=""];
24->7 [style = solid, label="pid"];
3->24 [style = dashed, label="0"];
20->16 [style = dotted, label="false"];
3->6 [style = bold, label=""];
20->15 [style = dotted, label="false"];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
11->24 [style = bold, label=""];
15->18 [style = bold, label=""];
0->22 [style = dashed, label="0"];
17->11 [style = bold, label=""];
11->7 [style = solid, label="buffer"];
3->7 [style = solid, label="pid"];
5->19 [style = bold, label=""];
6->5 [style = bold, label=""];
20->12 [style = dotted, label="false"];
11->3 [style = bold, label=""];
7->19 [style = dashed, label="0"];
12->14 [style = bold, label=""];
5->7 [style = solid, label="sequence"];
5->7 [style = bold, label=""];
20->13 [style = dotted, label="true"];
7->25 [style = bold, label=""];
20->18 [style = dotted, label="false"];
8->4 [style = bold, label=""];
23->11 [style = bold, label=""];
0->11 [style = solid, label="args"];
10->1 [style = bold, label=""];
24->6 [style = bold, label=""];
20->15 [style = bold, label=""];
22->11 [style = solid, label="args"];
16->12 [style = bold, label=""];
2->11 [style = bold, label=""];
14->21 [style = bold, label=""];
20->14 [style = dotted, label="false"];
6->7 [style = solid, label="epoch"];
18->16 [style = bold, label=""];
}
