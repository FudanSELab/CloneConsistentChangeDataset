digraph {
0 [style = filled, label = "getTester().checkNode(\"VALUES a\",isQuoted(0,false))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "expr(\"(anything (even brackets(( is(.(ok(\").ok(\"`anything (even brackets( is`.`ok`\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "getTester().checkNode(\"VALUES \"a\"\",isQuoted(0,true))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "expr(\"(x`y`z(\").ok(\"`x``y``z`\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "expr(\"^\"^x`y`z\"\").fails(\"(?s).*Encountered.*\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "getTester().checkNode(\"VALUES (a(\",isQuoted(0,true))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expr(\" (a \" b!c(\").ok(\"`a \" b!c`\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expr(\"ab\").ok(\"`AB`\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expr(\"^`^x`y`z`\").fails(\"(?s).*Encountered.*\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expr(\"myMap(field( + myArray(1 + 2(\").ok(\"(`MYMAP`(`FIELD`( + `MYARRAY`((1 + 2)()\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getTester().checkNode(\"VALUES \"a\".\"b\"\",isQuoted(1,true))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "sql(\"VALUES \"a\"\").node(isQuoted(0,true))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "testBracketIdentifier['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "sql(\"select * from myMap (field(, myArray (1 + 2(\").ok(\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testIdentifier['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "sql(\"select * from myMap(field(, myArray(1 + 2(\").ok(\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testIdentifier['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expr(\"^`^x``y``z`\").fails(\"(?s).*Encountered.*\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expr(\" ^`^a \" b!c`\").fails(\"(?s).*Encountered.*\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sql(\"VALUES \"a\".\"b\"\").node(isQuoted(1,true))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "sql(\"VALUES a\").node(isQuoted(0,false))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "expr(\"ab\").ok(\"`AB`\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "getTester().checkNode(\"VALUES a\",isQuoted(0,false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sql(\"VALUES \"a\".b\").node(isQuoted(1,false))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "quoting = Quoting.BRACKET@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expr(\" ^`^a \" b!c`\").fails(\"(?s).*Encountered.*\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expr(\" ^\"^a \"\" b!c\"\").fails(\"(?s).*Encountered.*\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "getTester().checkNode(\"VALUES \"a\".b\",isQuoted(1,false))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9->20 [style = dashed, label="0"];
22->25 [style = bold, label=""];
18->23 [style = bold, label=""];
7->10 [style = bold, label=""];
24->9 [style = bold, label=""];
10->12 [style = dashed, label="0"];
7->11 [style = dashed, label="0"];
3->6 [style = bold, label=""];
9->20 [style = bold, label=""];
11->12 [style = bold, label=""];
15->6 [style = bold, label=""];
4->26 [style = dashed, label="0"];
9->8 [style = bold, label=""];
5->17 [style = bold, label=""];
21->18 [style = bold, label=""];
4->7 [style = bold, label=""];
20->5 [style = bold, label=""];
2->13 [style = bold, label=""];
5->1 [style = bold, label=""];
2->0 [style = bold, label=""];
5->17 [style = dashed, label="0"];
8->5 [style = bold, label=""];
0->4 [style = bold, label=""];
16->21 [style = bold, label=""];
23->19 [style = bold, label=""];
0->13 [style = dashed, label="0"];
25->26 [style = bold, label=""];
27->24 [style = bold, label=""];
1->2 [style = bold, label=""];
4->14 [style = dashed, label="0"];
6->9 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
19->22 [style = bold, label=""];
17->16 [style = bold, label=""];
}
