digraph {
21 [style = filled, label = "String stateModelDef@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "logger.info(\"Deleting cluster \" + clusterName)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new HelixException(\"cluster \" + clusterName + \" is not setup yet\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "_zkClient.deleteRecursive(stateModelPath)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "StateModelDefinition stateModel@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "_zkClient.deleteRecursively(stateModelPath)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "logger.info(\"Operation.State Model directory exists:\" + stateModelPath + \", remove and recreate.\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "_zkClient.deleteRecursive(root)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "addStateModelDef['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "dropCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String clusterName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "logger.info(\"Skip the operation. State Model directory exists:\" + stateModelPath)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "boolean recreateIfExists@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "recreateIfExists@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new HelixException(\"There are still LEADER in the cluster, shut them down first.\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,new ZkBaseDataAccessor<ZNRecord>(_zkClient))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String root = \"/\" + clusterName@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String stateModelPath = stateModelDefPath + \"/\" + stateModelDef@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "addStateModelDef['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "_zkClient.exists(stateModelPath)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "accessor.getChildNames(keyBuilder.liveInstances()).size() > 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,new ZkBaseDataAccessor<ZNRecord>(_zkClient))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String stateModelDefPath = PropertyPathBuilder.stateModelDef(clusterName)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "accessor.setProperty(keyBuilder.stateModelDef(stateModelDef),stateModel)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String stateModelDef@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "accessor.getProperty(keyBuilder.controllerLeader()) != null@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "throw new HelixException(\"There are still live instances in the cluster, shut them down first.\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "boolean recreateIfExists@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String clusterName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "!ZKUtil.isClusterSetup(clusterName,_zkClient)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StateModelDefinition stateModel@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8->7 [style = dotted, label="false"];
22->21 [style = dotted, label="true"];
10->16 [style = solid, label="stateModelPath"];
16->8 [style = dotted, label="true"];
15->0 [style = solid, label="clusterName"];
17->0 [style = dotted, label="true"];
7->11 [style = bold, label=""];
22->19 [style = dotted, label="true"];
8->11 [style = dotted, label="false"];
22->18 [style = dotted, label="true"];
4->14 [style = bold, label=""];
2->20 [style = dashed, label="0"];
23->27 [style = bold, label=""];
16->8 [style = bold, label=""];
17->6 [style = bold, label=""];
15->6 [style = solid, label="clusterName"];
0->6 [style = bold, label=""];
25->23 [style = bold, label=""];
8->2 [style = dotted, label="true"];
27->28 [style = bold, label=""];
21->9 [style = solid, label="stateModelDef"];
8->3 [style = bold, label=""];
11->4 [style = bold, label=""];
18->4 [style = solid, label="clusterName"];
12->17 [style = bold, label=""];
12->15 [style = dotted, label="true"];
15->4 [style = solid, label="clusterName"];
12->1 [style = dotted, label="true"];
5->6 [style = solid, label="stateModelDef"];
30->25 [style = bold, label=""];
10->20 [style = solid, label="stateModelPath"];
5->10 [style = solid, label="stateModelDef"];
2->4 [style = bold, label=""];
17->25 [style = dashed, label="0"];
8->3 [style = dotted, label="true"];
32->33 [style = dotted, label="true"];
19->9 [style = solid, label="stateModel"];
8->7 [style = bold, label=""];
20->4 [style = bold, label=""];
28->32 [style = bold, label=""];
32->33 [style = bold, label=""];
33->29 [style = bold, label=""];
32->29 [style = bold, label=""];
29->26 [style = bold, label=""];
24->26 [style = bold, label=""];
12->13 [style = dotted, label="true"];
10->3 [style = solid, label="stateModelPath"];
17->0 [style = bold, label=""];
3->20 [style = bold, label=""];
10->16 [style = bold, label=""];
13->9 [style = solid, label="stateModel"];
21->6 [style = solid, label="stateModelDef"];
18->6 [style = solid, label="clusterName"];
15->8 [style = solid, label="recreateIfExists"];
18->0 [style = solid, label="clusterName"];
12->5 [style = dotted, label="true"];
28->26 [style = solid, label="root"];
3->2 [style = bold, label=""];
6->10 [style = bold, label=""];
1->8 [style = solid, label="recreateIfExists"];
22->17 [style = bold, label=""];
14->9 [style = bold, label=""];
8->20 [style = dotted, label="true"];
10->7 [style = solid, label="stateModelPath"];
31->25 [style = solid, label="clusterName"];
16->4 [style = bold, label=""];
10->2 [style = solid, label="stateModelPath"];
29->24 [style = bold, label=""];
31->28 [style = solid, label="clusterName"];
21->10 [style = solid, label="stateModelDef"];
22->15 [style = dotted, label="true"];
29->24 [style = dotted, label="true"];
6->10 [style = solid, label="stateModelDefPath"];
30->31 [style = dotted, label="true"];
5->9 [style = solid, label="stateModelDef"];
31->23 [style = solid, label="clusterName"];
}
