digraph {
27 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "i++@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@75@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test\",INITIALIZING))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node2\"))).build()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@59@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "numStarted++@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "numRelocating++@@@86@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
96 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(numStarted,1)@@@91@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "int numRelocating = 0@@@77@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
86 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test\")).addAsNew(metaData.index(\"test1\")).build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == RELOCATING@@@85@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == STARTED@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "int numRelocating = 0@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "i++@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == RELOCATING@@@87@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "int i = 0@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == STARTED@@@84@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "logger.debug(\"now, start 1 more node, check that rebalancing will not happen since we have shard sync going on\")@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "numStarted++@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ClusterState resultState = strategy.reroute(clusterState,\"reroute\")@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "final AtomicBoolean hasFetches = new AtomicBoolean(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString()).build(),new TestGatewayAllocator(){@Override public void allocateUnassigned(RoutingAllocation allocation){if (hasFetches.get()) {allocation.setHasPendingAsyncFetch()}super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13e0776allocation}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "int i = 0@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "allocateTest1.set(true)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "i++@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(resultState,not(equalTo(clusterState)))@@@54@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@52@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "numRelocating++@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "int numStarted = 0@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).build()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "resultingState = strategy.reroute(clusterState,\"reroute\")@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(resultingState,not(equalTo(clusterState)))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test1\",INITIALIZING))@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
98 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@70@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == RELOCATING@@@65@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "clusterState = resultState@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i++@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(numRelocating,1)@@@92@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "i++@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "numRelocating++@@@88@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "logger.debug(\"now, start 1 more node, check that rebalancing will not happen since we unassigned shards\")@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test1\")@@@69@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
84 [style = filled, label = "int i = 0@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == STARTED@@@62@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i++@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "int numStarted = 0@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "logger.debug(\"start all the primary shards for test\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node2\"))).build()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(numRelocating,1)@@@90@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "i++@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT).put(IndexMetaData.INDEX_ROUTING_EXCLUDE_GROUP_SETTING.getKey() + \"_id\",\"node1,node2\")).numberOfShards(2).numberOfReplicas(0)).build()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.EMPTY,new TestGatewayAllocator(){@Override public void allocateUnassigned(RoutingAllocation allocation){if (allocateTest1.get() == false) {RoutingNodes.UnassignedShards unassigned = allocation.routingNodes().unassigned()RoutingNodes.UnassignedShards.UnassignedIterator iterator = unassigned.iterator()while (iterator.hasNext()) {ShardRouting next = iterator.next()if (\"test1\".equals(next.index().getName())) {iterator.removeAndIgnore(UnassignedInfo.AllocationStatus.NO_ATTEMPT,allocation.changes())}}}super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13e0471allocation}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testRebalanceWithIgnoredUnassignedShards['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(numStarted,1)@@@89@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@79@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(resultingState,equalTo(clusterState))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "logger.debug(\"now start initializing shards and expect exactly one rebalance\" + \" from node1 to node 2 since index (test( is all on node1\")@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "testRebalanceWithIgnoredUnassignedShards['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "final AtomicBoolean allocateTest1 = new AtomicBoolean(false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "logger.debug(\"reroute and check that nothing has changed\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(numRelocating,1)@@@76@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "clusterState = resultingState@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "int i = 0@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int i = 0@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "int i = 0@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
79 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test\")@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
83 [style = filled, label = "logger.info(\"start two nodes\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@70@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "resultState = strategy.reroute(clusterState,\"reroute\")@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@71@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "logger.debug(\"now set hasFetches to true and reroute we should now see exactly one relocating shard\")@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@67@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "logger.debug(\"now set allocateTest1 to true and reroute we should see the (test1( index initializing\")@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "int i = 0@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "int i = 0@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "hasFetches.set(false)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "assertEquals(numStarted,1)@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "testRebalanceWhileShardFetching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "int i = 0@@@70@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "int i = 0@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertThat(resultState,equalTo(clusterState))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39->19 [style = bold, label=""];
25->52 [style = bold, label=""];
0->28 [style = solid, label="i"];
89->83 [style = bold, label=""];
19->6 [style = solid, label="clusterState"];
56->65 [style = dotted, label="true"];
79->76 [style = bold, label=""];
48->27 [style = bold, label=""];
45->87 [style = dashed, label="0"];
21->38 [style = bold, label=""];
84->98 [style = bold, label=""];
0->24 [style = bold, label=""];
16->40 [style = solid, label="i"];
25->66 [style = dashed, label="0"];
58->51 [style = dotted, label="true"];
9->108 [style = solid, label="i"];
95->81 [style = dotted, label="false"];
62->40 [style = bold, label=""];
71->75 [style = solid, label="numRelocating"];
32->20 [style = bold, label=""];
40->41 [style = dotted, label="true"];
17->35 [style = bold, label=""];
40->62 [style = bold, label=""];
5->39 [style = bold, label=""];
0->58 [style = bold, label=""];
98->107 [style = bold, label=""];
37->21 [style = bold, label=""];
40->16 [style = solid, label="i"];
46->36 [style = bold, label=""];
23->79 [style = dashed, label="0"];
35->49 [style = dotted, label="true"];
52->26 [style = solid, label="clusterState"];
51->58 [style = bold, label=""];
48->27 [style = solid, label="clusterState"];
64->35 [style = bold, label=""];
71->34 [style = bold, label=""];
7->5 [style = bold, label=""];
58->51 [style = bold, label=""];
10->25 [style = bold, label=""];
2->77 [style = bold, label=""];
98->101 [style = bold, label=""];
16->14 [style = dotted, label="true"];
2->1 [style = solid, label="i"];
5->72 [style = bold, label=""];
39->12 [style = bold, label=""];
1->59 [style = bold, label=""];
0->51 [style = dotted, label="true"];
0->58 [style = solid, label="i"];
49->54 [style = bold, label=""];
68->26 [style = bold, label=""];
13->36 [style = solid, label="i"];
56->36 [style = bold, label=""];
108->7 [style = dotted, label="true"];
39->5 [style = bold, label=""];
2->1 [style = bold, label=""];
67->8 [style = dotted, label="true"];
59->2 [style = solid, label="i"];
12->25 [style = solid, label="clusterState"];
20->63 [style = solid, label="resultingState"];
46->18 [style = bold, label=""];
30->71 [style = dotted, label="true"];
40->14 [style = dotted, label="true"];
5->19 [style = bold, label=""];
65->56 [style = solid, label="i"];
108->39 [style = bold, label=""];
73->29 [style = solid, label="i"];
70->47 [style = bold, label=""];
64->78 [style = bold, label=""];
31->43 [style = bold, label=""];
36->18 [style = dotted, label="true"];
67->43 [style = bold, label=""];
28->58 [style = bold, label=""];
54->33 [style = dotted, label="true"];
1->66 [style = bold, label=""];
22->108 [style = bold, label=""];
0->28 [style = dotted, label="true"];
12->50 [style = bold, label=""];
26->73 [style = bold, label=""];
29->67 [style = bold, label=""];
44->34 [style = solid, label="i"];
2->1 [style = dotted, label="true"];
32->50 [style = solid, label="i"];
82->101 [style = solid, label="numStarted"];
66->59 [style = bold, label=""];
37->105 [style = dashed, label="0"];
14->40 [style = bold, label=""];
36->9 [style = dotted, label="true"];
103->101 [style = solid, label="numStarted"];
64->57 [style = solid, label="numRelocating"];
0->28 [style = bold, label=""];
108->22 [style = dotted, label="true"];
92->80 [style = bold, label=""];
90->88 [style = bold, label=""];
25->45 [style = solid, label="resultingState"];
111->90 [style = solid, label="i"];
19->55 [style = bold, label=""];
12->20 [style = solid, label="clusterState"];
102->32 [style = bold, label=""];
22->79 [style = bold, label=""];
111->80 [style = solid, label="i"];
65->48 [style = bold, label=""];
65->56 [style = bold, label=""];
76->5 [style = bold, label=""];
81->92 [style = dotted, label="true"];
59->66 [style = bold, label=""];
81->92 [style = bold, label=""];
107->93 [style = bold, label=""];
32->20 [style = solid, label="resultingState"];
90->84 [style = bold, label=""];
45->16 [style = solid, label="i"];
53->34 [style = bold, label=""];
38->65 [style = solid, label="i"];
49->54 [style = dotted, label="false"];
50->97 [style = dotted, label="true"];
13->36 [style = bold, label=""];
36->18 [style = bold, label=""];
60->43 [style = dotted, label="true"];
2->59 [style = dotted, label="true"];
40->26 [style = bold, label=""];
16->14 [style = bold, label=""];
19->15 [style = solid, label="clusterState"];
64->34 [style = bold, label=""];
58->59 [style = bold, label=""];
82->94 [style = bold, label=""];
98->109 [style = dotted, label="true"];
20->63 [style = bold, label=""];
108->23 [style = dotted, label="true"];
10->25 [style = solid, label="resultingState"];
29->60 [style = bold, label=""];
49->30 [style = dotted, label="true"];
109->98 [style = bold, label=""];
17->30 [style = dotted, label="false"];
97->102 [style = bold, label=""];
19->39 [style = bold, label=""];
52->45 [style = bold, label=""];
44->11 [style = solid, label="numStarted"];
30->34 [style = bold, label=""];
64->34 [style = dotted, label="true"];
26->4 [style = bold, label=""];
22->23 [style = bold, label=""];
19->39 [style = solid, label="i"];
3->10 [style = bold, label=""];
36->46 [style = bold, label=""];
59->15 [style = dotted, label="true"];
81->80 [style = bold, label=""];
44->30 [style = solid, label="numStarted"];
56->48 [style = bold, label=""];
84->109 [style = solid, label="i"];
11->57 [style = bold, label=""];
24->58 [style = dotted, label="true"];
45->61 [style = solid, label="clusterState"];
32->50 [style = bold, label=""];
60->44 [style = bold, label=""];
12->32 [style = solid, label="clusterState"];
106->105 [style = bold, label=""];
10->52 [style = solid, label="resultingState"];
85->50 [style = solid, label="i"];
30->11 [style = solid, label="numStarted"];
9->46 [style = bold, label=""];
64->35 [style = dotted, label="true"];
73->67 [style = solid, label="i"];
98->107 [style = dotted, label="true"];
60->8 [style = bold, label=""];
55->39 [style = bold, label=""];
90->88 [style = dotted, label="true"];
58->28 [style = dotted, label="true"];
7->22 [style = bold, label=""];
50->0 [style = bold, label=""];
37->79 [style = solid, label="strategy"];
5->39 [style = dotted, label="true"];
110->18 [style = solid, label="clusterState"];
9->108 [style = bold, label=""];
5->39 [style = solid, label="i"];
53->78 [style = solid, label="numStarted"];
47->106 [style = dashed, label="0"];
15->1 [style = bold, label=""];
58->0 [style = solid, label="i"];
64->17 [style = dotted, label="true"];
93->109 [style = bold, label=""];
9->22 [style = solid, label="i"];
39->55 [style = bold, label=""];
50->102 [style = dotted, label="true"];
0->2 [style = bold, label=""];
24->58 [style = solid, label="i"];
8->60 [style = bold, label=""];
3->59 [style = dashed, label="0"];
51->100 [style = bold, label=""];
17->30 [style = bold, label=""];
24->28 [style = dotted, label="true"];
82->103 [style = solid, label="numStarted"];
4->61 [style = bold, label=""];
83->96 [style = bold, label=""];
80->90 [style = solid, label="i"];
16->14 [style = solid, label="i"];
12->10 [style = solid, label="clusterState"];
0->24 [style = solid, label="i"];
5->55 [style = dotted, label="true"];
8->29 [style = bold, label=""];
35->11 [style = bold, label=""];
36->22 [style = bold, label=""];
27->13 [style = bold, label=""];
50->32 [style = bold, label=""];
63->0 [style = solid, label="i"];
60->8 [style = dotted, label="true"];
56->27 [style = dotted, label="true"];
96->110 [style = bold, label=""];
5->19 [style = dotted, label="true"];
50->25 [style = solid, label="clusterState"];
24->58 [style = bold, label=""];
92->44 [style = solid, label="numRelocating"];
94->111 [style = bold, label=""];
101->44 [style = bold, label=""];
110->38 [style = bold, label=""];
15->87 [style = bold, label=""];
17->35 [style = solid, label="i"];
91->86 [style = bold, label=""];
74->2 [style = bold, label=""];
87->82 [style = bold, label=""];
28->0 [style = bold, label=""];
17->53 [style = bold, label=""];
10->1 [style = dashed, label="0"];
40->16 [style = bold, label=""];
99->106 [style = bold, label=""];
78->75 [style = bold, label=""];
43->8 [style = bold, label=""];
88->95 [style = bold, label=""];
54->33 [style = bold, label=""];
98->93 [style = dotted, label="true"];
16->40 [style = dotted, label="true"];
35->53 [style = dotted, label="true"];
56->65 [style = bold, label=""];
16->40 [style = bold, label=""];
73->67 [style = bold, label=""];
28->58 [style = solid, label="i"];
24->0 [style = bold, label=""];
63->24 [style = solid, label="i"];
66->15 [style = bold, label=""];
17->53 [style = dotted, label="true"];
105->91 [style = bold, label=""];
100->28 [style = bold, label=""];
34->35 [style = solid, label="i"];
86->89 [style = bold, label=""];
59->66 [style = dotted, label="true"];
46->36 [style = solid, label="i"];
50->63 [style = solid, label="clusterState"];
84->98 [style = solid, label="i"];
60->31 [style = bold, label=""];
67->60 [style = dotted, label="true"];
85->32 [style = solid, label="i"];
63->104 [style = dashed, label="0"];
23->7 [style = bold, label=""];
61->29 [style = bold, label=""];
20->6 [style = dashed, label="0"];
30->17 [style = bold, label=""];
13->46 [style = solid, label="i"];
0->58 [style = dotted, label="true"];
69->75 [style = solid, label="numRelocating"];
72->12 [style = bold, label=""];
42->47 [style = bold, label=""];
45->16 [style = bold, label=""];
63->24 [style = bold, label=""];
16->68 [style = bold, label=""];
30->71 [style = bold, label=""];
16->62 [style = dotted, label="true"];
19->104 [style = solid, label="clusterState"];
74->2 [style = solid, label="i"];
29->60 [style = solid, label="i"];
14->40 [style = solid, label="i"];
49->30 [style = bold, label=""];
55->6 [style = bold, label=""];
33->17 [style = bold, label=""];
95->81 [style = bold, label=""];
27->7 [style = solid, label="clusterState"];
39->19 [style = dotted, label="true"];
96->110 [style = solid, label="clusterState"];
37->26 [style = solid, label="strategy"];
69->44 [style = bold, label=""];
94->92 [style = solid, label="numRelocating"];
53->49 [style = bold, label=""];
94->44 [style = solid, label="numRelocating"];
8->60 [style = solid, label="i"];
35->17 [style = dotted, label="true"];
14->62 [style = bold, label=""];
50->20 [style = solid, label="clusterState"];
74->59 [style = solid, label="i"];
43->78 [style = solid, label="numStarted"];
58->28 [style = bold, label=""];
58->0 [style = bold, label=""];
43->53 [style = solid, label="numStarted"];
66->87 [style = solid, label="resultState"];
109->98 [style = solid, label="i"];
67->60 [style = bold, label=""];
47->37 [style = bold, label=""];
39->55 [style = dotted, label="true"];
67->29 [style = dotted, label="true"];
85->50 [style = bold, label=""];
19->66 [style = solid, label="clusterState"];
6->104 [style = solid, label="resultState"];
34->64 [style = bold, label=""];
38->56 [style = bold, label=""];
59->1 [style = bold, label=""];
66->15 [style = solid, label="resultState"];
2->59 [style = bold, label=""];
90->95 [style = dotted, label="true"];
5->19 [style = solid, label="i"];
34->64 [style = solid, label="i"];
56->48 [style = dotted, label="true"];
34->17 [style = solid, label="i"];
95->103 [style = dotted, label="true"];
64->33 [style = solid, label="numRelocating"];
108->23 [style = bold, label=""];
54->17 [style = bold, label=""];
29->8 [style = solid, label="i"];
2->66 [style = dotted, label="true"];
4->26 [style = dashed, label="0"];
80->90 [style = bold, label=""];
40->62 [style = dotted, label="true"];
45->40 [style = solid, label="i"];
25->52 [style = solid, label="resultingState"];
58->100 [style = dotted, label="true"];
24->0 [style = dotted, label="true"];
24->74 [style = bold, label=""];
18->9 [style = bold, label=""];
35->17 [style = bold, label=""];
50->97 [style = bold, label=""];
95->103 [style = bold, label=""];
43->69 [style = bold, label=""];
34->35 [style = bold, label=""];
60->31 [style = dotted, label="true"];
12->39 [style = dashed, label="0"];
36->46 [style = dotted, label="true"];
39->5 [style = solid, label="i"];
59->1 [style = dotted, label="true"];
27->79 [style = solid, label="clusterState"];
21->91 [style = dashed, label="0"];
44->64 [style = solid, label="i"];
103->80 [style = bold, label=""];
2->59 [style = solid, label="i"];
76->5 [style = solid, label="i"];
111->90 [style = bold, label=""];
52->15 [style = dashed, label="0"];
6->104 [style = bold, label=""];
62->41 [style = bold, label=""];
33->57 [style = solid, label="numRelocating"];
50->52 [style = solid, label="clusterState"];
1->59 [style = solid, label="i"];
59->3 [style = bold, label=""];
35->53 [style = bold, label=""];
41->14 [style = bold, label=""];
77->3 [style = bold, label=""];
104->85 [style = bold, label=""];
24->0 [style = solid, label="i"];
69->71 [style = solid, label="numRelocating"];
39->6 [style = dotted, label="true"];
90->80 [style = dotted, label="true"];
76->39 [style = solid, label="i"];
38->56 [style = solid, label="i"];
6->19 [style = bold, label=""];
28->51 [style = bold, label=""];
22->108 [style = solid, label="i"];
27->65 [style = bold, label=""];
50->32 [style = dotted, label="true"];
59->2 [style = bold, label=""];
29->67 [style = solid, label="i"];
44->64 [style = bold, label=""];
}
