digraph {
8 [style = filled, label = "assertThat(resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema()),instanceOf())@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new MySQLSelectStatement()),new GroupByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC)))),new OrderByContext(Collections.emptyList(),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(null,null,Collections.emptyList()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema()),instanceOf())@@@5@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertBuildOrderByStreamMergedResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new MySQLSelectStatement()),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(null,null,Collections.emptyList()))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "MySQLSelectStatement selectStatement = (MySQLSelectStatement)buildSelectStatement(new MySQLSelectStatement())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertBuildGroupByMemoryMergedResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(metaData.getSchema()).thenReturn(mock())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertBuildOrderByStreamMergedResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema()),instanceOf())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
11->4 [style = bold, label=""];
0->2 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->8 [style = bold, label=""];
2->1 [style = solid, label="selectStatementContext"];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
7->9 [style = bold, label=""];
10->9 [style = solid, label="selectStatement"];
0->14 [style = bold, label=""];
2->14 [style = dashed, label="0"];
14->15 [style = solid, label="selectStatementContext"];
10->12 [style = bold, label=""];
6->10 [style = bold, label=""];
9->8 [style = solid, label="selectStatementContext"];
14->15 [style = bold, label=""];
5->11 [style = bold, label=""];
4->9 [style = solid, label="metaData"];
13->0 [style = bold, label=""];
}
