digraph {
20 [style = filled, label = "testDeleteBackingTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "hmsTable.getParameters().entrySet().stream().filter(null).forEach(null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Path hmsTableLocation = new Path(hmsTable.getSd().getLocation())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "AssertHelpers.assertThrows(\"should throw exception\",,\"Table does not exist\",null)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "shell.executeStatement(\"CREATE EXTERNAL TABLE customers \" + \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" + testTables.locationForCreateTableSQL(identifier) + \"TBLPROPERTIES ('\" + InputFormatConfig.TABLE_SCHEMA + \"'='\" + SchemaParser.toJson(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA) + \"', \" + \"'\" + InputFormatConfig.EXTERNAL_TABLE_PURGE + \"'='FALSE', \" + \"'\" + InputFormatConfig.CATALOG_NAME + \"'='\" + Catalogs.ICEBERG_DEFAULT_CATALOG_NAME + \"')\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testCreateTableWithoutSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "!Catalogs.hiveCatalog(shell.getHiveConf())@@@5@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "FileSystem fs = Util.getFs(hmsTableLocation,shell.getHiveConf())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "org.apache.hadoop.hive.metastore.api.Table hmsTable = shell.metastore().getTable(\"default\",\"customers\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(hmsTableLocation).length)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(hmsTableLocation).length)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Path hmsTableLocation = new Path(hmsTable.getSd().getLocation())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(PartitionSpec.unpartitioned(),icebergTable.spec())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "!Catalogs.hiveCatalog(shell.getHiveConf(),tableProperties)@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "shell.executeStatement(\"CREATE EXTERNAL TABLE customers \" + \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" + testTables.locationForCreateTableSQL(identifier) + \"TBLPROPERTIES ('\" + InputFormatConfig.TABLE_SCHEMA + \"'='\" + SchemaParser.toJson(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA) + \"')\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testDeleteBackingTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Properties tableProperties = new Properties()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "shell.executeStatement(\"CREATE EXTERNAL TABLE customers \" + \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" + testTables.locationForCreateTableSQL(identifier) + \"TBLPROPERTIES ('\" + InputFormatConfig.TABLE_SCHEMA + \"'='\" + SchemaParser.toJson(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA) + \"', \" + \"'\" + InputFormatConfig.EXTERNAL_TABLE_PURGE + \"'='FALSE')\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testTables.loadTable(identifier)@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testTables.loadTable(identifier)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(new Path(hmsTableLocation,\"metadata\")).length)@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "AssertHelpers.assertThrows(\"should throw exception\",,\"Table does not exist\",null)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "FileSystem fs = Util.getFs(hmsTableLocation,shell.getHiveConf())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(new Path(hmsTableLocation,\"metadata\")).length)@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TableIdentifier identifier = TableIdentifier.of(\"default\",\"customers\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "org.apache.iceberg.Table icebergTable = testTables.loadTable(identifier)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->4 [style = dotted, label="false"];
23->16 [style = dotted, label="true"];
4->9 [style = bold, label=""];
14->24 [style = bold, label=""];
6->11 [style = dotted, label="false"];
23->16 [style = bold, label=""];
22->15 [style = bold, label=""];
21->13 [style = solid, label="hmsTableLocation"];
21->14 [style = solid, label="hmsTableLocation"];
12->5 [style = bold, label=""];
9->11 [style = bold, label=""];
6->3 [style = dotted, label="false"];
12->26 [style = solid, label="identifier"];
5->26 [style = dashed, label="0"];
7->2 [style = solid, label="hmsTableLocation"];
7->11 [style = solid, label="hmsTableLocation"];
26->29 [style = bold, label=""];
2->3 [style = bold, label=""];
0->12 [style = bold, label=""];
6->2 [style = dotted, label="false"];
12->1 [style = solid, label="identifier"];
23->24 [style = dotted, label="false"];
18->17 [style = bold, label=""];
6->9 [style = dotted, label="false"];
23->13 [style = dotted, label="false"];
6->7 [style = dotted, label="false"];
12->26 [style = bold, label=""];
7->4 [style = bold, label=""];
21->25 [style = bold, label=""];
28->12 [style = bold, label=""];
1->7 [style = bold, label=""];
15->18 [style = bold, label=""];
17->23 [style = bold, label=""];
11->2 [style = bold, label=""];
12->29 [style = solid, label="identifier"];
23->21 [style = dotted, label="false"];
6->10 [style = dotted, label="true"];
23->19 [style = dotted, label="false"];
6->1 [style = bold, label=""];
29->27 [style = bold, label=""];
12->22 [style = solid, label="identifier"];
23->1 [style = dotted, label="true"];
23->14 [style = dotted, label="false"];
19->14 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
23->21 [style = bold, label=""];
16->1 [style = bold, label=""];
23->25 [style = dotted, label="false"];
6->8 [style = dotted, label="true"];
6->10 [style = bold, label=""];
12->5 [style = solid, label="identifier"];
20->12 [style = bold, label=""];
25->19 [style = bold, label=""];
21->24 [style = solid, label="hmsTableLocation"];
12->8 [style = solid, label="identifier"];
6->1 [style = dotted, label="false"];
7->3 [style = solid, label="hmsTableLocation"];
12->22 [style = bold, label=""];
24->13 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
