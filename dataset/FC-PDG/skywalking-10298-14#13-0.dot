digraph {
32 [style = filled, label = "workerInstancesService.put(testWorkerId,worker,)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "RemoteServiceGrpc.RemoteServiceStub remoteServiceStub = RemoteServiceGrpc.newStub(gRPCCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()))@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "moduleManager = new ModuleManagerTesting()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "TestWorker worker = new TestWorker(moduleManager)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "when(metricsCreator.createHistogramMetric(any(),any(),any(),any())).thenReturn(new HistogramMetrics(){@Override public Timer createTimer(){return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@11b4a78}@Override public void observe(double value){}})@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "telemetryModuleDefine.provider().registerServiceImplementation(,metricsCreator)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "callTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "streamObserver.onNext(remoteMessage.build())@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "remoteData.addDataStrings(\"test2\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "remoteMessage.setRemoteData(remoteData)@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "streamObserver.onCompleted()@@@52@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "ModuleManagerTesting moduleManager = new ModuleManagerTesting()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RemoteData.Builder remoteData = RemoteData.newBuilder()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "remoteData.addDataLongs(20)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "remoteData.addDataStrings(\"test1\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "gRPCCleanup.register(InProcessServerBuilder.forName(serverName).directExecutor().addService(new RemoteServiceHandler(moduleManager)).build().start())@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "WorkerInstancesService workerInstancesService = new WorkerInstancesService()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "remoteMessage.setNextWorkerName(testWorkerId)@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String testWorkerId = \"mock-worker\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String serverName = InProcessServerBuilder.generateName()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final int streamDataClassId = 1@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "telemetryModuleDefine.provider().registerServiceImplementation(,metricsCreator)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "callTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "TestWorker worker = new TestWorker(moduleManager)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "remoteData.addDataLongs(10)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MetricsCreator metricsCreator = mock()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "WorkerInstancesService workerInstancesService = new WorkerInstancesService()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(metricsCreator.createCounter(any(),any(),any(),any())).thenReturn(new CounterMetrics(){@Override public void inc(){}@Override public void inc(double value){}})@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ModuleDefineTesting telemetryModuleDefine = new ModuleDefineTesting()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RemoteData.Builder remoteData = RemoteData.newBuilder()@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "moduleManager.put(TelemetryModule.NAME,telemetryModuleDefine)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ModuleDefineTesting telemetryModuleDefine = new ModuleDefineTesting()@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RemoteMessage.Builder remoteMessage = RemoteMessage.newBuilder()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RemoteMessage.Builder remoteMessage = RemoteMessage.newBuilder()@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "remoteMessage.setNextWorkerName(testWorkerId)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "moduleManager.put(TelemetryModule.NAME,telemetryModuleDefine)@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "before['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(metricsCreator.createHistogramMetric(any(),any(),any(),any(),any())).thenReturn(new HistogramMetrics(){@Override public void observe(double value){}})@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "StreamObserver<RemoteMessage> streamObserver = remoteServiceStub.call(new StreamObserver<Empty>(){@Override public void onNext(Empty empty){}@Override public void onError(Throwable throwable){}@Override public void onCompleted(){}})@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10->22 [style = bold, label=""];
15->10 [style = bold, label=""];
16->9 [style = bold, label=""];
14->19 [style = solid, label="telemetryModuleDefine"];
22->2 [style = bold, label=""];
28->10 [style = bold, label=""];
38->30 [style = solid, label="workerInstancesService"];
5->20 [style = bold, label=""];
27->30 [style = bold, label=""];
25->3 [style = bold, label=""];
36->4 [style = bold, label=""];
43->42 [style = bold, label=""];
42->39 [style = bold, label=""];
4->21 [style = bold, label=""];
21->29 [style = solid, label="moduleManager"];
38->27 [style = bold, label=""];
2->18 [style = bold, label=""];
14->19 [style = bold, label=""];
6->24 [style = bold, label=""];
9->17 [style = bold, label=""];
32->7 [style = bold, label=""];
17->33 [style = bold, label=""];
11->0 [style = solid, label="moduleDefine"];
23->12 [style = solid, label="metricsCreator"];
11->0 [style = solid, label="workerInstancesService"];
11->44 [style = solid, label="workerInstancesService"];
12->6 [style = bold, label=""];
39->11 [style = bold, label=""];
23->25 [style = solid, label="metricsCreator"];
1->13 [style = bold, label=""];
30->29 [style = bold, label=""];
12->37 [style = bold, label=""];
19->25 [style = bold, label=""];
0->38 [style = bold, label=""];
20->4 [style = bold, label=""];
33->26 [style = bold, label=""];
0->7 [style = bold, label=""];
35->28 [style = bold, label=""];
3->8 [style = solid, label="telemetryModuleDefine"];
26->31 [style = bold, label=""];
11->0 [style = bold, label=""];
1->34 [style = bold, label=""];
2->33 [style = solid, label="remoteData"];
38->27 [style = solid, label="workerInstancesService"];
21->11 [style = bold, label=""];
34->3 [style = bold, label=""];
4->22 [style = solid, label="testWorkerId"];
3->8 [style = bold, label=""];
29->32 [style = bold, label=""];
7->23 [style = bold, label=""];
29->32 [style = solid, label="worker"];
44->41 [style = bold, label=""];
4->24 [style = solid, label="testWorkerId"];
23->1 [style = bold, label=""];
0->44 [style = bold, label=""];
37->35 [style = bold, label=""];
40->43 [style = bold, label=""];
42->39 [style = solid, label="moduleDefine"];
15->16 [style = solid, label="remoteData"];
43->41 [style = solid, label="moduleManager"];
13->34 [style = dashed, label="0"];
13->14 [style = bold, label=""];
4->32 [style = solid, label="testWorkerId"];
8->12 [style = bold, label=""];
24->15 [style = bold, label=""];
18->16 [style = bold, label=""];
}
