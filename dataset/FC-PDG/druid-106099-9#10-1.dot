digraph {
4 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE_KEY)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryNameUsingIsoCodeLookup(JoinType.LEFT))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e843,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e84a))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "test_makeCursors_factToCountryLeftWithFilterOnJoinableUsingLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e712,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e71a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e722,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e72a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e732,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e73a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e742,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e74a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e752,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e75a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e762,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e76a): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e775,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e77d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e785,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e78d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e795,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e79d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e7a5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e7ad,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e7b5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e7bd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e7c5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e7cd,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91e7d5))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnNumber(JoinType.INNER))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Filter filter = new OrDimFilter(new SelectorDimFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",\"DE\",null),new SelectorDimFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\",\"Norway\",null)).toFilter()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
3->1 [style = solid, label="filter"];
7->4 [style = solid, label="joinableClauses"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
9->4 [style = solid, label="filter"];
2->4 [style = solid, label="joinableClauses"];
1->10 [style = dashed, label="0"];
2->7 [style = dashed, label="0"];
2->5 [style = solid, label="joinableClauses"];
3->4 [style = bold, label=""];
8->7 [style = bold, label=""];
3->5 [style = solid, label="filter"];
6->2 [style = bold, label=""];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
9->10 [style = solid, label="filter"];
3->9 [style = dashed, label="0"];
4->5 [style = dashed, label="0"];
4->1 [style = bold, label=""];
3->4 [style = solid, label="filter"];
}
