digraph {
12 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.directBuffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ByteBuf uncompressed = PooledByteBufAllocator.DEFAULT.directBuffer(uncompressedLength,uncompressedLength)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "int uncompressedLength@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "decode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "return uncompressed@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "encoded.hasMemoryAddress()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int uncompressedLength@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "decode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int uncompressedLength@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Snappy.uncompress(encodedNio,uncompressedNio)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Zstd.decompressUnsafe(uncompressed.memoryAddress(),uncompressedLength,encoded.memoryAddress() + encoded.readerIndex(),encoded.readableBytes())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ByteBuf encoded@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ByteBuf uncompressed = PooledByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return uncompressed@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "decode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Zstd.decompress(uncompressedNio,encodedNio)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->10 [style = dotted, label="true"];
19->14 [style = dotted, label="true"];
11->3 [style = solid, label="uncompressedLength"];
1->4 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->0 [style = bold, label=""];
1->7 [style = dotted, label="false"];
4->2 [style = solid, label="uncompressedNio"];
11->4 [style = solid, label="uncompressedLength"];
1->3 [style = bold, label=""];
19->17 [style = bold, label=""];
8->4 [style = solid, label="uncompressedLength"];
11->9 [style = solid, label="uncompressedLength"];
11->12 [style = solid, label="uncompressedLength"];
2->9 [style = bold, label=""];
15->16 [style = bold, label=""];
10->16 [style = solid, label="uncompressedLength"];
12->1 [style = bold, label=""];
10->18 [style = solid, label="uncompressedLength"];
13->10 [style = dotted, label="true"];
4->7 [style = bold, label=""];
18->15 [style = solid, label="uncompressedNio"];
1->2 [style = dotted, label="false"];
1->3 [style = dotted, label="true"];
7->2 [style = solid, label="encodedNio"];
2->15 [style = dashed, label="0"];
3->9 [style = bold, label=""];
5->0 [style = solid, label="uncompressed"];
12->0 [style = solid, label="uncompressed"];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
18->20 [style = bold, label=""];
6->10 [style = dotted, label="true"];
13->12 [style = bold, label=""];
5->17 [style = dashed, label="0"];
8->5 [style = solid, label="uncompressedLength"];
1->4 [style = dotted, label="false"];
6->8 [style = dotted, label="true"];
7->2 [style = bold, label=""];
17->4 [style = solid, label="uncompressed"];
20->15 [style = solid, label="encodedNio"];
13->11 [style = dotted, label="true"];
8->3 [style = solid, label="uncompressedLength"];
16->4 [style = bold, label=""];
8->9 [style = solid, label="uncompressedLength"];
10->17 [style = solid, label="uncompressedLength"];
20->15 [style = bold, label=""];
17->18 [style = bold, label=""];
}
