digraph {
3 [style = filled, label = "isCaseSensitive()? includeNonPatterns.contains(path.toString()): includeNonPatterns.contains(path.toString().toUpperCase())@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "isIncluded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "isExcluded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TokenizedPath name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < excludePatterns.length@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "isCaseSensitive()? excludeNonPatterns.contains(name.toString()): excludeNonPatterns.contains(name.toString().toUpperCase())@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return true@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return false@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "excludePatterns(i(.matchPath(name,isCaseSensitive())@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TokenizedPath path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return true@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "isIncluded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < includePatterns.length@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ensureNonPatternSetsReady()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "includePatterns(i(.matchPath(path,isCaseSensitive())@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "isCaseSensitive()? includeNonPatterns.containsKey(path.toString()): includeNonPatterns.containsKey(path.toString().toUpperCase())@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4->7 [style = solid, label="i"];
13->15 [style = solid, label="name"];
6->3 [style = bold, label=""];
7->2 [style = dotted, label="true"];
16->8 [style = dotted, label="true"];
4->14 [style = bold, label=""];
15->10 [style = bold, label=""];
3->1 [style = bold, label=""];
16->8 [style = bold, label=""];
17->6 [style = bold, label=""];
11->1 [style = bold, label=""];
4->14 [style = solid, label="i"];
7->14 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
1->14 [style = solid, label="i"];
15->10 [style = dotted, label="true"];
5->0 [style = dotted, label="true"];
1->4 [style = solid, label="i"];
2->10 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
4->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
14->15 [style = dotted, label="true"];
0->2 [style = solid, label="path"];
5->6 [style = bold, label=""];
16->1 [style = bold, label=""];
6->16 [style = bold, label=""];
7->2 [style = bold, label=""];
3->8 [style = bold, label=""];
6->11 [style = bold, label=""];
0->13 [style = dashed, label="0"];
7->4 [style = dotted, label="true"];
15->4 [style = bold, label=""];
10->4 [style = bold, label=""];
12->0 [style = dotted, label="true"];
11->8 [style = bold, label=""];
14->9 [style = bold, label=""];
1->14 [style = bold, label=""];
14->15 [style = bold, label=""];
11->8 [style = dotted, label="true"];
3->11 [style = dashed, label="0"];
14->4 [style = dotted, label="true"];
3->8 [style = dotted, label="true"];
17->13 [style = dotted, label="true"];
1->7 [style = solid, label="i"];
2->10 [style = dotted, label="true"];
}
