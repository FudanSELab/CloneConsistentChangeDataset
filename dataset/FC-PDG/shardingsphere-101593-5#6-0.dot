digraph {
23 [style = filled, label = "return visit(ctx.expr(0))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ExpressionSegment left = (ExpressionSegment)visit(ctx.expr(0))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final ExprContext ctx@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String operator = \"XOR\"@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "null != ctx.XOR()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return createBinaryOperationExpression(ctx,ctx.orOperator().getText())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "null != ctx.booleanPrimary()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "visitExpr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "ExpressionSegment left = (ExpressionSegment)visit(ctx.expr(0))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return new NotExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "null != ctx.logicalOperator()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "null != ctx.orOperator()@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "return new BinaryOperationExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),left,right,operator,text)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "visitExpr['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return new BinaryOperationExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)),(ExpressionSegment)visit(ctx.expr(1)),ctx.logicalOperator().getText(),text)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "ExpressionSegment right = (ExpressionSegment)visit(ctx.expr(1))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return createBinaryOperationExpression(ctx,ctx.andOperator().getText())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "return createBinaryOperationExpression(ctx,\"XOR\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return new NotExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return visit(ctx.booleanPrimary())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String operator = ctx.logicalOperator().getText()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "visitExpr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return new NotExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),(ExpressionSegment)visit(ctx.expr(0)))@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "null != ctx.andOperator()@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "null != ctx.LP_()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ExpressionSegment right = (ExpressionSegment)visit(ctx.expr(1))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "String text = ctx.start.getInputStream().getText(new Interval(ctx.start.getStartIndex(),ctx.stop.getStopIndex()))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
1->5 [style = bold, label=""];
13->10 [style = bold, label=""];
14->16 [style = bold, label=""];
13->25 [style = bold, label=""];
1->4 [style = bold, label=""];
6->8 [style = solid, label="text"];
15->13 [style = bold, label=""];
16->18 [style = bold, label=""];
9->0 [style = solid, label="right"];
2->19 [style = solid, label="ctx"];
5->9 [style = bold, label=""];
2->14 [style = solid, label="ctx"];
4->6 [style = bold, label=""];
25->23 [style = bold, label=""];
6->21 [style = bold, label=""];
15->2 [style = dotted, label="true"];
19->20 [style = bold, label=""];
1->11 [style = dotted, label="true"];
3->24 [style = dashed, label="0"];
12->2 [style = dotted, label="true"];
20->14 [style = dotted, label="true"];
3->11 [style = bold, label=""];
4->8 [style = dotted, label="true"];
1->20 [style = bold, label=""];
18->17 [style = bold, label=""];
23->26 [style = bold, label=""];
24->6 [style = solid, label="operator"];
20->14 [style = bold, label=""];
16->17 [style = bold, label=""];
13->10 [style = dotted, label="true"];
0->6 [style = solid, label="right"];
1->19 [style = dotted, label="true"];
26->11 [style = bold, label=""];
13->1 [style = bold, label=""];
4->7 [style = bold, label=""];
8->7 [style = bold, label=""];
22->2 [style = dotted, label="true"];
26->21 [style = bold, label=""];
1->3 [style = dotted, label="true"];
12->13 [style = bold, label=""];
11->0 [style = bold, label=""];
24->4 [style = bold, label=""];
3->0 [style = solid, label="operator"];
20->16 [style = bold, label=""];
5->0 [style = solid, label="left"];
2->18 [style = solid, label="ctx"];
10->25 [style = bold, label=""];
0->4 [style = bold, label=""];
11->6 [style = solid, label="left"];
4->6 [style = solid, label="text"];
4->20 [style = dashed, label="0"];
1->9 [style = dotted, label="true"];
26->24 [style = dotted, label="true"];
0->24 [style = bold, label=""];
6->8 [style = bold, label=""];
25->26 [style = bold, label=""];
11->0 [style = solid, label="text"];
9->3 [style = bold, label=""];
26->6 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
25->23 [style = dotted, label="true"];
26->11 [style = dotted, label="true"];
26->4 [style = dotted, label="true"];
1->19 [style = bold, label=""];
1->25 [style = dashed, label="0"];
10->1 [style = bold, label=""];
1->5 [style = dotted, label="true"];
22->13 [style = bold, label=""];
26->0 [style = dotted, label="true"];
16->18 [style = dotted, label="true"];
}
