digraph {
13 [style = filled, label = "assertTrue(g1.equals(g2))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CustomXYURLGenerator g2 = (CustomXYURLGenerator)g1.clone()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "CustomXYURLGenerator g1 = new CustomXYURLGenerator()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "g1.addURLSeries(u2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "u1.add(\"URL A1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "u1.add(\"URL A3\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(g1 != g2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CustomXYURLGenerator g2 = CloneUtils.clone(g1)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(g1.getClass() == g2.getClass())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(g1.equals(g2))@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "u1.add(\"URL A2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(g1.equals(g2))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "g2.addURLSeries(new ArrayList<>(u2))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "u2.add(\"URL XXX\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "CustomCategoryURLGenerator g2 = (CustomCategoryURLGenerator)g1.clone()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<String> u2 = new ArrayList<>()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<String> u1 = new ArrayList<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "g1.addURLSeries(u1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->10 [style = bold, label=""];
9->7 [style = solid, label="g2"];
21->10 [style = bold, label=""];
21->15 [style = solid, label="g2"];
16->11 [style = bold, label=""];
2->20 [style = dashed, label="0"];
0->13 [style = bold, label=""];
21->7 [style = solid, label="g2"];
8->12 [style = solid, label="u2"];
19->20 [style = bold, label=""];
11->21 [style = bold, label=""];
8->3 [style = bold, label=""];
2->10 [style = solid, label="g1"];
3->6 [style = bold, label=""];
20->14 [style = bold, label=""];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
9->10 [style = solid, label="g2"];
18->2 [style = bold, label=""];
11->9 [style = bold, label=""];
9->15 [style = solid, label="g2"];
12->7 [style = bold, label=""];
6->15 [style = bold, label=""];
14->11 [style = solid, label="u1"];
17->7 [style = solid, label="g2"];
9->13 [style = solid, label="g2"];
20->10 [style = solid, label="g1"];
21->10 [style = solid, label="g2"];
5->1 [style = bold, label=""];
17->10 [style = solid, label="g2"];
17->13 [style = solid, label="g2"];
9->21 [style = dashed, label="0"];
1->16 [style = bold, label=""];
21->13 [style = solid, label="g2"];
9->17 [style = dashed, label="0"];
10->0 [style = bold, label=""];
2->14 [style = bold, label=""];
11->17 [style = bold, label=""];
15->12 [style = bold, label=""];
13->8 [style = bold, label=""];
2->17 [style = solid, label="g1"];
8->6 [style = solid, label="u2"];
17->15 [style = solid, label="g2"];
14->5 [style = bold, label=""];
}
