digraph {
9 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(project.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such job 'aProject'\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(result,failedWith(-1))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(result.stderr(),containsString(\"No such job 'aProject'\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(result,failedWith(3))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(project.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "deleteJobShouldFailWithoutJobReadPermission['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertThat(result,failedWith(1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "changeProjectOnTheDisc(project,\"echo 1\",\"echo 2\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "reloadJobShouldFailWithoutJobReadPermission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(result.stderr(),containsString(\"No such job ‘aProject’ exists.\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "j.createFreeStyleProject(\"aProject\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "project.getBuildersList().add(new Shell(\"echo 1\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "deleteJobShouldFailWithoutJobReadPermission['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.DELETE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
9->11 [style = bold, label=""];
15->14 [style = bold, label=""];
0->6 [style = bold, label=""];
16->10 [style = bold, label=""];
3->8 [style = solid, label="result"];
2->3 [style = bold, label=""];
13->17 [style = solid, label="result"];
9->10 [style = solid, label="project"];
4->6 [style = dashed, label="0"];
8->0 [style = bold, label=""];
5->16 [style = dashed, label="0"];
13->17 [style = bold, label=""];
3->5 [style = bold, label=""];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
3->0 [style = solid, label="result"];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
3->8 [style = bold, label=""];
14->12 [style = bold, label=""];
18->9 [style = bold, label=""];
17->15 [style = bold, label=""];
5->8 [style = dashed, label="0"];
13->15 [style = solid, label="result"];
1->2 [style = bold, label=""];
4->14 [style = dashed, label="0"];
3->5 [style = solid, label="result"];
}
