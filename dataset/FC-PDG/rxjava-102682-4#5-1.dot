digraph {
1 [style = filled, label = "Flowable<String> fromCallableFlowable = Flowable.fromCallable(func)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Callable<String> func = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestSubscriber<String> outer = new TestSubscriber<>(subscriber)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "verify(func).call()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CountDownLatch observerLatch = new CountDownLatch(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verifyNoMoreInteractions(observer)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fromCallableObservable.subscribeOn(Schedulers.computation()).subscribe(outer)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(observer).onSubscribe(any())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldNotDeliverResultIfSubscriberUnsubscribedBeforeEmission['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fromCallableFlowable.subscribeOn(Schedulers.computation()).subscribe(outer)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldNotDeliverResultIfSubscriberUnsubscribedBeforeEmission['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "outer.dispose()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Observer<Object> observer = TestHelper.mockObserver()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verifyNoMoreInteractions(subscriber)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "outer.cancel()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final CountDownLatch funcLatch = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(func.call()).thenAnswer(new Answer<String>(){@Override public String answer(InvocationOnMock invocation){observerLatch.countDown()try {funcLatch.await()}catch (InterruptedException e) return \"should_not_be_delivered\"}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Observable<String> fromCallableObservable = Observable.fromCallable(func)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "observerLatch.await()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestObserver<String> outer = new TestObserver<String>(observer)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "shouldNotDeliverResultIfSubscriberUnsubscribedBeforeEmission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TestSubscriber<String> outer = new TestSubscriber<String>(subscriber)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "verify(subscriber).onSubscribe(any())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "funcLatch.countDown()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
4->23 [style = solid, label="func"];
24->2 [style = bold, label=""];
5->23 [style = bold, label=""];
20->24 [style = solid, label="outer"];
7->17 [style = dashed, label="0"];
17->9 [style = bold, label=""];
8->15 [style = dashed, label="0"];
11->4 [style = bold, label=""];
0->2 [style = bold, label=""];
8->20 [style = dashed, label="0"];
4->1 [style = solid, label="func"];
8->0 [style = solid, label="outer"];
21->18 [style = bold, label=""];
6->22 [style = dashed, label="0"];
6->15 [style = bold, label=""];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
12->10 [style = bold, label=""];
1->6 [style = bold, label=""];
23->22 [style = bold, label=""];
13->21 [style = dashed, label="0"];
10->5 [style = bold, label=""];
22->20 [style = bold, label=""];
15->0 [style = bold, label=""];
6->8 [style = bold, label=""];
3->13 [style = bold, label=""];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
0->24 [style = dashed, label="0"];
3->21 [style = bold, label=""];
19->4 [style = bold, label=""];
22->18 [style = solid, label="observer"];
2->7 [style = bold, label=""];
14->18 [style = dashed, label="0"];
16->4 [style = bold, label=""];
15->0 [style = solid, label="outer"];
20->24 [style = bold, label=""];
6->8 [style = solid, label="subscriber"];
1->23 [style = dashed, label="0"];
13->14 [style = bold, label=""];
6->15 [style = solid, label="subscriber"];
6->14 [style = solid, label="subscriber"];
22->20 [style = solid, label="observer"];
}
