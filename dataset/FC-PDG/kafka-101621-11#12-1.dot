digraph {
5 [style = filled, label = "assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"aa\",0),new KeyValueTimestamp<>(\"B\",\"bb\",0),new KeyValueTimestamp<>(\"C\",\"cc\",0),new KeyValueTimestamp<>(\"D\",\"dd\",0)),processorSupplier.theCapturedProcessor().processed)@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldMergeTwoStreams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "inputTopic1.pipeInput(\"A\",\"aa\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final TestInputTopic<String,String> inputTopic1 = driver.createInputTopic(topic1,new StringSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "merged.process(processorSupplier)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final KStream<String,String> merged = source1.merge(source2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String topic2 = \"topic-2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final TestInputTopic<String,String> inputTopic2 = driver.createInputTopic(topic2,new StringSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String topic1 = \"topic-1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shouldMergeTwoStreams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "inputTopic1.pipeInput(\"D\",\"dd\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final KStream<String,String> source1 = builder.stream(topic1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final MockProcessorSupplier<String,String> processorSupplier = new MockProcessorSupplier<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "inputTopic2.pipeInput(\"C\",\"cc\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldMergeStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final KStream<String,String> source2 = builder.stream(topic2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "inputTopic2.pipeInput(\"B\",\"bb\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(asList(new KeyValueTimestamp<>(\"A\",\"aa\",0),new KeyValueTimestamp<>(\"B\",\"bb\",0),new KeyValueTimestamp<>(\"C\",\"cc\",0),new KeyValueTimestamp<>(\"D\",\"dd\",0)),processorSupplier.theCapturedProcessor().processed())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->10 [style = solid, label="topic2"];
17->0 [style = solid, label="processorSupplier"];
7->11 [style = bold, label=""];
8->11 [style = solid, label="topic1"];
16->8 [style = bold, label=""];
4->6 [style = bold, label=""];
0->12 [style = bold, label=""];
11->9 [style = bold, label=""];
1->13 [style = bold, label=""];
6->15 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
6->5 [style = bold, label=""];
12->10 [style = bold, label=""];
17->0 [style = bold, label=""];
7->9 [style = solid, label="topic2"];
9->3 [style = bold, label=""];
3->17 [style = bold, label=""];
14->8 [style = bold, label=""];
10->1 [style = bold, label=""];
8->12 [style = solid, label="topic1"];
9->3 [style = solid, label="source2"];
5->15 [style = dashed, label="0"];
2->8 [style = bold, label=""];
13->4 [style = bold, label=""];
}
