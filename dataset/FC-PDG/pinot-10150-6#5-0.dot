digraph {
25 [style = filled, label = "testAggregationWithPrecision['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(rows.get(0),new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8a2184)@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "MathContext mathContext = new MathContext(6,RoundingMode.HALF_EVEN)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String query = \"SELECT SUM_PRECISION(intColumn), SUM_PRECISION(longColumn), SUM_PRECISION(floatColumn), SUM_PRECISION(doubleColumn), SUM_PRECISION(stringColumn), SUM_PRECISION(bytesColumn) FROM testTable\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertNotNull(aggregationResult)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String intSum = _intSum.multiply(FOUR).toString()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "BrokerResponseNative brokerResponse = getBrokerResponseForSqlQuery(query)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testAggregationWithPrecision['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<Object> aggregationResult = ((AggregationOperator)operator).nextBlock().getAggregationResult()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Operator operator = getOperatorForSqlQuery(query)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DataSchema expectedDataSchema = new DataSchema(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8a2030,new ColumnDataType((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8a2039)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(aggregationResult.get(1),_longSum)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Object((> rows = resultTable.getRows()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(aggregationResult.size(),6)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(rows.size(),1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(aggregationResult.get(4),_doubleSum)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String longSum = _longSum.multiply(FOUR).toString()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testAggregationOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DataSchema expectedDataSchema = new DataSchema(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8a2122,new ColumnDataType((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8a212b)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String longSum = _longSum.multiply(FOUR).round(mathContext).toString()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String query = \"SELECT SUM_PRECISION(intColumn, 6), SUM_PRECISION(longColumn, 6), SUM_PRECISION(floatColumn, 6), \" + \"SUM_PRECISION(doubleColumn, 6), SUM_PRECISION(stringColumn, 6), SUM_PRECISION(bytesColumn, 6) FROM \" + \"testTable\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "String doubleSum = _doubleSum.multiply(FOUR).round(mathContext).toString()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String doubleSum = _doubleSum.multiply(FOUR).toString()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(rows.get(0),new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8a20a8)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(resultTable.getDataSchema(),expectedDataSchema)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(aggregationResult.get(2),_floatSum)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ResultTable resultTable = brokerResponse.getResultTable()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String query = \"SELECT SUM_PRECISION(intColumn, 6), SUM_PRECISION(longColumn, 6), SUM_PRECISION(floatColumn, 6), SUM_PRECISION(doubleColumn, 6), SUM_PRECISION(stringColumn, 6), SUM_PRECISION(bytesColumn, 6) FROM testTable\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(aggregationResult.get(3),_doubleSum)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String floatSum = _floatSum.multiply(FOUR).round(mathContext).toString()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(aggregationResult.get(5),_doubleSum)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(aggregationResult.get(0),_intSum)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String intSum = _intSum.multiply(FOUR).round(mathContext).toString()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String floatSum = _floatSum.multiply(FOUR).toString()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(operator instanceof AggregationOperator)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->4 [style = solid, label="expectedDataSchema"];
24->21 [style = solid, label="aggregationResult"];
1->12 [style = solid, label="intSum"];
0->12 [style = solid, label="floatSum"];
34->31 [style = solid, label="floatSum"];
15->10 [style = bold, label=""];
0->16 [style = bold, label=""];
8->15 [style = bold, label=""];
30->33 [style = bold, label=""];
5->9 [style = bold, label=""];
28->34 [style = bold, label=""];
17->34 [style = dashed, label="0"];
6->18 [style = bold, label=""];
0->32 [style = dashed, label="0"];
17->12 [style = solid, label="longSum"];
20->6 [style = bold, label=""];
14->8 [style = solid, label="query"];
1->28 [style = dashed, label="0"];
14->33 [style = dashed, label="0"];
26->4 [style = bold, label=""];
14->27 [style = dashed, label="0"];
1->17 [style = bold, label=""];
15->26 [style = bold, label=""];
7->14 [style = bold, label=""];
33->23 [style = bold, label=""];
29->28 [style = bold, label=""];
25->27 [style = bold, label=""];
19->1 [style = bold, label=""];
27->8 [style = solid, label="query"];
18->22 [style = bold, label=""];
17->0 [style = bold, label=""];
21->20 [style = bold, label=""];
23->2 [style = solid, label="operator"];
10->26 [style = dashed, label="0"];
10->4 [style = solid, label="expectedDataSchema"];
14->23 [style = bold, label=""];
24->21 [style = bold, label=""];
13->3 [style = bold, label=""];
14->23 [style = solid, label="query"];
3->8 [style = bold, label=""];
11->13 [style = bold, label=""];
32->31 [style = solid, label="doubleSum"];
10->4 [style = bold, label=""];
33->23 [style = solid, label="query"];
27->23 [style = solid, label="query"];
33->8 [style = solid, label="query"];
9->19 [style = bold, label=""];
16->12 [style = solid, label="doubleSum"];
27->23 [style = bold, label=""];
34->32 [style = bold, label=""];
29->31 [style = solid, label="intSum"];
23->2 [style = bold, label=""];
2->24 [style = bold, label=""];
9->29 [style = bold, label=""];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
22->11 [style = bold, label=""];
32->31 [style = bold, label=""];
28->31 [style = solid, label="longSum"];
}
