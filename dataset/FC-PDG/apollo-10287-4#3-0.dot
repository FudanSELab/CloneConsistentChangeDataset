digraph {
27 [style = filled, label = "RemoteConfigRepository someRepository = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_OK)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "someSecret = \"someSecret\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long someNotificationId = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "doAnswer(new Answer<Void>(){@Override public Void answer(InvocationOnMock invocation){onNotified.set(true)return null}}).when(someRepository).onLongPollNotified(any(),any())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testSubmitLongPollNamespaceWithAccessKeySecret['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "notificationMessages.put(anotherKey,anotherNotificationId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(someRepository,times(1)).onLongPollNotified(any(),any())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(someNotification.getNamespaceName()).thenReturn(someNamespace)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ApolloNotificationMessages captured = captor.getValue()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "long anotherNotificationId = 2@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(pollResponse.getBody()).thenReturn(Lists.newArrayList(someNotification))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ApolloNotificationMessages notificationMessages = new ApolloNotificationMessages()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(someNotificationId,captured.get(someKey).longValue())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testSubmitLongPollNamespaceWith200Response['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "doAnswer(new Answer<HttpResponse<List<ApolloConfigNotification>>>(){@Override public HttpResponse<List<ApolloConfigNotification>> answer(InvocationOnMock invocation){try {TimeUnit.MILLISECONDS.sleep(50)}catch (InterruptedException e) HttpRequest request = invocation.getArgumentAt(0,)Map<String,String> headers = request.getHeaders()assertNotNull(headers)assertTrue(headers.containsKey(Signature.HTTP_HEADER_TIMESTAMP))assertTrue(headers.containsKey(HttpHeaders.AUTHORIZATION))return pollResponse}}).when(httpUtil).doGet(any(),eq(responseType))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "notificationMessages.put(someKey,someNotificationId)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String someKey = \"someKey\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(someNotification.getMessages()).thenReturn(notificationMessages)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "remoteConfigLongPollService.submit(someNamespace,someRepository)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "doAnswer(new Answer<HttpResponse<List<ApolloConfigNotification>>>(){@Override public HttpResponse<List<ApolloConfigNotification>> answer(InvocationOnMock invocation){try {TimeUnit.MILLISECONDS.sleep(50)}catch (InterruptedException e) return pollResponse}}).when(httpUtil).doGet(any(),eq(responseType))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(2,captured.getDetails().size())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String someNamespace = \"someNamespace\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "doAnswer(new Answer<Void>(){@Override public Void answer(InvocationOnMock invocation){onNotified.set(true)return null}}).when(someRepository).onLongPollNotified(any(),any())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "onNotified.get(5000,TimeUnit.MILLISECONDS)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ApolloConfigNotification someNotification = mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(anotherNotificationId,captured.get(anotherKey).longValue())@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final SettableFuture<Boolean> onNotified = SettableFuture.create()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final ArgumentCaptor<ApolloNotificationMessages> captor = ArgumentCaptor.forClass()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "verify(someRepository,times(1)).onLongPollNotified(any(),captor.capture())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testSubmitLongPollNamespaceWithAccessKeySecret['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "String anotherKey = \"anotherKey\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->28 [style = solid, label="someKey"];
23->22 [style = bold, label=""];
11->3 [style = bold, label=""];
4->6 [style = bold, label=""];
29->26 [style = bold, label=""];
27->32 [style = solid, label="someRepository"];
22->30 [style = bold, label=""];
32->13 [style = bold, label=""];
31->1 [style = bold, label=""];
13->19 [style = bold, label=""];
24->3 [style = solid, label="someNotification"];
18->24 [style = bold, label=""];
5->1 [style = bold, label=""];
6->11 [style = bold, label=""];
24->4 [style = bold, label=""];
1->8 [style = bold, label=""];
10->22 [style = solid, label="someNotificationId"];
12->21 [style = bold, label=""];
15->11 [style = solid, label="notificationMessages"];
9->16 [style = dashed, label="0"];
3->7 [style = bold, label=""];
10->28 [style = solid, label="someNotificationId"];
2->17 [style = bold, label=""];
10->12 [style = bold, label=""];
16->29 [style = bold, label=""];
19->16 [style = bold, label=""];
10->18 [style = solid, label="someKey"];
12->18 [style = solid, label="someNotificationId"];
2->32 [style = solid, label="someNamespace"];
7->31 [style = bold, label=""];
17->15 [style = bold, label=""];
17->13 [style = solid, label="someNamespace"];
12->18 [style = bold, label=""];
8->13 [style = bold, label=""];
28->18 [style = bold, label=""];
17->6 [style = solid, label="someNamespace"];
14->2 [style = bold, label=""];
7->5 [style = bold, label=""];
26->23 [style = bold, label=""];
17->6 [style = solid, label="notificationMessages"];
21->18 [style = solid, label="anotherNotificationId"];
0->14 [style = bold, label=""];
25->27 [style = bold, label=""];
20->14 [style = bold, label=""];
4->7 [style = solid, label="someNotification"];
12->18 [style = solid, label="anotherKey"];
15->10 [style = bold, label=""];
2->4 [style = solid, label="someNamespace"];
21->28 [style = bold, label=""];
21->30 [style = solid, label="anotherNotificationId"];
18->4 [style = bold, label=""];
27->2 [style = bold, label=""];
1->32 [style = bold, label=""];
2->13 [style = solid, label="someRepository"];
16->9 [style = bold, label=""];
}
