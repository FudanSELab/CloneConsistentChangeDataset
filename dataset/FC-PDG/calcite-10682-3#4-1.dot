digraph {
2 [style = filled, label = "checkSimplify(le(hRef,hRef),\"true\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),null_(tInt()))),\"false\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "checkSimplify3(ne(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "checkSimplify3(gt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vIntNotNull(1))),\"IS NULL(?0.int0)\")@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "checkSimplify(and(aRef,bRef,aRef),\"AND(?0.a, ?0.b)\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "checkSimplifyUnchanged(ne(iRef,hRef))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "checkSimplify(and(lt(hRef,literal1),or(falseLiteral,gt(jRef,kRef))),\"AND(<(?0.h, 1), >(?0.j, ?0.k))\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "checkSimplify2(and(le(hRef,literal1),ge(hRef,literal1)),\"AND(<=(?0.h, 1), >=(?0.h, 1))\",\"=(?0.h, 1)\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "final RexNode cRef = rexBuilder.makeFieldAccess(range,2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.a, <>(?0.b, ?0.c)))\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "checkSimplify3(le(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vInt(1))),\"IS NOT NULL(?0.int1)\")@@@84@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "checkSimplify(isNotNull(not(vBool())),\"IS NOT NULL(?0.bool0)\")@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,or(falseLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "checkSimplify(le(literal1,literal1),\"true\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final RexNode bRef = rexBuilder.makeFieldAccess(range,1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(not(cRef),dRef,not(eRef)))),\"AND(?0.a, ?0.b, ?0.c, ?0.e, NOT(?0.d))\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkSimplify(or(aRef,bRef,aRef),\"OR(?0.a, ?0.b)\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkSimplify(isNull(nullBool),\"true\")@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkSimplify(and(aRef,and(and(bRef,not(cRef),dRef,not(eRef)),not(eRef))),\"AND(?0.a, ?0.b, ?0.d, NOT(?0.c), NOT(?0.e))\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkSimplify(eq(hRef,hRef),\"true\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(trueLiteral)),\"false\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,falseLiteral,aRef,eRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.e, <>(?0.b, ?0.c)))\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "checkSimplify2(and(lt(hRef,literal1),eq(hRef,literal1),ge(hRef,literal1)),\"AND(<(?0.h, 1), =(?0.h, 1), >=(?0.h, 1))\",\"false\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),literal(BigDecimal.ONE))),\"IS NOT NULL(?0.int0)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "checkSimplify(ge(literal1,literal1),\"true\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NULL,aRef),\"false\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vIntNotNull(1))),\"true\")@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final RexLiteral literal1 = rexBuilder.makeExactLiteral(BigDecimal.ONE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "checkSimplify(gt(literal1,literal1),\"false\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "checkSimplifyDynamicParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "checkSimplify(case_(eq(falseLiteral,falseLiteral),falseLiteral,eq(falseLiteral,falseLiteral),trueLiteral,trueLiteral),\"false\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "checkSimplify(isNotNull(lt(vIntNotNull(2),vIntNotNull(3))),\"true\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "checkSimplify(gt(hRef,hRef),\"false\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "checkSimplify(ne(literal1,literal1),\"false\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RexNode kRef = rexBuilder.makeFieldAccess(range,10)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vIntNotNull(2))),\"IS NOT NULL(?0.int0)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "checkSimplify(lt(literal1,literal1),\"false\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final RelDataType intNullableType = typeFactory.createTypeWithNullability(intType,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "checkSimplify(ge(hRef,hRef),\"true\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "checkSimplify(ne(hRef,hRef),\"false\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final RexNode dRef = rexBuilder.makeFieldAccess(range,3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "checkSimplifyUnchanged(gt(iRef,hRef))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,eRef,falseLiteral,trueLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)), AND(NOT(?0.b), NOT(?0.c), NOT(?0.e)))\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final RexNode hRef = rexBuilder.makeFieldAccess(range,7)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testSimplify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RexNode jRef = rexBuilder.makeFieldAccess(range,9)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "checkSimplify(isNull(not(vBoolNotNull())),\"false\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "checkSimplifyUnchanged(eq(iRef,hRef))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vInt(1))),\"IS NULL(?0.int1)\")@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,falseLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)))\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,trueLiteral)),\"true\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "checkSimplify(or(aRef,bRef,falseLiteral),\"OR(?0.a, ?0.b)\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "testSimplify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "final RexNode eRef = rexBuilder.makeFieldAccess(range,4)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final RexNode iRef = rexBuilder.makeFieldAccess(range,8)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vIntNotNull(1))),\"IS NOT NULL(?0.int0)\")@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final RexNode aRef = rexBuilder.makeFieldAccess(range,0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "checkSimplify(and(aRef,bRef,trueLiteral),\"AND(?0.a, ?0.b)\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(cRef),not(aRef)),\"AND(?0.b, NOT(?0.a), NOT(?0.c))\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vInt(1))),\"OR(IS NULL(?0.int0), IS NULL(?0.int1))\")@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(cRef,or(dRef,eRef)))),\"AND(?0.a, ?0.b, NOT(?0.c), NOT(?0.d), NOT(?0.e))\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,or(trueLiteral,falseLiteral))),\"true\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkSimplify3(case_(aRef,trueLiteral,bRef,trueLiteral,cRef,falseLiteral,nullBool),\"OR(?0.a, ?0.b, AND(null, NOT(?0.a), NOT(?0.b), NOT(?0.c)))\",\"OR(?0.a, ?0.b)\",\"OR(?0.a, ?0.b, NOT(?0.c))\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "checkSimplify(eq(literal1,literal1),\"true\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "checkSimplify3(ge(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkSimplifyUnchanged(ge(iRef,hRef))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,and(trueLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "checkSimplify(and(lt(hRef,literal1),or(falseLiteral,falseLiteral)),\"false\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkSimplifyUnchanged(lt(iRef,hRef))@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkSimplify3(lt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final RelDataType intType = typeFactory.createSqlType(SqlTypeName.INTEGER)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "checkSimplify(case_(trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"?0.a\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final RelDataType booleanType = typeFactory.createSqlType(SqlTypeName.BOOLEAN)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final RexDynamicParam range = rexBuilder.makeDynamicParam(rowType,0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "checkSimplify(lt(hRef,hRef),\"false\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "final RelDataType rowType = typeFactory.builder().add(\"a\",booleanType).add(\"b\",booleanType).add(\"c\",booleanType).add(\"d\",booleanType).add(\"e\",booleanType).add(\"f\",booleanType).add(\"g\",booleanType).add(\"h\",intType).add(\"i\",intNullableType).add(\"j\",intType).add(\"k\",intType).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vIntNotNull(1))),\"false\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkSimplify(and(aRef,bRef,falseLiteral),\"false\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "checkSimplify3(eq(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "checkSimplify(case_(aRef,literal1,bRef,literal1,cRef,literal1,dRef,literal1,literal1),\"1\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "checkSimplify(isNotNull(not(vBoolNotNull())),\"true\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_NULL,aRef),\"true\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "checkSimplifyUnchanged(le(iRef,hRef))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "checkSimplify(isNull(not(vBool())),\"IS NULL(?0.bool0)\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "checkSimplify(or(aRef,bRef,trueLiteral),\"true\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "checkSimplify2(and(le(hRef,literal1),gt(hRef,literal1)),\"AND(<=(?0.h, 1), >(?0.h, 1))\",\"false\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81->29 [style = bold, label=""];
79->8 [style = bold, label=""];
62->3 [style = bold, label=""];
22->31 [style = solid, label="aRef"];
53->20 [style = solid, label="bRef"];
30->9 [style = solid, label="hRef"];
30->57 [style = solid, label="hRef"];
39->69 [style = solid, label="literal1"];
30->46 [style = solid, label="hRef"];
39->9 [style = solid, label="literal1"];
68->31 [style = bold, label=""];
62->7 [style = solid, label="iRef"];
67->22 [style = solid, label="range"];
53->12 [style = solid, label="bRef"];
30->74 [style = solid, label="hRef"];
3->36 [style = solid, label="jRef"];
67->44 [style = solid, label="range"];
39->77 [style = solid, label="literal1"];
17->45 [style = bold, label=""];
66->12 [style = solid, label="cRef"];
44->12 [style = solid, label="eRef"];
85->86 [style = bold, label=""];
67->53 [style = solid, label="range"];
82->46 [style = bold, label=""];
16->60 [style = bold, label=""];
45->24 [style = bold, label=""];
30->48 [style = solid, label="hRef"];
66->27 [style = solid, label="cRef"];
14->7 [style = bold, label=""];
58->61 [style = solid, label="dRef"];
1->68 [style = bold, label=""];
39->35 [style = solid, label="literal1"];
30->18 [style = solid, label="hRef"];
71->67 [style = bold, label=""];
36->0 [style = bold, label=""];
10->39 [style = bold, label=""];
39->51 [style = bold, label=""];
65->16 [style = bold, label=""];
44->70 [style = solid, label="eRef"];
22->51 [style = solid, label="aRef"];
47->26 [style = bold, label=""];
66->5 [style = solid, label="cRef"];
62->56 [style = solid, label="iRef"];
22->41 [style = solid, label="aRef"];
22->24 [style = solid, label="aRef"];
62->74 [style = solid, label="iRef"];
15->82 [style = bold, label=""];
22->4 [style = solid, label="aRef"];
22->27 [style = solid, label="aRef"];
53->51 [style = solid, label="bRef"];
22->68 [style = solid, label="aRef"];
22->17 [style = solid, label="aRef"];
30->6 [style = solid, label="hRef"];
53->17 [style = solid, label="bRef"];
58->70 [style = solid, label="dRef"];
66->45 [style = solid, label="cRef"];
39->36 [style = solid, label="literal1"];
50->43 [style = bold, label=""];
22->34 [style = solid, label="aRef"];
30->15 [style = solid, label="hRef"];
53->27 [style = solid, label="bRef"];
44->54 [style = solid, label="eRef"];
33->28 [style = bold, label=""];
59->32 [style = bold, label=""];
10->36 [style = solid, label="kRef"];
31->70 [style = bold, label=""];
39->23 [style = solid, label="literal1"];
62->33 [style = solid, label="iRef"];
18->56 [style = bold, label=""];
67->3 [style = solid, label="range"];
54->41 [style = bold, label=""];
42->72 [style = bold, label=""];
44->34 [style = solid, label="eRef"];
67->30 [style = solid, label="range"];
53->80 [style = solid, label="bRef"];
62->55 [style = solid, label="iRef"];
8->38 [style = bold, label=""];
60->48 [style = bold, label=""];
67->22 [style = bold, label=""];
66->61 [style = solid, label="cRef"];
53->45 [style = solid, label="bRef"];
24->20 [style = bold, label=""];
58->12 [style = solid, label="dRef"];
3->10 [style = bold, label=""];
66->4 [style = solid, label="cRef"];
22->61 [style = solid, label="aRef"];
21->37 [style = bold, label=""];
78->11 [style = bold, label=""];
0->23 [style = bold, label=""];
30->37 [style = solid, label="hRef"];
22->20 [style = solid, label="aRef"];
7->76 [style = bold, label=""];
22->5 [style = solid, label="aRef"];
58->34 [style = solid, label="dRef"];
32->81 [style = bold, label=""];
30->23 [style = solid, label="hRef"];
22->38 [style = solid, label="aRef"];
22->8 [style = solid, label="aRef"];
39->76 [style = solid, label="literal1"];
71->67 [style = solid, label="rowType"];
22->54 [style = solid, label="aRef"];
62->65 [style = solid, label="iRef"];
62->43 [style = solid, label="iRef"];
39->82 [style = solid, label="literal1"];
67->66 [style = solid, label="range"];
57->69 [style = bold, label=""];
53->5 [style = solid, label="bRef"];
44->5 [style = solid, label="eRef"];
53->31 [style = solid, label="bRef"];
52->15 [style = bold, label=""];
44->30 [style = bold, label=""];
41->27 [style = bold, label=""];
30->77 [style = solid, label="hRef"];
64->19 [style = bold, label=""];
62->50 [style = solid, label="iRef"];
30->7 [style = solid, label="hRef"];
77->73 [style = bold, label=""];
75->40 [style = bold, label=""];
62->14 [style = solid, label="iRef"];
48->14 [style = bold, label=""];
76->18 [style = bold, label=""];
62->16 [style = solid, label="iRef"];
22->45 [style = solid, label="aRef"];
66->20 [style = solid, label="cRef"];
73->57 [style = bold, label=""];
67->58 [style = solid, label="range"];
53->1 [style = solid, label="bRef"];
39->41 [style = solid, label="literal1"];
19->59 [style = bold, label=""];
58->20 [style = solid, label="dRef"];
5->79 [style = bold, label=""];
74->25 [style = bold, label=""];
4->54 [style = bold, label=""];
53->70 [style = solid, label="bRef"];
44->20 [style = solid, label="eRef"];
67->10 [style = solid, label="range"];
66->58 [style = bold, label=""];
30->16 [style = solid, label="hRef"];
6->55 [style = bold, label=""];
58->4 [style = solid, label="dRef"];
30->69 [style = solid, label="hRef"];
39->28 [style = solid, label="literal1"];
67->62 [style = solid, label="range"];
58->41 [style = solid, label="dRef"];
84->85 [style = bold, label=""];
26->71 [style = bold, label=""];
70->4 [style = bold, label=""];
56->74 [style = bold, label=""];
25->42 [style = bold, label=""];
11->75 [style = bold, label=""];
83->49 [style = bold, label=""];
37->52 [style = bold, label=""];
58->54 [style = solid, label="dRef"];
62->52 [style = solid, label="iRef"];
39->57 [style = solid, label="literal1"];
62->15 [style = solid, label="iRef"];
39->60 [style = solid, label="literal1"];
88->87 [style = bold, label=""];
89->84 [style = bold, label=""];
30->43 [style = solid, label="hRef"];
39->21 [style = solid, label="literal1"];
43->21 [style = bold, label=""];
30->2 [style = solid, label="hRef"];
66->41 [style = solid, label="cRef"];
58->5 [style = solid, label="dRef"];
30->33 [style = solid, label="hRef"];
61->5 [style = bold, label=""];
27->61 [style = bold, label=""];
35->6 [style = bold, label=""];
34->1 [style = bold, label=""];
86->88 [style = bold, label=""];
63->49 [style = bold, label=""];
66->70 [style = solid, label="cRef"];
53->41 [style = solid, label="bRef"];
40->64 [style = bold, label=""];
38->77 [style = bold, label=""];
12->34 [style = bold, label=""];
22->80 [style = solid, label="aRef"];
53->34 [style = solid, label="bRef"];
39->73 [style = solid, label="literal1"];
30->13 [style = solid, label="hRef"];
2->50 [style = bold, label=""];
39->13 [style = solid, label="literal1"];
58->44 [style = bold, label=""];
49->47 [style = bold, label=""];
72->78 [style = bold, label=""];
69->36 [style = bold, label=""];
22->12 [style = solid, label="aRef"];
22->70 [style = solid, label="aRef"];
28->2 [style = bold, label=""];
53->24 [style = solid, label="bRef"];
22->53 [style = bold, label=""];
22->1 [style = solid, label="aRef"];
66->34 [style = solid, label="cRef"];
30->36 [style = solid, label="hRef"];
66->54 [style = solid, label="cRef"];
44->4 [style = solid, label="eRef"];
53->66 [style = bold, label=""];
30->0 [style = solid, label="hRef"];
20->12 [style = bold, label=""];
80->17 [style = bold, label=""];
30->73 [style = solid, label="hRef"];
39->0 [style = solid, label="literal1"];
53->61 [style = solid, label="bRef"];
47->26 [style = solid, label="intType"];
46->65 [style = bold, label=""];
53->4 [style = solid, label="bRef"];
23->9 [style = bold, label=""];
13->35 [style = bold, label=""];
51->80 [style = bold, label=""];
55->33 [style = bold, label=""];
30->62 [style = bold, label=""];
9->13 [style = bold, label=""];
53->68 [style = solid, label="bRef"];
}
