digraph {
14 [style = filled, label = "assertThat(exception.getMessage(),startsWith(\"alias (alias( has more than one write index (\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertAliasesVersionIncreased(\"test2\",before,after)@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ClusterState before = ClusterState.builder(ClusterName.DEFAULT).metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ClusterState after = service.innerExecute(before,swapActions)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertAliasesVersionIncreased(\"test\",before,after)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Boolean unsetValue = randomBoolean()? null: false@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSwapWriteOnlyIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<AliasAction> swapActions = Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,unsetValue),new AliasAction.Add(\"test2\",\"alias\",null,null,null,true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSwapWriteOnlyIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Exception exception = expectThrows(,null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\").putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build()).settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(after.metaData().index(\"test2\").getAliases().get(\"alias\").writeIndex())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex(),equalTo(unsetValue))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testAddWriteOnlyValidatesAgainstMetaDataBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Collections.shuffle(swapActions,random())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(((AliasOrIndex.Alias)after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),equalTo(after.metaData().index(\"test2\")))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
12->0 [style = bold, label=""];
4->7 [style = bold, label=""];
1->10 [style = bold, label=""];
3->9 [style = solid, label="swapActions"];
9->4 [style = bold, label=""];
17->14 [style = bold, label=""];
10->11 [style = bold, label=""];
2->11 [style = solid, label="before"];
2->4 [style = solid, label="before"];
2->17 [style = bold, label=""];
8->3 [style = bold, label=""];
6->2 [style = bold, label=""];
2->8 [style = bold, label=""];
4->11 [style = solid, label="after"];
2->13 [style = solid, label="before"];
0->16 [style = dashed, label="0"];
5->0 [style = bold, label=""];
8->7 [style = solid, label="unsetValue"];
3->9 [style = bold, label=""];
4->13 [style = solid, label="after"];
16->6 [style = bold, label=""];
15->16 [style = bold, label=""];
11->13 [style = bold, label=""];
7->1 [style = bold, label=""];
3->4 [style = solid, label="swapActions"];
8->3 [style = solid, label="unsetValue"];
}
