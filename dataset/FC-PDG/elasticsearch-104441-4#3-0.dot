digraph {
18 [style = filled, label = "innerConfig.put(\"pipeline\",outerPipelineId)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(ingestService.getPipeline(innerPipelineId)).thenReturn(inner)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "outerConfig.put(\"pipeline\",innerPipelineId)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Pipeline inner = new Pipeline(innerPipelineId,null,null,new CompoundProcessor(factory.create(Collections.emptyMap(),null,innerConfig)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testThrowsOnRecursivePipelineInvocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,Object> outerConfig = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IngestDocument testIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),new HashMap<>())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<String,Object> innerConfig = new HashMap<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "outerConfig.put(\"pipeline\",innerPipelineId)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String outerPipelineId = \"outer\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "outerProc.execute(testIngestDocument)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "outerProc.execute(testIngestDocument)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(ingestService.getPipeline(outerPipelineId)).thenReturn(outer)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Processor outerProc = factory.create(Collections.emptyMap(),null,outerConfig)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testAllowsRepeatedPipelineInvocations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ElasticsearchException e = expectThrows(,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String innerPipelineId = \"inner\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Pipeline outer = new Pipeline(outerPipelineId,null,null,new CompoundProcessor(factory.create(Collections.emptyMap(),null,outerConfig)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(ingestService.getPipeline(innerPipelineId)).thenReturn(inner)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testAllowsRepeatedPipelineInvocations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "IngestService ingestService = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "outerConfig.put(\"name\",innerPipelineId)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(\"Cycle detected for pipeline: inner\",e.getRootCause().getMessage())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Pipeline inner = new Pipeline(innerPipelineId,null,null,new CompoundProcessor())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->13 [style = dashed, label="0"];
21->18 [style = solid, label="outerPipelineId"];
9->11 [style = bold, label=""];
24->18 [style = bold, label=""];
0->5 [style = solid, label="outerConfig"];
8->23 [style = solid, label="innerPipelineId"];
6->0 [style = bold, label=""];
19->8 [style = bold, label=""];
6->1 [style = solid, label="testIngestDocument"];
7->6 [style = bold, label=""];
8->13 [style = solid, label="innerPipelineId"];
4->8 [style = bold, label=""];
16->22 [style = bold, label=""];
8->9 [style = solid, label="innerPipelineId"];
22->17 [style = bold, label=""];
0->13 [style = bold, label=""];
5->10 [style = bold, label=""];
8->21 [style = bold, label=""];
3->20 [style = bold, label=""];
2->3 [style = bold, label=""];
10->1 [style = bold, label=""];
20->14 [style = solid, label="outer"];
7->3 [style = solid, label="ingestService"];
23->15 [style = solid, label="inner"];
8->2 [style = solid, label="innerPipelineId"];
3->9 [style = bold, label=""];
9->11 [style = solid, label="inner"];
15->16 [style = bold, label=""];
9->20 [style = dashed, label="0"];
21->7 [style = bold, label=""];
23->14 [style = bold, label=""];
20->24 [style = bold, label=""];
13->3 [style = bold, label=""];
6->10 [style = solid, label="testIngestDocument"];
8->7 [style = bold, label=""];
8->16 [style = solid, label="innerPipelineId"];
0->2 [style = bold, label=""];
0->20 [style = solid, label="outerConfig"];
14->15 [style = bold, label=""];
12->8 [style = bold, label=""];
24->23 [style = solid, label="innerConfig"];
21->20 [style = solid, label="outerPipelineId"];
10->22 [style = dashed, label="0"];
11->5 [style = bold, label=""];
18->23 [style = bold, label=""];
}
