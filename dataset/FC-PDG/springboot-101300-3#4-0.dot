digraph {
14 [style = filled, label = "assertThat(namesFromConfiguration(\"host(0(.name\")).containsExactly(\"host(0(.name\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(namesFromConfiguration(\"host(0(\")).containsExactly(\"host(0(\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(namesFromConfiguration(\"server.port\")).containsExactly(\"SERVER_PORT\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(namesFromConfiguration(\"host(0((1(\")).containsExactly(\"HOST_0_1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(namesFromConfiguration(\"foo.the-bar\")).containsExactly(\"FOO_THEBAR\",\"FOO_THE_BAR\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(namesFromConfiguration(\"host(0(\")).containsExactly(\"HOST_0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "mapFromConfigurationShouldReturnBestGuess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(namesFromConfiguration(\"host(FOO(.name\")).containsExactly(\"host(FOO(.name\")@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(namesFromConfiguration(\"host.f00.name\")).containsExactly(\"HOST_F00_NAME\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "mapFromConfigurationShouldReturnBestGuess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(namesFromConfiguration(\"my.host-name\")).containsExactly(\"my.host-name\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mapFromConfigurationShouldReturnBestGuess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(namesFromConfiguration(\"host.f00.name\")).containsExactly(\"host.f00.name\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(namesFromConfiguration(\"host(0(.name\")).containsExactly(\"HOST_0_NAME\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(namesFromConfiguration(\"foo.the-bar\")).containsExactly(\"FOO_THEBAR\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertThat(namesFromConfiguration(\"host(0((1(\")).containsExactly(\"host(0((1(\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(namesFromConfiguration(\"server.port\")).containsExactly(\"server.port\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(namesFromConfiguration(\"server\")).containsExactly(\"server\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(namesFromConfiguration(\"server\")).containsExactly(\"SERVER\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->18 [style = bold, label=""];
11->14 [style = bold, label=""];
2->6 [style = bold, label=""];
7->16 [style = dashed, label="0"];
18->11 [style = bold, label=""];
7->0 [style = bold, label=""];
10->17 [style = bold, label=""];
4->12 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
5->17 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
9->5 [style = bold, label=""];
0->18 [style = dashed, label="0"];
5->7 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
17->16 [style = bold, label=""];
}
