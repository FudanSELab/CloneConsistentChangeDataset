digraph {
0 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "columnLabelIndexMap.put(\"id\",3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,Integer> columnLabelIndexMap = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSetIndexForItemsByColumnOrderByWithAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(3))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(selectStatement,new GroupByContext(Collections.emptyList(),0),createOrderBy(COLUMN_ORDER_BY_WITHOUT_OWNER_ALIAS),createProjectionsContext(),null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "columnLabelIndexMap.put(\"n\",2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "selectStatementContext.setIndexes(columnLabelIndexMap)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(2))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertSetIndexForItemsByColumnOrderByWithoutAlias['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(selectStatement,new GroupByContext(Collections.emptyList(),0),createOrderBy(COLUMN_ORDER_BY_WITH_ALIAS),createProjectionsContext(),null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(selectStatement,new GroupByContext(Collections.emptyList()),createOrderBy(COLUMN_ORDER_BY_WITH_ALIAS),createProjectionsContext(),null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertSetIndexForItemsByColumnOrderByWithAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
11->12 [style = solid, label="selectStatement"];
3->7 [style = dashed, label="0"];
2->6 [style = bold, label=""];
1->3 [style = bold, label=""];
0->3 [style = solid, label="selectStatement"];
5->9 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
8->7 [style = bold, label=""];
2->13 [style = bold, label=""];
6->4 [style = bold, label=""];
2->4 [style = solid, label="columnLabelIndexMap"];
12->2 [style = bold, label=""];
3->12 [style = dashed, label="0"];
6->13 [style = dashed, label="0"];
3->2 [style = bold, label=""];
10->11 [style = dotted, label="true"];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
0->7 [style = solid, label="selectStatement"];
8->0 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
4->5 [style = bold, label=""];
13->4 [style = bold, label=""];
}
