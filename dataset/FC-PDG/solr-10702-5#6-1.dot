digraph {
59 [style = filled, label = "testParallelCommitStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "solrStream.close()@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
121 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@117@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "iterations == 0@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection1\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"commit\",).withFunctionName(\"parallel\",).withFunctionName(\"daemon\",)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "count += tuple.getLong(\"batchIndexed\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assert(count == 5)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "int iterations = 0@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assert(tuples.size() == 2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@118@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@122@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@130@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "int workersComplete = 0@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "testParallelDaemonCommitStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@121@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@116@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "String updateExpression = \"daemon(commit(parallelDestinationCollection1, batchSize=0, zkHost=\"\" + cluster.getZkServer().getZkAddress() + \"\", update(parallelDestinationCollection1, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\"))), runInterval=\"1000\", id=\"test\")\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@126@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
136 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT,\"/stream\",\"action\",\"list\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "sParams.set(\"id\",\"test\")@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "sParams.set(\"action\",\"list\")@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "{}@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection\").process(cluster.getSolrClient())solrClientCache.close()}@@@65@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "parallelUpdateStream.setStreamContext(streamContext)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "l > 0@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@115@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
148 [style = filled, label = "tuple = tuples.get(2)@@@113@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "stopTime = tupleResponse.getLong(\"stopTime\")@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "tuple = tuples.get(1)@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "long stopTime = 0@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@123@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Tuple tuple = tuples.get(0)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "solrStream.open()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "solrStream.open()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@124@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "tuples = getTuples(stream)@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
154 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@132@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"parallelDestinationCollection1\",cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\",\"s_multi\",\"aaaa\",\"s_multi\",\"bbbb\",\"i_multi\",\"4\",\"i_multi\",\"7\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\",\"s_multi\",\"aaaa1\",\"s_multi\",\"bbbb1\",\"i_multi\",\"44\",\"i_multi\",\"77\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\",\"s_multi\",\"aaaa2\",\"s_multi\",\"bbbb2\",\"i_multi\",\"444\",\"i_multi\",\"777\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\",\"s_multi\",\"aaaa3\",\"s_multi\",\"bbbb3\",\"i_multi\",\"4444\",\"i_multi\",\"7777\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\",\"s_multi\",\"aaaa4\",\"s_multi\",\"bbbb4\",\"i_multi\",\"44444\",\"i_multi\",\"77777\").commit(cluster.getSolrClient(),\"collection1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "tupleResponse.EOF@@@73@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
132 [style = filled, label = "{}@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "solrStream.close()@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@128@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
153 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TupleStream stream@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "long count = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@112@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "iterations = (int)l@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@114@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection1\").process(cluster.getSolrClient())solrClientCache.close()}@@@135@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "++workersComplete@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
152 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
147 [style = filled, label = "sParams.set(\"action\",\"stop\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "tuple = tuples.get(4)@@@127@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "sParams = new ModifiableSolrParams()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "tuple = tuples.get(4)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "Exception e@@@86@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "Thread.sleep(1000)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "stopTime > 0@@@79@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "tuple = tuples.get(1)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "Exception e@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "TupleStream parallelUpdateStream = factory.constructStream(\"parallel(collection1, \" + updateExpression + \", workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"batchNumber asc\")\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Tuple> tuples = getTuples(parallelUpdateStream)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "solrStream.close()@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "StreamExpression expression@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection1\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "assertEquals(5,tuples.size())@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "String updateExpression = \"commit(parallelDestinationCollection, batchSize=0, zkHost=\"\" + cluster.getZkServer().getZkAddress() + \"\", update(parallelDestinationCollection, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\")))\"@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testParallelCommitStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"commit\",).withFunctionName(\"parallel\",)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "++workersComplete@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "solrStream.open()@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "stream.setStreamContext(streamContext)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@133@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Tuple t@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "tuple = tuples.get(3)@@@120@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@93@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "cluster.waitForActiveCollection(\"parallelDestinationCollection\",2,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
116 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
140 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tuple = tuples.get(2)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"parallelDestinationCollection\",cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@131@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
139 [style = filled, label = "solrStream.close()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@110@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
156 [style = filled, label = "stopTime == 0@@@68@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "Tuple tuple = tuples.get(0)@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "workersComplete = 0@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
155 [style = filled, label = "solrStream.close()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@125@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
118 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@129@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(5,tuples.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "long l = tupleResponse.getLong(\"iterations\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "tupleResponse.EOF@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "sParams = new ModifiableSolrParams()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
141 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\",sParams)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "tuple = tuples.get(3)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@119@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "stream.setStreamContext(streamContext)@@@96@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "tuples = getTuples(stream)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "Thread.sleep(1000)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77->145 [style = bold, label=""];
55->17 [style = bold, label=""];
27->32 [style = bold, label=""];
95->146 [style = bold, label=""];
84->79 [style = bold, label=""];
2->51 [style = bold, label=""];
152->138 [style = bold, label=""];
60->29 [style = bold, label=""];
10->19 [style = bold, label=""];
49->45 [style = solid, label="stream"];
21->58 [style = bold, label=""];
103->135 [style = bold, label=""];
97->119 [style = bold, label=""];
117->139 [style = dotted, label="false"];
84->141 [style = solid, label="sParams"];
26->9 [style = bold, label=""];
66->62 [style = bold, label=""];
49->0 [style = bold, label=""];
144->132 [style = bold, label=""];
88->65 [style = bold, label=""];
136->153 [style = bold, label=""];
93->66 [style = solid, label="sParams"];
123->139 [style = bold, label=""];
3->18 [style = bold, label=""];
51->62 [style = solid, label="streamContext"];
8->36 [style = bold, label=""];
38->8 [style = solid, label="count"];
77->145 [style = dotted, label="true"];
79->107 [style = solid, label="workersComplete"];
71->74 [style = bold, label=""];
53->41 [style = solid, label="updateExpression"];
117->112 [style = dotted, label="false"];
50->55 [style = bold, label=""];
106->142 [style = bold, label=""];
57->94 [style = dashed, label="0"];
53->41 [style = bold, label=""];
69->72 [style = bold, label=""];
33->56 [style = bold, label=""];
96->76 [style = bold, label=""];
35->10 [style = bold, label=""];
41->22 [style = bold, label=""];
114->90 [style = solid, label="sParams"];
6->46 [style = bold, label=""];
117->123 [style = dotted, label="false"];
97->141 [style = bold, label=""];
156->76 [style = dotted, label="true"];
81->90 [style = bold, label=""];
73->116 [style = bold, label=""];
118->67 [style = bold, label=""];
48->24 [style = bold, label=""];
122->41 [style = solid, label="updateExpression"];
29->143 [style = dashed, label="0"];
25->21 [style = bold, label=""];
51->22 [style = solid, label="streamContext"];
63->111 [style = bold, label=""];
46->42 [style = bold, label=""];
77->126 [style = bold, label=""];
124->140 [style = bold, label=""];
78->108 [style = bold, label=""];
104->143 [style = bold, label=""];
15->13 [style = bold, label=""];
129->137 [style = bold, label=""];
37->26 [style = bold, label=""];
126->123 [style = bold, label=""];
9->33 [style = bold, label=""];
132->123 [style = bold, label=""];
115->127 [style = bold, label=""];
67->87 [style = bold, label=""];
18->11 [style = bold, label=""];
51->92 [style = solid, label="streamContext"];
131->149 [style = bold, label=""];
51->152 [style = solid, label="streamContext"];
122->41 [style = bold, label=""];
113->85 [style = bold, label=""];
94->50 [style = bold, label=""];
68->88 [style = bold, label=""];
146->130 [style = solid, label="workersComplete"];
63->111 [style = solid, label="expression"];
151->156 [style = bold, label=""];
143->94 [style = bold, label=""];
77->126 [style = dotted, label="true"];
24->47 [style = bold, label=""];
13->101 [style = bold, label=""];
83->98 [style = dotted, label="false"];
97->92 [style = dotted, label="true"];
127->118 [style = bold, label=""];
98->113 [style = solid, label="stopTime"];
7->5 [style = bold, label=""];
156->62 [style = dotted, label="true"];
117->77 [style = dotted, label="false"];
83->113 [style = dotted, label="false"];
17->2 [style = bold, label=""];
30->101 [style = dashed, label="0"];
36->49 [style = bold, label=""];
92->73 [style = bold, label=""];
89->102 [style = bold, label=""];
70->147 [style = bold, label=""];
147->81 [style = bold, label=""];
146->151 [style = bold, label=""];
1->75 [style = bold, label=""];
47->44 [style = bold, label=""];
79->119 [style = bold, label=""];
51->110 [style = solid, label="streamContext"];
44->37 [style = bold, label=""];
113->80 [style = dotted, label="true"];
34->38 [style = bold, label=""];
101->122 [style = bold, label=""];
20->7 [style = bold, label=""];
14->39 [style = bold, label=""];
29->57 [style = bold, label=""];
156->151 [style = bold, label=""];
156->66 [style = dotted, label="true"];
101->111 [style = solid, label="factory"];
29->61 [style = bold, label=""];
153->120 [style = bold, label=""];
112->77 [style = solid, label="l"];
114->70 [style = bold, label=""];
31->25 [style = bold, label=""];
123->97 [style = solid, label="iterations"];
97->117 [style = dotted, label="true"];
56->31 [style = bold, label=""];
83->98 [style = bold, label=""];
0->45 [style = bold, label=""];
53->122 [style = dashed, label="0"];
98->113 [style = bold, label=""];
54->43 [style = bold, label=""];
134->129 [style = bold, label=""];
51->12 [style = bold, label=""];
42->52 [style = bold, label=""];
111->110 [style = bold, label=""];
91->124 [style = bold, label=""];
128->89 [style = bold, label=""];
36->49 [style = solid, label="expression"];
90->152 [style = bold, label=""];
74->90 [style = bold, label=""];
80->100 [style = bold, label=""];
30->53 [style = bold, label=""];
138->71 [style = bold, label=""];
141->92 [style = bold, label=""];
32->16 [style = bold, label=""];
149->64 [style = bold, label=""];
117->112 [style = bold, label=""];
110->134 [style = bold, label=""];
154->106 [style = bold, label=""];
85->100 [style = bold, label=""];
83->105 [style = bold, label=""];
98->156 [style = solid, label="stopTime"];
74->93 [style = bold, label=""];
87->154 [style = bold, label=""];
30->49 [style = solid, label="factory"];
135->148 [style = bold, label=""];
19->54 [style = bold, label=""];
112->77 [style = bold, label=""];
99->100 [style = bold, label=""];
1->34 [style = bold, label=""];
121->133 [style = bold, label=""];
43->14 [style = bold, label=""];
58->23 [style = bold, label=""];
52->40 [style = bold, label=""];
23->6 [style = bold, label=""];
108->86 [style = bold, label=""];
4->20 [style = bold, label=""];
133->131 [style = bold, label=""];
151->156 [style = solid, label="stopTime"];
139->97 [style = bold, label=""];
130->63 [style = bold, label=""];
38->8 [style = bold, label=""];
22->1 [style = bold, label=""];
102->121 [style = bold, label=""];
57->61 [style = dashed, label="0"];
16->4 [style = bold, label=""];
117->155 [style = dotted, label="true"];
156->83 [style = dotted, label="true"];
100->156 [style = bold, label=""];
120->78 [style = bold, label=""];
156->96 [style = dotted, label="true"];
97->116 [style = dotted, label="true"];
93->82 [style = bold, label=""];
125->99 [style = bold, label=""];
156->66 [style = bold, label=""];
62->96 [style = bold, label=""];
51->0 [style = solid, label="streamContext"];
57->50 [style = bold, label=""];
45->3 [style = bold, label=""];
137->136 [style = bold, label=""];
64->69 [style = bold, label=""];
75->84 [style = bold, label=""];
65->115 [style = bold, label=""];
12->15 [style = bold, label=""];
41->1 [style = solid, label="parallelUpdateStream"];
105->130 [style = bold, label=""];
117->155 [style = bold, label=""];
107->114 [style = bold, label=""];
116->117 [style = bold, label=""];
97->141 [style = dotted, label="true"];
13->30 [style = bold, label=""];
40->28 [style = bold, label=""];
150->103 [style = bold, label=""];
39->27 [style = bold, label=""];
148->128 [style = bold, label=""];
11->35 [style = bold, label=""];
140->150 [style = bold, label=""];
83->105 [style = dotted, label="true"];
97->107 [style = bold, label=""];
112->123 [style = solid, label="l"];
76->83 [style = bold, label=""];
12->15 [style = solid, label="solrClientCache"];
59->29 [style = bold, label=""];
119->97 [style = solid, label="iterations"];
13->41 [style = solid, label="zkHost"];
109->91 [style = bold, label=""];
113->80 [style = bold, label=""];
119->97 [style = bold, label=""];
61->50 [style = bold, label=""];
5->48 [style = bold, label=""];
111->134 [style = solid, label="stream"];
86->109 [style = bold, label=""];
155->107 [style = bold, label=""];
156->130 [style = bold, label=""];
72->68 [style = bold, label=""];
113->85 [style = dotted, label="true"];
97->73 [style = dotted, label="true"];
82->95 [style = bold, label=""];
145->123 [style = bold, label=""];
83->100 [style = dotted, label="false"];
}
