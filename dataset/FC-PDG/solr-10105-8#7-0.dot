digraph {
18 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"id\",id))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"threads\",Integer.toString(threads)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"from\",fromNode))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"partitionSize\",Integer.toString(joinBatchSize)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey().toString(),value))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ModifiableSolrParams mParams = new ModifiableSolrParams(queryParams)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ModifiableSolrParams mParams = new ModifiableSolrParams(params)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"to\",toNode))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expression.addParameter(checkpointCollection)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return expression@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),value))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "initialCheckpoint > -1@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"maxDepth\",Integer.toString(maxDepth)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"edge\",fromField + \"=\" + toField))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "value = value.replace(\"\"\",\"\\\"\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"checkpointEvery\",Long.toString(checkpointEvery)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"initialCheckpoint\",Long.toString(initialCheckpoint)))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return expression@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String value = String.join(\",\",param.getValue())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->0 [style = bold, label=""];
3->10 [style = bold, label=""];
13->15 [style = bold, label=""];
5->11 [style = dotted, label="true"];
8->9 [style = bold, label=""];
2->4 [style = bold, label=""];
14->3 [style = bold, label=""];
10->6 [style = bold, label=""];
20->16 [style = bold, label=""];
23->24 [style = bold, label=""];
16->25 [style = bold, label=""];
24->20 [style = bold, label=""];
1->21 [style = bold, label=""];
4->8 [style = bold, label=""];
19->0 [style = bold, label=""];
26->18 [style = dotted, label="true"];
6->19 [style = bold, label=""];
25->17 [style = bold, label=""];
0->1 [style = bold, label=""];
3->17 [style = solid, label="expression"];
21->2 [style = bold, label=""];
3->6 [style = bold, label=""];
8->23 [style = dashed, label="0"];
1->7 [style = solid, label="value"];
7->21 [style = dashed, label="0"];
1->21 [style = solid, label="value"];
12->19 [style = dashed, label="0"];
7->0 [style = bold, label=""];
2->22 [style = bold, label=""];
3->9 [style = solid, label="expression"];
11->18 [style = dashed, label="0"];
6->12 [style = bold, label=""];
4->13 [style = bold, label=""];
13->15 [style = dotted, label="true"];
5->3 [style = bold, label=""];
13->8 [style = bold, label=""];
1->7 [style = bold, label=""];
22->23 [style = bold, label=""];
14->11 [style = dotted, label="true"];
26->3 [style = bold, label=""];
21->0 [style = bold, label=""];
15->8 [style = bold, label=""];
4->22 [style = dashed, label="0"];
7->2 [style = bold, label=""];
}
