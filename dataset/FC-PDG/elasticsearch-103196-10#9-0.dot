digraph {
6 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_point\").field(IGNORE_Z_VALUE.getPreferredName(),false).field(IGNORE_MALFORMED.getPreferredName(),true).field(NULL_VALUE.getPreferredName(),\"91,181\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNullValueWithIgnoreMalformed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(defaultValue,not(equalTo(doc.rootDoc().getBinaryValue(\"location\"))))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testNullValueWithIgnoreMalformed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "doc = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"location\",\"3, 4\").endObject()),XContentType.JSON))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_point\").field(NULL_VALUE.getPreferredName(),\"1,2\").endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "doc = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"location\",\"1, 2\").endObject()),XContentType.JSON))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().nullField(\"location\").endObject()),XContentType.JSON))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testNullValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\",new CompressedXContent(mapping))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(nullValue,equalTo(new GeoPoint(89,1)))@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(nullValue,equalTo(new GeoPoint(1,2)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(defaultValue,equalTo(doc.rootDoc().getBinaryValue(\"location\")))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"location\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(doc.rootDoc().getField(\"location\"),notNullValue())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper)fieldMapper).nullValue@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
12->14 [style = solid, label="defaultValue"];
4->6 [style = bold, label=""];
7->8 [style = bold, label=""];
8->9 [style = bold, label=""];
3->17 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
20->18 [style = bold, label=""];
19->15 [style = bold, label=""];
16->13 [style = bold, label=""];
8->9 [style = solid, label="fieldMapper"];
11->14 [style = bold, label=""];
2->17 [style = bold, label=""];
2->3 [style = bold, label=""];
6->1 [style = solid, label="mapping"];
12->15 [style = solid, label="defaultValue"];
0->2 [style = solid, label="fieldMapper"];
10->7 [style = bold, label=""];
13->12 [style = bold, label=""];
8->5 [style = solid, label="fieldMapper"];
15->11 [style = bold, label=""];
18->1 [style = solid, label="mapping"];
12->19 [style = bold, label=""];
18->1 [style = bold, label=""];
0->5 [style = bold, label=""];
17->16 [style = bold, label=""];
9->5 [style = bold, label=""];
6->1 [style = bold, label=""];
1->0 [style = bold, label=""];
0->5 [style = solid, label="fieldMapper"];
}
