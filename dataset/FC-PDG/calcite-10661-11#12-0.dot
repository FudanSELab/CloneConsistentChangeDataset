digraph {
3 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkJoinNWay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableHashJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "buf.append(i == 1? \"where\": \"and\").append(\" d\").append(i).append(\".\"deptno\" = d\").append(i - 1).append(\".\"deptno\"\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String sql@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < n@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "SqlNode parse = planner.parse(sql)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SqlNode parse = planner.parse(buf.toString())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "buf.append(\"select *\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkJoinNWay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < n@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RelNode convert = planner.rel(validate).rel@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(toString(transform),containsString(expected))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final StringBuilder buf = new StringBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "checkHeuristic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buf.append(i == 0? \"from \": \", \").append(\"\"depts\" as d\").append(i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,6))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 1@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->1 [style = solid, label="i"];
11->16 [style = bold, label=""];
22->26 [style = bold, label=""];
25->28 [style = bold, label=""];
9->14 [style = solid, label="i"];
24->25 [style = solid, label="validate"];
13->2 [style = solid, label="parse"];
4->10 [style = solid, label="convert"];
10->3 [style = solid, label="transform"];
8->15 [style = bold, label=""];
0->13 [style = bold, label=""];
29->30 [style = bold, label=""];
3->26 [style = dashed, label="0"];
21->24 [style = solid, label="parse"];
28->22 [style = bold, label=""];
29->27 [style = dotted, label="true"];
10->19 [style = bold, label=""];
27->21 [style = solid, label="sql"];
25->22 [style = solid, label="convert"];
10->3 [style = bold, label=""];
21->24 [style = bold, label=""];
29->23 [style = dotted, label="true"];
9->16 [style = solid, label="i"];
6->7 [style = solid, label="i"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
10->19 [style = solid, label="transform"];
1->9 [style = bold, label=""];
15->6 [style = solid, label="i"];
3->19 [style = dashed, label="0"];
1->7 [style = dotted, label="true"];
20->18 [style = bold, label=""];
14->16 [style = dotted, label="true"];
15->1 [style = solid, label="i"];
6->1 [style = bold, label=""];
20->5 [style = dotted, label="true"];
4->25 [style = dashed, label="0"];
30->21 [style = bold, label=""];
16->14 [style = solid, label="i"];
12->10 [style = bold, label=""];
5->27 [style = dashed, label="0"];
14->0 [style = bold, label=""];
5->1 [style = solid, label="n"];
15->1 [style = bold, label=""];
24->25 [style = bold, label=""];
22->26 [style = solid, label="transform"];
7->6 [style = bold, label=""];
9->14 [style = bold, label=""];
4->12 [style = bold, label=""];
16->14 [style = bold, label=""];
1->6 [style = dotted, label="true"];
23->26 [style = solid, label="expected"];
14->11 [style = dotted, label="true"];
17->5 [style = dotted, label="true"];
18->8 [style = bold, label=""];
14->11 [style = bold, label=""];
15->7 [style = solid, label="i"];
17->18 [style = bold, label=""];
5->14 [style = solid, label="n"];
12->10 [style = solid, label="traitSet"];
13->2 [style = bold, label=""];
28->22 [style = solid, label="traitSet"];
}
