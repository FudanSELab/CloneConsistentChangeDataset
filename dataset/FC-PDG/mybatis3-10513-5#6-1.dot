digraph {
7 [style = filled, label = "Post secondPost = result.getPosts().get(1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Blog result = mapper.selectBlogByPrimaryKey(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(2,firstPost.getComments().size())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assertions.assertEquals(1,secondPost.getComments().size())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assertions.assertEquals(2,secondPost.getComments().get(0).getPost().getId())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(1,secondPost.getComments().size())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSelectBlogWithPosts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assertions.assertEquals(1,firstPost.getBlog().getId())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Blog result = mapper.selectBlogByPrimaryKeyColumnPrefix(1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(1,firstPost.getBlog().getId())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testSelectBlogWithPosts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(2,secondPost.getComments().get(0).getPost().getId())@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSelectBlogWithPostsColumnPrefix['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Mapper mapper = session.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assertions.assertEquals(2,firstPost.getComments().size())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assertions.assertEquals(2,result.getPosts().size())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Post firstPost = result.getPosts().get(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"Blog with posts\",result.getTitle())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(2,result.getPosts().size())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(result)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
8->19 [style = dashed, label="0"];
8->10 [style = bold, label=""];
0->16 [style = bold, label=""];
5->14 [style = dashed, label="0"];
4->17 [style = bold, label=""];
8->10 [style = solid, label="result"];
11->16 [style = dashed, label="0"];
11->6 [style = bold, label=""];
0->11 [style = bold, label=""];
19->10 [style = bold, label=""];
4->2 [style = bold, label=""];
9->8 [style = bold, label=""];
2->17 [style = dashed, label="0"];
12->7 [style = bold, label=""];
1->9 [style = bold, label=""];
7->14 [style = bold, label=""];
6->12 [style = dashed, label="0"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
17->0 [style = bold, label=""];
19->10 [style = solid, label="result"];
18->9 [style = bold, label=""];
10->4 [style = bold, label=""];
9->19 [style = bold, label=""];
3->15 [style = dashed, label="0"];
14->15 [style = bold, label=""];
13->9 [style = bold, label=""];
6->7 [style = bold, label=""];
16->12 [style = bold, label=""];
}
