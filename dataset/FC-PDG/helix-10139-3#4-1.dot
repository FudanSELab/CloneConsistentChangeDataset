digraph {
7 [style = filled, label = "testConfig.setInstanceCapacityMap(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertTrue(testConfig.getRecord().getMapField(InstanceConfig.InstanceConfigProperty.INSTANCE_CAPACITY_MAP.name()) == null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(testConfig.getRecord().getMapField(ClusterConfig.ClusterConfigProperty.DEFAULT_PARTITION_WEIGHT_MAP.name()),weightDataMapString)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testSetPartitionWeightMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(testConfig.getRecord().getMapField(InstanceConfig.InstanceConfigProperty.INSTANCE_CAPACITY_MAP.name()),capacityDataMapString)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<String,Integer> weightDataMap = ImmutableMap.of(\"item1\",1,\"item2\",2,\"item3\",3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testSetInstanceCapacityMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testConfig.setDefaultPartitionWeightMap(weightDataMap)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Integer> capacityDataMap = ImmutableMap.of(\"item1\",1,\"item2\",2,\"item3\",3)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "InstanceConfig testConfig = new InstanceConfig(\"testConfig\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testConfig.setInstanceCapacityMap(capacityDataMap)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,String> capacityDataMapString = ImmutableMap.of(\"item1\",\"1\",\"item2\",\"2\",\"item3\",\"3\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(testConfig.getRecord().getMapField(InstanceConfig.InstanceConfigProperty.INSTANCE_CAPACITY_MAP.name()),Collections.emptyMap())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testConfig.setInstanceCapacityMap(Collections.emptyMap())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testSetInstanceCapacityMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "ClusterConfig testConfig = new ClusterConfig(\"testConfig\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Map<String,String> weightDataMapString = ImmutableMap.of(\"item1\",\"1\",\"item2\",\"2\",\"item3\",\"3\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
15->13 [style = bold, label=""];
11->14 [style = bold, label=""];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
12->15 [style = bold, label=""];
0->12 [style = dashed, label="0"];
3->4 [style = bold, label=""];
8->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
7->9 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
6->8 [style = bold, label=""];
4->2 [style = solid, label="capacityDataMap"];
10->4 [style = bold, label=""];
5->1 [style = solid, label="capacityDataMapString"];
4->14 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
16->13 [style = solid, label="weightDataMapString"];
14->15 [style = solid, label="weightDataMap"];
}
