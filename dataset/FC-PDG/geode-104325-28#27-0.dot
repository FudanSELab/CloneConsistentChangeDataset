digraph {
29 [style = filled, label = "createMembershipManager['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final RemoteTransportConfig transport@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final DMStats stats1 = mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String hostName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return new TcpClient(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer()).requestToServer(InetAddress.getByName(hostName),locatorPort,request,10000,replyExpected)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final int locatorPort@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final MessageListener<InternalDistributedMember> messageListener = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final MembershipListener<InternalDistributedMember> listener = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final MemberIdentifierFactory<InternalDistributedMember> memberIdentifierFactory = new MemberIdentifierFactory<InternalDistributedMember>(){@Override public InternalDistributedMember create(MemberData memberInfo){return new InternalDistributedMember(memberInfo)}@Override public Comparator<InternalDistributedMember> getComparator(){return Comparator.naturalOrder()}}@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(memberFactory.create(isA())).thenAnswer(new Answer<MemberIdentifier>(){@Override public MemberIdentifier answer(InvocationOnMock invocation){return new InternalDistributedMember((MemberData)invocation.getArgument(0))}})@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final int locatorPort@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "issueRequest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final boolean replyExpected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final String hostName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final TcpSocketCreator socketCreator = SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.CLUSTER)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DSFIDSerializer serializer = InternalDataSerializer.getDSFIDSerializer()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final MemberIdentifierFactory memberFactory = mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return Pair.of(m1,messageListener)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final boolean replyExpected@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final TcpClient locatorClient = new TcpClient(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "m1.startEventProcessing()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "issueRequest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "final GMSAuthenticator authenticator = new GMSAuthenticator(config.getSecurityProps(),securityService,mockSystem.getSecurityLogWriter(),mockSystem.getInternalLogWriter())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Membership<InternalDistributedMember> m1 = MembershipBuilder.newMembershipBuilder(socketCreator,locatorClient,serializer,memberIdentifierFactory).setMembershipLocator(locator).setAuthenticator(authenticator).setStatistics(stats1).setMessageListener(messageListener).setMembershipListener(listener).setConfig(new ServiceConfig(transport,config)).setLifecycleListener(lifeCycleListener).create()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LifecycleListener<InternalDistributedMember> lifeCycleListener = mock()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Object request@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final InternalDistributedSystem mockSystem = mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final SecurityService securityService = SecurityServiceFactory.create()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final MembershipLocator<InternalDistributedMember> locator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return new TcpClient(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer()).requestToServer(new HostAndPort(hostName,locatorPort),request,10000,replyExpected)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "m1.start()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final DistributionConfigImpl config@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22->26 [style = bold, label=""];
10->8 [style = dotted, label="true"];
10->6 [style = dotted, label="true"];
29->17 [style = bold, label=""];
6->7 [style = solid, label="locatorPort"];
27->14 [style = bold, label=""];
21->19 [style = bold, label=""];
20->16 [style = solid, label="messageListener"];
19->31 [style = bold, label=""];
31->24 [style = bold, label=""];
0->4 [style = dotted, label="true"];
27->31 [style = solid, label="securityService"];
9->7 [style = solid, label="hostName"];
18->12 [style = bold, label=""];
3->5 [style = solid, label="locatorPort"];
14->28 [style = bold, label=""];
13->30 [style = bold, label=""];
24->16 [style = solid, label="m1"];
10->9 [style = dotted, label="true"];
29->15 [style = dotted, label="true"];
24->22 [style = bold, label=""];
10->7 [style = bold, label=""];
20->18 [style = bold, label=""];
26->16 [style = bold, label=""];
30->21 [style = bold, label=""];
23->13 [style = bold, label=""];
28->23 [style = bold, label=""];
2->5 [style = solid, label="replyExpected"];
0->1 [style = dotted, label="true"];
4->5 [style = solid, label="request"];
1->5 [style = solid, label="hostName"];
4->7 [style = solid, label="request"];
0->3 [style = dotted, label="true"];
0->2 [style = dotted, label="true"];
8->7 [style = solid, label="replyExpected"];
10->4 [style = dotted, label="true"];
5->7 [style = dashed, label="0"];
12->27 [style = bold, label=""];
0->5 [style = bold, label=""];
29->25 [style = dotted, label="true"];
29->11 [style = dotted, label="true"];
17->20 [style = bold, label=""];
}
