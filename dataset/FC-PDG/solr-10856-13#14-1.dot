digraph {
45 [style = filled, label = "assertMaps(maps2,4,6)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "t0 = tuples.get(0)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "indexr(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "indexr(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assert(tuples.get(3).get(\"_COLLECTION_\").equals(\"collection1\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertMaps(maps0,0,2,1,9)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "stream.setTrace(true)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "ReducerStream rstream = new ReducerStream(stream,new FieldEqualitor(\"a_s\"),new GroupOperation(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),5))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "tuples = getTuples(rstream)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "testReducerStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assert(tuples.get(2).get(\"_COLLECTION_\").equals(COLLECTION))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "indexr(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String zkHost = zkServer.getZkAddress()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "maps1 = t1.getMaps(\"group\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "commit()@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Tuple t0 = tuples.get(0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assert(tuples.get(1).get(\"_COLLECTION_\").equals(\"collection1\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "maps2 = t2.getMaps(\"group\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "t1 = tuples.get(1)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "streamFactory.withCollectionZkHost(\"collection1\",zkHost)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assert(tuples.size() == 3)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assert(tuples.get(2).get(\"_COLLECTION_\").equals(\"collection1\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assert(tuples.get(0).get(\"_COLLECTION_\").equals(COLLECTION))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assert(tuples.get(3).get(\"_COLLECTION_\").equals(COLLECTION))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertMaps(maps1,3,5,7,8)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "t2 = tuples.get(2)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Tuple t1 = tuples.get(1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertMaps(maps1,8,7,5,3)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assert(tuples.get(0).get(\"_COLLECTION_\").equals(\"collection1\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "Tuple t2 = tuples.get(2)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testTrace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "maps0 = t0.getMaps(\"group\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "List<Tuple> tuples = getTuples(rstream)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "indexr(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "indexr(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertMaps(maps0,9,1,2,0)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assert(tuples.size() == 3)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertMaps(maps2,6,4)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "rstream = new ReducerStream(stream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING),new GroupOperation(new FieldComparator(\"a_f\",ComparatorOrder.DESCENDING),5))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,paramsA)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "del(\"*:*\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assert(tuples.get(1).get(\"_COLLECTION_\").equals(COLLECTION))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "List<Map> maps2 = t2.getMaps(\"group\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "indexr(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "commit()@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "List<Map> maps0 = t0.getMaps(\"group\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "List<Map> maps1 = t1.getMaps(\"group\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "del(\"*:*\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "indexr(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "indexr(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "indexr(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "commit()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stream.setTrace(true)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testTrace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "indexr(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "stream = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34->61 [style = bold, label=""];
46->34 [style = bold, label=""];
0->13 [style = bold, label=""];
29->30 [style = bold, label=""];
24->29 [style = solid, label="paramsA"];
29->33 [style = solid, label="stream"];
61->57 [style = bold, label=""];
4->39 [style = dashed, label="0"];
53->54 [style = bold, label=""];
38->42 [style = bold, label=""];
6->5 [style = solid, label="zkHost"];
25->31 [style = bold, label=""];
55->48 [style = bold, label=""];
15->17 [style = bold, label=""];
20->25 [style = dashed, label="0"];
33->25 [style = bold, label=""];
37->62 [style = bold, label=""];
39->43 [style = solid, label="rstream"];
42->36 [style = solid, label="maps2"];
34->61 [style = solid, label="stream"];
26->28 [style = bold, label=""];
62->47 [style = solid, label="maps1"];
21->3 [style = bold, label=""];
10->11 [style = bold, label=""];
48->37 [style = bold, label=""];
55->48 [style = solid, label="maps0"];
2->20 [style = bold, label=""];
59->60 [style = bold, label=""];
5->39 [style = bold, label=""];
12->21 [style = bold, label=""];
16->6 [style = bold, label=""];
18->19 [style = bold, label=""];
10->31 [style = dashed, label="0"];
4->2 [style = bold, label=""];
5->2 [style = solid, label="stream"];
13->16 [style = bold, label=""];
11->18 [style = bold, label=""];
8->22 [style = bold, label=""];
2->43 [style = dashed, label="0"];
20->41 [style = dashed, label="0"];
45->46 [style = bold, label=""];
57->35 [style = bold, label=""];
46->34 [style = solid, label="paramsA"];
54->40 [style = bold, label=""];
23->5 [style = bold, label=""];
30->33 [style = bold, label=""];
52->53 [style = solid, label="maps0"];
21->27 [style = dashed, label="0"];
6->34 [style = solid, label="zkHost"];
11->26 [style = dashed, label="0"];
61->57 [style = solid, label="rstream"];
32->27 [style = bold, label=""];
5->29 [style = dashed, label="0"];
51->52 [style = bold, label=""];
23->5 [style = solid, label="paramsA"];
1->9 [style = bold, label=""];
31->26 [style = bold, label=""];
17->0 [style = bold, label=""];
14->23 [style = bold, label=""];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
35->58 [style = bold, label=""];
18->28 [style = dashed, label="0"];
43->41 [style = bold, label=""];
27->24 [style = bold, label=""];
22->1 [style = bold, label=""];
62->47 [style = bold, label=""];
5->39 [style = solid, label="stream"];
6->14 [style = solid, label="zkHost"];
40->44 [style = bold, label=""];
36->56 [style = bold, label=""];
56->49 [style = bold, label=""];
52->53 [style = bold, label=""];
39->43 [style = bold, label=""];
24->29 [style = bold, label=""];
58->55 [style = bold, label=""];
42->36 [style = bold, label=""];
47->38 [style = bold, label=""];
20->10 [style = bold, label=""];
60->45 [style = bold, label=""];
40->44 [style = solid, label="maps1"];
6->14 [style = bold, label=""];
9->15 [style = bold, label=""];
41->51 [style = bold, label=""];
60->45 [style = solid, label="maps2"];
50->21 [style = bold, label=""];
19->7 [style = bold, label=""];
44->59 [style = bold, label=""];
}
