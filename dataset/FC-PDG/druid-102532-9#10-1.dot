digraph {
7 [style = filled, label = "runTask(task)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,2L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,5L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(task.getRunner().getCurrentOffsets().get(0) == 200L)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "resetOffsetAutomatically = true@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Thread.sleep(25)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Thread.sleep(20)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i++@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndPause['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "task.getRunner().pause()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!task.getRunner().getStatus().equals(Status.PAUSED)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < 5@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(task.getRunner().getStatus(),Status.READING)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(0,2L),ImmutableSet.of()),new SeekableStreamEndSequenceNumbers<>(topic,ImmutableMap.of(0,5L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,200L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,500L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "insertData()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndPause['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "runTask(task)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndNextOffsetGreaterThanLeastAvailable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
6->3 [style = bold, label=""];
3->7 [style = dotted, label="true"];
15->7 [style = bold, label=""];
3->1 [style = bold, label=""];
9->6 [style = solid, label="task"];
7->10 [style = bold, label=""];
2->6 [style = bold, label=""];
20->17 [style = dotted, label="true"];
2->6 [style = solid, label="task"];
10->19 [style = bold, label=""];
19->20 [style = bold, label=""];
19->17 [style = solid, label="i"];
0->4 [style = dotted, label="true"];
12->15 [style = bold, label=""];
7->11 [style = dashed, label="0"];
1->0 [style = bold, label=""];
7->3 [style = bold, label=""];
17->20 [style = solid, label="i"];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
20->18 [style = bold, label=""];
19->20 [style = solid, label="i"];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
3->7 [style = bold, label=""];
15->7 [style = solid, label="task"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
10->11 [style = dotted, label="true"];
2->9 [style = dashed, label="0"];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
20->18 [style = dotted, label="true"];
20->13 [style = dotted, label="true"];
16->12 [style = bold, label=""];
17->20 [style = bold, label=""];
10->11 [style = bold, label=""];
}
