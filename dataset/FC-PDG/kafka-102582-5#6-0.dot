digraph {
8 [style = filled, label = "STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + \"-multi-inner\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testInner['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final List<List<KeyValueTimestamp<Long,String>>> expectedResult = Arrays.asList(null,null,null,Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"A-a\",4L)),Collections.singletonList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"B-a\",5L)),Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"A-b\",6L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"B-b\",6L)),null,null,Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-a\",9L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-b\",9L)),Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"A-c\",10L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"B-c\",10L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-c\",10L)),null,null,null,Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"A-d\",14L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"B-d\",14L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"C-d\",14L)),Arrays.asList(new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"D-a\",15L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"D-b\",15L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"D-c\",15L),new KeyValueTimestamp<>(ANY_UNIQUE_KEY,\"D-d\",15L)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testMultiInner['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + \"-inner\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final List<List<String>> expectedResult = Arrays.asList(null,null,null,Collections.singletonList(\"A-a\"),Collections.singletonList(\"B-a\"),Arrays.asList(\"A-b\",\"B-b\"),null,null,Arrays.asList(\"C-a\",\"C-b\"),Arrays.asList(\"A-c\",\"B-c\",\"C-c\"),null,null,null,Arrays.asList(\"A-d\",\"B-d\",\"C-d\"),Arrays.asList(\"D-a\",\"D-b\",\"D-c\",\"D-d\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "leftStream.join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).to(OUTPUT_TOPIC)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final List<List<String>> expectedResult = Arrays.asList(null,null,null,Collections.singletonList(\"A-a-a\"),Collections.singletonList(\"B-a-a\"),Arrays.asList(\"A-b-a\",\"B-b-a\",\"A-a-b\",\"B-a-b\",\"A-b-b\",\"B-b-b\"),null,null,Arrays.asList(\"C-a-a\",\"C-a-b\",\"C-b-a\",\"C-b-b\"),Arrays.asList(\"A-c-a\",\"A-c-b\",\"B-c-a\",\"B-c-b\",\"C-c-a\",\"C-c-b\",\"A-a-c\",\"B-a-c\",\"A-b-c\",\"B-b-c\",\"C-a-c\",\"C-b-c\",\"A-c-c\",\"B-c-c\",\"C-c-c\"),null,null,null,Arrays.asList(\"A-d-a\",\"A-d-b\",\"A-d-c\",\"B-d-a\",\"B-d-b\",\"B-d-c\",\"C-d-a\",\"C-d-b\",\"C-d-c\",\"A-a-d\",\"B-a-d\",\"A-b-d\",\"B-b-d\",\"C-a-d\",\"C-b-d\",\"A-c-d\",\"B-c-d\",\"C-c-d\",\"A-d-d\",\"B-d-d\",\"C-d-d\"),Arrays.asList(\"D-a-a\",\"D-a-b\",\"D-a-c\",\"D-a-d\",\"D-b-a\",\"D-b-b\",\"D-b-c\",\"D-b-d\",\"D-c-a\",\"D-c-b\",\"D-c-c\",\"D-c-d\",\"D-d-a\",\"D-d-b\",\"D-d-c\",\"D-d-d\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "leftStream.join(rightStream,valueJoiner,JoinWindows.of(ofSeconds(10))).to(OUTPUT_TOPIC)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "runTest(expectedResult)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testInner['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
4->5 [style = dashed, label="0"];
3->8 [style = dashed, label="0"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
10->9 [style = bold, label=""];
4->2 [style = bold, label=""];
9->0 [style = bold, label=""];
4->10 [style = dashed, label="0"];
5->0 [style = solid, label="expectedResult"];
7->8 [style = bold, label=""];
4->0 [style = solid, label="expectedResult"];
2->9 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->0 [style = solid, label="expectedResult"];
}
