digraph {
0 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend = new RocksDBKeyedStateBackendBuilder<>(\"no-op\",ClassLoader.getSystemClassLoader(),temporaryFolder.getRoot(),dbOptions,null,mock(),LongSerializer.INSTANCE,1,new KeyGroupRange(0,0),executionConfig,TestLocalRecoveryConfig.disabled(),RocksDBStateBackend.PriorityQueueStateType.HEAP,TtlTimeProvider.DEFAULT,new UnregisteredMetricsGroup(),Collections.emptyList(),RocksDBStateBackend.getCompressionDecorator(executionConfig),new CloseableRegistry()).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "longHeapKeyedStateBackend.setCurrentKey(key)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testMapSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final InternalMapState<Long,VoidNamespace,Long,String> mapState = (InternalMapState<Long,VoidNamespace,Long,String>)longHeapKeyedStateBackend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,new MapStateDescriptor<>(\"test\",LongSerializer.INSTANCE,StringSerializer.INSTANCE))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "dbOptions.setCreateIfMissing(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "KvStateRequestSerializerTest.testListSerialization(key,listState)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testListSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final long key = 0L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend = new RocksDBKeyedStateBackendBuilder<>(\"no-op\",ClassLoader.getSystemClassLoader(),temporaryFolder.getRoot(),dbOptions,null,mock(),LongSerializer.INSTANCE,1,new KeyGroupRange(0,0),executionConfig,TestLocalRecoveryConfig.disabled(),RocksDBStateBackend.PriorityQueueStateType.HEAP,TtlTimeProvider.DEFAULT,new UnregisteredMetricsGroup(),Collections.emptyList(),RocksDBStateBackend.getCompressionDecorator(executionConfig)).build()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "KvStateRequestSerializerTest.testMapSerialization(key,mapState)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testListSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "longHeapKeyedStateBackend.dispose()@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final InternalListState<Long,VoidNamespace,Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,new ListStateDescriptor<>(\"test\",LongSerializer.INSTANCE))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->5 [style = bold, label=""];
11->1 [style = bold, label=""];
1->3 [style = bold, label=""];
8->14 [style = dashed, label="0"];
9->8 [style = bold, label=""];
1->2 [style = solid, label="key"];
3->4 [style = bold, label=""];
1->12 [style = solid, label="key"];
13->1 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
0->10 [style = bold, label=""];
1->9 [style = solid, label="key"];
8->2 [style = bold, label=""];
14->12 [style = bold, label=""];
9->14 [style = bold, label=""];
8->2 [style = solid, label="listState"];
7->10 [style = dashed, label="0"];
10->9 [style = bold, label=""];
14->12 [style = solid, label="mapState"];
2->5 [style = bold, label=""];
}
