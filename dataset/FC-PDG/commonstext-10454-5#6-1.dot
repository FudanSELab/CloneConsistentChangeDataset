digraph {
38 [style = filled, label = "sub.setVariableSuffixMatcher((StrMatcher)null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertSame(matcher,sub.getVariableSuffixMatcher())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThrows(,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "{}@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertSame(matcher,sub.getVariablePrefixMatcher())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testGetSetPrefix['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "final IllegalArgumentException ex@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final StrMatcher matcher = StrMatcher.commaMatcher()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final IllegalArgumentException ex@@@23@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "sub.setVariableSuffix('<')@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testGetSetPrefix['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThrows(,null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertSame(matcher,sub.getVariablePrefixMatcher())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "fail(\"Exception expected!\")@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "sub.setVariableSuffix(\"<<\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "sub.setVariablePrefix((String)null)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertSame(matcher,sub.getVariablePrefixMatcher())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{}@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "sub.setVariableSuffixMatcher(matcher)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "sub.setVariablePrefixMatcher(matcher)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "sub.setVariableSuffix((String)null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "fail(\"Exception expected!\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "sub.setVariablePrefixMatcher(matcher)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sub.setVariablePrefix('<')@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "{}@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{}@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final StrSubstitutor sub = new StrSubstitutor()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testGetSetSuffix['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "sub.setVariablePrefix(\"<<\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher()@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sub.setVariablePrefixMatcher((StringMatcher)null)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertSame(matcher,sub.getVariablePrefixMatcher())@@@25@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertSame(matcher,sub.getVariableSuffixMatcher())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final StringSubstitutor sub = new StringSubstitutor()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->0 [style = solid, label="matcher"];
0->3 [style = bold, label=""];
28->29 [style = bold, label=""];
18->40 [style = dashed, label="0"];
16->38 [style = dashed, label="0"];
2->20 [style = bold, label=""];
42->37 [style = bold, label=""];
37->28 [style = bold, label=""];
41->27 [style = bold, label=""];
3->12 [style = solid, label="matcher"];
36->41 [style = bold, label=""];
33->40 [style = solid, label="matcher"];
9->42 [style = dashed, label="0"];
0->39 [style = dashed, label="0"];
3->33 [style = dashed, label="0"];
24->0 [style = bold, label=""];
17->31 [style = bold, label=""];
9->4 [style = bold, label=""];
3->18 [style = solid, label="matcher"];
18->12 [style = bold, label=""];
8->14 [style = bold, label=""];
14->10 [style = bold, label=""];
7->0 [style = bold, label=""];
26->8 [style = bold, label=""];
12->16 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
16->17 [style = bold, label=""];
21->25 [style = bold, label=""];
11->19 [style = bold, label=""];
40->34 [style = bold, label=""];
13->30 [style = bold, label=""];
8->36 [style = dashed, label="0"];
10->27 [style = dashed, label="0"];
13->11 [style = bold, label=""];
22->23 [style = bold, label=""];
17->19 [style = bold, label=""];
14->41 [style = dashed, label="0"];
39->33 [style = bold, label=""];
20->22 [style = bold, label=""];
27->42 [style = bold, label=""];
3->18 [style = bold, label=""];
25->24 [style = bold, label=""];
33->31 [style = solid, label="matcher"];
33->40 [style = bold, label=""];
3->19 [style = solid, label="matcher"];
23->21 [style = bold, label=""];
7->39 [style = bold, label=""];
30->31 [style = bold, label=""];
15->39 [style = bold, label=""];
6->8 [style = bold, label=""];
2->28 [style = dashed, label="0"];
32->15 [style = bold, label=""];
29->7 [style = bold, label=""];
5->7 [style = bold, label=""];
23->25 [style = solid, label="matcher"];
5->29 [style = dashed, label="0"];
10->9 [style = bold, label=""];
34->38 [style = bold, label=""];
35->36 [style = bold, label=""];
4->37 [style = dashed, label="0"];
38->17 [style = bold, label=""];
12->34 [style = dashed, label="0"];
33->34 [style = solid, label="matcher"];
23->21 [style = solid, label="matcher"];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
19->31 [style = dashed, label="0"];
}
