digraph {
70 [style = filled, label = "joined = table1.outerJoin(table2,joiner)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "processor.checkAndClearResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@73@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "joined = table1.leftJoin(table2,joiner)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "i < 2@@@34@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int i = 0@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "KTable<Integer,String> table1 = builder.table(intSerde,stringSerde,topic1)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "int i = 0@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "i++@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "processor.checkAndClearResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processor.checkAndClearResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "table2 = builder.table(keySerializer,valSerializer,keyDeserializer,valDeserializer,topic2)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i++@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "{Utils.delete(baseDir)}@@@83@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int i = 0@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "joined.toStream().process(processor)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "KTable<Integer,String> joined@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "processor.checkAndClearResult(\"1:null\",\"2:null+YY2\")@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i++@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "int i = 0@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,null),kv(2,\"null+YY2\"),kv(3,\"XX3+YY3\"))@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "i < 2@@@62@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.setTime(0L)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < expectedKeys.length@@@41@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < 2@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YY\" + expectedKeys(i()@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "driver.process(topic1,expectedKeys(i(,null)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i++@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "processor.checkAndClearResult(\"0:X0+null\",\"1:X1+null\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Collection<Set<String>> copartitionGroups = builder.copartitionGroups()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c27f5c@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"XX\" + expectedKeys(i()@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int i = 0@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "KTable<Integer,String> table2@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "KTable<Integer,String> table2 = builder.table(intSerde,stringSerde,topic2)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "i++@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < expectedKeys.length@@@55@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "KTable<Integer,String> table1@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "getter.init(driver.context())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,joiner)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "processor.checkAndClearResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "KStreamBuilder builder = new KStreamBuilder()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "KStreamTestDriver driver = new KStreamTestDriver(builder,baseDir)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "table1 = builder.table(keySerializer,valSerializer,keyDeserializer,valDeserializer,topic1)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "int i = 1@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < expectedKeys.length@@@48@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "i++@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "processor.checkAndClearResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "processor.checkAndClearResult(\"0:X0+null\",\"1:X1+null\")@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "i < expectedKeys.length@@@69@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "i < 3@@@76@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
74->69 [style = bold, label=""];
59->35 [style = solid, label="expectedKeys"];
39->19 [style = bold, label=""];
62->14 [style = bold, label=""];
71->25 [style = bold, label=""];
65->67 [style = bold, label=""];
68->73 [style = solid, label="i"];
68->69 [style = bold, label=""];
44->63 [style = solid, label="i"];
61->30 [style = bold, label=""];
68->74 [style = solid, label="i"];
28->5 [style = solid, label="i"];
73->74 [style = bold, label=""];
21->58 [style = bold, label=""];
21->58 [style = solid, label="i"];
44->26 [style = solid, label="i"];
57->41 [style = bold, label=""];
34->50 [style = bold, label=""];
51->10 [style = bold, label=""];
62->11 [style = dotted, label="true"];
19->64 [style = dashed, label="0"];
68->69 [style = solid, label="i"];
32->62 [style = solid, label="i"];
9->58 [style = bold, label=""];
50->4 [style = solid, label="getter"];
69->74 [style = dotted, label="true"];
53->36 [style = bold, label=""];
52->20 [style = dotted, label="true"];
37->43 [style = bold, label=""];
43->3 [style = bold, label=""];
32->62 [style = bold, label=""];
58->38 [style = dotted, label="true"];
58->9 [style = dotted, label="true"];
33->53 [style = solid, label="i"];
69->72 [style = bold, label=""];
26->35 [style = bold, label=""];
31->10 [style = solid, label="i"];
2->59 [style = bold, label=""];
3->70 [style = dashed, label="0"];
70->57 [style = bold, label=""];
41->22 [style = bold, label=""];
59->51 [style = solid, label="expectedKeys"];
59->6 [style = bold, label=""];
1->31 [style = bold, label=""];
50->12 [style = solid, label="getter"];
5->60 [style = solid, label="i"];
48->24 [style = bold, label=""];
64->40 [style = bold, label=""];
43->70 [style = bold, label=""];
24->28 [style = bold, label=""];
52->23 [style = bold, label=""];
59->53 [style = solid, label="expectedKeys"];
59->38 [style = solid, label="expectedKeys"];
28->8 [style = solid, label="i"];
67->64 [style = bold, label=""];
16->56 [style = bold, label=""];
46->11 [style = solid, label="i"];
13->36 [style = dotted, label="true"];
54->25 [style = solid, label="baseDir"];
69->73 [style = dotted, label="true"];
63->35 [style = solid, label="i"];
15->10 [style = dotted, label="true"];
20->52 [style = bold, label=""];
17->37 [style = bold, label=""];
30->68 [style = bold, label=""];
39->67 [style = dashed, label="0"];
33->13 [style = bold, label=""];
66->54 [style = bold, label=""];
21->38 [style = solid, label="i"];
0->34 [style = bold, label=""];
26->27 [style = bold, label=""];
43->3 [style = solid, label="table2"];
20->23 [style = solid, label="i"];
72->71 [style = bold, label=""];
31->15 [style = solid, label="i"];
54->2 [style = bold, label=""];
10->51 [style = solid, label="i"];
40->17 [style = bold, label=""];
74->73 [style = solid, label="i"];
15->51 [style = dotted, label="true"];
7->42 [style = bold, label=""];
6->39 [style = bold, label=""];
50->42 [style = solid, label="getter"];
50->30 [style = solid, label="getter"];
5->8 [style = solid, label="i"];
50->49 [style = solid, label="getter"];
58->61 [style = bold, label=""];
23->20 [style = bold, label=""];
43->70 [style = solid, label="table2"];
63->26 [style = bold, label=""];
2->0 [style = solid, label="builder"];
59->65 [style = bold, label=""];
38->9 [style = bold, label=""];
22->29 [style = bold, label=""];
42->47 [style = bold, label=""];
54->0 [style = solid, label="baseDir"];
47->20 [style = solid, label="i"];
13->53 [style = dotted, label="true"];
13->48 [style = bold, label=""];
36->13 [style = solid, label="i"];
11->32 [style = bold, label=""];
67->64 [style = solid, label="table2"];
4->33 [style = bold, label=""];
47->23 [style = solid, label="i"];
21->9 [style = solid, label="i"];
50->71 [style = solid, label="getter"];
46->32 [style = solid, label="i"];
60->5 [style = bold, label=""];
29->55 [style = bold, label=""];
58->38 [style = bold, label=""];
36->13 [style = bold, label=""];
12->46 [style = bold, label=""];
62->11 [style = bold, label=""];
52->16 [style = bold, label=""];
10->15 [style = solid, label="i"];
8->45 [style = bold, label=""];
28->8 [style = bold, label=""];
47->52 [style = solid, label="i"];
63->26 [style = solid, label="i"];
35->63 [style = bold, label=""];
50->56 [style = solid, label="getter"];
52->23 [style = dotted, label="true"];
26->35 [style = dotted, label="true"];
19->40 [style = bold, label=""];
47->52 [style = bold, label=""];
62->32 [style = dotted, label="true"];
75->54 [style = bold, label=""];
32->11 [style = solid, label="i"];
5->8 [style = bold, label=""];
44->35 [style = solid, label="i"];
10->15 [style = bold, label=""];
59->73 [style = solid, label="expectedKeys"];
15->7 [style = bold, label=""];
14->49 [style = bold, label=""];
13->53 [style = bold, label=""];
8->60 [style = bold, label=""];
30->25 [style = bold, label=""];
20->52 [style = solid, label="i"];
8->60 [style = dotted, label="true"];
55->0 [style = bold, label=""];
31->15 [style = bold, label=""];
33->36 [style = solid, label="i"];
9->58 [style = solid, label="i"];
49->21 [style = bold, label=""];
28->60 [style = solid, label="i"];
17->57 [style = bold, label=""];
59->60 [style = solid, label="expectedKeys"];
45->12 [style = bold, label=""];
33->13 [style = solid, label="i"];
74->69 [style = solid, label="i"];
27->4 [style = bold, label=""];
17->57 [style = solid, label="processor"];
9->38 [style = solid, label="i"];
44->26 [style = bold, label=""];
8->5 [style = dotted, label="true"];
50->1 [style = bold, label=""];
59->11 [style = solid, label="expectedKeys"];
50->24 [style = solid, label="getter"];
26->63 [style = dotted, label="true"];
6->65 [style = dashed, label="0"];
69->73 [style = bold, label=""];
3->57 [style = bold, label=""];
36->53 [style = solid, label="i"];
18->54 [style = bold, label=""];
46->62 [style = bold, label=""];
31->51 [style = solid, label="i"];
56->44 [style = bold, label=""];
46->62 [style = solid, label="i"];
59->23 [style = solid, label="expectedKeys"];
15->51 [style = bold, label=""];
}
