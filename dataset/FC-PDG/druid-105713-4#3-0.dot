digraph {
12 [style = filled, label = "Assert.assertEquals(ValueType.STRING,caps.getType())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(caps.hasBitmapIndexes())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(ValueType.STRING,caps.getType())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testMultiStringColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertFalse(caps.hasSpatialIndexes())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testMultiStringColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(caps.hasMultipleValues())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertFalse(caps.hasMultipleValues())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(caps.isComplete())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertFalse(caps.hasMultipleValues())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(caps.hasMultipleValues().isTrue())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertTrue(caps.hasMultipleValues())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(caps.isComplete())@@@20@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(caps.hasBitmapIndexes())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "caps = MMAP_INDEX.getColumnHolder(\"d2\").getCapabilities()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(caps.hasSpatialIndexes())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(caps.isDictionaryEncoded())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(caps.isDictionaryEncoded())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(caps.hasMultipleValues().isTrue())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testStringColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
10->22 [style = bold, label=""];
23->25 [style = bold, label=""];
7->11 [style = bold, label=""];
16->8 [style = bold, label=""];
21->6 [style = bold, label=""];
3->24 [style = bold, label=""];
16->19 [style = dashed, label="0"];
9->24 [style = dashed, label="0"];
10->19 [style = bold, label=""];
14->17 [style = bold, label=""];
11->12 [style = bold, label=""];
1->26 [style = bold, label=""];
19->8 [style = bold, label=""];
6->15 [style = bold, label=""];
26->13 [style = bold, label=""];
9->6 [style = bold, label=""];
2->13 [style = bold, label=""];
22->8 [style = bold, label=""];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
0->10 [style = bold, label=""];
17->0 [style = bold, label=""];
18->4 [style = bold, label=""];
10->16 [style = bold, label=""];
8->2 [style = bold, label=""];
25->12 [style = bold, label=""];
9->21 [style = dashed, label="0"];
12->14 [style = bold, label=""];
11->25 [style = dashed, label="0"];
3->21 [style = bold, label=""];
1->2 [style = bold, label=""];
2->26 [style = dashed, label="0"];
24->6 [style = bold, label=""];
4->5 [style = bold, label=""];
13->18 [style = bold, label=""];
16->22 [style = dashed, label="0"];
20->11 [style = bold, label=""];
}
