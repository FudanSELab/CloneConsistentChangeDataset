digraph {
17 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<PathChildrenCacheEvent.Type> events = Lists.newArrayList()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testIssue27Alt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore,1))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,3))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore,3))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "cache.getListenable().addListener(new PathChildrenCacheListener(){@Override public void childEvent(CuratorFramework client,PathChildrenCacheEvent event){events.add(event.getType())semaphore.release()}})@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.create().forPath(\"/base\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testIssue27['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(expected,events)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "client.delete().forPath(\"/base/a\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testIssue27['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "{CloseableUtils.closeQuietly(cache)TestCleanState.closeAndTestClean(client)}@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(expected,events)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cache.start()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(expected,events)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "client.getChildren().forPath(\"/base\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{CloseableUtils.closeQuietly(cache)TestCleanState.closeAndTestClean(client)}@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.create().forPath(\"/base/c\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "cache.start(PathChildrenCache.StartMode.BUILD_INITIAL_CACHE)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList(PathChildrenCacheEvent.Type.CHILD_REMOVED,PathChildrenCacheEvent.Type.CHILD_ADDED)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "client.create().forPath(\"/base/a\")@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.create().forPath(\"/base/b\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cache = new PathChildrenCache(client,\"/base\",true)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<PathChildrenCacheEvent.Type> expected = Lists.newArrayList(PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_ADDED,PathChildrenCacheEvent.Type.CHILD_REMOVED,PathChildrenCacheEvent.Type.CHILD_ADDED)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore,1))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "PathChildrenCache cache = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.create().forPath(\"/base/a\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->29 [style = bold, label=""];
2->24 [style = solid, label="semaphore"];
21->10 [style = bold, label=""];
27->1 [style = bold, label=""];
2->23 [style = solid, label="semaphore"];
12->28 [style = solid, label="events"];
15->23 [style = dashed, label="0"];
13->28 [style = solid, label="expected"];
19->12 [style = bold, label=""];
11->29 [style = solid, label="cache"];
6->22 [style = bold, label=""];
2->13 [style = solid, label="semaphore"];
16->6 [style = bold, label=""];
2->17 [style = solid, label="semaphore"];
20->31 [style = dashed, label="0"];
30->9 [style = bold, label=""];
22->10 [style = solid, label="client"];
7->31 [style = bold, label=""];
7->20 [style = bold, label=""];
12->21 [style = solid, label="events"];
3->16 [style = bold, label=""];
32->16 [style = bold, label=""];
2->9 [style = solid, label="semaphore"];
8->24 [style = dashed, label="0"];
13->1 [style = bold, label=""];
4->0 [style = bold, label=""];
12->25 [style = solid, label="events"];
22->29 [style = solid, label="client"];
1->13 [style = dashed, label="0"];
9->23 [style = bold, label=""];
5->19 [style = bold, label=""];
26->16 [style = bold, label=""];
12->2 [style = bold, label=""];
20->8 [style = bold, label=""];
15->17 [style = bold, label=""];
13->27 [style = dashed, label="0"];
18->4 [style = bold, label=""];
1->21 [style = solid, label="expected"];
9->15 [style = bold, label=""];
1->21 [style = bold, label=""];
31->30 [style = bold, label=""];
8->9 [style = bold, label=""];
2->15 [style = solid, label="semaphore"];
21->25 [style = dashed, label="0"];
1->25 [style = solid, label="expected"];
23->17 [style = bold, label=""];
14->18 [style = bold, label=""];
25->10 [style = bold, label=""];
17->13 [style = bold, label=""];
17->27 [style = bold, label=""];
13->28 [style = bold, label=""];
22->14 [style = bold, label=""];
20->24 [style = bold, label=""];
2->8 [style = solid, label="semaphore"];
11->10 [style = solid, label="cache"];
1->25 [style = bold, label=""];
22->11 [style = solid, label="client"];
2->11 [style = bold, label=""];
2->27 [style = solid, label="semaphore"];
11->7 [style = bold, label=""];
24->9 [style = bold, label=""];
0->5 [style = bold, label=""];
}
