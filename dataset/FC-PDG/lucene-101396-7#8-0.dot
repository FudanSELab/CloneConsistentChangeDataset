digraph {
16 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,reader.docFreq(t))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "testUnlimitedMaxFieldLength['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(1,reader.docFreq(t))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i < limit@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random())))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "writer.addDocument(doc)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "doc.add(newTextField(\"field\",b.toString(),Field.Store.NO))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "b.append(\" a\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "mock.setEnableChecks(consumeAll)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "i++@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,a))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "int limit = _TestUtil.nextInt(random(),50,101000)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,new IndexWriterConfig(TEST_VERSION_CURRENT,new LimitTokenCountAnalyzer(new MockAnalyzer(random()),100000)))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Document doc = new Document()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "b.append(\" z\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "b.append(\" a\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "b.append(\" x\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Term t = new Term(\"field\",\"x\")@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Term t = new Term(\"field\",\"x\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testLimitTokenCountIndexWriter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "writer.close()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IndexReader reader = DirectoryReader.open(dir)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < 10000@@@8@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Analyzer a = new LimitTokenCountAnalyzer(mock,limit,consumeAll)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "reader.close()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "dir.close()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "t = new Term(\"field\",\"z\")@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(1,reader.docFreq(t))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "int i = 1@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "StringBuilder b = new StringBuilder()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "reader.close()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MockAnalyzer mock = new MockAnalyzer(random())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testLimitTokenCountIndexWriter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "dir.close()@@@28@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16->32 [style = solid, label="dir"];
3->24 [style = bold, label=""];
1->25 [style = dashed, label="0"];
17->26 [style = bold, label=""];
29->27 [style = bold, label=""];
31->28 [style = solid, label="limit"];
24->29 [style = solid, label="t"];
15->1 [style = bold, label=""];
36->16 [style = bold, label=""];
15->22 [style = dashed, label="0"];
8->5 [style = bold, label=""];
22->25 [style = solid, label="i"];
10->8 [style = solid, label="doc"];
7->10 [style = bold, label=""];
34->6 [style = bold, label=""];
16->34 [style = solid, label="dir"];
16->3 [style = solid, label="dir"];
13->17 [style = bold, label=""];
22->26 [style = solid, label="i"];
6->11 [style = bold, label=""];
28->32 [style = bold, label=""];
30->9 [style = bold, label=""];
6->13 [style = solid, label="doc"];
1->7 [style = dotted, label="true"];
25->14 [style = bold, label=""];
23->16 [style = bold, label=""];
16->34 [style = bold, label=""];
28->32 [style = solid, label="a"];
17->14 [style = bold, label=""];
11->15 [style = bold, label=""];
14->9 [style = bold, label=""];
33->20 [style = bold, label=""];
31->25 [style = solid, label="limit"];
4->22 [style = bold, label=""];
25->17 [style = bold, label=""];
35->10 [style = bold, label=""];
25->26 [style = dotted, label="true"];
16->14 [style = solid, label="dir"];
25->17 [style = dotted, label="true"];
1->35 [style = dotted, label="true"];
12->13 [style = bold, label=""];
2->34 [style = dashed, label="0"];
16->2 [style = bold, label=""];
19->16 [style = bold, label=""];
10->1 [style = bold, label=""];
26->25 [style = bold, label=""];
33->28 [style = solid, label="mock"];
14->30 [style = bold, label=""];
15->1 [style = solid, label="i"];
16->2 [style = solid, label="dir"];
10->4 [style = bold, label=""];
32->10 [style = bold, label=""];
22->25 [style = bold, label=""];
1->35 [style = bold, label=""];
4->12 [style = bold, label=""];
20->28 [style = bold, label=""];
1->4 [style = bold, label=""];
27->18 [style = bold, label=""];
16->31 [style = bold, label=""];
18->21 [style = bold, label=""];
2->6 [style = bold, label=""];
15->10 [style = solid, label="i"];
5->3 [style = bold, label=""];
1->7 [style = bold, label=""];
9->8 [style = solid, label="t"];
9->8 [style = bold, label=""];
10->1 [style = solid, label="i"];
24->29 [style = bold, label=""];
31->33 [style = bold, label=""];
21->23 [style = bold, label=""];
26->25 [style = solid, label="i"];
27->18 [style = solid, label="t"];
1->10 [style = dotted, label="true"];
0->16 [style = bold, label=""];
}
