digraph {
9 [style = filled, label = "assertThat(restored.containsKey(\"abc\")).isFalse()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(restored.get(\"abc\").getSessionData().get(\"spring\")).isEqualTo(\"boot\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "PersistentSession session = new PersistentSession(this.expiration,data)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PersistentSession session = new PersistentSession(expired,data)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sessionData.put(\"abc\",session)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "persistAndLoad['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.persistence.persistSessions(\"test\",sessionData)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "dontRestoreExpired['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,PersistentSession> restored = this.persistence.loadSessionAttributes(\"test\",this.classLoader)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "data.put(\"spring\",\"boot\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dontRestoreExpired['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(restored).isNotNull()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Date expired = new Date(System.currentTimeMillis() - 1000)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(restored.get(\"abc\").getExpiration()).isEqualTo(this.expiration)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Map<String,PersistentSession> sessionData = new LinkedHashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,Object> data = new LinkedHashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(restored).doesNotContainKey(\"abc\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
14->16 [style = bold, label=""];
7->1 [style = bold, label=""];
0->2 [style = solid, label="session"];
0->5 [style = dashed, label="0"];
5->13 [style = solid, label="session"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
0->2 [style = bold, label=""];
16->7 [style = bold, label=""];
8->6 [style = bold, label=""];
4->0 [style = solid, label="expired"];
16->2 [style = solid, label="sessionData"];
4->7 [style = bold, label=""];
6->15 [style = bold, label=""];
9->6 [style = dashed, label="0"];
7->3 [style = solid, label="sessionData"];
1->0 [style = solid, label="data"];
5->0 [style = bold, label=""];
3->8 [style = bold, label=""];
5->13 [style = bold, label=""];
10->4 [style = bold, label=""];
9->12 [style = dashed, label="0"];
6->9 [style = bold, label=""];
7->5 [style = solid, label="data"];
13->2 [style = bold, label=""];
6->12 [style = bold, label=""];
}
