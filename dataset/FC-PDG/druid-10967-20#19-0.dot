digraph {
11 [style = filled, label = "testRequestLogger = new TestRequestLogger()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(ForkJoinPool.commonPool(),config.createExecutor())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)binder.bind().toInstance(testRequestLogger)binder.bind().toInstance(rootSchema)binder.bind().toInstance(CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate))binder.bind().toInstance(operatorTable)binder.bind().toInstance(macroTable)binder.bind().toInstance(plannerConfig)binder.bind().annotatedWith().toInstance(CalciteTests.DRUID_SCHEMA_NAME)binder.bind().toInstance(AVATICA_CONFIG)binder.bind().to()binder.bind().in()binder.bind().toProvider().in()}}))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider = JsonConfigProvider.of(keyPrefix,)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Properties properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testDefaultFromProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(-1,config.getExpireAfter())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final CaffeineCacheConfig config = caffeineCacheConfigJsonConfigProvider.get().get()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final SchemaPlus rootSchema = CalciteTests.createMockRootSchema(conglomerate,walker,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final JsonConfigurator configurator = injector.getInstance()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final AbstractAvaticaHandler handler = this.getAvaticaHandler(druidMeta)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Injector injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(null))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "url = this.getJdbcConnectionString(port)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "server.start()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlQueryId\",DUMMY_SQL_QUERY_ID)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "server.setHandler(handler)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(-1L,config.getSizeInBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final String keyPrefix = \"cache.config.prefix\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "druidMeta = injector.getInstance()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
5->7 [style = solid, label="port"];
2->9 [style = solid, label="rootSchema"];
29->31 [style = solid, label="keyPrefix"];
26->28 [style = solid, label="configurator"];
0->9 [style = solid, label="walker"];
21->14 [style = bold, label=""];
29->27 [style = bold, label=""];
25->29 [style = bold, label=""];
6->4 [style = bold, label=""];
19->5 [style = bold, label=""];
4->1 [style = solid, label="url"];
13->0 [style = bold, label=""];
22->0 [style = bold, label=""];
2->11 [style = bold, label=""];
28->32 [style = bold, label=""];
26->31 [style = bold, label=""];
9->3 [style = bold, label=""];
1->8 [style = bold, label=""];
27->28 [style = solid, label="properties"];
27->23 [style = bold, label=""];
11->9 [style = bold, label=""];
4->20 [style = solid, label="url"];
3->26 [style = dashed, label="0"];
15->2 [style = bold, label=""];
3->19 [style = solid, label="druidMeta"];
4->1 [style = bold, label=""];
23->26 [style = bold, label=""];
5->4 [style = solid, label="port"];
30->33 [style = bold, label=""];
16->21 [style = bold, label=""];
0->12 [style = bold, label=""];
17->6 [style = bold, label=""];
3->19 [style = bold, label=""];
12->18 [style = bold, label=""];
7->17 [style = bold, label=""];
19->17 [style = solid, label="handler"];
11->9 [style = solid, label="testRequestLogger"];
32->30 [style = bold, label=""];
18->9 [style = solid, label="operatorTable"];
12->2 [style = solid, label="plannerConfig"];
4->8 [style = solid, label="url"];
31->28 [style = bold, label=""];
33->24 [style = bold, label=""];
8->10 [style = bold, label=""];
5->7 [style = bold, label=""];
14->20 [style = bold, label=""];
12->9 [style = solid, label="plannerConfig"];
0->2 [style = solid, label="walker"];
15->9 [style = solid, label="macroTable"];
10->20 [style = solid, label="propertiesLosAngeles"];
18->15 [style = bold, label=""];
}
