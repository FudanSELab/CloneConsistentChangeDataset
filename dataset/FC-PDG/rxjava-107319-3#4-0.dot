digraph {
16 [style = filled, label = "TestHelper.assertUndeliverable(errors,0,)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{RxJavaPlugins.reset()}@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final List<Object> received = new ArrayList<Object>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{RxJavaPlugins.reset()}@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "LambdaObserver<Object> o = new LambdaObserver<Object>(new Consumer<Object>(){@Override public void accept(Object v){received.add(v)}},new Consumer<Throwable>(){@Override public void accept(Throwable e){received.add(e)}},new Action(){@Override public void run(){received.add(100)}},new Consumer<Disposable>(){@Override public void accept(Disposable d){}})@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "badSourceOnSubscribe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "source.subscribe(o)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "LambdaObserver<Object> o = new LambdaObserver<Object>(new Consumer<Object>(){@Override public void accept(Object v){received.add(v)}},new Consumer<Throwable>(){@Override public void accept(Throwable e){received.add(e)}},new Action(){@Override public void run(){received.add(100)}},new Consumer<Disposable>(){@Override public void accept(Disposable d){}})@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "badSourceEmitAfterDone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "source.subscribe(o)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestHelper.assertError(errors,0,)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final List<Object> received = new ArrayList<Object>()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Arrays.asList(1,100),received)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<Throwable> errors = TestHelper.trackPluginErrors()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "badSourceOnSubscribe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Observable<Integer> source = new Observable<Integer>(){@Override public void subscribeActual(Observer<? super Integer> observer){observer.onSubscribe(Disposables.empty())observer.onNext(1)observer.onComplete()observer.onNext(2)observer.onError(new TestException())observer.onComplete()}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Arrays.asList(1,100),received)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
13->7 [style = bold, label=""];
5->8 [style = bold, label=""];
0->7 [style = bold, label=""];
12->15 [style = bold, label=""];
12->15 [style = solid, label="o"];
4->5 [style = bold, label=""];
14->12 [style = bold, label=""];
8->6 [style = bold, label=""];
1->14 [style = bold, label=""];
6->2 [style = bold, label=""];
7->2 [style = solid, label="errors"];
2->3 [style = bold, label=""];
4->6 [style = solid, label="received"];
2->16 [style = dashed, label="0"];
1->4 [style = bold, label=""];
7->16 [style = solid, label="errors"];
5->8 [style = solid, label="o"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
15->10 [style = bold, label=""];
14->10 [style = solid, label="received"];
9->7 [style = bold, label=""];
}
