digraph {
8 [style = filled, label = "assertThat(readwriteSplittingRule.getSingleDataSourceRule().getReadDataSourceNames(),is(Arrays.asList(\"read_ds_0\",\"read_ds_1\")))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertUpdateRuleStatusWithEnable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(databaseDiscoveryRule.getSingleDataSourceRule().getDataSourceNames(),is(Arrays.asList(\"ds_0\",\"ds_1\")))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DatabaseDiscoveryRule databaseDiscoveryRule = createHARule()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "databaseDiscoveryRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"ds_0\",false))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DatabaseDiscoveryRule databaseDiscoveryRule = createRule()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ReadwriteSplittingRule readwriteSplittingRule = createReadwriteSplittingRule()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "readwriteSplittingRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"read_ds_0\",false))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertUpdateRuleStatusWithEnable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "readwriteSplittingRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"read_ds_0\",true))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertUpdateRuleStatusWithEnable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(readwriteSplittingRule.getSingleDataSourceRule().getReadDataSourceNames(),is(Collections.singletonList(\"read_ds_1\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "databaseDiscoveryRule.updateRuleStatus(new DataSourceNameDisabledEvent(\"ds_0\",true))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(databaseDiscoveryRule.getSingleDataSourceRule().getDataSourceNames(),is(Collections.singletonList(\"ds_1\")))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->8 [style = bold, label=""];
4->3 [style = bold, label=""];
4->9 [style = dashed, label="0"];
1->4 [style = bold, label=""];
0->8 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
6->7 [style = bold, label=""];
10->13 [style = bold, label=""];
12->9 [style = bold, label=""];
4->7 [style = dashed, label="0"];
13->11 [style = bold, label=""];
2->13 [style = dashed, label="0"];
5->11 [style = dashed, label="0"];
7->3 [style = bold, label=""];
2->5 [style = bold, label=""];
}
