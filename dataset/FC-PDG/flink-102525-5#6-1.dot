digraph {
1 [style = filled, label = "testRestoreAfterScaleUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRestoreAfterScaleUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "stateHandles.putSubtaskStateByOperatorID(headOperatorID,emptyHeadOperatorState)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TaskStateSnapshot stateHandles = restore.getTaskStateSnapshot()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "AcknowledgeStreamMockEnvironment environment2 = createRunAndCheckpointOperatorChain(headOperatorID,new StatelessOperator(),tailOperatorID,new CounterOperator(),Optional.of(stateHandles))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(2,stateHandles.getSubtaskStateMappings().size())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testRestoreWithoutState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(headOperatorID,tailOperatorID)),RESTORED_OPERATORS)@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(headOperatorID,tailOperatorID)),RESTORED_OPERATORS)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "JobManagerTaskRestore restore = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "OperatorID tailOperatorID = new OperatorID(44L,44L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "stateHandles.putSubtaskStateByOperatorID(headOperatorID,emptyHeadOperatorState)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(headOperatorID,tailOperatorID)),RESTORED_OPERATORS)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "OperatorID headOperatorID = new OperatorID(42L,42L)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.of(restore))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "OperatorSubtaskState emptyHeadOperatorState = StateAssignmentOperation.operatorSubtaskStateFrom(new OperatorInstanceID(0,headOperatorID),Collections.emptyMap(),Collections.emptyMap(),Collections.emptyMap(),Collections.emptyMap())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "TaskStateSnapshot stateHandles = environment1.getCheckpointStateHandles()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(2,environment1.getCheckpointStateHandles().getSubtaskStateMappings().size())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(headOperatorID,new StatelessOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
8->16 [style = bold, label=""];
7->12 [style = solid, label="tailOperatorID"];
7->16 [style = solid, label="tailOperatorID"];
16->18 [style = bold, label=""];
7->17 [style = bold, label=""];
0->3 [style = solid, label="headOperatorID"];
7->6 [style = solid, label="tailOperatorID"];
0->17 [style = solid, label="headOperatorID"];
10->14 [style = bold, label=""];
7->12 [style = bold, label=""];
0->9 [style = solid, label="headOperatorID"];
4->17 [style = dashed, label="0"];
8->16 [style = solid, label="stateHandles"];
6->11 [style = dashed, label="0"];
8->6 [style = solid, label="emptyHeadOperatorState"];
0->8 [style = solid, label="headOperatorID"];
8->6 [style = bold, label=""];
0->5 [style = solid, label="headOperatorID"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
1->0 [style = bold, label=""];
0->4 [style = solid, label="headOperatorID"];
19->0 [style = bold, label=""];
9->6 [style = bold, label=""];
4->12 [style = dashed, label="0"];
0->7 [style = bold, label=""];
7->4 [style = solid, label="tailOperatorID"];
0->18 [style = solid, label="headOperatorID"];
7->13 [style = solid, label="tailOperatorID"];
12->10 [style = bold, label=""];
7->11 [style = solid, label="tailOperatorID"];
7->18 [style = solid, label="tailOperatorID"];
17->2 [style = bold, label=""];
7->3 [style = solid, label="tailOperatorID"];
0->13 [style = solid, label="headOperatorID"];
15->0 [style = bold, label=""];
6->11 [style = bold, label=""];
11->13 [style = bold, label=""];
0->16 [style = solid, label="headOperatorID"];
8->9 [style = bold, label=""];
0->12 [style = solid, label="headOperatorID"];
14->8 [style = bold, label=""];
7->17 [style = solid, label="tailOperatorID"];
8->6 [style = solid, label="stateHandles"];
0->6 [style = solid, label="headOperatorID"];
12->11 [style = solid, label="restore"];
0->11 [style = solid, label="headOperatorID"];
5->9 [style = solid, label="emptyHeadOperatorState"];
2->8 [style = bold, label=""];
2->5 [style = bold, label=""];
}
