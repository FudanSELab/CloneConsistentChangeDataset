digraph {
30 [style = filled, label = "byte(( decryptedContent = new byte((((@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "dataWriter.commit()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "state.setProp(ConfigurationKeys.WRITER_OUTPUT_DIR,new Path(testTempPath,\"output\").toString())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Path writtenFilePath = new Path(new Path(state.getProp(ConfigurationKeys.WRITER_OUTPUT_DIR),cf.getDatasetAndPartition(metadata).identifier()),cf.getDestination())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf,StreamUtils.convertStream(new ByteArrayInputStream(streamString)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "OwnerAndPermission ownerAndPermission = new OwnerAndPermission(status.getOwner(),status.getGroup(),new FsPermission(FsAction.ALL,FsAction.ALL,FsAction.ALL))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(writtenFilePath.getName().endsWith(\"gpg\"),\"Expected encryption name to be appended to destination\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "byte(( encryptedContent = IOUtils.toByteArray(new FileInputStream(writtenFilePath.toString()))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertNotEquals(encryptedContent,streamString)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_KEYSTORE_PASSWORD_KEY,\"testPassword\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "state.setProp(ConfigurationKeys.WRITER_FILE_PATH,RandomStringUtils.randomAlphabetic(5))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CopySource.serializeCopyableDataset(state,metadata)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_KEY_NAME,GPGFileEncryptorTest.KEY_ID)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "FileAwareInputStreamDataWriter dataWriter = new FileAwareInputStreamDataWriter(state,1,0)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testWriteWithGPGSymmetricEncryption['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CopyableFile cf = CopyableFileUtils.getTestCopyableFile(ownerAndPermission)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "FileAwareInputStreamDataWriter dataWriter = new FileAwareInputStreamDataWriter(state,1,0)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "WorkUnitState state = TestUtils.createTestWorkUnitState()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CopySource.serializeCopyEntity(state,cf)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "IOUtils.readFully(GPGFileDecryptor.decryptFile(new FileInputStream(writtenFilePath.toString()),.getResourceAsStream(GPGFileEncryptorTest.PRIVATE_KEY),GPGFileEncryptorTest.PASSPHRASE),decryptedContent)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "FileStatus status = fs.getFileStatus(testTempPath)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CopySource.serializeCopyableDataset(state,metadata)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder().file(cf).inputStream(StreamUtils.convertStream(new ByteArrayInputStream(streamString))).build()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "state.setProp(ConfigurationKeys.WRITER_STAGING_DIR,new Path(testTempPath,\"staging\").toString())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CopyableDatasetMetadata metadata = new CopyableDatasetMetadata(new TestCopyableDataset(new Path(\"/source\")))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CopySource.serializeCopyEntity(state,cf)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_KEYSTORE_PATH_KEY,publicKeyFile.getAbsolutePath())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testWriteWithGPGAsymmetricEncryption['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "File publicKeyFile = new File(testTempPath.toString(),\"public.key\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testWriteWithGPGSymmetricEncryption['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_ALGORITHM_KEY,\"gpg\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "state.setProp(\"writer.encrypt.\" + EncryptionConfigParser.ENCRYPTION_KEYSTORE_PASSWORD_KEY,GPGFileEncryptorTest.PASSPHRASE)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "dataWriter.write(fileAwareInputStream)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf,StreamUtils.convertStream(new ByteArrayInputStream(streamString)))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(decryptedContent,streamString)@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "FileUtils.copyInputStreamToFile(.getResourceAsStream(GPGFileEncryptorTest.PUBLIC_KEY),publicKeyFile)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "byte(( streamString = \"testEncryptedContents\".getBytes(\"UTF-8\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
30->36 [style = solid, label="decryptedContent"];
28->29 [style = bold, label=""];
24->20 [style = solid, label="state"];
18->1 [style = solid, label="cf"];
22->36 [style = dashed, label="0"];
33->35 [style = bold, label=""];
19->18 [style = bold, label=""];
27->1 [style = bold, label=""];
24->9 [style = solid, label="state"];
32->23 [style = bold, label=""];
0->13 [style = bold, label=""];
21->19 [style = bold, label=""];
24->1 [style = solid, label="state"];
12->22 [style = solid, label="decryptedContent"];
30->35 [style = solid, label="decryptedContent"];
20->26 [style = bold, label=""];
25->23 [style = bold, label=""];
26->1 [style = bold, label=""];
18->11 [style = bold, label=""];
1->3 [style = bold, label=""];
18->9 [style = solid, label="cf"];
34->31 [style = bold, label=""];
30->36 [style = bold, label=""];
10->17 [style = bold, label=""];
8->6 [style = bold, label=""];
23->6 [style = solid, label="streamString"];
7->20 [style = bold, label=""];
19->18 [style = solid, label="ownerAndPermission"];
24->7 [style = solid, label="state"];
9->7 [style = bold, label=""];
11->24 [style = bold, label=""];
36->33 [style = bold, label=""];
2->4 [style = bold, label=""];
4->8 [style = solid, label="encryptedContent"];
24->5 [style = solid, label="state"];
16->1 [style = solid, label="fileAwareInputStream"];
22->8 [style = bold, label=""];
16->26 [style = dashed, label="0"];
0->34 [style = bold, label=""];
29->27 [style = bold, label=""];
11->7 [style = solid, label="metadata"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
23->35 [style = solid, label="streamString"];
20->16 [style = bold, label=""];
14->23 [style = bold, label=""];
23->21 [style = bold, label=""];
16->1 [style = bold, label=""];
18->16 [style = solid, label="cf"];
23->33 [style = solid, label="streamString"];
6->33 [style = solid, label="encryptedContent"];
15->0 [style = bold, label=""];
2->4 [style = solid, label="fileAwareInputStream"];
18->2 [style = solid, label="cf"];
17->15 [style = bold, label=""];
12->6 [style = solid, label="decryptedContent"];
4->12 [style = bold, label=""];
24->3 [style = solid, label="state"];
26->1 [style = solid, label="fileAwareInputStream"];
34->31 [style = solid, label="publicKeyFile"];
13->9 [style = bold, label=""];
31->28 [style = bold, label=""];
23->8 [style = solid, label="streamString"];
11->3 [style = solid, label="metadata"];
23->2 [style = solid, label="streamString"];
23->16 [style = solid, label="streamString"];
12->22 [style = bold, label=""];
6->30 [style = bold, label=""];
}
