digraph {
9 [style = filled, label = "defaultCiphers.add(cipher)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testHostnameVerification['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "q1.start()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "q2.start()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "System.clearProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "q3.shutdown()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(),keystorePath)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "q3.start()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "q1.shutdown()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "System.setProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty(),\"false\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "q3 = new MainThread(3,clientPortQp3,quorumConfiguration,SSL_QUORUM_ENABLED)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "setSSLSystemProperties()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "q2.start()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fail(\"JDK has to support at least 2 valid (RSA) cipher suites for this test to run\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCipherSuites['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "q3.start()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<String> defaultCiphers = new ArrayList<String>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.setProperty(quorumX509Util.getCipherSuitesProperty(),suitesOfEnsemble)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "!cipher.matches(\".*EMPTY.*\") && cipher.startsWith(\"TLS\") && cipher.contains(\"RSA\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(),keystorePath)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "q1 = new MainThread(1,clientPortQp1,quorumConfiguration,SSL_QUORUM_ENABLED)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SSLServerSocketFactory ssf = (SSLServerSocketFactory)SSLServerSocketFactory.getDefault()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "String suitesOfEnsemble = String.join(\",\",defaultCiphers.subList(1,defaultCiphers.size()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testCipherSuites['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SSLServerSocketFactory ssf = (SSLServerSocketFactory)SSLServerSocketFactory.getDefault()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "System.setProperty(quorumX509Util.getCipherSuitesProperty(),suiteOfClient)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "q1.start()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "defaultCiphers.size() < 2@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(expectSuccess,ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "q2 = new MainThread(2,clientPortQp2,quorumConfiguration,SSL_QUORUM_ENABLED)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "String keystorePath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "q2.shutdown()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "boolean expectSuccess@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String suiteOfClient = defaultCiphers.get(0)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
33->32 [style = solid, label="expectSuccess"];
42->37 [style = bold, label=""];
19->1 [style = solid, label="suiteOfClient"];
16->27 [style = bold, label=""];
14->12 [style = dotted, label="true"];
35->44 [style = bold, label=""];
38->28 [style = bold, label=""];
3->36 [style = dashed, label="0"];
29->41 [style = bold, label=""];
17->9 [style = bold, label=""];
27->30 [style = bold, label=""];
15->24 [style = dashed, label="0"];
45->36 [style = bold, label=""];
40->25 [style = bold, label=""];
9->17 [style = bold, label=""];
26->40 [style = bold, label=""];
30->34 [style = bold, label=""];
3->22 [style = dashed, label="0"];
25->29 [style = bold, label=""];
23->8 [style = bold, label=""];
16->22 [style = bold, label=""];
39->11 [style = bold, label=""];
1->7 [style = bold, label=""];
0->15 [style = bold, label=""];
11->2 [style = bold, label=""];
15->5 [style = bold, label=""];
36->39 [style = bold, label=""];
37->7 [style = bold, label=""];
5->20 [style = dashed, label="0"];
2->13 [style = bold, label=""];
24->20 [style = bold, label=""];
8->17 [style = bold, label=""];
5->19 [style = bold, label=""];
6->4 [style = bold, label=""];
19->1 [style = bold, label=""];
28->35 [style = bold, label=""];
31->26 [style = bold, label=""];
43->30 [style = solid, label="keystorePath"];
18->10 [style = bold, label=""];
38->43 [style = dotted, label="true"];
17->14 [style = bold, label=""];
18->10 [style = solid, label="suitesOfEnsemble"];
0->24 [style = bold, label=""];
14->12 [style = bold, label=""];
17->9 [style = dotted, label="true"];
7->16 [style = bold, label=""];
43->29 [style = solid, label="keystorePath"];
12->18 [style = bold, label=""];
9->14 [style = bold, label=""];
4->8 [style = bold, label=""];
14->18 [style = bold, label=""];
41->45 [style = bold, label=""];
34->32 [style = bold, label=""];
5->42 [style = bold, label=""];
20->19 [style = bold, label=""];
4->23 [style = dashed, label="0"];
21->23 [style = bold, label=""];
44->31 [style = bold, label=""];
38->33 [style = dotted, label="true"];
13->0 [style = bold, label=""];
10->11 [style = bold, label=""];
}
