digraph {
16 [style = filled, label = "InternalSearchResponse internalSearchResponse = new InternalSearchResponse(hits,null,null,null,false,null,1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNotNull(reference.get())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mockSearchPhaseContext.getRequest().source(new SearchSourceBuilder().collapse(new CollapseBuilder(\"someField\").setInnerHits(new InnerHitBuilder().setName(\"foobarbaz\"))))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override void sendExecuteMultiSearch(MultiSearchRequest request,SearchTask task,ActionListener<MultiSearchResponse> listener){fail(\"expand should not try to send empty multi search request\")}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AtomicReference<SearchResponse> reference = new AtomicReference<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ExpandSearchPhase phase = new ExpandSearchPhase(mockSearchPhaseContext,internalSearchResponse,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testExpandRequestOptions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "mockSearchPhaseContext.getRequest().source(new SearchSourceBuilder().collapse(new CollapseBuilder(\"someField\").setInnerHits(new InnerHitBuilder().setName(\"foobarbaz\").setVersion(version).setSeqNoAndPrimaryTerm(seqNoAndTerm))).postFilter(QueryBuilders.existsQuery(\"foo\"))).preference(\"foobar\").routing(\"baz\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "boolean version = randomBoolean()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final boolean seqNoAndTerm = randomBoolean()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SearchHits hits = new SearchHits(new SearchHit((((,new TotalHits(1,TotalHits.Relation.EQUAL_TO),1.0f)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mockSearchPhaseContext.getRequest().source(new SearchSourceBuilder().collapse(new CollapseBuilder(\"someField\").setInnerHits(new InnerHitBuilder().setName(\"foobarbaz\").setVersion(version).setSeqNoAndPrimaryTerm(seqNoAndTerm))).fetchSource(false).postFilter(QueryBuilders.existsQuery(\"foo\"))).preference(\"foobar\").routing(\"baz\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "AtomicReference<SearchResponse> reference = new AtomicReference<>()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "phase.run()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SearchHits hits = new SearchHits(new SearchHit((((,new TotalHits(1,TotalHits.Relation.EQUAL_TO),1.0f)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testSkipExpandCollapseNoHits['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ExpandSearchPhase phase = new ExpandSearchPhase(mockSearchPhaseContext,internalSearchResponse,null)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.phasesExecuted.get())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "phase.run()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.phasesExecuted.get())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testExpandRequestOptions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertNotNull(reference.get())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "InternalSearchResponse internalSearchResponse = new InternalSearchResponse(hits,null,null,null,false,null,1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
15->10 [style = bold, label=""];
4->23 [style = solid, label="mockSearchPhaseContext"];
1->8 [style = bold, label=""];
11->1 [style = bold, label=""];
1->15 [style = bold, label=""];
16->23 [style = solid, label="internalSearchResponse"];
4->12 [style = solid, label="mockSearchPhaseContext"];
8->15 [style = dashed, label="0"];
25->4 [style = bold, label=""];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
12->9 [style = bold, label=""];
2->4 [style = bold, label=""];
17->19 [style = bold, label=""];
1->17 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
3->5 [style = bold, label=""];
20->23 [style = bold, label=""];
5->12 [style = bold, label=""];
21->22 [style = bold, label=""];
19->16 [style = solid, label="hits"];
9->13 [style = bold, label=""];
8->17 [style = dashed, label="0"];
3->12 [style = solid, label="internalSearchResponse"];
4->1 [style = bold, label=""];
18->21 [style = bold, label=""];
13->6 [style = bold, label=""];
22->24 [style = bold, label=""];
6->7 [style = bold, label=""];
16->20 [style = bold, label=""];
23->18 [style = bold, label=""];
10->3 [style = solid, label="hits"];
14->4 [style = bold, label=""];
}
