digraph {
11 [style = filled, label = "Number x@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return minimum == null || x.longValue() > minimum.longValue() || (x.intValue() == minimum.longValue() && (!exclusiveMinimum))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "return minimum == null || x.doubleValue() > minimum.doubleValue() || (x.doubleValue() == minimum.doubleValue() && (!exclusiveMinimum))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "return minimum == null || x.longValue() > minimum.longValue() || (x.intValue() == minimum.longValue() && (!exclusiveMinimum))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "return maximum == null || x.floatValue() < maximum.floatValue() || (x.floatValue() == maximum.floatValue() && (!exclusiveMaximum))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "x instanceof Short@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "isValidMinimum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "x instanceof Long@@@5@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Number x@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "x instanceof Integer@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return maximum == null || x.longValue() < maximum.longValue() || (x.intValue() == maximum.longValue() && (!exclusiveMaximum))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "x instanceof Integer@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "x instanceof Long@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return minimum == null || x.intValue() > minimum.intValue() || (x.intValue() == minimum.intValue() && (!exclusiveMinimum))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "x instanceof Short@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return minimum == null || x.doubleValue() > minimum.doubleValue() || (x.doubleValue() == minimum.doubleValue() && (!exclusiveMinimum))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "x instanceof Float@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "x instanceof Double@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return true@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return maximum == null || x.doubleValue() < maximum.doubleValue() || (x.doubleValue() == maximum.doubleValue() && (!exclusiveMaximum))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "isValidMaximum['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "isValidMinimum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "return minimum == null || x.floatValue() > minimum.floatValue() || (x.floatValue() == minimum.floatValue() && (!exclusiveMinimum))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "return minimum == null || x.shortValue() > minimum.shortValue() || (x.intValue() == minimum.shortValue() && (!exclusiveMinimum))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "x instanceof Double@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "x instanceof Double || x instanceof BigDecimal@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "x instanceof Integer || x instanceof AtomicInteger@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return minimum == null || x.shortValue() > minimum.shortValue() || (x.intValue() == minimum.shortValue() && (!exclusiveMinimum))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "x instanceof Float@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "x instanceof Float@@@6@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return maximum == null || x.shortValue() < maximum.shortValue() || (x.intValue() == maximum.shortValue() && (!exclusiveMaximum))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "x instanceof Long || x instanceof AtomicLong || x instanceof BigInteger@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "return maximum == null || x.intValue() < maximum.intValue() || (x.intValue() == maximum.intValue() && (!exclusiveMaximum))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "x instanceof Short || x instanceof Byte@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "return minimum == null || x.intValue() > minimum.intValue() || (x.intValue() == minimum.intValue() && (!exclusiveMinimum))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->12 [style = dotted, label="true"];
32->28 [style = dotted, label="true"];
11->13 [style = solid, label="x"];
5->24 [style = dashed, label="0"];
14->17 [style = bold, label=""];
25->29 [style = bold, label=""];
7->8 [style = bold, label=""];
11->3 [style = solid, label="x"];
25->31 [style = bold, label=""];
2->11 [style = dotted, label="true"];
9->19 [style = dashed, label="0"];
8->1 [style = bold, label=""];
30->33 [style = solid, label="x"];
3->5 [style = bold, label=""];
26->30 [style = dotted, label="true"];
33->25 [style = bold, label=""];
15->20 [style = bold, label=""];
21->16 [style = bold, label=""];
7->34 [style = dashed, label="0"];
4->16 [style = bold, label=""];
11->20 [style = solid, label="x"];
24->10 [style = bold, label=""];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
11->16 [style = solid, label="x"];
11->6 [style = solid, label="x"];
26->32 [style = bold, label=""];
7->17 [style = dashed, label="0"];
4->21 [style = bold, label=""];
13->19 [style = dotted, label="true"];
31->29 [style = bold, label=""];
20->14 [style = bold, label=""];
1->4 [style = dotted, label="true"];
29->23 [style = bold, label=""];
3->10 [style = bold, label=""];
29->27 [style = bold, label=""];
3->5 [style = dotted, label="true"];
9->31 [style = dashed, label="0"];
30->32 [style = solid, label="x"];
6->7 [style = dotted, label="true"];
23->10 [style = bold, label=""];
20->22 [style = dotted, label="true"];
30->23 [style = solid, label="x"];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
22->14 [style = bold, label=""];
23->24 [style = dotted, label="true"];
16->18 [style = dotted, label="true"];
11->8 [style = solid, label="x"];
16->18 [style = bold, label=""];
25->31 [style = dotted, label="true"];
12->32 [style = dashed, label="0"];
0->12 [style = bold, label=""];
1->3 [style = bold, label=""];
11->1 [style = solid, label="x"];
32->33 [style = bold, label=""];
11->14 [style = solid, label="x"];
14->17 [style = dotted, label="true"];
4->21 [style = dotted, label="true"];
13->19 [style = bold, label=""];
2->0 [style = bold, label=""];
30->29 [style = solid, label="x"];
18->10 [style = bold, label=""];
12->22 [style = dashed, label="0"];
15->11 [style = dotted, label="true"];
17->13 [style = bold, label=""];
8->9 [style = dotted, label="true"];
14->13 [style = bold, label=""];
11->0 [style = solid, label="x"];
34->25 [style = bold, label=""];
0->6 [style = bold, label=""];
16->10 [style = bold, label=""];
29->27 [style = dotted, label="true"];
33->34 [style = dotted, label="true"];
5->18 [style = dashed, label="0"];
12->6 [style = bold, label=""];
20->22 [style = bold, label=""];
23->24 [style = bold, label=""];
28->33 [style = bold, label=""];
6->8 [style = bold, label=""];
8->9 [style = bold, label=""];
11->4 [style = solid, label="x"];
27->23 [style = bold, label=""];
19->4 [style = bold, label=""];
30->25 [style = solid, label="x"];
4->29 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
32->28 [style = bold, label=""];
33->34 [style = bold, label=""];
13->4 [style = bold, label=""];
}
