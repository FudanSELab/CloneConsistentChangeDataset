digraph {
8 [style = filled, label = "return null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return null@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "getMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int ordinal@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return UTF8String.fromAddress(baseObject,baseOffset + offset,size)@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final UnsafeMapData map = new UnsafeMapData()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int ordinal@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "isNullAt(ordinal)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "getUTF8String['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "isNullAt(ordinal)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "getUTF8String['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final int size = (int)offsetAndSize@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int size = (int)offsetAndSize@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "map.pointTo(baseObject,baseOffset + offset,size)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return null@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return map@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3->9 [style = solid, label="offset"];
14->5 [style = dotted, label="false"];
8->14 [style = dashed, label="0"];
14->7 [style = bold, label=""];
2->4 [style = bold, label=""];
14->18 [style = bold, label=""];
8->4 [style = bold, label=""];
7->5 [style = solid, label="offsetAndSize"];
14->18 [style = dotted, label="true"];
14->7 [style = dotted, label="false"];
4->3 [style = solid, label="offsetAndSize"];
0->7 [style = bold, label=""];
1->8 [style = bold, label=""];
0->9 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = dotted, label="true"];
14->15 [style = dotted, label="false"];
7->5 [style = solid, label="mb"];
1->6 [style = dotted, label="true"];
4->0 [style = solid, label="offsetAndSize"];
6->4 [style = solid, label="ordinal"];
6->8 [style = solid, label="ordinal"];
14->17 [style = dotted, label="false"];
19->14 [style = solid, label="ordinal"];
7->9 [style = dashed, label="0"];
8->2 [style = bold, label=""];
5->15 [style = solid, label="offset"];
11->10 [style = bold, label=""];
12->17 [style = bold, label=""];
0->9 [style = solid, label="size"];
3->7 [style = solid, label="offset"];
17->15 [style = bold, label=""];
10->8 [style = dotted, label="true"];
7->12 [style = solid, label="offsetAndSize"];
17->13 [style = solid, label="map"];
3->0 [style = bold, label=""];
11->6 [style = dotted, label="true"];
10->4 [style = bold, label=""];
16->14 [style = bold, label=""];
19->7 [style = solid, label="ordinal"];
15->13 [style = bold, label=""];
0->7 [style = solid, label="size"];
7->5 [style = bold, label=""];
5->12 [style = bold, label=""];
12->15 [style = solid, label="size"];
6->19 [style = dashed, label="0"];
14->13 [style = dotted, label="false"];
4->3 [style = bold, label=""];
6->10 [style = solid, label="ordinal"];
14->12 [style = dotted, label="false"];
16->19 [style = dotted, label="true"];
}
