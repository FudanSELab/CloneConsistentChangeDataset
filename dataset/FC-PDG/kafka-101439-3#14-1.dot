digraph {
18 [style = filled, label = "final int(( expectedKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i < 2@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"1:XX1+Y1\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "processor.checkAndClearProcessResult()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "i < 2@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "i++@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i < 2@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "i++@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "driver.setTime(0L)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "processor.checkAndClearProcessResult()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "doTestJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final StreamsBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < 2@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "int i = 0@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "driver.flushState()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "driver.flushState()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < 2@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "i < 2@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "joined.process(supplier)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "doTestJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int i = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+YY0\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b2c50e@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "driver.flushState()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "getter.init(driver.context())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.flushState()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->9 [style = solid, label="i"];
37->0 [style = bold, label=""];
41->15 [style = bold, label=""];
12->44 [style = bold, label=""];
40->18 [style = dotted, label="true"];
46->14 [style = solid, label="i"];
78->61 [style = bold, label=""];
81->28 [style = bold, label=""];
9->23 [style = solid, label="i"];
56->52 [style = solid, label="expectedKeys"];
27->9 [style = bold, label=""];
56->7 [style = solid, label="expectedKeys"];
27->73 [style = dashed, label="0"];
37->79 [style = bold, label=""];
57->58 [style = bold, label=""];
41->14 [style = dotted, label="true"];
53->55 [style = dotted, label="true"];
14->52 [style = solid, label="i"];
19->5 [style = bold, label=""];
29->6 [style = bold, label=""];
52->14 [style = bold, label=""];
70->72 [style = solid, label="i"];
70->73 [style = solid, label="i"];
28->43 [style = bold, label=""];
75->19 [style = bold, label=""];
71->73 [style = solid, label="expectedKeys"];
61->72 [style = solid, label="i"];
71->37 [style = solid, label="expectedKeys"];
0->24 [style = bold, label=""];
72->73 [style = bold, label=""];
65->69 [style = bold, label=""];
42->1 [style = bold, label=""];
35->10 [style = bold, label=""];
30->8 [style = bold, label=""];
47->60 [style = bold, label=""];
5->36 [style = bold, label=""];
55->30 [style = solid, label="builder"];
2->31 [style = bold, label=""];
15->38 [style = bold, label=""];
82->28 [style = bold, label=""];
1->50 [style = bold, label=""];
50->19 [style = bold, label=""];
66->67 [style = bold, label=""];
18->7 [style = solid, label="expectedKeys"];
72->38 [style = bold, label=""];
43->51 [style = bold, label=""];
26->81 [style = bold, label=""];
19->47 [style = solid, label="i"];
64->74 [style = bold, label=""];
31->4 [style = bold, label=""];
53->30 [style = bold, label=""];
38->45 [style = bold, label=""];
33->51 [style = dashed, label="0"];
48->17 [style = bold, label=""];
23->9 [style = dotted, label="true"];
46->41 [style = bold, label=""];
58->63 [style = bold, label=""];
13->12 [style = bold, label=""];
28->81 [style = dotted, label="true"];
79->59 [style = bold, label=""];
5->7 [style = dotted, label="true"];
40->3 [style = dotted, label="true"];
72->73 [style = dotted, label="true"];
3->30 [style = solid, label="builder"];
23->27 [style = dotted, label="true"];
81->26 [style = solid, label="i"];
82->28 [style = solid, label="i"];
32->48 [style = bold, label=""];
61->70 [style = solid, label="i"];
3->13 [style = solid, label="builder"];
5->7 [style = bold, label=""];
63->77 [style = bold, label=""];
82->26 [style = solid, label="i"];
36->37 [style = bold, label=""];
62->68 [style = bold, label=""];
47->5 [style = solid, label="i"];
79->59 [style = solid, label="i"];
60->37 [style = solid, label="i"];
77->65 [style = bold, label=""];
59->79 [style = dotted, label="true"];
22->11 [style = bold, label=""];
18->52 [style = solid, label="expectedKeys"];
61->72 [style = bold, label=""];
80->64 [style = bold, label=""];
17->46 [style = bold, label=""];
67->75 [style = bold, label=""];
47->7 [style = solid, label="i"];
57->65 [style = solid, label="supplier"];
44->43 [style = solid, label="getter"];
44->29 [style = bold, label=""];
6->23 [style = bold, label=""];
34->49 [style = bold, label=""];
53->25 [style = dotted, label="true"];
21->34 [style = bold, label=""];
23->32 [style = bold, label=""];
63->77 [style = solid, label="stream2"];
28->26 [style = bold, label=""];
51->67 [style = dashed, label="0"];
59->37 [style = bold, label=""];
73->70 [style = bold, label=""];
14->41 [style = solid, label="i"];
19->7 [style = solid, label="i"];
8->35 [style = bold, label=""];
51->20 [style = bold, label=""];
59->37 [style = dotted, label="true"];
33->26 [style = bold, label=""];
19->47 [style = bold, label=""];
71->80 [style = bold, label=""];
46->52 [style = solid, label="i"];
10->13 [style = bold, label=""];
46->41 [style = solid, label="i"];
81->28 [style = solid, label="i"];
53->56 [style = dotted, label="true"];
47->5 [style = bold, label=""];
72->70 [style = dotted, label="true"];
44->34 [style = solid, label="getter"];
79->37 [style = solid, label="i"];
40->30 [style = bold, label=""];
59->76 [style = bold, label=""];
70->72 [style = bold, label=""];
71->26 [style = solid, label="expectedKeys"];
41->52 [style = dotted, label="true"];
40->25 [style = dotted, label="true"];
48->78 [style = bold, label=""];
14->41 [style = bold, label=""];
69->32 [style = bold, label=""];
49->42 [style = bold, label=""];
23->27 [style = bold, label=""];
6->23 [style = solid, label="i"];
61->73 [style = solid, label="i"];
7->47 [style = bold, label=""];
18->27 [style = solid, label="expectedKeys"];
38->82 [style = bold, label=""];
74->57 [style = bold, label=""];
39->43 [style = bold, label=""];
44->50 [style = solid, label="getter"];
40->16 [style = dotted, label="true"];
45->28 [style = bold, label=""];
60->59 [style = bold, label=""];
24->22 [style = bold, label=""];
26->39 [style = bold, label=""];
11->2 [style = bold, label=""];
44->0 [style = solid, label="getter"];
41->52 [style = bold, label=""];
20->21 [style = bold, label=""];
9->23 [style = bold, label=""];
60->79 [style = solid, label="i"];
6->27 [style = solid, label="i"];
28->33 [style = bold, label=""];
44->28 [style = solid, label="getter"];
60->59 [style = solid, label="i"];
56->27 [style = solid, label="expectedKeys"];
5->47 [style = dotted, label="true"];
19->5 [style = solid, label="i"];
49->19 [style = dashed, label="0"];
68->71 [style = bold, label=""];
44->4 [style = solid, label="getter"];
28->26 [style = dotted, label="true"];
52->26 [style = dashed, label="0"];
7->37 [style = dashed, label="0"];
55->13 [style = solid, label="builder"];
9->27 [style = solid, label="i"];
53->54 [style = dotted, label="true"];
44->2 [style = solid, label="getter"];
51->66 [style = bold, label=""];
82->81 [style = solid, label="i"];
}
