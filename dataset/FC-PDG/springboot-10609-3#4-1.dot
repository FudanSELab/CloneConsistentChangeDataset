digraph {
10 [style = filled, label = "byte(( archive = createFakeZipArchive(\"test.txt\",\"Fake content\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "mockSuccessfulProjectGeneration(request)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String fileName = UUID.randomUUID().toString() + \".zip\"@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(file.exists()).as(\"file should not exist\").isFalse()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{assertThat(file.delete()).as(\"failed to delete test file\").isTrue()}@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "byte(( archive = createFakeZipArchive(\"test.txt\",\"Fake content\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String fileName = UUID.randomUUID().toString() + \".zip\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(file.exists()).as(\"file should have been saved instead\").isTrue()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(file.exists()).as(\"file should have been saved instead\").isTrue()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "mockSuccessfulProjectGeneration(request)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{assertThat(file.delete()).as(\"failed to delete test file\").isTrue()}@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "File file = new File(fileName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "generateProjectAndExtractUnknownContentType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MockHttpProjectGenerationRequest request = new MockHttpProjectGenerationRequest(null,fileName,archive)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "generateProjectAndExtractUnsupportedArchive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "generateProjectAndExtractUnsupportedArchive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File folder = this.temporaryFolder.newFolder()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "@TempDir File tempDir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(this.command.run(\"--extract\",folder.getAbsolutePath())).isEqualTo(ExitStatus.OK)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
17->8 [style = bold, label=""];
5->8 [style = bold, label=""];
17->8 [style = solid, label="request"];
16->0 [style = bold, label=""];
0->7 [style = solid, label="fileName"];
5->8 [style = solid, label="request"];
2->1 [style = bold, label=""];
8->3 [style = bold, label=""];
10->17 [style = solid, label="archive"];
12->15 [style = dotted, label="true"];
14->10 [style = bold, label=""];
10->17 [style = bold, label=""];
12->16 [style = bold, label=""];
1->0 [style = bold, label=""];
10->5 [style = solid, label="request"];
16->0 [style = solid, label="fileName"];
3->4 [style = bold, label=""];
0->17 [style = solid, label="fileName"];
0->5 [style = solid, label="fileName"];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
14->10 [style = solid, label="archive"];
10->5 [style = bold, label=""];
5->17 [style = dashed, label="0"];
18->1 [style = bold, label=""];
10->5 [style = solid, label="archive"];
6->10 [style = bold, label=""];
11->13 [style = bold, label=""];
7->6 [style = bold, label=""];
16->10 [style = solid, label="fileName"];
3->8 [style = dashed, label="0"];
8->11 [style = bold, label=""];
}
