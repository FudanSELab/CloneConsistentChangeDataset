digraph {
1 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "c.get().header(from(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "c.get().header(of((Supplier<?>)null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "c.get().header(of(MediaType.JSON)).run().assertBody().is(\"application/json\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c.get().header(from(null)).run().assertBody().is(VALUE)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "c.get().header(of(null)).run().assertBody().isEmpty()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "c.get().header(from((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(\"application/json\")@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "c.get().header(from(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "c.get().header(from(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "c.get().header(from(null)).run().assertBody().isEmpty()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "c.get().header(of(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "c.get().header(from((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "c.get().header(from((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "c.get().header(of((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "c.get().header(of((MediaType)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "c.get().header(new From(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "c.get().header(of((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "c.get().header(new ContentType(VALUE)).run().assertBody().is(VALUE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->9 [style = bold, label=""];
3->24 [style = bold, label=""];
2->22 [style = dashed, label="0"];
8->11 [style = dashed, label="0"];
9->11 [style = bold, label=""];
11->12 [style = bold, label=""];
5->14 [style = dashed, label="0"];
10->18 [style = dashed, label="0"];
7->10 [style = bold, label=""];
0->7 [style = bold, label=""];
12->14 [style = bold, label=""];
6->0 [style = bold, label=""];
16->13 [style = bold, label=""];
7->13 [style = dashed, label="0"];
3->5 [style = bold, label=""];
13->18 [style = bold, label=""];
8->3 [style = bold, label=""];
10->1 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
21->20 [style = bold, label=""];
18->19 [style = bold, label=""];
4->9 [style = bold, label=""];
17->9 [style = bold, label=""];
15->16 [style = bold, label=""];
6->15 [style = dashed, label="0"];
19->2 [style = bold, label=""];
22->21 [style = bold, label=""];
9->8 [style = bold, label=""];
1->22 [style = bold, label=""];
24->5 [style = bold, label=""];
3->12 [style = dashed, label="0"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
5->6 [style = bold, label=""];
}
