digraph {
12 [style = filled, label = "zipArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "sources.length == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int bufferSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T,R>(sources,combiner,bufferSize,false))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Objects.requireNonNull(sources,\"sources is null\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Objects.requireNonNull(combiner,\"combiner is null\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "combineLatestArray['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "boolean delayError@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "ObjectHelper.verifyPositive(bufferSize,\"bufferSize\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "@NonNull ObservableSource<? extends T> sources@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "@NonNull Function<? super Object((,? extends R> zipper@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "@NonNull Function<? super Object((,? extends R> zipper@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int bufferSize@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "boolean delayError@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "@NonNull Function<? super Object((,? extends R> combiner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableZip<>(sources,null,zipper,bufferSize,delayError))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "sources.length == 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "zipArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return empty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "@NonNull ObservableSource<? extends T> sources@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Objects.requireNonNull(zipper,\"zipper is null\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "@NonNull Publisher<? extends T>(( sources@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ObjectHelper.verifyPositive(bufferSize,\"bufferSize\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->14 [style = solid, label="zipper"];
0->3 [style = bold, label=""];
11->14 [style = solid, label="bufferSize"];
18->16 [style = solid, label="combiner"];
1->17 [style = dotted, label="true"];
3->21 [style = dashed, label="0"];
18->21 [style = solid, label="combiner"];
7->16 [style = dashed, label="0"];
7->14 [style = dashed, label="0"];
13->14 [style = solid, label="sources"];
9->2 [style = solid, label="bufferSize"];
15->18 [style = dotted, label="true"];
1->3 [style = bold, label=""];
15->22 [style = dotted, label="true"];
9->22 [style = dashed, label="0"];
5->3 [style = solid, label="zipper"];
20->1 [style = bold, label=""];
12->0 [style = bold, label=""];
8->4 [style = dotted, label="true"];
5->7 [style = solid, label="zipper"];
22->7 [style = solid, label="bufferSize"];
1->17 [style = bold, label=""];
12->11 [style = dotted, label="true"];
8->0 [style = bold, label=""];
9->3 [style = solid, label="zipper"];
12->13 [style = dotted, label="true"];
8->6 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
3->2 [style = bold, label=""];
8->5 [style = dotted, label="true"];
6->7 [style = solid, label="delayError"];
15->19 [style = dotted, label="true"];
0->1 [style = bold, label=""];
10->14 [style = solid, label="delayError"];
1->21 [style = bold, label=""];
15->20 [style = bold, label=""];
2->14 [style = bold, label=""];
7->16 [style = bold, label=""];
21->7 [style = bold, label=""];
4->7 [style = solid, label="sources"];
11->2 [style = solid, label="bufferSize"];
19->16 [style = solid, label="sources"];
8->9 [style = dotted, label="true"];
2->7 [style = bold, label=""];
9->7 [style = solid, label="bufferSize"];
12->9 [style = dotted, label="true"];
17->21 [style = bold, label=""];
19->20 [style = solid, label="sources"];
0->1 [style = dotted, label="true"];
22->16 [style = solid, label="bufferSize"];
}
