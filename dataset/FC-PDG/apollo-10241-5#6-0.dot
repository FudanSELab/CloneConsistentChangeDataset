digraph {
6 [style = filled, label = "assertEquals(ConfigSourceType.REMOTE,remoteConfigRepository.getSourceType())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Properties config = remoteConfigRepository.getConfig()@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map<String,String> configurations = Maps.newHashMap()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "RemoteConfigRepository remoteConfigRepository = new RemoteConfigRepository(someNamespace)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "configurations.put(someKey,someValue)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testLoadConfig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "doAnswer(new Answer<HttpResponse<ApolloConfig>>(){@Override public HttpResponse<ApolloConfig> answer(InvocationOnMock invocation){HttpRequest request = invocation.getArgumentAt(0,)Map<String,String> headers = request.getHeaders()assertNotNull(headers)assertTrue(headers.containsKey(Signature.HTTP_HEADER_TIMESTAMP))assertTrue(headers.containsKey(Signature.HTTP_HEADER_AUTHORIZATION))return someResponse}}).when(httpUtil).doGet(any(),any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(ConfigSourceType.REMOTE,remoteConfigRepository.getSourceType())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(someResponse.getStatusCode()).thenReturn(200)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String(( expectedArrays = {\"someKey\",\"someKey2\"}@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(configurations,config)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@26@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(someResponse.getBody()).thenReturn(someApolloConfig)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ApolloConfig someApolloConfig = assembleApolloConfig(configurations)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<String,String> configurations = Maps.newHashMap()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String someKey = \"someKey\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(configurations,config)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String(( actualArrays = config.keySet().toArray(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@6e8006)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "configurations.put(someKey,someValue)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "someSecret = \"someSecret\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ApolloConfig someApolloConfig = assembleApolloConfig(configurations)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testLoadConfigWithAccessKeySecret['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String someValue = \"someValue\"@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertArrayEquals(expectedArrays,actualArrays)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "testLoadConfig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
4->10 [style = bold, label=""];
24->23 [style = solid, label="configurations"];
7->11 [style = bold, label=""];
3->16 [style = solid, label="someKey"];
24->17 [style = solid, label="configurations"];
12->20 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
7->23 [style = dashed, label="0"];
25->22 [style = bold, label=""];
20->10 [style = solid, label="configurations"];
16->10 [style = bold, label=""];
8->2 [style = dotted, label="true"];
17->9 [style = bold, label=""];
11->6 [style = bold, label=""];
18->11 [style = bold, label=""];
14->5 [style = solid, label="actualArrays"];
2->5 [style = solid, label="expectedArrays"];
8->14 [style = bold, label=""];
20->18 [style = solid, label="configurations"];
12->10 [style = solid, label="configurations"];
1->18 [style = bold, label=""];
10->17 [style = bold, label=""];
16->17 [style = bold, label=""];
3->12 [style = bold, label=""];
12->24 [style = bold, label=""];
3->4 [style = solid, label="someValue"];
1->7 [style = bold, label=""];
12->16 [style = solid, label="someValue"];
13->1 [style = bold, label=""];
19->0 [style = bold, label=""];
20->4 [style = bold, label=""];
22->3 [style = bold, label=""];
24->16 [style = bold, label=""];
1->7 [style = solid, label="config"];
3->20 [style = bold, label=""];
10->9 [style = solid, label="someApolloConfig"];
12->4 [style = bold, label=""];
8->5 [style = dotted, label="true"];
7->23 [style = solid, label="config"];
15->0 [style = bold, label=""];
7->23 [style = bold, label=""];
21->1 [style = bold, label=""];
6->8 [style = bold, label=""];
23->6 [style = bold, label=""];
8->14 [style = dotted, label="true"];
12->24 [style = dashed, label="0"];
0->4 [style = solid, label="someKey"];
17->13 [style = solid, label="someApolloConfig"];
14->2 [style = bold, label=""];
1->18 [style = solid, label="config"];
13->21 [style = bold, label=""];
4->16 [style = bold, label=""];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
