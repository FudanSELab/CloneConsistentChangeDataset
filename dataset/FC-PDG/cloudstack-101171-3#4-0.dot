digraph {
0 [style = filled, label = "Mockito.verify(volumeServiceMock,Mockito.times(0)).expungeVolumeAsync(volumeInfoMock)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expungeVolumesInPrimaryStorageIfNeededTestVolumeInPrimaryDataStore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Mockito.doReturn(asyncCallFutureVolumeapiResultMock).when(volumeServiceMock).expungeVolumeAsync(volumeInfoMock)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Mockito.doReturn(volumeInfoMock).when(volumeDataFactoryMock).getVolume(volumeMockId,DataStoreRole.Primary)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expungeVolumesInPrimaryStorageIfNeededTestVolumeNotInPrimaryDataStore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "volumeApiServiceImpl.expungeVolumesInPrimaryStorageIfNeeded(volumeVoMock)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expungeVolumesInPrimaryStorageIfNeededTestVolumeNotInPrimaryDataStore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Mockito.verify(asyncCallFutureVolumeapiResultMock,Mockito.times(0)).get()@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Mockito.lenient().doReturn(asyncCallFutureVolumeapiResultMock).when(volumeServiceMock).expungeVolumeAsync(volumeInfoMock)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Mockito.verify(volumeServiceMock,Mockito.times(1)).expungeVolumeAsync(volumeInfoMock)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Mockito.verify(asyncCallFutureVolumeapiResultMock,Mockito.times(1)).get()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Mockito.doReturn(null).when(volumeDataFactoryMock).getVolume(volumeMockId,DataStoreRole.Primary)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->7 [style = dashed, label="0"];
2->0 [style = bold, label=""];
9->2 [style = bold, label=""];
5->3 [style = bold, label=""];
10->8 [style = bold, label=""];
0->10 [style = dashed, label="0"];
6->7 [style = bold, label=""];
0->4 [style = bold, label=""];
2->10 [style = bold, label=""];
5->9 [style = bold, label=""];
3->9 [style = dashed, label="0"];
3->2 [style = bold, label=""];
11->5 [style = bold, label=""];
4->8 [style = dashed, label="0"];
1->5 [style = bold, label=""];
7->3 [style = bold, label=""];
}
