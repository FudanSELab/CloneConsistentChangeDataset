digraph {
3 [style = filled, label = "hasNextCancels['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Observable.fromIterable(new Iterable<Integer>(){@Override public Iterator<Integer> iterator(){return new Iterator<Integer>(){@Override public boolean hasNext(){if (++count == 2) {to.dispose()}return true}@Override public Integer next(){return 1}@Override public void remove(){throw new UnsupportedOperationException()}}}}).subscribe(to)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "hasNextCancels['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "to.assertValue(1).assertNoErrors().assertNotComplete()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final TestObserver<Integer> to = new TestObserver<Integer>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Flowable.fromIterable(new Iterable<Integer>(){@Override public Iterator<Integer> iterator(){return new Iterator<Integer>(){@Override public boolean hasNext(){if (++count == 2) {ts.cancel()}return true}@Override public Integer next(){return 1}@Override public void remove(){throw new UnsupportedOperationException()}}}}).subscribe(ts)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "hasNextCancels['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ts.assertValue(1).assertNoErrors().assertNotComplete()@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8->7 [style = bold, label=""];
7->9 [style = bold, label=""];
6->8 [style = bold, label=""];
4->1 [style = bold, label=""];
2->1 [style = solid, label="ts"];
1->0 [style = bold, label=""];
0->9 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
3->2 [style = bold, label=""];
2->8 [style = dashed, label="0"];
2->1 [style = bold, label=""];
4->1 [style = solid, label="ts"];
5->4 [style = bold, label=""];
8->7 [style = solid, label="to"];
2->4 [style = dashed, label="0"];
}
