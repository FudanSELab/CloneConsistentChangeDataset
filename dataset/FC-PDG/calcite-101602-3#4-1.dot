digraph {
10 [style = filled, label = "final RelDataType rowType = typeFactory.builder().add(\"deptno\",typeFactory.createType()).add(\"empid\",typeFactory.createType()).add(\"name\",typeFactory.createType()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testLoadSorted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkColumn(loader.representationValues.get(0),ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=8, primitive=INT, signed=false), value=(100, 150, 160, 200, 0, 0, 0, 0()\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkColumn(loader.representationValues.get(2),ArrayTable.RepresentationType.OBJECT_ARRAY,\"Column(representation=ObjectArray(ordinal=2), value=(Bill, Sebastian, Theodore, Eric()\")@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkColumn(loader.representationValues.get(1),ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=5, primitive=INT, signed=false), value=(10, 10, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0()\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Enumerable<Object((> enumerable = Linq4j.asEnumerable(Arrays.asList(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@10d07ef,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@10d07f5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@10d07fb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@10d0801))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final ColumnLoader<Object((> loader = new ColumnLoader<Object((>(typeFactory,enumerable,RelDataTypeImpl.proto(rowType),null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkColumn(loader.representationValues.get(1),ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=8, primitive=INT, signed=false), value=(100, 150, 160, 200, 0, 0, 0, 0()\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testLoadSorted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testLoadSorted2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final RelDataType rowType = typeFactory.builder().add(\"empid\",typeFactory.createType()).add(\"deptno\",typeFactory.createType()).add(\"name\",typeFactory.createType()).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final JavaTypeFactoryImpl typeFactory = new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkColumn(loader.representationValues.get(0),ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=5, primitive=INT, signed=false), value=(10, 30, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0()\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->11 [style = bold, label=""];
6->2 [style = solid, label="rowType"];
2->3 [style = bold, label=""];
2->9 [style = bold, label=""];
12->1 [style = bold, label=""];
10->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
1->2 [style = solid, label="typeFactory"];
8->1 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
10->2 [style = solid, label="rowType"];
5->0 [style = bold, label=""];
3->9 [style = dashed, label="0"];
5->11 [style = dashed, label="0"];
7->2 [style = bold, label=""];
7->2 [style = solid, label="enumerable"];
4->1 [style = bold, label=""];
6->7 [style = bold, label=""];
1->10 [style = bold, label=""];
}
