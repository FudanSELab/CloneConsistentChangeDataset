digraph {
17 [style = filled, label = "Snapshot snapshot@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "CloseableIterable<ManifestFile> filtered = CloseableIterable.filter(manifests,null)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "boolean ignoreResiduals@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "planFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "boolean caseSensitive@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Snapshot snapshot@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "boolean ignoreResiduals@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Expression rowFilter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "CloseableIterable<ManifestFile> manifests = allDataManifestFiles(ops.current().snapshots())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Expression rowFilter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ResidualEvaluator residuals = ResidualEvaluator.unpartitioned(filter)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CloseableIterable<ManifestFile> manifests = CloseableIterable.withNoopClose(snapshot.dataManifests())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "boolean colStats@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String specString = PartitionSpecParser.toJson(PartitionSpec.unpartitioned())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return CloseableIterable.transform(manifests,null)@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "planFiles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TableOperations ops@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Expression partitionFilter = Projections.inclusive(transformSpec(fileSchema,table().spec(),PARTITION_FIELD_PREFIX),caseSensitive).project(rowFilter)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "TableOperations ops@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ManifestEvaluator manifestEval = ManifestEvaluator.forPartitionFilter(partitionFilter,table().spec(),caseSensitive)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "TableOperations ops@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Expression rowFilter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return CloseableIterable.transform(filtered,null)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "return CloseableIterable.transform(manifests,null)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "boolean caseSensitive@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Snapshot snapshot@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Expression filter = ignoreResiduals? Expressions.alwaysTrue(): rowFilter@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String schemaString = SchemaParser.toJson(schema())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "planFiles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "boolean ignoreResiduals@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "boolean colStats@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15->17 [style = dotted, label="true"];
15->19 [style = dotted, label="true"];
2->21 [style = solid, label="manifests"];
29->24 [style = dotted, label="true"];
0->4 [style = bold, label=""];
29->11 [style = dotted, label="true"];
20->16 [style = bold, label=""];
29->23 [style = dotted, label="true"];
3->2 [style = bold, label=""];
27->0 [style = solid, label="rowFilter"];
29->28 [style = bold, label=""];
20->16 [style = solid, label="partitionFilter"];
15->18 [style = dotted, label="true"];
14->0 [style = solid, label="rowFilter"];
28->8 [style = bold, label=""];
18->0 [style = solid, label="ignoreResiduals"];
15->11 [style = dotted, label="true"];
11->0 [style = solid, label="ignoreResiduals"];
29->26 [style = dotted, label="true"];
4->20 [style = bold, label=""];
15->2 [style = bold, label=""];
2->8 [style = bold, label=""];
10->0 [style = solid, label="ignoreResiduals"];
9->0 [style = solid, label="rowFilter"];
8->1 [style = bold, label=""];
3->10 [style = dotted, label="true"];
16->21 [style = bold, label=""];
14->20 [style = solid, label="rowFilter"];
28->30 [style = solid, label="manifests"];
29->27 [style = dotted, label="true"];
21->13 [style = solid, label="filtered"];
3->6 [style = dotted, label="true"];
3->11 [style = dotted, label="true"];
4->12 [style = bold, label=""];
0->4 [style = solid, label="filter"];
15->22 [style = dotted, label="true"];
3->7 [style = dotted, label="true"];
29->25 [style = dotted, label="true"];
0->21 [style = solid, label="filter"];
15->14 [style = dotted, label="true"];
2->12 [style = solid, label="manifests"];
3->5 [style = dotted, label="true"];
3->9 [style = dotted, label="true"];
4->30 [style = bold, label=""];
2->28 [style = dashed, label="0"];
11->16 [style = solid, label="caseSensitive"];
21->13 [style = bold, label=""];
1->0 [style = bold, label=""];
12->30 [style = dashed, label="0"];
}
