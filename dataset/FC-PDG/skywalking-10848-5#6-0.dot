digraph {
12 [style = filled, label = "database.setId(service.getId())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "long endTimestamp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "getAllBrowserServices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "SearchResponse response = getClient().search(ServiceTraffic.INDEX_NAME,sourceBuilder)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long startTimestamp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sourceBuilder.size(queryMaxSize)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return buildServices(response)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.NODE_TYPE,NodeType.Browser.value()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Database database = new Database()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "database.setName(service.getName())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "getAllDatabases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List<Service> serviceList = buildServices(response)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "databases.add(database)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<Database> databases = new ArrayList<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return databases@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "getAllBrowserServices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.NODE_TYPE,NodeType.Database.value()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->3 [style = bold, label=""];
5->8 [style = bold, label=""];
9->16 [style = dashed, label="0"];
18->13 [style = solid, label="databases"];
4->6 [style = bold, label=""];
4->0 [style = dotted, label="true"];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
5->11 [style = solid, label="response"];
19->6 [style = bold, label=""];
10->6 [style = bold, label=""];
11->18 [style = bold, label=""];
1->9 [style = bold, label=""];
5->8 [style = solid, label="response"];
6->1 [style = bold, label=""];
7->5 [style = bold, label=""];
3->7 [style = bold, label=""];
15->14 [style = solid, label="database"];
17->14 [style = bold, label=""];
1->16 [style = bold, label=""];
6->5 [style = solid, label="sourceBuilder"];
9->3 [style = bold, label=""];
1->3 [style = solid, label="boolQueryBuilder"];
14->15 [style = bold, label=""];
5->11 [style = bold, label=""];
15->12 [style = bold, label=""];
14->13 [style = bold, label=""];
8->11 [style = dashed, label="0"];
4->2 [style = dotted, label="true"];
}
