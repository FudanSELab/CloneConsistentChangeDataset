digraph {
8 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(11)),f.eq(f.exDayTs,f.literal(32))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" AND(>=($9, 2010-11-01 00:00:00), <($9, 2010-12-01 00:00:00)), false)\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(2)),f.eq(f.exDayTs,f.literal(31))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" AND(>=($9, 2010-02-01 00:00:00), <($9, 2010-03-01 00:00:00)), false)\"))@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(0))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" false)\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(13))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" false)\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testExtractRewriteForInvalidMonthComparison['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(14))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" false)\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(12))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" AND(>=($9, 2010-12-01 00:00:00), <($9, 2011-01-01 00:00:00)))\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(1))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" AND(>=($9, 2010-01-01 00:00:00), <($9, 2010-02-01 00:00:00)))\"))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testExtractRewriteForInvalidMonthComparison['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Fixture2 f = new Fixture2()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testExtractRewriteForInvalidDayComparison['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
2->8 [style = solid, label="f"];
3->6 [style = bold, label=""];
5->2 [style = bold, label=""];
4->1 [style = bold, label=""];
10->2 [style = bold, label=""];
6->0 [style = bold, label=""];
1->9 [style = dashed, label="0"];
4->8 [style = dashed, label="0"];
2->9 [style = solid, label="f"];
2->4 [style = bold, label=""];
2->4 [style = solid, label="f"];
7->2 [style = bold, label=""];
2->3 [style = solid, label="f"];
2->1 [style = solid, label="f"];
2->0 [style = solid, label="f"];
2->8 [style = bold, label=""];
2->6 [style = solid, label="f"];
8->9 [style = bold, label=""];
}
