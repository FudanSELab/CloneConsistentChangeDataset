digraph {
4 [style = filled, label = "List<Tuple> tuples = getTuples(pstream)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StatsStream statsStream = new StatsStream(zkHost,COLLECTION,paramsA,metrics)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(mini.doubleValue() == 0.0D)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Tuple tuple = tuples.get(0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Double sumi = tuple.getDouble(\"sum(a_i)\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Double maxi = tuple.getDouble(\"max(a_i)\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Double count = tuple.getDouble(\"count(*)\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(maxf.doubleValue() == 10.0D)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testNonePartitionKeys['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "testStatsStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(count.doubleValue() == 10)@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testNonePartitionKeys['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(avgi.doubleValue() == 7.0D)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(sumf.doubleValue() == 55.0D)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_s asc,a_f asc\",\"partitionKeys\",\"none\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "ParallelStream pstream = new ParallelStream(zkHost,COLLECTION,stream,2,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "attachStreamFactory(pstream)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Double maxf = tuple.getDouble(\"max(a_f)\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assert(tuples.size() == 1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assert(tuples.size() == 20)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Double avgi = tuple.getDouble(\"avg(a_i)\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Double mini = tuple.getDouble(\"min(a_i)\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Metric(( metrics = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Double minf = tuple.getDouble(\"min(a_f)\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(sumi.longValue() == 70)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(avgf.doubleValue() == 5.5D)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "SolrParams sParamsA = StreamingTest.mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_s asc,a_f asc\",\"partitionKeys\",\"none\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,paramsA)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Double avgf = tuple.getDouble(\"avg(a_f)\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<Tuple> tuples = getTuples(statsStream)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(maxi.doubleValue() == 14.0D)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Double sumf = tuple.getDouble(\"sum(a_f)\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTrue(minf.doubleValue() == 1.0D)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
29->15 [style = bold, label=""];
9->0 [style = bold, label=""];
7->10 [style = bold, label=""];
25->23 [style = bold, label=""];
20->26 [style = bold, label=""];
12->11 [style = bold, label=""];
23->13 [style = solid, label="metrics"];
30->32 [style = bold, label=""];
5->9 [style = dashed, label="0"];
16->17 [style = bold, label=""];
9->0 [style = solid, label="stream"];
3->4 [style = bold, label=""];
34->30 [style = bold, label=""];
13->16 [style = bold, label=""];
17->19 [style = bold, label=""];
18->28 [style = bold, label=""];
8->7 [style = bold, label=""];
15->22 [style = bold, label=""];
10->9 [style = solid, label="sParamsA"];
2->10 [style = dashed, label="0"];
26->31 [style = bold, label=""];
22->18 [style = bold, label=""];
11->34 [style = bold, label=""];
21->20 [style = bold, label=""];
19->14 [style = bold, label=""];
28->33 [style = bold, label=""];
31->35 [style = bold, label=""];
5->0 [style = bold, label=""];
24->21 [style = bold, label=""];
25->13 [style = solid, label="paramsA"];
23->13 [style = bold, label=""];
13->16 [style = solid, label="statsStream"];
7->2 [style = bold, label=""];
33->24 [style = bold, label=""];
1->16 [style = dashed, label="0"];
27->7 [style = bold, label=""];
5->0 [style = solid, label="stream"];
0->4 [style = solid, label="pstream"];
14->29 [style = bold, label=""];
2->25 [style = dashed, label="0"];
0->3 [style = solid, label="pstream"];
2->5 [style = solid, label="paramsA"];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
7->25 [style = bold, label=""];
6->7 [style = bold, label=""];
35->12 [style = bold, label=""];
2->5 [style = bold, label=""];
}
