digraph {
8 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testClearField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(1,onCacheCalled.get())@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final IndexWriter writer = new IndexWriter(new ByteBuffersDirectory(),new IndexWriterConfig(new KeywordAnalyzer()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "doc.add(new StringField(\"field_2\",\"thisisanotherstring\",Store.NO))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LeafReaderContext leafReaderContext = reader.getContext().leaves().get(0)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final AtomicInteger onRemovalCalled = new AtomicInteger()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final AtomicInteger onRemovalCalled = new AtomicInteger()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ifdService.clearField(\"field_2\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final IndexReader reader = DirectoryReader.open(writer)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final MappedFieldType mapper1 = new TextFieldMapper.Builder(\"s\").fielddata(true).build(ctx).fieldType()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,onRemovalCalled.get())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(2,onRemovalCalled.get())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "loadField1.close()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "doc.add(new StringField(\"s\",\"thisisastring\",Store.NO))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final MappedFieldType mapper2 = new TextFieldMapper.Builder(\"field_2\").fielddata(true).build(ctx).fieldType()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final IndexReader reader = wrap? ElasticsearchDirectoryReader.wrap(open,new ShardId(\"test\",\"_na_\",1)): open@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "reader.close()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Document doc = new Document()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "doc.add(new StringField(\"field_1\",\"thisisastring\",Store.NO))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "writer.close()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "reader.close()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "LeafFieldData loadField2 = ifd2.load(leafReaderContext)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "LeafFieldData loadField1 = ifd1.load(leafReaderContext)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ifdService.setListener(new IndexFieldDataCache.Listener(){@Override public void onCache(ShardId shardId,String fieldName,Accountable ramUsage){if (wrap) {assertEquals(new ShardId(\"test\",\"_na_\",1),shardId)}{assertNull(shardId)}onCacheCalled.incrementAndGet()}@Override public void onRemoval(ShardId shardId,String fieldName,boolean wasEvicted,long sizeInBytes){if (wrap) {assertEquals(new ShardId(\"test\",\"_na_\",1),shardId)}{assertNull(shardId)}onRemovalCalled.incrementAndGet()}})@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ifdService.clear()@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final boolean wrap = randomBoolean()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "writer.close()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final BuilderContext ctx = new BuilderContext(indexService.getIndexSettings().getSettings(),new ContentPath(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ifdService.clearField(\"field_1\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final IndexFieldDataService ifdService = new IndexFieldDataService(indexService.getIndexSettings(),indicesService.getIndicesFieldDataCache(),indicesService.getCircuitBreakerService(),indexService.mapperService())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testClearField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "load.close()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final MappedFieldType mapper1 = new TextFieldMapper.Builder(\"field_1\").fielddata(true).build(ctx).fieldType()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "AtomicFieldData loadField1 = ifd1.load(leafReaderContext)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "IndexFieldData<?> ifd = ifdService.getForField(mapper1)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "AtomicFieldData load = ifd.load(leafReaderContext)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ifdService.clearField(\"field_1\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "DirectoryReader open = DirectoryReader.open(writer)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final AtomicInteger onCacheCalled = new AtomicInteger()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final IndicesService indicesService = getInstanceFromNode()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final IndexService indexService = createIndex(\"test\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,onRemovalCalled.get())@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "LeafReaderContext leafReaderContext = reader.getContext().leaves().get(0)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "writer.addDocument(doc)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testFieldDataCacheListener['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final AtomicInteger onCacheCalled = new AtomicInteger()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ifdService.clear()@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(1,onCacheCalled.get())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46->44 [style = bold, label=""];
23->45 [style = solid, label="doc"];
4->3 [style = bold, label=""];
17->38 [style = solid, label="leafReaderContext"];
13->50 [style = dashed, label="0"];
32->52 [style = bold, label=""];
26->7 [style = solid, label="doc"];
33->17 [style = bold, label=""];
45->49 [style = bold, label=""];
27->30 [style = bold, label=""];
17->28 [style = solid, label="leafReaderContext"];
29->39 [style = dashed, label="0"];
30->23 [style = bold, label=""];
49->43 [style = solid, label="open"];
16->7 [style = bold, label=""];
23->26 [style = bold, label=""];
14->10 [style = bold, label=""];
31->4 [style = bold, label=""];
32->27 [style = bold, label=""];
9->20 [style = bold, label=""];
20->14 [style = bold, label=""];
6->24 [style = bold, label=""];
48->53 [style = bold, label=""];
47->49 [style = solid, label="writer"];
11->19 [style = bold, label=""];
44->14 [style = bold, label=""];
15->16 [style = bold, label=""];
28->51 [style = bold, label=""];
18->49 [style = dashed, label="0"];
28->38 [style = dashed, label="0"];
25->2 [style = bold, label=""];
36->1 [style = bold, label=""];
43->46 [style = bold, label=""];
0->36 [style = bold, label=""];
37->12 [style = bold, label=""];
29->48 [style = dashed, label="0"];
3->34 [style = bold, label=""];
29->28 [style = bold, label=""];
7->43 [style = solid, label="wrap"];
52->10 [style = solid, label="mapper1"];
35->0 [style = bold, label=""];
52->47 [style = bold, label=""];
33->48 [style = solid, label="leafReaderContext"];
27->10 [style = solid, label="mapper1"];
8->42 [style = bold, label=""];
51->50 [style = bold, label=""];
24->31 [style = bold, label=""];
21->13 [style = bold, label=""];
5->12 [style = bold, label=""];
7->14 [style = solid, label="wrap"];
1->21 [style = bold, label=""];
12->25 [style = bold, label=""];
17->39 [style = bold, label=""];
50->40 [style = bold, label=""];
26->15 [style = bold, label=""];
49->7 [style = bold, label=""];
18->9 [style = bold, label=""];
33->48 [style = bold, label=""];
39->38 [style = bold, label=""];
7->18 [style = bold, label=""];
7->43 [style = bold, label=""];
23->18 [style = solid, label="writer"];
17->29 [style = solid, label="leafReaderContext"];
17->39 [style = solid, label="leafReaderContext"];
15->26 [style = dashed, label="0"];
27->52 [style = dashed, label="0"];
10->33 [style = bold, label=""];
26->45 [style = bold, label=""];
2->32 [style = bold, label=""];
34->35 [style = bold, label=""];
40->31 [style = bold, label=""];
41->12 [style = bold, label=""];
13->8 [style = bold, label=""];
38->22 [style = bold, label=""];
17->29 [style = bold, label=""];
47->23 [style = bold, label=""];
8->11 [style = bold, label=""];
30->33 [style = solid, label="mapper2"];
31->8 [style = bold, label=""];
53->28 [style = bold, label=""];
28->22 [style = bold, label=""];
22->6 [style = bold, label=""];
}
