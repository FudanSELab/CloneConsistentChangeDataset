digraph {
26 [style = filled, label = "Assert.assertEquals(6L,result)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ceilingOneField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"a\",6.5)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(1D,result)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "values.clear()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(-1L,result)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(-1D,result)@@@16@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(1L,result)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ceilingOneField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"ceil(a)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.put(\"a\",6)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "values.put(\"a\",-1.1)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(2L,result)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "multOneField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "values.clear()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "values.clear()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(6.5D,result)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
28->29 [style = bold, label=""];
5->10 [style = bold, label=""];
13->21 [style = solid, label="result"];
0->16 [style = bold, label=""];
1->17 [style = solid, label="result"];
19->18 [style = bold, label=""];
14->25 [style = bold, label=""];
7->23 [style = dashed, label="0"];
16->27 [style = bold, label=""];
13->3 [style = solid, label="result"];
3->26 [style = dashed, label="0"];
16->24 [style = solid, label="result"];
2->1 [style = bold, label=""];
3->14 [style = bold, label=""];
26->14 [style = bold, label=""];
18->12 [style = bold, label=""];
15->21 [style = dashed, label="0"];
16->10 [style = solid, label="result"];
8->6 [style = bold, label=""];
9->7 [style = bold, label=""];
15->3 [style = bold, label=""];
16->19 [style = bold, label=""];
25->16 [style = bold, label=""];
1->4 [style = solid, label="result"];
1->17 [style = bold, label=""];
15->26 [style = bold, label=""];
5->16 [style = dashed, label="0"];
9->23 [style = bold, label=""];
13->26 [style = solid, label="result"];
29->6 [style = bold, label=""];
12->2 [style = bold, label=""];
20->8 [style = bold, label=""];
12->2 [style = solid, label="result"];
5->27 [style = dashed, label="0"];
0->25 [style = dashed, label="0"];
14->0 [style = bold, label=""];
21->22 [style = bold, label=""];
10->12 [style = bold, label=""];
23->13 [style = bold, label=""];
16->27 [style = solid, label="result"];
16->5 [style = solid, label="result"];
16->5 [style = bold, label=""];
11->8 [style = bold, label=""];
0->16 [style = solid, label="result"];
27->24 [style = bold, label=""];
13->15 [style = solid, label="result"];
13->15 [style = bold, label=""];
6->9 [style = bold, label=""];
22->14 [style = bold, label=""];
13->21 [style = bold, label=""];
10->24 [style = dashed, label="0"];
8->29 [style = dashed, label="0"];
17->4 [style = bold, label=""];
17->2 [style = dashed, label="0"];
}
