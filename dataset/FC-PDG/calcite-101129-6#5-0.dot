digraph {
16 [style = filled, label = "call = (RexCall)predicates.pulledUpPredicates.get(1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final RelMetadataQuery mq = cluster.getMetadataQuery()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "RexCall call = (RexCall)predicates.pulledUpPredicates.get(0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "RelOptPredicateList inputSet = mq.getPulledUpPredicates(rel)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(inputRef2.getIndex(),is(0))@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final RelNode project = relBuilder.peek()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ImmutableList<RexNode> pulledUpPredicates = inputSet.pulledUpPredicates@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "relBuilder.push(deptScan)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RelMetadataQuery mq = RelMetadataQuery.instance()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "inputRef1 = (RexTableInputRef)call.getOperands().get(0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "relBuilder.join(JoinRelType.INNER,relBuilder.equals(relBuilder.field(2,0,\"DEPTNO\"),relBuilder.field(2,1,\"DEPTNO\")))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(inputRef2.getQualifiedName().equals(ImmutableList.of(\"CATALOG\",\"SALES\",\"DEPT\")))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertThat(pulledUpPredicates,sortsAs(\"(=($0, 1)(\"))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "inputRef1 = (RexTableInputRef)call.getOperands().get(0)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(inputRef1.getIndex(),is(0))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(inputRef1.getIndex(),is(7))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "RelOptTable deptTable@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "final Aggregate rel = (Aggregate)convertSql(sql)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "call = (RexCall)predicates.pulledUpPredicates.get(0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final RelBuilder relBuilder = RelBuilder.proto().create(cluster,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(call.getOperands().size(),is(2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final LogicalTableScan deptScan = LogicalTableScan.create(cluster,deptTable)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RexTableInputRef inputRef1 = (RexTableInputRef)call.getOperands().get(0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "RelOptCluster cluster@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "checkAllPredicates['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertThat(predicates.pulledUpPredicates.size(),is(1))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "RelOptTable empTable@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "testPullUpPredicatesFromAggregation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(inputRef1.getIndex(),is(0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "relBuilder.project(relBuilder.field(\"DEPTNO\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final String sql = \"select a, max(b) from (\" + \" select 1 as a, 2 as b from emp)subq\" + \"group by a\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "checkAllPredicates['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RelNode filter = relBuilder.peek()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "predicates = mq.getAllPredicates(project)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(predicates.pulledUpPredicates.isEmpty(),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RelOptCluster cluster@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(inputRef1.getQualifiedName().equals(EMP_QNAME))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "relBuilder.filter(relBuilder.equals(relBuilder.field(\"EMPNO\"),relBuilder.literal(BigDecimal.ONE)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(inputRef1.getQualifiedName().equals(EMP_QNAME))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "predicates = mq.getAllPredicates(filter)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RexTableInputRef inputRef2 = (RexTableInputRef)call.getOperands().get(1)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(predicates.pulledUpPredicates.size(),is(2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "RelOptPredicateList predicates = mq.getAllPredicates(empScan)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "relBuilder.push(empScan)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(inputRef1.getQualifiedName().equals(EMP_QNAME))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(call.getOperands().size(),is(2))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(call.getOperands().size(),is(2))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RelOptTable empTable@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final RelMetadataQuery mq = RelMetadataQuery.instance()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46->44 [style = bold, label=""];
42->39 [style = dotted, label="true"];
32->5 [style = bold, label=""];
20->33 [style = solid, label="cluster"];
29->8 [style = bold, label=""];
41->0 [style = bold, label=""];
48->47 [style = solid, label="pulledUpPredicates"];
36->18 [style = solid, label="cluster"];
3->31 [style = bold, label=""];
6->21 [style = bold, label=""];
19->29 [style = bold, label=""];
0->43 [style = bold, label=""];
22->9 [style = bold, label=""];
30->27 [style = bold, label=""];
8->3 [style = bold, label=""];
25->18 [style = bold, label=""];
43->48 [style = bold, label=""];
4->20 [style = dotted, label="true"];
42->36 [style = dotted, label="true"];
42->33 [style = bold, label=""];
33->41 [style = bold, label=""];
15->6 [style = bold, label=""];
33->1 [style = bold, label=""];
37->15 [style = bold, label=""];
1->0 [style = bold, label=""];
12->35 [style = bold, label=""];
21->30 [style = bold, label=""];
16->17 [style = bold, label=""];
18->2 [style = bold, label=""];
4->33 [style = bold, label=""];
1->41 [style = dashed, label="0"];
46->44 [style = solid, label="sql"];
42->40 [style = dotted, label="true"];
20->0 [style = solid, label="cluster"];
13->11 [style = bold, label=""];
35->37 [style = solid, label="project"];
0->32 [style = solid, label="empScan"];
36->0 [style = solid, label="cluster"];
9->23 [style = bold, label=""];
0->34 [style = bold, label=""];
36->33 [style = solid, label="cluster"];
18->2 [style = solid, label="deptScan"];
7->24 [style = bold, label=""];
17->28 [style = bold, label=""];
26->0 [style = solid, label="empTable"];
20->18 [style = solid, label="cluster"];
10->16 [style = bold, label=""];
40->18 [style = solid, label="deptTable"];
35->37 [style = bold, label=""];
48->47 [style = bold, label=""];
24->25 [style = bold, label=""];
39->0 [style = solid, label="empTable"];
14->12 [style = bold, label=""];
23->38 [style = bold, label=""];
2->14 [style = bold, label=""];
27->10 [style = bold, label=""];
28->19 [style = bold, label=""];
9->23 [style = solid, label="filter"];
36->18 [style = solid, label="deptTable"];
34->32 [style = bold, label=""];
4->36 [style = dotted, label="true"];
0->34 [style = solid, label="empScan"];
45->46 [style = bold, label=""];
38->13 [style = bold, label=""];
5->22 [style = bold, label=""];
44->43 [style = solid, label="rel"];
11->7 [style = bold, label=""];
4->26 [style = dotted, label="true"];
44->0 [style = bold, label=""];
}
