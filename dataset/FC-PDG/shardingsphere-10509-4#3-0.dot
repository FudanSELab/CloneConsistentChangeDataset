digraph {
4 [style = filled, label = "joinTableSegment.setRight(new SimpleTableSegment(0,0,new IdentifierValue(\"order\")))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "SQLStatementContext<UpdateStatement> sqlStatementContext = new UpdateStatementContext(updateStatement)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "joinTableSegment.setRight(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"order\"))))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "sqlStatement.setTableSegment(tableSegment)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "updateStatement.setTableSegment(joinTableSegment)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "new ShardingUpdateStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),mock())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DeleteMultiTableSegment tableSegment = new DeleteMultiTableSegment()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(shardingRule.getShardingLogicTableNames(sqlStatementContext.getTablesContext().getTableNames())).thenReturn(tableNames)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "joinTableSegment.setLeft(new SimpleTableSegment(0,0,new IdentifierValue(\"user\")))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertValidateUpdateModifyMultiTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tableSegment.getActualDeleteTables().add(new SimpleTableSegment(0,0,new IdentifierValue(\"order_item\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "joinTableSegment.setLeft(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"user\"))))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertValidateDeleteModifyMultiTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "JoinTableSegment joinTableSegment = new JoinTableSegment()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Collection<String> tableNames = Lists.newArrayList(\"order\",\"order_item\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(shardingRule.getShardingLogicTableNames(sqlStatementContext.getTablesContext().getTableNames())).thenReturn(shardingTableNames)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertValidateUpdateModifyMultiTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "when(shardingRule.isAllBindingTables(tableNames)).thenReturn(true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DeleteStatementContext sqlStatementContext = new DeleteStatementContext(sqlStatement)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(shardingRule.isAllBindingTables(shardingTableNames)).thenReturn(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "tableSegment.getActualDeleteTables().add(new SimpleTableSegment(0,0,new IdentifierValue(\"order\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "new ShardingDeleteStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),mock())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Collection<String> shardingTableNames = Lists.newArrayList(\"order\",\"order_item\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "tableSegment.getActualDeleteTables().add(new SimpleTableSegment(0,0,new IdentifierValue(\"user\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final DeleteStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "UpdateStatement updateStatement = createUpdateStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->20 [style = bold, label=""];
19->18 [style = bold, label=""];
18->24 [style = bold, label=""];
19->16 [style = solid, label="sqlStatementContext"];
10->3 [style = solid, label="sqlStatementContext"];
12->5 [style = bold, label=""];
4->17 [style = dashed, label="0"];
5->10 [style = solid, label="updateStatement"];
25->23 [style = bold, label=""];
10->19 [style = dashed, label="0"];
9->4 [style = bold, label=""];
3->16 [style = dashed, label="0"];
1->0 [style = solid, label="joinTableSegment"];
14->19 [style = bold, label=""];
9->22 [style = dashed, label="0"];
15->16 [style = bold, label=""];
13->11 [style = bold, label=""];
1->13 [style = bold, label=""];
8->2 [style = solid, label="tableNames"];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
21->19 [style = solid, label="sqlStatement"];
4->0 [style = bold, label=""];
20->22 [style = bold, label=""];
18->24 [style = solid, label="shardingTableNames"];
1->20 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
0->10 [style = bold, label=""];
11->0 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
17->14 [style = bold, label=""];
9->13 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
22->17 [style = bold, label=""];
8->18 [style = dashed, label="0"];
2->7 [style = bold, label=""];
4->11 [style = dashed, label="0"];
2->24 [style = dashed, label="0"];
23->14 [style = solid, label="tableSegment"];
25->21 [style = dotted, label="true"];
24->15 [style = bold, label=""];
}
