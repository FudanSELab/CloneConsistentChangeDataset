digraph {
0 [style = filled, label = "final Parser<String,Object> jsonParser = new JSONPathParser(new JSONPathSpec(true,fields),null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testWithNumbers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<JSONPathFieldSpec> fields = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"one\",\"foo?\"),jsonMap)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testWithWhackyCharacters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final Map<String,Object> jsonMap = jsonParser.parseToMap(whackyCharacterJson)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"jsonMap\",ImmutableMap.of(\"five\",5.0,\"six\",6L,\"many\",1234567878900L,\"toomany\",1.23456789E21),jsonMap)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testWithWhackyCharacters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Map<String,Object> jsonMap = jsonParser.parseToMap(WHACKY_CHARACTER_JSON)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final Map<String,Object> jsonMap = jsonParser.parseToMap(numbersJson)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->1 [style = solid, label="jsonMap"];
4->5 [style = dashed, label="0"];
5->1 [style = bold, label=""];
4->9 [style = dashed, label="0"];
5->1 [style = solid, label="jsonMap"];
9->8 [style = solid, label="jsonMap"];
2->0 [style = bold, label=""];
4->1 [style = bold, label=""];
0->9 [style = bold, label=""];
1->8 [style = dashed, label="0"];
3->2 [style = bold, label=""];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
2->0 [style = solid, label="fields"];
0->5 [style = bold, label=""];
6->2 [style = bold, label=""];
}
