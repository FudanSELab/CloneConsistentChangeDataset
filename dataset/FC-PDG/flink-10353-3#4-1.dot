digraph {
7 [style = filled, label = "assertThat(assignment4).isPresent().get().extracting(null).asInstanceOf(map(,)).hasSize(1)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assignSplitsForSharedSubscription['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(assignment1).isPresent()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SplitsAssignmentState state1 = new SplitsAssignmentState(StartCursor.defaultStartCursor(),StopCursor.defaultStopCursor(),createConfig(SubscriptionType.Shared))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertThat(assignment1.get().assignment()).hasSize(4).allSatisfy(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(assignment1).isPresent().get().extracting(null).asInstanceOf(map(,)).hasSize(5).allSatisfy(null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Optional<SplitsAssignment<PulsarPartitionSplit>> assignment2 = state1.assignSplits(Lists.newArrayList(0,1,2,3,4))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assignSplitsForSharedSubscription['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "state1.appendTopicPartitions(partitions)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Optional<SplitsAssignment<PulsarPartitionSplit>> assignment3 = state1.assignSplits(Lists.newArrayList(0,1,2,4))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(assignment3).isNotPresent()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Optional<SplitsAssignment<PulsarPartitionSplit>> assignment4 = state1.assignSplits(singletonList(3))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SplitsAssignmentState state1 = new SplitsAssignmentState(StartCursor.defaultStartCursor(),StopCursor.defaultStopCursor(),createConfig(SubscriptionType.Exclusive))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SplitsAssignmentState state1 = new SplitsAssignmentState(StopCursor.defaultStopCursor(),createConfig(SubscriptionType.Shared))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(assignment2).isNotPresent()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assignSplitsForExclusiveSubscription['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Optional<SplitsAssignment<PulsarPartitionSplit>> assignment2 = state1.assignSplits(Lists.newArrayList(0,1,2,3,4))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Optional<SplitsAssignment<PulsarPartitionSplit>> assignment1 = state1.assignSplits(Lists.newArrayList(0,1,2,3,4))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->7 [style = bold, label=""];
6->8 [style = bold, label=""];
3->11 [style = bold, label=""];
14->16 [style = bold, label=""];
15->17 [style = bold, label=""];
0->10 [style = bold, label=""];
1->2 [style = bold, label=""];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
17->1 [style = bold, label=""];
11->12 [style = dashed, label="0"];
10->1 [style = bold, label=""];
11->9 [style = bold, label=""];
12->9 [style = bold, label=""];
11->16 [style = dashed, label="0"];
16->9 [style = bold, label=""];
9->4 [style = bold, label=""];
4->0 [style = bold, label=""];
2->5 [style = bold, label=""];
4->15 [style = bold, label=""];
}
