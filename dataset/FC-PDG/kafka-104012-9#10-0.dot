digraph {
27 [style = filled, label = "final Set<String> updatedSubscriptionSet = new HashSet<>(updatedSubscription)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<TopicPartition> newAssignment = Arrays.asList(tp,otherPartition)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(newAssignmentSet,rebalanceListener.assigned)@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "testRejoinGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "metadata.needMetadataForAllTopics(true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(newAssignmentSet,subscriptions.assignedPartitions())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client.prepareResponse(syncGroupResponse(newAssignment,Errors.NONE.code()))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String otherTopicName = \"otherTopic\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE.code()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,Arrays.asList(topicName))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssignment))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(updatedSubscriptionSet,subscriptions.subscription())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testMetadataRefreshDuringRebalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topicName,otherTopicName)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topicName,otherTopic)),rebalanceListener)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,\"consumer\",\"leader\",Errors.NONE.code()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "metadata.update(cluster,time.milliseconds())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topicName))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "TopicPartition otherPartition = new TopicPartition(otherTopicName,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "coordinator.poll(time.milliseconds())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){final Map<String,Integer> updatedPartitions = new HashMap<>()for (String topic : updatedSubscription)updatedPartitions.put(topic,1)metadata.update(TestUtils.clusterWith(1,updatedPartitions),time.milliseconds())return true}},syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest join = (JoinGroupRequest)bodyProtocolMetadata protocolMetadata = join.groupProtocols().iterator().next()PartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(protocolMetadata.metadata())protocolMetadata.metadata().rewind()return subscription.topics().containsAll(updatedSubscriptionSet)}},joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE.code()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(coordinator.needRejoin())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,singletonList(tp)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Set<TopicPartition> newAssignmentSet = new HashSet<>(newAssignment)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(singleton(topicName),subscriptions.subscription())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,rebalanceListener.revokedCount)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE.code()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "subscriptions.subscribe(singleton(topicName),rebalanceListener)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topicName,otherTopicName))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(rebalanceListener.revoked.isEmpty())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44->42 [style = bold, label=""];
16->13 [style = bold, label=""];
29->5 [style = bold, label=""];
29->31 [style = solid, label="consumerId"];
31->22 [style = bold, label=""];
21->19 [style = bold, label=""];
0->25 [style = solid, label="newAssignment"];
17->6 [style = bold, label=""];
7->12 [style = bold, label=""];
49->35 [style = bold, label=""];
15->21 [style = bold, label=""];
20->26 [style = bold, label=""];
9->31 [style = bold, label=""];
29->11 [style = solid, label="consumerId"];
1->28 [style = solid, label="initialSubscription"];
27->28 [style = bold, label=""];
25->20 [style = solid, label="newAssignmentSet"];
11->12 [style = solid, label="updatedSubscriptions"];
1->31 [style = dashed, label="0"];
22->49 [style = dashed, label="0"];
8->34 [style = dashed, label="0"];
5->15 [style = bold, label=""];
0->7 [style = solid, label="newAssignment"];
47->46 [style = bold, label=""];
41->49 [style = bold, label=""];
4->29 [style = bold, label=""];
42->48 [style = bold, label=""];
19->2 [style = bold, label=""];
38->41 [style = bold, label=""];
29->1 [style = solid, label="consumerId"];
25->8 [style = solid, label="newAssignmentSet"];
26->24 [style = bold, label=""];
36->33 [style = bold, label=""];
24->18 [style = bold, label=""];
29->7 [style = solid, label="consumerId"];
15->0 [style = solid, label="otherPartition"];
30->29 [style = bold, label=""];
14->27 [style = solid, label="updatedSubscription"];
29->42 [style = dashed, label="0"];
3->0 [style = bold, label=""];
1->22 [style = bold, label=""];
0->10 [style = solid, label="newAssignment"];
6->20 [style = bold, label=""];
32->38 [style = bold, label=""];
31->28 [style = solid, label="initialSubscription"];
5->15 [style = solid, label="otherTopicName"];
12->10 [style = bold, label=""];
27->6 [style = solid, label="updatedSubscriptionSet"];
42->43 [style = solid, label="otherTopic"];
29->12 [style = solid, label="consumerId"];
29->22 [style = solid, label="consumerId"];
0->25 [style = bold, label=""];
25->11 [style = bold, label=""];
10->23 [style = bold, label=""];
39->40 [style = bold, label=""];
37->34 [style = bold, label=""];
12->6 [style = solid, label="subscription"];
33->43 [style = bold, label=""];
40->47 [style = bold, label=""];
48->32 [style = bold, label=""];
46->45 [style = bold, label=""];
23->17 [style = bold, label=""];
18->8 [style = bold, label=""];
13->9 [style = bold, label=""];
14->27 [style = bold, label=""];
28->3 [style = bold, label=""];
45->37 [style = bold, label=""];
5->14 [style = solid, label="otherTopicName"];
9->1 [style = bold, label=""];
22->14 [style = bold, label=""];
35->13 [style = bold, label=""];
14->3 [style = solid, label="updatedSubscription"];
43->39 [style = bold, label=""];
29->28 [style = solid, label="consumerId"];
5->11 [style = solid, label="otherTopicName"];
11->7 [style = bold, label=""];
27->12 [style = solid, label="updatedSubscriptionSet"];
9->36 [style = bold, label=""];
2->16 [style = bold, label=""];
}
