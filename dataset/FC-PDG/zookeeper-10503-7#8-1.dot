digraph {
12 [style = filled, label = "@TempDir File tmpdir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testOutputStreamFailureNE['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "RuntimeException ex@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File target = new File(tmpdir,\"target.txt\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(target.exists(),\"file should not exist\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final File tmp = new File(tmpdir,\"target.txt.tmp\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "exception = true@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(exception,\"should have raised an exception\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "target.delete()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testOutputStreamFailureNE['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "new AtomicFileWritingIdiom(target,new WriterStatement(){@Override public void write(Writer os){os.write(\"after\")os.flush()assertTrue(tmp.exists(),\"implementation of AtomicFileOutputStream has changed, update the test\")throw new RuntimeException()}})@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testWriterFailureNE['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "new AtomicFileWritingIdiom(target,new OutputStreamStatement(){@Override public void write(OutputStream os){os.write(\"after\".getBytes(StandardCharsets.US_ASCII))os.flush()assertTrue(tmp.exists(),\"implementation of AtomicFileOutputStream has changed, update the test\")throw new RuntimeException()}})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "boolean exception = false@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(tmp.exists(),\"tmp file should have been deleted\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(target.exists(),\"file should not exist\")@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->1 [style = solid, label="exception"];
5->9 [style = bold, label=""];
13->12 [style = dotted, label="true"];
2->1 [style = bold, label=""];
12->0 [style = solid, label="tmpdir"];
3->6 [style = bold, label=""];
0->4 [style = solid, label="target"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
3->6 [style = dotted, label="true"];
9->7 [style = bold, label=""];
7->14 [style = bold, label=""];
6->2 [style = bold, label=""];
0->14 [style = solid, label="target"];
11->0 [style = bold, label=""];
8->5 [style = bold, label=""];
12->8 [style = solid, label="tmpdir"];
15->0 [style = bold, label=""];
0->8 [style = bold, label=""];
4->14 [style = dashed, label="0"];
14->2 [style = bold, label=""];
1->10 [style = bold, label=""];
6->1 [style = solid, label="exception"];
13->0 [style = bold, label=""];
}
