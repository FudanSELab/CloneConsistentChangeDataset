digraph {
0 [style = filled, label = "Map<String,AliasMetadata> aliases = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(ex.getMessage(),containsString(\"index template (test-template(\"))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\",\"bar-*\"),new Template(null,null,aliases),null,null,null,null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testRejectDuplicateAliasV2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String indexName = randomFrom(\"foo-123\",\"bar-xyz\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final IllegalArgumentException ex = expectThrows(,null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"),new Template(null,null,aliases),null,null,null,null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final IllegalArgumentException ex = expectThrows(,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testHiddenAffectsResolvedV2Templates['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5,7)),false).put(\"test-template\",template).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(ex.getMessage(),containsString(\"index template (test-template(\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "aliases.put(\"foo-write\",AliasMetadata.builder(\"foo-write\").build())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testHiddenAffectsResolvedV2Templates['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String aliasName = randomFrom(\"foo-write\",\"bar-write\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final IllegalArgumentException ex = expectThrows(,null)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata,indexName,aliasName,Boolean.TRUE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "aliases.put(\"bar-write\",AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->16 [style = solid, label="aliases"];
5->12 [style = dashed, label="0"];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
8->3 [style = solid, label="aliasName"];
16->10 [style = bold, label=""];
8->3 [style = bold, label=""];
3->12 [style = bold, label=""];
2->10 [style = bold, label=""];
3->13 [style = dashed, label="0"];
10->6 [style = bold, label=""];
0->7 [style = bold, label=""];
10->3 [style = solid, label="metadata"];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
12->4 [style = bold, label=""];
1->16 [style = bold, label=""];
2->16 [style = dashed, label="0"];
15->0 [style = bold, label=""];
5->4 [style = bold, label=""];
0->2 [style = solid, label="aliases"];
6->8 [style = bold, label=""];
1->2 [style = bold, label=""];
13->14 [style = bold, label=""];
6->3 [style = solid, label="indexName"];
8->13 [style = bold, label=""];
}
