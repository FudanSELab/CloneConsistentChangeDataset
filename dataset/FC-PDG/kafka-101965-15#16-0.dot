digraph {
26 [style = filled, label = "assertThat(nonCorruptedTask.state(),is(Task.State.RUNNING))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(corruptedTask.partitionsForOffsetReset,equalTo(taskId00Partitions))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertThat(nonRunningNonCorruptedTask.state(),is(Task.State.CREATED))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "consumer.seek(t1p0,offsetAndMetadata)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "shouldNotCommitNonRunningNonCorruptedTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "replay(activeTaskCreator,topologyBuilder,consumer,changeLogReader)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "nonRunningNonCorruptedTask.setCommitNeeded()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(nonCorruptedTask.partitionsForOffsetReset,equalTo(Collections.emptySet()))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "taskManager.setPartitionResetter(null)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "consumer.commitSync(eq(emptyMap()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assignment.putAll(taskId01Assignment)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(time.milliseconds(),null),is(true))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(assignment))).andStubReturn(asList(corruptedTask,nonRunningNonCorruptedTask))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final OffsetAndMetadata offsetAndMetadata = new OffsetAndMetadata(0L)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectLastCall()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final StateMachineTask nonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(consumer)@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "consumer.pause(taskId00Partitions)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "verify(consumer)@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final StateMachineTask nonRunningNonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "expectLastCall()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expect(consumer.committed(taskId00Partitions)).andReturn(singletonMap(t1p0,offsetAndMetadata))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "taskManager.handleAssignment(assignment,emptyMap())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ProcessorStateManager stateManager = EasyMock.createStrictMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "corruptedTask.setChangelogOffsets(singletonMap(t1p0,0L))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "stateManager.markChangelogAsCorrupted(taskId00Partitions)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectLastCall().anyTimes()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "taskManager.handleCorruption(singleton(taskId00))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(nonRunningNonCorruptedTask.commitPrepared)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "nonCorruptedTask.setCommitNeeded()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "corruptedTask.setChangelogOffsets(singletonMap(t1p0,0L))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final StateMachineTask corruptedTask = new StateMachineTask(taskId00,taskId00Partitions,true,stateManager)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expect(consumer.assignment()).andReturn(taskId00Partitions)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "replay(stateManager)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expect(consumer.assignment()).andReturn(taskId00Partitions)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(activeTaskCreator)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->24 [style = bold, label=""];
2->40 [style = solid, label="corruptedTask"];
14->38 [style = bold, label=""];
15->11 [style = solid, label="stateManager"];
40->12 [style = bold, label=""];
24->18 [style = bold, label=""];
0->32 [style = bold, label=""];
36->15 [style = bold, label=""];
21->28 [style = solid, label="offsetAndMetadata"];
22->6 [style = bold, label=""];
30->15 [style = bold, label=""];
8->35 [style = bold, label=""];
13->17 [style = bold, label=""];
9->37 [style = dashed, label="0"];
21->23 [style = solid, label="offsetAndMetadata"];
19->14 [style = solid, label="assignment"];
3->21 [style = bold, label=""];
9->22 [style = solid, label="nonCorruptedTask"];
23->28 [style = solid, label="offsetAndMetadata"];
16->8 [style = bold, label=""];
38->41 [style = bold, label=""];
19->22 [style = bold, label=""];
15->2 [style = solid, label="stateManager"];
17->3 [style = bold, label=""];
8->31 [style = bold, label=""];
27->11 [style = bold, label=""];
14->26 [style = bold, label=""];
11->2 [style = bold, label=""];
12->13 [style = bold, label=""];
10->19 [style = bold, label=""];
32->26 [style = bold, label=""];
2->37 [style = bold, label=""];
15->27 [style = bold, label=""];
15->9 [style = solid, label="stateManager"];
2->9 [style = bold, label=""];
5->0 [style = bold, label=""];
28->1 [style = bold, label=""];
37->39 [style = bold, label=""];
14->32 [style = dashed, label="0"];
22->40 [style = dashed, label="0"];
10->0 [style = solid, label="assignment"];
37->40 [style = solid, label="nonRunningNonCorruptedTask"];
34->16 [style = bold, label=""];
8->25 [style = bold, label=""];
7->0 [style = bold, label=""];
29->17 [style = bold, label=""];
22->40 [style = bold, label=""];
18->16 [style = bold, label=""];
6->12 [style = bold, label=""];
29->7 [style = bold, label=""];
20->29 [style = bold, label=""];
7->5 [style = bold, label=""];
2->22 [style = solid, label="corruptedTask"];
23->1 [style = solid, label="offsetAndMetadata"];
41->34 [style = bold, label=""];
23->28 [style = bold, label=""];
13->20 [style = bold, label=""];
1->7 [style = bold, label=""];
39->19 [style = bold, label=""];
0->14 [style = bold, label=""];
21->23 [style = bold, label=""];
4->15 [style = bold, label=""];
31->33 [style = bold, label=""];
33->25 [style = bold, label=""];
15->37 [style = solid, label="stateManager"];
9->10 [style = bold, label=""];
}
