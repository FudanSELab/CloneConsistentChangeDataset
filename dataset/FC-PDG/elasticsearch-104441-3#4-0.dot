digraph {
8 [style = filled, label = "when(ingestService.getPipeline(innerPipelineId)).thenReturn(inner)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String innerPipelineId = \"inner\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "outerConfig.put(\"name\",innerPipelineId)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(\"Cycle detected for pipeline: inner\",e.getRootCause().getMessage())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testThrowsOnRecursivePipelineInvocations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Processor outerProc = factory.create(Collections.emptyMap(),null,outerConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(ingestService.getPipeline(innerPipelineId)).thenReturn(inner)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "outerProc.execute(testIngestDocument)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testAllowsRepeatedPipelineInvocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "outerProc.execute(testIngestDocument)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "outerConfig.put(\"pipeline\",innerPipelineId)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "outerConfig.put(\"pipeline\",innerPipelineId)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(ingestService.getPipeline(outerPipelineId)).thenReturn(outer)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<String,Object> outerConfig = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map<String,Object> innerConfig = new HashMap<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Pipeline outer = new Pipeline(outerPipelineId,null,null,new CompoundProcessor(factory.create(Collections.emptyMap(),null,outerConfig)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IngestDocument testIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),new HashMap<>())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Pipeline inner = new Pipeline(innerPipelineId,null,null,new CompoundProcessor())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ElasticsearchException e = expectThrows(,null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String outerPipelineId = \"outer\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testThrowsOnRecursivePipelineInvocations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "IngestService ingestService = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Pipeline inner = new Pipeline(innerPipelineId,null,null,new CompoundProcessor(factory.create(Collections.emptyMap(),null,innerConfig)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "innerConfig.put(\"name\",outerPipelineId)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "outerConfig.put(\"name\",innerPipelineId)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "innerConfig.put(\"pipeline\",outerPipelineId)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->9 [style = bold, label=""];
17->5 [style = bold, label=""];
16->13 [style = bold, label=""];
12->13 [style = solid, label="innerConfig"];
20->13 [style = bold, label=""];
6->2 [style = solid, label="outerPipelineId"];
6->16 [style = solid, label="outerPipelineId"];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
25->23 [style = bold, label=""];
0->13 [style = solid, label="innerPipelineId"];
10->2 [style = solid, label="outerConfig"];
0->25 [style = solid, label="innerPipelineId"];
10->19 [style = bold, label=""];
3->24 [style = solid, label="testIngestDocument"];
1->3 [style = bold, label=""];
12->20 [style = bold, label=""];
7->0 [style = bold, label=""];
0->4 [style = solid, label="innerPipelineId"];
12->16 [style = bold, label=""];
11->17 [style = dashed, label="0"];
5->14 [style = bold, label=""];
3->26 [style = solid, label="testIngestDocument"];
26->24 [style = bold, label=""];
2->15 [style = solid, label="outer"];
2->12 [style = bold, label=""];
13->8 [style = solid, label="inner"];
8->17 [style = bold, label=""];
6->1 [style = bold, label=""];
3->10 [style = bold, label=""];
11->5 [style = bold, label=""];
21->26 [style = bold, label=""];
22->0 [style = bold, label=""];
23->21 [style = bold, label=""];
19->9 [style = bold, label=""];
1->9 [style = solid, label="ingestService"];
0->1 [style = bold, label=""];
9->25 [style = bold, label=""];
2->25 [style = dashed, label="0"];
10->4 [style = bold, label=""];
10->21 [style = solid, label="outerConfig"];
0->17 [style = solid, label="innerPipelineId"];
4->19 [style = dashed, label="0"];
0->11 [style = solid, label="innerPipelineId"];
25->23 [style = solid, label="inner"];
13->15 [style = bold, label=""];
0->19 [style = solid, label="innerPipelineId"];
6->20 [style = solid, label="outerPipelineId"];
8->11 [style = bold, label=""];
15->8 [style = bold, label=""];
18->0 [style = bold, label=""];
16->20 [style = dashed, label="0"];
11->21 [style = dashed, label="0"];
}
