digraph {
16 [style = filled, label = "new StreamsProducer(mockConfig,\"threadId-StreamThread-0\",eosAlphaMockClientSupplier,null,processId,logContext)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldSetTransactionIdUsingTaskIdIfEosAlphaEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "expect(mockConfig.getString(StreamsConfig.APPLICATION_ID_CONFIG)).andReturn(\"appId\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldSetTransactionIdUsingProcessIdIfEosV2Enabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "verify(mockMap)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expect(mockConfig.getProducerConfigs(\"threadId-StreamThread-0-producer\")).andReturn(mockMap)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verify(mockMap)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expect(mockConfig.getString(StreamsConfig.PROCESSING_GUARANTEE_CONFIG)).andReturn(StreamsConfig.EXACTLY_ONCE_V2).anyTimes()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final StreamsConfig mockConfig = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "replay(mockMap,mockConfig)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldSetTransactionIdUsingTaskIdIfEosAlphaEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Map<String,Object> mockMap = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expect(mockConfig.getString(StreamsConfig.APPLICATION_ID_CONFIG)).andReturn(\"appId\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expect(mockMap.get(ProducerConfig.TRANSACTIONAL_ID_CONFIG)).andReturn(\"appId-0_0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expect(mockMap.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG,\"appId-\" + processId + \"-0\")).andReturn(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "new StreamsProducer(mockConfig,\"threadId\",eosAlphaMockClientSupplier,new TaskId(0,0),null,logContext,mockTime)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "replay(mockMap,mockConfig)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expect(mockMap.get(ProducerConfig.TRANSACTIONAL_ID_CONFIG)).andReturn(\"appId-\" + processId)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final StreamsConfig mockConfig = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Map<String,Object> mockMap = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final UUID processId = UUID.randomUUID()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->15 [style = dashed, label="0"];
8->16 [style = bold, label=""];
16->13 [style = bold, label=""];
8->16 [style = dashed, label="0"];
9->20 [style = solid, label="mockMap"];
5->2 [style = solid, label="mockConfig"];
6->1 [style = solid, label="mockMap"];
9->13 [style = solid, label="mockMap"];
11->6 [style = bold, label=""];
4->19 [style = bold, label=""];
6->2 [style = solid, label="mockMap"];
5->12 [style = solid, label="mockConfig"];
14->16 [style = solid, label="processId"];
3->6 [style = bold, label=""];
9->17 [style = bold, label=""];
8->12 [style = dashed, label="0"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
0->20 [style = dashed, label="0"];
12->1 [style = bold, label=""];
19->8 [style = bold, label=""];
2->12 [style = bold, label=""];
20->4 [style = bold, label=""];
0->7 [style = bold, label=""];
14->15 [style = solid, label="processId"];
8->1 [style = bold, label=""];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
15->0 [style = bold, label=""];
9->17 [style = dashed, label="0"];
6->0 [style = solid, label="mockMap"];
17->15 [style = bold, label=""];
4->19 [style = dashed, label="0"];
14->9 [style = bold, label=""];
0->20 [style = bold, label=""];
0->8 [style = solid, label="mockConfig"];
0->16 [style = solid, label="mockConfig"];
6->9 [style = bold, label=""];
9->8 [style = solid, label="mockMap"];
18->14 [style = bold, label=""];
2->8 [style = bold, label=""];
5->8 [style = solid, label="mockConfig"];
}
