digraph {
10 [style = filled, label = "long userVoDuplicatedMockId = 67l@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "usersWithSameUserName.add(userVoMock)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mockito.doReturn(accountIdUserDuplicated).when(accountUserDuplicatedMock).getId()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Mockito.doReturn(accountUserDuplicatedMock).when(_accountDao).findById(accountIdUserDuplicated)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Mockito.lenient().doReturn(userName).when(userVoDuplicatedMock).getUsername()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "validateAndUpdateUsernameIfNeededTestDuplicatedUserButInDifferentDomains['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Mockito.lenient().doReturn(userName).when(userVoMock).getUsername()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "long domanIdCurrentUser = 22l@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Mockito.doReturn(userName).when(userVoDuplicatedMock).getUsername()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "long accountIdUserDuplicated = 98l@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Mockito.doReturn(45l).when(accountUserDuplicatedMock).getDomainId()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "accountManagerImpl.validateAndUpdateUsernameIfNeeded(UpdateUserCmdMock,userVoMock,accountMock)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Mockito.doReturn(usersWithSameUserName).when(userDaoMock).findUsersByName(userName)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Mockito.lenient().doReturn(accountIdUserDuplicated).when(accountUserDuplicatedMock).getId()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Mockito.lenient().doReturn(accountMock).when(_accountDao).findById(accountMockId)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "String userName = \"username\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Mockito.doReturn(userName).when(UpdateUserCmdMock).getUsername()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Mockito.verify(userVoMock).setUsername(userName)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Mockito.doReturn(userName).when(userVoMock).getUsername()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Mockito.doReturn(accountMock).when(_accountDao).findById(accountMockId)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "validateAndUpdateUsernameIfNeededTestNoDuplicatedUserNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "validateAndUpdateUsernameIfNeededTestDuplicatedUserButInDifferentDomains['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "List<UserVO> usersWithSameUserName = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Mockito.doReturn(domanIdCurrentUser).when(accountMock).getDomainId()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "UserVO userVoDuplicatedMock = Mockito.mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Mockito.doReturn(userVoDuplicatedMockId).when(userVoDuplicatedMock).getId()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mockito.doReturn(accountIdUserDuplicated).when(userVoDuplicatedMock).getAccountId()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Account accountUserDuplicatedMock = Mockito.mock()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "usersWithSameUserName.add(userVoDuplicatedMock)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Account accountUserDuplicatedMock = Mockito.mock()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->14 [style = solid, label="userVoDuplicatedMock"];
21->5 [style = solid, label="userName"];
17->5 [style = bold, label=""];
15->10 [style = bold, label=""];
29->4 [style = bold, label=""];
0->7 [style = solid, label="accountIdUserDuplicated"];
7->1 [style = bold, label=""];
28->15 [style = bold, label=""];
5->23 [style = bold, label=""];
11->1 [style = bold, label=""];
8->19 [style = bold, label=""];
17->9 [style = bold, label=""];
0->12 [style = bold, label=""];
20->28 [style = dashed, label="0"];
4->21 [style = bold, label=""];
25->4 [style = bold, label=""];
11->23 [style = dashed, label="0"];
1->18 [style = bold, label=""];
19->17 [style = bold, label=""];
12->24 [style = bold, label=""];
16->22 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
13->16 [style = bold, label=""];
26->22 [style = bold, label=""];
16->26 [style = dashed, label="0"];
3->28 [style = bold, label=""];
15->17 [style = bold, label=""];
3->20 [style = bold, label=""];
22->0 [style = bold, label=""];
10->13 [style = bold, label=""];
13->26 [style = bold, label=""];
6->24 [style = dashed, label="0"];
6->8 [style = bold, label=""];
9->14 [style = bold, label=""];
21->18 [style = solid, label="userName"];
8->27 [style = dashed, label="0"];
5->11 [style = bold, label=""];
27->19 [style = bold, label=""];
23->7 [style = bold, label=""];
20->15 [style = bold, label=""];
24->27 [style = bold, label=""];
11->7 [style = bold, label=""];
21->3 [style = bold, label=""];
14->5 [style = bold, label=""];
}
