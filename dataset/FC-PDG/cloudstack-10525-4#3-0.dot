digraph {
5 [style = filled, label = "Mockito.doReturn(Mockito.mock()).when(storagePoolHostDaoMock).findByPoolHost(storagePoolVoMockId,hostMockId)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mockito.doNothing().when(virtualMachineManagerImpl).executeManagedStorageChecksWhenTargetStoragePoolProvided(Mockito.any(),Mockito.any(),Mockito.any())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "userDefinedVolumeToStoragePoolMap.put(volumeMockId,storagePoolVoMockId)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Mockito.verify(userDefinedVolumeToStoragePoolMap,times(1)).keySet()@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "buildMapUsingUserInformationTestTargetHostHasAccessToPool['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "buildMapUsingUserInformationTestUserDefinedMigrationMapEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(storagePoolVoMock,volumeToPoolObjectMap.get(volumeVoMock))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "buildMapUsingUserInformationTestTargetHostHasAccessToPool['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Mockito.verify(userDefinedVolumeToStoragePoolMap,times(0)).keySet()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(volumeToPoolObjectMap.isEmpty())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertFalse(volumeToPoolObjectMap.isEmpty())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "HashMap<Long,Long> userDefinedVolumeToStoragePoolMap = Mockito.spy(new HashMap<>())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(volumeToPoolObjectMap.isEmpty())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<Volume,StoragePool> volumeToPoolObjectMap = virtualMachineManagerImpl.buildMapUsingUserInformation(virtualMachineProfileMock,hostMock,userDefinedVolumeToStoragePoolMap)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->3 [style = bold, label=""];
5->1 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
10->0 [style = bold, label=""];
4->9 [style = dashed, label="0"];
6->0 [style = bold, label=""];
12->11 [style = bold, label=""];
8->5 [style = bold, label=""];
3->2 [style = bold, label=""];
0->1 [style = solid, label="userDefinedVolumeToStoragePoolMap"];
7->8 [style = bold, label=""];
0->1 [style = bold, label=""];
1->9 [style = bold, label=""];
4->12 [style = dashed, label="0"];
13->0 [style = bold, label=""];
0->7 [style = bold, label=""];
1->12 [style = bold, label=""];
}
