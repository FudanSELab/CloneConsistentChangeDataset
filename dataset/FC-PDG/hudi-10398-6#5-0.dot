digraph {
7 [style = filled, label = "assertThat(actual,is(expected))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(inputFormat,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "options.put(FlinkOptions.READ_AS_STREAMING.key(),\"true\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(inputFormat,instanceOf())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String expected = \"(\" + \"+I(id1, Danny, 24, 1970-01-01T00:00:00.001, par1(, \" + \"+I(id2, Stephen, 34, 1970-01-01T00:00:00.002, par1((\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "InputFormat<RowData,?> inputFormat = this.tableSource.getInputFormat()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TestData.writeData(TestData.DATA_SET_UPDATE_DELETE,conf)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(actual,is(expected))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "beforeEach(HoodieTableType.MERGE_ON_READ,options)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestData.writeData(TestData.DATA_SET_INSERT_UPDATE_DELETE,conf)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String actual = TestData.rowDataToString(result)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testReadWithDeletesCOW['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "beforeEach(HoodieTableType.COPY_ON_WRITE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<RowData> result = readData(inputFormat)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String expected = \"(\" + \"+I(id1, Danny, 19, 1970-01-01T00:00:00.001, par1(, \" + \"-U(id1, Danny, 19, 1970-01-01T00:00:00.001, par1(, \" + \"+U(id1, Danny, 20, 1970-01-01T00:00:00.002, par1(, \" + \"-U(id1, Danny, 20, 1970-01-01T00:00:00.002, par1(, \" + \"+U(id1, Danny, 21, 1970-01-01T00:00:00.003, par1(, \" + \"-U(id1, Danny, 21, 1970-01-01T00:00:00.003, par1(, \" + \"+U(id1, Danny, 22, 1970-01-01T00:00:00.004, par1(, \" + \"-D(id1, Danny, 22, 1970-01-01T00:00:00.005, par1((\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testReadChangesUnMergedMOR['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,String> options = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testReadChangesUnMergedMOR['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "options.put(FlinkOptions.CHANGELOG_ENABLED.key(),\"true\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
14->5 [style = bold, label=""];
12->0 [style = bold, label=""];
6->7 [style = solid, label="expected"];
8->4 [style = bold, label=""];
10->9 [style = bold, label=""];
4->5 [style = bold, label=""];
1->8 [style = bold, label=""];
2->10 [style = bold, label=""];
5->10 [style = solid, label="inputFormat"];
0->1 [style = bold, label=""];
16->14 [style = solid, label="inputFormat"];
17->9 [style = solid, label="actual"];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
5->17 [style = bold, label=""];
5->2 [style = solid, label="inputFormat"];
10->9 [style = solid, label="result"];
10->9 [style = solid, label="expected"];
2->14 [style = dashed, label="0"];
11->8 [style = bold, label=""];
13->16 [style = bold, label=""];
3->0 [style = bold, label=""];
16->14 [style = bold, label=""];
5->17 [style = solid, label="result"];
15->13 [style = bold, label=""];
6->7 [style = bold, label=""];
9->7 [style = solid, label="actual"];
16->5 [style = solid, label="inputFormat"];
17->10 [style = bold, label=""];
0->8 [style = solid, label="options"];
18->15 [style = bold, label=""];
}
