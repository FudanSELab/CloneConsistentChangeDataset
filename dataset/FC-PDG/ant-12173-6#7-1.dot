digraph {
10 [style = filled, label = "calls >= expectedValues.length@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "event.getTarget().getName().isEmpty()@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "error = new AssertionFailedError(\"Unexpected invocation of\" + \" target \" + event.getTarget().getName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "targetStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "event.getTarget().getName().equals(\"\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "targetStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "BuildEvent event@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(expectedBasedirs(calls++(,event.getProject().getBaseDir().getAbsolutePath())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expectedValues(calls++(,event.getProject().getProperty(key))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "error == null@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "targetStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
5->10 [style = bold, label=""];
3->1 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
0->4 [style = dotted, label="true"];
10->3 [style = bold, label=""];
11->4 [style = dotted, label="true"];
2->7 [style = dashed, label="0"];
10->9 [style = dotted, label="true"];
2->10 [style = bold, label=""];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
7->5 [style = dotted, label="true"];
7->5 [style = bold, label=""];
6->4 [style = dotted, label="true"];
3->8 [style = bold, label=""];
9->3 [style = bold, label=""];
1->8 [style = dashed, label="0"];
10->9 [style = bold, label=""];
2->5 [style = dotted, label="true"];
6->7 [style = bold, label=""];
3->8 [style = dotted, label="true"];
9->3 [style = solid, label="error"];
3->1 [style = dotted, label="true"];
2->5 [style = bold, label=""];
}
