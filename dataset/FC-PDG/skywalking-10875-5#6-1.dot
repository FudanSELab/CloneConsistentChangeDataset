digraph {
12 [style = filled, label = "condition.setName(metrics.getName())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final List<MetricsValues> metricsValues = query.readLabeledMetricsValues(condition,labels,duration)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "List<IntValues> response = new ArrayList<>(metricsValues.size())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final int numOfLinear@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "int i = 0@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final MetricCondition metrics@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return getMetricQueryService().getSubsetOfMultipleLinearIntValues(metrics.getName(),metrics.getId(),linearIndex,StepToDownSampling.transform(duration.getStep()),startTimeBucket,endTimeBucket)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "long startTimeBucket = DurationUtils.INSTANCE.exchangeToTimeBucket(duration.getStart())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "labels.add(String.valueOf(i))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "i < numOfLinear@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "condition.setEntity(new MockEntity(metrics.getId()))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "getSubsetOfMultipleLinearIntValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return response@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "long endTimeBucket = DurationUtils.INSTANCE.exchangeToTimeBucket(duration.getEnd())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<String> labels = new ArrayList<>(numOfLinear)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "getMultipleLinearIntValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MetricsCondition condition = new MetricsCondition()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final int numOfLinear@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<Integer> linearIndex@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "metricsValues.forEach(null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "getMultipleLinearIntValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return getMetricQueryService().getMultipleLinearIntValues(metrics.getName(),metrics.getId(),numOfLinear,StepToDownSampling.transform(duration.getStep()),startTimeBucket,endTimeBucket)@@@5@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final MetricCondition metrics@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final MetricCondition metrics@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Duration duration@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "final Duration duration@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4->5 [style = dotted, label="true"];
8->21 [style = solid, label="response"];
4->3 [style = bold, label=""];
15->10 [style = bold, label=""];
10->20 [style = bold, label=""];
4->1 [style = dotted, label="true"];
0->6 [style = bold, label=""];
13->20 [style = solid, label="i"];
5->26 [style = dashed, label="0"];
2->6 [style = solid, label="numOfLinear"];
22->25 [style = dotted, label="true"];
18->19 [style = bold, label=""];
3->23 [style = solid, label="startTimeBucket"];
8->14 [style = bold, label=""];
9->17 [style = bold, label=""];
0->6 [style = solid, label="endTimeBucket"];
22->24 [style = dotted, label="true"];
3->0 [style = bold, label=""];
4->2 [style = dotted, label="true"];
7->19 [style = solid, label="numOfLinear"];
22->3 [style = bold, label=""];
7->20 [style = solid, label="numOfLinear"];
13->10 [style = solid, label="i"];
17->12 [style = bold, label=""];
9->5 [style = dotted, label="true"];
0->23 [style = bold, label=""];
19->13 [style = bold, label=""];
24->23 [style = solid, label="linearIndex"];
10->15 [style = solid, label="i"];
22->26 [style = dotted, label="true"];
17->11 [style = solid, label="condition"];
13->15 [style = solid, label="i"];
20->10 [style = dotted, label="true"];
3->6 [style = solid, label="startTimeBucket"];
12->18 [style = bold, label=""];
11->8 [style = bold, label=""];
9->16 [style = dotted, label="true"];
9->7 [style = dotted, label="true"];
16->11 [style = solid, label="duration"];
19->11 [style = solid, label="labels"];
20->15 [style = bold, label=""];
14->21 [style = bold, label=""];
6->23 [style = dashed, label="0"];
20->15 [style = dotted, label="true"];
10->20 [style = solid, label="i"];
20->11 [style = bold, label=""];
13->20 [style = bold, label=""];
0->23 [style = solid, label="endTimeBucket"];
}
