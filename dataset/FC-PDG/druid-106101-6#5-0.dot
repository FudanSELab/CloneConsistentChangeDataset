digraph {
12 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClauses),VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7ab,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7b3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7bb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7c3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7cb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7d3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7db,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7e3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7eb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7f3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd7fb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd803): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd80e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd816,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd81e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd826,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd82e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd836,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd83e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd846,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd84e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd856,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd85e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd866,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9dd86e))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"page\",\"this matches nothing\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup).makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\"),ImmutableList.of())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\"),ImmutableList.of())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryNameUsingIsoCodeLookup(JoinType.LEFT))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(originalFilter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClauses),VirtualColumns.EMPTY,originalFilter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "test_makeCursors_factToCountryLeft_filterExcludesAllLeftRowsUsingLookup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "test_makeCursors_factToCountryLeft_filterExcludesAllLeftRowsUsingLookup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnNumber(JoinType.INNER))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
3->5 [style = solid, label="originalFilter"];
11->9 [style = solid, label="filter"];
4->1 [style = solid, label="joinableClauses"];
0->5 [style = dashed, label="0"];
2->3 [style = bold, label=""];
3->7 [style = solid, label="originalFilter"];
4->7 [style = solid, label="joinableClauses"];
3->1 [style = solid, label="originalFilter"];
11->12 [style = bold, label=""];
1->0 [style = bold, label=""];
12->9 [style = bold, label=""];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = solid, label="originalFilter"];
1->12 [style = dashed, label="0"];
7->5 [style = bold, label=""];
4->1 [style = bold, label=""];
0->9 [style = dashed, label="0"];
11->12 [style = solid, label="filter"];
10->12 [style = solid, label="joinableClauses"];
10->11 [style = bold, label=""];
}
