digraph {
31 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "String command = \"--zkSvr \" + ZK_ADDR + \" --enableInstance \" + clusterName + \" \" + disableNode + \" false\"@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IdealState idealState = accessor.getProperty(keyBuilder.idealStates(\"TestDB0\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "accessor.setProperty(keyBuilder.idealStates(\"TestDB0\"),idealState)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ClusterController controller = new ClusterController(clusterName,\"controller_0\",ZK_ADDR)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "participants(i(.syncStart()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Thread.sleep(1000)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ZKHelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,baseAccessor)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "String disableNode = \"localhost_12919\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expectInstanceStateMap.put(disableNode,\"OFFLINE\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "idealState.setRebalanceMode(RebalanceMode.CUSTOMIZED)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String disableNode = \"localhost_12918\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testDisableNodeAutoIS['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"!=\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(result)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,String> expectInstanceStateMap = new HashMap<String,String>()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\" \"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MockParticipant(( participants = new MockParticipant((((@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "participants(i(.syncStop()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "command = \"--zkSvr \" + ZK_ADDR + \" --enableInstance \" + clusterName + \" \" + disableNode + \" true\"@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(result)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Map<String,Map<String,String>> expectStateMap = new HashMap<String,Map<String,String>>()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertTrue(result,disableNode + \" should NOT be in OFFLINE\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < 5@@@41@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "controller.syncStop()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "idealState.setIdealStateMode(IdealStateModeProperty.CUSTOMIZED.toString())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "participants(i( = new MockParticipant(clusterName,instanceName,ZK_ADDR,null)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expectStateMap.put(\".*\",expectInstanceStateMap)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "controller.syncStart()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@45@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,8,n,3,\"MasterSlave\",true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(result)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final int n = 5@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testDisableNodeCustomIS['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"==\")@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertTrue(result,disableNode + \" should be in OFFLINE\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testDisableNodeCustomIS['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->28 [style = bold, label=""];
33->30 [style = solid, label="methodName"];
21->32 [style = bold, label=""];
50->42 [style = solid, label="disableNode"];
45->11 [style = bold, label=""];
14->39 [style = solid, label="result"];
28->26 [style = bold, label=""];
32->37 [style = bold, label=""];
19->38 [style = bold, label=""];
41->35 [style = bold, label=""];
12->23 [style = bold, label=""];
1->33 [style = bold, label=""];
47->51 [style = bold, label=""];
9->23 [style = solid, label="i"];
22->14 [style = bold, label=""];
37->28 [style = bold, label=""];
23->18 [style = solid, label="i"];
30->6 [style = solid, label="clusterName"];
0->21 [style = bold, label=""];
49->1 [style = bold, label=""];
35->24 [style = solid, label="result"];
30->46 [style = solid, label="clusterName"];
28->29 [style = bold, label=""];
25->51 [style = dashed, label="0"];
40->50 [style = bold, label=""];
27->44 [style = bold, label=""];
38->46 [style = solid, label="baseAccessor"];
30->47 [style = solid, label="clusterName"];
3->43 [style = bold, label=""];
36->3 [style = bold, label=""];
14->39 [style = bold, label=""];
6->42 [style = bold, label=""];
18->23 [style = dotted, label="true"];
46->31 [style = bold, label=""];
5->43 [style = solid, label="disableNode"];
38->46 [style = bold, label=""];
50->47 [style = solid, label="disableNode"];
4->1 [style = bold, label=""];
16->2 [style = bold, label=""];
5->50 [style = dashed, label="0"];
5->42 [style = solid, label="disableNode"];
23->18 [style = bold, label=""];
20->13 [style = solid, label="result"];
40->19 [style = solid, label="n"];
29->27 [style = solid, label="instanceName"];
37->29 [style = solid, label="i"];
16->0 [style = solid, label="idealState"];
26->34 [style = solid, label="result"];
28->29 [style = dotted, label="true"];
31->16 [style = bold, label=""];
40->28 [style = solid, label="n"];
18->15 [style = bold, label=""];
48->0 [style = bold, label=""];
40->5 [style = bold, label=""];
8->41 [style = bold, label=""];
29->27 [style = bold, label=""];
3->22 [style = solid, label="expectInstanceStateMap"];
52->1 [style = bold, label=""];
28->27 [style = dotted, label="true"];
28->44 [style = dotted, label="true"];
30->19 [style = solid, label="clusterName"];
20->13 [style = bold, label=""];
5->45 [style = bold, label=""];
39->8 [style = bold, label=""];
7->28 [style = solid, label="i"];
26->34 [style = bold, label=""];
11->19 [style = bold, label=""];
42->17 [style = bold, label=""];
30->21 [style = solid, label="clusterName"];
37->28 [style = solid, label="i"];
50->39 [style = solid, label="disableNode"];
30->27 [style = solid, label="clusterName"];
2->0 [style = bold, label=""];
51->20 [style = bold, label=""];
36->14 [style = solid, label="expectStateMap"];
24->6 [style = bold, label=""];
50->45 [style = bold, label=""];
13->36 [style = bold, label=""];
35->24 [style = bold, label=""];
43->22 [style = bold, label=""];
9->18 [style = bold, label=""];
34->47 [style = bold, label=""];
27->7 [style = solid, label="i"];
50->43 [style = solid, label="disableNode"];
30->14 [style = solid, label="clusterName"];
10->9 [style = bold, label=""];
25->20 [style = bold, label=""];
30->20 [style = solid, label="clusterName"];
28->7 [style = dotted, label="true"];
30->26 [style = solid, label="clusterName"];
30->15 [style = solid, label="clusterName"];
50->8 [style = solid, label="disableNode"];
9->18 [style = solid, label="i"];
30->35 [style = solid, label="clusterName"];
16->48 [style = bold, label=""];
30->8 [style = solid, label="clusterName"];
30->45 [style = solid, label="clusterName"];
5->8 [style = solid, label="disableNode"];
18->12 [style = dotted, label="true"];
19->21 [style = bold, label=""];
33->30 [style = bold, label=""];
1->30 [style = solid, label="className"];
5->39 [style = solid, label="disableNode"];
6->42 [style = solid, label="result"];
5->47 [style = solid, label="disableNode"];
30->40 [style = bold, label=""];
44->7 [style = bold, label=""];
36->6 [style = solid, label="expectStateMap"];
18->12 [style = bold, label=""];
47->25 [style = bold, label=""];
17->10 [style = bold, label=""];
7->29 [style = solid, label="i"];
}
