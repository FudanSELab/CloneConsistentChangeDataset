digraph {
2 [style = filled, label = "testConfig.setProperty(RECORD_PUBLISHER_TYPE,EFO.toString())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<String> streams = Arrays.asList(\"fakedstream1\",\"fakedstream2\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String msg = \"Invalid efo consumer arn settings for not providing consumer arns: flink.stream.efo.consumerarn.fakedstream2\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testNoneStrategyWithNotEnoughStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "thrown.expect()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testConfig.setProperty(EFO_CONSUMER_ARN_PREFIX + \".\" + \"fakedstream1\",\"fakedstream1\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "exception.expect()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testNoneStrategyWithNoStreams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String msg = \"Invalid efo consumer arn settings for not providing consumer arns: flink.stream.efo.consumerarn.fakedstream1, flink.stream.efo.consumerarn.fakedstream2\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "new FanOutRecordPublisherConfiguration(testConfig,streams)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testConfig.setProperty(EFO_REGISTRATION_TYPE,NONE.toString())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "exception.expectMessage(msg)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNoneStrategyWithNoStreams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "thrown.expectMessage(msg)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Properties testConfig = TestUtils.getStandardProperties()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->3 [style = bold, label=""];
14->3 [style = bold, label=""];
5->10 [style = bold, label=""];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
5->6 [style = solid, label="msg"];
6->9 [style = dashed, label="0"];
3->6 [style = bold, label=""];
5->9 [style = solid, label="msg"];
14->6 [style = solid, label="msg"];
9->8 [style = bold, label=""];
12->0 [style = bold, label=""];
13->1 [style = bold, label=""];
8->1 [style = solid, label="testConfig"];
4->0 [style = bold, label=""];
0->14 [style = bold, label=""];
11->0 [style = bold, label=""];
8->2 [style = bold, label=""];
6->8 [style = bold, label=""];
0->1 [style = solid, label="streams"];
10->9 [style = bold, label=""];
3->10 [style = dashed, label="0"];
2->7 [style = bold, label=""];
0->5 [style = bold, label=""];
}
