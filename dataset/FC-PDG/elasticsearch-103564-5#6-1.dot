digraph {
0 [style = filled, label = "final IndexShard indexShard = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNull(action.indexBlockLevel())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(success.get())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "result.respond(ActionListener.wrap(null,null))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Index index = new Index(\"index\",\"uuid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ShardId shardId = new ShardId(index,id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testBlocks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final int id = randomIntBetween(0,4)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final IndicesService indicesService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verify(indexShard).persistRetentionLeases()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final AtomicBoolean success = new AtomicBoolean()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final RetentionLeaseSyncAction.Request request = new RetentionLeaseSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(indexShard.shardId()).thenReturn(shardId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRetentionLeaseSyncActionOnReplica['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testRetentionLeaseSyncActionOnReplica['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final IndexService indexService = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RetentionLeases retentionLeases = mock()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new IndexNameExpressionResolver())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "when(indicesService.indexServiceSafe(index)).thenReturn(indexService)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(indexService.getShard(id)).thenReturn(indexShard)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(indexShard).updateRetentionLeasesOnReplica(retentionLeases)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final TransportWriteAction.WriteReplicaResult<RetentionLeaseSyncAction.Request> result = action.shardOperationOnReplica(request,indexShard)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
7->1 [style = solid, label="retentionLeases"];
10->18 [style = bold, label=""];
4->3 [style = bold, label=""];
3->9 [style = solid, label="indicesService"];
0->5 [style = solid, label="indexShard"];
13->12 [style = solid, label="indexService"];
12->17 [style = bold, label=""];
15->16 [style = solid, label="request"];
3->6 [style = bold, label=""];
17->14 [style = solid, label="id"];
20->3 [style = bold, label=""];
6->14 [style = solid, label="index"];
5->14 [style = bold, label=""];
18->2 [style = bold, label=""];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
15->16 [style = bold, label=""];
11->19 [style = bold, label=""];
21->3 [style = bold, label=""];
3->19 [style = solid, label="indicesService"];
14->11 [style = solid, label="shardId"];
9->19 [style = dashed, label="0"];
0->16 [style = solid, label="indexShard"];
13->12 [style = bold, label=""];
17->0 [style = bold, label=""];
16->1 [style = bold, label=""];
6->13 [style = bold, label=""];
14->15 [style = solid, label="shardId"];
7->15 [style = bold, label=""];
1->10 [style = bold, label=""];
14->11 [style = bold, label=""];
19->7 [style = bold, label=""];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
7->15 [style = solid, label="retentionLeases"];
}
