digraph {
15 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested2.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested3.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Query rangeQuery = mapperService.fieldType(\"foo2\").rangeQuery(2,5,true,true,null,null,null,null)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "termQuery = mapperService.fieldType(\"nested1.foo\").termQuery(\"bar\",null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testRangeQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "termQuery = mapperService.fieldType(\"nested3.foo\").termQuery(\"bar\",null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Query termQuery = mapperService.fieldType(\"foo\").termQuery(\"bar\",null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testTermQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testRangeQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "QueryShardContext context = createSearchContext(indexService).getQueryShardContext()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested1.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested3\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested1\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termQuery))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested2\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "termQuery = mapperService.fieldType(\"nested2.foo\").termQuery(\"bar\",null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Query rangeQuery = mapperService.fieldType(\"foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termQuery,\"nested_missing\"))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50->32 [style = bold, label=""];
26->22 [style = solid, label="rangeQuery"];
10->24 [style = solid, label="rangeQuery"];
28->20 [style = solid, label="rangeQuery"];
25->19 [style = solid, label="rangeQuery"];
29->30 [style = bold, label=""];
15->6 [style = solid, label="rangeQuery"];
6->3 [style = solid, label="rangeQuery"];
55->49 [style = bold, label=""];
10->8 [style = solid, label="rangeQuery"];
32->35 [style = solid, label="termQuery"];
6->14 [style = solid, label="rangeQuery"];
6->38 [style = dashed, label="0"];
10->17 [style = bold, label=""];
18->46 [style = dashed, label="0"];
28->1 [style = solid, label="rangeQuery"];
25->14 [style = bold, label=""];
32->34 [style = bold, label=""];
36->32 [style = solid, label="termQuery"];
1->45 [style = dashed, label="0"];
3->27 [style = bold, label=""];
36->46 [style = solid, label="termQuery"];
38->40 [style = solid, label="termQuery"];
22->4 [style = bold, label=""];
44->45 [style = solid, label="termQuery"];
32->34 [style = solid, label="termQuery"];
18->22 [style = bold, label=""];
51->48 [style = bold, label=""];
0->5 [style = solid, label="rangeQuery"];
10->32 [style = dashed, label="0"];
22->55 [style = dashed, label="0"];
43->35 [style = bold, label=""];
23->39 [style = dashed, label="0"];
44->42 [style = solid, label="termQuery"];
38->54 [style = solid, label="termQuery"];
10->17 [style = solid, label="rangeQuery"];
25->14 [style = solid, label="rangeQuery"];
45->42 [style = bold, label=""];
25->11 [style = solid, label="rangeQuery"];
16->14 [style = bold, label=""];
32->44 [style = solid, label="termQuery"];
23->12 [style = bold, label=""];
38->51 [style = solid, label="termQuery"];
0->36 [style = dashed, label="0"];
53->38 [style = bold, label=""];
14->11 [style = bold, label=""];
19->3 [style = bold, label=""];
7->1 [style = bold, label=""];
10->31 [style = bold, label=""];
15->28 [style = dashed, label="0"];
21->0 [style = bold, label=""];
26->10 [style = solid, label="rangeQuery"];
35->44 [style = bold, label=""];
15->7 [style = solid, label="rangeQuery"];
30->26 [style = bold, label=""];
10->31 [style = dashed, label="0"];
3->56 [style = dashed, label="0"];
15->20 [style = solid, label="rangeQuery"];
4->49 [style = dashed, label="0"];
4->2 [style = bold, label=""];
36->47 [style = solid, label="termQuery"];
38->56 [style = solid, label="termQuery"];
2->50 [style = dashed, label="0"];
8->43 [style = dashed, label="0"];
0->2 [style = solid, label="rangeQuery"];
0->10 [style = solid, label="rangeQuery"];
6->19 [style = solid, label="rangeQuery"];
28->9 [style = solid, label="rangeQuery"];
36->50 [style = solid, label="termQuery"];
19->48 [style = dashed, label="0"];
39->41 [style = bold, label=""];
37->45 [style = bold, label=""];
44->37 [style = bold, label=""];
52->36 [style = bold, label=""];
20->33 [style = dashed, label="0"];
28->13 [style = solid, label="rangeQuery"];
41->43 [style = bold, label=""];
31->24 [style = solid, label="rangeQuery"];
16->40 [style = dashed, label="0"];
26->2 [style = solid, label="rangeQuery"];
11->51 [style = dashed, label="0"];
8->24 [style = bold, label=""];
31->23 [style = solid, label="rangeQuery"];
20->13 [style = bold, label=""];
28->25 [style = solid, label="rangeQuery"];
9->42 [style = dashed, label="0"];
38->48 [style = solid, label="termQuery"];
28->6 [style = solid, label="rangeQuery"];
31->15 [style = solid, label="rangeQuery"];
30->31 [style = solid, label="context"];
30->28 [style = solid, label="context"];
10->12 [style = solid, label="rangeQuery"];
0->4 [style = solid, label="rangeQuery"];
9->20 [style = bold, label=""];
5->18 [style = bold, label=""];
2->10 [style = bold, label=""];
26->18 [style = solid, label="rangeQuery"];
17->23 [style = bold, label=""];
1->9 [style = bold, label=""];
49->50 [style = bold, label=""];
12->41 [style = dashed, label="0"];
15->13 [style = solid, label="rangeQuery"];
10->15 [style = solid, label="rangeQuery"];
32->39 [style = solid, label="termQuery"];
15->28 [style = bold, label=""];
30->25 [style = solid, label="context"];
12->8 [style = bold, label=""];
13->53 [style = dashed, label="0"];
44->38 [style = solid, label="termQuery"];
34->39 [style = bold, label=""];
44->53 [style = solid, label="termQuery"];
14->54 [style = dashed, label="0"];
6->16 [style = solid, label="rangeQuery"];
0->18 [style = solid, label="rangeQuery"];
13->6 [style = bold, label=""];
38->40 [style = bold, label=""];
15->9 [style = solid, label="rangeQuery"];
0->5 [style = bold, label=""];
24->15 [style = bold, label=""];
46->55 [style = bold, label=""];
54->51 [style = bold, label=""];
36->55 [style = solid, label="termQuery"];
31->12 [style = solid, label="rangeQuery"];
10->23 [style = solid, label="rangeQuery"];
0->22 [style = solid, label="rangeQuery"];
31->8 [style = solid, label="rangeQuery"];
25->27 [style = solid, label="rangeQuery"];
31->23 [style = bold, label=""];
36->47 [style = bold, label=""];
40->54 [style = bold, label=""];
48->56 [style = bold, label=""];
15->7 [style = bold, label=""];
15->1 [style = solid, label="rangeQuery"];
26->31 [style = solid, label="rangeQuery"];
17->34 [style = dashed, label="0"];
5->47 [style = dashed, label="0"];
44->37 [style = solid, label="termQuery"];
42->33 [style = bold, label=""];
47->46 [style = bold, label=""];
15->44 [style = dashed, label="0"];
28->1 [style = bold, label=""];
11->19 [style = bold, label=""];
33->53 [style = bold, label=""];
6->11 [style = solid, label="rangeQuery"];
26->4 [style = solid, label="rangeQuery"];
31->28 [style = solid, label="rangeQuery"];
6->25 [style = dashed, label="0"];
6->16 [style = bold, label=""];
30->26 [style = solid, label="context"];
24->35 [style = dashed, label="0"];
36->49 [style = solid, label="termQuery"];
32->43 [style = solid, label="termQuery"];
7->37 [style = dashed, label="0"];
44->33 [style = solid, label="termQuery"];
32->41 [style = solid, label="termQuery"];
25->3 [style = solid, label="rangeQuery"];
6->25 [style = bold, label=""];
26->18 [style = bold, label=""];
}
