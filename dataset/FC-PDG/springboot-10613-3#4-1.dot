digraph {
7 [style = filled, label = "assertThat(this.handler.lastRequest.getBuild()).isEqualTo(\"grunt\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(dependencies.contains(\"data-jpa\")).isTrue()@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(this.handler.lastRequest.getType()).isNull()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(this.handler.lastRequest.isDetectType()).isTrue()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "this.handler.disableProjectGeneration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "this.command.run(\"--build=ant\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(this.handler.lastRequest.getVersion()).isEqualTo(\"1.2.3-SNAPSHOT\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.command.run(\"-g=org.demo\",\"-a=acme\",\"-v=1.2.3-SNAPSHOT\",\"-n=acme-sample\",\"--description=Acme sample project\",\"--package-name=demo.foo\",\"-t=ant-project\",\"--build=grunt\",\"--format=web\",\"-p=war\",\"-j=1.9\",\"-l=groovy\",\"-b=1.2.0.RELEASE\",\"-d=web,data-jpa\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(dependencies).hasSize(2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "parseBuildOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(this.handler.lastRequest.getPackageName()).isEqualTo(\"demo.foo\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(this.handler.lastRequest.getPackaging()).isEqualTo(\"war\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(dependencies.contains(\"web\")).isTrue()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(this.handler.lastRequest.getDescription()).isEqualTo(\"Acme sample project\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(this.handler.lastRequest.getArtifactId()).isEqualTo(\"acme\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(this.handler.lastRequest.getGroupId()).isEqualTo(\"org.demo\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(this.handler.lastRequest.getBuild()).isEqualTo(\"ant\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(this.handler.lastRequest.getType()).isEqualTo(\"ant-project\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(this.handler.lastRequest.getBootVersion()).isEqualTo(\"1.2.0.RELEASE\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "parseProjectOptions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(this.handler.lastRequest.getLanguage()).isEqualTo(\"groovy\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(this.handler.lastRequest.getFormat()).isEqualTo(\"web\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(this.handler.lastRequest.getName()).isEqualTo(\"acme-sample\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "parseProjectOptions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "List<String> dependencies = this.handler.lastRequest.getDependencies()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(this.handler.lastRequest.getJavaVersion()).isEqualTo(\"1.9\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(this.handler.lastRequest.getFormat()).isEqualTo(\"project\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
6->21 [style = dashed, label="0"];
22->25 [style = bold, label=""];
16->0 [style = bold, label=""];
7->12 [style = bold, label=""];
0->17 [style = bold, label=""];
16->25 [style = dashed, label="0"];
18->11 [style = bold, label=""];
8->6 [style = bold, label=""];
8->24 [style = dashed, label="0"];
26->4 [style = bold, label=""];
20->4 [style = bold, label=""];
14->7 [style = bold, label=""];
6->2 [style = bold, label=""];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
13->19 [style = bold, label=""];
3->5 [style = bold, label=""];
23->24 [style = bold, label=""];
9->18 [style = bold, label=""];
10->8 [style = bold, label=""];
19->9 [style = bold, label=""];
11->3 [style = bold, label=""];
17->14 [style = bold, label=""];
24->21 [style = bold, label=""];
21->22 [style = bold, label=""];
15->4 [style = bold, label=""];
2->22 [style = dashed, label="0"];
4->23 [style = bold, label=""];
2->16 [style = bold, label=""];
}
