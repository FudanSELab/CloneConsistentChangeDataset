digraph {
13 [style = filled, label = "List<MySQLPlanNodePlain> rootNodes = loader.loadRoot(dataSource,jo,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return new MySQLPlanClassic(dataSource,query,rootNodes)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return new MySQLPlanJSON(dataSource,query,rootNodes)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Reader planData@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "List<MySQLPlanNodeJSON> rootNodes = loader.loadRoot(dataSource,jo,null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ExecutionPlanDeserializer<MySQLPlanNodeJSON> loader = new ExecutionPlanDeserializer<>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String query = getQuery(jo)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ExecutionPlanDeserializer<MySQLPlanNodePlain> loader = new ExecutionPlanDeserializer<>()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "JsonObject jo = JsonParser.parseReader(planData).getAsJsonObject()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "deserialize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String query = getQuery(jo)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String savedVersion = getVersion(jo)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return new OceanbasePlanJSON(dataSource,query,rootNodes)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "JsonObject jo = new JsonParser().parse(planData).getAsJsonObject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "deserialize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "JsonObject jo = new JsonParser().parse(planData).getAsJsonObject()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<OceanbasePlanNodeJSON> rootNodes = loader.loadRoot(dataSource,jo,null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "savedVersion.equals(\"classic\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "@NotNull Reader planData@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "deserialize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "@NotNull Reader planData@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17->13 [style = solid, label="jo"];
2->5 [style = solid, label="jo"];
2->4 [style = solid, label="jo"];
1->14 [style = dashed, label="0"];
4->6 [style = bold, label=""];
20->16 [style = dotted, label="false"];
13->15 [style = solid, label="rootNodes"];
1->9 [style = dashed, label="0"];
10->17 [style = bold, label=""];
7->9 [style = dotted, label="true"];
17->11 [style = solid, label="jo"];
7->8 [style = bold, label=""];
2->17 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
0->16 [style = solid, label="query"];
19->16 [style = bold, label=""];
10->14 [style = dotted, label="true"];
20->18 [style = bold, label=""];
17->19 [style = solid, label="jo"];
20->12 [style = dotted, label="false"];
11->0 [style = bold, label=""];
19->16 [style = solid, label="rootNodes"];
6->13 [style = dashed, label="0"];
0->15 [style = solid, label="query"];
5->0 [style = bold, label=""];
3->2 [style = bold, label=""];
8->5 [style = bold, label=""];
0->4 [style = bold, label=""];
20->12 [style = bold, label=""];
18->13 [style = bold, label=""];
20->18 [style = dotted, label="true"];
8->5 [style = solid, label="jo"];
0->20 [style = bold, label=""];
20->13 [style = dotted, label="true"];
13->15 [style = bold, label=""];
8->4 [style = solid, label="jo"];
5->6 [style = solid, label="query"];
20->19 [style = dotted, label="false"];
4->6 [style = solid, label="rootNodes"];
12->19 [style = bold, label=""];
3->1 [style = dotted, label="true"];
17->0 [style = solid, label="jo"];
20->15 [style = dotted, label="true"];
2->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
