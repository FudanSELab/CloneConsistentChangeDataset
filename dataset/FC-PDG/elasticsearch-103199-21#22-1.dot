digraph {
31 [style = filled, label = "assertThat(doc.docs().get(1).get(\"nested1.field1\"),nullValue())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(docMapper.mappers().hasNested(),equalTo(true))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DocumentMapper docMapper = createDocumentMapper(mapping(null))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertThat(doc.docs().get(6).get(\"nested1.nested2.field2\"),nullValue())@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertThat(nested1Mapper.isIncludeInParent(),equalTo(false))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "NestedObjectMapper nested2Mapper = (NestedObjectMapper)mapper2@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "assertThat(mapper1,instanceOf())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "testMultiNested['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertThat(doc.docs().get(6).get(\"nested1.nested2.field2\"),nullValue())@@@47@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertThat(nested1Mapper.isIncludeInRoot(),equalTo(false))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(doc.docs().get(2).get(\"nested1.field1\"),equalTo(\"1\"))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(nested2Mapper.isIncludeInParent(),equalTo(false))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertThat(nested2Mapper.isIncludeInRoot(),equalTo(false))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(doc.docs().get(2).get(\"field\"),nullValue())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(nested2Mapper.nested().isNested(),equalTo(true))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(doc.docs().get(5).get(\"field\"),nullValue())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(doc.docs().size(),equalTo(7))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(nested1Mapper.nested().isIncludeInParent(),equalTo(false))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(docMapper.mappers().hasNested(),equalTo(true))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testMultiObjectAndNested1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ObjectMapper mapper1 = docMapper.mappers().objectMappers().get(\"nested1\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "ObjectMapper mapper2 = docMapper.mappers().objectMappers().get(\"nested1.nested2\")@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "assertThat(doc.docs().get(6).get(\"field\"),equalTo(\"value\"))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(doc.docs().get(5).get(\"nested1.field1\"),equalTo(\"4\"))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testMultiNested['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(doc.docs().get(0).get(\"nested1.field1\"),nullValue())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(nested2Mapper.nested().isIncludeInRoot(),equalTo(false))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(doc.docs().get(2).get(\"nested1.nested2.field2\"),equalTo(\"2\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(doc.docs().get(4).get(\"field\"),nullValue())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(doc.docs().get(6).get(\"nested1.field1\"),nullValue())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(doc.docs().get(1).get(\"field\"),nullValue())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(doc.docs().get(4).get(\"nested1.nested2.field2\"),equalTo(\"6\"))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(doc.docs().get(3).get(\"field\"),nullValue())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ObjectMapper nested2Mapper = docMapper.mappers().objectMappers().get(\"nested1.nested2\")@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(mapper2,instanceOf())@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "ParsedDocument doc = docMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"field\",\"value\").startArray(\"nested1\").startObject().field(\"field1\",\"1\").startArray(\"nested2\").startObject().field(\"field2\",\"2\").endObject().startObject().field(\"field2\",\"3\").endObject().endArray().endObject().startObject().field(\"field1\",\"4\").startArray(\"nested2\").startObject().field(\"field2\",\"5\").endObject().startObject().field(\"field2\",\"6\").endObject().endArray().endObject().endArray().endObject()),XContentType.JSON))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ObjectMapper nested1Mapper = docMapper.mappers().objectMappers().get(\"nested1\")@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(doc.docs().size(),equalTo(7))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(nested2Mapper.nested().isIncludeInParent(),equalTo(true))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "NestedObjectMapper nested1Mapper = (NestedObjectMapper)mapper1@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertThat(nested1Mapper.nested().isNested(),equalTo(true))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(nested1Mapper.nested().isIncludeInRoot(),equalTo(false))@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(doc.docs().get(3).get(\"nested1.nested2.field2\"),equalTo(\"5\"))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(doc.docs().get(0).get(\"nested1.nested2.field2\"),equalTo(\"2\"))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(doc.docs().get(5).get(\"field\"),nullValue())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(doc.docs().get(6).get(\"nested1.field1\"),nullValue())@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "assertThat(doc.docs().get(5).get(\"nested1.nested2.field2\"),equalTo(\"5\"))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ObjectMapper nested1Mapper = docMapper.mappers().objectMappers().get(\"nested1\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertThat(doc.docs().get(2).get(\"field\"),nullValue())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(nested1Mapper.nested().isNested(),equalTo(true))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(doc.docs().get(1).get(\"nested1.nested2.field2\"),equalTo(\"3\"))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(doc.docs().get(0).get(\"field\"),nullValue())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(doc.docs().size(),equalTo(7))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
23->38 [style = dashed, label="0"];
36->40 [style = bold, label=""];
46->25 [style = bold, label=""];
27->0 [style = bold, label=""];
3->24 [style = bold, label=""];
10->14 [style = bold, label=""];
31->51 [style = dashed, label="0"];
19->20 [style = bold, label=""];
29->3 [style = bold, label=""];
0->2 [style = bold, label=""];
18->26 [style = bold, label=""];
23->15 [style = bold, label=""];
28->7 [style = bold, label=""];
36->41 [style = solid, label="mapper2"];
14->19 [style = bold, label=""];
31->1 [style = bold, label=""];
2->9 [style = bold, label=""];
42->36 [style = bold, label=""];
11->46 [style = bold, label=""];
13->48 [style = dashed, label="0"];
38->42 [style = bold, label=""];
51->10 [style = bold, label=""];
35->21 [style = bold, label=""];
21->18 [style = bold, label=""];
25->44 [style = bold, label=""];
26->22 [style = bold, label=""];
39->33 [style = bold, label=""];
34->0 [style = bold, label=""];
50->49 [style = bold, label=""];
0->7 [style = bold, label=""];
12->51 [style = bold, label=""];
32->39 [style = solid, label="mapper1"];
9->28 [style = bold, label=""];
5->16 [style = bold, label=""];
36->40 [style = solid, label="mapper2"];
21->45 [style = bold, label=""];
9->32 [style = dashed, label="0"];
6->5 [style = bold, label=""];
15->17 [style = bold, label=""];
13->29 [style = bold, label=""];
30->11 [style = bold, label=""];
20->46 [style = dashed, label="0"];
3->48 [style = bold, label=""];
49->52 [style = bold, label=""];
12->4 [style = bold, label=""];
24->21 [style = bold, label=""];
43->35 [style = bold, label=""];
16->31 [style = bold, label=""];
3->45 [style = dashed, label="0"];
7->23 [style = bold, label=""];
40->41 [style = bold, label=""];
48->21 [style = bold, label=""];
1->12 [style = bold, label=""];
11->8 [style = bold, label=""];
33->38 [style = bold, label=""];
32->33 [style = solid, label="mapper1"];
32->39 [style = bold, label=""];
17->13 [style = bold, label=""];
44->37 [style = bold, label=""];
2->32 [style = bold, label=""];
45->26 [style = bold, label=""];
20->30 [style = bold, label=""];
25->50 [style = bold, label=""];
47->0 [style = bold, label=""];
41->43 [style = bold, label=""];
8->25 [style = bold, label=""];
22->6 [style = bold, label=""];
}
