digraph {
17 [style = filled, label = "assertEquals(11L,consumer.position(tp))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "type == STANDBY@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "consumer.seek(tp,11L)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "shouldPollWithRightTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.replay(stateManager,storeMetadata,store)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "shouldRestoreFromBeginningAndCheckCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.COMPLETED,changelogReader.changelogMetadata(tp).state())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_BATCH))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shouldPollWithRightTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "changelogReader.register(tp,stateManager)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),consumer.lastPollTimeout())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "type == ACTIVE@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "changelogReader.restore()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(null).andReturn(9L).anyTimes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(singletonMap(tp,5L))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedLimitIndex())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_START))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_END))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,11L))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "changelogReader.restore()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "type == ACTIVE@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(5L,consumer.position(tp))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(11L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "changelogReader.restore()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->31 [style = bold, label=""];
4->9 [style = bold, label=""];
13->10 [style = bold, label=""];
4->3 [style = bold, label=""];
11->32 [style = dotted, label="true"];
39->19 [style = bold, label=""];
16->40 [style = bold, label=""];
29->17 [style = bold, label=""];
17->26 [style = bold, label=""];
11->37 [style = dotted, label="true"];
32->37 [style = bold, label=""];
9->11 [style = bold, label=""];
37->27 [style = bold, label=""];
11->1 [style = bold, label=""];
30->43 [style = bold, label=""];
35->22 [style = bold, label=""];
11->44 [style = bold, label=""];
11->1 [style = dotted, label="true"];
33->34 [style = dotted, label="true"];
43->36 [style = bold, label=""];
22->32 [style = bold, label=""];
11->35 [style = dotted, label="true"];
34->41 [style = bold, label=""];
42->12 [style = bold, label=""];
46->18 [style = bold, label=""];
25->16 [style = bold, label=""];
2->4 [style = bold, label=""];
11->22 [style = dotted, label="true"];
20->47 [style = bold, label=""];
15->35 [style = bold, label=""];
11->15 [style = bold, label=""];
8->7 [style = bold, label=""];
45->11 [style = bold, label=""];
3->9 [style = bold, label=""];
9->23 [style = bold, label=""];
12->13 [style = bold, label=""];
47->29 [style = bold, label=""];
11->44 [style = dotted, label="false"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
12->10 [style = bold, label=""];
11->0 [style = bold, label=""];
4->3 [style = dotted, label="true"];
33->21 [style = dotted, label="true"];
33->18 [style = dotted, label="false"];
10->8 [style = bold, label=""];
11->0 [style = dotted, label="false"];
33->24 [style = bold, label=""];
14->12 [style = bold, label=""];
48->20 [style = bold, label=""];
36->48 [style = bold, label=""];
38->34 [style = bold, label=""];
33->24 [style = dotted, label="false"];
33->19 [style = dotted, label="true"];
33->38 [style = bold, label=""];
40->30 [style = bold, label=""];
33->41 [style = dotted, label="true"];
19->21 [style = bold, label=""];
33->38 [style = dotted, label="true"];
31->28 [style = bold, label=""];
41->39 [style = bold, label=""];
44->27 [style = bold, label=""];
11->15 [style = dotted, label="true"];
26->33 [style = bold, label=""];
27->25 [style = bold, label=""];
33->46 [style = dotted, label="false"];
24->46 [style = bold, label=""];
28->45 [style = bold, label=""];
33->39 [style = dotted, label="true"];
6->12 [style = bold, label=""];
}
