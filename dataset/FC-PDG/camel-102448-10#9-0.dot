digraph {
16 [style = filled, label = "HttpGet get = new HttpGet(\"http://localhost:\" + getPort() + \"/test/muteWithTransfer\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"Exception\",responseString)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Exception\",responseString)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "HttpGet get = new HttpGet(\"http://localhost:\" + getPort() + \"/foo\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HttpResponse response = client.execute(get)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"Exception\",responseString)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "CloseableHttpClient client = HttpClients.createDefault()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(responseString)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "muteExceptionWithTransferExceptionTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testMuteException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testMuteException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(500,response.getStatusLine().getStatusCode())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client.close()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(500,response.getStatusLine().getStatusCode())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "get.addHeader(\"Accept\",\"application/text\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String responseString = EntityUtils.toString(response.getEntity(),\"UTF-8\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.close()@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(500,response.getStatusLine().getStatusCode())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
16->0 [style = bold, label=""];
8->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
8->3 [style = solid, label="get"];
12->15 [style = bold, label=""];
14->17 [style = bold, label=""];
16->3 [style = solid, label="get"];
1->14 [style = solid, label="responseString"];
9->6 [style = bold, label=""];
1->11 [style = bold, label=""];
8->0 [style = bold, label=""];
5->2 [style = bold, label=""];
17->12 [style = bold, label=""];
1->17 [style = solid, label="responseString"];
5->10 [style = dashed, label="0"];
1->4 [style = solid, label="responseString"];
11->10 [style = bold, label=""];
6->16 [style = bold, label=""];
7->6 [style = bold, label=""];
6->8 [style = bold, label=""];
10->2 [style = bold, label=""];
1->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->6 [style = bold, label=""];
4->11 [style = dashed, label="0"];
4->5 [style = bold, label=""];
1->11 [style = solid, label="responseString"];
}
