digraph {
10 [style = filled, label = "client.get(\"/a3\").run().assertCode().is(300).assertStringHeader(\"Foo\").is(\"bar\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MockRestClient client = MockRestClient.createLax().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.get(\"/a3\").run().assertCode().is(1101).assertHeader(\"Foo\").is(\"bar\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client.get(\"/a1\").run().assertCode().is(300).assertBody().is(\"Multiple Choices\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "client.get(\"/a2\").run().assertCode().is(300).assertBody().is(\"foo\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.get(\"/a1\").run().assertCode().is(1101).assertBody().is(\"Switching Protocols\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.get(\"/a3\").run().assertCode().is(1101).assertStringHeader(\"Foo\").is(\"bar\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "client.get(\"/a2\").run().assertCode().is(1101).assertBody().is(\"foo\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
4->1 [style = bold, label=""];
1->5 [style = dashed, label="0"];
1->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
0->4 [style = bold, label=""];
4->5 [style = bold, label=""];
3->8 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
8->9 [style = bold, label=""];
}
