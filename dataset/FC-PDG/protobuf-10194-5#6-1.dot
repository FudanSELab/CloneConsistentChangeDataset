digraph {
11 [style = filled, label = "int times = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(11,builder.getInt32ToInt32FieldOrThrow(1))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int times = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.removeInt32ToEnumField(1)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(builder.getInt32ToBytesFieldOrDefault(1,null)).isNull()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertNull(builder.getInt32ToBytesFieldOrDefault(1,null))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int times = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNull(builder.getInt32ToEnumFieldOrDefault(1,null))@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(builder.getInt32ToEnumFieldOrDefault(1,null)).isNull()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "setMapValuesUsingAccessors(builder)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "times++@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(11,builder.getStringToInt32FieldOrThrow(\"1\"))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "times < 2@@@35@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "times++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "times < 2@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "builder.removeStringToInt32Field(null)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"11\",builder.getInt32ToStringFieldOrThrow(1))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int times = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "setMapValues(builder)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(TestUtil.toBytes(\"11\"),builder.getInt32ToBytesFieldOrThrow(1))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "builder.removeStringToInt32Field(\"1\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(-1,builder.getStringToInt32FieldOrDefault(\"1\",-1))@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TestMap.Builder builder = TestMap.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.removeInt32ToBytesField(1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "times++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(builder.getInt32ToStringFieldOrThrow(1)).isEqualTo(\"11\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(TestMap.EnumValue.FOO,builder.getInt32ToEnumFieldOrThrow(1))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "builder.removeInt32ToStringField(1)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "times++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "times < 2@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(builder.getStringToInt32FieldOrDefault(\"1\",-1)).isEqualTo(-1)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertThat(builder.getInt32ToEnumFieldOrThrow(1)).isEqualTo(TestMap.EnumValue.FOO)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertNull(builder.getInt32ToStringFieldOrDefault(1,null))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(builder.getInt32ToInt32FieldOrDefault(1,-1)).isEqualTo(-1)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertWithMessage(\"expected exception\").fail()@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "times < 2@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(builder.getStringToInt32FieldOrThrow(\"1\")).isEqualTo(11)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertThat(builder.getInt32ToStringFieldOrDefault(1,null)).isNull()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertThat(builder.getInt32ToInt32FieldOrThrow(1)).isEqualTo(11)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "times++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "fail()@@@42@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int times = 0@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.removeInt32ToInt32Field(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(-1,builder.getInt32ToInt32FieldOrDefault(1,-1))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "times < 2@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(builder.getInt32ToBytesFieldOrThrow(1)).isEqualTo(TestUtil.toBytes(\"11\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21->10 [style = bold, label=""];
29->15 [style = bold, label=""];
32->21 [style = solid, label="times"];
7->32 [style = bold, label=""];
28->6 [style = bold, label=""];
41->0 [style = bold, label=""];
48->3 [style = bold, label=""];
29->43 [style = dotted, label="true"];
25->22 [style = bold, label=""];
20->27 [style = solid, label="times"];
10->19 [style = bold, label=""];
27->44 [style = bold, label=""];
11->29 [style = bold, label=""];
11->12 [style = solid, label="times"];
24->43 [style = bold, label=""];
15->40 [style = dashed, label="0"];
1->13 [style = bold, label=""];
20->27 [style = bold, label=""];
34->23 [style = dotted, label="true"];
3->47 [style = solid, label="builder"];
22->0 [style = bold, label=""];
29->14 [style = dotted, label="true"];
21->7 [style = dotted, label="true"];
0->8 [style = bold, label=""];
8->22 [style = dotted, label="true"];
40->26 [style = bold, label=""];
8->0 [style = dotted, label="true"];
27->18 [style = dotted, label="true"];
27->2 [style = bold, label=""];
22->41 [style = dashed, label="0"];
26->32 [style = solid, label="times"];
8->28 [style = bold, label=""];
30->42 [style = bold, label=""];
6->34 [style = solid, label="times"];
34->31 [style = bold, label=""];
4->18 [style = bold, label=""];
21->32 [style = dotted, label="true"];
21->17 [style = dotted, label="true"];
33->23 [style = bold, label=""];
21->45 [style = bold, label=""];
34->31 [style = dotted, label="true"];
12->29 [style = bold, label=""];
1->47 [style = dashed, label="0"];
43->12 [style = bold, label=""];
31->33 [style = bold, label=""];
18->37 [style = dashed, label="0"];
0->8 [style = solid, label="times"];
29->40 [style = bold, label=""];
39->20 [style = bold, label=""];
37->16 [style = bold, label=""];
10->45 [style = dashed, label="0"];
1->39 [style = bold, label=""];
8->25 [style = dotted, label="true"];
17->46 [style = bold, label=""];
16->27 [style = bold, label=""];
3->1 [style = bold, label=""];
6->34 [style = bold, label=""];
21->46 [style = dotted, label="true"];
23->34 [style = solid, label="times"];
25->41 [style = bold, label=""];
34->36 [style = dotted, label="true"];
5->42 [style = dashed, label="0"];
31->36 [style = bold, label=""];
3->47 [style = bold, label=""];
8->41 [style = dotted, label="true"];
6->23 [style = solid, label="times"];
11->29 [style = solid, label="times"];
27->37 [style = dotted, label="true"];
47->13 [style = bold, label=""];
8->35 [style = bold, label=""];
38->3 [style = bold, label=""];
27->4 [style = dotted, label="true"];
20->16 [style = solid, label="times"];
26->21 [style = bold, label=""];
13->39 [style = dashed, label="0"];
19->0 [style = solid, label="times"];
7->46 [style = dashed, label="0"];
30->5 [style = bold, label=""];
34->33 [style = dotted, label="true"];
9->3 [style = bold, label=""];
46->32 [style = bold, label=""];
29->24 [style = dotted, label="true"];
2->11 [style = bold, label=""];
27->16 [style = dotted, label="true"];
18->16 [style = bold, label=""];
32->21 [style = bold, label=""];
35->6 [style = bold, label=""];
16->27 [style = solid, label="times"];
12->29 [style = solid, label="times"];
29->12 [style = dotted, label="true"];
28->35 [style = dashed, label="0"];
34->30 [style = bold, label=""];
19->8 [style = bold, label=""];
24->14 [style = bold, label=""];
15->26 [style = bold, label=""];
17->7 [style = bold, label=""];
27->4 [style = bold, label=""];
14->43 [style = dashed, label="0"];
19->8 [style = solid, label="times"];
36->23 [style = bold, label=""];
4->37 [style = bold, label=""];
45->19 [style = bold, label=""];
33->36 [style = dashed, label="0"];
14->12 [style = bold, label=""];
23->34 [style = bold, label=""];
44->11 [style = bold, label=""];
26->21 [style = solid, label="times"];
29->24 [style = bold, label=""];
3->1 [style = solid, label="builder"];
21->17 [style = bold, label=""];
8->25 [style = bold, label=""];
2->44 [style = dashed, label="0"];
13->20 [style = bold, label=""];
}
