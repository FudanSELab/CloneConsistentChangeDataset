digraph {
24 [style = filled, label = "final String id = Integer.toString(i)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{closeShards(indexShard)}@@@85@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "indexDoc(indexShard,\"_doc\",id)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "indexShard.sync()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testCompletionStatsMarksSearcherAccessed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final long numDocsToDelete = randomLongBetween(1,numDocs)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertBusy(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "randomBoolean()@@@59@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "forceMergeRequest.maxNumSegments(1)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "indexShard.updateLocalCheckpointForShard(indexShard.routingEntry().allocationId().getId(),indexShard.getLocalCheckpoint())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "indexShard.refresh(\"test\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testDocStats['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertThat(\"searcher was marked as accessed\",shard.getLastSearcherAccess(),equalTo(prevAccessTime))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{final DocsStats docStats = indexShard.docStats()assertThat(docStats.getCount(),equalTo(numDocs))assertThat(docStats.getDeleted(),equalTo(0L))assertThat(docStats.getTotalSizeInBytes(),greaterThan(0L))}@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "indexDoc(indexShard,\"_doc\",id)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i < numDocs@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "deleteDoc(indexShard,id)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "indexShard.syncRetentionLeases()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testDocStats['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<Integer> ids = randomSubsetOf(Math.toIntExact(numDocsToDelete),IntStream.range(0,Math.toIntExact(numDocs)).boxed().collect(Collectors.toList()))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "indexShard.flush(new FlushRequest())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "indexShard.flush(new FlushRequest())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final long numDocs = randomIntBetween(2,32)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "indexShard.updateGlobalCheckpointOnReplica(newGlobalCheckpoint,\"test\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i++@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "long prevAccessTime = shard.getLastSearcherAccess()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final FlushRequest flushRequest = new FlushRequest()@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String id = Integer.toString(i)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "indexShard.flush(flushRequest)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "indexShard.forceMerge(forceMergeRequest)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "flushRequest.force(false)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "{closeShards(indexShard)}@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final ForceMergeRequest forceMergeRequest = new ForceMergeRequest()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "indexShard.updateGlobalCheckpointForShard(indexShard.routingEntry().allocationId().getId(),indexShard.getLocalCheckpoint())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "indexShard.routingEntry().primary()@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "IndexShard indexShard = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "indexShard.completionStats()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "flushRequest.waitIfOngoing(false)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "{final DocsStats docStats = indexShard.docStats()try {assertTrue(searcher.getIndexReader().numDocs() <= docStats.getCount())}assertThat(docStats.getCount(),equalTo(numDocs))}@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "randomBoolean()@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "indexShard = newStartedShard()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "IndexShard shard = indexShard@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "indexShard = newStartedShard(false,Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_RETENTION_OPERATIONS_SETTING.getKey(),0).build())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long newGlobalCheckpoint = indexShard.getLocalCheckpoint()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "randomBoolean()@@@72@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "indexShard.refresh(\"test\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "indexShard.updateRetentionLeasesOnReplica(new RetentionLeases(retentionLeases.primaryTerm(),retentionLeases.version() + 1,retentionLeases.leases().stream().map(null).collect(Collectors.toList())))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final RetentionLeases retentionLeases = indexShard.getRetentionLeases()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{IndexShard shard = indexShardassertBusy(null)long prevAccessTime = shard.getLastSearcherAccess()final DocsStats docsStats = indexShard.docStats()assertThat(\"searcher was marked as accessed\",shard.getLastSearcherAccess(),equalTo(prevAccessTime))assertThat(docsStats.getCount(),equalTo(numDocs))try {assertTrue(searcher.getIndexReader().numDocs() <= docsStats.getCount())}assertThat(docsStats.getDeleted(),equalTo(0L))assertThat(docsStats.getTotalSizeInBytes(),greaterThan(0L))}@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "indexShard.refresh(\"test\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->14 [style = bold, label=""];
35->4 [style = bold, label=""];
22->19 [style = solid, label="indexShard"];
13->25 [style = bold, label=""];
22->10 [style = solid, label="indexShard"];
21->39 [style = bold, label=""];
25->36 [style = dotted, label="true"];
4->28 [style = dotted, label="false"];
36->15 [style = solid, label="i"];
22->46 [style = dashed, label="0"];
4->2 [style = bold, label=""];
13->24 [style = solid, label="i"];
7->13 [style = bold, label=""];
7->0 [style = solid, label="numDocsToDelete"];
32->26 [style = dotted, label="false"];
36->24 [style = solid, label="i"];
23->38 [style = bold, label=""];
39->22 [style = bold, label=""];
28->11 [style = bold, label=""];
20->0 [style = bold, label=""];
13->15 [style = solid, label="i"];
22->40 [style = solid, label="indexShard"];
3->35 [style = solid, label="forceMergeRequest"];
41->25 [style = solid, label="numDocs"];
50->43 [style = bold, label=""];
24->31 [style = solid, label="id"];
41->7 [style = solid, label="numDocs"];
22->41 [style = bold, label=""];
1->8 [style = bold, label=""];
6->38 [style = bold, label=""];
15->19 [style = bold, label=""];
41->20 [style = solid, label="numDocs"];
5->37 [style = dotted, label="true"];
12->34 [style = bold, label=""];
33->20 [style = bold, label=""];
3->18 [style = bold, label=""];
8->27 [style = bold, label=""];
5->37 [style = bold, label=""];
5->34 [style = dotted, label="true"];
27->17 [style = bold, label=""];
46->49 [style = solid, label="indexShard"];
38->11 [style = solid, label="docStats"];
32->33 [style = bold, label=""];
44->39 [style = bold, label=""];
25->15 [style = bold, label=""];
23->6 [style = dotted, label="true"];
8->29 [style = solid, label="flushRequest"];
14->16 [style = bold, label=""];
49->45 [style = bold, label=""];
26->20 [style = bold, label=""];
5->14 [style = dotted, label="false"];
9->14 [style = solid, label="newGlobalCheckpoint"];
5->12 [style = dotted, label="true"];
47->48 [style = bold, label=""];
0->24 [style = bold, label=""];
32->26 [style = bold, label=""];
32->33 [style = dotted, label="true"];
23->6 [style = bold, label=""];
11->10 [style = bold, label=""];
24->31 [style = bold, label=""];
37->12 [style = bold, label=""];
25->19 [style = dotted, label="true"];
22->31 [style = solid, label="indexShard"];
41->38 [style = solid, label="numDocs"];
40->9 [style = bold, label=""];
30->1 [style = bold, label=""];
16->30 [style = bold, label=""];
45->50 [style = bold, label=""];
40->24 [style = bold, label=""];
9->5 [style = bold, label=""];
17->29 [style = bold, label=""];
18->35 [style = bold, label=""];
4->2 [style = dotted, label="true"];
36->25 [style = solid, label="i"];
25->32 [style = bold, label=""];
42->39 [style = bold, label=""];
46->49 [style = bold, label=""];
13->25 [style = solid, label="i"];
50->47 [style = solid, label="prevAccessTime"];
31->40 [style = bold, label=""];
2->11 [style = bold, label=""];
13->36 [style = solid, label="i"];
5->16 [style = dotted, label="false"];
36->25 [style = bold, label=""];
41->11 [style = solid, label="numDocs"];
43->47 [style = bold, label=""];
25->15 [style = dotted, label="true"];
29->23 [style = bold, label=""];
19->36 [style = bold, label=""];
4->28 [style = bold, label=""];
38->3 [style = bold, label=""];
41->7 [style = bold, label=""];
24->40 [style = solid, label="id"];
39->46 [style = bold, label=""];
46->48 [style = solid, label="indexShard"];
5->30 [style = dotted, label="false"];
22->20 [style = solid, label="indexShard"];
34->1 [style = bold, label=""];
15->19 [style = solid, label="id"];
}
