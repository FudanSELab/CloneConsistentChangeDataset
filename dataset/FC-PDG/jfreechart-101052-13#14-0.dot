digraph {
13 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(v1,v2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DefaultKeyedValues<String> v2 = (DefaultKeyedValues)TestUtils.serialised(v1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "DefaultKeyedValues<String> v2 = TestUtils.serialised(v1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test\",45.6)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DefaultKeyedValues<String> v1 = new DefaultKeyedValues<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DefaultKeyedValue<String> v2 = new DefaultKeyedValue<>(\"Test\",45.5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "v1.addValue(\"Key 2\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test 2\",45.5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(v2.equals(v1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "v1.addValue(\"Key 3\",42)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test 1\",45.5)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(v1.equals(v2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "v1.addValue(\"Key 1\",23)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
0->5 [style = solid, label="v1"];
16->11 [style = bold, label=""];
7->0 [style = bold, label=""];
10->17 [style = bold, label=""];
0->8 [style = solid, label="v1"];
0->11 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
17->15 [style = solid, label="v2"];
2->4 [style = bold, label=""];
11->18 [style = bold, label=""];
3->0 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->2 [style = bold, label=""];
19->13 [style = solid, label="v2"];
1->6 [style = bold, label=""];
19->13 [style = bold, label=""];
8->5 [style = bold, label=""];
4->5 [style = solid, label="v2"];
0->1 [style = bold, label=""];
11->9 [style = solid, label="v1"];
4->8 [style = dashed, label="0"];
17->15 [style = bold, label=""];
0->4 [style = solid, label="v1"];
14->9 [style = bold, label=""];
18->14 [style = solid, label="v2"];
9->12 [style = bold, label=""];
12->19 [style = bold, label=""];
4->5 [style = bold, label=""];
18->14 [style = bold, label=""];
2->8 [style = bold, label=""];
8->5 [style = solid, label="v2"];
}
