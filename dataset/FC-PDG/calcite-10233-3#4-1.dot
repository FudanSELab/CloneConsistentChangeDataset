digraph {
9 [style = filled, label = "assertThat(r.next(),is(false))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(b,is(false))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(b,is(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(x,is(1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(b,is(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 12.0\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(b,is(false))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3.0\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(r.next(),is(true))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(r.getInt(1),is(12))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "b = s.execute(\"create type mytype4 as BIGINT\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "b = s.execute(\"create or replace type mytype1 as DOUBLE\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(x,is(1))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean b = s.execute(\"create type mytype1 as BIGINT\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(r.next(),is(true))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int x = s.executeUpdate(\"insert into w \" + \"values (1, cast((select j from w limit 1) as mytype))\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testInsertCastedValueOfCompositeUdt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCreateType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boolean b = s.execute(\"create type mytype as (i int, j int)\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(x,is(1))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(b,is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(r.getInt(1),is(3))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testCreateType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "b = s.execute(\"create table t (c mytype1 NOT NULL)\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(b,is(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "b = s.execute(\"create table w (i int not null, j mytype)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->10 [style = solid, label="x"];
8->16 [style = bold, label=""];
16->9 [style = bold, label=""];
18->24 [style = bold, label=""];
12->5 [style = bold, label=""];
3->26 [style = dashed, label="0"];
10->19 [style = bold, label=""];
11->21 [style = bold, label=""];
1->2 [style = solid, label="b"];
23->26 [style = bold, label=""];
18->12 [style = bold, label=""];
5->15 [style = bold, label=""];
15->17 [style = solid, label="b"];
12->5 [style = solid, label="b"];
24->5 [style = solid, label="b"];
27->25 [style = solid, label="x"];
24->5 [style = bold, label=""];
4->0 [style = bold, label=""];
20->10 [style = bold, label=""];
3->18 [style = bold, label=""];
22->3 [style = bold, label=""];
4->0 [style = solid, label="b"];
15->17 [style = bold, label=""];
21->20 [style = bold, label=""];
19->14 [style = bold, label=""];
13->3 [style = bold, label=""];
0->1 [style = bold, label=""];
7->6 [style = solid, label="b"];
6->11 [style = bold, label=""];
12->24 [style = dashed, label="0"];
7->6 [style = bold, label=""];
26->18 [style = solid, label="b"];
3->18 [style = solid, label="b"];
11->21 [style = solid, label="x"];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
5->27 [style = bold, label=""];
2->7 [style = bold, label=""];
27->25 [style = bold, label=""];
17->4 [style = bold, label=""];
26->18 [style = bold, label=""];
}
