digraph {
23 [style = filled, label = "TestHelpers.assertEqualsSafe(entriesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(0),actual.get(0))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testAllEntriesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "table.refresh()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"files\")).collectAsList()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(\"Actual results should have one row\",1,actual.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"unpartitioned_files_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "table.refresh()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "rows.forEach(null)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"entries_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "table.newDelete().deleteFile(toDelete).commit()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testFilesUnpartitionedTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "i += 1@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expected.add(record)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < expected.size()@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Files table should have one row\",1,expected.size())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"files\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testAllEntriesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = 0@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "expected.add((GenericData.Record)record.get(\"data_file\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "DataFile toDelete = Iterables.getOnlyElement(table.currentSnapshot().addedFiles())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"all_entries\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38->28 [style = solid, label="tableIdentifier"];
25->23 [style = solid, label="i"];
10->8 [style = solid, label="tableIdentifier"];
21->11 [style = bold, label=""];
3->10 [style = bold, label=""];
15->29 [style = bold, label=""];
29->13 [style = bold, label=""];
30->26 [style = bold, label=""];
41->27 [style = bold, label=""];
8->28 [style = dashed, label="0"];
23->25 [style = bold, label=""];
11->20 [style = bold, label=""];
15->9 [style = bold, label=""];
11->21 [style = bold, label=""];
14->16 [style = bold, label=""];
35->30 [style = bold, label=""];
38->32 [style = solid, label="tableIdentifier"];
24->23 [style = bold, label=""];
38->4 [style = bold, label=""];
12->14 [style = bold, label=""];
16->1 [style = solid, label="i"];
5->1 [style = bold, label=""];
21->16 [style = bold, label=""];
25->24 [style = bold, label=""];
32->39 [style = bold, label=""];
26->31 [style = bold, label=""];
17->24 [style = solid, label="i"];
38->13 [style = solid, label="tableIdentifier"];
9->13 [style = bold, label=""];
13->6 [style = bold, label=""];
2->34 [style = bold, label=""];
4->8 [style = bold, label=""];
1->17 [style = dotted, label="true"];
7->2 [style = bold, label=""];
30->35 [style = dotted, label="true"];
0->11 [style = bold, label=""];
38->4 [style = solid, label="tableIdentifier"];
20->19 [style = bold, label=""];
35->27 [style = bold, label=""];
5->1 [style = solid, label="i"];
8->18 [style = bold, label=""];
5->17 [style = bold, label=""];
39->36 [style = bold, label=""];
36->41 [style = bold, label=""];
30->27 [style = bold, label=""];
4->28 [style = bold, label=""];
40->15 [style = bold, label=""];
37->38 [style = bold, label=""];
24->23 [style = dotted, label="true"];
16->1 [style = bold, label=""];
1->5 [style = dotted, label="true"];
10->4 [style = bold, label=""];
17->24 [style = bold, label=""];
20->30 [style = dashed, label="0"];
10->4 [style = solid, label="tableIdentifier"];
27->30 [style = bold, label=""];
16->17 [style = solid, label="i"];
1->17 [style = bold, label=""];
15->29 [style = dashed, label="0"];
1->5 [style = bold, label=""];
10->38 [style = dashed, label="0"];
38->40 [style = solid, label="tableIdentifier"];
10->9 [style = solid, label="tableIdentifier"];
10->6 [style = solid, label="tableIdentifier"];
25->24 [style = solid, label="i"];
2->0 [style = bold, label=""];
28->40 [style = bold, label=""];
30->35 [style = bold, label=""];
24->25 [style = dotted, label="true"];
6->7 [style = bold, label=""];
13->2 [style = bold, label=""];
31->33 [style = bold, label=""];
35->26 [style = bold, label=""];
17->23 [style = solid, label="i"];
19->12 [style = bold, label=""];
22->10 [style = bold, label=""];
17->5 [style = bold, label=""];
5->17 [style = solid, label="i"];
34->32 [style = bold, label=""];
20->11 [style = bold, label=""];
18->15 [style = bold, label=""];
}
