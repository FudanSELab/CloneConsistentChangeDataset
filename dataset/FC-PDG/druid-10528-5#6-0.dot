digraph {
28 [style = filled, label = "afterNoon = afterNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of()))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "beforeNoon = beforeNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of()))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final CompactSegments compactSegments = new CompactSegments(JSON_MAPPER,indexingServiceClient)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final TestDruidLeaderClient leaderClient = new TestDruidLeaderClient(JSON_MAPPER)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "segments.add(afterNoon)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "k++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,TOTAL_BYTE_PER_DATASOURCE - 120 - 40 * (compactionRunCount + 1),120 + 40 * (compactionRunCount + 1),0,TOTAL_INTERVAL_PER_DATASOURCE - 3 - (compactionRunCount + 1),3 + (compactionRunCount + 1),0,TOTAL_SEGMENT_PER_DATASOURCE - 12 - 4 * (compactionRunCount + 1),12 + 4 + 2 * (compactionRunCount),0)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String dataSourceName = DATA_SOURCE_PREFIX + 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,TOTAL_BYTE_PER_DATASOURCE - 120 - 40 * (compactionRunCount + 1),40 * (compactionRunCount + 1),1200,TOTAL_INTERVAL_PER_DATASOURCE - 3 - (compactionRunCount + 1),(compactionRunCount + 1),3,TOTAL_SEGMENT_PER_DATASOURCE - 12 - 4 * (compactionRunCount + 1),4 + 2 * (compactionRunCount),12)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,0,TOTAL_BYTE_PER_DATASOURCE,0,0,TOTAL_INTERVAL_PER_DATASOURCE,0,0,12 + 16,0)@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Map<String,AutoCompactionSnapshot> autoCompactionSnapshots = compactSegments.getAutoCompactionSnapshot()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "compactionRunCount++@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testMakeStatsForDataSourceWithCompactedIntervalBetweenNonCompactedIntervals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "beforeNoon = beforeNoon.withSize(100)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "j == 3@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testMakeStatsForDataSourceWithCompactedIntervalBetweenNonCompactedIntervals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(1,stats.getGlobalStat(CompactSegments.COMPACTION_TASK_COUNT))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "afterNoon = afterNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of(),ImmutableMap.of()))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "testMakeStatsForDataSourceWithSkipped['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "dataSources = DataSourcesSnapshot.fromUsedSegments(segments,ImmutableMap.of()).getUsedSegmentsTimelinesPerDataSource()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "afterNoon = afterNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of(),ImmutableMap.of()))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "segments.add(beforeNoon)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "k < 4@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "beforeNoon = beforeNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of(),ImmutableMap.of()))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "int k = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(0,autoCompactionSnapshots.size())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int compactionRunCount = 0@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "afterNoon = afterNoon.withSize(100)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "j == 1@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DataSegment afterNoon = createSegment(dataSourceName,j,false,k)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "afterNoon = afterNoon.withSize(100)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(0,stats.getGlobalStat(CompactSegments.COMPACTION_TASK_COUNT))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "afterNoon = afterNoon.withLastCompactionState(new CompactionState(partitionsSpec,ImmutableMap.of()))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "k < PARTITION_PER_TIME_INTERVAL@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "List<DataSegment> segments = new ArrayList<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "verifySnapshot(compactSegments,AutoCompactionSnapshot.AutoCompactionScheduleStatus.RUNNING,dataSourceName,0,TOTAL_BYTE_PER_DATASOURCE - 120,1200,0,TOTAL_INTERVAL_PER_DATASOURCE - 3,3,0,16,12)@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "compactionRunCount < 8@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "leaderClient.start()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final CoordinatorStats stats = doCompactSegments(compactSegments)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final HttpIndexingServiceClient indexingServiceClient = new HttpIndexingServiceClient(JSON_MAPPER,leaderClient)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final CoordinatorStats stats = doCompactSegments(compactSegments)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataSegment beforeNoon = createSegment(dataSourceName,j,true,k)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41->15 [style = bold, label=""];
16->34 [style = dotted, label="true"];
25->22 [style = bold, label=""];
20->9 [style = bold, label=""];
14->30 [style = solid, label="compactionRunCount"];
16->7 [style = bold, label=""];
15->9 [style = solid, label="dataSourceName"];
21->8 [style = solid, label="compactionRunCount"];
37->5 [style = solid, label="afterNoon"];
0->7 [style = solid, label="beforeNoon"];
21->30 [style = bold, label=""];
25->1 [style = solid, label="k"];
25->32 [style = solid, label="k"];
30->6 [style = bold, label=""];
18->37 [style = dotted, label="true"];
32->25 [style = dotted, label="true"];
18->39 [style = dotted, label="true"];
27->5 [style = solid, label="afterNoon"];
22->16 [style = dotted, label="true"];
27->7 [style = bold, label=""];
1->5 [style = solid, label="afterNoon"];
2->32 [style = bold, label=""];
2->1 [style = solid, label="k"];
32->11 [style = bold, label=""];
18->0 [style = bold, label=""];
33->5 [style = solid, label="afterNoon"];
18->31 [style = bold, label=""];
28->33 [style = dashed, label="0"];
33->16 [style = bold, label=""];
32->24 [style = dotted, label="true"];
14->30 [style = bold, label=""];
34->5 [style = solid, label="afterNoon"];
12->21 [style = bold, label=""];
13->8 [style = solid, label="compactSegments"];
22->7 [style = dotted, label="true"];
16->34 [style = bold, label=""];
32->5 [style = dotted, label="true"];
19->2 [style = bold, label=""];
22->24 [style = dotted, label="true"];
21->30 [style = solid, label="compactionRunCount"];
5->25 [style = bold, label=""];
15->24 [style = solid, label="dataSourceName"];
39->7 [style = solid, label="beforeNoon"];
28->5 [style = solid, label="afterNoon"];
7->5 [style = bold, label=""];
15->1 [style = solid, label="dataSourceName"];
8->38 [style = dashed, label="0"];
31->33 [style = bold, label=""];
30->23 [style = dotted, label="true"];
18->0 [style = dotted, label="true"];
22->11 [style = bold, label=""];
37->16 [style = bold, label=""];
39->37 [style = bold, label=""];
21->38 [style = solid, label="compactionRunCount"];
16->36 [style = bold, label=""];
32->18 [style = dotted, label="true"];
22->2 [style = bold, label=""];
22->18 [style = dotted, label="true"];
16->27 [style = bold, label=""];
2->32 [style = solid, label="k"];
35->15 [style = bold, label=""];
18->33 [style = dotted, label="true"];
4->13 [style = bold, label=""];
22->25 [style = dotted, label="true"];
32->7 [style = dotted, label="true"];
16->36 [style = dotted, label="true"];
8->14 [style = bold, label=""];
2->24 [style = solid, label="k"];
26->8 [style = bold, label=""];
15->19 [style = bold, label=""];
27->36 [style = dashed, label="0"];
14->8 [style = solid, label="compactionRunCount"];
22->5 [style = dotted, label="true"];
30->14 [style = dotted, label="true"];
6->20 [style = bold, label=""];
25->22 [style = solid, label="k"];
22->1 [style = dotted, label="true"];
18->39 [style = bold, label=""];
11->3 [style = bold, label=""];
14->38 [style = solid, label="compactionRunCount"];
36->5 [style = solid, label="afterNoon"];
31->7 [style = solid, label="beforeNoon"];
3->4 [style = solid, label="leaderClient"];
3->17 [style = bold, label=""];
30->8 [style = dotted, label="true"];
16->27 [style = dotted, label="true"];
30->38 [style = dotted, label="true"];
24->1 [style = bold, label=""];
32->1 [style = dotted, label="true"];
17->4 [style = bold, label=""];
13->9 [style = solid, label="compactSegments"];
18->16 [style = bold, label=""];
10->15 [style = bold, label=""];
15->8 [style = solid, label="dataSourceName"];
28->37 [style = dashed, label="0"];
15->40 [style = solid, label="dataSourceName"];
30->23 [style = bold, label=""];
23->26 [style = bold, label=""];
25->32 [style = bold, label=""];
34->7 [style = bold, label=""];
2->22 [style = solid, label="k"];
1->18 [style = bold, label=""];
22->32 [style = dashed, label="0"];
30->26 [style = dotted, label="true"];
0->39 [style = dashed, label="0"];
13->40 [style = solid, label="compactSegments"];
13->38 [style = solid, label="compactSegments"];
28->16 [style = bold, label=""];
32->2 [style = bold, label=""];
24->7 [style = solid, label="beforeNoon"];
15->38 [style = solid, label="dataSourceName"];
38->14 [style = bold, label=""];
2->25 [style = solid, label="k"];
26->38 [style = bold, label=""];
13->23 [style = solid, label="compactSegments"];
13->29 [style = bold, label=""];
20->40 [style = bold, label=""];
29->12 [style = bold, label=""];
9->40 [style = dashed, label="0"];
36->7 [style = bold, label=""];
18->28 [style = dotted, label="true"];
0->31 [style = dashed, label="0"];
25->24 [style = solid, label="k"];
22->24 [style = bold, label=""];
13->6 [style = solid, label="compactSegments"];
18->31 [style = dotted, label="true"];
2->22 [style = bold, label=""];
4->13 [style = solid, label="indexingServiceClient"];
32->16 [style = dotted, label="true"];
32->24 [style = bold, label=""];
27->34 [style = dashed, label="0"];
21->14 [style = solid, label="compactionRunCount"];
0->28 [style = bold, label=""];
}
