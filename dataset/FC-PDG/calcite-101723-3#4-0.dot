digraph {
22 [style = filled, label = "Predicate.of(t) != null@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final RexNode t = terms.get(i)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "simplifyAndTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Predicate.of(t) == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < terms.size()@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RexSimplify simplify = this@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "terms.set(i,simplify.simplify(t))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "simplifyOrTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i < terms.size()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RexSimplify simplify = this@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.NOT,t2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "terms.set(i,simplify.simplify(t))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "terms.set(i,simplify.simplify(t))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "terms.set(i,t2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "RexSimplify simplify = withUnknownAsFalse(false)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "final RexNode t2 = simplify.simplify(t)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "simplifyAndTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22->15 [style = bold, label=""];
11->20 [style = dashed, label="0"];
12->5 [style = bold, label=""];
19->17 [style = solid, label="simplify"];
29->9 [style = solid, label="newPredicates"];
14->11 [style = solid, label="i"];
12->26 [style = solid, label="i"];
5->15 [style = bold, label=""];
9->28 [style = solid, label="simplify"];
16->15 [style = solid, label="i"];
8->20 [style = solid, label="t"];
21->30 [style = bold, label=""];
25->29 [style = bold, label=""];
5->12 [style = dotted, label="true"];
13->23 [style = dashed, label="0"];
3->4 [style = bold, label=""];
1->13 [style = bold, label=""];
12->7 [style = bold, label=""];
12->28 [style = solid, label="i"];
26->22 [style = bold, label=""];
9->6 [style = bold, label=""];
8->3 [style = solid, label="t"];
4->30 [style = dotted, label="true"];
14->27 [style = solid, label="i"];
14->30 [style = solid, label="i"];
7->16 [style = bold, label=""];
9->5 [style = bold, label=""];
4->8 [style = bold, label=""];
9->21 [style = solid, label="simplify"];
16->28 [style = solid, label="i"];
1->0 [style = dotted, label="true"];
23->28 [style = solid, label="simplify"];
14->4 [style = solid, label="i"];
13->14 [style = bold, label=""];
4->16 [style = bold, label=""];
17->16 [style = bold, label=""];
15->26 [style = dotted, label="true"];
11->21 [style = dashed, label="0"];
16->7 [style = solid, label="i"];
26->22 [style = solid, label="t"];
8->11 [style = solid, label="t"];
6->4 [style = solid, label="i"];
7->17 [style = dashed, label="0"];
15->12 [style = solid, label="t"];
3->11 [style = bold, label=""];
18->19 [style = bold, label=""];
9->16 [style = solid, label="i"];
10->20 [style = solid, label="simplify"];
23->21 [style = solid, label="simplify"];
10->17 [style = solid, label="simplify"];
16->26 [style = solid, label="i"];
23->14 [style = bold, label=""];
6->4 [style = bold, label=""];
14->6 [style = solid, label="i"];
13->11 [style = solid, label="simplify"];
6->2 [style = solid, label="i"];
10->11 [style = solid, label="simplify"];
27->21 [style = solid, label="t"];
5->7 [style = dotted, label="true"];
19->20 [style = solid, label="simplify"];
15->26 [style = dashed, label="0"];
15->12 [style = dotted, label="true"];
18->0 [style = dotted, label="true"];
15->12 [style = bold, label=""];
26->28 [style = solid, label="t"];
4->2 [style = dotted, label="true"];
14->4 [style = bold, label=""];
4->9 [style = bold, label=""];
15->7 [style = solid, label="t"];
2->10 [style = solid, label="newPredicates"];
6->20 [style = solid, label="i"];
4->10 [style = dotted, label="true"];
9->5 [style = solid, label="i"];
13->7 [style = solid, label="simplify"];
23->25 [style = solid, label="simplify"];
12->15 [style = solid, label="i"];
8->3 [style = bold, label=""];
12->17 [style = bold, label=""];
4->11 [style = dotted, label="true"];
22->28 [style = bold, label=""];
10->7 [style = solid, label="simplify"];
28->12 [style = bold, label=""];
2->10 [style = bold, label=""];
5->15 [style = dotted, label="true"];
10->6 [style = bold, label=""];
9->15 [style = solid, label="i"];
4->29 [style = dotted, label="true"];
15->28 [style = dotted, label="true"];
4->21 [style = dotted, label="true"];
21->30 [style = solid, label="t2"];
4->3 [style = dotted, label="true"];
19->14 [style = bold, label=""];
15->17 [style = solid, label="t"];
5->16 [style = dotted, label="true"];
16->5 [style = bold, label=""];
14->20 [style = solid, label="i"];
3->21 [style = bold, label=""];
9->7 [style = solid, label="i"];
27->3 [style = solid, label="t"];
24->23 [style = bold, label=""];
4->6 [style = dotted, label="true"];
5->17 [style = dotted, label="true"];
16->15 [style = bold, label=""];
16->17 [style = solid, label="i"];
29->9 [style = bold, label=""];
27->3 [style = bold, label=""];
12->15 [style = bold, label=""];
4->20 [style = dotted, label="true"];
24->31 [style = dotted, label="true"];
9->17 [style = solid, label="i"];
4->8 [style = dotted, label="true"];
30->25 [style = bold, label=""];
15->22 [style = dotted, label="true"];
4->25 [style = dotted, label="true"];
13->19 [style = dashed, label="0"];
14->8 [style = solid, label="i"];
11->2 [style = bold, label=""];
6->8 [style = solid, label="i"];
15->26 [style = bold, label=""];
20->2 [style = bold, label=""];
3->20 [style = bold, label=""];
16->5 [style = solid, label="i"];
6->27 [style = solid, label="i"];
6->11 [style = solid, label="i"];
6->30 [style = solid, label="i"];
4->27 [style = bold, label=""];
25->29 [style = solid, label="inverse"];
0->31 [style = dashed, label="0"];
4->27 [style = dotted, label="true"];
8->27 [style = dashed, label="0"];
16->12 [style = solid, label="i"];
4->9 [style = dotted, label="true"];
21->25 [style = solid, label="t2"];
14->2 [style = solid, label="i"];
9->25 [style = solid, label="simplify"];
}
