digraph {
30 [style = filled, label = "assertEquals(\"header_value\",threadContext.getHeader(\"header\"))@@@61@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Response readMessage = new Response(inboundMessage.getStreamInput())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(action,actionRef.get())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(request,requestRef.get())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AtomicReference<String> actionRef = new AtomicReference<>()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(inboundRequest.getFeatures(),contains(feature1,feature2))@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "assertTrue(inboundMessage.isHandshake())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "handler.setMessageListener(new TransportMessageListener(){@Override public void onResponseSent(long requestId,String action,TransportResponse response){requestIdRef.set(requestId)actionRef.set(action)responseRef.set(response)}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "AtomicReference<TransportRequest> requestRef = new AtomicReference<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "handler.sendResponse(version,channel,requestId,action,response,compress,isHandshake)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(value,readMessage.value)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "storedContext.restore()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(version,inboundMessage.getVersion())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AtomicReference<DiscoveryNode> nodeRef = new AtomicReference<>()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "handler.sendRequest(node,channel,requestId,action,request,options,version,compress,isHandshake)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertTrue(inboundMessage.isCompress())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "BytesReference reference = channel.getMessageCaptor().get()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testSendResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "InboundMessage.Response inboundResponse = (InboundMessage.Response)inboundMessage@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "InboundMessage.Reader reader = new InboundMessage.Reader(Version.CURRENT,namedWriteableRegistry,threadPool.getThreadContext())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "long requestId = randomLongBetween(0,300)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "compress@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ThreadContext threadContext = threadPool.getThreadContext()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(response,responseRef.get())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Request request = new Request(value)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "randomBoolean()@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(inboundMessage.isResponse())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "randomBoolean()@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(inboundMessage.isHandshake())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "AtomicReference<TransportResponse> responseRef = new AtomicReference<>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertFalse(inboundResponse.isError())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Response response = new Response(value)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "boolean isHandshake = randomBoolean()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String value = \"message\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testSendRequest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "sendListener.onFailure(new IOException(\"failed\"))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "ThreadContext.StoredContext storedContext = inboundMessage.getStoredContext()@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"header_value\",threadContext.getHeader(\"header\"))@@@63@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "isHandshake@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testSendRequest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Request readMessage = new Request(inboundMessage.getStreamInput())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "threadContext.putHeader(\"header\",\"header_value\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(inboundMessage.isResponse())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "storedContext.restore()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ActionListener<Void> sendListener = channel.getListenerCaptor().get()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sendListener.onResponse(null)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(requestId,inboundMessage.getRequestId())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "InboundMessage.Request inboundRequest = (InboundMessage.Request)inboundMessage@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "isHandshake@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "AtomicLong requestIdRef = new AtomicLong()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(inboundMessage.isCompress())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertFalse(inboundMessage.isRequest())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(requestId,requestIdRef.get())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "sendListener.onResponse(null)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertFalse(inboundMessage.isHandshake())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertNull(threadContext.getHeader(\"header\"))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertFalse(inboundMessage.isCompress())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "boolean compress = randomBoolean()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(inboundMessage.isRequest())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "handler.setMessageListener(new TransportMessageListener(){@Override public void onRequestSent(DiscoveryNode node,long requestId,String action,TransportRequest request,TransportRequestOptions options){nodeRef.set(node)requestIdRef.set(requestId)actionRef.set(action)requestRef.set(request)}})@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String action = \"handshake\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "compress@@@50@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Version version = randomFrom(Version.CURRENT,Version.CURRENT.minimumCompatibilityVersion())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(node,nodeRef.get())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
34->46 [style = bold, label=""];
4->25 [style = bold, label=""];
25->33 [style = bold, label=""];
61->56 [style = bold, label=""];
63->48 [style = bold, label=""];
4->53 [style = bold, label=""];
38->61 [style = dashed, label="0"];
3->24 [style = solid, label="version"];
48->4 [style = bold, label=""];
20->41 [style = dotted, label="true"];
63->48 [style = dotted, label="false"];
10->27 [style = dashed, label="0"];
4->53 [style = dotted, label="true"];
12->7 [style = bold, label=""];
26->62 [style = solid, label="requestId"];
3->37 [style = solid, label="version"];
38->1 [style = solid, label="request"];
61->29 [style = solid, label="response"];
21->26 [style = bold, label=""];
29->6 [style = bold, label=""];
52->47 [style = bold, label=""];
40->11 [style = bold, label=""];
15->11 [style = bold, label=""];
18->61 [style = bold, label=""];
2->15 [style = bold, label=""];
54->33 [style = bold, label=""];
15->33 [style = dashed, label="0"];
26->36 [style = solid, label="requestId"];
47->34 [style = bold, label=""];
8->39 [style = bold, label=""];
26->14 [style = solid, label="requestId"];
28->55 [style = bold, label=""];
18->38 [style = bold, label=""];
24->28 [style = bold, label=""];
36->63 [style = bold, label=""];
28->8 [style = dotted, label="true"];
16->37 [style = dashed, label="0"];
37->36 [style = bold, label=""];
5->23 [style = bold, label=""];
10->14 [style = bold, label=""];
33->15 [style = bold, label=""];
26->50 [style = solid, label="requestId"];
24->59 [style = dashed, label="0"];
19->20 [style = bold, label=""];
50->37 [style = bold, label=""];
17->59 [style = solid, label="compress"];
25->33 [style = dotted, label="false"];
1->0 [style = bold, label=""];
16->19 [style = bold, label=""];
25->2 [style = bold, label=""];
22->18 [style = bold, label=""];
20->41 [style = bold, label=""];
17->25 [style = solid, label="compress"];
56->23 [style = bold, label=""];
53->33 [style = bold, label=""];
36->16 [style = bold, label=""];
11->52 [style = dashed, label="0"];
34->35 [style = bold, label=""];
45->60 [style = bold, label=""];
38->24 [style = solid, label="request"];
39->42 [style = bold, label=""];
22->47 [style = solid, label="value"];
38->5 [style = bold, label=""];
3->0 [style = solid, label="version"];
4->54 [style = dotted, label="false"];
21->24 [style = solid, label="action"];
21->59 [style = solid, label="action"];
26->24 [style = solid, label="requestId"];
59->45 [style = bold, label=""];
27->62 [style = bold, label=""];
51->52 [style = bold, label=""];
55->42 [style = bold, label=""];
43->9 [style = bold, label=""];
26->29 [style = solid, label="requestId"];
4->54 [style = bold, label=""];
6->1 [style = bold, label=""];
26->31 [style = bold, label=""];
30->12 [style = bold, label=""];
20->4 [style = dotted, label="false"];
22->34 [style = solid, label="value"];
31->58 [style = solid, label="isHandshake"];
26->59 [style = solid, label="requestId"];
28->8 [style = bold, label=""];
39->32 [style = bold, label=""];
27->10 [style = bold, label=""];
60->28 [style = bold, label=""];
46->35 [style = bold, label=""];
17->4 [style = solid, label="compress"];
22->61 [style = solid, label="value"];
57->9 [style = bold, label=""];
21->62 [style = solid, label="action"];
9->3 [style = bold, label=""];
3->21 [style = bold, label=""];
15->40 [style = bold, label=""];
58->4 [style = bold, label=""];
31->17 [style = bold, label=""];
28->55 [style = dotted, label="false"];
31->48 [style = solid, label="isHandshake"];
25->2 [style = dotted, label="true"];
35->30 [style = bold, label=""];
44->9 [style = bold, label=""];
31->4 [style = solid, label="isHandshake"];
49->29 [style = bold, label=""];
62->59 [style = bold, label=""];
31->41 [style = solid, label="isHandshake"];
42->13 [style = bold, label=""];
39->42 [style = dotted, label="false"];
0->37 [style = bold, label=""];
23->27 [style = bold, label=""];
63->58 [style = dotted, label="true"];
61->62 [style = solid, label="response"];
3->59 [style = solid, label="version"];
1->29 [style = dashed, label="0"];
6->0 [style = bold, label=""];
17->22 [style = bold, label=""];
21->6 [style = solid, label="action"];
31->59 [style = solid, label="isHandshake"];
0->50 [style = bold, label=""];
20->4 [style = bold, label=""];
63->58 [style = bold, label=""];
31->20 [style = solid, label="isHandshake"];
13->29 [style = bold, label=""];
11->34 [style = bold, label=""];
8->42 [style = bold, label=""];
33->51 [style = bold, label=""];
38->14 [style = solid, label="request"];
39->32 [style = dotted, label="true"];
26->42 [style = solid, label="requestId"];
19->36 [style = dashed, label="0"];
21->49 [style = solid, label="action"];
42->49 [style = bold, label=""];
17->24 [style = solid, label="compress"];
31->63 [style = solid, label="isHandshake"];
41->25 [style = bold, label=""];
61->59 [style = solid, label="response"];
32->13 [style = bold, label=""];
22->38 [style = solid, label="value"];
21->14 [style = solid, label="action"];
31->24 [style = solid, label="isHandshake"];
}
