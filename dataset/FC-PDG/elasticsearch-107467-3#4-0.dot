digraph {
21 [style = filled, label = "final String masterNode = internalCluster().startMasterOnlyNode()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final NumShards numShards = getNumShards(indexName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String stoppedNode = randomFrom(shardsByNodes.keySet())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final ClusterState clusterState = internalCluster().clusterService(masterNode).state()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertAcked(client().admin().indices().prepareDelete(indexName))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertNoDeletions(shardsByNode.getKey())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "testListenersInvokedWhenIndexIsRelocated['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "ensureGreen(indexName)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Map<String,List<ShardRouting>> shardsByNodes = shardRoutingsByNodes(clusterState,index)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testListenersInvokedWhenIndexIsRelocated['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testListenersInvokedWhenIndexIsDangling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final String nodeName = shardsByNode.getKey()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Index index = clusterState.metadata().index(indexName).getIndex()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ensureGreen(indexName)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertBusy(null)@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(shardsByNodes.values().stream().mapToInt(null).sum(),equalTo(numShards.totalNumShards))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final IndexFoldersDeletionListenerPlugin plugin = plugin(nodeName)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "internalCluster().startDataOnlyNodes(4)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertAcked(client().admin().indices().prepareUpdateSettings(indexName).setSettings(Settings.builder().put(\"index.routing.allocation.exclude._name\",String.join(\",\",excludedNodes)).build()))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "final List<String> excludedNodes = randomSubsetOf(2,shardsByNodes.keySet())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "createIndex(indexName,Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_SHARDS,between(4,10)).put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS,between(0,1)).build())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "internalCluster().ensureAtLeastNumDataNodes(4)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(client().admin().cluster().prepareHealth().setIndices(indexName).setWaitForGreenStatus().setWaitForEvents(Priority.LANGUID).setWaitForNoRelocatingShards(true).setWaitForNoInitializingShards(true).get().isTimedOut())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertBusy(null)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final ClusterState clusterState = clusterService().state()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(\"Expecting no shards deleted on node \" + nodeName,plugin.deletedShards.isEmpty())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final List<String> excludedNodes = randomSubsetOf(2,shardsByNodes.keySet())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final String restartedNode = internalCluster().startNode(stoppedNodeDataPathSettings)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Map<String,List<ShardRouting>> shardsByNodes = shardRoutingsByNodes(clusterState,index)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertTrue(\"Expecting no indices deleted on node \" + nodeName,plugin.deletedIndices.isEmpty())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "createIndex(indexName,Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_SHARDS,4 * between(1,2)).put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS,between(0,1)).build())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "final Settings stoppedNodeDataPathSettings = internalCluster().dataPathSettings(stoppedNode)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "internalCluster().stopRandomNode(InternalTestCluster.nameFilter(stoppedNode))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ensureStableCluster(4 + 1,masterNode)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertBusy(null,30L,TimeUnit.SECONDS)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25->23 [style = bold, label=""];
14->11 [style = solid, label="indexName"];
13->7 [style = bold, label=""];
34->32 [style = solid, label="stoppedNode"];
11->26 [style = dashed, label="0"];
19->28 [style = bold, label=""];
14->2 [style = solid, label="indexName"];
1->26 [style = solid, label="indexName"];
4->16 [style = bold, label=""];
12->4 [style = solid, label="nodeName"];
6->24 [style = solid, label="index"];
2->25 [style = dashed, label="0"];
20->18 [style = bold, label=""];
12->4 [style = bold, label=""];
3->8 [style = solid, label="index"];
17->12 [style = bold, label=""];
11->1 [style = bold, label=""];
6->24 [style = bold, label=""];
8->6 [style = bold, label=""];
14->11 [style = bold, label=""];
31->32 [style = bold, label=""];
1->15 [style = solid, label="indexName"];
7->14 [style = bold, label=""];
14->0 [style = solid, label="indexName"];
23->24 [style = solid, label="clusterState"];
28->22 [style = bold, label=""];
7->21 [style = dashed, label="0"];
26->15 [style = bold, label=""];
23->6 [style = bold, label=""];
32->35 [style = bold, label=""];
21->20 [style = bold, label=""];
9->34 [style = dashed, label="0"];
12->19 [style = dashed, label="0"];
30->7 [style = bold, label=""];
34->31 [style = bold, label=""];
17->9 [style = bold, label=""];
12->19 [style = bold, label=""];
3->8 [style = bold, label=""];
6->12 [style = bold, label=""];
31->29 [style = solid, label="stoppedNodeDataPathSettings"];
15->3 [style = bold, label=""];
1->10 [style = solid, label="indexName"];
35->29 [style = bold, label=""];
1->26 [style = bold, label=""];
18->1 [style = bold, label=""];
24->12 [style = bold, label=""];
16->17 [style = bold, label=""];
15->8 [style = solid, label="clusterState"];
21->18 [style = solid, label="masterNode"];
17->34 [style = bold, label=""];
34->31 [style = solid, label="stoppedNode"];
0->5 [style = bold, label=""];
12->17 [style = solid, label="nodeName"];
15->25 [style = bold, label=""];
15->23 [style = dashed, label="0"];
14->1 [style = solid, label="indexName"];
22->10 [style = bold, label=""];
14->35 [style = solid, label="indexName"];
1->2 [style = bold, label=""];
2->15 [style = bold, label=""];
29->33 [style = bold, label=""];
10->0 [style = bold, label=""];
12->16 [style = solid, label="nodeName"];
27->21 [style = bold, label=""];
9->10 [style = bold, label=""];
}
