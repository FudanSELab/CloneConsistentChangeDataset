digraph {
6 [style = filled, label = "testProvidedScopeNotTransitive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "ArtifactSpec a = createArtifactSpec(\"a\",\"1.0\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"Check artifact list\",createSet(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@19262ce),res.getArtifacts())@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(createSet(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@192628f),res.getArtifacts(),\"Check artifact list\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ArtifactResolutionResult res = collect(createSet(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@19262bf))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ArtifactSpec a = createArtifactSpec(\"a\",\"1.0\",Artifact.SCOPE_PROVIDED)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ArtifactSpec b = createArtifactSpec(\"b\",\"1.0\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "b.addDependency(\"c\",\"3.0\",Artifact.SCOPE_PROVIDED)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "b.addDependency(\"c\",\"3.0\",true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testProvidedScopeNotTransitive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testOptionalNotTransitive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
6->1 [style = bold, label=""];
8->10 [style = bold, label=""];
10->2 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
2->9 [style = bold, label=""];
0->9 [style = dashed, label="0"];
3->1 [style = bold, label=""];
4->7 [style = dashed, label="0"];
5->4 [style = bold, label=""];
0->5 [style = bold, label=""];
}
