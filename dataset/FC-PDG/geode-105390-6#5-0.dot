digraph {
22 [style = filled, label = "assertThat(process.exitValue()).as(\"Process did not exit with 0 return code\").isEqualTo(0)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "GfshExecution startCluster = GfshScript.of(\"start locator \" + getSslParameters(),\"start server --locators=localhost(10334(\").withName(\"startCluster\").execute(gfsh)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Process process = launchClientProcess(outputJar,httpPort)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "GfshExecution listRegionsResult = GfshScript.of(String.format(\"connect --locator=localhost(%d(\",locatorPort),\"list regions\").withName(\"listRegions\").execute(gfsh)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "JarBuilder jarBuilder = new JarBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Process process = launchClientProcess(outputJar)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "boolean exited = process.waitFor(10,TimeUnit.SECONDS)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "File functionJar = new File(temporaryFolder.newFolder(),\"output.jar\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "clientCreatesRegionUsingClusterManagementService['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "GfshExecution startCluster = GfshScript.of(String.format(\"start locator --port=%d --J=-Dgemfire.http-service-port=%d %s\",locatorPort,httpPort,getSslParameters()),String.format(\"start server --locators=localhost(%d( --server-port=0\",locatorPort)).withName(\"startCluster\").execute(gfsh)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "int locatorPort = availablePorts(0(@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "int httpPort = availablePorts(1(@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertThat(listRegionsResult.getOutputText()).contains(\"REGION1\")@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(process.exitValue()).as(\"Process did not exit with 0 return code\").isEqualTo(0)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String filePath = TestUtil.getResourcePath(this.getClass(),\"/ManagementClientTestCreateRegion.java\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "clientCreatesRegionUsingClusterManagementService['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(startCluster.getProcess().exitValue()).as(\"Cluster did not start correctly\").isEqualTo(0)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String filePath = TestUtil.getResourcePath(this.getClass(),\"/ClusterConfigServerRestartWithJarDeployFunction.java\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(startCluster.getProcess().exitValue()).as(\"Cluster did not start correctly\").isEqualTo(0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "jarBuilder.buildJar(functionJar,new File(filePath))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(exited).as(\"Process did not exit within 10 seconds\").isTrue()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "jarBuilder.buildJar(outputJar,new File(filePath))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean exited = process.waitFor(10,TimeUnit.SECONDS)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "getFunctionJar['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return functionJar@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int(( availablePorts = AvailablePortHelper.getRandomAvailableTCPPorts(2)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "File outputJar = new File(tempDir.getRoot(),\"output.jar\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(filePath).as(\"java file resource not found\").isNotBlank()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
18->3 [style = bold, label=""];
21->16 [style = solid, label="availablePorts"];
3->17 [style = dashed, label="0"];
23->5 [style = bold, label=""];
21->19 [style = bold, label=""];
27->12 [style = bold, label=""];
14->5 [style = bold, label=""];
10->3 [style = bold, label=""];
11->12 [style = bold, label=""];
0->21 [style = bold, label=""];
12->26 [style = bold, label=""];
4->26 [style = dashed, label="0"];
9->10 [style = bold, label=""];
4->0 [style = solid, label="outputJar"];
21->19 [style = solid, label="availablePorts"];
26->24 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
7->22 [style = bold, label=""];
27->24 [style = solid, label="filePath"];
1->6 [style = bold, label=""];
9->18 [style = bold, label=""];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
11->0 [style = solid, label="filePath"];
15->9 [style = bold, label=""];
4->13 [style = solid, label="outputJar"];
0->1 [style = bold, label=""];
24->25 [style = bold, label=""];
6->13 [style = bold, label=""];
8->9 [style = bold, label=""];
22->17 [style = bold, label=""];
0->24 [style = dashed, label="0"];
5->11 [style = bold, label=""];
4->18 [style = solid, label="outputJar"];
5->27 [style = bold, label=""];
11->27 [style = dashed, label="0"];
13->18 [style = dashed, label="0"];
13->8 [style = bold, label=""];
26->24 [style = solid, label="functionJar"];
26->25 [style = solid, label="functionJar"];
16->18 [style = solid, label="httpPort"];
2->5 [style = bold, label=""];
17->20 [style = bold, label=""];
}
