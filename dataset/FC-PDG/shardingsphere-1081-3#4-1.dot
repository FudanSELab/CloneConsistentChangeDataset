digraph {
2 [style = filled, label = "return Optional.of(generateParameterSQLToken(tableName,assignmentSegment))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "generateSQLToken['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String tableName@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assignmentSegment.getValue() instanceof LiteralExpressionSegment@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final AssignmentSegment assignmentSegment@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final AssignmentSegment assignmentSegment@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "generateSQLToken['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return Optional.empty()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return Optional.of(generateLiteralSQLToken(schemaName,tableName,assignmentSegment))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final AssignmentSegment assignmentSegment@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "generateSQLToken['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final String tableName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assignmentSegment.getValue() instanceof ParameterMarkerExpressionSegment@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return Optional.of(generateLiteralSQLToken(tableName,assignmentSegment))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->10 [style = solid, label="schemaName"];
4->5 [style = dotted, label="true"];
4->3 [style = bold, label=""];
14->3 [style = bold, label=""];
9->2 [style = solid, label="tableName"];
13->2 [style = solid, label="assignmentSegment"];
13->0 [style = solid, label="assignmentSegment"];
2->6 [style = bold, label=""];
8->10 [style = solid, label="assignmentSegment"];
11->12 [style = dotted, label="true"];
4->7 [style = dotted, label="true"];
8->2 [style = solid, label="assignmentSegment"];
3->6 [style = bold, label=""];
11->9 [style = dotted, label="true"];
6->0 [style = bold, label=""];
7->0 [style = solid, label="tableName"];
7->2 [style = solid, label="tableName"];
14->13 [style = dotted, label="true"];
0->10 [style = dashed, label="0"];
5->2 [style = solid, label="assignmentSegment"];
6->10 [style = dotted, label="true"];
6->1 [style = bold, label=""];
3->2 [style = bold, label=""];
11->3 [style = bold, label=""];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
14->7 [style = dotted, label="true"];
5->0 [style = solid, label="assignmentSegment"];
7->12 [style = dashed, label="0"];
11->8 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
10->1 [style = bold, label=""];
3->2 [style = dotted, label="true"];
9->10 [style = solid, label="tableName"];
}
