digraph {
16 [style = filled, label = "_properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String addedSpecUriString = \"/foo/bar/addedSpec\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Thread.currentThread().interrupt()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(deletedSpecUriString),\"Expected URI did not match\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "_properties.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + \"value.serializer\",\"org.apache.kafka.common.serialization.ByteArraySerializer\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<Pair<SpecExecutor.Verb,Spec>> consumedEvent = _seic.changedSpecs().get()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(addedSpecUriString),\"Expected URI did not match\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec,\"Expected JobSpec\")@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.DELETE),\"Verb did not match\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map.Entry<SpecExecutor.Verb,Spec> consumedSpecAction = consumedEvent.get(0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "_properties.setProperty(ConfigurationKeys.KAFKA_BROKERS,_kafkaBrokers)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String deletedSpecUriString = \"/foo/bar/addedSpec\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "WriteResponse writeResponse = (WriteResponse)_seip.deleteSpec(new URI(specUriString)).get()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Map.Entry<SpecExecutor.Verb,Spec> consumedSpecAction = consumedEvent.get(0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "log.info(\"WriteResponse: \" + writeResponse)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.ADD),\"Verb did not match\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(specUriString),\"Expected URI did not match\")@@@9@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "_properties.setProperty(KafkaWriterConfigurationKeys.KAFKA_TOPIC,TOPIC)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "log.info(\"WriteResponse: \" + writeResponse)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Thread.sleep(1000)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "_seip = _closer.register(new SimpleKafkaSpecProducer(ConfigUtils.propertiesToConfig(_properties)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "List<Pair<SpecExecutor.Verb,Spec>> consumedEvent = _seic.changedSpecs().get()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(consumedEvent.size() == 1,\"Consumption did not match production\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testAddSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "WriteResponse writeResponse = (WriteResponse)_seip.deleteSpec(new URI(deletedSpecUriString)).get()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "InterruptedException ex@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Spec spec = initJobSpec(addedSpecUriString)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testDeleteSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "_properties.setProperty(SimpleKafkaSpecExecutor.SPEC_KAFKA_TOPICS_KEY,TOPIC)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testDeleteSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec,\"Expected JobSpec\")@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "_closer = Closer.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "WriteResponse writeResponse = (WriteResponse)_seip.addSpec(spec).get()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec,\"Expected JobSpec\")@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "_properties.setProperty(KafkaWriterConfigurationKeys.KAFKA_PRODUCER_CONFIG_PREFIX + \"bootstrap.servers\",_kafkaBrokers)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(consumedEvent.size() == 1,\"Consumption did not match production\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "_seic = _closer.register(new SimpleKafkaSpecConsumer(ConfigUtils.propertiesToConfig(_properties)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
18->31 [style = bold, label=""];
14->24 [style = bold, label=""];
16->20 [style = solid, label="_properties"];
27->33 [style = solid, label="writeResponse"];
23->27 [style = bold, label=""];
33->15 [style = bold, label=""];
0->6 [style = bold, label=""];
35->20 [style = bold, label=""];
25->23 [style = bold, label=""];
25->21 [style = solid, label="addedSpecUriString"];
9->4 [style = bold, label=""];
8->34 [style = dashed, label="0"];
24->34 [style = bold, label=""];
16->32 [style = bold, label=""];
22->28 [style = bold, label=""];
25->23 [style = solid, label="addedSpecUriString"];
26->19 [style = bold, label=""];
28->16 [style = bold, label=""];
10->7 [style = bold, label=""];
34->21 [style = bold, label=""];
4->7 [style = bold, label=""];
19->25 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
5->1 [style = bold, label=""];
31->26 [style = bold, label=""];
7->5 [style = bold, label=""];
21->36 [style = bold, label=""];
4->7 [style = solid, label="writeResponse"];
0->21 [style = dashed, label="0"];
15->20 [style = bold, label=""];
11->13 [style = bold, label=""];
9->13 [style = dashed, label="0"];
13->10 [style = solid, label="writeResponse"];
30->14 [style = bold, label=""];
0->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
27->33 [style = bold, label=""];
29->35 [style = bold, label=""];
9->0 [style = solid, label="deletedSpecUriString"];
20->30 [style = bold, label=""];
32->17 [style = bold, label=""];
29->35 [style = dotted, label="true"];
8->12 [style = bold, label=""];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
16->19 [style = solid, label="_properties"];
}
