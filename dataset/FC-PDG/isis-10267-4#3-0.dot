digraph {
22 [style = filled, label = "Assertions.assertThat(userMemento.getRealName()).isEqualTo(\"Fred Flintstone\")@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assertions.assertThat(userMemento2.streamRoleNames()).anyMatch(null)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Assertions.assertThat(userMemento.getRealName()).isNull()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "happy_case['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assertions.assertThat(userMemento.getRoles()).hasSize(2)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assertions.assertThat(userMemento2.getName()).isEqualTo(\"fredflintstone\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assertions.assertThat(userMemento.getAvatarUrl()).isEqualTo(new java.net.URL(\"https://upload.wikimedia.org/wikipedia/en/a/ad/Fred_Flintstone.png\"))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "name_and_roles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assertions.assertThat(userMemento.getName()).isEqualTo(\"fredflintstone\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assertions.assertThat(userMemento.getName()).isEqualTo(\"fredflintstone\")@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assertions.assertThat(userMemento.isImpersonating()).isFalse()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assertions.assertThat(userMemento.getAvatarUrl()).isNull()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assertions.assertThat(userMemento2.getAvatarUrl()).isEqualTo(new java.net.URL(\"https://upload.wikimedia.org/wikipedia/en/a/ad/Fred_Flintstone.png\"))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assertions.assertThat(userMemento2.isImpersonating()).isTrue()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assertions.assertThat(userMemento.getRealName()).isEqualTo(\"Fred Flintstone\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assertions.assertThat(userMemento.isImpersonating()).isFalse()@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assertions.assertThat(userMemento2).isNotSameAs(userMemento)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assertions.assertThat(userMemento.getRoles()).hasSize(2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "happy_case['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "val userMemento = UserMemento.ofName(\"fredflintstone\").withRole(\"CAVEMAN\").withRole(\"HUSBAND\").withAvatarUrl(new java.net.URL(\"https://upload.wikimedia.org/wikipedia/en/a/ad/Fred_Flintstone.png\")).withRealName(\"Fred Flintstone\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "val userMemento = UserMemento.ofNameAndRoleNames(\"fredflintstone\",\"CAVEMAN\",\"HUSBAND\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assertions.assertThat(userMemento2.getRoles()).hasSize(2)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assertions.assertThat(userMemento.getAvatarUrl()).isEqualTo(new java.net.URL(\"https://upload.wikimedia.org/wikipedia/en/a/ad/Fred_Flintstone.png\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "val userMemento2 = userMemento.withImpersonating()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assertions.assertThat(userMemento2.streamRoleNames()).anyMatch(null)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assertions.assertThat(userMemento2.getRealName()).isEqualTo(\"Fred Flintstone\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9->22 [style = bold, label=""];
4->29 [style = dashed, label="0"];
22->8 [style = bold, label=""];
11->12 [style = bold, label=""];
0->7 [style = bold, label=""];
25->10 [style = bold, label=""];
6->0 [style = bold, label=""];
29->28 [style = bold, label=""];
19->15 [style = bold, label=""];
24->11 [style = bold, label=""];
14->24 [style = bold, label=""];
3->19 [style = solid, label="userMemento"];
1->25 [style = bold, label=""];
3->5 [style = bold, label=""];
4->1 [style = bold, label=""];
10->19 [style = bold, label=""];
2->3 [style = bold, label=""];
23->21 [style = bold, label=""];
12->17 [style = bold, label=""];
26->5 [style = bold, label=""];
7->4 [style = bold, label=""];
16->3 [style = bold, label=""];
1->28 [style = dashed, label="0"];
27->26 [style = bold, label=""];
7->29 [style = bold, label=""];
15->20 [style = bold, label=""];
13->9 [style = bold, label=""];
20->14 [style = bold, label=""];
5->6 [style = bold, label=""];
18->23 [style = bold, label=""];
21->13 [style = bold, label=""];
17->18 [style = bold, label=""];
}
