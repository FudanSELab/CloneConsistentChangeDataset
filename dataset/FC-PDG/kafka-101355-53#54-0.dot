digraph {
19 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "windowStore.put(2,\"two\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "windowStore.put(1,\"one\",startTime + increment)@@@7@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "setCurrentTime(startTime + increment)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "windowStore.flush()@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final long increment = SEGMENT_INTERVAL / 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "windowStore.put(5,\"five\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "windowStore.put(1,\"one\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "windowStore.put(6,\"six\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "windowStore.flush()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "windowStore.put(5,\"five\",startTime + increment * 5)@@@13@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
98 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "windowStore.close()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "windowStore.flush()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "windowStore.put(2,\"two\",startTime + increment * 2)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@56@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "windowStore.put(6,\"six\",startTime + increment * 6)@@@21@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
88 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "windowStore.put(4,\"four\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "windowStore.put(7,\"seven\",startTime + increment * 7)@@@30@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
100 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "windowStore.put(8,\"eight\",startTime + increment * 8)@@@40@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "testRolling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "setCurrentTime(startTime)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "Utils.delete(baseDir)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
92 [style = filled, label = "windowStore.put(8,\"eight\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "windowStore = buildWindowStore(RETENTION_PERIOD,WINDOW_SIZE,false,Serdes.Integer(),Serdes.String())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "context.restore(STORE_NAME,changeLog)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
82 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "windowStore.init((StateStoreContext)context,windowStore)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@53@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "windowStore.put(8,\"eight\")@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
87 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testRolling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "changeLog.add(new KeyValue<>(((Bytes)record.key()).get(),(byte(()record.value()))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "windowStore.flush()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "windowStore.put(0,\"zero\",startTime)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "windowStore.put(7,\"seven\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"zero\")),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
84 [style = filled, label = "windowStore.put(3,\"three\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final long startTime = SEGMENT_INTERVAL * 2@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "windowStore.put(0,\"zero\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@58@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "windowStore.put(4,\"four\",startTime + increment * 4)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
93 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->32 [style = dashed, label="0"];
71->70 [style = bold, label=""];
14->57 [style = solid, label="increment"];
14->47 [style = solid, label="increment"];
37->11 [style = bold, label=""];
14->56 [style = solid, label="increment"];
38->16 [style = solid, label="startTime"];
14->96 [style = solid, label="increment"];
15->54 [style = bold, label=""];
26->54 [style = dashed, label="0"];
14->9 [style = solid, label="increment"];
14->54 [style = solid, label="increment"];
38->42 [style = solid, label="startTime"];
46->31 [style = bold, label=""];
14->3 [style = solid, label="increment"];
26->40 [style = bold, label=""];
38->13 [style = solid, label="startTime"];
14->69 [style = solid, label="increment"];
14->87 [style = solid, label="increment"];
40->20 [style = bold, label=""];
88->77 [style = bold, label=""];
79->76 [style = bold, label=""];
100->92 [style = bold, label=""];
64->73 [style = bold, label=""];
41->20 [style = bold, label=""];
102->90 [style = bold, label=""];
14->43 [style = solid, label="increment"];
38->50 [style = solid, label="startTime"];
17->36 [style = bold, label=""];
39->57 [style = bold, label=""];
19->5 [style = bold, label=""];
38->98 [style = solid, label="startTime"];
63->66 [style = bold, label=""];
38->27 [style = solid, label="startTime"];
14->35 [style = solid, label="increment"];
3->64 [style = dashed, label="0"];
28->43 [style = bold, label=""];
14->16 [style = solid, label="increment"];
0->25 [style = bold, label=""];
92->102 [style = bold, label=""];
20->48 [style = bold, label=""];
41->64 [style = bold, label=""];
24->17 [style = bold, label=""];
27->83 [style = dashed, label="0"];
18->104 [style = dashed, label="0"];
38->24 [style = solid, label="startTime"];
14->30 [style = solid, label="increment"];
14->5 [style = solid, label="increment"];
38->39 [style = solid, label="startTime"];
14->12 [style = solid, label="increment"];
6->96 [style = dashed, label="0"];
38->94 [style = solid, label="startTime"];
38->11 [style = solid, label="startTime"];
32->3 [style = bold, label=""];
75->60 [style = bold, label=""];
48->91 [style = bold, label=""];
17->21 [style = bold, label=""];
38->78 [style = solid, label="startTime"];
54->26 [style = bold, label=""];
14->78 [style = solid, label="increment"];
45->10 [style = bold, label=""];
38->89 [style = solid, label="startTime"];
38->18 [style = solid, label="startTime"];
82->95 [style = solid, label="changeLog"];
22->76 [style = dashed, label="0"];
57->13 [style = bold, label=""];
14->93 [style = solid, label="increment"];
38->101 [style = solid, label="startTime"];
86->56 [style = bold, label=""];
14->7 [style = solid, label="increment"];
21->44 [style = bold, label=""];
93->96 [style = bold, label=""];
14->29 [style = solid, label="increment"];
7->1 [style = bold, label=""];
94->89 [style = bold, label=""];
34->19 [style = bold, label=""];
14->74 [style = solid, label="increment"];
101->85 [style = bold, label=""];
38->5 [style = solid, label="startTime"];
38->61 [style = solid, label="startTime"];
80->86 [style = bold, label=""];
104->82 [style = bold, label=""];
56->62 [style = bold, label=""];
85->79 [style = bold, label=""];
31->4 [style = bold, label=""];
38->29 [style = solid, label="startTime"];
38->52 [style = solid, label="startTime"];
38->83 [style = solid, label="startTime"];
14->61 [style = solid, label="increment"];
14->104 [style = solid, label="increment"];
38->45 [style = solid, label="startTime"];
38->64 [style = solid, label="startTime"];
99->38 [style = bold, label=""];
38->71 [style = solid, label="startTime"];
51->35 [style = bold, label=""];
14->71 [style = bold, label=""];
25->2 [style = bold, label=""];
14->52 [style = solid, label="increment"];
43->46 [style = bold, label=""];
14->24 [style = solid, label="increment"];
27->56 [style = bold, label=""];
38->26 [style = solid, label="startTime"];
38->34 [style = solid, label="startTime"];
12->51 [style = bold, label=""];
37->74 [style = bold, label=""];
14->67 [style = solid, label="increment"];
14->98 [style = solid, label="increment"];
80->86 [style = solid, label="windowStore"];
38->19 [style = solid, label="startTime"];
38->43 [style = solid, label="startTime"];
14->1 [style = solid, label="increment"];
14->88 [style = solid, label="increment"];
70->54 [style = bold, label=""];
65->38 [style = bold, label=""];
38->62 [style = solid, label="startTime"];
36->49 [style = bold, label=""];
14->68 [style = solid, label="increment"];
14->97 [style = solid, label="increment"];
38->17 [style = solid, label="startTime"];
84->58 [style = bold, label=""];
96->83 [style = bold, label=""];
14->21 [style = solid, label="increment"];
14->77 [style = solid, label="increment"];
38->36 [style = solid, label="startTime"];
16->57 [style = dashed, label="0"];
48->32 [style = bold, label=""];
54->59 [style = bold, label=""];
14->45 [style = solid, label="increment"];
38->85 [style = solid, label="startTime"];
74->61 [style = bold, label=""];
56->18 [style = bold, label=""];
3->58 [style = bold, label=""];
38->77 [style = solid, label="startTime"];
14->100 [style = solid, label="increment"];
38->96 [style = solid, label="startTime"];
18->31 [style = dashed, label="0"];
14->39 [style = solid, label="increment"];
47->16 [style = bold, label=""];
14->66 [style = solid, label="increment"];
14->36 [style = solid, label="increment"];
14->10 [style = solid, label="increment"];
38->22 [style = solid, label="startTime"];
38->44 [style = solid, label="startTime"];
60->37 [style = bold, label=""];
72->55 [style = bold, label=""];
37->24 [style = bold, label=""];
35->29 [style = bold, label=""];
90->103 [style = bold, label=""];
14->44 [style = solid, label="increment"];
38->58 [style = solid, label="startTime"];
83->98 [style = bold, label=""];
103->80 [style = bold, label=""];
38->32 [style = solid, label="startTime"];
38->20 [style = solid, label="startTime"];
38->4 [style = solid, label="startTime"];
38->49 [style = solid, label="startTime"];
77->94 [style = bold, label=""];
14->32 [style = solid, label="increment"];
38->88 [style = solid, label="startTime"];
38->63 [style = solid, label="startTime"];
33->55 [style = bold, label=""];
78->101 [style = bold, label=""];
18->33 [style = bold, label=""];
55->93 [style = bold, label=""];
14->8 [style = solid, label="increment"];
14->101 [style = solid, label="increment"];
58->37 [style = bold, label=""];
32->75 [style = bold, label=""];
38->8 [style = solid, label="startTime"];
14->0 [style = solid, label="increment"];
43->100 [style = bold, label=""];
38->31 [style = solid, label="startTime"];
38->100 [style = solid, label="startTime"];
38->74 [style = solid, label="startTime"];
11->24 [style = bold, label=""];
38->21 [style = solid, label="startTime"];
38->51 [style = solid, label="startTime"];
73->32 [style = bold, label=""];
29->21 [style = bold, label=""];
4->7 [style = bold, label=""];
38->57 [style = solid, label="startTime"];
95->22 [style = bold, label=""];
38->10 [style = solid, label="startTime"];
14->53 [style = solid, label="increment"];
38->66 [style = solid, label="startTime"];
38->35 [style = solid, label="startTime"];
14->34 [style = solid, label="increment"];
14->85 [style = solid, label="increment"];
69->41 [style = bold, label=""];
6->27 [style = bold, label=""];
14->25 [style = solid, label="increment"];
1->6 [style = bold, label=""];
14->26 [style = solid, label="increment"];
14->6 [style = solid, label="increment"];
38->47 [style = solid, label="startTime"];
81->95 [style = bold, label=""];
38->37 [style = solid, label="startTime"];
38->6 [style = solid, label="startTime"];
14->50 [style = bold, label=""];
14->17 [style = solid, label="increment"];
35->63 [style = bold, label=""];
38->3 [style = solid, label="startTime"];
14->13 [style = solid, label="increment"];
30->0 [style = bold, label=""];
50->15 [style = bold, label=""];
59->69 [style = bold, label=""];
38->60 [style = solid, label="startTime"];
55->52 [style = bold, label=""];
91->84 [style = bold, label=""];
98->104 [style = bold, label=""];
38->69 [style = solid, label="startTime"];
14->94 [style = solid, label="increment"];
67->43 [style = bold, label=""];
14->37 [style = solid, label="increment"];
18->87 [style = bold, label=""];
14->46 [style = solid, label="increment"];
97->78 [style = bold, label=""];
14->58 [style = solid, label="increment"];
82->81 [style = bold, label=""];
61->17 [style = bold, label=""];
49->42 [style = bold, label=""];
5->8 [style = bold, label=""];
38->91 [style = solid, label="startTime"];
38->56 [style = solid, label="startTime"];
14->89 [style = solid, label="increment"];
38->1 [style = solid, label="startTime"];
68->67 [style = bold, label=""];
13->53 [style = bold, label=""];
14->51 [style = solid, label="increment"];
38->68 [style = solid, label="startTime"];
38->46 [style = solid, label="startTime"];
38->54 [style = solid, label="startTime"];
14->62 [style = solid, label="increment"];
38->9 [style = solid, label="startTime"];
14->42 [style = solid, label="increment"];
14->31 [style = solid, label="increment"];
87->55 [style = bold, label=""];
14->49 [style = solid, label="increment"];
14->28 [style = solid, label="increment"];
47->68 [style = bold, label=""];
38->72 [style = solid, label="startTime"];
38->55 [style = solid, label="startTime"];
9->30 [style = bold, label=""];
14->11 [style = solid, label="increment"];
38->30 [style = solid, label="startTime"];
14->55 [style = solid, label="increment"];
42->12 [style = bold, label=""];
52->34 [style = bold, label=""];
38->87 [style = solid, label="startTime"];
44->39 [style = bold, label=""];
38->25 [style = solid, label="startTime"];
38->93 [style = solid, label="startTime"];
50->71 [style = dashed, label="0"];
1->93 [style = dashed, label="0"];
38->12 [style = solid, label="startTime"];
38->14 [style = bold, label=""];
15->26 [style = bold, label=""];
38->28 [style = solid, label="startTime"];
14->63 [style = solid, label="increment"];
14->72 [style = solid, label="increment"];
38->104 [style = solid, label="startTime"];
4->87 [style = dashed, label="0"];
14->19 [style = solid, label="increment"];
14->83 [style = solid, label="increment"];
14->64 [style = solid, label="increment"];
38->97 [style = solid, label="startTime"];
22->88 [style = bold, label=""];
38->53 [style = solid, label="startTime"];
16->28 [style = bold, label=""];
89->97 [style = bold, label=""];
14->20 [style = solid, label="increment"];
38->67 [style = solid, label="startTime"];
44->28 [style = bold, label=""];
23->38 [style = bold, label=""];
62->72 [style = bold, label=""];
40->41 [style = bold, label=""];
14->4 [style = solid, label="increment"];
8->9 [style = bold, label=""];
10->47 [style = bold, label=""];
38->7 [style = solid, label="startTime"];
14->91 [style = solid, label="increment"];
14->27 [style = solid, label="increment"];
20->69 [style = dashed, label="0"];
29->49 [style = dashed, label="0"];
38->0 [style = solid, label="startTime"];
2->22 [style = bold, label=""];
53->45 [style = bold, label=""];
14->18 [style = solid, label="increment"];
66->44 [style = bold, label=""];
56->98 [style = dashed, label="0"];
}
