digraph {
50 [style = filled, label = "InvalidACLException e@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ArrayList<ACL> testACL = new ArrayList<ACL>()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.fail(\"Badauth reads should succeed with skipACL.\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testACL.add(new ACL(Perms.WRITE,new Id(\"ip\",\"127.0.0.1\")))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "fail(\"Badauth reads should succeed with skipACL.\")@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(1,acls.size())@@@67@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "ArrayList<ACL> testACL = new ArrayList<ACL>()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "skipACL@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testACL.add(new ACL(Perms.ALL | Perms.ADMIN,Ids.AUTH_IDS))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "LOG.info(\"Test successful, invalid acl received : \" + e.getMessage())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "zk.close()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testACL.add(new ACL(Perms.ALL | Perms.ADMIN,new Id(\"ip\",\"127.0.0.1/8\")))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "zk = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "zk.setACL(\"/acltest\",Ids.OPEN_ACL_UNSAFE,-1)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "fail(\"Should have received an invalid acl error\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "zk = createClient()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "InvalidACLException e@@@20@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "testACL.add(new ACL(Perms.ALL | Perms.ADMIN,new Id()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "LOG.info(\"Test successful, invalid acl received : \" + e.getMessage())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "InvalidACLException e@@@29@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "ArrayList<ACL> testACL = new ArrayList<ACL>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(1,acls.size())@@@64@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.fail(\"Badauth reads should succeed with skipACL.\")@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "testACL.add(new ACL(Perms.ALL,new Id(\"auth\",null)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "zk.create(\"/acltest\",new byte((((,testACL,CreateMode.PERSISTENT)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "zk.create(\"/acltest\",new byte((((,testACL,CreateMode.PERSISTENT)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.fail(\"Should have received a permission error\")@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "zk.close()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(1,acls.size())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Code.NOAUTH,e.code())@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "testACLs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "{if (zk != null) {zk.close()}}@@@71@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "zk = createClient()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.fail(\"Should have received an invalid acl error\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@65@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "ZooKeeper zk = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "zk.getData(\"/acltest\",false,null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testACLs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "skipACL@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(1,acls.size())@@@67@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "acls = zk.getACL(\"/acltest\",null)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<ACL> acls = zk.getACL(\"/acltest\",new Stat())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "Assert.fail(\"Should have received an invalid acl error\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(Code.NOAUTH,e.code())@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(Code.NOAUTH,e.code())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.fail(\"Should have received an invalid acl error\")@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "testACL.add(new ACL(Perms.ALL,new Id(\"auth\",\"\")))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "zk.addAuthInfo(\"digest\",\"ben:passwd2\".getBytes())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@65@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "fail(\"Should have received a permission error\")@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "zk.create(\"/nullidtest\",new byte((((,testACL,CreateMode.PERSISTENT)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "InvalidACLException e@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "InvalidACLException e@@@29@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "testNullAuthId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(Ids.OPEN_ACL_UNSAFE,acls)@@@68@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "zk.close()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "LOG.info(\"Test successful, invalid acl received : \" + e.getMessage())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "{if (zk != null) {zk.close()}}@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "zk.create(\"/acltest\",new byte((((,Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "fail(\"Should have received an invalid acl error\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.fail(\"Should have received a permission error\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "KeeperException e@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "InvalidACLException e@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testACL.add(new ACL(Perms.ALL,new Id(\"auth\",\"\")))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "KeeperException e@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "fail(\"Should have received an invalid acl error\")@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8->16 [style = bold, label=""];
61->46 [style = dotted, label="true"];
38->51 [style = bold, label=""];
15->54 [style = bold, label=""];
10->17 [style = bold, label=""];
47->10 [style = bold, label=""];
44->24 [style = dotted, label="true"];
61->46 [style = bold, label=""];
58->3 [style = bold, label=""];
25->6 [style = bold, label=""];
40->13 [style = bold, label=""];
55->31 [style = dotted, label="true"];
18->55 [style = dashed, label="0"];
57->34 [style = bold, label=""];
43->19 [style = bold, label=""];
26->50 [style = dashed, label="0"];
41->30 [style = solid, label="acls"];
30->52 [style = dashed, label="0"];
3->36 [style = bold, label=""];
49->39 [style = bold, label=""];
37->60 [style = bold, label=""];
8->51 [style = dashed, label="0"];
73->10 [style = bold, label=""];
26->35 [style = bold, label=""];
40->63 [style = bold, label=""];
70->15 [style = bold, label=""];
25->47 [style = dotted, label="true"];
43->29 [style = bold, label=""];
22->71 [style = bold, label=""];
45->58 [style = dashed, label="0"];
55->31 [style = bold, label=""];
14->20 [style = bold, label=""];
28->45 [style = bold, label=""];
24->10 [style = bold, label=""];
18->31 [style = bold, label=""];
22->25 [style = bold, label=""];
19->12 [style = bold, label=""];
2->9 [style = solid, label="zk"];
44->73 [style = bold, label=""];
24->59 [style = dashed, label="0"];
52->37 [style = bold, label=""];
37->1 [style = bold, label=""];
69->44 [style = dotted, label="true"];
68->34 [style = bold, label=""];
27->61 [style = dashed, label="0"];
0->65 [style = solid, label="zk"];
51->16 [style = bold, label=""];
41->52 [style = solid, label="acls"];
39->4 [style = bold, label=""];
50->35 [style = dotted, label="true"];
5->73 [style = bold, label=""];
25->5 [style = dotted, label="true"];
27->46 [style = bold, label=""];
64->10 [style = bold, label=""];
22->71 [style = dotted, label="true"];
25->6 [style = dotted, label="true"];
23->10 [style = bold, label=""];
1->32 [style = bold, label=""];
29->38 [style = bold, label=""];
59->10 [style = bold, label=""];
25->64 [style = dotted, label="true"];
31->3 [style = bold, label=""];
63->29 [style = bold, label=""];
56->33 [style = bold, label=""];
38->66 [style = solid, label="testACL"];
60->56 [style = bold, label=""];
42->62 [style = dashed, label="0"];
36->40 [style = bold, label=""];
67->66 [style = bold, label=""];
47->64 [style = dashed, label="0"];
15->54 [style = dotted, label="true"];
11->42 [style = solid, label="acls"];
35->49 [style = bold, label=""];
42->65 [style = bold, label=""];
8->67 [style = dashed, label="0"];
32->33 [style = bold, label=""];
46->29 [style = bold, label=""];
12->53 [style = dashed, label="0"];
22->5 [style = dotted, label="true"];
12->49 [style = bold, label=""];
11->41 [style = bold, label=""];
38->21 [style = solid, label="testACL"];
71->73 [style = bold, label=""];
37->56 [style = solid, label="acls"];
19->53 [style = bold, label=""];
27->46 [style = dotted, label="true"];
6->10 [style = bold, label=""];
66->21 [style = bold, label=""];
49->28 [style = solid, label="testACL"];
44->59 [style = dotted, label="true"];
22->72 [style = bold, label=""];
54->10 [style = bold, label=""];
25->5 [style = bold, label=""];
13->63 [style = dashed, label="0"];
38->8 [style = bold, label=""];
50->35 [style = bold, label=""];
26->35 [style = dotted, label="true"];
15->23 [style = dotted, label="true"];
44->24 [style = bold, label=""];
3->40 [style = solid, label="testACL"];
37->32 [style = solid, label="acls"];
34->43 [style = bold, label=""];
2->11 [style = bold, label=""];
41->62 [style = bold, label=""];
38->67 [style = bold, label=""];
28->58 [style = bold, label=""];
22->72 [style = dotted, label="true"];
21->14 [style = bold, label=""];
15->23 [style = bold, label=""];
45->3 [style = bold, label=""];
62->52 [style = bold, label=""];
0->2 [style = bold, label=""];
1->60 [style = dashed, label="0"];
30->37 [style = bold, label=""];
33->9 [style = bold, label=""];
72->5 [style = bold, label=""];
4->28 [style = bold, label=""];
48->0 [style = bold, label=""];
69->44 [style = bold, label=""];
20->22 [style = bold, label=""];
5->47 [style = bold, label=""];
53->49 [style = bold, label=""];
23->54 [style = dashed, label="0"];
13->29 [style = bold, label=""];
7->34 [style = bold, label=""];
70->15 [style = dotted, label="true"];
32->56 [style = dashed, label="0"];
42->30 [style = bold, label=""];
16->21 [style = bold, label=""];
17->48 [style = bold, label=""];
18->31 [style = dotted, label="true"];
15->73 [style = bold, label=""];
5->64 [style = bold, label=""];
44->59 [style = bold, label=""];
41->42 [style = bold, label=""];
}
