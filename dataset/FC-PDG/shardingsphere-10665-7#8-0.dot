digraph {
8 [style = filled, label = "assertBuildGroupByStreamMergedResultWithMySQLLimit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertThat(new PaginationContext(getOffsetSegment(),getRowCountSegment(),getParameters()).getRevisedRowCount(selectStatementContext),is((long)Integer.MAX_VALUE))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(((LimitDecoratorMergedResult)actual).getMergedResult(),instanceOf())@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "when(metaData.getSchema()).thenReturn(mock())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "MergedResult actual = resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema())@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = Collections.singletonMap(DefaultSchema.LOGIC_NAME,mock())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "getRevisedRowCountWithMax['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(((LimitDecoratorMergedResult)actual).getMergedResult(),instanceOf())@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(actual,instanceOf())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertBuildGroupByStreamMergedResultWithMySQLLimit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(metaDataMap,Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.DESC))))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new MySQLSelectStatement()),new GroupByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC)))),new OrderByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralLimitValueSegment(0,0,1),null,Collections.emptyList()))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MergedResult actual = resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "MySQLSelectStatement selectStatement = (MySQLSelectStatement)buildSelectStatement(new MySQLSelectStatement())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(actual,instanceOf())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.ASC,OrderDirection.DESC))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "selectStatement.setLimit(new LimitSegment(0,0,new NumberLiteralLimitValueSegment(0,0,1),null))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23->21 [style = solid, label="metaDataMap"];
7->11 [style = bold, label=""];
24->19 [style = bold, label=""];
24->25 [style = dotted, label="true"];
3->4 [style = solid, label="selectStatementContext"];
2->3 [style = bold, label=""];
18->15 [style = bold, label=""];
8->6 [style = bold, label=""];
1->0 [style = bold, label=""];
3->4 [style = bold, label=""];
13->7 [style = solid, label="metaData"];
12->7 [style = bold, label=""];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
21->26 [style = bold, label=""];
7->11 [style = solid, label="selectStatementContext"];
20->23 [style = bold, label=""];
10->16 [style = bold, label=""];
22->20 [style = bold, label=""];
23->21 [style = bold, label=""];
15->9 [style = bold, label=""];
11->10 [style = bold, label=""];
6->13 [style = bold, label=""];
14->12 [style = bold, label=""];
21->26 [style = solid, label="selectStatementContext"];
9->14 [style = bold, label=""];
11->10 [style = solid, label="actual"];
2->6 [style = dashed, label="0"];
4->1 [style = solid, label="actual"];
4->1 [style = bold, label=""];
25->21 [style = solid, label="selectStatement"];
18->7 [style = solid, label="selectStatement"];
19->22 [style = bold, label=""];
17->18 [style = bold, label=""];
}
