digraph {
17 [style = filled, label = "return@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MatchPhrasePrefixQueryBuilder queryBuilder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "QueryShardContext context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(query,notNullValue())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Query query@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "MatchPhrasePrefixQueryBuilder queryBuilder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "query instanceof MatchAllDocsQuery@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Query query@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(queryBuilder.zeroTermsQuery(),equalTo(ZeroTermsQuery.ALL))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertThat(query,either(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()))@@@4@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(query,either(instanceOf()).or(instanceOf()).or(instanceOf()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "QueryShardContext context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "doAssertLuceneQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "doAssertLuceneQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "query instanceof MatchAllDocsQuery@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "SearchContext context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(query,either(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MatchPhraseQueryBuilder queryBuilder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(queryBuilder.zeroTermsQuery(),equalTo(ZeroTermsQuery.ALL))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "doAssertLuceneQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Query query@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
6->2 [style = solid, label="query"];
7->11 [style = bold, label=""];
7->10 [style = dotted, label="true"];
21->19 [style = bold, label=""];
2->1 [style = bold, label=""];
16->15 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
16->20 [style = dotted, label="true"];
14->17 [style = bold, label=""];
21->17 [style = dotted, label="true"];
16->2 [style = bold, label=""];
7->8 [style = bold, label=""];
17->19 [style = bold, label=""];
5->20 [style = dashed, label="0"];
12->2 [style = bold, label=""];
12->13 [style = dotted, label="true"];
3->5 [style = dotted, label="true"];
0->1 [style = solid, label="query"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
7->11 [style = dotted, label="true"];
12->6 [style = dotted, label="true"];
11->10 [style = bold, label=""];
2->21 [style = bold, label=""];
15->2 [style = solid, label="query"];
3->0 [style = dotted, label="true"];
6->7 [style = solid, label="query"];
21->14 [style = dotted, label="true"];
0->2 [style = solid, label="query"];
15->19 [style = solid, label="query"];
15->21 [style = solid, label="query"];
2->7 [style = bold, label=""];
12->9 [style = dotted, label="true"];
6->8 [style = solid, label="query"];
21->14 [style = bold, label=""];
16->18 [style = dotted, label="true"];
}
