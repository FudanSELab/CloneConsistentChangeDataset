digraph {
4 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertFalse(pendingContains(repairID,sstable))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "UUID repairID = registerSession(cfs,true,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cleanupCompactionFinalized['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "sstableDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SSTableReader sstable = makeSSTable(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(expectedRepairedAt,sstable.getSSTableMetadata().repairedAt)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertSame(,compactionTask.getClass())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AbstractCompactionTask compactionTask = csm.getNextBackgroundTask(FBUtilities.nowInSeconds())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LocalSessionAccessor.finalizeUnsafe(repairID)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cleanupCompactionFinalized['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SSTableDeletingNotification notification = new SSTableDeletingNotification(sstable)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "long expectedRepairedAt = ActiveRepairService.instance.getParentRepairSession(repairID).getRepairedAt()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cfs.getCompactionStrategyManager().enable()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "csm.handleNotification(new SSTableAddedNotification(Collections.singleton(sstable)),cfs.getTracker())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "LocalSessionAccessor.prepareUnsafe(repairID,COORDINATOR,PARTICIPANTS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(sstable.isRepaired())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "compactionTask.execute(null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(pendingContains(repairID,sstable))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertNotNull(pendingContains(repairID,sstable))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(repairedContains(sstable))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertNotNull(compactionTask)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mutateRepaired(sstable,repairID)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->26 [style = solid, label="sstable"];
12->0 [style = bold, label=""];
7->24 [style = solid, label="sstable"];
27->14 [style = bold, label=""];
19->9 [style = bold, label=""];
21->12 [style = solid, label="compactionTask"];
24->30 [style = solid, label="notification"];
13->4 [style = bold, label=""];
14->18 [style = bold, label=""];
2->25 [style = dashed, label="0"];
4->5 [style = bold, label=""];
25->26 [style = bold, label=""];
20->22 [style = bold, label=""];
16->8 [style = bold, label=""];
9->2 [style = bold, label=""];
10->11 [style = bold, label=""];
11->15 [style = bold, label=""];
14->9 [style = solid, label="repairID"];
7->3 [style = solid, label="sstable"];
24->30 [style = bold, label=""];
14->18 [style = solid, label="repairID"];
1->14 [style = bold, label=""];
30->25 [style = bold, label=""];
7->29 [style = solid, label="sstable"];
7->4 [style = solid, label="sstable"];
7->28 [style = solid, label="sstable"];
21->12 [style = bold, label=""];
7->25 [style = solid, label="sstable"];
7->3 [style = bold, label=""];
6->10 [style = bold, label=""];
16->29 [style = bold, label=""];
20->21 [style = bold, label=""];
14->29 [style = solid, label="repairID"];
14->3 [style = solid, label="repairID"];
7->9 [style = solid, label="sstable"];
17->13 [style = bold, label=""];
2->20 [style = bold, label=""];
7->13 [style = solid, label="sstable"];
7->16 [style = solid, label="sstable"];
0->17 [style = bold, label=""];
14->8 [style = solid, label="repairID"];
26->28 [style = bold, label=""];
23->14 [style = bold, label=""];
14->25 [style = solid, label="repairID"];
6->15 [style = solid, label="expectedRepairedAt"];
3->16 [style = bold, label=""];
22->21 [style = bold, label=""];
29->24 [style = bold, label=""];
5->6 [style = bold, label=""];
8->19 [style = bold, label=""];
18->7 [style = bold, label=""];
}
