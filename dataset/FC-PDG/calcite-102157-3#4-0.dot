digraph {
7 [style = filled, label = "convert = Expressions.convert_(Expressions.call(BuiltInMethod.FLOOR_DIV.method,operand,Expressions.constant(DateTimeUtils.MILLIS_PER_DAY)),)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sourceType.getSqlTypeName()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return RexImpTable.multiplyDivide(operand,multiplier,divider)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "translateCastToDate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "convert = Expressions.call(BuiltInMethod.STRING_TO_DATE.method,operand)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RelDataType sourceType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "scaleIntervalToNumber['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return operand@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "sourceType.getSqlTypeName()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return convert@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Expression convert = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RelDataType targetType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "targetType.getSqlTypeName().getFamily()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final BigDecimal multiplier = BigDecimal.ONE@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final BigDecimal divider = sourceType.getSqlTypeName().getEndUnit().multiplier@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RelDataType sourceType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Expression operand@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Expression operand@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "translateCastToDate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Expression operand@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "convert = RexImpTable.optimize2(operand,Expressions.call(BuiltInMethod.TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_DATE.method,operand,Expressions.call(BuiltInMethod.TIME_ZONE.method,root)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RelDataType sourceType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
4->5 [style = dotted, label="true"];
16->13 [style = bold, label=""];
4->16 [style = dashed, label="0"];
16->13 [style = dotted, label="true"];
11->10 [style = dotted, label="true"];
13->20 [style = solid, label="multiplier"];
11->6 [style = bold, label=""];
16->17 [style = dotted, label="true"];
1->5 [style = solid, label="operand"];
19->18 [style = dotted, label="true"];
1->8 [style = solid, label="operand"];
5->0 [style = solid, label="convert"];
4->8 [style = dotted, label="true"];
4->7 [style = dotted, label="true"];
3->6 [style = bold, label=""];
21->20 [style = solid, label="operand"];
11->9 [style = dotted, label="true"];
7->0 [style = bold, label=""];
16->20 [style = dotted, label="true"];
13->17 [style = solid, label="multiplier"];
19->21 [style = dotted, label="true"];
0->12 [style = dashed, label="0"];
19->15 [style = dotted, label="true"];
4->7 [style = bold, label=""];
6->0 [style = solid, label="convert"];
2->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
8->0 [style = bold, label=""];
14->16 [style = dotted, label="true"];
6->4 [style = bold, label=""];
13->17 [style = bold, label=""];
9->7 [style = solid, label="operand"];
8->0 [style = solid, label="convert"];
1->7 [style = solid, label="operand"];
19->14 [style = bold, label=""];
5->0 [style = bold, label=""];
2->21 [style = dashed, label="0"];
21->12 [style = solid, label="operand"];
14->12 [style = bold, label=""];
7->0 [style = solid, label="convert"];
20->12 [style = bold, label=""];
17->20 [style = solid, label="divider"];
4->8 [style = bold, label=""];
9->5 [style = solid, label="operand"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
3->1 [style = dotted, label="true"];
3->2 [style = dotted, label="true"];
9->8 [style = solid, label="operand"];
17->20 [style = bold, label=""];
}
