digraph {
17 [style = filled, label = "idealState.isExternalViewDisabled()@@@38@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Map<String,ExternalView> extViews = _accessor.getChildValuesMap(keyBuilder.externalViews())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "idealStates.keySet().retainAll(_resources)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Map.Entry<String,IdealState> pair = it.next()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "!_expectLiveInstances.equals(actualLiveNodes)@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ExternalView extView = extViews.get(resourceName)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return false@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Map<String,IdealState> idealStates = new HashMap<>(cache.getIdealStates())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "PropertyKey.Builder keyBuilder = _accessor.keyBuilder()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Iterator<Map.Entry<String,IdealState>> it = idealStates.entrySet().iterator()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "_expectLiveInstances != null && !_expectLiveInstances.isEmpty()@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "_resources != null && !_resources.isEmpty()@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "!result@@@47@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "pair.getValue().getStateModelDefRef().equals(TaskConstants.STATE_MODEL_NAME)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Set<String> actualLiveNodes = cache.getLiveInstances().keySet()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cache.refresh(_accessor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "verifyState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "extViews = Collections.emptyMap()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "jobIter.hasNext()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "IdealState idealState = idealStates.get(resourceName)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "boolean result = verifyExternalView(cache,extView,idealState)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "it.hasNext()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "extViews.keySet().retainAll(_resources)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Map.Entry<String,JobMonitor> jobEntry = jobIter.next()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "jobEntry.getValue().unregister()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "idealStates.put(resource,new IdealState(resource))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "extViews == null@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "LOG.debug(\"externalView for \" + resourceName + \" is not available\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return false@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "return false@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "jobIter.remove()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "unregister(getObjectName(getJobBeanName(jobEntry.getKey())))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "!idealStates.containsKey(resource)@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "return true@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "extView == null@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "it.remove()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "unregisterAllJobs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "unregisterAllJobs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "_perTypeJobMonitorMap@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Iterator<Map.Entry<String,JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
26->9 [style = dotted, label="true"];
29->13 [style = bold, label=""];
30->19 [style = dotted, label="true"];
24->37 [style = bold, label=""];
20->23 [style = bold, label=""];
0->1 [style = dotted, label="true"];
38->28 [style = bold, label=""];
37->40 [style = dotted, label="true"];
11->24 [style = dotted, label="true"];
28->12 [style = bold, label=""];
21->15 [style = bold, label=""];
31->10 [style = bold, label=""];
8->0 [style = bold, label=""];
23->10 [style = bold, label=""];
18->20 [style = solid, label="idealState"];
14->36 [style = dotted, label="true"];
17->35 [style = dotted, label="false"];
33->10 [style = bold, label=""];
10->20 [style = solid, label="extView"];
22->27 [style = bold, label=""];
17->10 [style = bold, label=""];
15->26 [style = solid, label="extViews"];
0->3 [style = dotted, label="true"];
23->33 [style = bold, label=""];
23->39 [style = bold, label=""];
19->22 [style = bold, label=""];
28->20 [style = solid, label="cache"];
10->16 [style = solid, label="extView"];
11->24 [style = bold, label=""];
26->9 [style = bold, label=""];
9->30 [style = bold, label=""];
30->22 [style = dotted, label="true"];
0->1 [style = bold, label=""];
11->14 [style = bold, label=""];
10->18 [style = bold, label=""];
3->6 [style = bold, label=""];
11->37 [style = dotted, label="true"];
2->3 [style = bold, label=""];
36->21 [style = bold, label=""];
21->25 [style = bold, label=""];
30->27 [style = bold, label=""];
17->32 [style = bold, label=""];
34->38 [style = bold, label=""];
14->21 [style = dotted, label="true"];
13->11 [style = bold, label=""];
1->3 [style = bold, label=""];
37->40 [style = bold, label=""];
32->35 [style = bold, label=""];
33->39 [style = bold, label=""];
15->26 [style = bold, label=""];
3->2 [style = dotted, label="true"];
27->10 [style = bold, label=""];
3->6 [style = dotted, label="true"];
17->32 [style = dotted, label="false"];
18->16 [style = bold, label=""];
6->5 [style = bold, label=""];
37->11 [style = bold, label=""];
12->29 [style = bold, label=""];
16->20 [style = bold, label=""];
17->39 [style = bold, label=""];
16->17 [style = bold, label=""];
3->7 [style = dotted, label="true"];
6->7 [style = bold, label=""];
26->30 [style = bold, label=""];
16->17 [style = dotted, label="true"];
3->5 [style = dotted, label="true"];
14->15 [style = bold, label=""];
23->33 [style = dotted, label="true"];
30->19 [style = bold, label=""];
31->27 [style = bold, label=""];
27->31 [style = bold, label=""];
25->15 [style = bold, label=""];
21->25 [style = dotted, label="true"];
4->0 [style = bold, label=""];
14->36 [style = bold, label=""];
2->13 [style = dashed, label="0"];
35->20 [style = bold, label=""];
27->31 [style = dotted, label="true"];
40->11 [style = bold, label=""];
7->2 [style = bold, label=""];
}
