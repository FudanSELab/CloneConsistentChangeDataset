digraph {
5 [style = filled, label = "testCompositeKeyOnNestedPojo['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCompositeKeyOnNestedPojo['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testNestedKeyOnNestedPojo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "see.execute()@@@37@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "see.getConfig().disableObjectReuse()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "see.setParallelism(4)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DataStream<Data> dataStream = see.fromCollection(elements)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "see.setParallelism(3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "summedStream.print()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataStream<Data> summedStream = dataStream.keyBy(\"aaa\",\"abc\",\"wxyz\").sum(\"sum\").keyBy(\"aaa\",\"abc\",\"wxyz\").flatMap(new FlatMapFunction<Data,Data>(){@Override public void flatMap(Data value,Collector<Data> out){if (first(value.aaa( == null) {first(value.aaa( = valueif (value.sum != 1) {throw new RuntimeException(\"Expected the sum to be one\")}}{if (value.sum != 2) {throw new RuntimeException(\"Expected the sum to be two\")}if (first(value.aaa(.aaa != value.aaa) {throw new RuntimeException(\"aaa key wrong\")}if (first(value.aaa(.abc != value.abc) {throw new RuntimeException(\"abc key wrong\")}if (first(value.aaa(.wxyz != value.wxyz) {throw new RuntimeException(\"wxyz key wrong\")}}}})@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DataStream<Data> summedStream = dataStream.keyBy(\"aaa\",\"stats.count\").sum(\"sum\").keyBy(\"aaa\",\"stats.count\").flatMap(new FlatMapFunction<Data,Data>(){@Override public void flatMap(Data value,Collector<Data> out){if (value.stats.count != 123) {throw new RuntimeException(\"Wrong value for value.stats.count\")}if (first(value.aaa( == null) {first(value.aaa( = valueif (value.sum != 1) {throw new RuntimeException(\"Expected the sum to be one\")}}{if (value.sum != 2) {throw new RuntimeException(\"Expected the sum to be two\")}if (first(value.aaa(.aaa != value.aaa) {throw new RuntimeException(\"aaa key wrong\")}if (first(value.aaa(.abc != value.abc) {throw new RuntimeException(\"abc key wrong\")}if (first(value.aaa(.wxyz != value.wxyz) {throw new RuntimeException(\"wxyz key wrong\")}}}})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
7->9 [style = bold, label=""];
5->2 [style = bold, label=""];
7->0 [style = bold, label=""];
3->10 [style = dashed, label="0"];
2->7 [style = bold, label=""];
0->9 [style = dashed, label="0"];
9->1 [style = bold, label=""];
8->2 [style = bold, label=""];
1->10 [style = bold, label=""];
4->6 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
11->2 [style = bold, label=""];
10->4 [style = bold, label=""];
}
