digraph {
2 [style = filled, label = "verifyEquality(JoinWindows.of(3).after(2),JoinWindows.of(3).after(2))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "verifyEquality(JoinWindows.of(ofMillis(3)).until(60),JoinWindows.of(ofMillis(3)).until(60))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "verifyEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(2)),JoinWindows.of(ofMillis(3)).before(ofMillis(2)))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verifyEquality(JoinWindows.of(3).grace(2),JoinWindows.of(3).grace(2))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "verifyEquality(SessionWindows.with(1).until(7),SessionWindows.with(1).until(7))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verifyEquality(JoinWindows.of(ofMillis(3)).grace(ofMillis(2)),JoinWindows.of(ofMillis(3)).grace(ofMillis(2)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "verifyEquality(JoinWindows.of(3).until(60),JoinWindows.of(3).until(60))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "verifyEquality(JoinWindows.of(ofMillis(3)).after(ofMillis(2)),JoinWindows.of(ofMillis(3)).after(ofMillis(2)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "verifyEquality(SessionWindows.with(1).grace(6),SessionWindows.with(1).grace(6))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "verifyEquality(SessionWindows.with(1).grace(6).until(7),SessionWindows.with(1).grace(6).until(7))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyEquality(JoinWindows.of(3).before(2),JoinWindows.of(3).before(2))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "verifyEquality(JoinWindows.of(ofMillis(3)),JoinWindows.of(ofMillis(3)))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "verifyEquality(SessionWindows.with(1),SessionWindows.with(1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verifyEquality(JoinWindows.of(ofMillis(9)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)).until(60),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)).until(60))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "verifyEquality(JoinWindows.of(9).before(1).after(2).grace(3).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "verifyEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)).until(60),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)).until(60))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "verifyEquality(JoinWindows.of(3).before(1).after(2).grace(3).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "verifyEquality(JoinWindows.of(3),JoinWindows.of(3))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->3 [style = bold, label=""];
19->18 [style = bold, label=""];
1->15 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
18->17 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->0 [style = bold, label=""];
2->17 [style = dashed, label="0"];
1->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
5->1 [style = bold, label=""];
12->10 [style = bold, label=""];
2->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
3->9 [style = dashed, label="0"];
7->6 [style = bold, label=""];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
7->12 [style = dashed, label="0"];
15->12 [style = bold, label=""];
13->15 [style = bold, label=""];
14->13 [style = bold, label=""];
16->20 [style = bold, label=""];
17->16 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
