digraph {
13 [style = filled, label = "int uncompressedLength@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "encodedNio = AirliftUtils.ensureAirliftSupported(encodedNio,uncompressedLength)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return uncompressed@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LZ4_DECOMPRESSOR.get().decompress(encodedNio,uncompressedNio)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ByteBuf encoded@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int uncompressedLength@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Lz4RawDecompressor.decompress(null,encoded.memoryAddress() + encoded.readerIndex(),encoded.memoryAddress() + encoded.writerIndex(),null,uncompressed.memoryAddress(),uncompressed.memoryAddress() + uncompressedLength)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ByteBuf encoded@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ZSTD_RAW_DECOMPRESSOR.get().decompress(null,encoded.memoryAddress() + encoded.readerIndex(),encoded.memoryAddress() + encoded.writerIndex(),null,uncompressed.memoryAddress() + uncompressed.writerIndex(),uncompressed.memoryAddress() + uncompressed.writerIndex() + uncompressedLength)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ZSTD_DECOMPRESSOR.get().decompress(encodedNio,uncompressedNio)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "decode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "encodedNio = AirliftUtils.ensureAirliftSupported(encodedNio)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "decode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "encoded.hasMemoryAddress() && uncompressed.hasMemoryAddress()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "decode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
16->0 [style = bold, label=""];
5->0 [style = solid, label="uncompressedLength"];
7->17 [style = bold, label=""];
13->8 [style = solid, label="uncompressedLength"];
4->17 [style = dashed, label="0"];
6->7 [style = solid, label="encodedNio"];
6->14 [style = solid, label="encodedNio"];
2->14 [style = dotted, label="false"];
7->17 [style = solid, label="encodedNio"];
7->14 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
3->4 [style = solid, label="uncompressedNio"];
0->2 [style = bold, label=""];
2->3 [style = dotted, label="false"];
16->15 [style = dotted, label="true"];
3->6 [style = bold, label=""];
2->18 [style = bold, label=""];
5->9 [style = solid, label="uncompressedLength"];
2->9 [style = bold, label=""];
7->4 [style = bold, label=""];
9->8 [style = bold, label=""];
10->5 [style = dotted, label="true"];
12->0 [style = bold, label=""];
2->18 [style = dotted, label="true"];
13->3 [style = solid, label="uncompressedLength"];
13->9 [style = solid, label="uncompressedLength"];
2->7 [style = dotted, label="false"];
3->17 [style = solid, label="uncompressedNio"];
6->14 [style = bold, label=""];
5->8 [style = solid, label="uncompressedLength"];
13->0 [style = solid, label="uncompressedLength"];
12->13 [style = dotted, label="true"];
2->9 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
10->0 [style = bold, label=""];
16->5 [style = dotted, label="true"];
5->18 [style = solid, label="uncompressedLength"];
2->6 [style = dotted, label="false"];
4->8 [style = bold, label=""];
14->4 [style = solid, label="encodedNio"];
18->8 [style = bold, label=""];
2->4 [style = dotted, label="false"];
10->1 [style = dotted, label="true"];
7->4 [style = solid, label="encodedNio"];
6->7 [style = bold, label=""];
8->11 [style = bold, label=""];
5->3 [style = solid, label="uncompressedLength"];
2->17 [style = dotted, label="false"];
0->11 [style = solid, label="uncompressed"];
14->4 [style = bold, label=""];
5->7 [style = solid, label="uncompressedLength"];
}
