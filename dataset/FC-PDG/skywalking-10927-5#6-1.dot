digraph {
5 [style = filled, label = "testIngressMetric['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ServiceMeshMetric.Builder incoming = result.getMetrics().get(0)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(\"ingress\",incoming.getDestServiceName())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"productpage\",outgoing.getDestServiceName())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(DetectPoint.client,outgoing.getDetectPoint())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testIngressMetric['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(\"productpage\",incoming.getDestServiceName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<ServiceMeshMetric.Builder> result = this.analysis.analysis(new ArrayList<>(),requestBuilder.getIdentifier(),requestBuilder.getHttpLogs().getLogEntry(0),Role.SIDECAR)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testIngress2SidecarMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(\"UNKNOWN\",incoming.getSourceServiceName())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(2,result.size())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "List<ServiceMeshMetric.Builder> result = this.analysis.analysis(new ArrayList<>(),requestBuilder.getIdentifier(),requestBuilder.getHttpLogs().getLogEntry(0),Role.PROXY)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "ServiceMeshMetric.Builder outgoing = result.get(1)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "AccessLogAnalyzer.Result result = this.analysis.analysis(AccessLogAnalyzer.Result.builder().build(),requestBuilder.getIdentifier(),requestBuilder.getHttpLogs().getLogEntry(0),Role.PROXY)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertEquals(\"\",incoming.getSourceServiceName())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(DetectPoint.server,incoming.getDetectPoint())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(2,result.getMetrics().size())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JsonFormat.parser().merge(isr,requestBuilder)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ServiceMeshMetric.Builder incoming = result.get(0)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(1,result.size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ServiceMeshMetric.Builder outgoing = result.getMetrics().get(1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(\"ingress\",outgoing.getSourceServiceName())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->19 [style = dashed, label="0"];
8->10 [style = bold, label=""];
4->3 [style = bold, label=""];
10->15 [style = bold, label=""];
22->19 [style = bold, label=""];
1->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
16->6 [style = bold, label=""];
20->0 [style = bold, label=""];
0->16 [style = dashed, label="0"];
7->20 [style = dashed, label="0"];
11->9 [style = solid, label="requestBuilder"];
14->17 [style = bold, label=""];
19->10 [style = bold, label=""];
7->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
3->12 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
13->11 [style = bold, label=""];
6->22 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
18->20 [style = bold, label=""];
9->18 [style = bold, label=""];
21->11 [style = bold, label=""];
0->22 [style = bold, label=""];
6->8 [style = bold, label=""];
15->4 [style = bold, label=""];
9->14 [style = bold, label=""];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
9->1 [style = bold, label=""];
17->16 [style = bold, label=""];
}
