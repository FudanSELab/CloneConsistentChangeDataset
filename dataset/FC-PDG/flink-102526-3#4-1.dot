digraph {
4 [style = filled, label = "AcknowledgeStreamMockEnvironment environment2 = createRunAndCheckpointOperatorChain(new OperatorID(4242L,4242L),new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.of(stateHandles))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "OperatorID tailOperatorID = new OperatorID(44L,44L)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Collections.singleton(tailOperatorID),RESTORED_OPERATORS)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testRestoreHeadWithNewId['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),new OperatorID(44L,44L),new CounterOperator(),Optional.empty())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(2,environment1.getCheckpointStateHandles().getSubtaskStateMappings().size())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testRestoreTailWithNewId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(new OperatorID(42L,42L),new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testRestoreHeadWithNewId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OperatorID headOperatorID = new OperatorID(42L,42L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TaskStateSnapshot stateHandles = environment1.getCheckpointStateHandles()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new HashSet<OperatorID>(){},RESTORED_OPERATORS)@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AcknowledgeStreamMockEnvironment environment2 = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),new OperatorID(4444L,4444L),new CounterOperator(),Optional.of(stateHandles))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->2 [style = solid, label="tailOperatorID"];
2->3 [style = bold, label=""];
1->4 [style = solid, label="tailOperatorID"];
12->11 [style = bold, label=""];
3->6 [style = bold, label=""];
11->10 [style = solid, label="headOperatorID"];
11->9 [style = solid, label="headOperatorID"];
11->9 [style = bold, label=""];
4->7 [style = bold, label=""];
4->0 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
6->10 [style = solid, label="stateHandles"];
1->7 [style = solid, label="tailOperatorID"];
2->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
6->10 [style = bold, label=""];
10->0 [style = bold, label=""];
9->3 [style = bold, label=""];
1->2 [style = bold, label=""];
4->10 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
6->4 [style = solid, label="stateHandles"];
}
