digraph {
22 [style = filled, label = "Assert.assertFalse(stickingServlet.wasInterrupted)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testInterruption['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(result.toString().startsWith(\"OK\"))@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "StuckThreadDetectionValve valve = new StuckThreadDetectionValve()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{asyncThread.join(20000)Assert.assertFalse(asyncThread.isAlive())}@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(0,valve.getStuckThreadIds().length)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "StuckingServlet stuckingServlet = new StuckingServlet(TimeUnit.SECONDS.toMillis(20L))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "context.addValve(valve)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Wrapper servlet = Tomcat.addServlet(context,\"myservlet\",stickingServlet)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "tomcat.start()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "valve.setThreshold(2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDetection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Thread.sleep(5000L)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Wrapper servlet = Tomcat.addServlet(context,\"myservlet\",stuckingServlet)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(1,valve.getStuckThreadIds().length)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Thread.sleep(500L)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertTrue(stuckingServlet.wasInterrupted)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(0,valve.getStuckThreadIds().length)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertFalse(stuckingServlet.wasInterrupted)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "testDetection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "context.setBackgroundProcessorDelay(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(0,valve.getStuckThreadIds().length)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "asyncThread.start()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "servlet.addMapping(\"/myservlet\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "StuckingServlet stuckingServlet = new StuckingServlet(8000L)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "StickingServlet stickingServlet = new StickingServlet(8000L)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Thread asyncThread = new Thread(){@Override public void run(){try {getUrl(\"http://localhost:\" + getPort() + \"/myservlet\",result,null)}catch (IOException e) }}@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ByteChunk result = new ByteChunk()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Thread.sleep(4000L)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(result.toString().startsWith(\"OK\"))@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "valve.setInterruptThreadThreshold(5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{asyncThread.join(20000)Assert.assertFalse(asyncThread.isAlive())}@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->29 [style = bold, label=""];
28->18 [style = solid, label="stuckingServlet"];
2->19 [style = bold, label=""];
28->18 [style = bold, label=""];
8->31 [style = bold, label=""];
3->31 [style = dashed, label="0"];
22->16 [style = bold, label=""];
31->24 [style = bold, label=""];
23->4 [style = bold, label=""];
14->10 [style = bold, label=""];
9->17 [style = bold, label=""];
19->11 [style = bold, label=""];
15->6 [style = bold, label=""];
3->22 [style = dashed, label="0"];
25->14 [style = bold, label=""];
3->16 [style = bold, label=""];
12->1 [style = bold, label=""];
17->21 [style = dashed, label="0"];
0->15 [style = bold, label=""];
7->3 [style = bold, label=""];
8->7 [style = bold, label=""];
24->30 [style = bold, label=""];
20->21 [style = bold, label=""];
17->28 [style = dashed, label="0"];
7->22 [style = bold, label=""];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
29->27 [style = bold, label=""];
15->6 [style = solid, label="result"];
18->4 [style = bold, label=""];
10->13 [style = bold, label=""];
18->23 [style = dashed, label="0"];
2->29 [style = dashed, label="0"];
12->14 [style = solid, label="valve"];
4->12 [style = bold, label=""];
11->8 [style = bold, label=""];
1->14 [style = bold, label=""];
26->28 [style = bold, label=""];
21->23 [style = solid, label="stickingServlet"];
17->18 [style = solid, label="stuckingServlet"];
1->25 [style = bold, label=""];
27->8 [style = bold, label=""];
17->18 [style = bold, label=""];
13->0 [style = bold, label=""];
21->23 [style = bold, label=""];
}
