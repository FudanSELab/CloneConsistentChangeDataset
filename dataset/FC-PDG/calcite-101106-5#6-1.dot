digraph {
4 [style = filled, label = "ImmutableBitSet groupKey = ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDistinctRowCountTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final RelMetadataQuery mq = rel.getCluster().getMetadataQuery()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ImmutableBitSet groupKey = ImmutableBitSet.of()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(result,is(1D))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RelNode rel = convertSql(\"select * from emp where deptno = 10\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDistinctRowCountTableEmptyKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Double result = mq.getDistinctRowCount(rel,groupKey,null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(result,nullValue())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testDistinctRowCountTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
0->1 [style = solid, label="rel"];
5->9 [style = dashed, label="0"];
8->1 [style = solid, label="groupKey"];
4->1 [style = bold, label=""];
2->0 [style = bold, label=""];
6->0 [style = bold, label=""];
7->0 [style = bold, label=""];
1->9 [style = solid, label="result"];
3->1 [style = bold, label=""];
4->1 [style = solid, label="groupKey"];
3->4 [style = bold, label=""];
1->5 [style = solid, label="result"];
1->9 [style = bold, label=""];
0->8 [style = bold, label=""];
8->3 [style = bold, label=""];
}
