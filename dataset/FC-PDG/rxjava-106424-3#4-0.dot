digraph {
4 [style = filled, label = "errorDelayed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "errorDelayed2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Flowable.combineLatestDelayError(new Function<Object((,Object>(){@Override public Object apply(Object(( a){return a}},128,Flowable.error(new TestException()),Flowable.just(1)).test().assertFailure()@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "errorDelayed2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Observable.combineLatestDelayError(new Function<Object((,Object>(){@Override public Object apply(Object(( a){return a}},128,Observable.error(new TestException()).startWithItem(1),Observable.empty()).test().assertFailure()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Observable.combineLatestDelayError(new ObservableSource((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1758633,new Function<Object((,Object>(){@Override public Object apply(Object(( a){return a}},128).test().assertFailure()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->2 [style = dashed, label="0"];
1->5 [style = dashed, label="0"];
3->2 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
}
