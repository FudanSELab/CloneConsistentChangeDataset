digraph {
27 [style = filled, label = "sinkConnector.start(connectorProps)@@@15@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "PowerMock.verifyAll()@@@45@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertStatistics(worker,0,0)@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Map<String,String> connProps = new HashMap<>(connectorProps)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@39@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sinkConnector)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertStatistics(worker,1,0)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Map<String,String> connProps = new HashMap<>(props)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "EasyMock.expectLastCall()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "ConnectException e@@@42@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertStatistics(worker,0,0)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "worker.start()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sinkConnector)).andReturn(delegatingLoader).times(3)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "testAddConnectorByAlias['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "sinkConnector.initialize(anyObject())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PowerMock.replayAll()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testReconfigureConnectorTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expectFileConfigProvider()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "sinkConnector.start(props)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "testReconfigureConnectorTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "EasyMock.expect(sinkConnector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sinkConnector.stop()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectStopStorage()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "props.put(ConnectorConfig.TASKS_MAX_CONFIG,\"1\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "worker.stop()@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "{}@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "EasyMock.expectLastCall()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sinkConnector.stop()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "props.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ConnectException e@@@45@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expect(sinkConnector.taskClass()).andReturn()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertStatistics(worker,1,0)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "connectorProps.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sinkConnector)).andReturn(delegatingLoader).times(2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "sinkConnector.initialize(anyObject())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertStatistics(worker,0,0)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "worker.herder = herder@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,\"WorkerTestConnector\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "EasyMock.expect(plugins.newConnector(\"WorkerTestConnector\")).andReturn(sinkConnector)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->22 [style = solid, label="worker"];
39->80 [style = bold, label=""];
27->78 [style = dashed, label="0"];
65->67 [style = bold, label=""];
0->77 [style = bold, label=""];
77->25 [style = bold, label=""];
56->1 [style = bold, label=""];
4->53 [style = bold, label=""];
55->27 [style = dashed, label="0"];
21->43 [style = bold, label=""];
17->9 [style = bold, label=""];
29->81 [style = dashed, label="0"];
38->57 [style = solid, label="worker"];
41->12 [style = solid, label="expectedTaskProps"];
43->81 [style = bold, label=""];
4->3 [style = solid, label="taskProps"];
71->73 [style = solid, label="connProps"];
3->16 [style = bold, label=""];
54->57 [style = solid, label="worker"];
27->15 [style = bold, label=""];
45->57 [style = bold, label=""];
48->59 [style = solid, label="props"];
30->62 [style = dashed, label="0"];
38->5 [style = solid, label="worker"];
26->12 [style = bold, label=""];
63->66 [style = bold, label=""];
76->11 [style = bold, label=""];
32->62 [style = bold, label=""];
34->64 [style = bold, label=""];
0->8 [style = bold, label=""];
2->59 [style = bold, label=""];
75->47 [style = bold, label=""];
43->29 [style = bold, label=""];
54->46 [style = solid, label="worker"];
6->78 [style = bold, label=""];
64->0 [style = bold, label=""];
19->42 [style = bold, label=""];
5->10 [style = bold, label=""];
1->4 [style = bold, label=""];
42->46 [style = bold, label=""];
15->34 [style = bold, label=""];
47->48 [style = bold, label=""];
57->51 [style = bold, label=""];
62->5 [style = bold, label=""];
49->7 [style = dashed, label="0"];
10->7 [style = bold, label=""];
61->38 [style = bold, label=""];
25->1 [style = solid, label="taskProps"];
58->39 [style = bold, label=""];
45->71 [style = bold, label=""];
9->54 [style = bold, label=""];
29->20 [style = bold, label=""];
48->30 [style = solid, label="props"];
30->7 [style = bold, label=""];
33->36 [style = bold, label=""];
46->33 [style = bold, label=""];
66->71 [style = bold, label=""];
56->16 [style = bold, label=""];
60->37 [style = solid, label="connConfig"];
68->6 [style = bold, label=""];
38->17 [style = bold, label=""];
35->44 [style = solid, label="expectedTaskProps"];
44->57 [style = bold, label=""];
60->37 [style = bold, label=""];
73->70 [style = solid, label="connConfig"];
39->13 [style = bold, label=""];
18->40 [style = bold, label=""];
48->14 [style = bold, label=""];
11->21 [style = bold, label=""];
59->60 [style = solid, label="connProps"];
54->42 [style = solid, label="worker"];
34->55 [style = bold, label=""];
78->15 [style = bold, label=""];
14->58 [style = bold, label=""];
48->55 [style = solid, label="props"];
73->70 [style = bold, label=""];
52->22 [style = bold, label=""];
69->11 [style = bold, label=""];
40->59 [style = bold, label=""];
67->72 [style = bold, label=""];
79->24 [style = bold, label=""];
48->49 [style = solid, label="props"];
54->51 [style = solid, label="worker"];
38->54 [style = solid, label="worker"];
14->67 [style = dashed, label="0"];
16->50 [style = bold, label=""];
54->79 [style = solid, label="worker"];
6->27 [style = bold, label=""];
23->79 [style = bold, label=""];
59->71 [style = dashed, label="0"];
31->44 [style = bold, label=""];
81->75 [style = bold, label=""];
74->68 [style = bold, label=""];
49->2 [style = bold, label=""];
71->40 [style = bold, label=""];
37->35 [style = bold, label=""];
13->6 [style = bold, label=""];
80->6 [style = bold, label=""];
41->52 [style = solid, label="expectedTaskProps"];
50->61 [style = bold, label=""];
35->26 [style = bold, label=""];
10->30 [style = bold, label=""];
38->31 [style = solid, label="worker"];
38->51 [style = solid, label="worker"];
72->74 [style = bold, label=""];
25->56 [style = bold, label=""];
45->49 [style = bold, label=""];
53->3 [style = bold, label=""];
28->11 [style = bold, label=""];
54->7 [style = solid, label="worker"];
22->31 [style = bold, label=""];
41->60 [style = bold, label=""];
20->75 [style = dashed, label="0"];
55->0 [style = bold, label=""];
54->23 [style = solid, label="worker"];
40->73 [style = bold, label=""];
20->47 [style = bold, label=""];
35->31 [style = solid, label="expectedTaskProps"];
7->45 [style = bold, label=""];
38->46 [style = solid, label="worker"];
23->24 [style = bold, label=""];
70->41 [style = bold, label=""];
36->23 [style = bold, label=""];
47->65 [style = bold, label=""];
13->80 [style = dashed, label="0"];
54->32 [style = bold, label=""];
54->5 [style = solid, label="worker"];
12->52 [style = bold, label=""];
8->25 [style = bold, label=""];
59->41 [style = bold, label=""];
51->19 [style = bold, label=""];
30->45 [style = bold, label=""];
8->77 [style = dashed, label="0"];
}
