digraph {
2 [style = filled, label = "Flowable.just(1).subscribeOn(Schedulers.computation()).take(1).subscribe(new Consumer<Integer>(){@Override public void accept(Integer t1){try {Thread.sleep(100)}catch (Exception e) {latch.countDown()}}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "interrupt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AtomicReference<Object> exception = new AtomicReference<Object>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Observable.just(1).subscribeOn(Schedulers.computation()).take(1).subscribe(new Consumer<Integer>(){@Override public void accept(Integer t1){try {Thread.sleep(100)}catch (Exception e) {latch.countDown()}}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "interrupt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final AtomicReference<Object> exception = new AtomicReference<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "latch.await()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(exception.get())@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "interrupt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
6->1 [style = bold, label=""];
1->2 [style = bold, label=""];
0->6 [style = dashed, label="0"];
1->8 [style = bold, label=""];
9->0 [style = bold, label=""];
8->5 [style = bold, label=""];
2->8 [style = dashed, label="0"];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
4->0 [style = bold, label=""];
2->5 [style = bold, label=""];
}
