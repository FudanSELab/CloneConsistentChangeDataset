digraph {
1 [style = filled, label = "source.put(\"foo.baz\",\"biff\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(getValue(aliased,\"foo.bar\")).isEqualTo(\"bing\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockConfigurationPropertySource source = new MockConfigurationPropertySource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "getConfigurationPropertyWhenNotAliasesShouldReturnValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(getValue(aliased,\"foo.bar1\")).isEqualTo(\"bing\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(getValue(aliased,\"foo.baz\")).isEqualTo(\"biff\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "source.put(\"foo.bar\",\"bing\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ConfigurationPropertySource aliased = source.nonIterable().withAliases(new ConfigurationPropertyNameAliases(\"foo.bar\",\"foo.bar1\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getConfigurationPropertyShouldConsiderAliases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "getConfigurationPropertyShouldConsiderAliases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
3->9 [style = bold, label=""];
5->1 [style = bold, label=""];
8->4 [style = bold, label=""];
7->4 [style = bold, label=""];
0->9 [style = dashed, label="0"];
0->6 [style = bold, label=""];
4->5 [style = bold, label=""];
2->4 [style = bold, label=""];
3->0 [style = bold, label=""];
}
