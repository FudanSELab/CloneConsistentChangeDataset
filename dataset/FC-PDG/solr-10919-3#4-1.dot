digraph {
3 [style = filled, label = "testKmeans['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),1.0,0.0)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),0.0,0.0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "List<List<Number>> membership = (List<List<Number>>)tuples.get(0).get(\"l\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertTrue(!(labels1.contains(\"doc1\") && labels2.contains(\"doc1\")))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(membership.get(1).get(0).doubleValue(),1.0,0.001)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(membership.get(2).get(1).doubleValue(),1.0,0.001)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertEquals(membership.get(0).get(0).doubleValue(),0.0,0.001)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.001)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),0.0,0.0)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),1.0,0.001)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),1.0,0.001)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),0.0,0.0)@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),1.0,0.001)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),1.0,0.0)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),1.0,0.0)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(membership.get(0).get(0).doubleValue(),1.0,0.001)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue((labels1.contains(\"doc1\") && labels1.contains(\"doc2\")) || ((labels1.contains(\"doc3\") && labels1.contains(\"doc4\"))))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(membership.get(3).get(0).doubleValue(),1.0,0.001)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),0.0,0.001)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(membership.get(3).get(1).doubleValue(),0.0,0.001)@@@70@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(!(labels1.contains(\"doc3\") && labels2.contains(\"doc3\")))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(membership.get(0).get(1).doubleValue(),0.0,0.001)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),1.0,0.001)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),0.0,0.0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),1.0,0.001)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),0.0,0.001)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.001)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),1.0,0.001)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "labels1.contains(\"doc1\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(membership.get(1).get(1).doubleValue(),1.0,0.001)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),0.0,0.001)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),0.0,0.0)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "List<List<Number>> centroids = (List<List<Number>>)tuples.get(0).get(\"i\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),1.0,0.0)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),0.0,0.0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),0.0,0.001)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(\"doc1\", \"doc2\", \"doc3\", \"doc4\")),\" + \" f=kmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h))\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),1.0,0.0)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.0)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(membership.get(2).get(0).doubleValue(),1.0,0.001)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue((labels2.contains(\"doc1\") && labels2.contains(\"doc2\")) || ((labels2.contains(\"doc3\") && labels2.contains(\"doc4\"))))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),0.0,0.001)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "List<String> labels1 = (List<String>)tuples.get(0).get(\"j\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(membership.get(3).get(1).doubleValue(),1.0,0.001)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),0.0,0.0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),0.0,0.001)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),1.0,0.001)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(!(labels1.contains(\"doc2\") && labels2.contains(\"doc2\")))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(centroids.size(),2)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "solrStream.setStreamContext(context)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(membership.get(1).get(0).doubleValue(),0.0,0.001)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(membership.get(2).get(1).doubleValue(),0.0,0.001)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),1.0,0.0)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(membership.get(2).get(0).doubleValue(),0.0,0.001)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(!(labels1.contains(\"doc4\") && labels2.contains(\"doc4\")))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),1.0,0.0)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),1.0,0.0)@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),0.0,0.001)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(doc1, doc2, doc3, doc4)),\" + \" f=fuzzyKmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h),\" + \" l=getMembershipMatrix(f))\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),0.0,0.001)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),0.0,0.001)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "List<List<Number>> cluster1 = (List<List<Number>>)tuples.get(0).get(\"g\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testFuzzyKmeans['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),0.0,0.0)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(membership.get(3).get(0).doubleValue(),0.0,0.001)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<String> labels2 = (List<String>)tuples.get(0).get(\"k\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(cluster2.size(),2)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<List<Number>> cluster2 = (List<List<Number>>)tuples.get(0).get(\"h\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(membership.get(1).get(1).doubleValue(),0.0,0.001)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(tuples.size() == 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),0.0,0.0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.0)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),1.0,0.0)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),1.0,0.0)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),1.0,0.001)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),0.0,0.0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(doc1, doc2, doc3, doc4)),\" + \" f=kmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h))\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),1.0,0.001)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),1.0,0.001)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),0.0,0.0)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testKmeans['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),0.0,0.001)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),0.0,0.001)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),1.0,0.001)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),1.0,0.0)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(membership.get(0).get(1).doubleValue(),1.0,0.001)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(cluster1.size(),2)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->2 [style = bold, label=""];
34->84 [style = dotted, label="false"];
34->12 [style = dotted, label="true"];
27->38 [style = bold, label=""];
20->52 [style = dashed, label="0"];
5->20 [style = bold, label=""];
78->61 [style = bold, label=""];
34->16 [style = dotted, label="false"];
35->41 [style = bold, label=""];
34->56 [style = dotted, label="true"];
34->70 [style = dotted, label="false"];
10->19 [style = bold, label=""];
21->15 [style = bold, label=""];
34->76 [style = dotted, label="true"];
34->73 [style = dotted, label="true"];
34->63 [style = dotted, label="false"];
9->10 [style = bold, label=""];
25->35 [style = bold, label=""];
34->67 [style = dotted, label="false"];
22->83 [style = dashed, label="0"];
34->65 [style = dotted, label="true"];
22->30 [style = bold, label=""];
13->65 [style = dashed, label="0"];
51->44 [style = solid, label="cexpr"];
34->26 [style = dotted, label="true"];
34->23 [style = dotted, label="true"];
8->71 [style = dashed, label="0"];
75->42 [style = bold, label=""];
77->92 [style = bold, label=""];
34->2 [style = dotted, label="false"];
34->43 [style = dotted, label="true"];
38->49 [style = bold, label=""];
56->83 [style = bold, label=""];
76->87 [style = bold, label=""];
7->60 [style = dashed, label="0"];
8->51 [style = dashed, label="0"];
7->16 [style = bold, label=""];
60->63 [style = bold, label=""];
34->80 [style = dotted, label="false"];
11->33 [style = bold, label=""];
36->77 [style = dashed, label="0"];
31->40 [style = bold, label=""];
29->44 [style = bold, label=""];
14->9 [style = bold, label=""];
23->12 [style = bold, label=""];
2->25 [style = bold, label=""];
34->37 [style = dotted, label="true"];
71->29 [style = bold, label=""];
83->73 [style = bold, label=""];
26->57 [style = dashed, label="0"];
34->55 [style = dotted, label="true"];
47->32 [style = solid, label="context"];
34->53 [style = dotted, label="false"];
63->90 [style = bold, label=""];
12->87 [style = dashed, label="0"];
8->44 [style = solid, label="cexpr"];
79->69 [style = bold, label=""];
44->21 [style = bold, label=""];
34->13 [style = dotted, label="true"];
5->80 [style = dashed, label="0"];
34->5 [style = dotted, label="false"];
35->68 [style = dashed, label="0"];
17->86 [style = dashed, label="0"];
34->90 [style = dotted, label="false"];
34->60 [style = dotted, label="false"];
1->56 [style = dashed, label="0"];
65->76 [style = bold, label=""];
34->54 [style = bold, label=""];
69->64 [style = bold, label=""];
39->45 [style = bold, label=""];
34->25 [style = dotted, label="false"];
20->31 [style = bold, label=""];
34->94 [style = dotted, label="false"];
12->1 [style = bold, label=""];
24->47 [style = bold, label=""];
18->28 [style = bold, label=""];
45->62 [style = dashed, label="0"];
34->74 [style = dotted, label="false"];
34->88 [style = dotted, label="false"];
34->22 [style = dotted, label="true"];
85->93 [style = bold, label=""];
34->62 [style = dotted, label="false"];
46->4 [style = bold, label=""];
81->68 [style = bold, label=""];
73->55 [style = bold, label=""];
66->71 [style = bold, label=""];
34->7 [style = dotted, label="false"];
15->24 [style = solid, label="url"];
34->83 [style = dotted, label="true"];
34->40 [style = dotted, label="false"];
16->39 [style = bold, label=""];
34->45 [style = dotted, label="false"];
70->85 [style = bold, label=""];
86->65 [style = bold, label=""];
88->72 [style = bold, label=""];
90->62 [style = bold, label=""];
34->77 [style = dotted, label="true"];
34->69 [style = dotted, label="true"];
80->52 [style = bold, label=""];
34->85 [style = dotted, label="false"];
34->39 [style = dotted, label="false"];
34->79 [style = dotted, label="true"];
6->26 [style = bold, label=""];
34->31 [style = dotted, label="false"];
32->46 [style = bold, label=""];
6->58 [style = dashed, label="0"];
71->44 [style = solid, label="cexpr"];
92->59 [style = bold, label=""];
30->43 [style = bold, label=""];
34->81 [style = dotted, label="false"];
34->36 [style = dotted, label="true"];
67->88 [style = bold, label=""];
34->89 [style = dotted, label="false"];
58->57 [style = bold, label=""];
2->94 [style = dashed, label="0"];
34->64 [style = dotted, label="true"];
34->1 [style = dotted, label="true"];
34->86 [style = dotted, label="true"];
23->76 [style = dashed, label="0"];
57->77 [style = bold, label=""];
42->14 [style = bold, label=""];
62->80 [style = bold, label=""];
34->61 [style = dotted, label="true"];
51->29 [style = bold, label=""];
91->79 [style = bold, label=""];
34->68 [style = dotted, label="false"];
31->53 [style = dashed, label="0"];
47->32 [style = bold, label=""];
30->73 [style = dashed, label="0"];
74->94 [style = bold, label=""];
53->74 [style = bold, label=""];
3->8 [style = bold, label=""];
34->52 [style = dotted, label="false"];
34->93 [style = dotted, label="false"];
16->63 [style = dashed, label="0"];
64->78 [style = bold, label=""];
94->81 [style = bold, label=""];
24->46 [style = solid, label="solrStream"];
59->91 [style = bold, label=""];
49->75 [style = bold, label=""];
0->18 [style = bold, label=""];
17->13 [style = bold, label=""];
34->41 [style = dotted, label="false"];
34->30 [style = dotted, label="true"];
93->89 [style = bold, label=""];
25->81 [style = dashed, label="0"];
89->84 [style = bold, label=""];
49->42 [style = bold, label=""];
19->48 [style = bold, label=""];
52->53 [style = bold, label=""];
34->20 [style = dotted, label="false"];
68->67 [style = bold, label=""];
54->86 [style = bold, label=""];
34->72 [style = dotted, label="false"];
29->24 [style = solid, label="paramsLoc"];
72->70 [style = bold, label=""];
26->36 [style = bold, label=""];
28->11 [style = bold, label=""];
37->17 [style = bold, label=""];
40->74 [style = dashed, label="0"];
34->7 [style = bold, label=""];
37->54 [style = dashed, label="0"];
34->57 [style = dotted, label="true"];
84->82 [style = bold, label=""];
34->58 [style = dotted, label="true"];
34->91 [style = dotted, label="true"];
43->6 [style = bold, label=""];
48->0 [style = bold, label=""];
87->56 [style = bold, label=""];
41->67 [style = dashed, label="0"];
1->22 [style = bold, label=""];
34->60 [style = bold, label=""];
34->92 [style = dotted, label="true"];
34->37 [style = bold, label=""];
34->17 [style = dotted, label="true"];
39->90 [style = dashed, label="0"];
50->51 [style = bold, label=""];
15->24 [style = bold, label=""];
34->78 [style = dotted, label="true"];
4->27 [style = bold, label=""];
34->35 [style = dotted, label="false"];
34->87 [style = dotted, label="true"];
13->23 [style = bold, label=""];
43->55 [style = dashed, label="0"];
34->6 [style = dotted, label="true"];
34->54 [style = dotted, label="true"];
34->59 [style = dotted, label="true"];
33->34 [style = bold, label=""];
8->29 [style = bold, label=""];
55->58 [style = bold, label=""];
34->82 [style = dotted, label="false"];
45->5 [style = bold, label=""];
}
