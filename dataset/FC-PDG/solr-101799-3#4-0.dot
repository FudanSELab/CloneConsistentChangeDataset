digraph {
4 [style = filled, label = "val.streamDoubles(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "counter.setValue(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "counter.setValue(0)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(24,val.getInt())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "constantDoubleTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "val.streamLongs(null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "val.streamObjects(null)@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(new Integer(24),val.getObject())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "counter.setValue(0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(24,val.getObject())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "val.streamStrings(null)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "counter.setValue(0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(24L,val.getLong())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "val.streamInts(null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(val.exists())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(24.0,val.getDouble(),.00001)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"24.0\",val.getString())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ConstantDoubleValue val = new ConstantDoubleValue(24.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "val.streamFloats(null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestIntValue counter = new TestIntValue()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"24\",val.getString())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "counter.setValue(0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(new Double(24.0),val.getObject())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ConstantIntValue val = new ConstantIntValue(24)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "constantIntTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "counter.setValue(0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(24F,val.getFloat(),.00001)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "constantIntTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17->10 [style = bold, label=""];
0->9 [style = bold, label=""];
2->20 [style = bold, label=""];
3->25 [style = dashed, label="0"];
24->2 [style = bold, label=""];
2->6 [style = bold, label=""];
6->18 [style = bold, label=""];
4->19 [style = bold, label=""];
8->14 [style = bold, label=""];
7->0 [style = bold, label=""];
20->3 [style = bold, label=""];
7->4 [style = bold, label=""];
9->8 [style = bold, label=""];
26->24 [style = bold, label=""];
20->25 [style = bold, label=""];
13->23 [style = dashed, label="0"];
11->15 [style = bold, label=""];
19->5 [style = bold, label=""];
25->27 [style = bold, label=""];
5->1 [style = bold, label=""];
3->23 [style = bold, label=""];
13->27 [style = dashed, label="0"];
23->21 [style = bold, label=""];
15->4 [style = bold, label=""];
22->10 [style = bold, label=""];
1->12 [style = bold, label=""];
3->13 [style = bold, label=""];
21->7 [style = bold, label=""];
10->2 [style = bold, label=""];
13->21 [style = bold, label=""];
16->20 [style = bold, label=""];
27->21 [style = bold, label=""];
14->11 [style = bold, label=""];
10->24 [style = dashed, label="0"];
18->16 [style = bold, label=""];
}
