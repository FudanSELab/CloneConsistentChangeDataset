digraph {
34 [style = filled, label = "return l == null? new ArrayList<>(0): l@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "l == null@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "l = AList.of()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<V> l@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "appendAll['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "l.add(e.value)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Field f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "l = AList.of()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "classEntries@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "appendAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Class<?> c@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!noClassEntries@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<V> l@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "l = AList.create()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "ClassEntry<V> e@@@4@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "e.matches(c) && e.value != null@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "e.matches(f) && e.value != null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "e.matches(c) && e.value != null@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "l.add(e.value)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "!noClassEntries@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "ClassEntry<V> e@@@4@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "!noFieldEntries@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "FieldEntry<V> e@@@4@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "l == null@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "classEntries@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Class<?> c@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<V> l@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "appendAll['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return l@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "fieldEntries@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->18 [style = dotted, label="true"];
1->5 [style = bold, label=""];
22->18 [style = solid, label="ofType"];
4->10 [style = bold, label=""];
4->3 [style = bold, label=""];
10->18 [style = bold, label=""];
23->25 [style = bold, label=""];
32->28 [style = dotted, label="true"];
27->32 [style = bold, label=""];
21->19 [style = bold, label=""];
31->34 [style = solid, label="l"];
27->12 [style = bold, label=""];
25->34 [style = bold, label=""];
4->10 [style = dotted, label="true"];
15->21 [style = bold, label=""];
25->23 [style = bold, label=""];
0->5 [style = solid, label="l"];
24->31 [style = dotted, label="true"];
14->5 [style = bold, label=""];
20->10 [style = bold, label=""];
1->3 [style = bold, label=""];
30->25 [style = solid, label="f"];
12->32 [style = bold, label=""];
3->4 [style = dotted, label="true"];
14->10 [style = bold, label=""];
10->3 [style = bold, label=""];
29->25 [style = bold, label=""];
15->22 [style = dotted, label="true"];
24->30 [style = dotted, label="true"];
10->33 [style = dashed, label="0"];
32->34 [style = bold, label=""];
18->20 [style = dotted, label="true"];
29->34 [style = bold, label=""];
27->12 [style = dotted, label="true"];
12->1 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
5->34 [style = dashed, label="0"];
14->10 [style = dotted, label="true"];
32->33 [style = dotted, label="true"];
11->4 [style = solid, label="ofType"];
12->21 [style = dashed, label="0"];
19->5 [style = solid, label="l"];
15->13 [style = dotted, label="true"];
1->3 [style = dotted, label="true"];
1->7 [style = dotted, label="true"];
9->12 [style = solid, label="l"];
31->27 [style = solid, label="l"];
14->17 [style = dotted, label="true"];
14->16 [style = dotted, label="true"];
8->3 [style = solid, label="c"];
11->10 [style = solid, label="c"];
12->34 [style = solid, label="l"];
3->5 [style = bold, label=""];
13->21 [style = solid, label="l"];
32->25 [style = dotted, label="true"];
18->20 [style = bold, label=""];
10->5 [style = bold, label=""];
19->14 [style = bold, label=""];
18->10 [style = bold, label=""];
6->9 [style = dotted, label="true"];
24->26 [style = dotted, label="true"];
11->31 [style = dashed, label="0"];
6->8 [style = dotted, label="true"];
0->1 [style = bold, label=""];
18->5 [style = bold, label=""];
21->19 [style = dotted, label="true"];
32->25 [style = bold, label=""];
15->11 [style = dotted, label="true"];
12->0 [style = dotted, label="true"];
23->34 [style = bold, label=""];
13->5 [style = solid, label="l"];
25->23 [style = dotted, label="true"];
6->11 [style = dotted, label="true"];
20->5 [style = bold, label=""];
23->29 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
9->5 [style = solid, label="l"];
26->23 [style = solid, label="ofType"];
23->29 [style = bold, label=""];
4->5 [style = bold, label=""];
24->27 [style = bold, label=""];
21->14 [style = bold, label=""];
6->12 [style = bold, label=""];
}
