digraph {
20 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "OrderByContext actualOrderByContext = new OrderByContextEngine().createOrderBy(new ShardingSphereSchema(),selectStatement,emptyGroupByContext)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(actualGroupByContext.getLastIndex(),is(10))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "GroupByContext emptyGroupByContext = new GroupByContext(Collections.emptyList())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expectedOrderByItem3.setIndex(3)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "GroupBySegment groupBySegment = new GroupBySegment(0,10,Arrays.asList(columnOrderByItemSegment,indexOrderByItemSegment1,indexOrderByItemSegment2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "expectedOrderByItem2.setIndex(2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "OrderByItem expectedOrderByItem3 = new OrderByItem(indexOrderByItemSegment2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "GroupByContext actualGroupByContext = new GroupByContextEngine().createGroupByContext(selectStatement)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "OrderBySegment orderBySegment = new OrderBySegment(0,1,Arrays.asList(columnOrderByItemSegment,indexOrderByItemSegment1,indexOrderByItemSegment2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertCreateOrderByWithOrderBy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertFalse(actualOrderByContext.isGenerated())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "OrderByItem expectedOrderByItem1 = new OrderByItem(columnOrderByItemSegment)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertCreateOrderByWithOrderBy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "OrderByItemSegment columnOrderByItemSegment = new ColumnOrderByItemSegment(new ColumnSegment(0,1,new IdentifierValue(\"column1\")),OrderDirection.ASC)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "selectStatement.setGroupBy(groupBySegment)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(actualGroupByContext.getItems(),is(Arrays.asList(expectedOrderByItem1,expectedOrderByItem2,expectedOrderByItem3)))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OrderByItemSegment indexOrderByItemSegment1 = new IndexOrderByItemSegment(1,2,2,OrderDirection.ASC,OrderDirection.DESC)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "OrderByItem expectedOrderByItem2 = new OrderByItem(indexOrderByItemSegment1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertCreateGroupByContextWithGroupBy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "GroupByContext emptyGroupByContext = new GroupByContext(Collections.emptyList(),0)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "OrderByItemSegment indexOrderByItemSegment2 = new IndexOrderByItemSegment(2,3,3,OrderDirection.ASC,OrderDirection.DESC)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "selectStatement.setOrderBy(orderBySegment)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(actualOrderByContext.getItems(),is(Arrays.asList(expectedOrderByItem1,expectedOrderByItem2,expectedOrderByItem3)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->4 [style = solid, label="indexOrderByItemSegment1"];
16->15 [style = bold, label=""];
10->18 [style = bold, label=""];
3->5 [style = solid, label="indexOrderByItemSegment1"];
22->19 [style = solid, label="groupBySegment"];
8->16 [style = dashed, label="0"];
21->20 [style = dotted, label="true"];
8->15 [style = bold, label=""];
11->20 [style = dashed, label="0"];
4->7 [style = solid, label="orderBySegment"];
22->19 [style = bold, label=""];
17->9 [style = bold, label=""];
1->13 [style = solid, label="expectedOrderByItem3"];
0->13 [style = solid, label="expectedOrderByItem2"];
13->10 [style = dashed, label="0"];
4->22 [style = dashed, label="0"];
2->9 [style = bold, label=""];
3->12 [style = bold, label=""];
7->8 [style = bold, label=""];
11->15 [style = solid, label="selectStatement"];
5->10 [style = solid, label="expectedOrderByItem2"];
4->7 [style = bold, label=""];
15->5 [style = bold, label=""];
3->22 [style = solid, label="indexOrderByItemSegment1"];
14->1 [style = bold, label=""];
24->5 [style = bold, label=""];
6->18 [style = dashed, label="0"];
2->11 [style = dotted, label="true"];
12->4 [style = solid, label="indexOrderByItemSegment2"];
0->14 [style = bold, label=""];
9->24 [style = solid, label="columnOrderByItemSegment"];
23->24 [style = bold, label=""];
21->9 [style = bold, label=""];
12->4 [style = bold, label=""];
5->0 [style = bold, label=""];
5->13 [style = solid, label="expectedOrderByItem1"];
10->13 [style = bold, label=""];
7->19 [style = dashed, label="0"];
19->23 [style = bold, label=""];
16->15 [style = solid, label="emptyGroupByContext"];
9->4 [style = solid, label="columnOrderByItemSegment"];
7->16 [style = bold, label=""];
24->10 [style = solid, label="expectedOrderByItem1"];
9->5 [style = solid, label="columnOrderByItemSegment"];
9->3 [style = bold, label=""];
12->22 [style = solid, label="indexOrderByItemSegment2"];
12->14 [style = solid, label="indexOrderByItemSegment2"];
3->0 [style = solid, label="indexOrderByItemSegment1"];
12->1 [style = solid, label="indexOrderByItemSegment2"];
8->15 [style = solid, label="emptyGroupByContext"];
14->10 [style = solid, label="expectedOrderByItem3"];
1->10 [style = bold, label=""];
13->6 [style = bold, label=""];
12->22 [style = bold, label=""];
9->22 [style = solid, label="columnOrderByItemSegment"];
20->23 [style = solid, label="selectStatement"];
8->23 [style = dashed, label="0"];
17->11 [style = dotted, label="true"];
}
