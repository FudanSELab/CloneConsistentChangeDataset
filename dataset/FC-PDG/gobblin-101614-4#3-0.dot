digraph {
15 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf,fs.open(new Path(fullPath)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(actual.trim(),expectedText)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder().file(CopyableFileUtils.getTestCopyableFile(filePath)).inputStream(fs.open(new Path(fullPath))).build()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final String newFileName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String filePath@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testGz['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "OwnerAndPermission ownerAndPermission = new OwnerAndPermission(status.getOwner(),status.getGroup(),new FsPermission(FsAction.ALL,FsAction.ALL,FsAction.ALL))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String filePath@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "CopyableFile cf = CopyableFileUtils.getTestCopyableFile(filePath,new Path(testTempPath,newFileName).toString(),newFileName,ownerAndPermission)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "UnGzipConverter converter = new UnGzipConverter()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return Iterables.getFirst(iterable,null)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(filePath),fs.open(new Path(fullPath)))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "FileStatus status = fs.getFileStatus(testTempPath)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Iterable<FileAwareInputStream> iterable = converter.convertRecord(\"outputSchema\",fileAwareInputStream,new WorkUnitState())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testGz['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String expectedText@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "String fullPath = getClass().getClassLoader().getResource(filePath).getFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "getCompressedInputStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String actual = readGzipStreamAsString(Iterables.getFirst(iterable,null).getInputStream())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String filePath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Iterable<FileAwareInputStream> iterable = converter.convertRecord(\"outputSchema\",fileAwareInputStream,new WorkUnitState())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->21 [style = solid, label="fileAwareInputStream"];
16->3 [style = bold, label=""];
10->6 [style = dotted, label="true"];
10->12 [style = dotted, label="true"];
5->9 [style = bold, label=""];
21->19 [style = bold, label=""];
16->13 [style = dotted, label="true"];
21->19 [style = solid, label="iterable"];
15->21 [style = bold, label=""];
8->18 [style = bold, label=""];
14->15 [style = solid, label="cf"];
2->3 [style = bold, label=""];
16->17 [style = dotted, label="true"];
8->15 [style = solid, label="fullPath"];
1->5 [style = solid, label="filePath"];
10->3 [style = bold, label=""];
7->0 [style = bold, label=""];
20->14 [style = bold, label=""];
6->17 [style = dashed, label="0"];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
20->14 [style = solid, label="ownerAndPermission"];
6->0 [style = solid, label="expectedText"];
3->4 [style = bold, label=""];
5->9 [style = solid, label="fileAwareInputStream"];
18->20 [style = bold, label=""];
8->5 [style = bold, label=""];
5->11 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
11->9 [style = solid, label="fileAwareInputStream"];
2->1 [style = dotted, label="true"];
2->6 [style = dotted, label="true"];
4->8 [style = bold, label=""];
12->0 [style = solid, label="expectedText"];
14->15 [style = bold, label=""];
17->14 [style = solid, label="newFileName"];
8->11 [style = bold, label=""];
8->5 [style = solid, label="fullPath"];
13->14 [style = solid, label="filePath"];
}
