digraph {
23 [style = filled, label = "future.get(10,TimeUnit.MILLISECONDS)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(future.isDone())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final InterruptedException e@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final ExecutionException ee@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "future.setException(new NullPointerException())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(future.isDone())@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fail(\"This future was not interrupted\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testImmediateExceptionForTimedGet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testImmediateExceptionForTimedGet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "TimeoutException e@@@19@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertFalse(future.isCancelled())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "fail(\"This future had an execution exception\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fail(\"This future has timed out\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(future.isCancelled())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fail(\"This future was not interrupted\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final TimeoutException e@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "InterruptedException e@@@13@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertTrue(future.isDone())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(future.isCancelled())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ExecutionException ee@@@16@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "future.get(1,TimeUnit.DAYS)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(ee.getCause() instanceof NullPointerException)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
15->2 [style = bold, label=""];
16->0 [style = bold, label=""];
20->17 [style = bold, label=""];
5->23 [style = bold, label=""];
16->19 [style = dashed, label="0"];
9->2 [style = bold, label=""];
1->15 [style = bold, label=""];
0->2 [style = bold, label=""];
4->13 [style = bold, label=""];
15->24 [style = dashed, label="0"];
3->11 [style = bold, label=""];
11->17 [style = dashed, label="0"];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
4->21 [style = dashed, label="0"];
19->0 [style = bold, label=""];
6->18 [style = dashed, label="0"];
7->14 [style = bold, label=""];
4->13 [style = dotted, label="true"];
23->24 [style = bold, label=""];
16->0 [style = dotted, label="true"];
8->5 [style = bold, label=""];
6->9 [style = dotted, label="true"];
19->0 [style = dotted, label="true"];
14->12 [style = bold, label=""];
18->9 [style = dotted, label="true"];
18->9 [style = bold, label=""];
11->8 [style = bold, label=""];
5->7 [style = bold, label=""];
21->13 [style = dotted, label="true"];
6->9 [style = bold, label=""];
1->23 [style = dashed, label="0"];
22->11 [style = bold, label=""];
21->13 [style = bold, label=""];
13->2 [style = bold, label=""];
}
