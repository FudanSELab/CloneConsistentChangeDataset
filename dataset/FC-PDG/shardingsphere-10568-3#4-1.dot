digraph {
11 [style = filled, label = "Collection<String> actual = shardingAlgorithm.doSharding(availableTargetNames,new RangeShardingValue<>(\"t_order\",\"order_id\",Range.closed(2L,15L)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(actual.size(),is(2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<String> availableTargetNames = Arrays.asList(\"t_order_0\",\"t_order_1\",\"t_order_2\",\"t_order_3\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<String> availableTargetNames = Lists.newArrayList(\"t_order_0\",\"t_order_1\",\"t_order_2\",\"t_order_3\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertRangeDoShardingWithPartTargets['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(actual.size(),is(3))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Collection<String> actual = shardingAlgorithm.doSharding(availableTargetNames,new RangeShardingValue<>(\"t_order\",\"order_id\",Range.closed(11L,12L)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(actual.contains(\"t_order_3\"))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertRangeDoShardingWithPartTargets['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertRangeDoSharding['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(actual.contains(\"t_order_1\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(actual.contains(\"t_order_0\"))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(actual.contains(\"t_order_2\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(actual.contains(\"t_order_3\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->0 [style = solid, label="availableTargetNames"];
2->10 [style = dashed, label="0"];
1->4 [style = bold, label=""];
3->5 [style = bold, label=""];
7->0 [style = bold, label=""];
0->11 [style = dashed, label="0"];
8->4 [style = bold, label=""];
4->11 [style = solid, label="availableTargetNames"];
6->7 [style = bold, label=""];
7->0 [style = solid, label="availableTargetNames"];
4->11 [style = bold, label=""];
12->9 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
4->7 [style = dashed, label="0"];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
9->13 [style = bold, label=""];
}
