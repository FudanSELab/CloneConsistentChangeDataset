digraph {
11 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testCursorClosedOnSessionClose['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "usersCursor.close()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Cursor<User> usersCursor = mapper.getAllUsers()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "testCursorMultipleCloseCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assertions.assertEquals(\"User1\",user.getName())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "testCursorClosedOnSessionClose['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "User user = iterator.next()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "usersCursor.close()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(\"User1\",user.getName())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->13 [style = bold, label=""];
28->29 [style = bold, label=""];
22->25 [style = bold, label=""];
23->16 [style = bold, label=""];
2->19 [style = bold, label=""];
7->31 [style = dashed, label="0"];
4->17 [style = dashed, label="0"];
20->9 [style = bold, label=""];
11->1 [style = bold, label=""];
14->3 [style = dashed, label="0"];
10->19 [style = dashed, label="0"];
5->23 [style = dashed, label="0"];
31->32 [style = bold, label=""];
3->14 [style = bold, label=""];
27->3 [style = bold, label=""];
30->27 [style = bold, label=""];
16->26 [style = bold, label=""];
1->18 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->33 [style = bold, label=""];
33->12 [style = bold, label=""];
2->10 [style = bold, label=""];
24->18 [style = bold, label=""];
25->17 [style = bold, label=""];
12->21 [style = dashed, label="0"];
26->22 [style = bold, label=""];
21->2 [style = bold, label=""];
19->24 [style = bold, label=""];
13->32 [style = dashed, label="0"];
12->2 [style = bold, label=""];
6->16 [style = dashed, label="0"];
0->23 [style = bold, label=""];
5->6 [style = bold, label=""];
5->31 [style = bold, label=""];
15->9 [style = bold, label=""];
14->12 [style = bold, label=""];
11->24 [style = dashed, label="0"];
9->3 [style = bold, label=""];
8->25 [style = dashed, label="0"];
8->4 [style = bold, label=""];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
7->26 [style = dashed, label="0"];
32->28 [style = bold, label=""];
13->22 [style = dashed, label="0"];
18->0 [style = bold, label=""];
14->21 [style = bold, label=""];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
