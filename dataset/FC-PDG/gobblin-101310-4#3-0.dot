digraph {
4 [style = filled, label = "Assert.assertEquals(dummyWriters.size(),1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "writer.writeEnvelope(new RecordEnvelope(record))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testCloseOnFlushEnabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).flushCount,1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(dummyWriters.get(0).closed)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).recordsWritten(),1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testWriteAfterFlush['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "state.getJobState().setProp(ConfigurationKeys.WRITER_CLOSE_ON_FLUSH_KEY,\"true\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "writer.flush()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).committed,true)@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(dummyWriters.get(0).handlerCalled)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "writer.writeEnvelope(new RecordEnvelope(record))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "writer.getMessageHandler().handleMessage(new FlushControlMessage(new FlushControlMessage.FlushReason(\"flush\")))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertFalse(dummyWriters.get(1).handlerCalled)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "writer.getMessageHandler().handleMessage(new FlushControlMessage(new FlushControlMessage.FlushReason(\"flush\")))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "List<DummyWriter> dummyWriters = new ArrayList<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(dummyWriters.get(1).committed)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).recordsWritten(),1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testWriteAfterFlush['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "WorkUnitState state = new WorkUnitState()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).committed,true)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(dummyWriters.get(0).committed)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).flushCount,1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(dummyWriters.size(),2)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CloseOnFlushWriterWrapper<byte((> writer = getCloseOnFlushWriter(dummyWriters,state)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(dummyWriters.get(1).closed)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).closed,true)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "writer.writeEnvelope(new RecordEnvelope(record))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(dummyWriters.size(),2)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "byte(( record = new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a12632@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->18 [style = bold, label=""];
4->17 [style = bold, label=""];
15->28 [style = dashed, label="0"];
23->27 [style = bold, label=""];
5->26 [style = dashed, label="0"];
8->19 [style = bold, label=""];
1->27 [style = dashed, label="0"];
17->9 [style = bold, label=""];
2->3 [style = bold, label=""];
12->11 [style = bold, label=""];
14->22 [style = bold, label=""];
14->22 [style = dashed, label="0"];
28->26 [style = bold, label=""];
20->14 [style = bold, label=""];
10->17 [style = bold, label=""];
16->23 [style = dashed, label="0"];
18->2 [style = bold, label=""];
19->3 [style = solid, label="state"];
2->3 [style = solid, label="dummyWriters"];
9->16 [style = bold, label=""];
15->5 [style = bold, label=""];
26->21 [style = bold, label=""];
6->14 [style = bold, label=""];
9->23 [style = bold, label=""];
0->10 [style = bold, label=""];
24->4 [style = bold, label=""];
1->6 [style = bold, label=""];
29->19 [style = bold, label=""];
16->1 [style = bold, label=""];
15->28 [style = bold, label=""];
0->24 [style = bold, label=""];
14->12 [style = bold, label=""];
25->19 [style = bold, label=""];
13->6 [style = solid, label="record"];
13->14 [style = solid, label="record"];
10->4 [style = bold, label=""];
3->13 [style = bold, label=""];
7->15 [style = bold, label=""];
13->0 [style = solid, label="record"];
27->20 [style = bold, label=""];
10->24 [style = dashed, label="0"];
22->11 [style = bold, label=""];
11->7 [style = bold, label=""];
13->0 [style = bold, label=""];
}
