digraph {
32 [style = filled, label = "this.props.setProperty(ConfigurationKeys.JOB_TRACKING_URL_KEY,Strings.nullToEmpty(conf.get(AZKABAN_LINK_JOBEXEC_URL)))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "URI templateUri = new URI(jobProps.getProperty(TEMPLATE_KEY))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "props.containsKey(JOB_TYPE) && JOB_TYPES_WITH_AUTOMATIC_TOKEN.contains(props.getProperty(JOB_TYPE))@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.props.put(entry.getKey(),entry.getValue().unwrapped().toString())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TokenUtils.getHadoopTokens(new State(props),Optional.of(tokenFile),new Credentials())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String jobId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "jobProps.containsKey(TEMPLATE_KEY)@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,tokenFile.getAbsolutePath())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AzkabanJobLauncher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "this.props.setProperty(ConfigurationKeys.FS_URI_KEY,fsUri)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!jobProps.containsKey(ConfigurationKeys.JOB_LAUNCHER_TYPE_KEY)@@@54@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Level logLevel = Level.toLevel(props.getProperty(GOBBLIN_LOG_LEVEL_KEY),Level.INFO)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "this.props.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,tokenFile.getAbsolutePath())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "this.jobListener = initJobListener()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "AzkabanGobblinDaemon['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "AzkabanJobLauncher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Config dynamicConfig = dynamicConfigGenerator.generateDynamicConfig(propsAsConfig)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "!this.props.containsKey(ConfigurationKeys.STATE_STORE_FS_URI_KEY)@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "this.jobLauncher = this.closer.register(JobLauncherFactory.newJobLauncher(jobProps,jobProps))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!this.props.containsKey(ConfigurationKeys.FS_URI_KEY)@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "LOG.info(String.format(\"Job type %s does not provide Hadoop tokens. Negotiating Hadoop tokens.\",props.getProperty(JOB_TYPE)))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "this.props.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,System.getenv(HADOOP_TOKEN_FILE_LOCATION))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Properties props@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Config resolvedJob = new PackagedTemplatesJobCatalogDecorator().getTemplate(templateUri).getResolvedConfig(ConfigUtils.propertiesToConfig(jobProps))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "!Strings.isNullOrEmpty(fsUri)@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "super(jobId,LOG)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "jobProps.setProperty(ConfigurationKeys.JOB_LAUNCHER_TYPE_KEY,JobLauncherFactory.JobLauncherType.MAPREDUCE.toString())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "File tokenFile = File.createTempFile(\"mr-azkaban\",\".token\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Properties props@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "String fsUri = conf.get(HADOOP_FS_DEFAULT_NAME)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "HadoopUtils.addGobblinSite()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DynamicConfigGenerator dynamicConfigGenerator = DynamicConfigGeneratorFactory.createDynamicConfigGenerator(propsAsConfig)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "LOG.info(\"Job type \" + props.getProperty(JOB_TYPE) + \" provides Hadoop tokens automatically. Using provided tokens.\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "this.props = new Properties()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "props.containsKey(GOBBLIN_LOG_LEVEL_KEY)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "this.ownAzkabanSla = Long.parseLong(jobProps.getProperty(AZKABAN_GOBBLIN_JOB_SLA_IN_SECONDS,DEFAULT_AZKABAN_GOBBLIN_JOB_SLA_IN_SECONDS))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "System.setProperty(HADOOP_TOKEN_FILE_LOCATION,tokenFile.getAbsolutePath())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Config propsAsConfig = ConfigUtils.propertiesToConfig(props)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.props.setProperty(\"env.\" + HADOOP_TOKEN_FILE_LOCATION,tokenFile.getAbsolutePath())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String jobId@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "this.daemon = new SchedulerDaemon(props)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Logger.getLogger(\"org.apache.gobblin\").setLevel(logLevel)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tags.addAll(Tag.fromMap(AzkabanTags.getAzkabanTags()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<Tag<?>> tags = Lists.newArrayList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Properties jobProps = this.props@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Configuration conf = new Configuration()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "this.props.putAll(props)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "this.applicationLauncher = this.closer.register(new ServiceBasedAppLauncher(jobProps,\"Azkaban-\" + UUID.randomUUID()))@@@59@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "GobblinMetrics.addCustomTagsToProperties(jobProps,tags)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RootMetricContext.get(tags)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "this.props.setProperty(ConfigurationKeys.STATE_STORE_FS_URI_KEY,fsUri)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Properties props@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "jobProps = ConfigUtils.configToProperties(resolvedJob)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->30 [style = dotted, label="true"];
52->33 [style = bold, label=""];
43->33 [style = solid, label="jobId"];
46->7 [style = solid, label="tokenFile"];
47->48 [style = dotted, label="true"];
17->21 [style = bold, label=""];
47->33 [style = bold, label=""];
42->19 [style = solid, label="props"];
28->26 [style = bold, label=""];
33->34 [style = bold, label=""];
1->23 [style = bold, label=""];
7->11 [style = bold, label=""];
20->1 [style = bold, label=""];
19->27 [style = bold, label=""];
25->16 [style = bold, label=""];
3->35 [style = bold, label=""];
39->31 [style = solid, label="jobProps"];
13->10 [style = bold, label=""];
21->37 [style = bold, label=""];
43->53 [style = dashed, label="0"];
20->23 [style = solid, label="tags"];
42->15 [style = solid, label="props"];
5->41 [style = bold, label=""];
9->39 [style = bold, label=""];
15->49 [style = bold, label=""];
35->17 [style = bold, label=""];
36->4 [style = bold, label=""];
28->26 [style = dotted, label="true"];
41->39 [style = dotted, label="true"];
38->18 [style = bold, label=""];
19->27 [style = solid, label="propsAsConfig"];
35->29 [style = solid, label="fsUri"];
15->19 [style = bold, label=""];
13->10 [style = dotted, label="true"];
33->20 [style = bold, label=""];
37->32 [style = bold, label=""];
8->3 [style = bold, label=""];
25->28 [style = dotted, label="true"];
25->7 [style = dotted, label="false"];
5->31 [style = solid, label="jobProps"];
12->9 [style = bold, label=""];
17->32 [style = bold, label=""];
0->36 [style = bold, label=""];
6->43 [style = dotted, label="true"];
45->18 [style = dotted, label="true"];
50->51 [style = solid, label="props"];
46->7 [style = bold, label=""];
30->28 [style = bold, label=""];
25->0 [style = dotted, label="false"];
21->29 [style = dotted, label="true"];
5->44 [style = solid, label="jobProps"];
17->21 [style = dotted, label="true"];
10->14 [style = bold, label=""];
25->46 [style = dotted, label="false"];
20->31 [style = solid, label="tags"];
45->38 [style = bold, label=""];
39->40 [style = solid, label="jobProps"];
11->0 [style = bold, label=""];
34->45 [style = bold, label=""];
25->16 [style = dotted, label="false"];
5->9 [style = solid, label="jobProps"];
16->46 [style = bold, label=""];
22->32 [style = bold, label=""];
23->31 [style = bold, label=""];
49->19 [style = bold, label=""];
42->7 [style = solid, label="props"];
32->25 [style = bold, label=""];
39->44 [style = solid, label="jobProps"];
53->33 [style = solid, label="jobId"];
28->5 [style = bold, label=""];
52->53 [style = dotted, label="true"];
37->22 [style = bold, label=""];
31->13 [style = bold, label=""];
24->8 [style = bold, label=""];
23->51 [style = bold, label=""];
9->39 [style = solid, label="resolvedJob"];
25->36 [style = dotted, label="false"];
41->9 [style = dotted, label="true"];
42->5 [style = solid, label="props"];
17->37 [style = dotted, label="true"];
38->18 [style = solid, label="logLevel"];
18->42 [style = bold, label=""];
25->11 [style = dotted, label="false"];
39->20 [style = bold, label=""];
52->50 [style = dotted, label="true"];
29->37 [style = bold, label=""];
4->5 [style = bold, label=""];
47->43 [style = dotted, label="true"];
35->22 [style = solid, label="fsUri"];
41->12 [style = bold, label=""];
6->33 [style = bold, label=""];
21->29 [style = bold, label=""];
40->44 [style = bold, label=""];
25->4 [style = dotted, label="false"];
5->40 [style = solid, label="jobProps"];
27->24 [style = bold, label=""];
45->38 [style = dotted, label="true"];
26->5 [style = bold, label=""];
45->42 [style = bold, label=""];
37->22 [style = dotted, label="true"];
19->24 [style = solid, label="propsAsConfig"];
41->12 [style = dotted, label="true"];
42->15 [style = bold, label=""];
14->40 [style = bold, label=""];
6->2 [style = dotted, label="true"];
13->14 [style = bold, label=""];
25->30 [style = bold, label=""];
41->20 [style = bold, label=""];
}
