digraph {
6 [style = filled, label = "MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "h2Client.connect()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "throw new ModuleStartException(\"Size of searchableLogsTags(\" + numOfSearchableLogsTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final int numOfSearchableLogsTags = configService.getSearchableLogsTags().split(Const.COMMA).length@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "getManager().find(CoreModule.NAME).provider().getService().addModelListener(installer)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "throw new ModuleStartException(\"Size of searchableTracesTags(\" + numOfSearchableTracesTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "start['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "getManager().find(CoreModule.NAME).provider().getService().addModelListener(installer)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "start['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "start['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "elasticSearchClient.registerChecker(healthChecker)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_h2\",MetricsTag.EMPTY_KEY,MetricsTag.EMPTY_VALUE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "H2TableInstaller installer = new H2TableInstaller(h2Client,getManager(),config.getMaxSizeOfArrayColumn(),config.getNumOfSearchableValuesPerTag())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "numOfSearchableTracesTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "elasticSearchClient.connect()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient,getManager(),config)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ConfigService configService = getManager().find(CoreModule.NAME).provider().getService()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_elasticsearch\",MetricsTag.EMPTY_KEY,MetricsTag.EMPTY_VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "h2Client.registerChecker(healthChecker)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int numOfSearchableTracesTags = configService.getSearchableTracesTags().split(Const.COMMA).length@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "numOfSearchableLogsTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3->17 [style = dashed, label="0"];
14->18 [style = bold, label=""];
7->6 [style = bold, label=""];
8->17 [style = solid, label="healthChecker"];
17->12 [style = bold, label=""];
1->8 [style = dashed, label="0"];
10->11 [style = bold, label=""];
20->9 [style = solid, label="installer"];
8->17 [style = bold, label=""];
3->5 [style = bold, label=""];
16->10 [style = bold, label=""];
5->4 [style = bold, label=""];
19->16 [style = bold, label=""];
1->3 [style = bold, label=""];
1->3 [style = solid, label="healthChecker"];
15->11 [style = bold, label=""];
18->19 [style = bold, label=""];
11->8 [style = bold, label=""];
14->19 [style = solid, label="numOfSearchableTracesTags"];
18->16 [style = bold, label=""];
12->20 [style = bold, label=""];
18->19 [style = dotted, label="true"];
5->12 [style = dashed, label="0"];
16->10 [style = solid, label="numOfSearchableLogsTags"];
2->6 [style = bold, label=""];
14->18 [style = solid, label="numOfSearchableTracesTags"];
10->15 [style = bold, label=""];
4->20 [style = dashed, label="0"];
20->9 [style = bold, label=""];
4->0 [style = solid, label="installer"];
10->15 [style = dotted, label="true"];
13->14 [style = bold, label=""];
6->1 [style = bold, label=""];
16->15 [style = solid, label="numOfSearchableLogsTags"];
4->0 [style = bold, label=""];
21->13 [style = bold, label=""];
}
