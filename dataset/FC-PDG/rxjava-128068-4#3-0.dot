digraph {
0 [style = filled, label = "t = new Thread(new Runnable(){@Override public void run(){try {System.out.println(\"running TestMultiThreadedObservable thread\")int j = 0for (final String s : values){final int fj = ++jthreadPool.execute(new Runnable(){@Override public void run(){threadsRunning.incrementAndGet()try {System.out.println(\"TestMultiThreadedObservable onNext: \" + s + \" on thread \" + Thread.currentThread().getName())if (s == null) {throw npe}{int sleep = (fj % 3) * 10if (sleep != 0) {Thread.sleep(sleep)}}subscriber.onNext(s)int concurrentThreads = threadsRunning.get()int maxThreads = maxConcurrentThreads.get()if (concurrentThreads > maxThreads) {maxConcurrentThreads.compareAndSet(maxThreads,concurrentThreads)}}catch (Throwable e) {threadsRunning.decrementAndGet()}}})}threadPool.shutdown()}catch (Throwable e) try {if (!threadPool.awaitTermination(5,TimeUnit.SECONDS)) {System.out.println(\"Threadpool did not terminate in time.\")}}catch (InterruptedException e) subscriber.onComplete()}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "subscribe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "System.out.println(\"TestMultiThreadedObservable subscribed to ...\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Subscriber<? super String> subscriber@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "subscriber.onSubscribe(new BooleanSubscription())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "subscribe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "System.out.println(\"done starting TestMultiThreadedObservable thread\")@@@63@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Observer<? super String> observer@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "subscribe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "observer.onSubscribe(Disposables.empty())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "System.out.println(\"starting TestMultiThreadedObservable thread\")@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "observer.onSubscribe(Disposable.empty())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "t.start()@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final NullPointerException npe = new NullPointerException()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->11 [style = dashed, label="0"];
12->13 [style = bold, label=""];
7->6 [style = dotted, label="true"];
10->2 [style = bold, label=""];
1->2 [style = bold, label=""];
2->5 [style = bold, label=""];
7->1 [style = bold, label=""];
2->0 [style = solid, label="npe"];
1->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
5->0 [style = bold, label=""];
13->2 [style = bold, label=""];
9->6 [style = dotted, label="true"];
3->4 [style = bold, label=""];
0->8 [style = bold, label=""];
8->3 [style = bold, label=""];
12->11 [style = dotted, label="true"];
1->13 [style = dashed, label="0"];
}
