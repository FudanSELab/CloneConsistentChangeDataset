digraph {
27 [style = filled, label = "assertEquals(HTTPSRecord.IPV6HINT,ipv6hint.getKey())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "SVCBRecord.ParameterIpv4Hint ipv4hint = new SVCBRecord.ParameterIpv4Hint(ipv4List)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(8443,port.getPort())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(33,unknown.getKey())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HTTPSRecord.ParameterMandatory mandatory = new HTTPSRecord.ParameterMandatory(mandatoryList)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(HTTPSRecord.MANDATORY,mandatory.getKey())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HTTPSRecord.ParameterIpv6Hint ipv6hint = new HTTPSRecord.ParameterIpv6Hint(ipv6List)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HTTPSRecord.ParameterPort port = new HTTPSRecord.ParameterPort(8443)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(SVCBRecord.MANDATORY,mandatory.getKey())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "createParams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "HTTPSRecord.ParameterEchConfig echconfig = new HTTPSRecord.ParameterEchConfig(data)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "byte(( value = {0,1,2,3}@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(SVCBRecord.ALPN,alpn.getKey())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "SVCBRecord.ParameterPort port = new SVCBBase.ParameterPort(8443)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<Inet6Address> ipv6List = Collections.singletonList((Inet6Address)InetAddress.getByName(\"2001:db8::1\"))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HTTPSRecord.ParameterUnknown unknown = new HTTPSRecord.ParameterUnknown(33,value)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(SVCBRecord.IPV4HINT,ipv4hint.getKey())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "createParams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "SVCBRecord.ParameterIpv6Hint ipv6hint = new SVCBRecord.ParameterIpv6Hint(ipv6List)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(HTTPSRecord.PORT,port.getKey())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(HTTPSRecord.ECHCONFIG,echconfig.getKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(alpnList,alpn.getValues())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "SVCBRecord.ParameterAlpn alpn = new SVCBRecord.ParameterAlpn(alpnList)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(SVCBRecord.PORT,port.getKey())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "SVCBRecord.ParameterMandatory mandatory = new SVCBBase.ParameterMandatory(mandatoryList)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(data,echconfig.getData())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(ipv4List,ipv4hint.getAddresses())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(HTTPSRecord.ALPN,alpn.getKey())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "SVCBRecord.ParameterUnknown unknown = new SVCBRecord.ParameterUnknown(33,value)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<Inet4Address> ipv4List = Collections.singletonList((Inet4Address)InetAddress.getByName(\"1.2.3.4\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(SVCBRecord.ECHCONFIG,echconfig.getKey())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(HTTPSRecord.IPV4HINT,ipv4hint.getKey())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "HTTPSRecord.ParameterAlpn alpn = new HTTPSRecord.ParameterAlpn(alpnList)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SVCBBase.ParameterEch ech = new SVCBBase.ParameterEch(data)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(SVCBRecord.IPV6HINT,ipv6hint.getKey())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "byte(( data = {'a','b','c'}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HTTPSRecord.ParameterIpv4Hint ipv4hint = new HTTPSRecord.ParameterIpv4Hint(ipv4List)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(ipv6List,ipv6hint.getAddresses())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<String> alpnList = Arrays.asList(\"h2\",\"h3\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "SVCBRecord.ParameterEchConfig echconfig = new SVCBRecord.ParameterEchConfig(data)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "createParams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(HTTPSRecord.ECH,ech.getKey())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(data,ech.getData())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "List<Integer> mandatoryList = Arrays.asList(SVCBRecord.ALPN,SVCBRecord.IPV4HINT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(value,unknown.getValue())@@@33@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(mandatoryList,mandatory.getValues())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Integer> mandatoryList = Arrays.asList(HTTPSRecord.ALPN,HTTPSRecord.IPV4HINT)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->42 [style = dashed, label="0"];
7->23 [style = solid, label="mandatoryList"];
0->13 [style = bold, label=""];
37->15 [style = bold, label=""];
18->46 [style = dashed, label="0"];
11->46 [style = bold, label=""];
12->0 [style = solid, label="alpnList"];
9->16 [style = bold, label=""];
26->12 [style = bold, label=""];
3->19 [style = bold, label=""];
19->9 [style = bold, label=""];
23->39 [style = dashed, label="0"];
42->3 [style = bold, label=""];
40->26 [style = bold, label=""];
43->39 [style = solid, label="mandatoryList"];
35->38 [style = bold, label=""];
19->45 [style = solid, label="ipv4List"];
16->37 [style = dashed, label="0"];
7->43 [style = dashed, label="0"];
31->29 [style = bold, label=""];
11->17 [style = solid, label="value"];
34->42 [style = bold, label=""];
12->35 [style = bold, label=""];
23->8 [style = bold, label=""];
9->45 [style = dashed, label="0"];
25->7 [style = bold, label=""];
27->22 [style = bold, label=""];
6->22 [style = solid, label="ipv6List"];
11->18 [style = bold, label=""];
1->17 [style = bold, label=""];
24->20 [style = bold, label=""];
24->32 [style = dashed, label="0"];
5->6 [style = bold, label=""];
18->1 [style = bold, label=""];
30->7 [style = bold, label=""];
7->23 [style = bold, label=""];
28->24 [style = bold, label=""];
32->36 [style = bold, label=""];
0->35 [style = dashed, label="0"];
41->43 [style = bold, label=""];
22->11 [style = bold, label=""];
6->10 [style = solid, label="ipv6List"];
8->40 [style = dashed, label="0"];
4->24 [style = bold, label=""];
2->3 [style = bold, label=""];
21->34 [style = bold, label=""];
4->5 [style = solid, label="data"];
44->33 [style = bold, label=""];
19->15 [style = solid, label="ipv4List"];
13->38 [style = dashed, label="0"];
19->9 [style = solid, label="ipv4List"];
6->44 [style = solid, label="ipv6List"];
6->44 [style = bold, label=""];
4->31 [style = bold, label=""];
19->45 [style = bold, label=""];
43->26 [style = solid, label="mandatoryList"];
4->32 [style = solid, label="data"];
39->40 [style = bold, label=""];
6->10 [style = bold, label=""];
11->18 [style = solid, label="value"];
12->35 [style = solid, label="alpnList"];
14->2 [style = bold, label=""];
36->5 [style = bold, label=""];
12->21 [style = solid, label="alpnList"];
43->39 [style = bold, label=""];
27->33 [style = dashed, label="0"];
33->22 [style = bold, label=""];
4->31 [style = solid, label="data"];
21->14 [style = bold, label=""];
4->24 [style = solid, label="data"];
16->15 [style = bold, label=""];
14->34 [style = dashed, label="0"];
10->27 [style = bold, label=""];
10->44 [style = dashed, label="0"];
12->0 [style = bold, label=""];
20->5 [style = bold, label=""];
29->28 [style = bold, label=""];
4->28 [style = solid, label="data"];
7->26 [style = solid, label="mandatoryList"];
11->46 [style = solid, label="value"];
20->36 [style = dashed, label="0"];
46->1 [style = bold, label=""];
15->4 [style = bold, label=""];
38->21 [style = bold, label=""];
45->37 [style = bold, label=""];
13->21 [style = bold, label=""];
4->32 [style = bold, label=""];
8->26 [style = bold, label=""];
}
