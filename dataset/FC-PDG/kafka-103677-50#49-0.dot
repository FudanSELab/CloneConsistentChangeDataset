digraph {
26 [style = filled, label = "selector.clear()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FetchResponse response = fetchResponse(tp1,nextRecords,Errors.NONE,i,throttleTimeMs)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,metricsRegistry)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.close()@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int throttleTimeMs = 100 * i@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "client.poll(1,time.milliseconds())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ProduceRequest.Builder builder = new ProduceRequest.Builder(RecordBatch.CURRENT_MAGIC_VALUE,(short)1,1000,Collections.emptyMap())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "buffer = response.serialize(ApiKeys.FETCH.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(250,avgMetric.value(),EPSILON)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int i = 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(400,maxMetric.value(),EPSILON)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeAvg))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(400,maxMetric.value(),EPS)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Sensor throttleTimeSensor = Sender.throttleTimeSensor(metrics)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(250,avgMetric.value(),EPS)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "buffer = response.serialize(ApiKeys.PRODUCE.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "client.poll(1,time.milliseconds())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<TopicPartition,PartitionData>())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeMax))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i <= 3@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "ProduceResponse response = produceResponse(tp0,i,Errors.NONE,throttleTimeMs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client.send(request,time.milliseconds())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "FetchResponse response = fetchResponse(tp0,nextRecords,Errors.NONE,i,throttleTimeMs)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "selector.clear()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->22 [style = bold, label=""];
21->42 [style = bold, label=""];
23->10 [style = solid, label="request"];
3->40 [style = dashed, label="0"];
5->9 [style = bold, label=""];
5->9 [style = solid, label="buffer"];
6->28 [style = solid, label="throttleTimeSensor"];
35->41 [style = bold, label=""];
7->33 [style = dotted, label="true"];
4->15 [style = bold, label=""];
24->3 [style = solid, label="i"];
31->21 [style = bold, label=""];
29->7 [style = solid, label="i"];
3->16 [style = bold, label=""];
40->38 [style = bold, label=""];
7->8 [style = bold, label=""];
7->39 [style = dotted, label="true"];
28->14 [style = bold, label=""];
21->26 [style = bold, label=""];
21->31 [style = bold, label=""];
6->36 [style = dashed, label="0"];
39->23 [style = bold, label=""];
36->18 [style = bold, label=""];
9->21 [style = bold, label=""];
7->27 [style = dotted, label="true"];
7->16 [style = dotted, label="true"];
30->40 [style = bold, label=""];
43->0 [style = bold, label=""];
22->28 [style = solid, label="selector"];
16->11 [style = solid, label="buffer"];
14->5 [style = solid, label="apiVersionsResponseVersion"];
8->33 [style = solid, label="throttleTimeMs"];
42->21 [style = bold, label=""];
8->39 [style = bold, label=""];
8->27 [style = bold, label=""];
11->25 [style = bold, label=""];
29->40 [style = solid, label="i"];
33->16 [style = bold, label=""];
21->20 [style = dotted, label="true"];
7->10 [style = dotted, label="true"];
38->11 [style = solid, label="buffer"];
17->43 [style = dashed, label="0"];
3->33 [style = dashed, label="0"];
38->11 [style = bold, label=""];
7->40 [style = dotted, label="true"];
29->8 [style = solid, label="i"];
24->8 [style = solid, label="i"];
26->24 [style = bold, label=""];
1->17 [style = bold, label=""];
7->12 [style = dotted, label="true"];
7->29 [style = dotted, label="true"];
12->29 [style = bold, label=""];
7->23 [style = dotted, label="true"];
27->23 [style = solid, label="builder"];
21->31 [style = dotted, label="true"];
23->10 [style = bold, label=""];
24->29 [style = solid, label="i"];
24->7 [style = bold, label=""];
7->8 [style = dotted, label="true"];
19->22 [style = bold, label=""];
41->43 [style = bold, label=""];
22->6 [style = bold, label=""];
29->33 [style = solid, label="i"];
9->42 [style = bold, label=""];
30->33 [style = bold, label=""];
2->1 [style = bold, label=""];
6->18 [style = bold, label=""];
2->35 [style = dashed, label="0"];
7->4 [style = bold, label=""];
8->40 [style = solid, label="throttleTimeMs"];
24->40 [style = solid, label="i"];
17->0 [style = bold, label=""];
7->11 [style = dotted, label="true"];
30->3 [style = bold, label=""];
24->33 [style = solid, label="i"];
37->35 [style = bold, label=""];
8->3 [style = solid, label="throttleTimeMs"];
10->30 [style = bold, label=""];
14->5 [style = bold, label=""];
42->26 [style = bold, label=""];
15->2 [style = bold, label=""];
16->38 [style = dashed, label="0"];
29->3 [style = solid, label="i"];
16->11 [style = bold, label=""];
24->7 [style = solid, label="i"];
15->37 [style = dashed, label="0"];
36->28 [style = solid, label="throttleTimeSensor"];
1->41 [style = dashed, label="0"];
7->38 [style = dotted, label="true"];
34->22 [style = bold, label=""];
20->21 [style = bold, label=""];
39->23 [style = solid, label="builder"];
21->20 [style = bold, label=""];
4->37 [style = bold, label=""];
25->12 [style = bold, label=""];
7->3 [style = dotted, label="true"];
22->36 [style = bold, label=""];
18->13 [style = bold, label=""];
7->25 [style = dotted, label="true"];
29->7 [style = bold, label=""];
27->23 [style = bold, label=""];
7->30 [style = dotted, label="true"];
42->21 [style = dotted, label="true"];
13->28 [style = bold, label=""];
}
