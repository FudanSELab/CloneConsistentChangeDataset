digraph {
51 [style = filled, label = "selector.start()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "latch.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testErrorPolicies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "latch.addListener(listener)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final BlockingQueue<String> states = Queues.newLinkedBlockingQueue()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"true\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "server.close()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(1000).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardErrorPolicy()).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "latch = new LeaderLatch(client,\"/test\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "latch = new LeaderLatch(client,\"/test\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "LeaderLatchListener listener = new LeaderLatchListener(){@Override public void isLeader(){states.add(\"true\")}@Override public void notLeader(){states.add(\"false\")}}@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "latch.addListener(listener)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(1000).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionErrorPolicy()).build()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "latch.close()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<String> next = Lists.newArrayList()@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "{CloseableUtils.closeQuietly(latch)CloseableUtils.closeQuietly(client)}@@@56@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "changes.clear()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "client.start()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{CloseableUtils.closeQuietly(latch)CloseableUtils.closeQuietly(client)}@@@52@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "server.stop()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ConnectionStateListener stateListener = new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){changes.add(newState.name())}}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client.start()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "server.close()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "timing.sleepABit()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testErrorPolicies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "selector.close()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "client.close()@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "states.clear()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "LeaderSelectorListener listener = new LeaderSelectorListenerAdapter(){@Override public void takeLeadership(CuratorFramework client){changes.add(\"leader\")try {Thread.currentThread().join()}catch (InterruptedException e) }}@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"release\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "{CloseableUtils.closeQuietly(selector)CloseableUtils.closeQuietly(client)}@@@54@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"true\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "next.add(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"release\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionErrorPolicy()).build()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardErrorPolicy()).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LeaderLatch latch = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testErrorPolicies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "latch.start()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "next.add(states.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(states.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "latch.close()@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "next.add(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "LeaderSelector selector = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.LOST.name(),\"false\")) || next.equals(Arrays.asList(\"false\",ConnectionState.LOST.name())),next.toString())@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.SUSPENDED.name(),\"false\")) || next.equals(Arrays.asList(\"false\",ConnectionState.SUSPENDED.name())),next.toString())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "selector.start()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.close()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "server.close()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "server = new TestingServer()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "next = Lists.newArrayList()@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "next.add(states.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "final BlockingQueue<String> changes = Queues.newLinkedBlockingQueue()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->24 [style = solid, label="listener"];
55->68 [style = bold, label=""];
56->52 [style = bold, label=""];
12->45 [style = bold, label=""];
61->55 [style = solid, label="client"];
5->20 [style = bold, label=""];
2->6 [style = bold, label=""];
27->28 [style = bold, label=""];
34->16 [style = solid, label="client"];
30->50 [style = dashed, label="0"];
65->56 [style = bold, label=""];
57->58 [style = bold, label=""];
18->49 [style = dashed, label="0"];
70->51 [style = bold, label=""];
12->43 [style = dashed, label="0"];
44->46 [style = bold, label=""];
32->67 [style = bold, label=""];
52->60 [style = bold, label=""];
9->69 [style = dashed, label="0"];
0->8 [style = solid, label="stateListener"];
16->21 [style = solid, label="latch"];
45->43 [style = bold, label=""];
58->20 [style = bold, label=""];
19->9 [style = solid, label="client"];
8->4 [style = bold, label=""];
20->39 [style = dashed, label="0"];
14->11 [style = bold, label=""];
19->3 [style = bold, label=""];
25->40 [style = bold, label=""];
4->16 [style = bold, label=""];
61->66 [style = solid, label="client"];
41->32 [style = bold, label=""];
31->58 [style = dashed, label="0"];
54->49 [style = bold, label=""];
1->48 [style = dashed, label="0"];
37->26 [style = bold, label=""];
36->44 [style = bold, label=""];
12->21 [style = bold, label=""];
24->55 [style = bold, label=""];
26->1 [style = bold, label=""];
18->12 [style = bold, label=""];
0->29 [style = bold, label=""];
29->23 [style = bold, label=""];
34->8 [style = bold, label=""];
13->67 [style = dashed, label="0"];
55->66 [style = solid, label="selector"];
3->0 [style = bold, label=""];
8->61 [style = bold, label=""];
34->61 [style = dashed, label="0"];
38->37 [style = bold, label=""];
7->2 [style = bold, label=""];
30->10 [style = bold, label=""];
4->14 [style = solid, label="client"];
15->11 [style = solid, label="listener"];
53->64 [style = bold, label=""];
39->42 [style = bold, label=""];
42->38 [style = bold, label=""];
47->1 [style = bold, label=""];
34->21 [style = solid, label="client"];
60->54 [style = bold, label=""];
31->25 [style = bold, label=""];
63->59 [style = bold, label=""];
22->48 [style = bold, label=""];
62->32 [style = bold, label=""];
6->18 [style = bold, label=""];
16->24 [style = bold, label=""];
43->36 [style = bold, label=""];
68->65 [style = bold, label=""];
35->32 [style = bold, label=""];
4->46 [style = solid, label="client"];
28->51 [style = dashed, label="0"];
27->70 [style = dashed, label="0"];
33->26 [style = bold, label=""];
69->55 [style = solid, label="listener"];
13->19 [style = bold, label=""];
30->42 [style = dashed, label="0"];
40->39 [style = bold, label=""];
67->63 [style = bold, label=""];
15->27 [style = solid, label="listener"];
28->17 [style = bold, label=""];
25->5 [style = bold, label=""];
10->33 [style = bold, label=""];
51->57 [style = bold, label=""];
6->54 [style = dashed, label="0"];
61->16 [style = bold, label=""];
11->56 [style = dashed, label="0"];
17->31 [style = bold, label=""];
3->59 [style = dashed, label="0"];
20->64 [style = dashed, label="0"];
0->29 [style = solid, label="stateListener"];
19->63 [style = dashed, label="0"];
48->8 [style = bold, label=""];
20->53 [style = bold, label=""];
5->53 [style = dashed, label="0"];
24->14 [style = bold, label=""];
17->57 [style = dashed, label="0"];
1->22 [style = bold, label=""];
49->66 [style = bold, label=""];
69->70 [style = solid, label="listener"];
9->15 [style = bold, label=""];
50->47 [style = bold, label=""];
22->34 [style = bold, label=""];
63->70 [style = solid, label="client"];
23->69 [style = bold, label=""];
0->16 [style = solid, label="stateListener"];
59->0 [style = bold, label=""];
64->50 [style = bold, label=""];
69->70 [style = bold, label=""];
32->13 [style = bold, label=""];
20->30 [style = bold, label=""];
16->55 [style = dashed, label="0"];
15->27 [style = bold, label=""];
23->9 [style = bold, label=""];
10->47 [style = dashed, label="0"];
11->7 [style = bold, label=""];
14->46 [style = solid, label="latch"];
}
