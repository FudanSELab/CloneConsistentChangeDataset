digraph {
9 [style = filled, label = "MapperService mapperService = createMapperService(mapping(null))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "MergeReason mergeReason = randomFrom(MergeReason.MAPPING_UPDATE,MergeReason.INDEX_TEMPLATE)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ParsedDocument doc = docMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startArray(\"nested1\").startObject().startArray(\"nested2\").startObject().field(\"foo\",\"bar\").endObject().endArray().endObject().endArray().endObject()),XContentType.JSON))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(fields.size(),equalTo(new HashSet<>(fields).size()))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Collection<IndexableField> fields = doc.rootDoc().getFields()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "MapperService mapperService = createIndex(\"test\").mapperService()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mapperService.merge(MapperService.SINGLE_MAPPING_NAME,new CompressedXContent(secondMapping),MergeReason.INDEX_TEMPLATE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Collection<IndexableField> fields = doc.rootDoc().getFields()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(fields.size(),equalTo(new HashSet<>(fields).size()))@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "DocumentMapper docMapper = mapperService.documentMapper()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testMultipleLevelsIncludeRootWithMerge['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String firstMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(MapperService.SINGLE_MAPPING_NAME).startObject(\"properties\").startObject(\"nested1\").field(\"type\",\"nested\").field(\"include_in_root\",true).startObject(\"properties\").startObject(\"nested2\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",true).endObject().endObject().endObject().endObject().endObject().endObject())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(MapperService.SINGLE_MAPPING_NAME).startObject(\"properties\").startObject(\"nested1\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",true).startObject(\"properties\").startObject(\"nested2\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",false).startObject(\"properties\").startObject(\"nested3\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",true).endObject().endObject().endObject().endObject().endObject().endObject().endObject().endObject())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String secondMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(MapperService.SINGLE_MAPPING_NAME).startObject(\"properties\").startObject(\"nested1\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",true).startObject(\"properties\").startObject(\"nested2\").field(\"type\",\"nested\").field(\"include_in_root\",true).endObject().endObject().endObject().endObject().endObject().endObject())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(MapperService.SINGLE_MAPPING_NAME).startObject(\"properties\").startObject(\"nested1\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",true).startObject(\"properties\").startObject(\"nested2\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",false).startObject(\"properties\").startObject(\"nested3\").field(\"type\",\"nested\").field(\"include_in_root\",true).field(\"include_in_parent\",true).endObject().endObject().endObject().endObject().endObject().endObject().endObject().endObject())@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mapperService.merge(MapperService.SINGLE_MAPPING_NAME,new CompressedXContent(firstMapping),MergeReason.INDEX_TEMPLATE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testMultipleLevelsIncludeRoot2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MergeReason mergeReason = randomFrom(MergeReason.MAPPING_UPDATE,MergeReason.INDEX_TEMPLATE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testMultipleLevelsIncludeRoot2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "DocumentMapper docMapper = mapperService.documentMapper()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
4->14 [style = bold, label=""];
9->0 [style = bold, label=""];
17->1 [style = bold, label=""];
0->19 [style = dashed, label="0"];
6->0 [style = solid, label="mapping"];
18->15 [style = bold, label=""];
7->2 [style = solid, label="mergeReason"];
1->9 [style = dashed, label="0"];
1->18 [style = bold, label=""];
15->19 [style = bold, label=""];
11->9 [style = bold, label=""];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
8->1 [style = bold, label=""];
12->10 [style = bold, label=""];
1->6 [style = bold, label=""];
19->13 [style = bold, label=""];
18->15 [style = solid, label="firstMapping"];
7->2 [style = bold, label=""];
2->16 [style = dashed, label="0"];
5->4 [style = bold, label=""];
19->13 [style = solid, label="secondMapping"];
4->12 [style = bold, label=""];
3->15 [style = dashed, label="0"];
3->0 [style = solid, label="mergeReason"];
0->2 [style = solid, label="mapping"];
16->4 [style = bold, label=""];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
2->16 [style = bold, label=""];
}
