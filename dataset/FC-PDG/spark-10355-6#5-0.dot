digraph {
9 [style = filled, label = "int ordinal@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Platform.copyMemory(baseObject,baseOffset + offset,bytes,Platform.BYTE_ARRAY_OFFSET,size)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final byte(( bytes = new byte((((@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return null@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int ordinal@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "isNullAt(ordinal)@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return bytes@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int size = (int)(offsetAndSize & ((1L << 32) - 1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return UnsafeReaders.readArray(baseObject,baseOffset + offset,size)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "getArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int ordinal@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "getBinary['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12->5 [style = solid, label="ordinal"];
12->2 [style = solid, label="ordinal"];
7->11 [style = bold, label=""];
7->1 [style = bold, label=""];
14->12 [style = dotted, label="true"];
7->10 [style = solid, label="size"];
5->7 [style = dotted, label="false"];
5->11 [style = dotted, label="false"];
5->6 [style = dotted, label="true"];
5->10 [style = dotted, label="false"];
11->10 [style = solid, label="bytes"];
5->1 [style = dotted, label="false"];
2->4 [style = bold, label=""];
7->1 [style = solid, label="size"];
4->10 [style = solid, label="offset"];
4->7 [style = bold, label=""];
11->13 [style = solid, label="bytes"];
4->1 [style = solid, label="offset"];
2->4 [style = solid, label="offsetAndSize"];
5->2 [style = dotted, label="false"];
5->2 [style = bold, label=""];
5->13 [style = dotted, label="false"];
3->12 [style = dashed, label="0"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
10->13 [style = bold, label=""];
3->9 [style = dashed, label="0"];
2->7 [style = solid, label="offsetAndSize"];
11->10 [style = bold, label=""];
3->2 [style = solid, label="ordinal"];
9->5 [style = solid, label="ordinal"];
9->2 [style = solid, label="ordinal"];
0->3 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
3->5 [style = solid, label="ordinal"];
0->5 [style = bold, label=""];
14->5 [style = bold, label=""];
5->4 [style = dotted, label="false"];
}
