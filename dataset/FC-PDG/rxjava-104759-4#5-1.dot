digraph {
1 [style = filled, label = "expected.put(2,\"bb\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(objectSubscriber,never()).onNext(expected)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Flowable<Map<Integer,String>> mapped = source.toMap(lengthFunc,new Function<String,String>(){@Override public String apply(String v){return v}},mapFactory).toFlowable()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "toMapWithErrorThrowingFactoryObservable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Function<String,Integer> lengthFunc = new Function<String,Integer>(){@Override public Integer apply(String t1){return t1.length()}}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(objectObserver,never()).onComplete()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "verify(objectObserver,times(1)).onError(any())@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Map<Integer,String> expected = new LinkedHashMap<>()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Observable<Map<Integer,String>> mapped = source.toMap(lengthFunc,new Function<String,String>(){@Override public String apply(String v){return v}},mapFactory).toObservable()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verify(objectSubscriber,never()).onComplete()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expected.put(4,\"dddd\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "toMapWithErrorThrowingFactoryFlowable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "mapped.subscribe(objectObserver)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "toMapWithErrorThrowingFactoryFlowable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "mapped.subscribe(objectSubscriber)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Flowable<String> source = Flowable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Supplier<Map<Integer,String>> mapFactory = new Supplier<Map<Integer,String>>(){@Override public Map<Integer,String> get(){throw new RuntimeException(\"Forced failure\")}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<Integer,String> expected = new LinkedHashMap<Integer,String>()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.put(3,\"ccc\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(objectSubscriber,times(1)).onError(any())@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Observable<String> source = Observable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verify(objectObserver,never()).onNext(expected)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
4->9 [style = bold, label=""];
5->8 [style = bold, label=""];
7->11 [style = bold, label=""];
7->21 [style = dashed, label="0"];
3->1 [style = bold, label=""];
9->2 [style = bold, label=""];
6->20 [style = dashed, label="0"];
15->21 [style = bold, label=""];
10->19 [style = dashed, label="0"];
0->15 [style = dashed, label="0"];
10->3 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
16->17 [style = bold, label=""];
3->13 [style = dashed, label="0"];
21->18 [style = bold, label=""];
13->1 [style = bold, label=""];
2->12 [style = bold, label=""];
13->0 [style = solid, label="expected"];
0->7 [style = bold, label=""];
3->0 [style = solid, label="expected"];
3->15 [style = solid, label="expected"];
12->10 [style = bold, label=""];
8->20 [style = bold, label=""];
17->2 [style = bold, label=""];
10->13 [style = bold, label=""];
11->18 [style = dashed, label="0"];
9->17 [style = dashed, label="0"];
14->9 [style = bold, label=""];
12->19 [style = bold, label=""];
20->15 [style = bold, label=""];
19->3 [style = bold, label=""];
}
