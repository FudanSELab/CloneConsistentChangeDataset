digraph {
63 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68d37e,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Message relayMessage = toSlaveMessage.getRelayMessage(newMasterInstance)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "pipeline = createPipeline()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@82@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "preSetup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "pipeline.handle(event)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "preSetup()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "pipeline.handle(event)@@@59@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "_messagePipeline = new Pipeline(\"MessagePipeline\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
135 [style = filled, label = "_dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "_dataCache = new ResourceControllerDataProvider()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),newMasterInstance)@@@85@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
123 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@66@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "pipeline.handle(event)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "_fullPipeline = new Pipeline(\"FullPipeline\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "setupIdealState(3,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68d6d5,_numPartition,_numReplica,IdealState.RebalanceMode.SEMI_AUTO,BuiltInStateModelDefinitions.MasterSlave.name())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@89@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "_fullPipeline.addStage(new ReadClusterDataStage())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
127 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@67@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
122 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@64@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
143 [style = filled, label = "_messagePipeline.addStage(new MessageSelectionStage())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "event.addAttribute(AttributeName.ControllerDataProvider.name(),_dataCache)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "cache = event.getAttribute(AttributeName.ControllerDataProvider.name())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68d706,_numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "toSlaveMessage = messages.get(0)@@@77@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
137 [style = filled, label = "_fullPipeline.handle(event)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "pipeline.handle(event)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "setClusterConfig(clusterConfig)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "_fullPipeline.addStage(new MessageSelectionStage())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128 [style = filled, label = "_fullPipeline.addStage(new IntermediateStateCalcStage())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@91@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@86@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
117 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@87@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),slaveInstance)@@@84@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
93 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@90@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "setupStateModel()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@83@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
131 [style = filled, label = "setupLiveInstances(3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
144 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "_bestpossibleState = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "pipeline.handle(event)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,slaveInstance,relayMessage)@@@89@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
124 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@88@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
106 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
103 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@65@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "pipeline.handle(event)@@@93@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
89 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
145 [style = filled, label = "_fullPipeline.addStage(new MessageThrottleStage())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
148 [style = filled, label = "setupInstances(3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Pipeline pipeline = createPipeline()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
146 [style = filled, label = "_messagePipeline.addStage(new ResourceMessageGenerationPhase())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "_fullPipeline.addStage(new ResourceMessageGenerationPhase())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "_fullPipeline.addStage(new BestPossibleStateCalcStage())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@80@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@100@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "relayMessage = toSlaveMessage.getRelayMessage(slaveInstance)@@@81@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
126 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "_messagePipeline.addStage(new MessageThrottleStage())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121->116 [style = bold, label=""];
79->108 [style = bold, label=""];
21->42 [style = bold, label=""];
39->69 [style = bold, label=""];
119->117 [style = bold, label=""];
33->105 [style = solid, label="masterInstance"];
46->0 [style = bold, label=""];
78->61 [style = bold, label=""];
2->51 [style = bold, label=""];
50->39 [style = solid, label="relayMessage"];
65->57 [style = bold, label=""];
148->131 [style = bold, label=""];
11->64 [style = bold, label=""];
86->75 [style = bold, label=""];
73->54 [style = bold, label=""];
40->55 [style = solid, label="p"];
135->141 [style = bold, label=""];
18->96 [style = solid, label="bestPossibleStateOutput"];
116->118 [style = bold, label=""];
93->108 [style = solid, label="newMasterInstance"];
55->91 [style = solid, label="instanceStateMap"];
77->80 [style = bold, label=""];
44->82 [style = bold, label=""];
96->5 [style = solid, label="currentStateOutput"];
124->104 [style = solid, label="currentStateOutput"];
45->76 [style = bold, label=""];
123->127 [style = bold, label=""];
107->23 [style = bold, label=""];
40->108 [style = solid, label="p"];
98->90 [style = bold, label=""];
16->72 [style = bold, label=""];
139->128 [style = bold, label=""];
68->86 [style = solid, label="resourceMap"];
3->34 [style = bold, label=""];
93->73 [style = solid, label="newMasterInstance"];
33->56 [style = solid, label="masterInstance"];
145->147 [style = bold, label=""];
0->124 [style = solid, label="bestPossibleStateOutput"];
144->53 [style = bold, label=""];
40->24 [style = solid, label="p"];
76->109 [style = solid, label="slaveInstance"];
5->149 [style = bold, label=""];
75->19 [style = bold, label=""];
76->55 [style = bold, label=""];
91->20 [style = bold, label=""];
12->102 [style = bold, label=""];
93->118 [style = solid, label="newMasterInstance"];
27->137 [style = dashed, label="0"];
20->122 [style = bold, label=""];
57->74 [style = bold, label=""];
40->93 [style = solid, label="p"];
96->70 [style = solid, label="currentStateOutput"];
122->127 [style = solid, label="currentStateOutput"];
120->115 [style = bold, label=""];
97->83 [style = bold, label=""];
17->107 [style = bold, label=""];
30->35 [style = solid, label="currentStateOutput"];
36->17 [style = bold, label=""];
149->134 [style = bold, label=""];
115->114 [style = bold, label=""];
40->71 [style = solid, label="p"];
50->9 [style = solid, label="relayMessage"];
134->139 [style = bold, label=""];
50->108 [style = solid, label="relayMessage"];
93->114 [style = solid, label="newMasterInstance"];
20->63 [style = bold, label=""];
68->8 [style = solid, label="resourceMap"];
33->103 [style = bold, label=""];
117->124 [style = bold, label=""];
140->135 [style = bold, label=""];
109->111 [style = solid, label="relayMessage"];
41->120 [style = bold, label=""];
4->73 [style = bold, label=""];
10->95 [style = bold, label=""];
33->67 [style = solid, label="masterInstance"];
93->39 [style = solid, label="newMasterInstance"];
140->141 [style = solid, label="_dataCache"];
53->92 [style = bold, label=""];
66->78 [style = bold, label=""];
109->125 [style = bold, label=""];
28->105 [style = bold, label=""];
33->21 [style = solid, label="masterInstance"];
40->111 [style = solid, label="p"];
76->111 [style = solid, label="slaveInstance"];
129->130 [style = bold, label=""];
18->96 [style = bold, label=""];
33->51 [style = solid, label="masterInstance"];
99->134 [style = dashed, label="0"];
104->29 [style = solid, label="currentStateOutput"];
26->106 [style = bold, label=""];
104->24 [style = bold, label=""];
15->104 [style = bold, label=""];
0->20 [style = solid, label="bestPossibleStateOutput"];
19->37 [style = bold, label=""];
112->109 [style = bold, label=""];
118->119 [style = bold, label=""];
48->97 [style = bold, label=""];
40->2 [style = solid, label="p"];
53->140 [style = dashed, label="0"];
85->60 [style = bold, label=""];
76->116 [style = solid, label="slaveInstance"];
133->132 [style = bold, label=""];
27->46 [style = bold, label=""];
49->71 [style = bold, label=""];
1->58 [style = bold, label=""];
132->145 [style = bold, label=""];
0->122 [style = solid, label="bestPossibleStateOutput"];
13->140 [style = bold, label=""];
33->83 [style = solid, label="masterInstance"];
94->25 [style = bold, label=""];
40->106 [style = solid, label="p"];
50->51 [style = solid, label="relayMessage"];
128->133 [style = bold, label=""];
69->101 [style = bold, label=""];
43->10 [style = bold, label=""];
0->104 [style = solid, label="bestPossibleStateOutput"];
37->99 [style = bold, label=""];
99->18 [style = bold, label=""];
113->123 [style = bold, label=""];
13->141 [style = dashed, label="0"];
71->1 [style = bold, label=""];
62->91 [style = bold, label=""];
67->45 [style = bold, label=""];
42->38 [style = bold, label=""];
23->98 [style = bold, label=""];
122->113 [style = bold, label=""];
13->18 [style = solid, label="resourceMap"];
114->126 [style = bold, label=""];
80->52 [style = bold, label=""];
40->85 [style = solid, label="p"];
93->50 [style = solid, label="newMasterInstance"];
92->13 [style = bold, label=""];
76->123 [style = solid, label="slaveInstance"];
143->142 [style = bold, label=""];
109->125 [style = solid, label="relayMessage"];
9->88 [style = bold, label=""];
106->48 [style = bold, label=""];
0->17 [style = solid, label="bestPossibleStateOutput"];
74->72 [style = solid, label="clusterConfig"];
38->27 [style = bold, label=""];
87->81 [style = bold, label=""];
40->76 [style = solid, label="p"];
33->66 [style = solid, label="masterInstance"];
31->93 [style = bold, label=""];
138->129 [style = bold, label=""];
59->100 [style = bold, label=""];
40->56 [style = solid, label="p"];
68->53 [style = bold, label=""];
64->59 [style = bold, label=""];
40->14 [style = solid, label="p"];
6->44 [style = bold, label=""];
47->77 [style = bold, label=""];
52->30 [style = bold, label=""];
90->6 [style = bold, label=""];
142->137 [style = bold, label=""];
30->45 [style = solid, label="currentStateOutput"];
80->97 [style = bold, label=""];
58->66 [style = bold, label=""];
92->135 [style = dashed, label="0"];
63->12 [style = bold, label=""];
40->33 [style = bold, label=""];
74->16 [style = bold, label=""];
111->104 [style = bold, label=""];
0->49 [style = bold, label=""];
102->11 [style = bold, label=""];
93->22 [style = solid, label="newMasterInstance"];
70->47 [style = bold, label=""];
58->2 [style = solid, label="toSlaveMessage"];
56->39 [style = bold, label=""];
14->29 [style = bold, label=""];
40->67 [style = solid, label="p"];
88->28 [style = bold, label=""];
131->144 [style = bold, label=""];
57->129 [style = dashed, label="0"];
126->112 [style = bold, label=""];
144->13 [style = solid, label="clusterConfig"];
96->5 [style = bold, label=""];
5->40 [style = bold, label=""];
34->43 [style = bold, label=""];
40->123 [style = solid, label="p"];
13->99 [style = solid, label="resourceMap"];
54->89 [style = bold, label=""];
147->146 [style = bold, label=""];
141->99 [style = bold, label=""];
76->14 [style = solid, label="slaveInstance"];
60->4 [style = bold, label=""];
76->62 [style = solid, label="slaveInstance"];
37->149 [style = dashed, label="0"];
127->63 [style = bold, label=""];
40->113 [style = solid, label="p"];
93->50 [style = bold, label=""];
33->2 [style = solid, label="masterInstance"];
93->24 [style = solid, label="newMasterInstance"];
50->9 [style = bold, label=""];
144->92 [style = solid, label="clusterConfig"];
40->33 [style = solid, label="p"];
137->136 [style = bold, label=""];
61->31 [style = bold, label=""];
0->36 [style = solid, label="bestPossibleStateOutput"];
103->21 [style = bold, label=""];
8->86 [style = bold, label=""];
81->67 [style = bold, label=""];
25->32 [style = bold, label=""];
41->79 [style = bold, label=""];
40->32 [style = solid, label="p"];
40->41 [style = solid, label="p"];
40->39 [style = solid, label="p"];
95->85 [style = bold, label=""];
24->29 [style = bold, label=""];
0->30 [style = solid, label="bestPossibleStateOutput"];
93->113 [style = solid, label="newMasterInstance"];
84->15 [style = bold, label=""];
32->2 [style = bold, label=""];
74->68 [style = solid, label="clusterConfig"];
7->3 [style = bold, label=""];
40->80 [style = solid, label="p"];
55->22 [style = bold, label=""];
24->14 [style = bold, label=""];
130->148 [style = bold, label=""];
101->26 [style = bold, label=""];
40->84 [style = solid, label="p"];
0->24 [style = solid, label="bestPossibleStateOutput"];
40->91 [style = solid, label="p"];
51->70 [style = bold, label=""];
110->57 [style = bold, label=""];
108->35 [style = bold, label=""];
22->62 [style = bold, label=""];
82->84 [style = bold, label=""];
33->32 [style = solid, label="masterInstance"];
79->120 [style = dashed, label="0"];
105->94 [style = bold, label=""];
33->103 [style = solid, label="masterInstance"];
100->41 [style = bold, label=""];
81->76 [style = bold, label=""];
30->56 [style = bold, label=""];
40->51 [style = solid, label="p"];
29->7 [style = bold, label=""];
124->111 [style = bold, label=""];
35->36 [style = bold, label=""];
13->8 [style = bold, label=""];
30->69 [style = solid, label="currentStateOutput"];
53->13 [style = solid, label="cache"];
72->68 [style = bold, label=""];
46->136 [style = dashed, label="0"];
83->87 [style = bold, label=""];
93->28 [style = solid, label="newMasterInstance"];
146->143 [style = bold, label=""];
125->121 [style = bold, label=""];
}
