digraph {
12 [style = filled, label = "sslSocket.getOutputStream().flush()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "handshakeCompletedLock@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Socket socket = connectWithoutSSL()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sslSocket.getOutputStream().flush()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "byte(( buf = new byte((((@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "socket.getOutputStream().flush()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "serverThread.start()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testConnectWithSSLToStrictServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Socket sslSocket = connectWithSSL()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!handshakeCompleted@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testConnectWithoutSSLToNonStrictServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "{forceClose(socket)serverThread.shutdown(TIMEOUT)}@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "{forceClose(sslSocket)serverThread.shutdown(TIMEOUT)}@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "int bytesRead = socket.getInputStream().read(buf,0,buf.length)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "serverThread.start()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testConnectWithSSLToStrictServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
4->11 [style = solid, label="sslSocket"];
21->22 [style = solid, label="certKeyType"];
6->3 [style = bold, label=""];
22->25 [style = bold, label=""];
11->20 [style = bold, label=""];
13->1 [style = solid, label="buf"];
4->14 [style = bold, label=""];
15->10 [style = bold, label=""];
0->9 [style = bold, label=""];
1->8 [style = bold, label=""];
16->2 [style = dotted, label="true"];
9->2 [style = bold, label=""];
13->0 [style = solid, label="buf"];
8->2 [style = dotted, label="true"];
29->3 [style = bold, label=""];
0->2 [style = bold, label=""];
12->15 [style = bold, label=""];
18->19 [style = dotted, label="true"];
19->22 [style = solid, label="caKeyType"];
18->21 [style = dotted, label="true"];
3->26 [style = bold, label=""];
25->4 [style = bold, label=""];
27->31 [style = bold, label=""];
15->10 [style = solid, label="buf"];
28->13 [style = bold, label=""];
18->24 [style = dotted, label="true"];
12->31 [style = dashed, label="0"];
10->28 [style = dashed, label="0"];
4->26 [style = dashed, label="0"];
17->22 [style = solid, label="paramIndex"];
16->2 [style = bold, label=""];
14->27 [style = dashed, label="0"];
3->4 [style = bold, label=""];
31->15 [style = bold, label=""];
30->29 [style = bold, label=""];
9->16 [style = bold, label=""];
13->1 [style = bold, label=""];
14->20 [style = solid, label="sslSocket"];
15->28 [style = solid, label="buf"];
23->14 [style = bold, label=""];
8->0 [style = bold, label=""];
26->27 [style = bold, label=""];
10->13 [style = solid, label="bytesRead"];
26->11 [style = solid, label="socket"];
18->22 [style = bold, label=""];
6->29 [style = dashed, label="0"];
28->13 [style = solid, label="bytesRead"];
10->13 [style = bold, label=""];
15->28 [style = bold, label=""];
14->12 [style = bold, label=""];
7->6 [style = bold, label=""];
16->5 [style = bold, label=""];
14->15 [style = bold, label=""];
5->11 [style = bold, label=""];
8->0 [style = dotted, label="true"];
18->17 [style = dotted, label="true"];
1->8 [style = solid, label="bytesRead"];
9->16 [style = dotted, label="true"];
24->22 [style = solid, label="hostnameVerification"];
0->9 [style = dotted, label="true"];
4->23 [style = bold, label=""];
2->5 [style = bold, label=""];
15->1 [style = solid, label="buf"];
9->5 [style = dotted, label="true"];
}
