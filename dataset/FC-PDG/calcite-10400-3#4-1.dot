digraph {
5 [style = filled, label = "CalciteAssert.that().enable(enabled()).withModel(FOODMART).with(CalciteConnectionProperty.APPROXIMATE_DISTINCT_COUNT.camelName(),approx).query(sql).runs().explainContains(expectedExplain).queryContains(druidChecker(expectedDruidQuery))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "String expectedDruidQuery@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String sql@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testCountWithApproxDistinct['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "boolean approx@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "String expectedExplain@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String expectedExplain@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "CalciteAssert.that().enable(enabled()).withModel(FOODMART).with(CalciteConnectionProperty.APPROXIMATE_DISTINCT_COUNT.camelName(),approx).query(sql).runs().explainContains(expectedExplain).queryContains(new DruidChecker(expectedDruidQuery))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "boolean approx@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CalciteAssert.that().enable(enabled()).withModel(FOODMART).with(CalciteConnectionProperty.APPROXIMATE_DISTINCT_COUNT,approx).query(sql).runs().explainContains(expectedExplain).queryContains(druidChecker(expectedDruidQuery))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "boolean approx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testCountWithApproxDistinct['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String sql@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCountWithApproxDistinct['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String expectedDruidQuery@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String expectedExplain@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11->12 [style = solid, label="expectedDruidQuery"];
2->3 [style = dotted, label="true"];
8->9 [style = bold, label=""];
8->7 [style = dotted, label="true"];
5->9 [style = dashed, label="0"];
15->12 [style = bold, label=""];
2->5 [style = bold, label=""];
5->12 [style = dashed, label="0"];
2->0 [style = dotted, label="true"];
4->9 [style = solid, label="expectedDruidQuery"];
8->6 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
8->4 [style = dotted, label="true"];
15->4 [style = dotted, label="true"];
2->4 [style = dotted, label="true"];
15->13 [style = dotted, label="true"];
15->11 [style = dotted, label="true"];
0->5 [style = solid, label="expectedDruidQuery"];
}
