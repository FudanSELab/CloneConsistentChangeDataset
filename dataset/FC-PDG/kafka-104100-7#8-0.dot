digraph {
33 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithGeneration(topics(topic),c2partitions0,2))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp0,tp2,tp3)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testAssignmentWithConflictingPreviousGenerations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TopicPartition tp2 = new TopicPartition(topic,2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<TopicPartition> c1partitions = assignment.get(consumer1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertTrue(assignor.isSticky())@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(c1partitions0.containsAll(c1partitions))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TopicPartition tp3 = new TopicPartition(topic,3)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithOldSchema(topics(topic),c2partitions0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "TopicPartition tp1 = new TopicPartition(topic,1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(c1partitions0.containsAll(c1partitions))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "String consumer3 = \"consumer3\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TopicPartition tp4 = new TopicPartition(topic,4)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String consumer2 = \"consumer2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp1,tp4)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(c2partitions0.containsAll(c2partitions))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "partitionsPerTopic.put(topic,3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TopicPartition tp5 = new TopicPartition(topic,5)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp0,tp1,tp2)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testSchemaBackwardCompatibility['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(c1partitions.size() == 1 && c2partitions.size() == 1 && c3partitions.size() == 1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TopicPartition tp0 = new TopicPartition(topic,0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(assignor.isSticky())@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<TopicPartition> c3partitions = assignment.get(consumer3)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "subscriptions.put(consumer3,buildSubscriptionWithGeneration(topics(topic),c3partitions0,2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String consumer1 = \"consumer1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(c1partitions.size() == 2 && c2partitions.size() == 2 && c3partitions.size() == 2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<TopicPartition> c3partitions0 = partitions(tp3,tp4,tp5)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithGeneration(topics(topic),c2partitions0,1))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(c2partitions0.containsAll(c2partitions))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(c3partitions0.containsAll(c3partitions))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<TopicPartition> c2partitions = assignment.get(consumer2)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testAssignmentWithConflictingPreviousGenerations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "subscriptions.put(consumer1,buildSubscriptionWithGeneration(topics(topic),c1partitions0,1))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->34 [style = solid, label="tp2"];
27->20 [style = solid, label="consumer1"];
6->22 [style = bold, label=""];
10->19 [style = bold, label=""];
43->41 [style = solid, label="c2partitions0"];
1->41 [style = solid, label="consumer2"];
22->34 [style = solid, label="tp1"];
13->41 [style = dashed, label="0"];
14->7 [style = bold, label=""];
2->23 [style = bold, label=""];
27->16 [style = solid, label="consumer1"];
1->29 [style = solid, label="consumer2"];
45->25 [style = bold, label=""];
14->3 [style = solid, label="tp4"];
2->44 [style = bold, label=""];
11->13 [style = bold, label=""];
11->33 [style = bold, label=""];
3->24 [style = solid, label="c3partitions0"];
15->13 [style = solid, label="c2partitions0"];
34->33 [style = solid, label="c2partitions0"];
6->17 [style = solid, label="tp0"];
15->34 [style = dashed, label="0"];
28->5 [style = bold, label=""];
2->15 [style = solid, label="tp2"];
3->11 [style = bold, label=""];
10->39 [style = solid, label="partitionsPerTopic"];
39->29 [style = solid, label="assignment"];
18->24 [style = solid, label="consumer3"];
29->26 [style = bold, label=""];
23->14 [style = bold, label=""];
30->45 [style = dashed, label="0"];
17->34 [style = bold, label=""];
1->21 [style = solid, label="consumer2"];
10->29 [style = solid, label="partitionsPerTopic"];
31->27 [style = bold, label=""];
25->5 [style = solid, label="assignment"];
17->15 [style = bold, label=""];
36->16 [style = bold, label=""];
13->33 [style = dashed, label="0"];
39->42 [style = bold, label=""];
44->37 [style = solid, label="c1partitions0"];
18->40 [style = solid, label="consumer3"];
25->28 [style = solid, label="assignment"];
7->17 [style = bold, label=""];
22->2 [style = bold, label=""];
13->24 [style = bold, label=""];
22->43 [style = solid, label="tp1"];
2->44 [style = solid, label="tp2"];
22->17 [style = solid, label="tp1"];
6->44 [style = solid, label="tp0"];
20->9 [style = solid, label="c1partitions"];
37->41 [style = bold, label=""];
29->0 [style = solid, label="c2partitions"];
18->12 [style = solid, label="consumer3"];
32->27 [style = bold, label=""];
30->9 [style = bold, label=""];
15->3 [style = bold, label=""];
19->16 [style = bold, label=""];
21->12 [style = bold, label=""];
26->4 [style = solid, label="c3partitions"];
25->20 [style = bold, label=""];
27->37 [style = solid, label="consumer1"];
18->10 [style = bold, label=""];
42->11 [style = bold, label=""];
24->25 [style = bold, label=""];
33->24 [style = bold, label=""];
10->25 [style = solid, label="partitionsPerTopic"];
42->25 [style = solid, label="c1partitions"];
1->33 [style = solid, label="consumer2"];
18->26 [style = solid, label="consumer3"];
30->0 [style = bold, label=""];
27->11 [style = solid, label="consumer1"];
5->8 [style = bold, label=""];
35->27 [style = bold, label=""];
27->1 [style = bold, label=""];
23->15 [style = solid, label="tp3"];
9->0 [style = bold, label=""];
20->29 [style = bold, label=""];
6->15 [style = solid, label="tp0"];
23->3 [style = solid, label="tp3"];
1->18 [style = bold, label=""];
43->37 [style = bold, label=""];
12->6 [style = bold, label=""];
11->40 [style = bold, label=""];
27->42 [style = solid, label="consumer1"];
11->20 [style = solid, label="c2partitions"];
4->28 [style = bold, label=""];
44->43 [style = bold, label=""];
10->36 [style = bold, label=""];
26->30 [style = bold, label=""];
39->26 [style = solid, label="assignment"];
26->38 [style = bold, label=""];
1->13 [style = solid, label="consumer2"];
14->17 [style = solid, label="tp4"];
14->43 [style = dashed, label="0"];
7->3 [style = solid, label="tp5"];
23->44 [style = dashed, label="0"];
19->36 [style = dashed, label="0"];
34->3 [style = bold, label=""];
0->4 [style = bold, label=""];
1->11 [style = solid, label="consumer2"];
6->34 [style = solid, label="tp0"];
16->21 [style = bold, label=""];
17->11 [style = solid, label="c1partitions0"];
10->28 [style = solid, label="partitionsPerTopic"];
40->45 [style = bold, label=""];
41->39 [style = bold, label=""];
}
