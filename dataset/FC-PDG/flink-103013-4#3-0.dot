digraph {
10 [style = filled, label = "StreamGraph graph = graphGenerator.generate()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "graphGenerator.setRuntimeExecutionMode(RuntimeExecutionMode.BATCH)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(processNode.getSortedInputs(),equalTo(true))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamGraphGenerator graphGenerator = new StreamGraphGenerator(Collections.singletonList(sink.getTransformation()),env.getConfig(),env.getCheckpointConfig())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(graph.getTimerServiceProvider(),notNullValue())@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "SingleOutputStreamOperator<Integer> process = env.fromElements(1,2).keyBy(null).process(DUMMY_PROCESS_FUNCTION)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(graph.getTimerServiceProvider(),notNullValue())@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DataStreamSource<Integer> elements1 = env.fromElements(1,2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DataStreamSink<Integer> sink = process.addSink(new DiscardingSink<>())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DataStreamSource<Integer> elements2 = env.fromElements(1,2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(processNode.getInputRequirements().get(0),equalTo(StreamConfig.InputRequirement.SORTED))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testOneInputTransformation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testTwoInputTransformation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(processNode.getInputRequirements().get(1),equalTo(StreamConfig.InputRequirement.SORTED))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testTwoInputTransformation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(processNode.getOperatorFactory().getChainingStrategy(),equalTo(ChainingStrategy.HEAD))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(graph.getStateBackend(),instanceOf())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SingleOutputStreamOperator<Integer> process = elements1.connect(elements2).keyBy(null,null).process(DUMMY_KEYED_CO_PROCESS_FUNCTION)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamNode processNode = graph.getStreamNode(process.getId())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(processNode.getOperatorFactory().getChainingStrategy(),equalTo(ChainingStrategy.HEAD))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(graph.getStateBackend(),instanceOf())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
8->16 [style = bold, label=""];
3->11 [style = bold, label=""];
0->4 [style = bold, label=""];
11->12 [style = bold, label=""];
20->7 [style = bold, label=""];
7->10 [style = bold, label=""];
2->7 [style = bold, label=""];
3->16 [style = dashed, label="0"];
15->12 [style = bold, label=""];
13->17 [style = bold, label=""];
19->20 [style = bold, label=""];
16->15 [style = bold, label=""];
1->21 [style = dashed, label="0"];
4->8 [style = bold, label=""];
8->3 [style = bold, label=""];
12->13 [style = bold, label=""];
9->6 [style = bold, label=""];
6->21 [style = bold, label=""];
21->19 [style = bold, label=""];
18->6 [style = bold, label=""];
14->6 [style = bold, label=""];
6->1 [style = bold, label=""];
10->0 [style = bold, label=""];
1->5 [style = bold, label=""];
}
