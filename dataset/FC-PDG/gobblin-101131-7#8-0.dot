digraph {
18 [style = filled, label = "long flowExecutionId = 1234L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertFalse(jobStatusIterator.hasNext())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(jobStatus.getJobExecutionId(),JOB_EXECUTION_ID)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(jobStatus.getJobName(),JobStatusRetriever.NA_KEY)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(jobStatus.getJobName().equals(MY_JOB_NAME_1) || jobStatus.getJobName().equals(MY_JOB_NAME_2))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(jobStatus.getHighWatermark(),\"\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(jobStatus.getJobGroup(),jobGroup)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "JobStatusRetriever.isFlowStatus(jobStatus)@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Iterator<JobStatus> jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(jobStatus.getEventName(),ExecutionStatus.COMPILED.name())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(jobStatus.getMessage(),MESSAGE)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "String jobName = jobStatus.getJobName()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testGetJobStatusesForFlowExecution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "JobStatus jobStatus = jobStatusIterator.next()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "jobStatus.getJobName().equals(JobStatusRetriever.NA_KEY)@@@25@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId,MY_JOB_NAME_1,MY_JOB_GROUP)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "addJobStatusToStateStore(flowExecutionId,JobStatusRetriever.NA_KEY,ExecutionStatus.COMPILED.name())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(jobStatus.getJobGroup(),MY_JOB_GROUP)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(jobStatus.getProcessedCount(),0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "addJobStatusToStateStore(flowExecutionId,MY_JOB_NAME_2,ExecutionStatus.RUNNING.name())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(jobStatus.getJobName(),MY_JOB_NAME_1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testGetJobStatusesForFlowExecution1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Iterator<JobStatus> jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId,MY_JOB_NAME_1,MY_JOB_GROUP)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(jobStatus.getEventName(),ExecutionStatus.RUNNING.name())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "JobStatusRetriever.isFlowStatus(jobStatus)@@@33@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(jobStatus.getJobGroup(),JobStatusRetriever.NA_KEY)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "addJobStatusToStateStore(flowExecutionId,MY_JOB_NAME_1,ExecutionStatus.RUNNING.name(),JOB_START_TIME,JOB_START_TIME)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String nextExpectedJobName = (MY_JOB_NAME_1.equals(jobName))? MY_JOB_NAME_2: MY_JOB_NAME_1@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(jobStatus.getFlowGroup(),FLOW_GROUP)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertEquals(jobStatus.getFlowExecutionId(),flowExecutionId)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testGetJobStatusesForFlowExecution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "Assert.assertEquals(jobStatus.getLowWatermark(),\"\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(jobStatus.getFlowName(),FLOW_NAME)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(jobStatus.getJobName(),nextExpectedJobName)@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9->36 [style = dashed, label="0"];
18->4 [style = solid, label="flowExecutionId"];
22->26 [style = bold, label=""];
11->16 [style = bold, label=""];
42->18 [style = bold, label=""];
15->10 [style = bold, label=""];
0->9 [style = bold, label=""];
7->11 [style = bold, label=""];
33->16 [style = bold, label=""];
14->19 [style = dotted, label="true"];
30->41 [style = dashed, label="0"];
23->27 [style = bold, label=""];
12->16 [style = solid, label="nextExpectedJobName"];
30->35 [style = solid, label="jobStatus"];
35->6 [style = bold, label=""];
25->13 [style = bold, label=""];
26->36 [style = bold, label=""];
4->15 [style = bold, label=""];
35->19 [style = bold, label=""];
40->15 [style = bold, label=""];
11->34 [style = solid, label="jobStatus"];
14->19 [style = bold, label=""];
18->5 [style = solid, label="flowExecutionId"];
34->31 [style = bold, label=""];
10->26 [style = bold, label=""];
38->41 [style = bold, label=""];
35->19 [style = dotted, label="true"];
0->26 [style = dashed, label="0"];
28->12 [style = bold, label=""];
19->6 [style = bold, label=""];
12->7 [style = bold, label=""];
24->30 [style = bold, label=""];
3->18 [style = bold, label=""];
8->17 [style = bold, label=""];
5->1 [style = bold, label=""];
29->20 [style = bold, label=""];
26->0 [style = bold, label=""];
20->8 [style = bold, label=""];
37->43 [style = bold, label=""];
34->31 [style = dotted, label="true"];
11->34 [style = bold, label=""];
18->1 [style = solid, label="flowExecutionId"];
18->39 [style = solid, label="flowExecutionId"];
30->35 [style = bold, label=""];
17->2 [style = bold, label=""];
18->39 [style = bold, label=""];
43->38 [style = bold, label=""];
10->25 [style = bold, label=""];
28->12 [style = solid, label="jobName"];
1->24 [style = bold, label=""];
31->33 [style = bold, label=""];
34->16 [style = bold, label=""];
39->40 [style = bold, label=""];
18->21 [style = solid, label="flowExecutionId"];
34->33 [style = dotted, label="true"];
13->23 [style = bold, label=""];
9->5 [style = bold, label=""];
30->14 [style = bold, label=""];
14->35 [style = dashed, label="0"];
18->8 [style = solid, label="flowExecutionId"];
18->17 [style = solid, label="flowExecutionId"];
36->37 [style = bold, label=""];
18->21 [style = bold, label=""];
27->29 [style = bold, label=""];
32->18 [style = bold, label=""];
2->22 [style = bold, label=""];
18->38 [style = solid, label="flowExecutionId"];
14->6 [style = bold, label=""];
24->38 [style = dashed, label="0"];
6->28 [style = bold, label=""];
21->4 [style = bold, label=""];
}
