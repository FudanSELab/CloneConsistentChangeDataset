digraph {
6 [style = filled, label = "CollectSinkOperatorCoordinator coordinator = new CollectSinkOperatorCoordinator()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "server.start()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "coordinator.handleEventFromOperator(0,new CollectSinkAddressEvent(server.getServerAddress()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testServerFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertResponseEquals(request,response,-1,Collections.emptyList())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "server.close()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testNoAddress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertResponseEquals(request,response,0,expected.get(0))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<List<Row>> expected = Arrays.asList(Arrays.asList(Row.of(1,\"aaa\"),Row.of(2,\"bbb\")),Arrays.asList(Row.of(3,\"ccc\"),Row.of(4,\"ddd\"),Row.of(5,\"eee\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "CompletableFuture<CoordinationResponse> responseFuture = coordinator.handleCoordinationRequest(request)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertResponseEquals(request,response,-1,Collections.emptyList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "request = new CollectCoordinationRequest(\"version4\",101112)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CollectCoordinationRequest request = new CollectCoordinationRequest(\"version\",123)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "request = new CollectCoordinationRequest(\"version3\",789)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "response = (CollectCoordinationResponse)coordinator.handleCoordinationRequest(request).get()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testNoAddress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CollectSinkOperatorCoordinator coordinator = new CollectSinkOperatorCoordinator(SOCKET_TIMEOUT_MILLIS)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "server = new ServerThread(expected,2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "coordinator.handleEventFromOperator(0,new CollectSinkAddressEvent(server.getServerAddress()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CollectCoordinationResponse response = (CollectCoordinationResponse)coordinator.handleCoordinationRequest(request).get()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "coordinator.subtaskFailed(0,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "coordinator.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "response = (CollectCoordinationResponse)responseFuture.get()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "response = (CollectCoordinationResponse)coordinator.handleCoordinationRequest(request).get()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "server.start()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "expected = Collections.singletonList(Arrays.asList(Row.of(6,\"fff\"),Row.of(7,\"ggg\")))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertResponseEquals(request,response,0,expected.get(1))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "CollectCoordinationRequest request = new CollectCoordinationRequest(\"version1\",123)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "coordinator.close()@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertResponseEquals(request,response,0,expected.get(0))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ServerThread server = new ServerThread(expected,3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "coordinator.close()@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CollectCoordinationResponse response = (CollectCoordinationResponse)coordinator.handleCoordinationRequest(request).get()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "request = new CollectCoordinationRequest(\"version2\",456)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->14 [style = solid, label="request"];
28->32 [style = solid, label="expected"];
17->10 [style = bold, label=""];
22->26 [style = bold, label=""];
4->3 [style = bold, label=""];
0->4 [style = solid, label="response"];
23->14 [style = solid, label="response"];
1->4 [style = solid, label="request"];
29->17 [style = bold, label=""];
16->27 [style = bold, label=""];
33->15 [style = bold, label=""];
2->6 [style = bold, label=""];
6->7 [style = dashed, label="0"];
19->29 [style = bold, label=""];
12->30 [style = bold, label=""];
20->31 [style = bold, label=""];
1->0 [style = bold, label=""];
21->25 [style = bold, label=""];
11->19 [style = bold, label=""];
5->28 [style = bold, label=""];
30->18 [style = bold, label=""];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
28->32 [style = bold, label=""];
23->14 [style = bold, label=""];
22->26 [style = solid, label="response"];
15->24 [style = solid, label="response"];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
7->5 [style = bold, label=""];
30->18 [style = solid, label="expected"];
24->21 [style = bold, label=""];
25->12 [style = bold, label=""];
0->4 [style = bold, label=""];
15->24 [style = bold, label=""];
27->23 [style = bold, label=""];
10->33 [style = bold, label=""];
33->24 [style = solid, label="request"];
13->22 [style = bold, label=""];
17->10 [style = solid, label="response"];
14->13 [style = bold, label=""];
32->11 [style = bold, label=""];
29->10 [style = solid, label="request"];
21->25 [style = solid, label="request"];
13->26 [style = solid, label="request"];
26->20 [style = bold, label=""];
18->16 [style = bold, label=""];
}
