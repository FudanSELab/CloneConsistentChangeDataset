digraph {
0 [style = filled, label = "fileToAdd1.createNewFile()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "mockResultCommit.assertIsSatisfied()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "Exchange ex1 = mockResultCommit.getExchanges().get(0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "git.close()@@@28@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "int count = 0@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "removeFileBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "validateGitLogs(git,commitMessage)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Status status = git.status().call()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "Exchange ex2 = mockResultCommit.getExchanges().get(1)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fileToAdd.createNewFile()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "git.commit().setMessage(commitMessageAll).call()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "git.commit().setMessage(\"Test test Commit\").call()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(count,2)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "status = git.status().call()@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "validateGitLogs(git,commitMessageAll,commitMessage)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Git git = getGitTestRepository()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "fileToAdd1.createNewFile()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "git.close()@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "status = git.status().call()@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "commitConsumerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "MockEndpoint mockResultCommit = getMockEndpoint(\"mock:result-commit\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "count++@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "git.close()@@@45@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(count,1)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "count++@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Iterable<RevCommit> logs = git.log().call()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "removeFileBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(count,2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "status = git.status().call()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "count == 0@@@27@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "fileToAdd1.createNewFile()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "count++@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "mockResultCommit.expectedMessageCount(2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "count == 1@@@30@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "count = 0@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16->27 [style = solid, label="count"];
17->10 [style = bold, label=""];
54->52 [style = bold, label=""];
15->2 [style = bold, label=""];
42->37 [style = bold, label=""];
16->23 [style = solid, label="count"];
28->15 [style = bold, label=""];
7->58 [style = bold, label=""];
25->39 [style = bold, label=""];
20->16 [style = solid, label="count"];
23->27 [style = bold, label=""];
8->32 [style = bold, label=""];
21->6 [style = bold, label=""];
36->44 [style = bold, label=""];
20->27 [style = solid, label="count"];
6->18 [style = bold, label=""];
31->0 [style = bold, label=""];
59->45 [style = bold, label=""];
50->54 [style = solid, label="count"];
46->49 [style = bold, label=""];
11->4 [style = bold, label=""];
34->33 [style = bold, label=""];
4->19 [style = bold, label=""];
39->43 [style = bold, label=""];
27->26 [style = dotted, label="true"];
22->29 [style = bold, label=""];
18->30 [style = bold, label=""];
53->47 [style = bold, label=""];
51->56 [style = bold, label=""];
19->36 [style = bold, label=""];
45->53 [style = bold, label=""];
7->20 [style = bold, label=""];
12->24 [style = bold, label=""];
27->16 [style = bold, label=""];
16->23 [style = bold, label=""];
16->17 [style = bold, label=""];
57->18 [style = bold, label=""];
58->55 [style = bold, label=""];
60->59 [style = bold, label=""];
28->29 [style = solid, label="count"];
0->15 [style = bold, label=""];
25->31 [style = bold, label=""];
35->25 [style = bold, label=""];
9->28 [style = bold, label=""];
16->17 [style = solid, label="count"];
26->16 [style = bold, label=""];
55->48 [style = bold, label=""];
3->5 [style = bold, label=""];
30->12 [style = bold, label=""];
13->27 [style = bold, label=""];
48->51 [style = bold, label=""];
52->60 [style = bold, label=""];
20->23 [style = solid, label="count"];
20->23 [style = bold, label=""];
10->8 [style = bold, label=""];
19->9 [style = bold, label=""];
23->13 [style = bold, label=""];
24->11 [style = bold, label=""];
37->38 [style = bold, label=""];
56->50 [style = bold, label=""];
23->13 [style = dotted, label="true"];
29->1 [style = solid, label="count"];
44->41 [style = bold, label=""];
56->50 [style = solid, label="count"];
21->36 [style = solid, label="git"];
29->22 [style = bold, label=""];
29->1 [style = bold, label=""];
2->7 [style = bold, label=""];
49->57 [style = bold, label=""];
38->35 [style = bold, label=""];
50->54 [style = bold, label=""];
32->3 [style = bold, label=""];
43->34 [style = bold, label=""];
1->25 [style = bold, label=""];
41->42 [style = bold, label=""];
14->21 [style = bold, label=""];
28->22 [style = bold, label=""];
40->21 [style = bold, label=""];
21->35 [style = solid, label="git"];
27->26 [style = bold, label=""];
}
