digraph {
0 [style = filled, label = "testTimeseries['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testQuery(\"SELECT SUM(cnt), dt FROM (\" + \" SELECT CAST(FLOOR(__time TO QUARTER) AS DATE) AS dt,\" + \" cnt FROM druid.foo\" + \") AS x\" + \"GROUP BY dt\" + \"ORDER BY dt\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(new PeriodGranularity(Period.months(3),null,DateTimeZone.UTC)).aggregators(aggregators(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f5ee7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f5eee))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testQuery(\"SELECT SUM(cnt), gran FROM (\" + \" SELECT floor(__time TO month) AS gran,\" + \" cnt FROM druid.foo\" + \") AS x\" + \"GROUP BY gran\" + \"ORDER BY gran\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(Granularities.MONTH).aggregators(aggregators(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f5e55,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f5e5c))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testQuery(\"SELECT SUM(cnt), gran FROM (\" + \" SELECT floor(__time TO month) AS gran,\" + \" cnt FROM druid.foo\" + \") AS x\" + \"GROUP BY gran\" + \"ORDER BY gran\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).granularity(Granularities.MONTH).aggregators(aggregators(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).context(getTimeseriesContextWithFloorTime(TIMESERIES_CONTEXT_DEFAULT,\"d0\")).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f5e9c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f5ea3))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testTimeseriesUsingFloorPlusCastAsDate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testTimeseries['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = dashed, label="0"];
1->3 [style = dashed, label="0"];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
2->3 [style = bold, label=""];
}
