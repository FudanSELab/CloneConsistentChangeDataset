digraph {
16 [style = filled, label = "server.setHandler(handler)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "url = StringUtils.format(\"jdbc:avatica:remote:url=http://127.0.0.1:%d%s\",port,DruidAvaticaHandler.AVATICA_PATH)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(ForkJoinPool.commonPool(),config.createExecutor())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlQueryId\",DUMMY_SQL_QUERY_ID)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "druidMeta = injector.getInstance()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlQueryId\",DUMMY_SQL_QUERY_ID)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final DruidSchema druidSchema = CalciteTests.createMockSchema(conglomerate,walker,plannerConfig)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "server.start()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "druidMeta = new DruidMeta(new SqlLifecycleFactory(plannerFactory,new NoopServiceEmitter(),testRequestLogger),AVATICA_CONFIG,injector)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "final SystemSchema systemSchema = CalciteTests.createMockSystemSchema(druidSchema,walker,plannerConfig)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "final SchemaPlus rootSchema = CalciteTests.createMockRootSchema(conglomerate,walker,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(-1,config.getExpireAfter())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testDefaultFromProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final PlannerFactory plannerFactory = new PlannerFactory(druidSchema,CalciteTests.createMockLookupSchema(),systemSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "final Properties properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider = JsonConfigProvider.of(keyPrefix,)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testRequestLogger = new TestRequestLogger()@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRequestLogger = new TestRequestLogger()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final DruidAvaticaHandler handler = new DruidAvaticaHandler(druidMeta,new DruidNode(\"dummy\",\"dummy\",false,1,null,true,false),new AvaticaMonitor())@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "final CaffeineCacheConfig config = caffeineCacheConfigJsonConfigProvider.get().get()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final JsonConfigurator configurator = injector.getInstance()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final Injector injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(null))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final String keyPrefix = \"cache.config.prefix\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)binder.bind().toInstance(testRequestLogger)binder.bind().toInstance(rootSchema)binder.bind().toInstance(CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate))binder.bind().toInstance(operatorTable)binder.bind().toInstance(macroTable)binder.bind().toInstance(plannerConfig)binder.bind().annotatedWith().toInstance(CalciteTests.DRUID_SCHEMA_NAME)binder.bind().toInstance(AVATICA_CONFIG)binder.bind().to()}}))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(-1L,config.getSizeInBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@35@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
31->37 [style = bold, label=""];
23->25 [style = bold, label=""];
30->38 [style = bold, label=""];
28->23 [style = solid, label="rootSchema"];
14->9 [style = solid, label="operatorTable"];
16->11 [style = bold, label=""];
5->12 [style = solid, label="url"];
5->20 [style = bold, label=""];
26->23 [style = solid, label="testRequestLogger"];
36->37 [style = solid, label="keyPrefix"];
29->10 [style = solid, label="port"];
6->21 [style = bold, label=""];
3->22 [style = solid, label="druidSchema"];
6->17 [style = solid, label="url"];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
14->23 [style = solid, label="operatorTable"];
4->15 [style = bold, label=""];
5->20 [style = solid, label="url"];
2->28 [style = solid, label="plannerConfig"];
33->32 [style = solid, label="properties"];
1->23 [style = solid, label="walker"];
31->32 [style = solid, label="configurator"];
28->26 [style = bold, label=""];
3->9 [style = solid, label="druidSchema"];
8->13 [style = solid, label="testRequestLogger"];
40->34 [style = bold, label=""];
20->6 [style = bold, label=""];
6->15 [style = solid, label="url"];
23->8 [style = bold, label=""];
3->22 [style = bold, label=""];
36->33 [style = bold, label=""];
16->6 [style = solid, label="port"];
34->30 [style = bold, label=""];
17->19 [style = bold, label=""];
1->28 [style = solid, label="walker"];
7->9 [style = solid, label="macroTable"];
19->0 [style = bold, label=""];
19->15 [style = solid, label="propertiesLosAngeles"];
14->7 [style = bold, label=""];
25->27 [style = bold, label=""];
2->22 [style = solid, label="plannerConfig"];
11->5 [style = bold, label=""];
27->16 [style = solid, label="handler"];
13->10 [style = solid, label="druidMeta"];
33->39 [style = bold, label=""];
10->16 [style = bold, label=""];
12->4 [style = bold, label=""];
18->1 [style = bold, label=""];
7->28 [style = bold, label=""];
39->31 [style = bold, label=""];
1->3 [style = solid, label="walker"];
1->22 [style = solid, label="walker"];
32->40 [style = bold, label=""];
7->23 [style = bold, label=""];
2->14 [style = bold, label=""];
26->23 [style = bold, label=""];
22->9 [style = solid, label="systemSchema"];
6->21 [style = solid, label="url"];
8->9 [style = bold, label=""];
23->13 [style = solid, label="injector"];
25->27 [style = solid, label="druidMeta"];
37->32 [style = bold, label=""];
5->6 [style = solid, label="url"];
21->12 [style = solid, label="propertiesLosAngeles"];
29->10 [style = bold, label=""];
1->2 [style = bold, label=""];
2->9 [style = solid, label="plannerConfig"];
24->1 [style = bold, label=""];
27->29 [style = bold, label=""];
35->36 [style = bold, label=""];
22->14 [style = bold, label=""];
1->9 [style = solid, label="walker"];
16->11 [style = solid, label="port"];
10->5 [style = solid, label="handler"];
2->23 [style = solid, label="plannerConfig"];
7->23 [style = solid, label="macroTable"];
21->17 [style = bold, label=""];
2->3 [style = solid, label="plannerConfig"];
9->13 [style = solid, label="plannerFactory"];
9->13 [style = bold, label=""];
29->5 [style = solid, label="port"];
}
