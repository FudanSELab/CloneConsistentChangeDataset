digraph {
0 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "facetHolder = new IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(,\"firstName\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "context.checking(new Expectations(){})@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "context.checking(new Expectations(){})@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "methodRemover = new ProgrammableMethodRemover()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "mockAuthenticationSession = context.mock()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mockSpecificationLoader = context.mock()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "mockTransactionStateProviderInternal = context.mock()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "setUpFacetedMethodAndParameter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "mockTranslationService = context.mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "setUpFacetedMethodAndParameter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "facetHolder = new AbstractFacetFactoryTest.IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(,\"firstName\"))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "stubConfiguration = new IsisConfigurationDefault()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "mockPersistenceSessionServiceInternal = context.mock()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "stubServicesInjector = context.mock()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "mockAuthenticationSessionProvider = context.mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "stubServicesInjector = new ServicesInjector(Lists.newArrayList(mockTransactionStateProviderInternal,stubConfiguration,mockAuthenticationSessionProvider,mockSpecificationLoader,mockDeploymentCategoryProvider,mockPersistenceSessionServiceInternal),stubConfiguration)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "mockDeploymentCategoryProvider = context.mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a29580@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
4->3 [style = bold, label=""];
1->5 [style = dashed, label="0"];
10->15 [style = bold, label=""];
7->12 [style = bold, label=""];
15->17 [style = solid, label="mockTransactionStateProviderInternal"];
22->17 [style = solid, label="mockDeploymentCategoryProvider"];
19->17 [style = bold, label=""];
23->8 [style = bold, label=""];
15->19 [style = bold, label=""];
22->23 [style = bold, label=""];
9->16 [style = bold, label=""];
16->17 [style = solid, label="stubConfiguration"];
20->10 [style = bold, label=""];
10->17 [style = solid, label="mockPersistenceSessionServiceInternal"];
2->0 [style = bold, label=""];
3->2 [style = bold, label=""];
21->22 [style = bold, label=""];
0->1 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
14->13 [style = bold, label=""];
18->7 [style = bold, label=""];
13->21 [style = bold, label=""];
16->20 [style = bold, label=""];
19->17 [style = solid, label="mockSpecificationLoader"];
23->17 [style = solid, label="mockAuthenticationSessionProvider"];
0->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
