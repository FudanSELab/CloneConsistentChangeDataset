digraph {
41 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),b.getField(\"author\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),a.getField(\"abstract\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "BibEntry tmp = a@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"article\",a.getType())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),second.getField(\"title\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "second = tmp@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"89\"),a.getField(\"volume\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "a = b@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),b.getField(\"title\"))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BibEntry b = entries.get(1)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),a.getField(\"title\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),first.getField(\"abstract\"))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),a.getField(\"author\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),a.getField(\"journal\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "testImportEntriesINSPEC['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,entries.size())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"4\"),first.getField(\"number\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"20\"),a.getField(\"number\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),b.getField(\"title\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "b = tmp@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestInspec.isi\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),a.getField(\"journal\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(Optional.empty(),a.getField(\"month\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),first.getField(\"month\"))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),a.getField(\"author\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"3\"),b.getField(\"number\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BibEntry tmp = first@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),first.getField(\"title\"))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertEquals(\"article\",a.getType())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(Optional.of(\"2006\"),a.getField(\"year\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testImportEntriesMedline['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),first.getField(\"publisher\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"#may#\"),b.getField(\"month\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"article\",b.getType())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"89\"),first.getField(\"volume\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),a.getField(\"pages\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"article\",first.getType())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"13\"),b.getField(\"volume\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "first = second@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),first.getField(\"journal\"))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "assertEquals(\"article\",b.getType())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"2006\"),b.getField(\"year\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),b.getField(\"pages\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"12\"),a.getField(\"volume\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"4\"),a.getField(\"number\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),first.getField(\"author\"))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "first.getField(\"title\").equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),a.getField(\"title\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),a.getField(\"publisher\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "a.getField(\"title\").equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@8@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(\"year\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),a.getField(\"month\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testImportEntriesINSPEC['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BibEntry a = entries.get(0)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->20 [style = dotted, label="true"];
5->55 [style = bold, label=""];
39->19 [style = bold, label=""];
58->50 [style = bold, label=""];
48->49 [style = bold, label=""];
2->19 [style = bold, label=""];
8->47 [style = dashed, label="0"];
42->46 [style = bold, label=""];
17->1 [style = bold, label=""];
9->42 [style = dashed, label="0"];
57->51 [style = bold, label=""];
16->10 [style = bold, label=""];
47->18 [style = bold, label=""];
33->32 [style = dotted, label="true"];
6->18 [style = bold, label=""];
36->32 [style = solid, label="second"];
17->1 [style = dotted, label="true"];
0->12 [style = bold, label=""];
27->28 [style = bold, label=""];
18->11 [style = bold, label=""];
14->5 [style = bold, label=""];
2->34 [style = bold, label=""];
28->31 [style = bold, label=""];
25->32 [style = bold, label=""];
1->20 [style = solid, label="tmp"];
31->29 [style = bold, label=""];
54->48 [style = bold, label=""];
7->20 [style = bold, label=""];
46->47 [style = bold, label=""];
5->17 [style = bold, label=""];
12->6 [style = bold, label=""];
1->7 [style = bold, label=""];
36->33 [style = bold, label=""];
22->23 [style = bold, label=""];
53->45 [style = bold, label=""];
11->15 [style = bold, label=""];
26->22 [style = bold, label=""];
4->0 [style = bold, label=""];
20->4 [style = bold, label=""];
5->7 [style = solid, label="b"];
15->50 [style = dashed, label="0"];
13->46 [style = dashed, label="0"];
56->58 [style = bold, label=""];
33->25 [style = dotted, label="true"];
10->51 [style = dashed, label="0"];
23->37 [style = bold, label=""];
19->14 [style = bold, label=""];
14->1 [style = solid, label="a"];
50->42 [style = bold, label=""];
11->58 [style = dashed, label="0"];
33->25 [style = bold, label=""];
51->2 [style = bold, label=""];
15->9 [style = bold, label=""];
7->45 [style = dashed, label="0"];
19->26 [style = bold, label=""];
34->25 [style = solid, label="first"];
34->36 [style = bold, label=""];
55->53 [style = bold, label=""];
44->52 [style = bold, label=""];
30->10 [style = bold, label=""];
8->21 [style = bold, label=""];
45->56 [style = bold, label=""];
7->40 [style = dashed, label="0"];
40->24 [style = bold, label=""];
10->2 [style = bold, label=""];
32->39 [style = bold, label=""];
29->38 [style = bold, label=""];
18->41 [style = bold, label=""];
17->7 [style = dotted, label="true"];
33->19 [style = bold, label=""];
13->8 [style = bold, label=""];
38->35 [style = bold, label=""];
43->44 [style = bold, label=""];
41->43 [style = bold, label=""];
24->27 [style = bold, label=""];
17->4 [style = bold, label=""];
37->40 [style = bold, label=""];
25->39 [style = solid, label="tmp"];
52->54 [style = bold, label=""];
21->3 [style = bold, label=""];
9->13 [style = bold, label=""];
33->39 [style = dotted, label="true"];
}
