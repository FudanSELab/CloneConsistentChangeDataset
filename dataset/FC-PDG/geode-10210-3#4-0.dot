digraph {
12 [style = filled, label = "create_succeedsOnAllMembers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "doReturn(Collections.singleton(mock())).when(memberValidator).findMembers(any())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "doReturn(null).when(persistenceService).getConfiguration(any())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "delete_succeedsOnAllMembers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(result.isSuccessful()).isTrue()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "doReturn(mockRegion).when(persistenceService).getConfigurationRegion()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Region mockRegion = mock()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CacheConfig cacheConfig = new CacheConfig()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RegionConfig regionConfig = new RegionConfig()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "regionConfig.setName(\"test\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when(persistenceService.getCacheConfig(\"cluster\",true)).thenReturn(cacheConfig)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(config.getRegions()).isEmpty()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "functionResults.add(new CliFunctionResult(\"member1\",true,\"success\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "doReturn(mockRegion).when(persistenceService).getConfigurationRegion()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "create_succeedsOnAllMembers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "functionResults.add(new CliFunctionResult(\"member2\",true,\"failed\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(cacheConfig.getRegions()).hasSize(1)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "doReturn(config).when(persistenceService).getCacheConfig(eq(\"cluster\"),anyBoolean())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Region mockRegion = mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "CacheConfig config = new CacheConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "result = service.delete(regionConfig)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "config.getRegions().add(regionConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<CliFunctionResult> functionResults = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(regionValidator.exists(eq(\"test\"),any())).thenReturn(true)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "doReturn(null).when(persistenceService).getConfiguration(any())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "doReturn(functionResults).when(service).executeAndGetFunctionResult(any(),any(),any())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "doReturn(Collections.singleton(mock())).when(service).findMembers(any())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->23 [style = dashed, label="0"];
26->18 [style = bold, label=""];
21->3 [style = bold, label=""];
15->1 [style = bold, label=""];
10->2 [style = bold, label=""];
2->11 [style = bold, label=""];
7->9 [style = bold, label=""];
25->19 [style = bold, label=""];
4->5 [style = bold, label=""];
19->0 [style = bold, label=""];
1->6 [style = bold, label=""];
3->13 [style = bold, label=""];
20->25 [style = solid, label="regionConfig"];
11->17 [style = dashed, label="0"];
0->10 [style = bold, label=""];
1->6 [style = solid, label="cacheConfig"];
5->0 [style = bold, label=""];
6->14 [style = bold, label=""];
22->26 [style = bold, label=""];
12->3 [style = bold, label=""];
16->3 [style = bold, label=""];
23->20 [style = bold, label=""];
20->26 [style = solid, label="regionConfig"];
2->22 [style = bold, label=""];
9->15 [style = dashed, label="0"];
20->24 [style = bold, label=""];
10->26 [style = dashed, label="0"];
8->7 [style = bold, label=""];
18->17 [style = bold, label=""];
9->23 [style = bold, label=""];
7->15 [style = bold, label=""];
24->25 [style = bold, label=""];
13->8 [style = bold, label=""];
14->4 [style = bold, label=""];
9->1 [style = bold, label=""];
0->22 [style = dashed, label="0"];
}
