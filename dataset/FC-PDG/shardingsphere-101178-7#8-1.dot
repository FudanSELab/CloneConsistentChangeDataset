digraph {
8 [style = filled, label = "executeQuery0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return executeQueryByCalcite()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ExecutionGroupContext<JDBCExecutionUnit> executionGroupContext = createExecutionContext()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "executeQuery0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cacheStatements(executionGroupContext.getInputGroups())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return driverJDBCExecutor.executeQuery(executionGroupContext,executionContext.getSqlStatementContext(),callback)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ExecutionGroupContext<JDBCExecutionUnit> executionGroupContext = createExecutionGroupContext()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return rawExecutor.execute(createRawExecutionContext(),new RawSQLExecutorCallback()).stream().map(null).collect(Collectors.toList())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "return driverJDBCExecutor.executeQuery(executionGroupContext,executionContext.getSqlStatementContext(),new PreparedStatementExecuteQueryCallback(metaDataContexts.getDefaultMetaData().getResource().getDatabaseType(),sqlStatement,SQLExecutorExceptionHandler.isExceptionThrown()))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().stream().anyMatch(null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return rawExecutor.execute(createRawExecutionGroupContext(),new RawSQLExecutorCallback()).stream().map(null).collect(Collectors.toList())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return rawExecutor.execute(createRawExecutionContext(),executionContext.getSqlStatementContext(),new RawSQLExecutorCallback()).stream().map(null).collect(Collectors.toList())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "executeQuery0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "StatementExecuteQueryCallback callback = new StatementExecuteQueryCallback(metaDataContexts.getDefaultMetaData().getResource().getDatabaseType(),executionContext.getSqlStatementContext().getSqlStatement(),SQLExecutorExceptionHandler.isExceptionThrown())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "executionContext.getRouteContext().isToCalcite()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
4->5 [style = solid, label="executionGroupContext"];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
0->5 [style = solid, label="callback"];
6->13 [style = dotted, label="true"];
8->6 [style = bold, label=""];
0->11 [style = dashed, label="0"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
3->13 [style = dashed, label="0"];
12->6 [style = bold, label=""];
10->6 [style = bold, label=""];
7->14 [style = bold, label=""];
14->11 [style = solid, label="executionGroupContext"];
2->0 [style = bold, label=""];
6->9 [style = dotted, label="true"];
3->7 [style = bold, label=""];
3->9 [style = dashed, label="0"];
13->7 [style = bold, label=""];
6->13 [style = bold, label=""];
1->14 [style = bold, label=""];
14->2 [style = bold, label=""];
4->14 [style = dashed, label="0"];
6->9 [style = bold, label=""];
6->3 [style = dotted, label="true"];
7->1 [style = dotted, label="true"];
6->7 [style = bold, label=""];
2->11 [style = bold, label=""];
0->5 [style = bold, label=""];
}
