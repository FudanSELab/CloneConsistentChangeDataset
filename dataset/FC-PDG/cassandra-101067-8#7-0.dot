digraph {
13 [style = filled, label = "{FileUtils.closeQuietly(reader)}@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-get-test\",\"tt\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "boolean isStatic@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "generateTree['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final long minToken@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "builder.finish()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final long minToken@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "builder.write(writer)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "builder.finish()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "boolean isStatic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final long maxToken@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "treeFile.deleteOnExit()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "generateTree['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "RandomAccessReader reader = null@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final TokenTreeBuilder builder = isStatic? new StaticTokenTreeBuilder(new FakeCombinedTerm(toks)): new DynamicTokenTreeBuilder(toks)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return new TokenTree(new MappedBuffer(reader))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "buildTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "reader = RandomAccessReader.open(treeFile)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long maxToken@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return new TokenTree(new MappedBuffer(reader))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final RandomAccessReader reader = RandomAccessReader.open(treeFile)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "writer.sync()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "writer.sync()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final SortedMap<Long,KeyOffsets> toks = new TreeMap<Long,KeyOffsets>(){}@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-\",\"db\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "builder.write(writer)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "treeFile.deleteOnExit()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final SortedMap<Long,LongSet> toks = new TreeMap<Long,LongSet>(){}@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27->23 [style = solid, label="treeFile"];
4->3 [style = bold, label=""];
23->21 [style = solid, label="reader"];
18->16 [style = dotted, label="true"];
27->28 [style = bold, label=""];
18->15 [style = bold, label=""];
18->19 [style = dotted, label="true"];
25->24 [style = dotted, label="true"];
16->1 [style = solid, label="isStatic"];
7->4 [style = bold, label=""];
3->12 [style = bold, label=""];
7->6 [style = solid, label="treeFile"];
10->6 [style = bold, label=""];
5->1 [style = solid, label="toks"];
15->1 [style = solid, label="toks"];
7->27 [style = dashed, label="0"];
6->14 [style = bold, label=""];
5->1 [style = bold, label=""];
26->27 [style = bold, label=""];
6->14 [style = solid, label="reader"];
12->10 [style = bold, label=""];
20->23 [style = bold, label=""];
8->5 [style = bold, label=""];
22->20 [style = bold, label=""];
23->21 [style = bold, label=""];
11->19 [style = dashed, label="0"];
25->26 [style = bold, label=""];
8->11 [style = dotted, label="true"];
8->0 [style = dotted, label="true"];
1->2 [style = bold, label=""];
18->17 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
6->13 [style = solid, label="reader"];
5->15 [style = dashed, label="0"];
10->23 [style = dashed, label="0"];
28->22 [style = bold, label=""];
11->1 [style = solid, label="isStatic"];
15->1 [style = bold, label=""];
}
