digraph {
27 [style = filled, label = "doOnUnsubscribe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "TestObserver<Long> observer = new TestObserver<Long>()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<Disposable> subscriptions = new ArrayList<Disposable>()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Observable<Long> longs = Observable.interval(50,TimeUnit.MILLISECONDS).doOnDispose(new Action(){@Override public void run(){upperLatch.countDown()upperCount.incrementAndGet()}}).doOnNext(new Consumer<Long>(){@Override public void accept(Long aLong){onNextLatch.countDown()}}).doOnDispose(new Action(){@Override public void run(){lowerLatch.countDown()lowerCount.incrementAndGet()}})@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<TestSubscriber<Long>> subscribers = new ArrayList<TestSubscriber<Long>>()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "subscriptions.get(i).dispose()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "subscribers.add(observer)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "subscribers.add(subscriber)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "++i@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < subCount@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "onNextLatch.await()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "subscriptions.add(Disposables.fromSubscription(subscriber))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int subCount = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doOnUnsubscribe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "longs.subscribe(subscriber)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "subscriptions.add(observer)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "doOnUnsubscribe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "longs.subscribe(observer)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final AtomicInteger upperCount = new AtomicInteger()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "subscriptions.add(Disposable.fromSubscription(subscriber))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "++i@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "upperLatch.await()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Flowable<Long> longs = Flowable.interval(50,TimeUnit.MILLISECONDS).doOnCancel(new Action(){@Override public void run(){upperLatch.countDown()upperCount.incrementAndGet()}}).doOnNext(new Consumer<Long>(){@Override public void accept(Long aLong){onNextLatch.countDown()}}).doOnCancel(new Action(){@Override public void run(){lowerLatch.countDown()lowerCount.incrementAndGet()}})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestSubscriber<Long> subscriber = new TestSubscriber<Long>()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(String.format(\"There should exactly %d un-subscription events for lower stream\",subCount),subCount,lowerCount.get())@@@46@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final AtomicInteger lowerCount = new AtomicInteger()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final CountDownLatch upperLatch = new CountDownLatch(subCount)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(String.format(\"There should exactly %d un-subscription events for upper stream\",subCount),subCount,upperCount.get())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final CountDownLatch onNextLatch = new CountDownLatch(subCount)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final CountDownLatch lowerLatch = new CountDownLatch(subCount)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<TestObserver<Long>> subscribers = new ArrayList<TestObserver<Long>>()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i < subCount@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "lowerLatch.await()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->26 [style = bold, label=""];
16->8 [style = dotted, label="true"];
20->17 [style = bold, label=""];
22->26 [style = solid, label="subscriber"];
17->12 [style = solid, label="subCount"];
22->15 [style = bold, label=""];
30->17 [style = bold, label=""];
16->34 [style = dotted, label="true"];
24->2 [style = bold, label=""];
3->1 [style = bold, label=""];
21->0 [style = bold, label=""];
0->10 [style = dotted, label="true"];
7->12 [style = bold, label=""];
15->28 [style = dashed, label="0"];
8->33 [style = dashed, label="0"];
31->24 [style = bold, label=""];
29->9 [style = bold, label=""];
8->3 [style = bold, label=""];
34->33 [style = solid, label="observer"];
4->21 [style = bold, label=""];
16->34 [style = bold, label=""];
26->8 [style = bold, label=""];
5->18 [style = bold, label=""];
9->16 [style = solid, label="i"];
2->9 [style = bold, label=""];
34->28 [style = solid, label="observer"];
24->29 [style = bold, label=""];
16->22 [style = dotted, label="true"];
16->22 [style = bold, label=""];
11->24 [style = bold, label=""];
25->6 [style = bold, label=""];
22->34 [style = dashed, label="0"];
13->11 [style = bold, label=""];
16->3 [style = dotted, label="true"];
9->16 [style = bold, label=""];
16->33 [style = dotted, label="true"];
16->26 [style = dotted, label="true"];
22->15 [style = solid, label="subscriber"];
22->8 [style = solid, label="subscriber"];
17->7 [style = bold, label=""];
34->28 [style = bold, label=""];
17->18 [style = solid, label="subCount"];
6->5 [style = bold, label=""];
22->3 [style = solid, label="subscriber"];
19->14 [style = bold, label=""];
0->23 [style = bold, label=""];
17->19 [style = solid, label="subCount"];
28->33 [style = bold, label=""];
16->1 [style = dotted, label="true"];
34->32 [style = solid, label="observer"];
1->16 [style = bold, label=""];
0->25 [style = bold, label=""];
11->31 [style = dashed, label="0"];
2->29 [style = dashed, label="0"];
32->1 [style = bold, label=""];
10->0 [style = bold, label=""];
27->17 [style = bold, label=""];
17->16 [style = solid, label="subCount"];
23->10 [style = bold, label=""];
15->26 [style = dashed, label="0"];
16->32 [style = dotted, label="true"];
17->0 [style = solid, label="subCount"];
33->32 [style = bold, label=""];
0->23 [style = dotted, label="true"];
14->13 [style = bold, label=""];
13->31 [style = bold, label=""];
16->4 [style = bold, label=""];
12->19 [style = bold, label=""];
16->28 [style = dotted, label="true"];
3->32 [style = dashed, label="0"];
21->0 [style = solid, label="i"];
17->5 [style = solid, label="subCount"];
15->8 [style = bold, label=""];
17->7 [style = solid, label="subCount"];
16->15 [style = dotted, label="true"];
}
