digraph {
11 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.manifests(),snapshot.manifests())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.manifests(),snapshot.manifests())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Operation should match\",expected.operation(),snapshot.operation())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0 for v1\",0,snapshot.sequenceNumber())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),DataOperations.REPLACE,ImmutableMap.of(\"files-added\",\"4\",\"files-deleted\",\"100\"),manifests)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "writer.addAll(manifests)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "File manifestList = temp.newFile(\"manifests\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "long parentId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(\"Files should match in memory list\",inMemory.manifests(),expected.manifests())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testJsonConversionWithOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertNull(\"Operation should be null\",snapshot.operation())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertNull(\"Summary should be null\",snapshot.summary())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(manifestList.delete())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testJsonConversionWithManifestList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testJsonConversionWithOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),null,null,localInput(manifestList))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "manifestList.deleteOnExit()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Snapshot inMemory = new BaseSnapshot(ops.io(),id,parentId,expected.timestampMillis(),null,null,manifests)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<ManifestFile> manifests = ImmutableList.of(new GenericManifestFile(localInput(\"file:/tmp/manifest1.avro\"),0),new GenericManifestFile(localInput(\"file:/tmp/manifest2.avro\"),0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "long id = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->21 [style = bold, label=""];
6->11 [style = solid, label="manifests"];
6->31 [style = solid, label="manifests"];
25->18 [style = solid, label="manifestList"];
14->7 [style = bold, label=""];
16->24 [style = bold, label=""];
3->11 [style = bold, label=""];
7->8 [style = bold, label=""];
11->12 [style = bold, label=""];
17->27 [style = bold, label=""];
2->26 [style = bold, label=""];
20->10 [style = bold, label=""];
8->4 [style = bold, label=""];
6->0 [style = solid, label="manifests"];
10->0 [style = solid, label="parentId"];
12->2 [style = bold, label=""];
6->0 [style = bold, label=""];
0->9 [style = bold, label=""];
13->6 [style = bold, label=""];
2->26 [style = solid, label="json"];
23->16 [style = bold, label=""];
13->19 [style = solid, label="id"];
6->28 [style = solid, label="manifests"];
5->10 [style = bold, label=""];
1->14 [style = bold, label=""];
21->29 [style = bold, label=""];
24->22 [style = bold, label=""];
6->19 [style = solid, label="manifests"];
12->21 [style = dashed, label="0"];
10->19 [style = solid, label="parentId"];
6->27 [style = solid, label="manifests"];
13->0 [style = solid, label="id"];
10->13 [style = bold, label=""];
18->19 [style = bold, label=""];
22->28 [style = bold, label=""];
13->18 [style = solid, label="id"];
31->2 [style = bold, label=""];
6->25 [style = bold, label=""];
2->29 [style = dashed, label="0"];
27->18 [style = bold, label=""];
10->18 [style = solid, label="parentId"];
10->4 [style = solid, label="parentId"];
18->2 [style = solid, label="expected"];
26->23 [style = bold, label=""];
19->31 [style = bold, label=""];
1->7 [style = bold, label=""];
30->17 [style = bold, label=""];
25->30 [style = bold, label=""];
9->1 [style = bold, label=""];
4->3 [style = bold, label=""];
15->10 [style = bold, label=""];
0->9 [style = solid, label="expected"];
9->1 [style = solid, label="json"];
10->24 [style = solid, label="parentId"];
}
