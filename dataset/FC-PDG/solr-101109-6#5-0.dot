digraph {
52 [style = filled, label = "fieldTypeAttributes.put(\"class\",\"solr.TextField\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,currentFieldTypesResponse.getStatus())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(analyzerDefinition.getTokenizer().get(\"class\"),is(equalTo(newFieldTypeRepresentation.getAnalyzer().getTokenizer().get(\"class\"))))@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "fieldTypeAttributes.put(\"positionIncrementGap\",\"100\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SchemaResponse.UpdateResponse addFieldResponse = addFieldRequest.process(getSolrClient())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "tokenizerAttributes.put(\"class\",\"solr.WhitespaceTokenizerFactory\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(fieldTypeName,is(equalTo(newFieldTypeRepresentation.getAttributes().get(\"name\"))))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,Object> tokenizerAttributes = new LinkedHashMap<>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<String,Object> fieldTypeAttributes = new LinkedHashMap<>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,Object> charFilterAttributes = new LinkedHashMap<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertValidSchemaResponse(addDynamicFieldResponse)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertValidSchemaResponse(initialFieldTypesResponse)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "analyzerDefinition.setFilters(Collections.singletonList(filterAttributes))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,Object> fieldAttributes = new LinkedHashMap<>()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testGetFieldTypesAccuracy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "filterAttributes.put(\"preserveOriginal\",\"0\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "FieldTypeDefinition fieldTypeDefinition = new FieldTypeDefinition()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "fieldTypeAttributes.put(\"name\",fieldTypeName)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(\"solr.TextField\",is(equalTo(newFieldTypeRepresentation.getAttributes().get(\"class\"))))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertValidSchemaResponse(newFieldTypeResponse)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Map<String,Object> filterAttributes = new LinkedHashMap<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "charFilterAttributes.put(\"replacement\",\"$1$1\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "filterAttributes.put(\"class\",\"solr.WordDelimiterGraphFilterFactory\")@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "testAddFieldTypeAccuracy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "SchemaResponse.FieldTypesResponse fieldTypesResponse = fieldTypesRequest.process(getSolrClient())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "charFilterAttributes.put(\"class\",\"solr.PatternReplaceCharFilterFactory\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "analyzerDefinition.setCharFilters(Collections.singletonList(charFilterAttributes))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testAddFieldTypeAccuracy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "List<FieldTypeRepresentation> fieldTypes = fieldTypesResponse.getFieldTypes()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertThat(fieldTypes.isEmpty(),is(false))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "SchemaResponse.FieldTypesResponse initialFieldTypesResponse = fieldTypesRequest.process(getSolrClient())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertValidSchemaResponse(addFieldResponse)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "dynamicFieldAttributes.put(\"type\",fieldTypeName)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "AnalyzerDefinition analyzerDefinition = new AnalyzerDefinition()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertValidSchemaResponse(addFieldTypeResponse)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "charFilterAttributes.put(\"pattern\",\"((a-zA-Z()\\1+\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fieldAttributes.put(\"name\",fieldName)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SchemaRequest.AddFieldType addFieldTypeRequest = new SchemaRequest.AddFieldType(fieldTypeDefinition)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(initialFieldTypes.size() + 1,currentFieldTypes.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SchemaResponse.UpdateResponse addDynamicFieldResponse = addDynamicFieldRequest.process(getSolrClient())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SchemaResponse.UpdateResponse addFieldTypeResponse = addFieldTypeRequest.process(getSolrClient())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "List<FieldTypeRepresentation> initialFieldTypes = initialFieldTypesResponse.getFieldTypes()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SchemaRequest.FieldTypes fieldTypesRequest = new SchemaRequest.FieldTypes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "fieldTypeDefinition.setAttributes(fieldTypeAttributes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FieldTypeRepresentation newFieldTypeRepresentation = newFieldTypeResponse.getFieldType()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "analyzerDefinition.setTokenizer(tokenizerAttributes)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "dynamicFieldAttributes.put(\"name\",dynamicFieldName)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "String dynamicFieldName = \"*_accuracy\"@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SchemaResponse.FieldTypeResponse newFieldTypeResponse = fieldTypeRequest.process(getSolrClient())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "SchemaRequest.AddField addFieldRequest = new SchemaRequest.AddField(fieldAttributes)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<FieldTypeRepresentation> currentFieldTypes = currentFieldTypesResponse.getFieldTypes()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "filterAttributes.put(\"class\",\"solr.WordDelimiterFilterFactory\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "SchemaRequest.FieldType fieldTypeRequest = new SchemaRequest.FieldType(fieldTypeName)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "fieldAttributes.put(\"type\",fieldTypeName)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String fieldName = \"accuracyField\"@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "SchemaRequest.AddDynamicField addDynamicFieldRequest = new SchemaRequest.AddDynamicField(dynamicFieldAttributes)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String fieldTypeName = \"accuracyTextField\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "SchemaResponse.FieldTypesResponse currentFieldTypesResponse = fieldTypesRequest.process(getSolrClient())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Map<String,Object> dynamicFieldAttributes = new LinkedHashMap<>()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertValidSchemaResponse(fieldTypesResponse)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fieldTypeDefinition.setAnalyzer(analyzerDefinition)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->1 [style = bold, label=""];
19->30 [style = solid, label="fieldTypeAttributes"];
24->58 [style = bold, label=""];
24->34 [style = bold, label=""];
58->60 [style = bold, label=""];
8->6 [style = bold, label=""];
15->16 [style = solid, label="fieldTypeDefinition"];
53->54 [style = bold, label=""];
11->9 [style = bold, label=""];
38->23 [style = solid, label="fieldTypeName"];
28->14 [style = bold, label=""];
3->27 [style = bold, label=""];
3->27 [style = solid, label="addFieldTypeResponse"];
43->24 [style = bold, label=""];
37->48 [style = bold, label=""];
5->30 [style = bold, label=""];
4->16 [style = bold, label=""];
46->36 [style = solid, label="dynamicFieldName"];
16->3 [style = bold, label=""];
38->9 [style = solid, label="fieldTypeName"];
47->56 [style = dashed, label="0"];
41->21 [style = bold, label=""];
40->0 [style = bold, label=""];
53->20 [style = bold, label=""];
18->12 [style = bold, label=""];
46->36 [style = bold, label=""];
48->28 [style = solid, label="dynamicFieldAttributes"];
14->41 [style = solid, label="addDynamicFieldResponse"];
26->4 [style = bold, label=""];
32->26 [style = bold, label=""];
39->7 [style = solid, label="charFilterAttributes"];
57->24 [style = bold, label=""];
50->28 [style = bold, label=""];
35->52 [style = bold, label=""];
17->29 [style = solid, label="tokenizerAttributes"];
34->58 [style = dashed, label="0"];
45->11 [style = bold, label=""];
12->51 [style = bold, label=""];
33->29 [style = bold, label=""];
52->5 [style = bold, label=""];
0->37 [style = solid, label="addFieldResponse"];
21->22 [style = bold, label=""];
31->4 [style = solid, label="analyzerDefinition"];
36->50 [style = bold, label=""];
38->35 [style = bold, label=""];
19->38 [style = bold, label=""];
60->56 [style = bold, label=""];
6->13 [style = solid, label="fieldName"];
7->17 [style = bold, label=""];
53->26 [style = solid, label="filterAttributes"];
22->45 [style = bold, label=""];
38->21 [style = solid, label="fieldTypeName"];
15->19 [style = bold, label=""];
1->7 [style = bold, label=""];
48->46 [style = bold, label=""];
34->10 [style = solid, label="initialFieldTypesResponse"];
20->54 [style = dashed, label="0"];
30->31 [style = bold, label=""];
6->13 [style = bold, label=""];
49->2 [style = bold, label=""];
44->25 [style = bold, label=""];
31->39 [style = bold, label=""];
51->8 [style = bold, label=""];
9->49 [style = bold, label=""];
22->45 [style = solid, label="newFieldTypeResponse"];
56->59 [style = bold, label=""];
14->41 [style = bold, label=""];
58->60 [style = solid, label="fieldTypesResponse"];
29->53 [style = bold, label=""];
42->18 [style = bold, label=""];
47->15 [style = bold, label=""];
39->44 [style = bold, label=""];
0->37 [style = bold, label=""];
38->35 [style = solid, label="fieldTypeName"];
55->24 [style = bold, label=""];
20->32 [style = bold, label=""];
17->33 [style = bold, label=""];
34->10 [style = bold, label=""];
38->50 [style = solid, label="fieldTypeName"];
27->42 [style = bold, label=""];
8->40 [style = solid, label="fieldAttributes"];
23->40 [style = bold, label=""];
10->60 [style = dashed, label="0"];
10->47 [style = bold, label=""];
13->23 [style = bold, label=""];
54->32 [style = bold, label=""];
}
