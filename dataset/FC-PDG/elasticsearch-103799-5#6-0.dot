digraph {
11 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(2,cache.numRegisteredCloseListeners())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2,cache.count())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "cache.invalidate(entity,reader,termBytes)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "cache.clear(entity)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "Loader loader = new Loader(reader,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TestEntity secondEntity = new TestEntity(requestCacheStats,indexShard)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "cache.cleanCache()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "DirectoryReader secondReader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "writer.updateDocument(new Term(\"id\",\"0\"),newDoc(0,\"bar\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "loader = new Loader(reader,0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(1,cache.count())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "testCacheDifferentReaders['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "randomBoolean()@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(0,cache.count())@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(2,cache.count())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "loader = new Loader(reader,0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(0,cache.count())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "indexShard.set(false)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "loader = new Loader(secondReader,0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(1,cache.count())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "secondReader.close()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "reader.close()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "testInvalidate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes,null)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final int cacheSize = requestCacheStats.stats().getMemorySize().bytesAsInt()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@58@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "randomBoolean()@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "reader.close()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes,null)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(1,cache.count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache.clear(secondEntity)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IOUtils.close(secondReader,writer,dir,cache)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "writer = new IndexWriter(dir,newIndexWriterConfig())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@82@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "writer.flush()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "IOUtils.close(writer)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Directory dir = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "indexShard.set(false)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(cacheSize,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "cache.cleanCache()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "assertEquals(1,cache.count())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "secondEntity = new TestEntity(requestCacheStats,indexShard)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "loader = new Loader(secondReader,0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "loader = new Loader(reader,0)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "randomBoolean()@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "testCacheDifferentReaders['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
102 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "cache.cleanCache()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > cacheSize + value.length())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30->17 [style = solid, label="requestCacheStats"];
77->73 [style = dotted, label="true"];
103->56 [style = solid, label="entity"];
5->14 [style = bold, label=""];
31->54 [style = bold, label=""];
20->23 [style = bold, label=""];
11->46 [style = bold, label=""];
96->100 [style = bold, label=""];
89->87 [style = bold, label=""];
93->103 [style = solid, label="requestCacheStats"];
48->56 [style = dotted, label="false"];
21->22 [style = bold, label=""];
65->33 [style = bold, label=""];
3->55 [style = bold, label=""];
49->55 [style = bold, label=""];
53->80 [style = bold, label=""];
106->107 [style = bold, label=""];
51->92 [style = solid, label="reader"];
107->82 [style = bold, label=""];
60->16 [style = bold, label=""];
39->27 [style = bold, label=""];
51->95 [style = solid, label="reader"];
6->12 [style = solid, label="indexShard"];
40->53 [style = bold, label=""];
30->12 [style = solid, label="requestCacheStats"];
4->8 [style = bold, label=""];
72->2 [style = bold, label=""];
62->26 [style = solid, label="reader"];
93->43 [style = solid, label="requestCacheStats"];
53->31 [style = bold, label=""];
92->90 [style = bold, label=""];
102->101 [style = bold, label=""];
0->61 [style = bold, label=""];
80->105 [style = bold, label=""];
64->10 [style = bold, label=""];
16->1 [style = bold, label=""];
6->9 [style = solid, label="indexShard"];
30->9 [style = solid, label="requestCacheStats"];
55->29 [style = bold, label=""];
30->7 [style = bold, label=""];
10->40 [style = bold, label=""];
97->95 [style = solid, label="loader"];
68->103 [style = solid, label="indexShard"];
24->104 [style = bold, label=""];
58->70 [style = bold, label=""];
105->96 [style = bold, label=""];
82->78 [style = bold, label=""];
62->92 [style = solid, label="termBytes"];
29->38 [style = bold, label=""];
30->102 [style = solid, label="dir"];
26->56 [style = bold, label=""];
36->0 [style = solid, label="cache"];
2->49 [style = dotted, label="true"];
30->98 [style = solid, label="dir"];
74->75 [style = bold, label=""];
43->44 [style = bold, label=""];
73->0 [style = solid, label="writer"];
62->53 [style = solid, label="termBytes"];
44->57 [style = bold, label=""];
90->86 [style = bold, label=""];
51->0 [style = solid, label="writer"];
1->5 [style = bold, label=""];
28->45 [style = bold, label=""];
43->23 [style = solid, label="termBytes"];
63->72 [style = bold, label=""];
24->35 [style = bold, label=""];
46->25 [style = bold, label=""];
68->43 [style = bold, label=""];
66->59 [style = bold, label=""];
89->92 [style = solid, label="loader"];
14->39 [style = bold, label=""];
36->6 [style = bold, label=""];
51->97 [style = solid, label="reader"];
12->56 [style = solid, label="entity"];
83->93 [style = bold, label=""];
71->64 [style = bold, label=""];
69->62 [style = solid, label="termQuery"];
33->20 [style = bold, label=""];
56->104 [style = bold, label=""];
62->21 [style = solid, label="reader"];
13->50 [style = bold, label=""];
17->19 [style = solid, label="secondEntity"];
79->84 [style = bold, label=""];
37->21 [style = bold, label=""];
43->95 [style = solid, label="entity"];
85->32 [style = bold, label=""];
100->106 [style = bold, label=""];
103->89 [style = bold, label=""];
51->89 [style = solid, label="reader"];
99->79 [style = bold, label=""];
57->0 [style = solid, label="secondReader"];
73->44 [style = bold, label=""];
93->91 [style = bold, label=""];
68->43 [style = solid, label="indexShard"];
103->87 [style = solid, label="entity"];
77->44 [style = bold, label=""];
68->10 [style = solid, label="indexShard"];
48->24 [style = bold, label=""];
35->107 [style = dashed, label="0"];
0->102 [style = dashed, label="0"];
69->62 [style = bold, label=""];
48->94 [style = bold, label=""];
48->94 [style = dotted, label="false"];
77->75 [style = dotted, label="true"];
3->56 [style = dashed, label="0"];
95->9 [style = bold, label=""];
27->41 [style = bold, label=""];
62->37 [style = solid, label="reader"];
57->23 [style = solid, label="secondReader"];
51->69 [style = bold, label=""];
12->26 [style = bold, label=""];
62->95 [style = solid, label="termBytes"];
9->37 [style = bold, label=""];
26->56 [style = solid, label="loader"];
87->92 [style = bold, label=""];
104->8 [style = bold, label=""];
49->24 [style = dashed, label="0"];
31->10 [style = dashed, label="0"];
30->33 [style = solid, label="requestCacheStats"];
40->53 [style = solid, label="loader"];
54->63 [style = solid, label="cacheSize"];
47->19 [style = bold, label=""];
17->47 [style = bold, label=""];
2->49 [style = bold, label=""];
68->43 [style = solid, label="termQuery"];
57->19 [style = solid, label="secondReader"];
41->63 [style = bold, label=""];
51->57 [style = solid, label="writer"];
43->56 [style = solid, label="termBytes"];
2->52 [style = dotted, label="false"];
47->19 [style = solid, label="loader"];
25->18 [style = bold, label=""];
19->34 [style = bold, label=""];
38->13 [style = bold, label=""];
7->0 [style = solid, label="dir"];
77->74 [style = bold, label=""];
88->60 [style = bold, label=""];
91->30 [style = bold, label=""];
15->48 [style = bold, label=""];
9->23 [style = solid, label="entity"];
48->24 [style = dotted, label="true"];
54->65 [style = bold, label=""];
10->53 [style = solid, label="entity"];
98->51 [style = solid, label="writer"];
60->84 [style = dashed, label="0"];
52->3 [style = bold, label=""];
18->66 [style = bold, label=""];
30->98 [style = bold, label=""];
103->92 [style = solid, label="entity"];
7->73 [style = solid, label="dir"];
98->7 [style = bold, label=""];
63->32 [style = dashed, label="0"];
23->58 [style = bold, label=""];
94->56 [style = bold, label=""];
62->56 [style = solid, label="reader"];
37->21 [style = solid, label="loader"];
86->99 [style = bold, label=""];
59->17 [style = bold, label=""];
43->97 [style = bold, label=""];
73->57 [style = solid, label="writer"];
2->3 [style = dotted, label="false"];
84->85 [style = bold, label=""];
75->73 [style = bold, label=""];
70->11 [style = bold, label=""];
6->30 [style = bold, label=""];
56->4 [style = bold, label=""];
32->81 [style = bold, label=""];
62->87 [style = solid, label="termBytes"];
42->0 [style = bold, label=""];
7->51 [style = bold, label=""];
43->77 [style = bold, label=""];
57->20 [style = solid, label="secondReader"];
78->103 [style = bold, label=""];
51->102 [style = solid, label="reader"];
91->102 [style = solid, label="cache"];
77->74 [style = dotted, label="true"];
51->87 [style = solid, label="reader"];
57->9 [style = bold, label=""];
43->19 [style = solid, label="termBytes"];
9->21 [style = solid, label="entity"];
2->52 [style = bold, label=""];
50->42 [style = bold, label=""];
76->36 [style = bold, label=""];
54->66 [style = solid, label="cacheSize"];
51->40 [style = solid, label="reader"];
20->23 [style = solid, label="loader"];
98->102 [style = solid, label="writer"];
7->51 [style = solid, label="dir"];
57->47 [style = solid, label="secondReader"];
17->3 [style = solid, label="secondEntity"];
8->28 [style = bold, label=""];
43->21 [style = solid, label="termBytes"];
81->48 [style = bold, label=""];
67->36 [style = bold, label=""];
6->33 [style = solid, label="indexShard"];
51->53 [style = solid, label="reader"];
97->95 [style = bold, label=""];
45->60 [style = bold, label=""];
6->17 [style = solid, label="indexShard"];
35->12 [style = bold, label=""];
8->86 [style = dashed, label="0"];
15->96 [style = dashed, label="0"];
32->15 [style = bold, label=""];
28->88 [style = bold, label=""];
93->10 [style = solid, label="requestCacheStats"];
51->62 [style = solid, label="writer"];
16->102 [style = bold, label=""];
22->71 [style = bold, label=""];
34->32 [style = bold, label=""];
51->75 [style = solid, label="writer"];
62->68 [style = bold, label=""];
}
