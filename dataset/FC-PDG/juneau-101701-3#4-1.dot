digraph {
4 [style = filled, label = "check(\"false\",x.isUnbuffered())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "check(null,x.getListener())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "noValuesInputStreamParser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "check(\"false\",x.isStrict())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "noAnnotationInputStreamParser['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MsgPackParserSession x = MsgPackParser.create().applyAnnotations(al,sr).build().createSession()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "check(\"false\",x.isTrimStrings())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "check(\"false\",x.isAutoCloseStreams())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MsgPackParserSession x = MsgPackParser.create().apply(al).build().createSession()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "List<AnnotationWork> al = b.getAnnotationList().getWork(sr)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "check(\"HEX\",x.getBinaryFormat())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "AnnotationList al = c.getAnnotationList()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "noValuesInputStreamParser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AnnotationList al = b.getAnnotationList()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "check(\"5\",x.getDebugOutputLines())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
2->11 [style = dashed, label="0"];
1->6 [style = bold, label=""];
6->0 [style = bold, label=""];
14->13 [style = bold, label=""];
1->10 [style = dashed, label="0"];
11->10 [style = bold, label=""];
7->2 [style = bold, label=""];
10->6 [style = bold, label=""];
2->1 [style = bold, label=""];
3->8 [style = bold, label=""];
13->1 [style = bold, label=""];
2->13 [style = dashed, label="0"];
9->4 [style = bold, label=""];
0->5 [style = bold, label=""];
8->9 [style = bold, label=""];
12->11 [style = bold, label=""];
}
