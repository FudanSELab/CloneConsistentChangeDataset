digraph {
26 [style = filled, label = "AnalyticsValueStream params@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "params(i( instanceof BooleanValue@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < params.length@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "params.length == 1@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "throw new SolrException(ErrorCode.BAD_REQUEST,\"The \" + name + \" function requires that all parameters be single-valued if more than 2 are given.\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "createBitwiseFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "AnalyticsValueStream param2 = params(1(@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "params(0( instanceof BooleanValueStream@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "param1 instanceof BooleanValueStream && param2 instanceof BooleanValueStream@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "castedParams(i( = (BooleanValue)params(i(@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return LambdaFunction.createBooleanLambdaFunction(name,comp,(BooleanValueStream)param1,(BooleanValueStream)param2)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "return LambdaFunction.createBooleanLambdaFunction(name,null,(BooleanValueStream)param1,(BooleanValueStream)param2)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "params.length == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "AnalyticsValueStream param1 = params(0(@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new SolrException(ErrorCode.BAD_REQUEST,\"The \" + name + \" function requires parameters.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "params.length == 2@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw new SolrException(ErrorCode.BAD_REQUEST,\"The \" + name + \" function requires boolean parameters. Incorrect param: \" + params(0(.getExpressionStr())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return LambdaFunction.createBooleanLambdaFunction(name,comp,(BooleanValueStream)params(0()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "BooleanValue(( castedParams = new BooleanValue((((@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TwoBoolInBoolOutLambda comp@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw new SolrException(ErrorCode.BAD_REQUEST,\"The \" + name + \" function requires boolean parameters.\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "createBitwiseFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return LambdaFunction.createBooleanLambdaFunction(name,comp,castedParams)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TwoBoolInBoolOutLambda comp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
16->20 [style = solid, label="param2"];
0->18 [style = solid, label="i"];
11->6 [style = solid, label="params"];
26->19 [style = solid, label="params"];
14->17 [style = bold, label=""];
26->3 [style = solid, label="params"];
3->6 [style = dotted, label="true"];
25->11 [style = dotted, label="true"];
11->19 [style = solid, label="params"];
27->13 [style = solid, label="name"];
17->8 [style = dotted, label="true"];
11->1 [style = solid, label="params"];
16->4 [style = solid, label="param2"];
21->1 [style = bold, label=""];
18->3 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
2->15 [style = bold, label=""];
12->18 [style = bold, label=""];
27->23 [style = solid, label="name"];
14->11 [style = dotted, label="true"];
7->23 [style = solid, label="name"];
12->18 [style = solid, label="i"];
19->15 [style = bold, label=""];
17->5 [style = bold, label=""];
21->20 [style = dotted, label="true"];
20->24 [style = dotted, label="true"];
22->9 [style = bold, label=""];
10->13 [style = solid, label="comp"];
27->8 [style = solid, label="name"];
21->22 [style = dotted, label="true"];
26->6 [style = solid, label="params"];
11->19 [style = solid, label="comp"];
26->2 [style = solid, label="params"];
27->22 [style = solid, label="name"];
11->3 [style = solid, label="params"];
5->21 [style = bold, label=""];
3->23 [style = bold, label=""];
21->9 [style = bold, label=""];
17->5 [style = dotted, label="false"];
16->24 [style = solid, label="param2"];
15->9 [style = bold, label=""];
1->16 [style = bold, label=""];
9->13 [style = solid, label="castedParams"];
11->24 [style = solid, label="comp"];
7->19 [style = solid, label="name"];
6->13 [style = solid, label="castedParams"];
18->0 [style = dotted, label="true"];
21->16 [style = dotted, label="true"];
4->24 [style = dashed, label="0"];
16->20 [style = bold, label=""];
0->6 [style = solid, label="i"];
25->26 [style = dotted, label="true"];
4->22 [style = bold, label=""];
2->19 [style = dotted, label="true"];
7->13 [style = solid, label="name"];
17->8 [style = bold, label=""];
3->6 [style = bold, label=""];
10->19 [style = solid, label="comp"];
11->16 [style = solid, label="params"];
7->22 [style = solid, label="name"];
23->0 [style = bold, label=""];
5->15 [style = dotted, label="true"];
25->17 [style = bold, label=""];
12->6 [style = solid, label="i"];
11->2 [style = solid, label="params"];
20->4 [style = dotted, label="true"];
0->3 [style = solid, label="i"];
0->18 [style = bold, label=""];
1->4 [style = solid, label="param1"];
27->15 [style = solid, label="name"];
9->12 [style = bold, label=""];
1->20 [style = solid, label="param1"];
5->2 [style = dotted, label="true"];
2->19 [style = bold, label=""];
26->1 [style = solid, label="params"];
7->15 [style = solid, label="name"];
12->0 [style = solid, label="i"];
21->1 [style = dotted, label="true"];
27->24 [style = solid, label="name"];
27->19 [style = solid, label="name"];
5->21 [style = dotted, label="false"];
6->0 [style = bold, label=""];
11->13 [style = solid, label="comp"];
24->22 [style = bold, label=""];
7->4 [style = solid, label="name"];
1->24 [style = solid, label="param1"];
14->10 [style = dotted, label="true"];
20->4 [style = bold, label=""];
20->22 [style = bold, label=""];
6->0 [style = solid, label="i"];
26->16 [style = solid, label="params"];
5->2 [style = bold, label=""];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
3->23 [style = dotted, label="false"];
12->3 [style = solid, label="i"];
25->27 [style = dotted, label="true"];
20->24 [style = bold, label=""];
7->8 [style = solid, label="name"];
}
