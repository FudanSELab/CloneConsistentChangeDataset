digraph {
17 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(operator instanceof WindowOperator)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testApplyEventTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testApplyWithCustomTrigger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "DataStream<Tuple2<String,Integer>> source = env.fromElements(Tuple2.of(\"hello\",1),Tuple2.of(\"hello\",2))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "processElementAndEnsureOutput(winOperator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple2<>(\"hello\",1))@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "OneInputStreamOperator<Tuple2<String,Integer>,Tuple2<String,Integer>> operator = transform.getOperator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "DataStream<Tuple2<String,Integer>> window1 = source.windowAll(TumblingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).trigger(CountTrigger.of(1)).apply(new AllWindowFunction<Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow>(){@Override public void apply(TimeWindow window,Iterable<Tuple2<String,Integer>> values,Collector<Tuple2<String,Integer>> out){for (Tuple2<String,Integer> in : values){out.collect(in)}}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(winOperator.getStateDescriptor() instanceof ListStateDescriptor)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof CountTrigger)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OneInputTransformation<Tuple2<String,Integer>,Tuple2<String,Integer>> transform = (OneInputTransformation<Tuple2<String,Integer>,Tuple2<String,Integer>>)window1.getTransformation()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testApplyWithCustomTrigger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof EventTimeTrigger)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DataStream<Tuple2<String,Integer>> window1 = source.keyBy(new TupleKeySelector()).window(TumblingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).apply(new WindowFunction<Tuple2<String,Integer>,Tuple2<String,Integer>,String,TimeWindow>(){@Override public void apply(String key,TimeWindow window,Iterable<Tuple2<String,Integer>> values,Collector<Tuple2<String,Integer>> out){for (Tuple2<String,Integer> in : values){out.collect(in)}}})@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof TumblingEventTimeWindows)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,?,?,?> winOperator = (WindowOperator<String,Tuple2<String,Integer>,?,?,?>)operator@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = solid, label="operator"];
8->4 [style = solid, label="winOperator"];
1->8 [style = bold, label=""];
8->15 [style = bold, label=""];
9->0 [style = bold, label=""];
15->7 [style = bold, label=""];
16->11 [style = bold, label=""];
0->6 [style = bold, label=""];
7->12 [style = bold, label=""];
8->3 [style = bold, label=""];
6->14 [style = dashed, label="0"];
11->9 [style = bold, label=""];
13->11 [style = bold, label=""];
6->2 [style = bold, label=""];
5->1 [style = bold, label=""];
0->14 [style = bold, label=""];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
9->17 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
11->17 [style = bold, label=""];
14->2 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
5->1 [style = solid, label="operator"];
}
