digraph {
6 [style = filled, label = "blockSize *= 2@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "InputStream rawInput = new ByteArrayInputStream(longerData)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "blockSize <= 16@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertDataConsumed(data,input)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(inputType.name(),input.isAtEnd())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals((int)value,input.readRawVarint32())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertDataConsumed(data,input)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int blockSize = 1@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertDataConsumed(data,input)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertDataConsumed(data,input)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(value,input.readRawLittleEndian64())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "byte(( data@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals((int)value,CodedInputStream.readRawVarint32(rawInput))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CodedInputStream input = inputType.newDecoder(data,blockSize)@@@7@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertTrue(input.skipField(WireFormat.WIRETYPE_VARINT))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(value,input.readRawVarint64SlowPath())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertDataConsumed(data,input)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(input.isAtEnd())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(value,input.readRawLittleEndian64())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertReadVarint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertTrue(input.skipField(WireFormat.WIRETYPE_VARINT))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "blockSize *= 2@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertReadLittleEndian64['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "long value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertDataConsumed(data,input)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "blockSize <= 16@@@5@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "System.arraycopy(data,0,longerData,0,data.length)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(value,input.readRawVarint64SlowPath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "long value@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(inputType.name(),value,input.readRawLittleEndian64())@@@8@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1,rawInput.available())@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals((int)value,input.readRawVarint32())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "byte(( longerData = new byte((((@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertReadLittleEndian64['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(input.isAtEnd())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertDataConsumed(data,input)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "byte(( data@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "long value@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int blockSize = 1@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(value,input.readRawVarint64())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(value,input.readRawVarint64())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CodedInputStream input = CodedInputStream.newInstance(data)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertDataConsumed(data,input)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50->32 [style = bold, label=""];
26->25 [style = solid, label="data"];
25->49 [style = bold, label=""];
26->27 [style = solid, label="data"];
6->11 [style = solid, label="blockSize"];
5->9 [style = bold, label=""];
38->44 [style = bold, label=""];
35->41 [style = bold, label=""];
26->19 [style = solid, label="data"];
26->36 [style = solid, label="data"];
10->28 [style = dashed, label="0"];
9->27 [style = dashed, label="0"];
28->50 [style = solid, label="value"];
8->6 [style = bold, label=""];
34->17 [style = solid, label="blockSize"];
26->33 [style = solid, label="data"];
9->7 [style = bold, label=""];
47->33 [style = bold, label=""];
26->42 [style = solid, label="data"];
26->46 [style = solid, label="data"];
37->31 [style = dotted, label="true"];
16->7 [style = dotted, label="true"];
41->48 [style = bold, label=""];
37->38 [style = dotted, label="true"];
3->5 [style = bold, label=""];
28->43 [style = solid, label="value"];
26->22 [style = solid, label="data"];
42->23 [style = solid, label="input"];
26->31 [style = solid, label="data"];
26->30 [style = solid, label="data"];
6->11 [style = bold, label=""];
39->23 [style = bold, label=""];
16->6 [style = dotted, label="true"];
37->36 [style = dotted, label="true"];
30->40 [style = bold, label=""];
40->31 [style = bold, label=""];
31->46 [style = bold, label=""];
9->15 [style = dashed, label="0"];
11->7 [style = dotted, label="true"];
34->46 [style = solid, label="blockSize"];
7->11 [style = bold, label=""];
24->19 [style = bold, label=""];
29->37 [style = solid, label="blockSize"];
30->31 [style = solid, label="input"];
19->20 [style = bold, label=""];
27->30 [style = bold, label=""];
4->0 [style = dotted, label="true"];
37->21 [style = bold, label=""];
7->11 [style = solid, label="blockSize"];
11->5 [style = dotted, label="true"];
21->25 [style = bold, label=""];
13->16 [style = bold, label=""];
37->45 [style = dotted, label="true"];
37->46 [style = dotted, label="true"];
28->40 [style = solid, label="value"];
22->38 [style = bold, label=""];
28->45 [style = solid, label="value"];
17->27 [style = solid, label="input"];
13->11 [style = solid, label="blockSize"];
26->17 [style = solid, label="data"];
12->10 [style = dotted, label="true"];
10->3 [style = solid, label="data"];
18->1 [style = bold, label=""];
18->26 [style = dotted, label="true"];
5->43 [style = dashed, label="0"];
43->27 [style = bold, label=""];
2->24 [style = dashed, label="0"];
16->11 [style = dotted, label="true"];
7->3 [style = solid, label="blockSize"];
10->7 [style = solid, label="value"];
35->48 [style = solid, label="input"];
20->33 [style = solid, label="input"];
16->13 [style = bold, label=""];
28->41 [style = solid, label="value"];
4->10 [style = dotted, label="true"];
44->29 [style = bold, label=""];
42->39 [style = bold, label=""];
45->36 [style = bold, label=""];
22->44 [style = solid, label="input"];
11->9 [style = dotted, label="true"];
26->48 [style = solid, label="data"];
29->37 [style = bold, label=""];
28->47 [style = solid, label="value"];
49->50 [style = bold, label=""];
26->35 [style = solid, label="data"];
17->43 [style = bold, label=""];
12->13 [style = bold, label=""];
37->43 [style = dotted, label="true"];
21->25 [style = solid, label="longerData"];
0->2 [style = solid, label="value"];
26->20 [style = solid, label="data"];
11->3 [style = bold, label=""];
37->22 [style = dotted, label="true"];
7->15 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
5->7 [style = dashed, label="0"];
37->27 [style = dotted, label="true"];
11->3 [style = dotted, label="true"];
34->37 [style = solid, label="blockSize"];
37->44 [style = dotted, label="true"];
34->30 [style = solid, label="blockSize"];
13->16 [style = solid, label="blockSize"];
16->15 [style = dotted, label="true"];
8->19 [style = dashed, label="0"];
49->50 [style = solid, label="rawInput"];
33->35 [style = bold, label=""];
16->11 [style = bold, label=""];
37->17 [style = bold, label=""];
26->23 [style = solid, label="data"];
0->5 [style = solid, label="value"];
29->46 [style = solid, label="blockSize"];
26->44 [style = solid, label="data"];
46->36 [style = solid, label="input"];
28->24 [style = solid, label="value"];
15->6 [style = bold, label=""];
37->29 [style = dotted, label="true"];
48->42 [style = bold, label=""];
20->47 [style = bold, label=""];
37->30 [style = dotted, label="true"];
6->3 [style = solid, label="blockSize"];
29->30 [style = solid, label="blockSize"];
34->22 [style = solid, label="blockSize"];
37->17 [style = dotted, label="true"];
29->22 [style = solid, label="blockSize"];
12->14 [style = dotted, label="true"];
10->1 [style = solid, label="data"];
34->37 [style = bold, label=""];
6->16 [style = bold, label=""];
1->24 [style = bold, label=""];
18->28 [style = dotted, label="true"];
29->17 [style = solid, label="blockSize"];
14->11 [style = solid, label="data"];
23->34 [style = bold, label=""];
46->45 [style = bold, label=""];
26->1 [style = solid, label="data"];
37->40 [style = dotted, label="true"];
21->49 [style = solid, label="longerData"];
6->16 [style = solid, label="blockSize"];
11->7 [style = bold, label=""];
3->11 [style = dashed, label="0"];
2->8 [style = bold, label=""];
1->19 [style = solid, label="input"];
36->22 [style = bold, label=""];
}
