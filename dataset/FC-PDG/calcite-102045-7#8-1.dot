digraph {
18 [style = filled, label = "final RelNode input = filter.getInput()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "programBuilder.addIdentity()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RexProgramBuilder programBuilder = new RexProgramBuilder(inputRowType,rexBuilder)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final RelDataType inputRowType = rel.getRowType()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "onMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RelNode rel = filter.getInput()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "call.transformTo(calc)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexBuilder rexBuilder = filter.getCluster().getRexBuilder()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final RelDataType inputRowType = input.getRowType()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final LogicalCalc calc = LogicalCalc.create(rel,program)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final EnumerableFilter filter = call.rel(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "programBuilder.addCondition(filter.getCondition())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "onMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "RelOptRuleCall call@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final LogicalFilter filter = call.rel(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexProgram program = programBuilder.getProgram()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final EnumerableCalc calc = EnumerableCalc.create(input,program)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "onMatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RelOptRuleCall call@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
7->2 [style = dotted, label="true"];
14->2 [style = dotted, label="true"];
16->0 [style = bold, label=""];
13->12 [style = dotted, label="true"];
8->11 [style = solid, label="program"];
3->18 [style = dashed, label="0"];
17->9 [style = bold, label=""];
18->17 [style = solid, label="input"];
16->0 [style = solid, label="inputRowType"];
5->0 [style = solid, label="inputRowType"];
11->17 [style = dashed, label="0"];
17->9 [style = solid, label="calc"];
11->9 [style = bold, label=""];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
8->17 [style = solid, label="program"];
5->16 [style = dashed, label="0"];
8->17 [style = bold, label=""];
2->12 [style = dashed, label="0"];
18->4 [style = bold, label=""];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
11->9 [style = solid, label="calc"];
6->15 [style = dashed, label="0"];
0->1 [style = bold, label=""];
3->11 [style = solid, label="rel"];
7->6 [style = bold, label=""];
14->15 [style = bold, label=""];
13->6 [style = bold, label=""];
1->10 [style = bold, label=""];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
4->16 [style = bold, label=""];
4->0 [style = solid, label="rexBuilder"];
}
