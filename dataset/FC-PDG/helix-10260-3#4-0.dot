digraph {
53 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "pipeline.handle(event)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "pipeline.handle(event)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "_dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "_fullPipeline = new Pipeline(\"FullPipeline\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "_fullPipeline.addStage(new MessageGenerationPhase())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "_fullPipeline.addStage(new ReadClusterDataStage())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "_messagePipeline.addStage(new MessageGenerationPhase())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "_fullPipeline.addStage(new BestPossibleStateCalcStage())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "setupInstances(3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "pipeline.handle(event)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "_fullPipeline.handle(event)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "pipeline = createPipeline()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "preSetup()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "setupIdealState(3,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68b333,_numPartition,_numReplica,IdealState.RebalanceMode.SEMI_AUTO,BuiltInStateModelDefinitions.MasterSlave.name())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "pipeline.handle(event)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Pipeline pipeline = createPipeline()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "_messagePipeline = new Pipeline(\"MessagePipeline\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
121 [style = filled, label = "setupStateModel()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "preSetup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "pipeline.handle(event)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68b364,_numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "MessageSelectionStageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
93 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "_dataCache = new ClusterDataCache()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "_fullPipeline.addStage(new MessageSelectionStage())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "_fullPipeline.addStage(new MessageThrottleStage())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),_dataCache)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "_messagePipeline.addStage(new MessageThrottleStage())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "setupLiveInstances(3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "pipeline.handle(event)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "_bestpossibleState = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "_fullPipeline.addStage(new IntermediateStateCalcStage())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68af88,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "setClusterConfig(clusterConfig)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "_messagePipeline.addStage(new MessageSelectionStage())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Message relayMessage = toSlaveMessage.getRelayMessage(newMasterInstance)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80->90 [style = solid, label="masterInstance"];
24->63 [style = bold, label=""];
39->19 [style = bold, label=""];
88->67 [style = bold, label=""];
8->1 [style = solid, label="relayMessage"];
75->132 [style = dashed, label="0"];
26->10 [style = bold, label=""];
84->25 [style = bold, label=""];
87->3 [style = solid, label="p"];
101->58 [style = bold, label=""];
49->83 [style = bold, label=""];
116->123 [style = bold, label=""];
97->70 [style = bold, label=""];
80->72 [style = solid, label="masterInstance"];
48->61 [style = solid, label="newMasterInstance"];
31->21 [style = bold, label=""];
42->48 [style = bold, label=""];
43->81 [style = bold, label=""];
36->12 [style = bold, label=""];
93->86 [style = bold, label=""];
92->87 [style = bold, label=""];
111->75 [style = bold, label=""];
20->27 [style = bold, label=""];
22->60 [style = bold, label=""];
82->76 [style = bold, label=""];
55->89 [style = bold, label=""];
8->1 [style = bold, label=""];
29->6 [style = bold, label=""];
76->73 [style = bold, label=""];
21->84 [style = bold, label=""];
3->36 [style = bold, label=""];
75->83 [style = solid, label="cache"];
125->127 [style = bold, label=""];
131->111 [style = bold, label=""];
80->38 [style = solid, label="masterInstance"];
78->105 [style = bold, label=""];
37->62 [style = bold, label=""];
48->9 [style = solid, label="newMasterInstance"];
18->91 [style = bold, label=""];
85->68 [style = bold, label=""];
113->125 [style = bold, label=""];
108->128 [style = dashed, label="0"];
111->49 [style = solid, label="clusterConfig"];
79->125 [style = dashed, label="0"];
65->76 [style = solid, label="resourceMap"];
44->92 [style = solid, label="currentStateOutput"];
19->28 [style = bold, label=""];
14->99 [style = bold, label=""];
2->24 [style = bold, label=""];
83->132 [style = bold, label=""];
68->102 [style = bold, label=""];
54->38 [style = bold, label=""];
13->69 [style = bold, label=""];
87->16 [style = solid, label="p"];
80->16 [style = solid, label="masterInstance"];
15->124 [style = dashed, label="0"];
80->103 [style = solid, label="masterInstance"];
9->40 [style = bold, label=""];
48->45 [style = solid, label="newMasterInstance"];
118->112 [style = bold, label=""];
100->23 [style = bold, label=""];
129->131 [style = bold, label=""];
127->119 [style = bold, label=""];
130->120 [style = bold, label=""];
87->77 [style = solid, label="p"];
87->69 [style = solid, label="p"];
51->54 [style = bold, label=""];
80->55 [style = solid, label="masterInstance"];
87->30 [style = solid, label="p"];
62->5 [style = bold, label=""];
0->42 [style = bold, label=""];
80->39 [style = solid, label="masterInstance"];
81->100 [style = bold, label=""];
23->85 [style = bold, label=""];
65->75 [style = bold, label=""];
86->77 [style = bold, label=""];
104->41 [style = bold, label=""];
46->37 [style = bold, label=""];
80->46 [style = solid, label="masterInstance"];
67->22 [style = bold, label=""];
48->100 [style = solid, label="newMasterInstance"];
65->82 [style = solid, label="resourceMap"];
87->9 [style = solid, label="p"];
69->97 [style = bold, label=""];
91->2 [style = bold, label=""];
86->110 [style = dashed, label="0"];
56->13 [style = bold, label=""];
95->120 [style = dashed, label="0"];
81->85 [style = solid, label="currentStateOutput"];
108->93 [style = bold, label=""];
33->30 [style = bold, label=""];
94->44 [style = bold, label=""];
87->90 [style = solid, label="p"];
111->83 [style = solid, label="clusterConfig"];
94->44 [style = solid, label="bestPossibleStateOutput"];
93->81 [style = solid, label="bestPossibleStateOutput"];
99->18 [style = bold, label=""];
38->17 [style = bold, label=""];
66->57 [style = bold, label=""];
119->126 [style = bold, label=""];
72->9 [style = bold, label=""];
32->64 [style = bold, label=""];
15->29 [style = bold, label=""];
87->52 [style = solid, label="p"];
71->78 [style = bold, label=""];
48->8 [style = solid, label="newMasterInstance"];
11->90 [style = bold, label=""];
102->107 [style = bold, label=""];
79->94 [style = bold, label=""];
48->91 [style = solid, label="newMasterInstance"];
63->47 [style = bold, label=""];
61->104 [style = bold, label=""];
89->0 [style = bold, label=""];
80->53 [style = solid, label="masterInstance"];
49->116 [style = dashed, label="0"];
132->123 [style = solid, label="_dataCache"];
96->65 [style = bold, label=""];
87->53 [style = solid, label="p"];
87->64 [style = solid, label="p"];
8->61 [style = solid, label="relayMessage"];
47->98 [style = bold, label=""];
121->129 [style = bold, label=""];
122->114 [style = bold, label=""];
40->59 [style = bold, label=""];
1->7 [style = bold, label=""];
83->123 [style = dashed, label="0"];
87->100 [style = solid, label="p"];
83->79 [style = solid, label="resourceMap"];
34->56 [style = bold, label=""];
52->43 [style = bold, label=""];
110->77 [style = bold, label=""];
57->88 [style = bold, label=""];
70->14 [style = solid, label="currentStateOutput"];
123->79 [style = bold, label=""];
8->103 [style = solid, label="relayMessage"];
77->101 [style = bold, label=""];
107->35 [style = bold, label=""];
44->34 [style = solid, label="currentStateOutput"];
5->95 [style = bold, label=""];
117->130 [style = bold, label=""];
87->18 [style = solid, label="p"];
70->104 [style = solid, label="currentStateOutput"];
115->124 [style = bold, label=""];
75->49 [style = bold, label=""];
70->72 [style = bold, label=""];
59->33 [style = bold, label=""];
99->2 [style = solid, label="slaveInstance"];
98->31 [style = bold, label=""];
50->61 [style = bold, label=""];
87->103 [style = solid, label="p"];
18->24 [style = solid, label="instanceStateMap"];
92->113 [style = bold, label=""];
35->26 [style = bold, label=""];
74->15 [style = bold, label=""];
45->39 [style = bold, label=""];
60->4 [style = bold, label=""];
124->121 [style = bold, label=""];
95->108 [style = bold, label=""];
90->14 [style = bold, label=""];
48->71 [style = solid, label="newMasterInstance"];
93->110 [style = bold, label=""];
80->37 [style = solid, label="masterInstance"];
41->106 [style = bold, label=""];
70->40 [style = solid, label="currentStateOutput"];
28->53 [style = bold, label=""];
106->66 [style = bold, label=""];
93->41 [style = solid, label="bestPossibleStateOutput"];
25->32 [style = bold, label=""];
120->128 [style = bold, label=""];
93->63 [style = solid, label="bestPossibleStateOutput"];
10->3 [style = bold, label=""];
112->122 [style = bold, label=""];
87->72 [style = solid, label="p"];
132->116 [style = bold, label=""];
114->117 [style = bold, label=""];
58->55 [style = bold, label=""];
73->20 [style = bold, label=""];
48->8 [style = bold, label=""];
27->113 [style = dashed, label="0"];
93->106 [style = solid, label="bestPossibleStateOutput"];
6->96 [style = bold, label=""];
58->16 [style = solid, label="toSlaveMessage"];
83->94 [style = solid, label="resourceMap"];
16->103 [style = bold, label=""];
109->15 [style = bold, label=""];
87->99 [style = solid, label="p"];
87->48 [style = solid, label="p"];
83->82 [style = bold, label=""];
7->45 [style = bold, label=""];
30->51 [style = bold, label=""];
29->96 [style = solid, label="clusterConfig"];
80->46 [style = bold, label=""];
87->24 [style = solid, label="p"];
126->118 [style = bold, label=""];
4->52 [style = bold, label=""];
103->34 [style = bold, label=""];
99->23 [style = solid, label="slaveInstance"];
87->80 [style = solid, label="p"];
27->79 [style = bold, label=""];
29->65 [style = solid, label="clusterConfig"];
8->9 [style = solid, label="relayMessage"];
87->23 [style = solid, label="p"];
87->61 [style = solid, label="p"];
87->80 [style = bold, label=""];
53->16 [style = bold, label=""];
12->71 [style = bold, label=""];
64->50 [style = bold, label=""];
44->92 [style = bold, label=""];
93->70 [style = solid, label="bestPossibleStateOutput"];
17->11 [style = bold, label=""];
}
