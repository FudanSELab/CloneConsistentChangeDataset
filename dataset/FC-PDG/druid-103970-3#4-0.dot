digraph {
45 [style = filled, label = "rows.add(JAN_4_U_30)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "intervals.add(INTERVAL_JAN_6_8)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "List<Row> expectedDay8 = Collections.singletonList(JAN_8_U_30)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "actual = iter.next()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testApplyMultipleInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "actual = iter.next()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "rows.add(JAN_2_M_10)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(expectedDay2,actual.getRows())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "rows.add(JAN_6_M_10)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "rows.add(JAN_1_M_10)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(expectedDay3,actual.getRows())@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<Row> expectedDay4 = Collections.emptyList()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "actual = iter.next()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(expectedDay1,actual.getRows())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "List<Row> expectedDay4 = Arrays.asList(JAN_4_M_10,JAN_4_F_20,JAN_4_U_30)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rows.add(JAN_3_F_20)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "actual = iter.next()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<Row> expectedDay3 = Collections.singletonList(JAN_3_F_20)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(JAN_4,actual.getDateTime())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "List<Row> expectedDay6 = Collections.singletonList(JAN_6_M_10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Iterator<RowBucket> iter = rbi.iterator()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rows = new ArrayList<>()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testApplyLastDayNoRows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "actual = iter.next()@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "rows.add(JAN_1_M_10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(expectedDay7,actual.getRows())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "rows.add(JAN_1_F_20)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "rows.add(JAN_4_M_10)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<Row> expectedDay1 = Arrays.asList(JAN_1_M_10,JAN_1_F_20)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "List<Row> expectedDay7 = Collections.singletonList(JAN_7_F_20)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "intervals.add(INTERVAL_JAN_1_4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testApplyLastDayNoRows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "rows.add(JAN_8_U_30)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "RowBucket actual = iter.next()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "intervals = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(expectedDay1,actual.getRows())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(expectedDay6,actual.getRows())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "rows.add(JAN_1_F_20)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(expectedDay4,actual.getRows())@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(expectedDay2,actual.getRows())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rows.add(JAN_7_F_20)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "actual = iter.next()@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rows.add(JAN_4_F_20)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(expectedDay3,actual.getRows())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "List<Row> expectedDay2 = Collections.singletonList(JAN_2_M_10)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rows = new ArrayList<>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(expectedDay8,actual.getRows())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28->7 [style = bold, label=""];
14->37 [style = dashed, label="0"];
42->39 [style = bold, label=""];
20->23 [style = bold, label=""];
13->28 [style = dashed, label="0"];
44->40 [style = bold, label=""];
12->27 [style = bold, label=""];
35->2 [style = bold, label=""];
10->13 [style = solid, label="intervals"];
13->7 [style = bold, label=""];
15->9 [style = bold, label=""];
23->29 [style = solid, label="expectedDay3"];
19->17 [style = solid, label="expectedDay1"];
47->36 [style = solid, label="expectedDay7"];
14->26 [style = solid, label="expectedDay4"];
20->12 [style = solid, label="expectedDay2"];
33->42 [style = solid, label="expectedDay6"];
3->29 [style = dashed, label="0"];
20->22 [style = solid, label="expectedDay2"];
12->15 [style = bold, label=""];
19->20 [style = bold, label=""];
4->11 [style = bold, label=""];
6->0 [style = bold, label=""];
46->31 [style = bold, label=""];
10->8 [style = bold, label=""];
10->11 [style = solid, label="intervals"];
6->4 [style = solid, label="rows"];
37->33 [style = bold, label=""];
2->16 [style = solid, label="rows"];
7->22 [style = bold, label=""];
22->17 [style = bold, label=""];
17->3 [style = bold, label=""];
16->13 [style = bold, label=""];
25->17 [style = bold, label=""];
24->10 [style = bold, label=""];
33->47 [style = bold, label=""];
0->1 [style = bold, label=""];
47->35 [style = bold, label=""];
5->32 [style = bold, label=""];
41->48 [style = bold, label=""];
43->42 [style = bold, label=""];
4->11 [style = solid, label="seq"];
23->9 [style = solid, label="expectedDay3"];
39->36 [style = bold, label=""];
9->26 [style = dashed, label="0"];
38->16 [style = bold, label=""];
49->19 [style = bold, label=""];
45->46 [style = bold, label=""];
23->3 [style = solid, label="expectedDay3"];
34->10 [style = bold, label=""];
14->9 [style = solid, label="expectedDay4"];
3->12 [style = bold, label=""];
35->40 [style = solid, label="expectedDay8"];
22->25 [style = dashed, label="0"];
18->10 [style = bold, label=""];
27->26 [style = bold, label=""];
36->44 [style = bold, label=""];
7->25 [style = bold, label=""];
14->6 [style = bold, label=""];
16->13 [style = solid, label="seq"];
23->14 [style = bold, label=""];
16->28 [style = bold, label=""];
19->13 [style = solid, label="expectedDay1"];
29->12 [style = bold, label=""];
30->45 [style = bold, label=""];
32->30 [style = bold, label=""];
48->43 [style = bold, label=""];
8->49 [style = bold, label=""];
23->37 [style = bold, label=""];
21->4 [style = bold, label=""];
20->25 [style = solid, label="expectedDay2"];
37->48 [style = solid, label="expectedDay4"];
15->27 [style = dashed, label="0"];
1->2 [style = bold, label=""];
5->16 [style = bold, label=""];
2->21 [style = bold, label=""];
17->29 [style = bold, label=""];
31->38 [style = bold, label=""];
11->5 [style = bold, label=""];
8->19 [style = bold, label=""];
19->28 [style = solid, label="expectedDay1"];
9->41 [style = bold, label=""];
}
