digraph {
6 [style = filled, label = "with.query(\"values \"adhoc\".\"toDouble\"(cast(1 as double))\").returns(\"EXPR$0=1.0\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => '1', \"s\" => 'x'))\").returns(\"EXPR$0=x\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "with.query(\"values \"adhoc\".\"toDouble\"(cast(1 as decimal))\").returns(\"EXPR$0=1.0\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "with.query(\"values \"adhoc\".\"toDouble\"(cast(1.0 as float))\").returns(\"EXPR$0=1.0\")@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3, \"m\" => 2, \"s\" => 'h'))\").throws_(\"No match found for function signature \" + \"MY_LEFT(n => <NUMERIC>, m => <NUMERIC>, s => <CHARACTER>)\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final CalciteAssert.AssertThat with = withUdf()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3, \"n\" => 2, \"s\" => 'hello'))\").throws_(\"Duplicate argument name 'n'\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3, \"s\" => 'hello'))\").returns(\"EXPR$0=hel\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 1 + 2, \"s\" => 'hello'))\").returns(\"EXPR$0=hel\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "with.query(\"values \"adhoc\".\"toDouble\"(cast(1 as float))\").returns(\"EXPR$0=1.0\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"s\" => 'hello', \"n\" => 3))\").returns(\"EXPR$0=hel\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testBigDecimalAndLong['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 1, \"s\" => 0))\").returns(\"EXPR$0=0\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testUdfArgumentName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 'hello', \"s\" => 'x'))\").throws_(\"java.lang.NumberFormatException: For input string: \"hello\"\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testBigDecimalAndLong['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"s\" => 'hello'))\").throws_(\"No match found for function signature MY_LEFT(s => <CHARACTER>)\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "with.query(\"values \"adhoc\".\"toDouble\"(cast(1.0 as decimal))\").returns(\"EXPR$0=1.0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "with.query(\"values \"adhoc\".\"toDouble\"(cast(1.0 as double))\").returns(\"EXPR$0=1.0\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "with.query(\"values (\"adhoc\".my_left(\"n\" => 3))\").throws_(\"No match found for function signature MY_LEFT(n => <NUMERIC>)\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
9->16 [style = bold, label=""];
16->19 [style = bold, label=""];
6->0 [style = bold, label=""];
17->12 [style = bold, label=""];
3->5 [style = bold, label=""];
0->1 [style = bold, label=""];
11->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
2->3 [style = bold, label=""];
6->12 [style = dashed, label="0"];
8->2 [style = bold, label=""];
2->18 [style = bold, label=""];
15->13 [style = bold, label=""];
1->4 [style = bold, label=""];
3->18 [style = dashed, label="0"];
18->17 [style = bold, label=""];
19->14 [style = bold, label=""];
13->9 [style = bold, label=""];
0->15 [style = dashed, label="0"];
14->10 [style = bold, label=""];
5->17 [style = dashed, label="0"];
5->6 [style = bold, label=""];
7->2 [style = bold, label=""];
}
