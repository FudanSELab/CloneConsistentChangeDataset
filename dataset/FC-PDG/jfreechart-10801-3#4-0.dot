digraph {
42 [style = filled, label = "assertEquals(new Range(-1.0,1.0),dataset.getRangeBounds(true))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertNull(dataset.getRangeBounds(true))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TimeSeriesCollection dataset = new TimeSeriesCollection()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "TimeSeries s1 = new TimeSeries(\"S1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testGetRangeBounds['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "XYSeries<String> series = new XYSeries<String>(\"S1\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "XYSeries s2 = new XYSeries(\"S2\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(new Range(-1.1,1.1),dataset.getRangeBounds(false))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "s2.add(new Year(2014),5.0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(new Range(-1.0,1.0),dataset.getRangeBounds(true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertNull(dataset.getRangeBounds(false))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "dataset.addSeries(s2)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(new Range(1.1,1.1),dataset.getRangeBounds(false))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "series.add(1.0,1.1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(new Range(-1.0,1.0),dataset.getRangeBounds(false))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(new Range(100.0,100.0),dataset.getRangeBounds(false))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(new Range(-1.1,5.0),dataset.getRangeBounds(true))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(new Range(-1.1,1.1),dataset.getRangeBounds(true))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "series.add(0.0,null)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(new Range(-1.1,1.1),dataset.getRangeBounds(true))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testGetRangeBounds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "s1 = new TimeSeries(\"s1\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "dataset.addSeries(s1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(new Range(-1.1,5.0),dataset.getRangeBounds(false))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "series.add(-1.0,-1.1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(new Range(1.0,1.0),dataset.getRangeBounds(true))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(new Range(100.0,100.0),dataset.getRangeBounds(true))@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "XYSeries series = new XYSeries(\"S1\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(new Range(-1.0,1.0),dataset.getRangeBounds(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertNull(dataset.getRangeBounds(true))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "XYSeries<String> s2 = new XYSeries<String>(\"S2\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "TimeSeries s2 = new TimeSeries(\"S2\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "s2 = new TimeSeries(\"s2\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(new Range(-1.0,5.0),dataset.getRangeBounds(false))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "dataset.addSeries(s1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(new Range(-1.1,1.1),dataset.getRangeBounds(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "dataset.removeAllSeries()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertNull(dataset.getRangeBounds(true))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertNull(dataset.getRangeBounds(true))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNull(dataset.getRangeBounds(false))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertNull(dataset.getRangeBounds(false))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "dataset.addSeries(series)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dataset.addSeries(s2)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(new Range(1.0,1.0),dataset.getRangeBounds(false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testGetRangeBounds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "s1.add(new Year(2014),null)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "XYSeriesCollection<String> dataset = new XYSeriesCollection<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(new Range(-1.1,1.1),dataset.getRangeBounds(false))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "XYSeriesCollection dataset = new XYSeriesCollection()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(new Range(1.1,1.1),dataset.getRangeBounds(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "s1.add(new Year(2013),-1.0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNull(dataset.getRangeBounds(false))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(new Range(-1.0,1.0),dataset.getRangeBounds(true))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(new Range(-1.0,5.0),dataset.getRangeBounds(true))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "s2.add(2.0,5.0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "s1.add(new Year(2012),1.0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(new Range(-1.0,1.0),dataset.getRangeBounds(false))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(new Range(-1.1,1.1),dataset.getRangeBounds(true))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "s2.add(new Year(2014),100.0)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52->1 [style = bold, label=""];
54->56 [style = bold, label=""];
37->49 [style = solid, label="s2"];
58->32 [style = bold, label=""];
10->19 [style = bold, label=""];
53->58 [style = bold, label=""];
30->36 [style = bold, label=""];
47->37 [style = bold, label=""];
11->46 [style = bold, label=""];
45->30 [style = bold, label=""];
36->11 [style = bold, label=""];
0->15 [style = bold, label=""];
26->22 [style = bold, label=""];
14->7 [style = bold, label=""];
17->28 [style = dashed, label="0"];
13->24 [style = dashed, label="0"];
13->11 [style = solid, label="s2"];
15->25 [style = dashed, label="0"];
22->0 [style = bold, label=""];
10->58 [style = dashed, label="0"];
38->49 [style = bold, label=""];
57->39 [style = bold, label=""];
0->25 [style = bold, label=""];
24->11 [style = bold, label=""];
37->38 [style = bold, label=""];
14->44 [style = dashed, label="0"];
51->47 [style = bold, label=""];
21->48 [style = dashed, label="0"];
21->16 [style = bold, label=""];
24->11 [style = solid, label="s2"];
17->21 [style = bold, label=""];
46->42 [style = bold, label=""];
15->34 [style = dashed, label="0"];
5->26 [style = dashed, label="0"];
18->53 [style = dashed, label="0"];
40->51 [style = bold, label=""];
19->20 [style = bold, label=""];
34->52 [style = bold, label=""];
7->43 [style = dashed, label="0"];
2->18 [style = bold, label=""];
9->17 [style = bold, label=""];
56->57 [style = bold, label=""];
12->30 [style = dashed, label="0"];
8->46 [style = dashed, label="0"];
13->11 [style = bold, label=""];
15->4 [style = solid, label="series"];
0->34 [style = bold, label=""];
31->33 [style = bold, label=""];
48->55 [style = bold, label=""];
7->23 [style = bold, label=""];
5->33 [style = dashed, label="0"];
11->8 [style = bold, label=""];
4->52 [style = dashed, label="0"];
19->32 [style = dashed, label="0"];
5->22 [style = bold, label=""];
47->38 [style = solid, label="s1"];
27->26 [style = bold, label=""];
9->42 [style = dashed, label="0"];
2->35 [style = dashed, label="0"];
1->3 [style = bold, label=""];
12->24 [style = bold, label=""];
29->54 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
3->44 [style = bold, label=""];
18->10 [style = bold, label=""];
34->52 [style = solid, label="s1"];
43->41 [style = bold, label=""];
4->1 [style = bold, label=""];
55->50 [style = bold, label=""];
23->2 [style = bold, label=""];
42->28 [style = bold, label=""];
33->22 [style = bold, label=""];
35->53 [style = bold, label=""];
49->29 [style = bold, label=""];
41->35 [style = bold, label=""];
32->45 [style = bold, label=""];
13->36 [style = dashed, label="0"];
20->45 [style = dashed, label="0"];
3->14 [style = bold, label=""];
25->4 [style = bold, label=""];
36->11 [style = solid, label="s2"];
44->43 [style = bold, label=""];
25->4 [style = solid, label="series"];
50->40 [style = bold, label=""];
20->12 [style = bold, label=""];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
28->48 [style = bold, label=""];
23->41 [style = dashed, label="0"];
16->55 [style = dashed, label="0"];
}
