digraph {
14 [style = filled, label = "TestUtils.waitForCondition(null,10 * 1000,\"Input record never consumed\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestUtils.waitForCondition(null,10 * 1000,\"GlobalStreamThread should have died.\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mockConsumer.setPollException(new InvalidOffsetException(\"Try Again!\"){@Override public Set<TopicPartition> partitions(){return Collections.singleton(topicPartition)}})@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mockConsumer.updateEndOffsets(Collections.singletonMap(topicPartition,1L))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "shouldDieOnInvalidOffsetExceptionDuringStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mockConsumer.addRecord(record(GLOBAL_STORE_TOPIC_NAME,0,0L,\"K1\".getBytes(),\"V1\".getBytes()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(globalStore.isOpen(),is(false))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "shouldDieOnInvalidOffsetExceptionWhileRunning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TestUtils.waitForCondition(null,10 * 1000,\"Thread never started.\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "globalStreamThread.join()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "shouldDieOnInvalidOffsetExceptionDuringStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "initializeConsumer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(new File(baseDirectoryName + File.separator + \"testAppId\" + File.separator + \"global\").exists())@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final StateStore globalStore = builder.globalStateStores().get(GLOBAL_STORE_NAME)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "startAndSwallowError()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "startAndSwallowError()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
3->13 [style = bold, label=""];
12->14 [style = bold, label=""];
6->4 [style = bold, label=""];
10->3 [style = bold, label=""];
0->9 [style = bold, label=""];
15->12 [style = bold, label=""];
14->2 [style = bold, label=""];
2->0 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
13->11 [style = bold, label=""];
11->15 [style = bold, label=""];
9->6 [style = bold, label=""];
2->5 [style = bold, label=""];
8->3 [style = bold, label=""];
}
