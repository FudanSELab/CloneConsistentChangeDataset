digraph {
15 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,10L))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "shouldPollWithRightTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(10L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,11L))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,11L,\"key\".getBytes(),\"value\".getBytes()))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(changelogReader.completedChangelogs().isEmpty())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.replay(stateManager,storeMetadata,store)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldPollWithRightTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(singletonMap(tp,5L))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(1,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_BATCH))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_END))@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(5L).anyTimes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldRestoreFromPositionAndCheckForCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_START))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(4L,changelogReader.changelogMetadata(tp).totalRestored())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(null).andReturn(9L).anyTimes()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(12L,consumer.position(tp))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),consumer.lastPollTimeout())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "changelogReader.restore()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(6L,consumer.position(tp))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "type == STANDBY@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "changelogReader.restore()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "type == ACTIVE@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "changelogReader.register(tp,stateManager)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "type == ACTIVE@@@34@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.COMPLETED,changelogReader.changelogMetadata(tp).state())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37->34 [style = dotted, label="false"];
47->9 [style = bold, label=""];
31->37 [style = bold, label=""];
16->15 [style = bold, label=""];
37->0 [style = bold, label=""];
25->33 [style = dotted, label="true"];
48->49 [style = bold, label=""];
30->41 [style = bold, label=""];
25->18 [style = dotted, label="false"];
8->47 [style = dashed, label="0"];
26->32 [style = bold, label=""];
12->28 [style = bold, label=""];
32->46 [style = bold, label=""];
34->48 [style = bold, label=""];
22->45 [style = bold, label=""];
17->47 [style = bold, label=""];
37->24 [style = dotted, label="true"];
0->2 [style = bold, label=""];
36->31 [style = bold, label=""];
0->42 [style = bold, label=""];
25->18 [style = bold, label=""];
25->29 [style = dotted, label="false"];
1->19 [style = dashed, label="0"];
38->12 [style = bold, label=""];
8->14 [style = bold, label=""];
0->4 [style = dotted, label="false"];
11->12 [style = bold, label=""];
25->39 [style = dotted, label="true"];
3->38 [style = bold, label=""];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
5->38 [style = bold, label=""];
33->27 [style = bold, label=""];
45->29 [style = bold, label=""];
7->3 [style = bold, label=""];
20->44 [style = bold, label=""];
23->48 [style = bold, label=""];
35->24 [style = bold, label=""];
39->33 [style = bold, label=""];
42->35 [style = bold, label=""];
25->43 [style = dotted, label="false"];
37->35 [style = dotted, label="true"];
25->20 [style = bold, label=""];
3->5 [style = bold, label=""];
40->7 [style = bold, label=""];
28->21 [style = bold, label=""];
46->30 [style = bold, label=""];
18->22 [style = bold, label=""];
21->36 [style = bold, label=""];
44->16 [style = bold, label=""];
5->11 [style = dotted, label="true"];
3->5 [style = dotted, label="true"];
5->12 [style = bold, label=""];
0->4 [style = bold, label=""];
37->0 [style = dotted, label="true"];
37->34 [style = bold, label=""];
25->22 [style = dotted, label="false"];
15->39 [style = bold, label=""];
25->20 [style = dotted, label="true"];
6->8 [style = bold, label=""];
25->45 [style = dotted, label="false"];
8->9 [style = bold, label=""];
29->43 [style = bold, label=""];
9->19 [style = bold, label=""];
14->9 [style = bold, label=""];
5->11 [style = bold, label=""];
41->25 [style = bold, label=""];
37->42 [style = dotted, label="true"];
49->26 [style = bold, label=""];
0->2 [style = dotted, label="true"];
13->8 [style = bold, label=""];
9->1 [style = bold, label=""];
19->40 [style = bold, label=""];
37->23 [style = dotted, label="true"];
1->10 [style = bold, label=""];
25->15 [style = dotted, label="true"];
25->27 [style = dotted, label="true"];
25->16 [style = dotted, label="true"];
25->44 [style = dotted, label="true"];
24->23 [style = bold, label=""];
}
