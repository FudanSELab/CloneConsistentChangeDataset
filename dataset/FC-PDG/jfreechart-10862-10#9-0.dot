digraph {
8 [style = filled, label = "assertTrue(d2.equals(d1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "d2.setFixedIntervalWidth(1.23)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "s1.add(1.0,1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "XYSeriesCollection c2 = new XYSeriesCollection()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "d2.setAutoWidth(false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "XYSeriesCollection<String> c2 = TestUtils.serialised(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "d1.setIntervalPositionFactor(0.123)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertFalse(d1.equals(d2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(d1.equals(d2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "XYSeries s2 = new XYSeries(\"Series\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertTrue(d1.equals(d2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "s1.add(1.2,3.4)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "d1.setFixedIntervalWidth(1.23)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(d1.equals(d2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(d1.equals(d2))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "d1.setAutoWidth(false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "XYSeries<String> s2 = new XYSeries<>(\"Series\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "XYSeriesCollection<String> c2 = new XYSeriesCollection<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "IntervalXYDelegate d2 = new IntervalXYDelegate(c2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "d2.setIntervalPositionFactor(0.123)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(d1.equals(d2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "s2.add(1.2,3.4)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "IntervalXYDelegate d1 = new IntervalXYDelegate(c1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(d1.equals(d2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "c2.addSeries(s2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = solid, label="d2"];
15->10 [style = bold, label=""];
13->24 [style = bold, label=""];
12->15 [style = solid, label="c1"];
0->14 [style = solid, label="c2"];
0->6 [style = bold, label=""];
14->18 [style = solid, label="d2"];
6->23 [style = bold, label=""];
31->32 [style = bold, label=""];
12->32 [style = dashed, label="0"];
14->20 [style = solid, label="d2"];
28->4 [style = solid, label="s1"];
4->15 [style = bold, label=""];
34->33 [style = bold, label=""];
29->25 [style = bold, label=""];
14->19 [style = bold, label=""];
1->18 [style = bold, label=""];
20->1 [style = bold, label=""];
10->29 [style = dashed, label="0"];
16->22 [style = bold, label=""];
11->9 [style = bold, label=""];
25->6 [style = bold, label=""];
32->33 [style = solid, label="c1"];
19->8 [style = bold, label=""];
29->23 [style = solid, label="s2"];
23->14 [style = bold, label=""];
27->4 [style = bold, label=""];
30->4 [style = solid, label="s1"];
3->5 [style = bold, label=""];
14->19 [style = solid, label="d2"];
34->33 [style = solid, label="c2"];
0->25 [style = dashed, label="0"];
12->4 [style = bold, label=""];
22->27 [style = bold, label=""];
16->30 [style = dashed, label="0"];
30->31 [style = bold, label=""];
22->12 [style = bold, label=""];
16->4 [style = solid, label="s1"];
10->0 [style = bold, label=""];
14->3 [style = solid, label="d2"];
24->17 [style = bold, label=""];
14->7 [style = solid, label="d2"];
15->8 [style = solid, label="d1"];
12->27 [style = dashed, label="0"];
25->14 [style = solid, label="c2"];
5->7 [style = bold, label=""];
4->34 [style = bold, label=""];
17->20 [style = bold, label=""];
14->9 [style = solid, label="d2"];
32->4 [style = bold, label=""];
10->23 [style = solid, label="s2"];
26->28 [style = bold, label=""];
18->21 [style = bold, label=""];
32->34 [style = solid, label="c1"];
16->28 [style = dashed, label="0"];
8->11 [style = bold, label=""];
35->30 [style = bold, label=""];
15->29 [style = bold, label=""];
28->22 [style = bold, label=""];
22->31 [style = dashed, label="0"];
21->3 [style = bold, label=""];
9->13 [style = bold, label=""];
27->15 [style = solid, label="c1"];
2->16 [style = bold, label=""];
}
