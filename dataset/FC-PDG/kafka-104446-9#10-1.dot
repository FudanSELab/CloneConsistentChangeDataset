digraph {
1 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "context.time.sleep(context.electionTimeoutMs() * 2)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(OptionalLong.of(9L),context.client.highWatermark())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "context.pollUntilResponse()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int epoch = 7@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "context.client.register(secondListener)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "context.client.register(secondListener)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testHandleCommitCallbackFiresInVotedState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int candidateEpoch = epoch + 2@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,10L,epoch,500))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testHandleCommitCallbackFiresInVotedState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).appendToLog(0L,2,Arrays.asList(\"a\",\"b\",\"c\")).appendToLog(3L,4,Arrays.asList(\"d\",\"e\",\"f\")).appendToLog(6L,4,Arrays.asList(\"g\",\"h\",\"i\")).withUnknownLeader(epoch - 1).build()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,9L,epoch,500))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int candidateEpoch = epoch + 1@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(OptionalLong.of(9L),context.client.highWatermark())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "context.client.poll()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "context.client.poll()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "context.client.poll()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "context.assertSentFetchResponse(Errors.NONE,epoch,OptionalInt.of(localId))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "context.deliverRequest(context.voteRequest(candidateEpoch,otherNodeId,epoch,10L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.becomeLeader()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.pollUntilResponse()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "context.client.poll()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "context.assertUnknownLeader(epoch + 1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "context.deliverRequest(context.voteRequest(epoch + 1,otherNodeId,epoch,9L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).appendToLog(2,Arrays.asList(\"a\",\"b\",\"c\")).appendToLog(4,Arrays.asList(\"d\",\"e\",\"f\")).appendToLog(4,Arrays.asList(\"g\",\"h\",\"i\")).withUnknownLeader(epoch - 1).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->36 [style = solid, label="candidateEpoch"];
34->29 [style = bold, label=""];
4->35 [style = bold, label=""];
15->10 [style = bold, label=""];
2->20 [style = bold, label=""];
35->27 [style = bold, label=""];
11->0 [style = solid, label="epoch"];
17->15 [style = solid, label="candidateEpoch"];
25->33 [style = bold, label=""];
11->35 [style = solid, label="epoch"];
17->0 [style = solid, label="candidateEpoch"];
22->16 [style = bold, label=""];
16->25 [style = solid, label="localId"];
8->19 [style = bold, label=""];
6->21 [style = bold, label=""];
39->34 [style = bold, label=""];
11->17 [style = solid, label="epoch"];
33->28 [style = bold, label=""];
11->6 [style = bold, label=""];
26->25 [style = bold, label=""];
4->15 [style = bold, label=""];
12->11 [style = bold, label=""];
12->1 [style = solid, label="otherNodeId"];
23->26 [style = bold, label=""];
38->4 [style = bold, label=""];
11->29 [style = solid, label="epoch"];
11->38 [style = solid, label="epoch"];
20->31 [style = dashed, label="0"];
10->3 [style = bold, label=""];
14->17 [style = bold, label=""];
30->32 [style = bold, label=""];
12->0 [style = solid, label="otherNodeId"];
9->7 [style = bold, label=""];
37->23 [style = bold, label=""];
17->1 [style = solid, label="candidateEpoch"];
11->31 [style = solid, label="epoch"];
1->9 [style = bold, label=""];
11->20 [style = solid, label="epoch"];
21->2 [style = bold, label=""];
16->29 [style = solid, label="localId"];
5->16 [style = bold, label=""];
20->18 [style = bold, label=""];
24->36 [style = bold, label=""];
19->1 [style = bold, label=""];
27->37 [style = bold, label=""];
36->30 [style = bold, label=""];
3->8 [style = solid, label="secondListener"];
17->0 [style = bold, label=""];
40->16 [style = bold, label=""];
33->28 [style = solid, label="secondListener"];
13->21 [style = dashed, label="0"];
1->36 [style = dashed, label="0"];
12->15 [style = solid, label="otherNodeId"];
0->4 [style = bold, label=""];
3->8 [style = bold, label=""];
6->13 [style = bold, label=""];
12->31 [style = solid, label="otherNodeId"];
11->37 [style = solid, label="epoch"];
16->6 [style = solid, label="localId"];
37->25 [style = solid, label="candidateEpoch"];
28->24 [style = bold, label=""];
12->38 [style = solid, label="otherNodeId"];
29->38 [style = bold, label=""];
31->39 [style = bold, label=""];
16->36 [style = solid, label="localId"];
12->6 [style = solid, label="otherNodeId"];
16->12 [style = bold, label=""];
18->14 [style = bold, label=""];
12->20 [style = solid, label="otherNodeId"];
13->2 [style = bold, label=""];
2->31 [style = bold, label=""];
}
