digraph {
17 [style = filled, label = "env.execute()@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final File zookeeperStoragePath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "config.setString(HighAvailabilityOptions.HA_STORAGE_PATH,zookeeperStoragePath.getAbsolutePath())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "env.setParallelism(PARALLELISM)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(2,0L))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String zkQuorum@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "env.getConfig().setExecutionMode(executionMode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "long sum = result.collect().get(0)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Configuration configuration@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testJobManagerFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Configuration config = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "env.setParallelism(PARALLELISM)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(\"localhost\",1337,configuration)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(numElements * (numElements + 1L) / 2L,sum)@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final DataSet<Long> result = env.generateSequence(1,numElements).rebalance().map(new RichMapFunction<Long,Long>(){@Override public Long map(Long value){if (!markerCreated) {int taskIndex = getRuntimeContext().getIndexOfThisSubtask()touchFile(new File(coordinateDir,READY_MARKER_FILE_PREFIX + taskIndex))markerCreated = true}if (checkForProceedFile) {if (proceedFile.exists()) {checkForProceedFile = false}{Thread.sleep(100)}}return value}}).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}})@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "env.getConfig().setExecutionMode(executionMode)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1,0L))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(\"leader\",1,config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "config.setString(HighAvailabilityOptions.HA_MODE,\"ZOOKEEPER\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final File coordinateDir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Configuration configuration@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTaskManagerFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final long numElements = 100000L@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final DataSet<Long> result = env.generateSequence(1,numElements).rebalance().map(new RichMapFunction<Long,Long>(){@Override public Long map(Long value){if (!markerCreated) {int taskIndex = getRuntimeContext().getIndexOfThisSubtask()AbstractTaskManagerProcessFailureRecoveryTest.touchFile(new File(coordinateDir,READY_MARKER_FILE_PREFIX + taskIndex))markerCreated = true}if (checkForProceedFile) {if (proceedFile.exists()) {checkForProceedFile = false}{Thread.sleep(100)}}return value}}).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).flatMap(new RichFlatMapFunction<Long,Long>(){@Override public void flatMap(Long value,Collector<Long> out){assertEquals(numElements * (numElements + 1L) / 2L,(long)value)int taskIndex = getRuntimeContext().getIndexOfThisSubtask()AbstractTaskManagerProcessFailureRecoveryTest.touchFile(new File(coordinateDir,FINISH_MARKER_FILE_PREFIX + taskIndex))}})@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM,zkQuorum)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final File coordinateDir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testTaskManagerFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "result.output(new DiscardingOutputFormat<Long>())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
3->7 [style = dotted, label="true"];
16->18 [style = bold, label=""];
7->2 [style = solid, label="configuration"];
13->12 [style = dotted, label="true"];
28->21 [style = dotted, label="true"];
19->23 [style = solid, label="zkQuorum"];
9->4 [style = bold, label=""];
14->5 [style = bold, label=""];
5->0 [style = solid, label="numElements"];
9->27 [style = dashed, label="0"];
29->25 [style = bold, label=""];
1->0 [style = bold, label=""];
13->7 [style = dotted, label="true"];
28->19 [style = dotted, label="true"];
3->6 [style = dotted, label="true"];
11->9 [style = bold, label=""];
15->16 [style = bold, label=""];
25->17 [style = bold, label=""];
27->15 [style = bold, label=""];
1->0 [style = solid, label="sum"];
24->14 [style = bold, label=""];
21->29 [style = solid, label="coordinateDir"];
22->14 [style = solid, label="config"];
23->24 [style = bold, label=""];
18->29 [style = bold, label=""];
6->2 [style = solid, label="configuration"];
20->23 [style = bold, label=""];
8->5 [style = bold, label=""];
3->2 [style = bold, label=""];
22->20 [style = bold, label=""];
28->26 [style = dotted, label="true"];
4->8 [style = bold, label=""];
18->29 [style = solid, label="numElements"];
5->27 [style = bold, label=""];
7->26 [style = dashed, label="0"];
1->25 [style = dashed, label="0"];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
28->22 [style = bold, label=""];
13->2 [style = bold, label=""];
}
