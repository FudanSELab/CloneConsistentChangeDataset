digraph {
3 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=stream-%s-state-metrics,client-id=%s,task-id=%s,%s-state-id=%s\",\"scope\",\"test\",taskId.toString(),\"scope\",\"all\")))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=stream-%s-state-metrics,client-id=%s,task-id=%s,%s-state-id=%s\",\"scope\",threadId,taskId.toString(),\"scope\",\"all\")))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "init()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "metrics.addReporter(reporter)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=stream-%s-state-metrics,client-id=%s,task-id=%s,%s-state-id=%s\",\"scope\",threadId,taskId.toString(),\"scope\",\"metered\")))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "store.init(context,store)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=stream-%s-state-metrics,client-id=%s,task-id=%s,%s-state-id=%s\",\"scope\",\"test\",context.taskId().toString(),\"scope\",\"mocked-store\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=stream-%s-state-metrics,client-id=%s,task-id=%s,%s-state-id=%s\",\"scope\",\"test\",context.taskId().toString(),\"scope\",\"all\")))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "replay(innerStoreMock)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final JmxReporter reporter = new JmxReporter(\"kafka.streams\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final JmxReporter reporter = new JmxReporter(\"kafka.streams\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
4->8 [style = bold, label=""];
1->8 [style = dashed, label="0"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
4->1 [style = bold, label=""];
5->9 [style = dashed, label="0"];
4->1 [style = solid, label="reporter"];
9->10 [style = bold, label=""];
2->4 [style = solid, label="reporter"];
12->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->4 [style = bold, label=""];
3->7 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
11->13 [style = bold, label=""];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
0->5 [style = bold, label=""];
10->4 [style = bold, label=""];
}
