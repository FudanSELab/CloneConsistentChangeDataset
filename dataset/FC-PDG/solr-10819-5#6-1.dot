digraph {
55 [style = filled, label = "values.clear()@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "Assert.assertEquals(2.2D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@52@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "values.put(\"b\",-123456789123456789L)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "addManyFieldsWithManySubAdds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789L,result)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "values.clear()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "values.put(\"d\",-4.12345678)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "values.put(\"d\",4)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "values.clear()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(14D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(14L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "values.put(\"c\",-3)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "addManyFieldsWithManySubAddsWithNegative['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "values.clear()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "values.put(\"c\",-3.1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "values.clear()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "values.put(\"a\",-4.12345678)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "Assert.assertEquals(3.323456789123456,result)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertEquals(2.2D,result)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "values.put(\"b\",-4.12345678)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.put(\"b\",2.1)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "values.clear()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "values.put(\"c\",-3.1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "values.put(\"c\",4.12345678)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(6 * -4.12345678,result)@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "addManyFieldsWithManySubAdds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "values.put(\"a\",4.12345678)@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "values.put(\"c\",-4.12345678)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "values.put(\"a\",-1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "values.put(\"a\",1.1)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "values.put(\"d\",4.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "values.put(\"d\",5.223456789123456)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "Assert.assertEquals(4 * 123456789123456789L,result)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "values.put(\"d\",4.12345678)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->8 [style = solid, label="result"];
40->2 [style = bold, label=""];
18->28 [style = solid, label="result"];
70->66 [style = bold, label=""];
36->34 [style = solid, label="result"];
12->65 [style = dashed, label="0"];
20->0 [style = bold, label=""];
45->33 [style = bold, label=""];
5->71 [style = dashed, label="0"];
17->70 [style = bold, label=""];
65->48 [style = bold, label=""];
31->1 [style = bold, label=""];
48->35 [style = bold, label=""];
34->54 [style = dashed, label="0"];
29->45 [style = bold, label=""];
69->30 [style = bold, label=""];
9->58 [style = bold, label=""];
22->4 [style = bold, label=""];
49->24 [style = bold, label=""];
66->64 [style = bold, label=""];
38->65 [style = solid, label="result"];
9->47 [style = bold, label=""];
32->8 [style = solid, label="result"];
7->63 [style = solid, label="result"];
16->42 [style = bold, label=""];
10->9 [style = solid, label="result"];
13->39 [style = solid, label="result"];
62->40 [style = bold, label=""];
2->25 [style = bold, label=""];
30->6 [style = solid, label="result"];
47->58 [style = dashed, label="0"];
71->29 [style = bold, label=""];
4->16 [style = bold, label=""];
41->7 [style = dashed, label="0"];
28->57 [style = dashed, label="0"];
5->29 [style = bold, label=""];
54->52 [style = bold, label=""];
30->21 [style = solid, label="result"];
36->60 [style = solid, label="result"];
25->36 [style = bold, label=""];
3->7 [style = solid, label="result"];
41->37 [style = bold, label=""];
50->3 [style = bold, label=""];
13->71 [style = solid, label="result"];
12->48 [style = bold, label=""];
21->67 [style = solid, label="result"];
7->55 [style = bold, label=""];
33->50 [style = bold, label=""];
18->28 [style = bold, label=""];
43->46 [style = bold, label=""];
72->50 [style = bold, label=""];
67->22 [style = bold, label=""];
18->64 [style = dashed, label="0"];
24->39 [style = solid, label="result"];
18->10 [style = solid, label="result"];
3->7 [style = bold, label=""];
61->32 [style = bold, label=""];
56->13 [style = bold, label=""];
21->19 [style = solid, label="result"];
42->61 [style = dashed, label="0"];
44->69 [style = dashed, label="0"];
42->32 [style = bold, label=""];
38->12 [style = solid, label="result"];
6->67 [style = bold, label=""];
59->56 [style = bold, label=""];
19->22 [style = bold, label=""];
27->20 [style = bold, label=""];
64->57 [style = bold, label=""];
24->56 [style = dashed, label="0"];
24->13 [style = bold, label=""];
44->30 [style = bold, label=""];
60->20 [style = bold, label=""];
39->5 [style = bold, label=""];
23->15 [style = bold, label=""];
16->61 [style = bold, label=""];
13->39 [style = bold, label=""];
35->14 [style = bold, label=""];
17->23 [style = bold, label=""];
23->70 [style = dashed, label="0"];
11->31 [style = bold, label=""];
30->21 [style = bold, label=""];
33->72 [style = dashed, label="0"];
26->44 [style = bold, label=""];
7->37 [style = solid, label="result"];
63->17 [style = bold, label=""];
13->5 [style = solid, label="result"];
36->27 [style = solid, label="result"];
7->41 [style = bold, label=""];
10->9 [style = bold, label=""];
38->8 [style = bold, label=""];
45->72 [style = bold, label=""];
1->62 [style = dashed, label="0"];
26->69 [style = bold, label=""];
8->12 [style = bold, label=""];
36->34 [style = bold, label=""];
27->60 [style = dashed, label="0"];
0->26 [style = bold, label=""];
28->10 [style = bold, label=""];
68->46 [style = bold, label=""];
14->49 [style = bold, label=""];
49->59 [style = dashed, label="0"];
21->6 [style = bold, label=""];
1->40 [style = bold, label=""];
39->71 [style = bold, label=""];
37->17 [style = bold, label=""];
19->67 [style = dashed, label="0"];
36->54 [style = solid, label="result"];
6->19 [style = bold, label=""];
15->18 [style = bold, label=""];
37->63 [style = dashed, label="0"];
51->46 [style = bold, label=""];
7->41 [style = solid, label="result"];
46->11 [style = bold, label=""];
52->20 [style = bold, label=""];
32->38 [style = solid, label="result"];
8->65 [style = bold, label=""];
32->38 [style = bold, label=""];
10->58 [style = solid, label="result"];
34->60 [style = bold, label=""];
24->13 [style = solid, label="result"];
10->47 [style = solid, label="result"];
55->53 [style = bold, label=""];
53->17 [style = bold, label=""];
15->66 [style = dashed, label="0"];
36->54 [style = bold, label=""];
14->59 [style = bold, label=""];
57->10 [style = bold, label=""];
31->62 [style = bold, label=""];
21->6 [style = solid, label="result"];
41->63 [style = bold, label=""];
34->27 [style = bold, label=""];
}
