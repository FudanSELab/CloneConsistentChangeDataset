digraph {
31 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client.prepareResponse(fetchResponse(this.records.buffer(),Errors.NONE.code(),100L,100 * i))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "v < 3@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int v = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "i > 1@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "fetcher.sendFetches(cluster)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,0L,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "this.records.append((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(3,records.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fetcher.initFetches(cluster)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "v++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.records.close()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 4@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "subscriptions.assignFromUser(Arrays.asList(tp))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.records = MemoryRecords.emptyRecords(ByteBuffer.allocate(1024),CompressionType.NONE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15->10 [style = bold, label=""];
26->36 [style = solid, label="i"];
15->25 [style = bold, label=""];
27->28 [style = bold, label=""];
4->15 [style = bold, label=""];
26->1 [style = solid, label="i"];
36->33 [style = bold, label=""];
36->20 [style = dotted, label="true"];
19->5 [style = bold, label=""];
0->25 [style = dashed, label="0"];
4->36 [style = dashed, label="0"];
17->14 [style = bold, label=""];
15->0 [style = bold, label=""];
22->16 [style = dotted, label="true"];
0->8 [style = bold, label=""];
15->33 [style = dashed, label="0"];
29->1 [style = bold, label=""];
16->3 [style = bold, label=""];
1->4 [style = bold, label=""];
24->19 [style = bold, label=""];
35->18 [style = bold, label=""];
15->2 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
28->31 [style = solid, label="offset"];
1->36 [style = solid, label="i"];
23->35 [style = dashed, label="0"];
31->29 [style = bold, label=""];
15->10 [style = dotted, label="true"];
4->18 [style = bold, label=""];
20->31 [style = bold, label=""];
30->34 [style = bold, label=""];
2->22 [style = solid, label="v"];
36->31 [style = dotted, label="true"];
4->13 [style = dotted, label="true"];
15->12 [style = dotted, label="true"];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
23->7 [style = bold, label=""];
36->29 [style = dotted, label="true"];
34->35 [style = bold, label=""];
3->22 [style = solid, label="v"];
20->15 [style = solid, label="i"];
1->20 [style = solid, label="i"];
20->8 [style = solid, label="i"];
22->16 [style = bold, label=""];
28->26 [style = bold, label=""];
4->15 [style = dotted, label="true"];
1->4 [style = solid, label="i"];
32->30 [style = bold, label=""];
2->16 [style = solid, label="v"];
1->15 [style = solid, label="i"];
4->21 [style = dotted, label="true"];
26->31 [style = solid, label="i"];
14->23 [style = bold, label=""];
20->16 [style = solid, label="i"];
22->3 [style = dotted, label="true"];
20->4 [style = solid, label="i"];
36->33 [style = dotted, label="true"];
36->1 [style = dotted, label="true"];
33->20 [style = bold, label=""];
7->18 [style = dashed, label="0"];
14->34 [style = dashed, label="0"];
11->1 [style = bold, label=""];
26->36 [style = bold, label=""];
2->3 [style = solid, label="v"];
4->20 [style = dotted, label="true"];
18->17 [style = bold, label=""];
4->8 [style = dotted, label="true"];
36->32 [style = bold, label=""];
15->22 [style = dotted, label="true"];
1->8 [style = solid, label="i"];
6->19 [style = bold, label=""];
1->31 [style = solid, label="i"];
4->25 [style = dotted, label="true"];
3->22 [style = bold, label=""];
12->0 [style = bold, label=""];
1->36 [style = bold, label=""];
20->4 [style = bold, label=""];
1->16 [style = solid, label="i"];
3->16 [style = solid, label="v"];
21->20 [style = bold, label=""];
22->12 [style = bold, label=""];
12->25 [style = bold, label=""];
8->9 [style = bold, label=""];
25->8 [style = bold, label=""];
4->9 [style = dotted, label="true"];
2->22 [style = bold, label=""];
13->21 [style = bold, label=""];
17->30 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
