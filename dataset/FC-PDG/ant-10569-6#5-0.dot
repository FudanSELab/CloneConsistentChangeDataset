digraph {
4 [style = filled, label = "taskElement = (Element)taskStack.pop()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "targetElement.appendChild(taskElement)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "taskElement == null@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "long totalTime = System.currentTimeMillis() - taskStartTime@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "long totalTime = System.currentTimeMillis() - targetStartTime@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TimedElement targetElement = (TimedElement)targets.get(target)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "targetElement.setAttribute(TIME_ATTR,DefaultLogger.formatTime(totalTime))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "taskStartTime = ((Long)taskTimeStack.pop()).longValue()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "buildElement.element.appendChild(taskElement.element)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "targetFinished['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "taskElement.element.setAttribute(TIME_ATTR,DefaultLogger.formatTime(totalTime))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "BuildEvent event@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "targetElement == null@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "TimedElement poppedStack = (TimedElement)threadStack.pop()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "poppedStack != taskElement@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "taskElement.appendChild(targetElement)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Task task = event.getTask()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Stack threadStack = getStack()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "long totalTime = System.currentTimeMillis() - taskElement.startTime@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "!targetStack.isEmpty()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "BuildEvent event@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "taskElement != null@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "taskFinished['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "taskElement = null@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "!taskStack.isEmpty()@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "targetElement.element.appendChild(taskElement.element)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "throw new RuntimeException(\"Mismatch - popped element = \" + poppedStack.element + \" finished task element = \" + taskElement.element)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "targetElement = (Element)targetStack.pop()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "targetStartTime = ((Long)targetTimeStack.pop()).longValue()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "taskFinished['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "!threadStack.empty()@@@17@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "buildElement.appendChild(targetElement)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TimedElement taskElement = (TimedElement)tasks.get(task)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "targetElement = null@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Target target = task.getOwningTarget()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "taskElement.setAttribute(TIME_ATTR,DefaultLogger.formatTime(totalTime))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
21->10 [style = bold, label=""];
16->18 [style = bold, label=""];
22->19 [style = dotted, label="true"];
1->8 [style = bold, label=""];
18->23 [style = bold, label=""];
32->34 [style = dotted, label="true"];
22->19 [style = bold, label=""];
23->22 [style = dotted, label="true"];
2->6 [style = bold, label=""];
21->10 [style = solid, label="target"];
26->29 [style = bold, label=""];
15->18 [style = dotted, label="true"];
35->33 [style = bold, label=""];
14->22 [style = solid, label="taskElement"];
12->22 [style = solid, label="poppedStack"];
32->27 [style = bold, label=""];
20->14 [style = bold, label=""];
6->0 [style = bold, label=""];
15->10 [style = dotted, label="true"];
24->5 [style = dotted, label="true"];
15->21 [style = dotted, label="true"];
35->33 [style = dotted, label="true"];
11->9 [style = bold, label=""];
0->17 [style = dashed, label="0"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
6->35 [style = dashed, label="0"];
15->13 [style = dotted, label="true"];
0->7 [style = bold, label=""];
33->29 [style = bold, label=""];
24->20 [style = bold, label=""];
25->31 [style = bold, label=""];
15->17 [style = dotted, label="true"];
15->17 [style = bold, label=""];
28->35 [style = bold, label=""];
32->27 [style = dotted, label="true"];
27->34 [style = bold, label=""];
9->18 [style = bold, label=""];
8->2 [style = bold, label=""];
35->26 [style = dotted, label="false"];
7->3 [style = dotted, label="true"];
6->15 [style = dashed, label="0"];
5->30 [style = dashed, label="0"];
29->32 [style = bold, label=""];
0->33 [style = dashed, label="0"];
11->9 [style = dotted, label="false"];
7->4 [style = dotted, label="true"];
2->28 [style = dashed, label="0"];
15->11 [style = dotted, label="true"];
20->14 [style = solid, label="task"];
11->16 [style = dotted, label="true"];
14->15 [style = bold, label=""];
17->13 [style = bold, label=""];
23->12 [style = bold, label=""];
31->28 [style = bold, label=""];
8->31 [style = dashed, label="0"];
15->23 [style = dotted, label="true"];
23->12 [style = dotted, label="true"];
4->10 [style = dashed, label="0"];
13->21 [style = bold, label=""];
14->15 [style = solid, label="taskElement"];
25->30 [style = dotted, label="true"];
31->28 [style = solid, label="totalTime"];
35->26 [style = bold, label=""];
17->13 [style = solid, label="totalTime"];
8->2 [style = solid, label="totalTime"];
12->22 [style = bold, label=""];
1->5 [style = dotted, label="true"];
10->11 [style = solid, label="targetElement"];
10->11 [style = bold, label=""];
}
