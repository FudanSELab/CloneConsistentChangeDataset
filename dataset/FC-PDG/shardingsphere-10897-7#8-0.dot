digraph {
11 [style = filled, label = "createMetaDataMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(metaData.getResource()).thenReturn(new ShardingSphereResource(Collections.emptyMap(),null,null,new MySQLDatabaseType()))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Map<String,DatabaseType> result = new HashMap<>(10,1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return result@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "getDatabaseTypes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "createMetaDataMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "when(metaData.getRuleMetaData()).thenReturn(new ShardingSphereRuleMetaData(Collections.emptyList(),Collections.emptyList()))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "when(metaData.getSchema()).thenReturn(schema)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,ShardingSphereMetaData> result = new LinkedHashMap<>(10,1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(schema.getTables()).thenReturn(new HashMap<>())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "i < 10@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "result.put(String.format(SCHEMA_PATTERN,i),metaData)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "result.put(String.format(SCHEMA_PATTERN,i),mock())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "return result@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "ShardingSphereSchema schema = mock()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "result.put(String.format(SCHEMA_PATTERN,i),new MySQLDatabaseType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return result@@@15@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->7 [style = solid, label="i"];
14->3 [style = bold, label=""];
16->0 [style = bold, label=""];
9->7 [style = solid, label="metaData"];
5->9 [style = bold, label=""];
0->13 [style = solid, label="i"];
5->10 [style = dotted, label="true"];
5->19 [style = dotted, label="true"];
5->1 [style = dotted, label="true"];
3->15 [style = solid, label="result"];
5->6 [style = dotted, label="true"];
5->15 [style = bold, label=""];
7->4 [style = bold, label=""];
0->4 [style = solid, label="i"];
4->5 [style = solid, label="i"];
5->12 [style = dotted, label="true"];
12->6 [style = bold, label=""];
5->17 [style = bold, label=""];
1->12 [style = solid, label="schema"];
4->13 [style = solid, label="i"];
3->0 [style = bold, label=""];
0->5 [style = solid, label="i"];
16->17 [style = solid, label="result"];
5->4 [style = dotted, label="true"];
3->2 [style = solid, label="result"];
5->19 [style = bold, label=""];
5->13 [style = dotted, label="true"];
5->2 [style = bold, label=""];
10->8 [style = bold, label=""];
11->3 [style = bold, label=""];
5->7 [style = dotted, label="true"];
4->19 [style = solid, label="i"];
5->13 [style = bold, label=""];
9->13 [style = dashed, label="0"];
5->9 [style = dotted, label="true"];
19->4 [style = bold, label=""];
0->19 [style = solid, label="i"];
5->8 [style = dotted, label="true"];
9->1 [style = bold, label=""];
6->7 [style = bold, label=""];
1->10 [style = bold, label=""];
4->5 [style = bold, label=""];
8->12 [style = bold, label=""];
3->16 [style = dashed, label="0"];
0->7 [style = solid, label="i"];
0->5 [style = bold, label=""];
13->4 [style = bold, label=""];
18->16 [style = bold, label=""];
}
