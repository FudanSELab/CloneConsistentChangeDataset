digraph {
2 [style = filled, label = "ExitCodeGenerators generators = new ExitCodeGenerators()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(generators.getExitCode()).isEqualTo(3)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "getExitCodeWhenAllNegativeShouldReturnLowestValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(generators.getExitCode()).isEqualTo(-3)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "getExitCodeWhenAllNegativeShouldReturnLowestValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "generators.add(mockGenerator(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "generators.add(mockGenerator(3))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "generators.add(mockGenerator(-3))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "generators.add(mockGenerator(-1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "generators.add(mockGenerator(2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getExitCodeWhenAllPositiveShouldReturnHighestValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "generators.add(mockGenerator(-2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
0->11 [style = dashed, label="0"];
2->7 [style = bold, label=""];
9->11 [style = bold, label=""];
4->10 [style = dashed, label="0"];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
7->10 [style = bold, label=""];
4->5 [style = bold, label=""];
3->4 [style = bold, label=""];
3->7 [style = dashed, label="0"];
2->3 [style = bold, label=""];
6->2 [style = bold, label=""];
}
