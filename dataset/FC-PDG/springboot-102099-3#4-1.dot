digraph {
2 [style = filled, label = "Stream<Integer> result = LambdaSafe.callbacks(,Collections.singleton(callbackInstance),argument).invokeAnd(null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String argument = \"foo\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StringBuilderFactory callbackInstance = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Stream<Integer> result = LambdaSafe.callbacks(,Collections.singleton(callbackInstance),argument).invokeAnd(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "StringBuilder argument = new StringBuilder(\"foo\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "callbacksInvokeAndWhenNoGenericShouldReturnResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "callbacksInvokeAndWhenNoGenericShouldReturnResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "given(callbackInstance.handle(any())).willReturn(123)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "given(callbackInstance.handle(\"foo\")).willReturn(123)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(result).containsExactly(123)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "callbacksInvokeAndWhenHasResolvableGenericMatchShouldReturnResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "NonGenericFactory callbackInstance = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
6->3 [style = bold, label=""];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
4->1 [style = bold, label=""];
9->0 [style = bold, label=""];
7->8 [style = bold, label=""];
2->9 [style = dashed, label="0"];
4->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
11->7 [style = bold, label=""];
3->11 [style = dashed, label="0"];
8->9 [style = bold, label=""];
10->11 [style = bold, label=""];
}
