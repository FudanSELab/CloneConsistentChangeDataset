digraph {
11 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNodeExists(curator,originalNode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "KillSession2.kill(curator.getZookeeperClient().getZooKeeper())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Compatibility.injectSessionExpiration(curator.getZookeeperClient().getZooKeeper())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "String originalNode = node.getActualPath()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Trigger deletedTrigger = Trigger.deletedOrSetData()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "node.debugWaitMsForBackgroundBeforeClose.set(timing.forSleepingABit().milliseconds())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "curator.delete().forPath(originalNode)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "node.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
19->18 [style = bold, label=""];
4->20 [style = solid, label="curator"];
7->12 [style = bold, label=""];
12->3 [style = solid, label="node"];
4->12 [style = solid, label="curator"];
18->17 [style = bold, label=""];
0->11 [style = bold, label=""];
5->15 [style = bold, label=""];
24->19 [style = solid, label="originalNode"];
5->14 [style = bold, label=""];
2->4 [style = bold, label=""];
14->15 [style = dashed, label="0"];
17->23 [style = bold, label=""];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
24->20 [style = bold, label=""];
8->0 [style = bold, label=""];
12->10 [style = bold, label=""];
1->6 [style = bold, label=""];
23->22 [style = bold, label=""];
10->8 [style = bold, label=""];
7->11 [style = solid, label="observer"];
17->23 [style = solid, label="stat"];
0->24 [style = bold, label=""];
11->13 [style = bold, label=""];
11->24 [style = dashed, label="0"];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
13->9 [style = bold, label=""];
16->4 [style = bold, label=""];
24->20 [style = solid, label="originalNode"];
20->19 [style = bold, label=""];
12->22 [style = solid, label="node"];
1->23 [style = dashed, label="0"];
24->17 [style = solid, label="originalNode"];
21->4 [style = bold, label=""];
15->1 [style = bold, label=""];
}
