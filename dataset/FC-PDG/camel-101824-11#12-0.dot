digraph {
24 [style = filled, label = "fileToAdd.createNewFile()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "status = git.status().call()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "mockResultCommit.assertIsSatisfied()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "fileToAdd1.createNewFile()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Exchange ex1 = mockResultCommit.getExchanges().get(0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "validateGitLogs(git,commitMessage)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "commitAllDifferentBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "commitAllDifferentBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(count,2)@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "git.commit().setMessage(\"Test test Commit\").call()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "mockResultCommit.expectedMessageCount(2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "count = 0@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "MockEndpoint mockResultCommit = getMockEndpoint(\"mock:result-commit\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(count,2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Status status = git.status().call()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Git git = getGitTestRepository()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "commitConsumerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "git.close()@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "validateGitLogs(git,commitMessageAll,commitMessage)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "logs = git.log().call()@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "count++@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "git.close()@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageAll)}})@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "count == 1@@@40@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "Iterable<RevCommit> logs = git.log().call()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "count++@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "git.close()@@@46@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "count++@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "Exchange ex2 = mockResultCommit.getExchanges().get(1)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int count = 0@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "count == 0@@@37@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "fileToAdd1.createNewFile()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "fileToAdd1.createNewFile()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46->44 [style = bold, label=""];
36->43 [style = bold, label=""];
49->45 [style = bold, label=""];
5->8 [style = bold, label=""];
40->49 [style = bold, label=""];
27->38 [style = bold, label=""];
52->39 [style = bold, label=""];
7->17 [style = bold, label=""];
43->50 [style = bold, label=""];
48->41 [style = bold, label=""];
15->7 [style = bold, label=""];
16->52 [style = bold, label=""];
42->46 [style = bold, label=""];
20->16 [style = solid, label="count"];
28->20 [style = bold, label=""];
16->10 [style = bold, label=""];
16->52 [style = solid, label="count"];
24->0 [style = bold, label=""];
33->6 [style = bold, label=""];
20->28 [style = bold, label=""];
18->15 [style = bold, label=""];
30->26 [style = bold, label=""];
1->3 [style = bold, label=""];
3->26 [style = bold, label=""];
25->4 [style = bold, label=""];
22->31 [style = bold, label=""];
35->32 [style = bold, label=""];
11->29 [style = bold, label=""];
4->2 [style = bold, label=""];
32->34 [style = bold, label=""];
8->13 [style = bold, label=""];
50->48 [style = bold, label=""];
28->16 [style = bold, label=""];
41->20 [style = bold, label=""];
34->30 [style = bold, label=""];
4->21 [style = solid, label="count"];
26->11 [style = bold, label=""];
21->2 [style = bold, label=""];
6->14 [style = bold, label=""];
6->11 [style = solid, label="git"];
51->40 [style = bold, label=""];
17->24 [style = bold, label=""];
21->9 [style = bold, label=""];
6->31 [style = solid, label="git"];
20->16 [style = bold, label=""];
31->35 [style = bold, label=""];
39->51 [style = bold, label=""];
21->9 [style = solid, label="count"];
4->2 [style = solid, label="count"];
22->12 [style = bold, label=""];
0->22 [style = bold, label=""];
23->6 [style = bold, label=""];
28->16 [style = solid, label="count"];
38->47 [style = bold, label=""];
8->21 [style = bold, label=""];
9->19 [style = bold, label=""];
21->8 [style = solid, label="count"];
14->18 [style = bold, label=""];
4->8 [style = solid, label="count"];
44->18 [style = bold, label=""];
45->37 [style = bold, label=""];
8->13 [style = dotted, label="true"];
2->5 [style = dotted, label="true"];
10->1 [style = bold, label=""];
13->21 [style = bold, label=""];
27->28 [style = solid, label="count"];
12->27 [style = bold, label=""];
27->20 [style = bold, label=""];
47->36 [style = bold, label=""];
21->2 [style = solid, label="count"];
11->25 [style = bold, label=""];
2->8 [style = bold, label=""];
2->5 [style = bold, label=""];
}
