digraph {
26 [style = filled, label = "String fileContent = \"abc|def|ghijkabc||hhg|||||\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "result = format.nextRecord(result)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(\"\",result.getField(0))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(\"\",result.getField(2))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"\",result.getField(1))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(result)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "readStringFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(\"\",result.getField(0))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(format.reachedEnd())@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(result)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "format.setFieldDelimiter(\"|-\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "result = format.nextRecord(result)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "format.configure(new Configuration())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "readStringFieldsWithTrailingDelimiters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertNotNull(result)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(\"ghijk\",result.getField(2))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String fileContent = \"abc|def|ghijkabc||hhg|||\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"\",result.getField(1))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "FileInputSplit split = createTempFile(fileContent)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TypeInformation(( fieldTypes = new TypeInformation((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bd7ea1@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNotNull(result)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result = format.nextRecord(result)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "format.open(split)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "result = format.nextRecord(result)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "result = format.nextRecord(result)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"\",result.getField(1))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"def\",result.getField(1))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "readStringFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Row result = new Row(3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"abc\",result.getField(0))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,fieldTypes,\"\",\"|\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String fileContent = \"abc|-def|-ghijkabc|-|-hhg|-|-|-\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertNotNull(result)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"\",result.getField(2))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"hhg\",result.getField(2))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"abc\",result.getField(0))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
18->6 [style = solid, label="result"];
28->29 [style = bold, label=""];
8->16 [style = bold, label=""];
16->15 [style = bold, label=""];
19->30 [style = solid, label="result"];
5->10 [style = bold, label=""];
18->24 [style = bold, label=""];
33->16 [style = bold, label=""];
29->30 [style = bold, label=""];
5->19 [style = solid, label="result"];
4->6 [style = bold, label=""];
8->33 [style = dashed, label="0"];
26->16 [style = solid, label="fileContent"];
6->21 [style = bold, label=""];
24->9 [style = bold, label=""];
20->0 [style = bold, label=""];
34->33 [style = bold, label=""];
35->2 [style = bold, label=""];
6->5 [style = solid, label="result"];
19->32 [style = solid, label="result"];
25->4 [style = bold, label=""];
5->10 [style = solid, label="result"];
10->3 [style = bold, label=""];
14->19 [style = bold, label=""];
19->11 [style = bold, label=""];
11->12 [style = bold, label=""];
1->35 [style = bold, label=""];
33->16 [style = solid, label="fileContent"];
6->21 [style = solid, label="result"];
17->22 [style = bold, label=""];
7->8 [style = bold, label=""];
19->11 [style = solid, label="result"];
30->11 [style = solid, label="result"];
23->14 [style = bold, label=""];
22->18 [style = solid, label="result"];
26->16 [style = bold, label=""];
30->11 [style = bold, label=""];
3->23 [style = bold, label=""];
22->18 [style = bold, label=""];
8->16 [style = solid, label="fileContent"];
19->32 [style = bold, label=""];
27->26 [style = bold, label=""];
9->25 [style = bold, label=""];
13->20 [style = bold, label=""];
1->2 [style = bold, label=""];
31->28 [style = bold, label=""];
15->1 [style = solid, label="fieldTypes"];
8->26 [style = dashed, label="0"];
16->17 [style = solid, label="split"];
32->31 [style = bold, label=""];
0->5 [style = bold, label=""];
18->24 [style = solid, label="result"];
21->13 [style = bold, label=""];
15->1 [style = bold, label=""];
}
