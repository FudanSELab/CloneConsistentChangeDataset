digraph {
20 [style = filled, label = "verify(objectObserver,never()).onError(any())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verify(objectSubscriber,never()).onError(any())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mapped.subscribe(objectObserver)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "toMultimapWithCollectionFactoryFlowable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<Integer,Collection<String>> expected = new HashMap<>()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "expected.put(3,new HashSet<>(Arrays.asList(\"eee\")))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Flowable<String> source = Flowable.just(\"cc\",\"dd\",\"eee\",\"eee\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mapped.subscribe(objectSubscriber)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expected.put(3,new HashSet<String>(Arrays.asList(\"eee\")))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Function<Integer,Collection<String>> collectionFactory = new Function<Integer,Collection<String>>(){@Override public Collection<String> apply(Integer t1){if (t1 == 2) {return new ArrayList<String>()}{return new HashSet<String>()}}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Observable<Map<Integer,Collection<String>>> mapped = source.toMultimap(lengthFunc,identity,mapSupplier,collectionFactory).toObservable()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verify(objectSubscriber,times(1)).onComplete()@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(objectObserver,times(1)).onComplete()@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Supplier<Map<Integer,Collection<String>>> mapSupplier = new Supplier<Map<Integer,Collection<String>>>(){@Override public Map<Integer,Collection<String>> get(){return new HashMap<Integer,Collection<String>>()}}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "toMultimapWithCollectionFactoryObservable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(objectObserver,times(1)).onNext(expected)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expected.put(2,Arrays.asList(\"cc\",\"dd\"))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(objectSubscriber,times(1)).onNext(expected)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Function<String,String> identity = new Function<String,String>(){@Override public String apply(String v){return v}}@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "toMultimapWithCollectionFactoryFlowable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Flowable<Map<Integer,Collection<String>>> mapped = source.toMultimap(lengthFunc,identity,mapSupplier,collectionFactory).toFlowable()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<Integer,Collection<String>> expected = new HashMap<Integer,Collection<String>>()@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Observable<String> source = Observable.just(\"cc\",\"dd\",\"eee\",\"eee\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
17->1 [style = bold, label=""];
1->2 [style = solid, label="expected"];
11->16 [style = dashed, label="0"];
0->17 [style = bold, label=""];
16->6 [style = bold, label=""];
9->4 [style = bold, label=""];
0->12 [style = bold, label=""];
11->6 [style = bold, label=""];
19->20 [style = bold, label=""];
4->19 [style = bold, label=""];
12->17 [style = dashed, label="0"];
7->0 [style = bold, label=""];
15->3 [style = bold, label=""];
12->1 [style = bold, label=""];
1->9 [style = bold, label=""];
13->2 [style = solid, label="expected"];
3->19 [style = dashed, label="0"];
20->21 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->22 [style = dashed, label="0"];
3->10 [style = bold, label=""];
12->13 [style = bold, label=""];
2->21 [style = dashed, label="0"];
21->22 [style = bold, label=""];
9->15 [style = bold, label=""];
4->15 [style = dashed, label="0"];
10->20 [style = dashed, label="0"];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
13->9 [style = bold, label=""];
6->7 [style = bold, label=""];
14->11 [style = bold, label=""];
2->8 [style = bold, label=""];
1->21 [style = solid, label="expected"];
18->16 [style = bold, label=""];
}
