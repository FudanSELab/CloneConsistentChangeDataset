digraph {
13 [style = filled, label = "Assert.assertTrue(publisher3.isClosed())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertTrue(publisher1.isClosed())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "SharedResourcesBroker broker = SharedResourcesBrokerFactory.createDefaultTopLevelBroker(ConfigFactory.empty(),SimpleScopeType.GLOBAL.defaultScopeInstance())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE,Collections.EMPTY_MAP))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testGetNonThreadSafePublisher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "TestThreadsafeDataPublisher publisher1 = (TestThreadsafeDataPublisher)DataPublisherFactory.get(.getName(),null,broker)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Assert.assertFalse(publisher1.supportsCapability(Capability.THREADSAFE,Collections.EMPTY_MAP))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(publisher1.supportsCapability(DataPublisher.REUSABLE,Collections.EMPTY_MAP))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(publisher2,publisher3)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "DataPublisher publisher3 = localBroker1.getSharedResource(new DataPublisherFactory<>(),new DataPublisherKey(.getName(),null))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "TestThreadsafeDataPublisher publisher4 = (TestThreadsafeDataPublisher)localBroker1.getSharedResourceAtScope(new DataPublisherFactory<>(),new DataPublisherKey(.getName(),null),SimpleScopeType.LOCAL)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "DataPublisher publisher2 = DataPublisherFactory.get(.getName(),null,broker)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Assert.assertFalse(publisher2.isClosed())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertFalse(publisher4.isClosed())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertFalse(publisher1.isClosed())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertTrue(publisher2.isClosed())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertFalse(publisher3.isClosed())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "DataPublisher publisher2 = DataPublisherFactory.get(.getName(),null,broker)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(publisher3,publisher4)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "Assert.assertNotEquals(publisher1,publisher2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DataPublisher publisher4 = localBroker1.getSharedResourceAtScope(new DataPublisherFactory<>(),new DataPublisherKey(.getName(),null),SimpleScopeType.LOCAL)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "SharedResourcesBroker<SimpleScopeType> localBroker1 = broker.newSubscopedBuilder(new SimpleScope<>(SimpleScopeType.LOCAL,\"local1\")).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestThreadsafeDataPublisher publisher2 = (TestThreadsafeDataPublisher)DataPublisherFactory.get(.getName(),null,broker)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testGetThreadSafePublisher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "DataPublisher publisher1 = DataPublisherFactory.get(.getName(),null,broker)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "broker.close()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "SharedResourcesBroker<SimpleScopeType> broker = SharedResourcesBrokerFactory.createDefaultTopLevelBroker(ConfigFactory.empty(),SimpleScopeType.GLOBAL.defaultScopeInstance())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(publisher1.supportsCapability(Capability.THREADSAFE,Collections.EMPTY_MAP))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testGetThreadSafePublisher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotEquals(publisher3,publisher4)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "DataPublisher publisher1 = DataPublisherFactory.get(.getName(),null,broker)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TestThreadsafeDataPublisher publisher3 = (TestThreadsafeDataPublisher)localBroker1.getSharedResource(new DataPublisherFactory<>(),new DataPublisherKey(.getName(),null))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertTrue(publisher4.isClosed())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertNotEquals(publisher2,publisher3)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(publisher1,publisher2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->10 [style = solid, label="publisher2"];
4->9 [style = bold, label=""];
28->29 [style = bold, label=""];
23->10 [style = solid, label="publisher2"];
2->26 [style = bold, label=""];
10->20 [style = bold, label=""];
7->1 [style = bold, label=""];
9->16 [style = dashed, label="0"];
9->0 [style = bold, label=""];
30->33 [style = bold, label=""];
27->12 [style = bold, label=""];
6->26 [style = solid, label="broker"];
17->6 [style = bold, label=""];
26->10 [style = solid, label="publisher1"];
15->25 [style = bold, label=""];
16->14 [style = solid, label="publisher4"];
33->28 [style = bold, label=""];
12->15 [style = bold, label=""];
25->18 [style = bold, label=""];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
34->31 [style = bold, label=""];
6->1 [style = solid, label="broker"];
9->0 [style = solid, label="publisher4"];
32->34 [style = bold, label=""];
6->34 [style = dashed, label="0"];
1->4 [style = solid, label="publisher2"];
7->10 [style = solid, label="publisher1"];
20->24 [style = solid, label="publisher3"];
3->4 [style = bold, label=""];
6->2 [style = bold, label=""];
0->14 [style = dashed, label="0"];
24->16 [style = bold, label=""];
13->19 [style = bold, label=""];
34->30 [style = solid, label="broker"];
6->7 [style = solid, label="broker"];
5->6 [style = bold, label=""];
22->27 [style = bold, label=""];
23->24 [style = solid, label="publisher2"];
3->0 [style = solid, label="publisher3"];
21->22 [style = bold, label=""];
26->23 [style = bold, label=""];
3->20 [style = dashed, label="0"];
34->31 [style = solid, label="broker"];
31->30 [style = bold, label=""];
7->30 [style = dashed, label="0"];
18->13 [style = bold, label=""];
23->10 [style = bold, label=""];
8->21 [style = bold, label=""];
31->33 [style = solid, label="publisher1"];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
3->4 [style = solid, label="publisher3"];
2->7 [style = bold, label=""];
4->24 [style = dashed, label="0"];
7->26 [style = dashed, label="0"];
20->24 [style = bold, label=""];
6->23 [style = solid, label="broker"];
1->10 [style = bold, label=""];
14->11 [style = bold, label=""];
1->23 [style = dashed, label="0"];
8->29 [style = dashed, label="0"];
30->33 [style = solid, label="publisher2"];
20->14 [style = solid, label="publisher3"];
}
