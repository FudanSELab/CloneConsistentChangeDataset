digraph {
13 [style = filled, label = "testPersistentRecursiveWatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "client.blockUntilConnected()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Watcher watcher = null@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT_RECURSIVE).inBackground(backgroundCallback).usingWatcher(watcher).forPath(\"/test\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.create().forPath(\"/test\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.create().forPath(\"/test/a/b/c/d\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testPersistentRecursiveWatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.create().forPath(\"/test/a/b/c\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "BackgroundCallback backgroundCallback = null@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.create().forPath(\"/test/a/b\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client.create().forPath(\"/test/a\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CountDownLatch latch = new CountDownLatch(5)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testPersistentRecursiveWatchInBackground['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT_RECURSIVE).usingWatcher(watcher).forPath(\"/test\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CountDownLatch backgroundLatch = new CountDownLatch(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(backgroundLatch))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->2 [style = solid, label="latch"];
8->4 [style = bold, label=""];
6->15 [style = bold, label=""];
1->12 [style = bold, label=""];
18->5 [style = bold, label=""];
11->9 [style = bold, label=""];
4->17 [style = dashed, label="0"];
10->11 [style = bold, label=""];
8->17 [style = bold, label=""];
1->14 [style = bold, label=""];
0->10 [style = bold, label=""];
16->3 [style = bold, label=""];
6->3 [style = bold, label=""];
3->8 [style = bold, label=""];
15->16 [style = bold, label=""];
7->5 [style = bold, label=""];
14->2 [style = bold, label=""];
3->12 [style = solid, label="latch"];
17->0 [style = bold, label=""];
5->6 [style = bold, label=""];
9->1 [style = bold, label=""];
1->2 [style = bold, label=""];
13->5 [style = bold, label=""];
4->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
15->14 [style = solid, label="backgroundLatch"];
}
