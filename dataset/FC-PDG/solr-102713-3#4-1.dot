digraph {
4 [style = filled, label = "String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile,\"UTF-8\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IndexSchema newSchema = oldSchema.addField(newField)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "File managedSchemaFile = new File(tmpConfDir,\"managed-schema\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testAddFieldPersistence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "h.close()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertSchemaResource(collection,\"managed-schema\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "options.put(\"stored\",\"false\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(managedSchemaFile.exists())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "log.info(\"####close harness end\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "System.setProperty(\"managed.schema.mutable\",\"true\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Map<String,Object> options = new HashMap<String,Object>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "FileInputStream stream = new FileInputStream(managedSchemaFile)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "IndexSchema newNewSchema = h.getCore().getLatestSchema()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String fieldName = \"new_field\"@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(managedSchemaFile.delete())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SchemaField newField = oldSchema.newField(fieldName,fieldType,options)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "log.info(\"####close harness\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testPersistUniqueKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "initCore()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertFalse(managedSchemaContents.contains(\"\"new_field\"\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "initCore(\"solrconfig-mutable-managed-schema.xml\",\"schema-one-field-no-dynamic-field.xml\",tmpSolrHome.getPath())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "IndexSchema oldSchema = h.getCore().getLatestSchema()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "h.getCore().setLatestSchema(newSchema)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "deleteCore()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "initCore(\"solrconfig-managed-schema.xml\",\"schema-one-field-no-dynamic-field.xml\",tmpSolrHome.getPath())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertTrue(managedSchemaFile.exists())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"str\",newSchema.getUniqueKeyField().getName())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertNotNull(newNewSchema.getUniqueKeyField())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "initCore(\"solrconfig-mutable-managed-schema.xml\",\"schema-one-field-no-dynamic-field-unique-key.xml\",tmpSolrHome.getPath())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "managedSchemaContents = IOUtils.toString(stream,\"UTF-8\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(managedSchemaContents.contains(\"<field name=\"new_field\" type=\"string\" stored=\"false\"/>\"))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "stream.close()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"str\",oldSchema.getUniqueKeyField().getName())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(\"str\",newNewSchema.getUniqueKeyField().getName())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String fieldType = \"string\"@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(managedSchemaContents.contains(\"<field name=\"new_field\" type=\"string\" stored=\"false\"/>\"))@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testAddFieldPersistence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28->6 [style = bold, label=""];
2->26 [style = bold, label=""];
27->32 [style = bold, label=""];
10->5 [style = solid, label="newSchema"];
26->10 [style = bold, label=""];
21->2 [style = solid, label="newField"];
14->28 [style = dashed, label="0"];
34->5 [style = bold, label=""];
10->27 [style = bold, label=""];
29->31 [style = bold, label=""];
15->21 [style = solid, label="options"];
19->2 [style = solid, label="fieldName"];
18->15 [style = bold, label=""];
23->4 [style = bold, label=""];
2->10 [style = solid, label="newSchema"];
3->9 [style = solid, label="managedSchemaFile"];
21->2 [style = solid, label="fieldType"];
9->17 [style = bold, label=""];
4->18 [style = bold, label=""];
11->12 [style = bold, label=""];
30->34 [style = bold, label=""];
36->12 [style = bold, label=""];
20->1 [style = bold, label=""];
2->10 [style = bold, label=""];
32->30 [style = bold, label=""];
3->0 [style = bold, label=""];
21->2 [style = bold, label=""];
33->29 [style = bold, label=""];
5->16 [style = bold, label=""];
17->7 [style = bold, label=""];
19->21 [style = solid, label="fieldType"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
7->22 [style = bold, label=""];
7->33 [style = bold, label=""];
0->14 [style = bold, label=""];
8->20 [style = bold, label=""];
10->5 [style = bold, label=""];
35->1 [style = bold, label=""];
13->3 [style = bold, label=""];
25->12 [style = bold, label=""];
16->9 [style = solid, label="stream"];
0->24 [style = bold, label=""];
3->18 [style = solid, label="managedSchemaFile"];
3->16 [style = solid, label="managedSchemaFile"];
1->21 [style = solid, label="fieldName"];
2->10 [style = solid, label="newField"];
20->35 [style = bold, label=""];
8->2 [style = solid, label="options"];
1->19 [style = bold, label=""];
3->4 [style = solid, label="managedSchemaFile"];
9->17 [style = solid, label="stream"];
14->6 [style = bold, label=""];
16->9 [style = bold, label=""];
15->8 [style = bold, label=""];
0->28 [style = bold, label=""];
24->23 [style = bold, label=""];
19->21 [style = bold, label=""];
}
