digraph {
13 [style = filled, label = "return empty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "switchMap0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return RxJavaPlugins.onAssembly(new FlowableSwitchMap<>(this,mapper,bufferSize,delayError))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableFlatMap<>(this,mapper,delayErrors,maxConcurrency,bufferSize))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Objects.requireNonNull(mapper,\"mapper is null\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return FlowableScalarXMap.scalarXMap(v,mapper)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int maxConcurrency@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Function<? super T,? extends Publisher<? extends R>> mapper@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "flatMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ObjectHelper.verifyPositive(bufferSize,\"bufferSize\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean delayError@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int maxConcurrency@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this instanceof ScalarSupplier@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "v == null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int bufferSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "boolean delayErrors@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "@SuppressWarnings(\"unchecked\") T v = ((ScalarSupplier<T>)this).get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "@NonNull Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int bufferSize@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ObjectHelper.verifyPositive(maxConcurrency,\"maxConcurrency\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean delayErrors@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "flatMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "@NonNull Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "return ObservableScalarXMap.scalarXMap(v,mapper)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int bufferSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
0->5 [style = dotted, label="true"];
2->12 [style = solid, label="bufferSize"];
7->12 [style = solid, label="maxConcurrency"];
22->20 [style = solid, label="mapper"];
2->11 [style = solid, label="bufferSize"];
22->4 [style = solid, label="mapper"];
8->2 [style = dotted, label="true"];
0->12 [style = bold, label=""];
6->13 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
18->12 [style = solid, label="bufferSize"];
17->12 [style = solid, label="mapper"];
9->12 [style = solid, label="mapper"];
5->20 [style = solid, label="v"];
0->20 [style = dotted, label="true"];
8->7 [style = dotted, label="true"];
22->21 [style = solid, label="mapper"];
23->11 [style = solid, label="bufferSize"];
18->11 [style = solid, label="bufferSize"];
0->21 [style = bold, label=""];
3->12 [style = bold, label=""];
8->10 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
9->3 [style = solid, label="mapper"];
0->6 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
16->12 [style = solid, label="maxConcurrency"];
19->21 [style = solid, label="delayError"];
12->21 [style = dashed, label="0"];
9->4 [style = solid, label="mapper"];
1->11 [style = bold, label=""];
5->3 [style = solid, label="v"];
7->1 [style = solid, label="maxConcurrency"];
6->20 [style = bold, label=""];
20->21 [style = bold, label=""];
15->17 [style = dotted, label="true"];
11->0 [style = bold, label=""];
24->4 [style = bold, label=""];
24->23 [style = dotted, label="true"];
5->6 [style = solid, label="v"];
5->6 [style = bold, label=""];
13->3 [style = bold, label=""];
16->1 [style = solid, label="maxConcurrency"];
24->22 [style = dotted, label="true"];
6->13 [style = bold, label=""];
3->20 [style = dashed, label="0"];
15->4 [style = bold, label=""];
17->3 [style = solid, label="mapper"];
24->19 [style = dotted, label="true"];
4->1 [style = bold, label=""];
0->3 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
8->4 [style = bold, label=""];
10->12 [style = solid, label="delayErrors"];
4->11 [style = bold, label=""];
23->21 [style = solid, label="bufferSize"];
14->12 [style = solid, label="delayErrors"];
17->4 [style = solid, label="mapper"];
10->18 [style = dashed, label="0"];
0->5 [style = bold, label=""];
13->20 [style = bold, label=""];
}
