digraph {
14 [style = filled, label = "clazzes@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "doesRepresentTypes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return false@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) Class clazzes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "getExpressionOperandsRepresentingTypes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "return matchingStreamExpressions@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "matchingStreamExpressions.add(streamExpression)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getExpressionOperandsRepresentingTypes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "classSupplier != null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Class<?> clazz@@@8@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) Class clazzes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return false@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "clazzes@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "List<StreamExpression> matchingStreamExpressions = new ArrayList<>()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) Class clazz@@@7@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(expression.getFunctionName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "matchingStreamExpressions.add(streamExpression)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "clazzes@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(streamExpression.getFunctionName())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<StreamExpression> allStreamExpressions = getExpressionOperands(expression)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "List<StreamExpression> matchingStreamExpressions = new ArrayList<>()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Class<?> clazzes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "!clazz.isAssignableFrom(classSupplier.get())@@@10@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return true@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "classSupplier != null@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "return matchingStreamExpressions@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9->22 [style = bold, label=""];
13->17 [style = dotted, label="true"];
13->18 [style = dotted, label="true"];
7->1 [style = bold, label=""];
7->10 [style = dotted, label="true"];
7->10 [style = bold, label=""];
10->19 [style = bold, label=""];
26->25 [style = bold, label=""];
25->9 [style = bold, label=""];
12->15 [style = bold, label=""];
16->7 [style = bold, label=""];
23->26 [style = bold, label=""];
2->1 [style = solid, label="matchingStreamExpressions"];
28->9 [style = bold, label=""];
7->0 [style = bold, label=""];
7->9 [style = dotted, label="true"];
8->24 [style = dashed, label="0"];
16->19 [style = bold, label=""];
12->19 [style = solid, label="matchingStreamExpressions"];
16->10 [style = dotted, label="true"];
11->2 [style = bold, label=""];
25->7 [style = dotted, label="true"];
15->5 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
5->16 [style = bold, label=""];
0->7 [style = solid, label="classSupplier"];
25->27 [style = bold, label=""];
9->28 [style = bold, label=""];
16->7 [style = dotted, label="true"];
9->28 [style = dotted, label="true"];
23->20 [style = dotted, label="true"];
7->5 [style = bold, label=""];
13->12 [style = bold, label=""];
25->9 [style = dotted, label="true"];
8->5 [style = solid, label="expression"];
10->5 [style = bold, label=""];
16->0 [style = dotted, label="true"];
5->0 [style = bold, label=""];
22->27 [style = bold, label=""];
7->3 [style = dotted, label="true"];
11->6 [style = dotted, label="true"];
26->25 [style = solid, label="classSupplier"];
10->0 [style = bold, label=""];
7->4 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
9->0 [style = dashed, label="0"];
17->15 [style = solid, label="expression"];
10->4 [style = bold, label=""];
16->5 [style = bold, label=""];
25->22 [style = dotted, label="true"];
8->18 [style = dashed, label="0"];
11->8 [style = dotted, label="true"];
4->1 [style = bold, label=""];
10->1 [style = bold, label=""];
7->19 [style = bold, label=""];
23->24 [style = dotted, label="true"];
5->16 [style = solid, label="classSupplier"];
28->22 [style = bold, label=""];
25->21 [style = dotted, label="true"];
2->5 [style = bold, label=""];
}
