digraph {
35 [style = filled, label = "DataStream<Long> map2 = source2.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(minResource6,getStreamGraph(env).getStreamNode(windowed.getId()).getMinResources())@@@68@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder(1.0,400).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DataStream<Long> map1 = source1.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "opMethod.invoke(operator,minResources,preferredResources)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(preferredResource3,env.getStreamGraph().getStreamNode(source2.getId()).getPreferredResources())@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(minResource7,getStreamGraph(env).getStreamNode(sink.getTransformation().getId()).getMinResources())@@@70@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "DataStreamSink<Long> sink = windowed.print()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "ResourceSpec minResources = ResourceSpec.newBuilder(1.0,100).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "opMethod.invoke(source1,minResource1,preferredResource1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(minResources,operator.getMinResources())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "opMethod.invoke(connected,minResource5,preferredResource5)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(preferredResource1,getStreamGraph(env).getStreamNode(source1.getId()).getPreferredResources())@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "testConfigurationOfResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "DataStream<Long> connected = map1.connect(map2).flatMap(new CoFlatMapFunction<Long,Long,Long>(){@Override public void flatMap1(Long value,Collector<Long> out){}@Override public void flatMap2(Long value,Collector<Long> out){}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(preferredResource4,env.getStreamGraph().getStreamNode(map2.getId()).getPreferredResources())@@@65@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "sinkMethod.invoke(sink,minResource7,preferredResource7)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder(2.0,700).build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Operator operator = new MockOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "opMethod.invoke(map2,minResource4,preferredResource4)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(preferredResource2,env.getStreamGraph().getStreamNode(map1.getId()).getPreferredResources())@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertEquals(preferredResource5,getStreamGraph(env).getStreamNode(connected.getId()).getPreferredResources())@@@67@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder(1.0,600).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder(2.0,800).build()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Method sinkMethod = .getDeclaredMethod(\"setResources\",,)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(preferredResources,operator.getPreferredResources())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(minResource1,getStreamGraph(env).getStreamNode(source1.getId()).getMinResources())@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(minResource5,getStreamGraph(env).getStreamNode(connected.getId()).getMinResources())@@@66@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder(2.0,400).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(preferredResource1,env.getStreamGraph().getStreamNode(source1.getId()).getPreferredResources())@@@59@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder(1.0,200).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "opMethod.setAccessible(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(preferredResource5,env.getStreamGraph().getStreamNode(connected.getId()).getPreferredResources())@@@67@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(minResource1,env.getStreamGraph().getStreamNode(source1.getId()).getMinResources())@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertEquals(preferredResource6,getStreamGraph(env).getStreamNode(windowed.getId()).getPreferredResources())@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(minResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getMinResources())@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "DataStream<Long> source2 = env.generateSequence(0,0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(preferredResource4,getStreamGraph(env).getStreamNode(map2.getId()).getPreferredResources())@@@65@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(minResource4,env.getStreamGraph().getStreamNode(map2.getId()).getMinResources())@@@64@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(minResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getMinResources())@@@70@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(minResource5,env.getStreamGraph().getStreamNode(connected.getId()).getMinResources())@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder(2.0,300).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder(1.0,700).build()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(preferredResource7,getStreamGraph(env).getStreamNode(sink.getTransformation().getId()).getPreferredResources())@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder(2.0,500).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DataStream<Long> windowed = connected.windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(10))).fold(0L,new FoldFunction<Long,Long>(){@Override public Long fold(Long accumulator,Long value){return null}})@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder(1.0,500).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "opMethod.setAccessible(true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "opMethod.invoke(source2,minResource3,preferredResource3)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(minResource2,getStreamGraph(env).getStreamNode(map1.getId()).getMinResources())@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(minResource4,getStreamGraph(env).getStreamNode(map2.getId()).getMinResources())@@@64@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder(2.0,600).build()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "opMethod.invoke(windowed,minResource6,preferredResource6)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(minResource3,getStreamGraph(env).getStreamNode(source2.getId()).getMinResources())@@@62@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(preferredResource2,getStreamGraph(env).getStreamNode(map1.getId()).getPreferredResources())@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(preferredResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getPreferredResources())@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "ResourceSpec preferredResources = ResourceSpec.newBuilder(2.0,200).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DataStream<Long> source1 = env.generateSequence(0,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder(1.0,300).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sinkMethod.setAccessible(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "opMethod.invoke(map1,minResource2,preferredResource2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder(2.0,200).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder(1.0,100).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(preferredResource3,getStreamGraph(env).getStreamNode(source2.getId()).getPreferredResources())@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(minResource3,env.getStreamGraph().getStreamNode(source2.getId()).getMinResources())@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(preferredResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getPreferredResources())@@@69@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(minResource2,env.getStreamGraph().getStreamNode(map1.getId()).getMinResources())@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->24 [style = solid, label="minResource3"];
6->49 [style = solid, label="preferredResource4"];
58->50 [style = bold, label=""];
32->18 [style = solid, label="preferredResource6"];
22->15 [style = bold, label=""];
70->64 [style = bold, label=""];
43->38 [style = solid, label="preferredResource1"];
34->20 [style = bold, label=""];
25->45 [style = bold, label=""];
19->13 [style = solid, label="preferredResource3"];
7->62 [style = solid, label="preferredResource7"];
49->51 [style = bold, label=""];
18->57 [style = dashed, label="0"];
61->57 [style = bold, label=""];
35->42 [style = solid, label="map2"];
7->12 [style = solid, label="preferredResource7"];
48->61 [style = bold, label=""];
67->71 [style = bold, label=""];
6->8 [style = solid, label="preferredResource4"];
16->61 [style = dashed, label="0"];
41->62 [style = dashed, label="0"];
12->47 [style = bold, label=""];
51->48 [style = bold, label=""];
17->47 [style = solid, label="minResource1"];
19->54 [style = solid, label="preferredResource3"];
54->53 [style = bold, label=""];
46->51 [style = solid, label="minResource5"];
23->17 [style = bold, label=""];
29->39 [style = solid, label="preferredResource5"];
6->46 [style = bold, label=""];
4->58 [style = dashed, label="0"];
50->54 [style = bold, label=""];
5->37 [style = bold, label=""];
46->39 [style = solid, label="minResource5"];
28->36 [style = bold, label=""];
36->44 [style = bold, label=""];
5->51 [style = dashed, label="0"];
12->55 [style = bold, label=""];
70->64 [style = solid, label="preferredResources"];
2->34 [style = bold, label=""];
60->62 [style = bold, label=""];
3->16 [style = solid, label="minResource6"];
65->64 [style = solid, label="operator"];
57->60 [style = bold, label=""];
65->66 [style = bold, label=""];
42->31 [style = bold, label=""];
29->37 [style = solid, label="preferredResource5"];
43->26 [style = solid, label="preferredResource1"];
2->34 [style = solid, label="map1"];
63->67 [style = solid, label="minResources"];
56->58 [style = bold, label=""];
7->41 [style = solid, label="preferredResource7"];
40->12 [style = solid, label="sink"];
20->13 [style = solid, label="source2"];
1->13 [style = solid, label="minResource3"];
22->56 [style = solid, label="minResource2"];
22->21 [style = solid, label="minResource2"];
30->7 [style = bold, label=""];
33->53 [style = solid, label="minResource4"];
10->0 [style = bold, label=""];
43->22 [style = bold, label=""];
19->25 [style = solid, label="preferredResource3"];
24->50 [style = dashed, label="0"];
30->12 [style = solid, label="minResource7"];
43->52 [style = solid, label="preferredResource1"];
15->58 [style = solid, label="preferredResource2"];
21->56 [style = dashed, label="0"];
1->19 [style = bold, label=""];
3->27 [style = solid, label="minResource6"];
37->16 [style = bold, label=""];
32->57 [style = solid, label="preferredResource6"];
21->4 [style = bold, label=""];
19->33 [style = bold, label=""];
16->18 [style = bold, label=""];
20->13 [style = bold, label=""];
4->24 [style = bold, label=""];
17->26 [style = solid, label="minResource1"];
15->4 [style = solid, label="preferredResource2"];
46->5 [style = solid, label="minResource5"];
3->61 [style = solid, label="minResource6"];
31->39 [style = solid, label="connected"];
47->55 [style = dashed, label="0"];
35->42 [style = bold, label=""];
38->52 [style = dashed, label="0"];
0->26 [style = solid, label="source1"];
68->63 [style = bold, label=""];
63->70 [style = bold, label=""];
32->30 [style = bold, label=""];
6->42 [style = solid, label="preferredResource4"];
70->71 [style = solid, label="preferredResources"];
46->29 [style = bold, label=""];
17->43 [style = bold, label=""];
40->12 [style = bold, label=""];
7->28 [style = bold, label=""];
24->25 [style = bold, label=""];
45->8 [style = bold, label=""];
64->67 [style = bold, label=""];
31->39 [style = bold, label=""];
55->52 [style = bold, label=""];
14->41 [style = bold, label=""];
30->60 [style = solid, label="minResource7"];
15->1 [style = bold, label=""];
69->65 [style = bold, label=""];
0->26 [style = bold, label=""];
25->54 [style = dashed, label="0"];
45->53 [style = dashed, label="0"];
33->45 [style = solid, label="minResource4"];
59->23 [style = bold, label=""];
33->6 [style = bold, label=""];
17->55 [style = solid, label="minResource1"];
29->3 [style = bold, label=""];
37->48 [style = dashed, label="0"];
66->68 [style = bold, label=""];
44->10 [style = bold, label=""];
52->56 [style = bold, label=""];
30->14 [style = solid, label="minResource7"];
39->11 [style = bold, label=""];
47->38 [style = bold, label=""];
32->27 [style = solid, label="preferredResource6"];
9->23 [style = bold, label=""];
53->49 [style = bold, label=""];
11->27 [style = solid, label="windowed"];
29->48 [style = solid, label="preferredResource5"];
26->2 [style = bold, label=""];
14->60 [style = dashed, label="0"];
63->64 [style = solid, label="minResources"];
8->5 [style = bold, label=""];
22->34 [style = solid, label="minResource2"];
15->34 [style = solid, label="preferredResource2"];
33->42 [style = solid, label="minResource4"];
38->21 [style = bold, label=""];
27->40 [style = bold, label=""];
3->32 [style = bold, label=""];
13->35 [style = bold, label=""];
18->14 [style = bold, label=""];
1->50 [style = solid, label="minResource3"];
8->49 [style = dashed, label="0"];
11->27 [style = bold, label=""];
}
