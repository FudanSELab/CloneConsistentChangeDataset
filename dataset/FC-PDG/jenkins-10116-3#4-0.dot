digraph {
1 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: user is missing the Overall/Administer permission\"))@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(result,failedWith(6))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "createViewShouldFailIfViewAlreadyExists['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).invoke()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: View 'ViewFromXML' already exists\"))@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "quietDownShouldFailWithoutAdministerPermission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.CREATE,Jenkins.READ).everywhere().toAuthenticated())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final CLICommandInvoker.Result result = command.withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\")).invoke()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(View.CREATE,Jenkins.READ).withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\")).invoke()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "j.jenkins.addView(new ListView(\"ViewFromXML\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(result,failedWith(4))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "createViewShouldFailIfViewAlreadyExists['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->4 [style = solid, label="result"];
7->8 [style = bold, label=""];
2->7 [style = bold, label=""];
2->5 [style = bold, label=""];
13->10 [style = solid, label="result"];
8->1 [style = solid, label="result"];
13->12 [style = solid, label="result"];
6->2 [style = bold, label=""];
3->1 [style = bold, label=""];
8->1 [style = bold, label=""];
10->1 [style = bold, label=""];
12->10 [style = bold, label=""];
13->12 [style = bold, label=""];
4->9 [style = bold, label=""];
11->13 [style = bold, label=""];
1->4 [style = bold, label=""];
5->1 [style = solid, label="result"];
5->3 [style = bold, label=""];
5->3 [style = solid, label="result"];
4->1 [style = dashed, label="0"];
0->2 [style = bold, label=""];
}
