digraph {
17 [style = filled, label = "allGroupsCollector = new AllGroupsCollector<>(new ValueSourceGroupSelector(vs,new HashMap<>()))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "return collectors@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "secondPassCollector = new FunctionSecondPassGroupingCollector(v,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true,vs,new HashMap<Object,Object>())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "fieldType.getNumberType() != null@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "collectors.add(secondPassCollector)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final FieldType fieldType = field.getType()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "allGroupsCollector = new AllGroupsCollector<>(new TermGroupSelector(field.getName()))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final FieldType fieldType = field.getType()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "collectors.add(allGroupsCollector)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "firstPassGroupingCollector = new FunctionFirstPassGroupingCollector(vs,new HashMap<Object,Object>(),groupSort,topNGroups)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "final List<Collector> collectors = new ArrayList<>(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return collectors@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "includeGroupCount@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "allGroupsCollector = new FunctionAllGroupsCollector(vs,new HashMap<Object,Object>())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "firstPassGroupingCollector = new TermFirstPassGroupingCollector(field.getName(),groupSort,topNGroups)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Collection<SearchGroup<MutableValue>> v = GroupConverter.toMutable(field,firstPhaseGroups)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "firstPhaseGroups.isEmpty()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "fieldType.getNumberType() != null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "allGroupsCollector = new TermAllGroupsCollector(field.getName())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "firstPassGroupingCollector = new FirstPassGroupingCollector<>(new ValueSourceGroupSelector(vs,new HashMap<>()),groupSort,topNGroups)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "topNGroups > 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "firstPassGroupingCollector = new FirstPassGroupingCollector<>(new TermGroupSelector(field.getName()),groupSort,topNGroups)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "collectors.add(firstPassGroupingCollector)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "fieldType.getNumberType() != null@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "secondPassCollector = new TermSecondPassGroupingCollector(field.getName(),firstPhaseGroups,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final List<Collector> collectors = new ArrayList<>(2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return Collections.emptyList()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30->25 [style = solid, label="secondPassCollector"];
9->20 [style = dashed, label="0"];
9->15 [style = solid, label="firstPassGroupingCollector"];
17->14 [style = solid, label="allGroupsCollector"];
5->8 [style = bold, label=""];
23->25 [style = bold, label=""];
2->20 [style = bold, label=""];
2->26 [style = bold, label=""];
8->6 [style = dotted, label="false"];
29->30 [style = bold, label=""];
6->15 [style = solid, label="firstPassGroupingCollector"];
7->10 [style = bold, label=""];
27->21 [style = solid, label="collectors"];
8->18 [style = bold, label=""];
8->2 [style = dotted, label="true"];
13->14 [style = solid, label="allGroupsCollector"];
11->4 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
11->14 [style = dotted, label="true"];
10->4 [style = solid, label="collectors"];
20->15 [style = solid, label="firstPassGroupingCollector"];
31->29 [style = bold, label=""];
19->10 [style = bold, label=""];
30->25 [style = bold, label=""];
8->6 [style = bold, label=""];
23->25 [style = solid, label="secondPassCollector"];
2->9 [style = bold, label=""];
3->12 [style = bold, label=""];
3->16 [style = bold, label=""];
22->24 [style = dotted, label="true"];
26->23 [style = dotted, label="false"];
12->1 [style = bold, label=""];
5->15 [style = dotted, label="true"];
6->15 [style = bold, label=""];
3->16 [style = dotted, label="false"];
6->18 [style = dashed, label="0"];
18->15 [style = solid, label="firstPassGroupingCollector"];
2->9 [style = solid, label="vs"];
12->1 [style = solid, label="vs"];
26->31 [style = dotted, label="true"];
26->31 [style = bold, label=""];
1->17 [style = dashed, label="0"];
15->25 [style = dashed, label="0"];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
22->27 [style = bold, label=""];
11->3 [style = bold, label=""];
17->14 [style = bold, label=""];
12->17 [style = solid, label="vs"];
9->15 [style = bold, label=""];
3->12 [style = dotted, label="true"];
8->18 [style = dotted, label="false"];
26->30 [style = dotted, label="true"];
26->23 [style = bold, label=""];
10->0 [style = bold, label=""];
6->23 [style = dashed, label="0"];
16->14 [style = solid, label="allGroupsCollector"];
2->20 [style = solid, label="vs"];
13->16 [style = dashed, label="0"];
1->14 [style = solid, label="allGroupsCollector"];
3->13 [style = bold, label=""];
16->14 [style = bold, label=""];
26->29 [style = dotted, label="true"];
1->14 [style = bold, label=""];
5->11 [style = bold, label=""];
8->20 [style = dotted, label="true"];
3->17 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
22->24 [style = bold, label=""];
5->8 [style = dotted, label="true"];
11->3 [style = dotted, label="true"];
20->15 [style = bold, label=""];
3->13 [style = dotted, label="false"];
13->14 [style = bold, label=""];
24->27 [style = bold, label=""];
27->2 [style = bold, label=""];
31->30 [style = solid, label="vs"];
28->22 [style = bold, label=""];
29->30 [style = solid, label="v"];
25->21 [style = bold, label=""];
3->1 [style = dotted, label="true"];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
}
