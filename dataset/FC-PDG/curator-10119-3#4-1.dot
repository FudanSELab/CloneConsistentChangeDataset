digraph {
1 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BackgroundCallback callback = new BackgroundCallback(){@Override public void processResult(CuratorFramework client,CuratorEvent event){if (event.getType() == CuratorEventType.RECONFIG) {callbackLatch.countDown()}}}@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CountDownLatch latch = setChangeWaiter(client)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testAdd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.start()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "newCluster.start()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertConfig(newConfig,newInstances)@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "newCluster.start()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testAddAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(callbackLatch))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertConfig(newConfig,newInstances)@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertConfig(newConfig,newInstances)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testAdd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final CountDownLatch callbackLatch = new CountDownLatch(1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->16 [style = bold, label=""];
4->10 [style = solid, label="latch"];
7->10 [style = bold, label=""];
19->20 [style = bold, label=""];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
10->8 [style = solid, label="newConfig"];
3->6 [style = bold, label=""];
5->12 [style = solid, label="oldConfig"];
21->24 [style = bold, label=""];
16->21 [style = solid, label="callbackLatch"];
16->17 [style = bold, label=""];
1->8 [style = solid, label="newInstances"];
20->25 [style = bold, label=""];
1->9 [style = solid, label="newConfig"];
11->15 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
11->7 [style = solid, label="latch"];
6->5 [style = bold, label=""];
4->24 [style = solid, label="latch"];
5->12 [style = bold, label=""];
2->9 [style = solid, label="newInstances"];
15->0 [style = bold, label=""];
23->19 [style = bold, label=""];
12->11 [style = solid, label="oldConfig"];
8->9 [style = bold, label=""];
13->5 [style = bold, label=""];
1->2 [style = bold, label=""];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
10->1 [style = bold, label=""];
19->25 [style = solid, label="newInstances"];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
22->6 [style = bold, label=""];
23->25 [style = solid, label="newConfig"];
24->23 [style = bold, label=""];
}
