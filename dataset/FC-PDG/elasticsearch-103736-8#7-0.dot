digraph {
12 [style = filled, label = "final RoutingAllocation allocation = routingAllocationWithOnePrimaryNoReplicas(noAllocationDeciders(),CLUSTER_RECOVERED,\"allocId1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(allocation.routingNodesChanged(),equalTo(true))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(allocation.routingNodes().shardsWithState(ShardRoutingState.INITIALIZING).get(0).currentNodeId(),equalTo(node1.getId()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RoutingAllocation allocation = getRestoreRoutingAllocation(yesAllocationDeciders(),\"allocId\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "RoutingAllocation allocation = getRestoreRoutingAllocation(yesAllocationDeciders(),randomLong(),\"allocId\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(allocation.routingNodes().shardsWithState(ShardRoutingState.INITIALIZING).size(),equalTo(1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testAllocator.addData(node1,\"some allocId\",randomBoolean())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "allocateAllUnassigned(allocation)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(allocation.routingNodes().unassigned().ignored().isEmpty(),equalTo(true))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testAllocator.addData(node1,\"allocId1\",randomBoolean())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testFoundAllocationButNoDecider['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertClusterHealthStatus(allocation,ClusterHealthStatus.YELLOW)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
12->5 [style = solid, label="allocation"];
0->5 [style = solid, label="allocation"];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
9->8 [style = bold, label=""];
8->5 [style = solid, label="allocation"];
0->2 [style = solid, label="allocation"];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
8->2 [style = solid, label="allocation"];
8->1 [style = bold, label=""];
12->10 [style = bold, label=""];
10->5 [style = bold, label=""];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
3->13 [style = bold, label=""];
0->8 [style = dashed, label="0"];
12->2 [style = solid, label="allocation"];
13->2 [style = bold, label=""];
}
