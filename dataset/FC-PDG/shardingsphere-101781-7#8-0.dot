digraph {
2 [style = filled, label = "assertSetIndexForItemsByColumnOrderByWithoutAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(createOrderByItemSegment(COLUMN_ORDER_BY_WITHOUT_OWNER_ALIAS))))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(selectStatement,new GroupByContext(Collections.emptyList()),createOrderBy(COLUMN_ORDER_BY_WITHOUT_OWNER_ALIAS),createProjectionsContext(),null)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "selectStatementContext.setIndexes(Collections.singletonMap(\"id\",3))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(3))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "AggregationProjection aggregationProjection = new AggregationProjection(AggregationType.MAX,\"\",\"id\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(3))@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(selectStatement,new GroupByContext(Collections.emptyList()),createOrderBy(COLUMN_ORDER_BY_WITHOUT_OWNER_ALIAS),projectionsContext,null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ProjectionsContext projectionsContext = new ProjectionsContext(0,0,false,Collections.singletonList(aggregationProjection))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "aggregationProjection.getDerivedAggregationProjections().addAll(Collections.singletonList(aggregationProjection))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "columnLabelIndexMap.put(\"id\",3)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "selectStatementContext.setIndexes(Collections.singletonMap(\"id\",3))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Map<String,Integer> columnLabelIndexMap = new HashMap<>()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertSetIndexWhenAggregationProjectionsPresent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(selectStatementContext.getOrderByContext().getItems().iterator().next().getIndex(),is(3))@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "selectStatementContext.setIndexes(columnLabelIndexMap)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertSetIndexForItemsByColumnOrderByWithoutAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "selectStatement.setProjections(createProjectionsSegment())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
2->3 [style = dotted, label="true"];
3->17 [style = dashed, label="0"];
9->11 [style = bold, label=""];
17->15 [style = solid, label="selectStatement"];
4->6 [style = bold, label=""];
15->21 [style = bold, label=""];
20->17 [style = dotted, label="true"];
1->15 [style = dashed, label="0"];
10->3 [style = dotted, label="true"];
14->19 [style = bold, label=""];
13->7 [style = solid, label="metaData"];
12->7 [style = bold, label=""];
7->9 [style = bold, label=""];
20->18 [style = bold, label=""];
6->1 [style = bold, label=""];
3->7 [style = solid, label="selectStatement"];
2->0 [style = bold, label=""];
19->15 [style = solid, label="projectionsContext"];
18->14 [style = solid, label="aggregationProjection"];
10->13 [style = bold, label=""];
0->4 [style = bold, label=""];
3->0 [style = solid, label="selectStatement"];
21->16 [style = bold, label=""];
13->8 [style = bold, label=""];
19->15 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->1 [style = solid, label="columnLabelIndexMap"];
18->14 [style = bold, label=""];
8->12 [style = bold, label=""];
18->19 [style = solid, label="aggregationProjection"];
}
