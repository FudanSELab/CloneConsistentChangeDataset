digraph {
7 [style = filled, label = "cacheClientNotifier = CacheClientNotifier.getInstance(internalCache,mock(),mock(),mock(),10,10,mock(),null,true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testSingletonHasClientProxiesFalseNoProxy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(proxy.getProxyID()).thenReturn(mock())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(CacheClientNotifier.singletonHasClientProxies())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "CacheClientProxy proxy = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFalse(CacheClientNotifier.singletonHasClientProxies())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "ccn.shutdown(111)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "InternalCache internalCache = Fakes.cache()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(proxy.getAcceptorId()).thenReturn(Long.valueOf(111))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CacheClientNotifier ccn = CacheClientNotifier.getInstance(internalCache,mock(),mock(),mock(),10,10,mock(),null,true)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testSingletonHasClientProxiesTrue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ccn.addClientProxy(proxy)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSingletonHasClientProxiesFalseNoProxy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "ccn.shutdown(111)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(CacheClientNotifier.singletonHasClientProxies()).isFalse()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(internalCache.getCCPTimer()).thenReturn(mock())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
14->3 [style = bold, label=""];
3->2 [style = solid, label="internalCache"];
12->2 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
8->6 [style = bold, label=""];
3->6 [style = dashed, label="0"];
2->9 [style = bold, label=""];
3->12 [style = bold, label=""];
3->2 [style = bold, label=""];
12->13 [style = solid, label="proxy"];
6->7 [style = bold, label=""];
10->15 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
13->11 [style = bold, label=""];
2->7 [style = dashed, label="0"];
0->5 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
