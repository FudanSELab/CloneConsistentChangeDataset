digraph {
46 [style = filled, label = "isNegative['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "newBqB.setDisableCoord(bq.isCoordDisabled())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "getAbs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "return q@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return q@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return q@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "absSubQ == subQ@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return new WrappedQuery(absSubQ)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "absSubQ == subQ@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "newBqB.add(clause.getQuery(),BooleanClause.Occur.SHOULD)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Query subQ = bq.getQuery()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Collection<BooleanClause> clauses = bq.clauses()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return q@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BooleanClause clause@@@30@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!(q instanceof BooleanQuery)@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "clauses.size() == 0@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "return new BoostQuery(absSubQ,bq.getBoost())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "absSubQ == subQ@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "return newBqB.build()@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "clauses@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "BooleanQuery.Builder newBqB = new BooleanQuery.Builder()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return q@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Collection<BooleanClause> clauses = bq.clauses()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "return false@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Query subQ = ((WrappedQuery)q).getWrappedQuery()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return negClause@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return q@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "q instanceof BoostQuery@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!clause.isProhibited()@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "return true@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return q@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "!(q instanceof BooleanQuery)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "return false@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "q instanceof WrappedQuery@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getAbs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Query absSubQ = getAbs(subQ)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return q@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "clauses.size() == 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "clauses.size() == 1@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "BooleanClause clause@@@29@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "!clause.isProhibited()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Query absSubQ = getAbs(subQ)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "BoostQuery bq = (BoostQuery)q@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Query negClause = clauses.iterator().next().getQuery()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Query q@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return q@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Query q@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
36->28 [style = bold, label=""];
17->14 [style = dotted, label="true"];
31->24 [style = dotted, label="false"];
26->22 [style = dotted, label="true"];
40->43 [style = dotted, label="true"];
22->30 [style = bold, label=""];
26->22 [style = bold, label=""];
47->49 [style = bold, label=""];
38->21 [style = dotted, label="true"];
42->44 [style = bold, label=""];
17->14 [style = bold, label=""];
0->6 [style = solid, label="q"];
24->11 [style = bold, label=""];
40->47 [style = bold, label=""];
0->1 [style = solid, label="q"];
0->2 [style = solid, label="q"];
41->42 [style = dotted, label="true"];
28->27 [style = dotted, label="true"];
0->17 [style = solid, label="q"];
0->26 [style = solid, label="q"];
17->16 [style = bold, label=""];
29->38 [style = solid, label="absSubQ"];
36->0 [style = dotted, label="true"];
44->48 [style = dotted, label="true"];
17->38 [style = dotted, label="true"];
29->21 [style = solid, label="absSubQ"];
23->12 [style = solid, label="absSubQ"];
31->4 [style = dotted, label="false"];
28->2 [style = dotted, label="true"];
23->3 [style = bold, label=""];
0->22 [style = solid, label="q"];
48->44 [style = bold, label=""];
21->25 [style = bold, label=""];
31->11 [style = dotted, label="true"];
34->8 [style = bold, label=""];
31->10 [style = dotted, label="true"];
32->26 [style = bold, label=""];
11->18 [style = bold, label=""];
35->5 [style = bold, label=""];
34->8 [style = dotted, label="true"];
43->47 [style = bold, label=""];
16->1 [style = dotted, label="true"];
28->43 [style = dashed, label="0"];
19->26 [style = bold, label=""];
33->30 [style = bold, label=""];
49->41 [style = bold, label=""];
2->27 [style = bold, label=""];
28->23 [style = dotted, label="true"];
30->9 [style = dotted, label="true"];
38->25 [style = bold, label=""];
29->38 [style = bold, label=""];
27->3 [style = solid, label="subQ"];
31->37 [style = dotted, label="false"];
46->40 [style = bold, label=""];
17->21 [style = dotted, label="true"];
44->45 [style = bold, label=""];
28->34 [style = dotted, label="true"];
21->6 [style = dotted, label="true"];
31->18 [style = dotted, label="false"];
13->10 [style = bold, label=""];
23->3 [style = solid, label="absSubQ"];
23->34 [style = solid, label="absSubQ"];
30->33 [style = bold, label=""];
16->35 [style = dotted, label="true"];
28->3 [style = dotted, label="true"];
9->31 [style = bold, label=""];
14->38 [style = solid, label="subQ"];
14->29 [style = solid, label="subQ"];
27->34 [style = solid, label="subQ"];
31->13 [style = bold, label=""];
31->24 [style = bold, label=""];
12->17 [style = bold, label=""];
30->9 [style = bold, label=""];
3->12 [style = bold, label=""];
13->10 [style = solid, label="negClause"];
0->9 [style = solid, label="q"];
15->0 [style = dotted, label="true"];
25->16 [style = bold, label=""];
0->28 [style = solid, label="q"];
29->21 [style = bold, label=""];
32->33 [style = bold, label=""];
0->35 [style = solid, label="q"];
5->19 [style = bold, label=""];
0->5 [style = solid, label="q"];
17->25 [style = dotted, label="true"];
19->32 [style = bold, label=""];
31->20 [style = dotted, label="false"];
31->7 [style = dotted, label="false"];
16->1 [style = bold, label=""];
0->8 [style = solid, label="q"];
15->28 [style = bold, label=""];
30->31 [style = bold, label=""];
3->8 [style = bold, label=""];
14->29 [style = bold, label=""];
39->47 [style = solid, label="q"];
14->21 [style = solid, label="subQ"];
0->30 [style = solid, label="q"];
28->17 [style = bold, label=""];
16->5 [style = bold, label=""];
17->29 [style = dotted, label="true"];
31->13 [style = dotted, label="true"];
40->43 [style = bold, label=""];
8->12 [style = bold, label=""];
28->12 [style = dotted, label="true"];
21->6 [style = bold, label=""];
0->21 [style = solid, label="q"];
27->23 [style = solid, label="subQ"];
9->30 [style = bold, label=""];
0->39 [style = dashed, label="0"];
34->12 [style = bold, label=""];
33->30 [style = dotted, label="true"];
26->30 [style = bold, label=""];
28->2 [style = bold, label=""];
24->4 [style = bold, label=""];
48->45 [style = bold, label=""];
44->48 [style = bold, label=""];
30->48 [style = dashed, label="0"];
46->39 [style = dotted, label="true"];
23->34 [style = bold, label=""];
38->21 [style = bold, label=""];
33->31 [style = bold, label=""];
32->26 [style = dotted, label="true"];
27->23 [style = bold, label=""];
26->42 [style = dashed, label="0"];
16->35 [style = bold, label=""];
4->11 [style = bold, label=""];
29->25 [style = solid, label="absSubQ"];
3->8 [style = dotted, label="true"];
26->33 [style = bold, label=""];
41->44 [style = bold, label=""];
6->25 [style = bold, label=""];
41->42 [style = bold, label=""];
}
