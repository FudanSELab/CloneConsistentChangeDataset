digraph {
5 [style = filled, label = "@SuppressWarnings(\"unchecked\") CheckedConsumer<byte((,IOException> chunkConsumer = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "mockSearches(\"_name\",0,29)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "databaseRegistry.retrieveDatabase(\"_name\",incorrectMd5,metadata,chunkConsumer,completedHandler,failureHandler)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ArgumentCaptor<Exception> exceptionCaptor = ArgumentCaptor.forClass()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "GeoIpTaskState.Metadata metadata = new GeoIpTaskState.Metadata(-1,0,9,incorrectMd5)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(exceptionCaptor.getAllValues().get(0).getMessage(),equalTo(\"expected md5 hash (different(, \" + \"but got md5 hash (7a39822e85d3eeb863657b7865597a7a(\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "verify(completedHandler,times(1)).run()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verify(client,times(10)).search(any())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "mockSearches(\"_name\",0,9)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "verify(completedHandler,times(0)).run()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String md5 = \"7a39822e85d3eeb863657b7865597a7a\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "databaseRegistry.retrieveDatabase(\"_name\",md5,metadata,chunkConsumer,completedHandler,failureHandler)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String md5 = mockSearches(\"_name\",0,9)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testRetrieveDatabase['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "GeoIpTaskState.Metadata metadata = new GeoIpTaskState.Metadata(-1,0,29,md5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testRetrieveDatabaseCorruption['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(failureHandler,times(1)).accept(exceptionCaptor.capture())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "@SuppressWarnings(\"unchecked\") CheckedRunnable<Exception> completedHandler = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "GeoIpTaskState.Metadata metadata = new GeoIpTaskState.Metadata(-1,0,9,md5)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testRetrieveDatabaseCorruption['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "verify(failureHandler,never()).accept(any())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(chunkConsumer,times(10)).accept(any())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(exceptionCaptor.getAllValues().size(),equalTo(1))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(exceptionCaptor.getAllValues().get(0).getMessage(),equalTo(\"expected md5 hash (different(, \" + \"but got md5 hash (\" + md5 + \"(\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "verify(client,times(30)).search(any())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "verify(chunkConsumer,times(30)).accept(any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "@SuppressWarnings(\"unchecked\") Consumer<Exception> failureHandler = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String md5 = \"different\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "String incorrectMd5 = \"different\"@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
2->19 [style = bold, label=""];
7->1 [style = bold, label=""];
9->11 [style = bold, label=""];
5->14 [style = solid, label="chunkConsumer"];
10->19 [style = dashed, label="0"];
8->15 [style = dashed, label="0"];
27->14 [style = solid, label="md5"];
8->7 [style = solid, label="md5"];
14->28 [style = bold, label=""];
1->21 [style = dashed, label="0"];
4->2 [style = bold, label=""];
12->14 [style = solid, label="completedHandler"];
17->16 [style = solid, label="incorrectMd5"];
2->10 [style = bold, label=""];
8->7 [style = bold, label=""];
17->18 [style = solid, label="incorrectMd5"];
16->18 [style = solid, label="metadata"];
26->21 [style = bold, label=""];
5->18 [style = solid, label="chunkConsumer"];
12->13 [style = bold, label=""];
21->5 [style = bold, label=""];
15->17 [style = bold, label=""];
23->24 [style = bold, label=""];
13->18 [style = solid, label="failureHandler"];
14->0 [style = bold, label=""];
22->27 [style = bold, label=""];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
19->9 [style = bold, label=""];
28->23 [style = bold, label=""];
24->25 [style = bold, label=""];
1->16 [style = dashed, label="0"];
13->14 [style = solid, label="failureHandler"];
6->8 [style = bold, label=""];
12->18 [style = solid, label="completedHandler"];
27->26 [style = solid, label="md5"];
16->5 [style = bold, label=""];
15->19 [style = solid, label="md5"];
8->27 [style = dashed, label="0"];
10->9 [style = bold, label=""];
14->18 [style = dashed, label="0"];
7->26 [style = dashed, label="0"];
26->14 [style = solid, label="metadata"];
20->15 [style = bold, label=""];
13->14 [style = bold, label=""];
7->14 [style = solid, label="metadata"];
18->0 [style = bold, label=""];
17->16 [style = bold, label=""];
13->18 [style = bold, label=""];
27->26 [style = bold, label=""];
8->14 [style = solid, label="md5"];
}
