digraph {
1 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(d1.equals(d2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TaskSeries s2 = u2.getSeries(\"Series\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "s1.add(new Task(\"Task 1\",new Date(0L),new Date(1L)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SlidingGanttCategoryDataset d1 = new SlidingGanttCategoryDataset(u1,0,5)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TaskSeriesCollection u1 = new TaskSeriesCollection()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SlidingGanttCategoryDataset d2 = (SlidingGanttCategoryDataset)d1.clone()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "u1.add(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "s1.add(new Task(\"Task 2\",new Date(10L),new Date(11L)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(d1,d2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(d1.equals(d2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(d1.equals(d2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "s1.add(new Task(\"Task 2\",new Date(10L),new Date(11L)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SlidingGanttCategoryDataset d2 = (SlidingGanttCategoryDataset)TestUtilities.serialised(d1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "s2.add(new Task(\"Task 2\",new Date(10L),new Date(11L)))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(d1 != d2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(d1.equals(d2))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TaskSeries s1 = new TaskSeries(\"Series\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TaskSeriesCollection u2 = (TaskSeriesCollection)d2.getUnderlyingDataset()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SlidingGanttCategoryDataset d2 = (SlidingGanttCategoryDataset)TestUtils.serialised(d1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->13 [style = bold, label=""];
9->22 [style = bold, label=""];
6->3 [style = bold, label=""];
16->19 [style = solid, label="d2"];
16->17 [style = solid, label="d2"];
0->9 [style = bold, label=""];
12->9 [style = solid, label="d2"];
20->17 [style = bold, label=""];
5->19 [style = solid, label="d1"];
2->19 [style = dashed, label="0"];
15->7 [style = bold, label=""];
17->6 [style = bold, label=""];
12->16 [style = dashed, label="0"];
19->20 [style = bold, label=""];
22->21 [style = bold, label=""];
12->2 [style = solid, label="d2"];
11->5 [style = solid, label="u1"];
5->12 [style = solid, label="d1"];
8->6 [style = bold, label=""];
5->14 [style = bold, label=""];
16->19 [style = bold, label=""];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
1->7 [style = bold, label=""];
5->2 [style = solid, label="d1"];
3->0 [style = bold, label=""];
5->16 [style = bold, label=""];
16->21 [style = solid, label="d2"];
12->8 [style = solid, label="d2"];
12->2 [style = bold, label=""];
5->14 [style = solid, label="d1"];
10->5 [style = bold, label=""];
12->14 [style = dashed, label="0"];
5->12 [style = bold, label=""];
11->10 [style = bold, label=""];
16->3 [style = solid, label="d2"];
14->2 [style = solid, label="d2"];
4->8 [style = bold, label=""];
14->9 [style = solid, label="d2"];
7->10 [style = solid, label="s1"];
14->2 [style = bold, label=""];
18->7 [style = bold, label=""];
14->8 [style = solid, label="d2"];
}
