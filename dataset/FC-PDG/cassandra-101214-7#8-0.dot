digraph {
23 [style = filled, label = "testDifferentSizeBuffersOnOneChunk['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testDifferentSizeBuffersOnOneChunk['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertEquals(null,BufferPool.unsafeCurrentChunk())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int sum = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(buffer)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(buffer.capacity() >= sizes(i()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,chunk.free())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testChunkExhausted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "BufferPool.put(buffer)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(null,BufferPool.unsafeCurrentChunk())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "BufferPool.put(buffers.remove(0))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertTrue(sum <= BufferPool.GlobalPool.MACRO_CHUNK_SIZE)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "sum += bufferPool.unsafeCurrentChunk().roundUp(buffer.capacity())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Arrays.fill(sizes,size)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "buffers.add(buffer)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "bufferPool.put(buffer)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(0,chunk.free())@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(null,bufferPool.unsafeCurrentChunk())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "BufferPool.Chunk chunk = bufferPool.unsafeCurrentChunk()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "sum += BufferPool.unsafeCurrentChunk().roundUp(buffer.capacity())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "rnd.setSeed(298347529L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ByteBuffer buffer = bufferPool.get(sizes(i(,BufferType.OFF_HEAP)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "final int size = BufferPool.NORMAL_CHUNK_SIZE / 64@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertNotNull(chunk)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int(( sizes = new int((((@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Random rnd = new Random()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "bufferPool.put(buffers.remove(0))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "sum += buffer.capacity()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "i < sizes.length@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < sizes.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<ByteBuffer> buffers = new ArrayList<>(sizes.length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "buffers.size() > 1@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "BufferPool.put(buffers.get(i))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int index = rnd.nextInt(buffers.size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ByteBuffer buffer = buffers.remove(index)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BufferPool.Chunk chunk = BufferPool.unsafeCurrentChunk()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ByteBuffer buffer = BufferPool.get(sizes(i(,BufferType.OFF_HEAP)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int(( sizes = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@33e70b@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->9 [style = solid, label="i"];
40->39 [style = dotted, label="true"];
0->5 [style = dotted, label="true"];
0->13 [style = bold, label=""];
41->8 [style = bold, label=""];
1->20 [style = bold, label=""];
5->15 [style = bold, label=""];
2->27 [style = solid, label="i"];
5->28 [style = bold, label=""];
5->38 [style = bold, label=""];
30->29 [style = bold, label=""];
17->22 [style = solid, label="i"];
15->38 [style = dashed, label="0"];
15->17 [style = bold, label=""];
27->18 [style = solid, label="buffer"];
6->9 [style = solid, label="sizes"];
37->31 [style = bold, label=""];
11->39 [style = dashed, label="0"];
9->5 [style = bold, label=""];
32->39 [style = solid, label="i"];
35->39 [style = solid, label="i"];
0->38 [style = dotted, label="true"];
4->3 [style = bold, label=""];
26->14 [style = solid, label="chunk"];
15->28 [style = dashed, label="0"];
38->13 [style = solid, label="sum"];
34->33 [style = bold, label=""];
26->14 [style = bold, label=""];
14->10 [style = bold, label=""];
11->12 [style = bold, label=""];
40->34 [style = bold, label=""];
15->13 [style = solid, label="sum"];
12->25 [style = solid, label="buffer"];
40->35 [style = dotted, label="true"];
35->40 [style = bold, label=""];
29->20 [style = bold, label=""];
22->18 [style = bold, label=""];
28->13 [style = solid, label="sum"];
7->2 [style = bold, label=""];
39->35 [style = bold, label=""];
18->9 [style = bold, label=""];
31->41 [style = bold, label=""];
36->37 [style = bold, label=""];
19->25 [style = dashed, label="0"];
2->17 [style = solid, label="i"];
38->17 [style = bold, label=""];
31->9 [style = solid, label="sizes"];
27->18 [style = bold, label=""];
3->30 [style = dashed, label="0"];
17->0 [style = solid, label="i"];
3->1 [style = bold, label=""];
27->5 [style = solid, label="buffer"];
0->18 [style = dotted, label="true"];
32->40 [style = solid, label="i"];
4->11 [style = dotted, label="true"];
32->35 [style = solid, label="i"];
22->27 [style = dashed, label="0"];
2->22 [style = solid, label="i"];
6->22 [style = solid, label="sizes"];
2->0 [style = bold, label=""];
17->0 [style = bold, label=""];
40->39 [style = bold, label=""];
10->16 [style = bold, label=""];
31->22 [style = solid, label="sizes"];
13->26 [style = bold, label=""];
21->26 [style = dashed, label="0"];
23->6 [style = bold, label=""];
32->40 [style = bold, label=""];
2->0 [style = solid, label="i"];
28->17 [style = bold, label=""];
8->13 [style = solid, label="sum"];
16->4 [style = bold, label=""];
4->12 [style = dotted, label="true"];
14->32 [style = bold, label=""];
0->9 [style = dotted, label="true"];
17->27 [style = solid, label="i"];
4->19 [style = dotted, label="true"];
21->14 [style = bold, label=""];
22->18 [style = solid, label="buffer"];
0->28 [style = dotted, label="true"];
0->27 [style = bold, label=""];
21->14 [style = solid, label="chunk"];
0->15 [style = dotted, label="true"];
12->19 [style = solid, label="buffer"];
37->41 [style = solid, label="size"];
1->29 [style = dashed, label="0"];
25->4 [style = bold, label=""];
31->41 [style = solid, label="sizes"];
4->25 [style = dotted, label="true"];
17->9 [style = solid, label="i"];
6->27 [style = solid, label="sizes"];
8->7 [style = bold, label=""];
0->22 [style = dotted, label="true"];
35->40 [style = solid, label="i"];
4->30 [style = bold, label=""];
22->5 [style = solid, label="buffer"];
12->25 [style = bold, label=""];
0->22 [style = bold, label=""];
11->12 [style = solid, label="index"];
6->8 [style = bold, label=""];
0->17 [style = dotted, label="true"];
19->4 [style = bold, label=""];
0->27 [style = dotted, label="true"];
12->19 [style = bold, label=""];
4->11 [style = bold, label=""];
13->21 [style = bold, label=""];
24->6 [style = bold, label=""];
}
