digraph {
4 [style = filled, label = "PostgreSQLBinaryStatementRegistry.getInstance().register(1,statementId,sql,mock(),Collections.emptyList())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(binaryStatement.getSql(),is(sql))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(binaryStatement)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertRegister['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "PostgreSQLBinaryStatementRegistry.getInstance().register(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "PostgreSQLBinaryStatementRegistry.getInstance().unregister(1,statementId)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String sql = \"select * from t_order\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(binaryStatement.getColumnTypes().size(),is(0))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertTrue(binaryStatement.getColumnTypes().isEmpty())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertRegister['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertUnregister['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "binaryStatement = PostgreSQLBinaryStatementRegistry.getInstance().get(1,\"stat-no-exists\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "PostgreSQLBinaryStatement binaryStatement = PostgreSQLBinaryStatementRegistry.getInstance().get(1,statementId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(binaryStatement.getSqlStatement(),instanceOf())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String statementId = \"stat-id\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
1->5 [style = solid, label="statementId"];
0->9 [style = bold, label=""];
7->1 [style = bold, label=""];
2->6 [style = bold, label=""];
2->4 [style = solid, label="sql"];
11->12 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
0->10 [style = dashed, label="0"];
14->1 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
5->10 [style = solid, label="binaryStatement"];
3->9 [style = dashed, label="0"];
1->4 [style = solid, label="statementId"];
1->2 [style = bold, label=""];
2->0 [style = solid, label="sql"];
4->5 [style = bold, label=""];
1->13 [style = solid, label="statementId"];
}
