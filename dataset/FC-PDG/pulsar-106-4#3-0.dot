digraph {
23 [style = filled, label = "byte(( content = new byte((((@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testPeekBrokerEntryMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertEquals(data.length(),dataWithBrokerEntryMetadata.readableBytes())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ByteBuf dataWithBrokerEntryMetadata = Commands.addBrokerEntryMetadata(byteBuf,getBrokerEntryMetadataInterceptors(),MOCK_BATCH_SIZE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "dataWithBrokerEntryMetadata.readBytes(content)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(new String(content,StandardCharsets.UTF_8),data)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(data.length(),dataWithBrokerEntryMetadata.readableBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(brokerMetadata.getBrokerTimestamp() <= System.currentTimeMillis())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(brokerMetadata1.getIndex(),MOCK_BATCH_SIZE - 1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(new String(content,StandardCharsets.UTF_8),data)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testPeekBrokerEntryMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "BrokerEntryMetadata brokerMetadata1 = Commands.parseBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ByteBuf byteBuf = PulsarByteBufAllocator.DEFAULT.buffer(data.length(),data.length())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int bytesBeforePeek = dataWithBrokerEntryMetadata.readableBytes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(brokerMetadata.getIndex(),MOCK_BATCH_SIZE - 1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "dataWithBrokerEntryMetadata.readBytes(content)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ByteBuf dataWithBrokerEntryMetadata = Commands.addBrokerEntryMetadata(byteBuf,getBrokerEntryMetadataInterceptors(),11)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(bytesBeforePeek,bytesAfterPeek)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testSkipBrokerEntryMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int bytesAfterPeek = dataWithBrokerEntryMetadata.readableBytes()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BrokerEntryMetadata brokerMetadata = Commands.peekBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Commands.skipBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PulsarApi.BrokerEntryMetadata brokerMetadata = Commands.peekBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "String data = \"test-message\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "byte(( content = new byte((((@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(brokerMetadata1.getBrokerTimestamp() <= System.currentTimeMillis())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "byteBuf.writeBytes(data.getBytes(StandardCharsets.UTF_8))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PulsarApi.BrokerEntryMetadata brokerMetadata1 = Commands.parseBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "int MOCK_BATCH_SIZE = 10@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
22->25 [style = solid, label="data"];
13->12 [style = solid, label="data"];
0->16 [style = bold, label=""];
15->10 [style = bold, label=""];
16->18 [style = bold, label=""];
8->6 [style = dashed, label="0"];
18->17 [style = solid, label="content"];
3->1 [style = bold, label=""];
9->2 [style = bold, label=""];
10->19 [style = dashed, label="0"];
4->15 [style = solid, label="bytesAfterPeek"];
27->28 [style = bold, label=""];
26->25 [style = bold, label=""];
11->4 [style = bold, label=""];
4->15 [style = bold, label=""];
8->3 [style = bold, label=""];
3->27 [style = dashed, label="0"];
23->26 [style = bold, label=""];
18->17 [style = bold, label=""];
23->26 [style = solid, label="content"];
7->0 [style = bold, label=""];
1->21 [style = dashed, label="0"];
8->21 [style = solid, label="dataWithBrokerEntryMetadata"];
15->19 [style = bold, label=""];
2->11 [style = solid, label="MOCK_BATCH_SIZE"];
24->22 [style = bold, label=""];
8->10 [style = solid, label="dataWithBrokerEntryMetadata"];
10->7 [style = bold, label=""];
6->27 [style = solid, label="dataWithBrokerEntryMetadata"];
23->25 [style = solid, label="content"];
2->0 [style = solid, label="MOCK_BATCH_SIZE"];
8->19 [style = solid, label="dataWithBrokerEntryMetadata"];
2->13 [style = bold, label=""];
20->2 [style = bold, label=""];
18->12 [style = solid, label="content"];
21->5 [style = bold, label=""];
6->27 [style = bold, label=""];
13->6 [style = solid, label="byteBuf"];
8->1 [style = solid, label="dataWithBrokerEntryMetadata"];
17->12 [style = bold, label=""];
14->8 [style = solid, label="byteBuf"];
28->23 [style = bold, label=""];
6->8 [style = bold, label=""];
3->15 [style = solid, label="bytesBeforePeek"];
3->21 [style = bold, label=""];
5->11 [style = bold, label=""];
13->14 [style = bold, label=""];
19->7 [style = bold, label=""];
14->6 [style = bold, label=""];
22->13 [style = bold, label=""];
2->8 [style = solid, label="MOCK_BATCH_SIZE"];
}
