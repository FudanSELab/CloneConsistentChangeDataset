digraph {
13 [style = filled, label = "Row results = KolmogorovSmirnovTest.test(dataset,\"sample\",\"norm\",0.0,1.0).head()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "double pThreshold = 0.05@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stdNormalDist.reseedRandomGenerator(seed)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assert(pValue1 > pThreshold)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testKSTestCDF['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "double pThreshold = 0.05@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "double pValue1 = results.getDouble(0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testKSTestNamedDistribution['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testKSTestCDF['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Long seed = 10L@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Row results = KolmogorovSmirnovTest.test(dataset,\"sample\",stdNormalCDF).head()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "NormalDistribution stdNormalDist = new NormalDistribution(0,1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assert(pValue1 > pThreshold)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Function<Double,Double> stdNormalCDF = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(pValue1 > pThreshold)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "double pValue1 = results.getDouble(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
7->5 [style = solid, label="pValue1"];
4->2 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
11->15 [style = bold, label=""];
8->7 [style = bold, label=""];
8->13 [style = dashed, label="0"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
0->5 [style = solid, label="pThreshold"];
7->9 [style = solid, label="pValue1"];
0->9 [style = solid, label="pThreshold"];
14->15 [style = solid, label="pThreshold"];
12->14 [style = bold, label=""];
0->8 [style = bold, label=""];
14->13 [style = bold, label=""];
3->4 [style = solid, label="seed"];
10->1 [style = bold, label=""];
11->15 [style = solid, label="pValue1"];
}
