digraph {
15 [style = filled, label = "assertEquals(msg,serverChannel.readInbound())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testClientToServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testServerToClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Message msg@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "EmbeddedChannel serverChannel = new EmbeddedChannel(NettyUtils.createFrameDecoder(),new MessageDecoder())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Message msg@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "clientChannel.writeOutbound(msg)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "serverChannel.writeInbound(clientChannel.readOutbound())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "!clientChannel.outboundMessages().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "!serverChannel.outboundMessages().isEmpty()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testServerToClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "clientChannel.writeInbound(serverChannel.readOutbound())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EmbeddedChannel clientChannel = new EmbeddedChannel(NettyUtils.createFrameDecoder(),MessageDecoder.INSTANCE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(1,clientChannel.inboundMessages().size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EmbeddedChannel clientChannel = new EmbeddedChannel(new FileRegionEncoder(),new MessageEncoder())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "EmbeddedChannel clientChannel = new EmbeddedChannel(NettyUtils.createFrameDecoder(),new MessageDecoder())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,serverChannel.inboundMessages().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EmbeddedChannel serverChannel = new EmbeddedChannel(new FileRegionEncoder(),MessageEncoder.INSTANCE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "serverChannel.writeOutbound(msg)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(msg,clientChannel.readInbound())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EmbeddedChannel serverChannel = new EmbeddedChannel(new FileRegionEncoder(),new MessageEncoder())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
20->17 [style = bold, label=""];
3->1 [style = bold, label=""];
6->20 [style = dashed, label="0"];
7->17 [style = dashed, label="0"];
20->17 [style = dotted, label="true"];
19->20 [style = bold, label=""];
11->6 [style = bold, label=""];
0->4 [style = dotted, label="true"];
8->15 [style = dashed, label="0"];
18->15 [style = bold, label=""];
13->16 [style = solid, label="msg"];
9->10 [style = bold, label=""];
16->19 [style = bold, label=""];
4->8 [style = solid, label="msg"];
1->11 [style = bold, label=""];
6->2 [style = bold, label=""];
20->18 [style = bold, label=""];
12->13 [style = dotted, label="true"];
5->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
7->6 [style = bold, label=""];
12->14 [style = bold, label=""];
2->18 [style = dashed, label="0"];
6->7 [style = dotted, label="true"];
13->15 [style = solid, label="msg"];
9->4 [style = dotted, label="true"];
4->1 [style = solid, label="msg"];
3->10 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->13 [style = dashed, label="0"];
10->1 [style = bold, label=""];
5->19 [style = dashed, label="0"];
2->8 [style = bold, label=""];
17->20 [style = bold, label=""];
}
